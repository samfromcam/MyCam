
firmware.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00007284  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00407284  00407284  00017284  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009c0  20000000  0040728c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000508  200009c0  00407c4c  000209c0  2**2
                  ALLOC
  4 .stack        00003000  20000ec8  00408154  000209c0  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  000209c0  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000209ea  2**0
                  CONTENTS, READONLY
  7 .debug_info   00017074  00000000  00000000  00020a43  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003398  00000000  00000000  00037ab7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000051fd  00000000  00000000  0003ae4f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000aa0  00000000  00000000  0004004c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000a40  00000000  00000000  00040aec  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000151c3  00000000  00000000  0004152c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000e1e7  00000000  00000000  000566ef  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00051d11  00000000  00000000  000648d6  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000023e8  00000000  00000000  000b65e8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	c8 3e 00 20 a5 10 40 00 a3 10 40 00 a3 10 40 00     .>. ..@...@...@.
  400010:	a3 10 40 00 a3 10 40 00 a3 10 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	a3 10 40 00 a3 10 40 00 00 00 00 00 a3 10 40 00     ..@...@.......@.
  40003c:	a3 10 40 00 a3 10 40 00 a3 10 40 00 a3 10 40 00     ..@...@...@...@.
  40004c:	a3 10 40 00 a3 10 40 00 a3 10 40 00 a3 10 40 00     ..@...@...@...@.
  40005c:	00 00 00 00 a3 10 40 00 a3 10 40 00 00 00 00 00     ......@...@.....
  40006c:	ed 04 40 00 01 05 40 00 00 00 00 00 a3 10 40 00     ..@...@.......@.
  40007c:	a3 10 40 00 00 00 00 00 00 00 00 00 a3 10 40 00     ..@...........@.
  40008c:	a3 10 40 00 a3 10 40 00 a3 10 40 00 a3 10 40 00     ..@...@...@...@.
  40009c:	85 0d 40 00 a3 10 40 00 a3 10 40 00 00 00 00 00     ..@...@...@.....
	...
  4000b4:	a3 10 40 00 a3 10 40 00 a3 10 40 00 a3 10 40 00     ..@...@...@...@.
  4000c4:	a3 10 40 00 a3 10 40 00                             ..@...@.

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	200009c0 	.word	0x200009c0
  4000e8:	00000000 	.word	0x00000000
  4000ec:	0040728c 	.word	0x0040728c

004000f0 <frame_dummy>:
  4000f0:	4b0c      	ldr	r3, [pc, #48]	; (400124 <frame_dummy+0x34>)
  4000f2:	b143      	cbz	r3, 400106 <frame_dummy+0x16>
  4000f4:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x38>)
  4000f6:	490d      	ldr	r1, [pc, #52]	; (40012c <frame_dummy+0x3c>)
  4000f8:	b510      	push	{r4, lr}
  4000fa:	f3af 8000 	nop.w
  4000fe:	480c      	ldr	r0, [pc, #48]	; (400130 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b923      	cbnz	r3, 40010e <frame_dummy+0x1e>
  400104:	bd10      	pop	{r4, pc}
  400106:	480a      	ldr	r0, [pc, #40]	; (400130 <frame_dummy+0x40>)
  400108:	6803      	ldr	r3, [r0, #0]
  40010a:	b933      	cbnz	r3, 40011a <frame_dummy+0x2a>
  40010c:	4770      	bx	lr
  40010e:	4b09      	ldr	r3, [pc, #36]	; (400134 <frame_dummy+0x44>)
  400110:	2b00      	cmp	r3, #0
  400112:	d0f7      	beq.n	400104 <frame_dummy+0x14>
  400114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400118:	4718      	bx	r3
  40011a:	4b06      	ldr	r3, [pc, #24]	; (400134 <frame_dummy+0x44>)
  40011c:	2b00      	cmp	r3, #0
  40011e:	d0f5      	beq.n	40010c <frame_dummy+0x1c>
  400120:	4718      	bx	r3
  400122:	bf00      	nop
  400124:	00000000 	.word	0x00000000
  400128:	0040728c 	.word	0x0040728c
  40012c:	200009c4 	.word	0x200009c4
  400130:	0040728c 	.word	0x0040728c
  400134:	00000000 	.word	0x00000000

00400138 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400138:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40013a:	480e      	ldr	r0, [pc, #56]	; (400174 <sysclk_init+0x3c>)
  40013c:	4b0e      	ldr	r3, [pc, #56]	; (400178 <sysclk_init+0x40>)
  40013e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400140:	213e      	movs	r1, #62	; 0x3e
  400142:	2000      	movs	r0, #0
  400144:	4b0d      	ldr	r3, [pc, #52]	; (40017c <sysclk_init+0x44>)
  400146:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400148:	4c0d      	ldr	r4, [pc, #52]	; (400180 <sysclk_init+0x48>)
  40014a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  40014c:	2800      	cmp	r0, #0
  40014e:	d0fc      	beq.n	40014a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400150:	4b0c      	ldr	r3, [pc, #48]	; (400184 <sysclk_init+0x4c>)
  400152:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400154:	4a0c      	ldr	r2, [pc, #48]	; (400188 <sysclk_init+0x50>)
  400156:	4b0d      	ldr	r3, [pc, #52]	; (40018c <sysclk_init+0x54>)
  400158:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  40015a:	4c0d      	ldr	r4, [pc, #52]	; (400190 <sysclk_init+0x58>)
  40015c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  40015e:	2800      	cmp	r0, #0
  400160:	d0fc      	beq.n	40015c <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400162:	2010      	movs	r0, #16
  400164:	4b0b      	ldr	r3, [pc, #44]	; (400194 <sysclk_init+0x5c>)
  400166:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400168:	4b0b      	ldr	r3, [pc, #44]	; (400198 <sysclk_init+0x60>)
  40016a:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  40016c:	4801      	ldr	r0, [pc, #4]	; (400174 <sysclk_init+0x3c>)
  40016e:	4b02      	ldr	r3, [pc, #8]	; (400178 <sysclk_init+0x40>)
  400170:	4798      	blx	r3
  400172:	bd10      	pop	{r4, pc}
  400174:	07270e00 	.word	0x07270e00
  400178:	00401261 	.word	0x00401261
  40017c:	00400579 	.word	0x00400579
  400180:	004005cd 	.word	0x004005cd
  400184:	004005dd 	.word	0x004005dd
  400188:	20133f01 	.word	0x20133f01
  40018c:	400e0400 	.word	0x400e0400
  400190:	004005ed 	.word	0x004005ed
  400194:	00400515 	.word	0x00400515
  400198:	00401151 	.word	0x00401151

0040019c <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  40019c:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  40019e:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  4001a2:	d039      	beq.n	400218 <pio_set_peripheral+0x7c>
  4001a4:	d813      	bhi.n	4001ce <pio_set_peripheral+0x32>
  4001a6:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  4001aa:	d025      	beq.n	4001f8 <pio_set_peripheral+0x5c>
  4001ac:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  4001b0:	d10a      	bne.n	4001c8 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4001b2:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4001b4:	4313      	orrs	r3, r2
  4001b6:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4001b8:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4001ba:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4001bc:	400b      	ands	r3, r1
  4001be:	ea23 0302 	bic.w	r3, r3, r2
  4001c2:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4001c4:	6042      	str	r2, [r0, #4]
  4001c6:	4770      	bx	lr
	switch (ul_type) {
  4001c8:	2900      	cmp	r1, #0
  4001ca:	d1fb      	bne.n	4001c4 <pio_set_peripheral+0x28>
  4001cc:	4770      	bx	lr
  4001ce:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4001d2:	d020      	beq.n	400216 <pio_set_peripheral+0x7a>
  4001d4:	d809      	bhi.n	4001ea <pio_set_peripheral+0x4e>
  4001d6:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4001da:	d1f3      	bne.n	4001c4 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  4001dc:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4001de:	4313      	orrs	r3, r2
  4001e0:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  4001e2:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4001e4:	4313      	orrs	r3, r2
  4001e6:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4001e8:	e7ec      	b.n	4001c4 <pio_set_peripheral+0x28>
	switch (ul_type) {
  4001ea:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  4001ee:	d012      	beq.n	400216 <pio_set_peripheral+0x7a>
  4001f0:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  4001f4:	d00f      	beq.n	400216 <pio_set_peripheral+0x7a>
  4001f6:	e7e5      	b.n	4001c4 <pio_set_peripheral+0x28>
{
  4001f8:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  4001fa:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4001fc:	6f04      	ldr	r4, [r0, #112]	; 0x70
  4001fe:	43d3      	mvns	r3, r2
  400200:	4021      	ands	r1, r4
  400202:	461c      	mov	r4, r3
  400204:	4019      	ands	r1, r3
  400206:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400208:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  40020a:	6f41      	ldr	r1, [r0, #116]	; 0x74
  40020c:	400b      	ands	r3, r1
  40020e:	4023      	ands	r3, r4
  400210:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400212:	6042      	str	r2, [r0, #4]
}
  400214:	bc10      	pop	{r4}
  400216:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400218:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  40021a:	6f01      	ldr	r1, [r0, #112]	; 0x70
  40021c:	400b      	ands	r3, r1
  40021e:	ea23 0302 	bic.w	r3, r3, r2
  400222:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400224:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400226:	4313      	orrs	r3, r2
  400228:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  40022a:	e7cb      	b.n	4001c4 <pio_set_peripheral+0x28>

0040022c <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  40022c:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  40022e:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  400232:	bf14      	ite	ne
  400234:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400236:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400238:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  40023c:	bf14      	ite	ne
  40023e:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
  400240:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
  400242:	f012 0f02 	tst.w	r2, #2
  400246:	d107      	bne.n	400258 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400248:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  40024c:	bf18      	it	ne
  40024e:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
  400252:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400254:	6001      	str	r1, [r0, #0]
  400256:	4770      	bx	lr
		p_pio->PIO_IFSCDR = ul_mask;
  400258:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  40025c:	e7f9      	b.n	400252 <pio_set_input+0x26>

0040025e <pio_set_output>:
{
  40025e:	b410      	push	{r4}
  400260:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400262:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400264:	b944      	cbnz	r4, 400278 <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
  400266:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400268:	b143      	cbz	r3, 40027c <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
  40026a:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  40026c:	b942      	cbnz	r2, 400280 <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
  40026e:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400270:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400272:	6001      	str	r1, [r0, #0]
}
  400274:	bc10      	pop	{r4}
  400276:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400278:	6641      	str	r1, [r0, #100]	; 0x64
  40027a:	e7f5      	b.n	400268 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  40027c:	6541      	str	r1, [r0, #84]	; 0x54
  40027e:	e7f5      	b.n	40026c <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400280:	6301      	str	r1, [r0, #48]	; 0x30
  400282:	e7f5      	b.n	400270 <pio_set_output+0x12>

00400284 <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  400284:	f012 0f10 	tst.w	r2, #16
  400288:	d010      	beq.n	4002ac <pio_configure_interrupt+0x28>
		p_pio->PIO_AIMER = ul_mask;
  40028a:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  40028e:	f012 0f20 	tst.w	r2, #32
			p_pio->PIO_REHLSR = ul_mask;
  400292:	bf14      	ite	ne
  400294:	f8c0 10d4 	strne.w	r1, [r0, #212]	; 0xd4
			p_pio->PIO_FELLSR = ul_mask;
  400298:	f8c0 10d0 	streq.w	r1, [r0, #208]	; 0xd0
		if (ul_attr & PIO_IT_EDGE) {
  40029c:	f012 0f40 	tst.w	r2, #64	; 0x40
			p_pio->PIO_ESR = ul_mask;
  4002a0:	bf14      	ite	ne
  4002a2:	f8c0 10c0 	strne.w	r1, [r0, #192]	; 0xc0
			p_pio->PIO_LSR = ul_mask;
  4002a6:	f8c0 10c4 	streq.w	r1, [r0, #196]	; 0xc4
  4002aa:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  4002ac:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  4002b0:	4770      	bx	lr

004002b2 <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  4002b2:	6401      	str	r1, [r0, #64]	; 0x40
  4002b4:	4770      	bx	lr

004002b6 <pio_disable_interrupt>:
	p_pio->PIO_IDR = ul_mask;
  4002b6:	6441      	str	r1, [r0, #68]	; 0x44
  4002b8:	4770      	bx	lr

004002ba <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  4002ba:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  4002bc:	4770      	bx	lr

004002be <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  4002be:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  4002c0:	4770      	bx	lr
	...

004002c4 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
  4002c4:	b570      	push	{r4, r5, r6, lr}
  4002c6:	b082      	sub	sp, #8
  4002c8:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4002ca:	0943      	lsrs	r3, r0, #5
  4002cc:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4002d0:	f203 7307 	addw	r3, r3, #1799	; 0x707
  4002d4:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
  4002d6:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  4002da:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4002de:	d053      	beq.n	400388 <pio_configure_pin+0xc4>
  4002e0:	d80a      	bhi.n	4002f8 <pio_configure_pin+0x34>
  4002e2:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4002e6:	d02d      	beq.n	400344 <pio_configure_pin+0x80>
  4002e8:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  4002ec:	d03b      	beq.n	400366 <pio_configure_pin+0xa2>
  4002ee:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  4002f2:	d015      	beq.n	400320 <pio_configure_pin+0x5c>
		return 0;
  4002f4:	2000      	movs	r0, #0
  4002f6:	e023      	b.n	400340 <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
  4002f8:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  4002fc:	d055      	beq.n	4003aa <pio_configure_pin+0xe6>
  4002fe:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  400302:	d052      	beq.n	4003aa <pio_configure_pin+0xe6>
  400304:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400308:	d1f4      	bne.n	4002f4 <pio_configure_pin+0x30>
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  40030a:	f000 011f 	and.w	r1, r0, #31
  40030e:	2601      	movs	r6, #1
  400310:	462a      	mov	r2, r5
  400312:	fa06 f101 	lsl.w	r1, r6, r1
  400316:	4620      	mov	r0, r4
  400318:	4b2f      	ldr	r3, [pc, #188]	; (4003d8 <pio_configure_pin+0x114>)
  40031a:	4798      	blx	r3
	return 1;
  40031c:	4630      	mov	r0, r6
		break;
  40031e:	e00f      	b.n	400340 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  400320:	f000 001f 	and.w	r0, r0, #31
  400324:	2601      	movs	r6, #1
  400326:	4086      	lsls	r6, r0
  400328:	4632      	mov	r2, r6
  40032a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40032e:	4620      	mov	r0, r4
  400330:	4b2a      	ldr	r3, [pc, #168]	; (4003dc <pio_configure_pin+0x118>)
  400332:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400334:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400338:	bf14      	ite	ne
  40033a:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  40033c:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  40033e:	2001      	movs	r0, #1
}
  400340:	b002      	add	sp, #8
  400342:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  400344:	f000 001f 	and.w	r0, r0, #31
  400348:	2601      	movs	r6, #1
  40034a:	4086      	lsls	r6, r0
  40034c:	4632      	mov	r2, r6
  40034e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400352:	4620      	mov	r0, r4
  400354:	4b21      	ldr	r3, [pc, #132]	; (4003dc <pio_configure_pin+0x118>)
  400356:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400358:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  40035c:	bf14      	ite	ne
  40035e:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400360:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400362:	2001      	movs	r0, #1
  400364:	e7ec      	b.n	400340 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  400366:	f000 001f 	and.w	r0, r0, #31
  40036a:	2601      	movs	r6, #1
  40036c:	4086      	lsls	r6, r0
  40036e:	4632      	mov	r2, r6
  400370:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  400374:	4620      	mov	r0, r4
  400376:	4b19      	ldr	r3, [pc, #100]	; (4003dc <pio_configure_pin+0x118>)
  400378:	4798      	blx	r3
	if (ul_pull_up_enable) {
  40037a:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  40037e:	bf14      	ite	ne
  400380:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400382:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400384:	2001      	movs	r0, #1
  400386:	e7db      	b.n	400340 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  400388:	f000 001f 	and.w	r0, r0, #31
  40038c:	2601      	movs	r6, #1
  40038e:	4086      	lsls	r6, r0
  400390:	4632      	mov	r2, r6
  400392:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400396:	4620      	mov	r0, r4
  400398:	4b10      	ldr	r3, [pc, #64]	; (4003dc <pio_configure_pin+0x118>)
  40039a:	4798      	blx	r3
	if (ul_pull_up_enable) {
  40039c:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  4003a0:	bf14      	ite	ne
  4003a2:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  4003a4:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  4003a6:	2001      	movs	r0, #1
  4003a8:	e7ca      	b.n	400340 <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  4003aa:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4003ae:	f000 011f 	and.w	r1, r0, #31
  4003b2:	2601      	movs	r6, #1
  4003b4:	ea05 0306 	and.w	r3, r5, r6
  4003b8:	9300      	str	r3, [sp, #0]
  4003ba:	f3c5 0380 	ubfx	r3, r5, #2, #1
  4003be:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  4003c2:	bf14      	ite	ne
  4003c4:	2200      	movne	r2, #0
  4003c6:	2201      	moveq	r2, #1
  4003c8:	fa06 f101 	lsl.w	r1, r6, r1
  4003cc:	4620      	mov	r0, r4
  4003ce:	4c04      	ldr	r4, [pc, #16]	; (4003e0 <pio_configure_pin+0x11c>)
  4003d0:	47a0      	blx	r4
	return 1;
  4003d2:	4630      	mov	r0, r6
		break;
  4003d4:	e7b4      	b.n	400340 <pio_configure_pin+0x7c>
  4003d6:	bf00      	nop
  4003d8:	0040022d 	.word	0x0040022d
  4003dc:	0040019d 	.word	0x0040019d
  4003e0:	0040025f 	.word	0x0040025f

004003e4 <pio_capture_enable>:
 *
 * \param p_pio Pointer to a PIO instance.
 */
void pio_capture_enable(Pio *p_pio)
{
	p_pio->PIO_PCMR |= PIO_PCMR_PCEN;
  4003e4:	f8d0 3150 	ldr.w	r3, [r0, #336]	; 0x150
  4003e8:	f043 0301 	orr.w	r3, r3, #1
  4003ec:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
	pio_capture_enable_flag = true;
  4003f0:	2201      	movs	r2, #1
  4003f2:	4b01      	ldr	r3, [pc, #4]	; (4003f8 <pio_capture_enable+0x14>)
  4003f4:	601a      	str	r2, [r3, #0]
  4003f6:	4770      	bx	lr
  4003f8:	20000aa8 	.word	0x20000aa8

004003fc <pio_capture_disable>:
 *
 * \param p_pio Pointer to a PIO instance.
 */
void pio_capture_disable(Pio *p_pio)
{
	p_pio->PIO_PCMR &= (~PIO_PCMR_PCEN);
  4003fc:	f8d0 3150 	ldr.w	r3, [r0, #336]	; 0x150
  400400:	f023 0301 	bic.w	r3, r3, #1
  400404:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
	pio_capture_enable_flag = false;
  400408:	2200      	movs	r2, #0
  40040a:	4b01      	ldr	r3, [pc, #4]	; (400410 <pio_capture_disable+0x14>)
  40040c:	601a      	str	r2, [r3, #0]
  40040e:	4770      	bx	lr
  400410:	20000aa8 	.word	0x20000aa8

00400414 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400414:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400418:	4681      	mov	r9, r0
  40041a:	460f      	mov	r7, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  40041c:	4b12      	ldr	r3, [pc, #72]	; (400468 <pio_handler_process+0x54>)
  40041e:	4798      	blx	r3
  400420:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400422:	4648      	mov	r0, r9
  400424:	4b11      	ldr	r3, [pc, #68]	; (40046c <pio_handler_process+0x58>)
  400426:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400428:	4005      	ands	r5, r0
  40042a:	d013      	beq.n	400454 <pio_handler_process+0x40>
  40042c:	4c10      	ldr	r4, [pc, #64]	; (400470 <pio_handler_process+0x5c>)
  40042e:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400432:	e003      	b.n	40043c <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400434:	42b4      	cmp	r4, r6
  400436:	d00d      	beq.n	400454 <pio_handler_process+0x40>
  400438:	3410      	adds	r4, #16
		while (status != 0) {
  40043a:	b15d      	cbz	r5, 400454 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  40043c:	6820      	ldr	r0, [r4, #0]
  40043e:	42b8      	cmp	r0, r7
  400440:	d1f8      	bne.n	400434 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400442:	6861      	ldr	r1, [r4, #4]
  400444:	4229      	tst	r1, r5
  400446:	d0f5      	beq.n	400434 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400448:	68e3      	ldr	r3, [r4, #12]
  40044a:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  40044c:	6863      	ldr	r3, [r4, #4]
  40044e:	ea25 0503 	bic.w	r5, r5, r3
  400452:	e7ef      	b.n	400434 <pio_handler_process+0x20>
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  400454:	4b07      	ldr	r3, [pc, #28]	; (400474 <pio_handler_process+0x60>)
  400456:	681b      	ldr	r3, [r3, #0]
  400458:	b123      	cbz	r3, 400464 <pio_handler_process+0x50>
		if (pio_capture_handler) {
  40045a:	4b07      	ldr	r3, [pc, #28]	; (400478 <pio_handler_process+0x64>)
  40045c:	681b      	ldr	r3, [r3, #0]
  40045e:	b10b      	cbz	r3, 400464 <pio_handler_process+0x50>
			pio_capture_handler(p_pio);
  400460:	4648      	mov	r0, r9
  400462:	4798      	blx	r3
  400464:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400468:	004002bb 	.word	0x004002bb
  40046c:	004002bf 	.word	0x004002bf
  400470:	200009dc 	.word	0x200009dc
  400474:	20000aa8 	.word	0x20000aa8
  400478:	20000a50 	.word	0x20000a50

0040047c <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  40047c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  40047e:	4c18      	ldr	r4, [pc, #96]	; (4004e0 <pio_handler_set+0x64>)
  400480:	6826      	ldr	r6, [r4, #0]
  400482:	2e06      	cmp	r6, #6
  400484:	d829      	bhi.n	4004da <pio_handler_set+0x5e>
  400486:	f04f 0c00 	mov.w	ip, #0
  40048a:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  40048c:	4f15      	ldr	r7, [pc, #84]	; (4004e4 <pio_handler_set+0x68>)
  40048e:	e004      	b.n	40049a <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400490:	3401      	adds	r4, #1
  400492:	b2e4      	uxtb	r4, r4
  400494:	46a4      	mov	ip, r4
  400496:	42a6      	cmp	r6, r4
  400498:	d309      	bcc.n	4004ae <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  40049a:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  40049c:	0125      	lsls	r5, r4, #4
  40049e:	597d      	ldr	r5, [r7, r5]
  4004a0:	428d      	cmp	r5, r1
  4004a2:	d1f5      	bne.n	400490 <pio_handler_set+0x14>
  4004a4:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  4004a8:	686d      	ldr	r5, [r5, #4]
  4004aa:	4295      	cmp	r5, r2
  4004ac:	d1f0      	bne.n	400490 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  4004ae:	4d0d      	ldr	r5, [pc, #52]	; (4004e4 <pio_handler_set+0x68>)
  4004b0:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  4004b4:	eb05 040e 	add.w	r4, r5, lr
  4004b8:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  4004bc:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  4004be:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  4004c0:	9906      	ldr	r1, [sp, #24]
  4004c2:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  4004c4:	3601      	adds	r6, #1
  4004c6:	4566      	cmp	r6, ip
		gs_ul_nb_sources++;
  4004c8:	bf04      	itt	eq
  4004ca:	4905      	ldreq	r1, [pc, #20]	; (4004e0 <pio_handler_set+0x64>)
  4004cc:	600e      	streq	r6, [r1, #0]
  4004ce:	4611      	mov	r1, r2
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  4004d0:	461a      	mov	r2, r3
  4004d2:	4b05      	ldr	r3, [pc, #20]	; (4004e8 <pio_handler_set+0x6c>)
  4004d4:	4798      	blx	r3

	return 0;
  4004d6:	2000      	movs	r0, #0
  4004d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return 1;
  4004da:	2001      	movs	r0, #1
}
  4004dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4004de:	bf00      	nop
  4004e0:	20000a4c 	.word	0x20000a4c
  4004e4:	200009dc 	.word	0x200009dc
  4004e8:	00400285 	.word	0x00400285

004004ec <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  4004ec:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  4004ee:	210b      	movs	r1, #11
  4004f0:	4801      	ldr	r0, [pc, #4]	; (4004f8 <PIOA_Handler+0xc>)
  4004f2:	4b02      	ldr	r3, [pc, #8]	; (4004fc <PIOA_Handler+0x10>)
  4004f4:	4798      	blx	r3
  4004f6:	bd08      	pop	{r3, pc}
  4004f8:	400e0e00 	.word	0x400e0e00
  4004fc:	00400415 	.word	0x00400415

00400500 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400500:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400502:	210c      	movs	r1, #12
  400504:	4801      	ldr	r0, [pc, #4]	; (40050c <PIOB_Handler+0xc>)
  400506:	4b02      	ldr	r3, [pc, #8]	; (400510 <PIOB_Handler+0x10>)
  400508:	4798      	blx	r3
  40050a:	bd08      	pop	{r3, pc}
  40050c:	400e1000 	.word	0x400e1000
  400510:	00400415 	.word	0x00400415

00400514 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400514:	4a17      	ldr	r2, [pc, #92]	; (400574 <pmc_switch_mck_to_pllack+0x60>)
  400516:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400518:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  40051c:	4318      	orrs	r0, r3
  40051e:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400520:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400522:	f013 0f08 	tst.w	r3, #8
  400526:	d10a      	bne.n	40053e <pmc_switch_mck_to_pllack+0x2a>
  400528:	f44f 6300 	mov.w	r3, #2048	; 0x800
  40052c:	4911      	ldr	r1, [pc, #68]	; (400574 <pmc_switch_mck_to_pllack+0x60>)
  40052e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400530:	f012 0f08 	tst.w	r2, #8
  400534:	d103      	bne.n	40053e <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400536:	3b01      	subs	r3, #1
  400538:	d1f9      	bne.n	40052e <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  40053a:	2001      	movs	r0, #1
  40053c:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  40053e:	4a0d      	ldr	r2, [pc, #52]	; (400574 <pmc_switch_mck_to_pllack+0x60>)
  400540:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400542:	f023 0303 	bic.w	r3, r3, #3
  400546:	f043 0302 	orr.w	r3, r3, #2
  40054a:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  40054c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40054e:	f013 0f08 	tst.w	r3, #8
  400552:	d10a      	bne.n	40056a <pmc_switch_mck_to_pllack+0x56>
  400554:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400558:	4906      	ldr	r1, [pc, #24]	; (400574 <pmc_switch_mck_to_pllack+0x60>)
  40055a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  40055c:	f012 0f08 	tst.w	r2, #8
  400560:	d105      	bne.n	40056e <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400562:	3b01      	subs	r3, #1
  400564:	d1f9      	bne.n	40055a <pmc_switch_mck_to_pllack+0x46>
			return 1;
  400566:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400568:	4770      	bx	lr
	return 0;
  40056a:	2000      	movs	r0, #0
  40056c:	4770      	bx	lr
  40056e:	2000      	movs	r0, #0
  400570:	4770      	bx	lr
  400572:	bf00      	nop
  400574:	400e0400 	.word	0x400e0400

00400578 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400578:	b9c8      	cbnz	r0, 4005ae <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  40057a:	4a11      	ldr	r2, [pc, #68]	; (4005c0 <pmc_switch_mainck_to_xtal+0x48>)
  40057c:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  40057e:	0209      	lsls	r1, r1, #8
  400580:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400582:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  400586:	f023 0303 	bic.w	r3, r3, #3
  40058a:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  40058e:	f043 0301 	orr.w	r3, r3, #1
  400592:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400594:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400596:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400598:	f013 0f01 	tst.w	r3, #1
  40059c:	d0fb      	beq.n	400596 <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  40059e:	4a08      	ldr	r2, [pc, #32]	; (4005c0 <pmc_switch_mainck_to_xtal+0x48>)
  4005a0:	6a13      	ldr	r3, [r2, #32]
  4005a2:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  4005a6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4005aa:	6213      	str	r3, [r2, #32]
  4005ac:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4005ae:	4904      	ldr	r1, [pc, #16]	; (4005c0 <pmc_switch_mainck_to_xtal+0x48>)
  4005b0:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4005b2:	4a04      	ldr	r2, [pc, #16]	; (4005c4 <pmc_switch_mainck_to_xtal+0x4c>)
  4005b4:	401a      	ands	r2, r3
  4005b6:	4b04      	ldr	r3, [pc, #16]	; (4005c8 <pmc_switch_mainck_to_xtal+0x50>)
  4005b8:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4005ba:	620b      	str	r3, [r1, #32]
  4005bc:	4770      	bx	lr
  4005be:	bf00      	nop
  4005c0:	400e0400 	.word	0x400e0400
  4005c4:	fec8fffc 	.word	0xfec8fffc
  4005c8:	01370002 	.word	0x01370002

004005cc <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  4005cc:	4b02      	ldr	r3, [pc, #8]	; (4005d8 <pmc_osc_is_ready_mainck+0xc>)
  4005ce:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4005d0:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4005d4:	4770      	bx	lr
  4005d6:	bf00      	nop
  4005d8:	400e0400 	.word	0x400e0400

004005dc <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  4005dc:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4005e0:	4b01      	ldr	r3, [pc, #4]	; (4005e8 <pmc_disable_pllack+0xc>)
  4005e2:	629a      	str	r2, [r3, #40]	; 0x28
  4005e4:	4770      	bx	lr
  4005e6:	bf00      	nop
  4005e8:	400e0400 	.word	0x400e0400

004005ec <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  4005ec:	4b02      	ldr	r3, [pc, #8]	; (4005f8 <pmc_is_locked_pllack+0xc>)
  4005ee:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4005f0:	f000 0002 	and.w	r0, r0, #2
  4005f4:	4770      	bx	lr
  4005f6:	bf00      	nop
  4005f8:	400e0400 	.word	0x400e0400

004005fc <pmc_enable_pllbck>:
 * \param mulb PLLB multiplier.
 * \param pllbcount PLLB counter.
 * \param divb Divider.
 */
void pmc_enable_pllbck(uint32_t mulb, uint32_t pllbcount, uint32_t divb)
{
  4005fc:	b410      	push	{r4}
/**
 * \brief Disable PLLB clock.
 */
void pmc_disable_pllbck(void)
{
	PMC->CKGR_PLLBR = CKGR_PLLBR_MULB(0);
  4005fe:	4c0a      	ldr	r4, [pc, #40]	; (400628 <pmc_enable_pllbck+0x2c>)
  400600:	2300      	movs	r3, #0
  400602:	62e3      	str	r3, [r4, #44]	; 0x2c
			CKGR_PLLBR_DIVB(divb) | CKGR_PLLBR_PLLBCOUNT(pllbcount)
  400604:	0209      	lsls	r1, r1, #8
  400606:	f401 517c 	and.w	r1, r1, #16128	; 0x3f00
  40060a:	b2d2      	uxtb	r2, r2
  40060c:	4311      	orrs	r1, r2
			| CKGR_PLLBR_MULB(mulb);
  40060e:	4b07      	ldr	r3, [pc, #28]	; (40062c <pmc_enable_pllbck+0x30>)
  400610:	ea03 4000 	and.w	r0, r3, r0, lsl #16
  400614:	4301      	orrs	r1, r0
	PMC->CKGR_PLLBR =
  400616:	62e1      	str	r1, [r4, #44]	; 0x2c
	while ((PMC->PMC_SR & PMC_SR_LOCKB) == 0);
  400618:	4622      	mov	r2, r4
  40061a:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40061c:	f013 0f04 	tst.w	r3, #4
  400620:	d0fb      	beq.n	40061a <pmc_enable_pllbck+0x1e>
}
  400622:	bc10      	pop	{r4}
  400624:	4770      	bx	lr
  400626:	bf00      	nop
  400628:	400e0400 	.word	0x400e0400
  40062c:	07ff0000 	.word	0x07ff0000

00400630 <pmc_enable_periph_clk>:
	PMC->PMC_PCR = ul_id & 0x7F;
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
	PMC->PMC_PCR = pcr;
	return 0;
#else
	if (ul_id > MAX_PERIPH_ID) {
  400630:	2822      	cmp	r0, #34	; 0x22
  400632:	d81e      	bhi.n	400672 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  400634:	281f      	cmp	r0, #31
  400636:	d80c      	bhi.n	400652 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400638:	4b11      	ldr	r3, [pc, #68]	; (400680 <pmc_enable_periph_clk+0x50>)
  40063a:	699a      	ldr	r2, [r3, #24]
  40063c:	2301      	movs	r3, #1
  40063e:	4083      	lsls	r3, r0
  400640:	4393      	bics	r3, r2
  400642:	d018      	beq.n	400676 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  400644:	2301      	movs	r3, #1
  400646:	fa03 f000 	lsl.w	r0, r3, r0
  40064a:	4b0d      	ldr	r3, [pc, #52]	; (400680 <pmc_enable_periph_clk+0x50>)
  40064c:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  40064e:	2000      	movs	r0, #0
  400650:	4770      	bx	lr
		ul_id -= 32;
  400652:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  400654:	4b0a      	ldr	r3, [pc, #40]	; (400680 <pmc_enable_periph_clk+0x50>)
  400656:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  40065a:	2301      	movs	r3, #1
  40065c:	4083      	lsls	r3, r0
  40065e:	4393      	bics	r3, r2
  400660:	d00b      	beq.n	40067a <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  400662:	2301      	movs	r3, #1
  400664:	fa03 f000 	lsl.w	r0, r3, r0
  400668:	4b05      	ldr	r3, [pc, #20]	; (400680 <pmc_enable_periph_clk+0x50>)
  40066a:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  40066e:	2000      	movs	r0, #0
  400670:	4770      	bx	lr
		return 1;
  400672:	2001      	movs	r0, #1
  400674:	4770      	bx	lr
	return 0;
  400676:	2000      	movs	r0, #0
  400678:	4770      	bx	lr
  40067a:	2000      	movs	r0, #0
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
  40067c:	4770      	bx	lr
  40067e:	bf00      	nop
  400680:	400e0400 	.word	0x400e0400

00400684 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  400684:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400686:	0189      	lsls	r1, r1, #6
  400688:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  40068a:	2402      	movs	r4, #2
  40068c:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  40068e:	f04f 31ff 	mov.w	r1, #4294967295
  400692:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  400694:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  400696:	605a      	str	r2, [r3, #4]
}
  400698:	bc10      	pop	{r4}
  40069a:	4770      	bx	lr

0040069c <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  40069c:	0189      	lsls	r1, r1, #6
  40069e:	2305      	movs	r3, #5
  4006a0:	5043      	str	r3, [r0, r1]
  4006a2:	4770      	bx	lr

004006a4 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  4006a4:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  4006a8:	61ca      	str	r2, [r1, #28]
  4006aa:	4770      	bx	lr

004006ac <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4006ac:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
  4006b0:	624a      	str	r2, [r1, #36]	; 0x24
  4006b2:	4770      	bx	lr

004006b4 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4006b4:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
  4006b8:	6a08      	ldr	r0, [r1, #32]
}
  4006ba:	4770      	bx	lr

004006bc <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  4006bc:	b4f0      	push	{r4, r5, r6, r7}
  4006be:	b086      	sub	sp, #24
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  4006c0:	2402      	movs	r4, #2
  4006c2:	9401      	str	r4, [sp, #4]
  4006c4:	2408      	movs	r4, #8
  4006c6:	9402      	str	r4, [sp, #8]
  4006c8:	2420      	movs	r4, #32
  4006ca:	9403      	str	r4, [sp, #12]
  4006cc:	2480      	movs	r4, #128	; 0x80
  4006ce:	9404      	str	r4, [sp, #16]
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
  4006d0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  4006d2:	0be4      	lsrs	r4, r4, #15
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  4006d4:	9405      	str	r4, [sp, #20]
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
		if (ul_freq > ul_high) {
  4006d6:	ebb0 0f51 	cmp.w	r0, r1, lsr #1
  4006da:	d814      	bhi.n	400706 <tc_find_mck_divisor+0x4a>
  4006dc:	0c4c      	lsrs	r4, r1, #17
			return 0;
		} else if (ul_freq >= ul_low) {
  4006de:	42a0      	cmp	r0, r4
  4006e0:	d217      	bcs.n	400712 <tc_find_mck_divisor+0x56>
  4006e2:	2501      	movs	r5, #1
		ul_high = ul_mck / divisors[ul_index];
  4006e4:	af01      	add	r7, sp, #4
  4006e6:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
  4006ea:	fbb1 f4f4 	udiv	r4, r1, r4
		ul_low  = ul_high / TC_DIV_FACTOR;
  4006ee:	0c26      	lsrs	r6, r4, #16
		if (ul_freq > ul_high) {
  4006f0:	4284      	cmp	r4, r0
  4006f2:	d30a      	bcc.n	40070a <tc_find_mck_divisor+0x4e>
		} else if (ul_freq >= ul_low) {
  4006f4:	4286      	cmp	r6, r0
  4006f6:	d90d      	bls.n	400714 <tc_find_mck_divisor+0x58>
			ul_index++) {
  4006f8:	3501      	adds	r5, #1
	for (ul_index = 0;
  4006fa:	2d05      	cmp	r5, #5
  4006fc:	d1f3      	bne.n	4006e6 <tc_find_mck_divisor+0x2a>
			break;
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
		return 0;
  4006fe:	2000      	movs	r0, #0
	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
}
  400700:	b006      	add	sp, #24
  400702:	bcf0      	pop	{r4, r5, r6, r7}
  400704:	4770      	bx	lr
			return 0;
  400706:	2000      	movs	r0, #0
  400708:	e7fa      	b.n	400700 <tc_find_mck_divisor+0x44>
  40070a:	2000      	movs	r0, #0
  40070c:	e7f8      	b.n	400700 <tc_find_mck_divisor+0x44>
	return 1;
  40070e:	2001      	movs	r0, #1
  400710:	e7f6      	b.n	400700 <tc_find_mck_divisor+0x44>
	for (ul_index = 0;
  400712:	2500      	movs	r5, #0
	if (p_uldiv) {
  400714:	b12a      	cbz	r2, 400722 <tc_find_mck_divisor+0x66>
		*p_uldiv = divisors[ul_index];
  400716:	a906      	add	r1, sp, #24
  400718:	eb01 0185 	add.w	r1, r1, r5, lsl #2
  40071c:	f851 1c14 	ldr.w	r1, [r1, #-20]
  400720:	6011      	str	r1, [r2, #0]
	if (p_ultcclks) {
  400722:	2b00      	cmp	r3, #0
  400724:	d0f3      	beq.n	40070e <tc_find_mck_divisor+0x52>
		*p_ultcclks = ul_index;
  400726:	601d      	str	r5, [r3, #0]
	return 1;
  400728:	2001      	movs	r0, #1
  40072a:	e7e9      	b.n	400700 <tc_find_mck_divisor+0x44>

0040072c <twi_set_speed>:
{
	uint32_t ckdiv = 0;
	uint32_t c_lh_div;
	uint32_t cldiv, chdiv;

	if (ul_speed > I2C_FAST_MODE_SPEED) {
  40072c:	4b2a      	ldr	r3, [pc, #168]	; (4007d8 <twi_set_speed+0xac>)
  40072e:	4299      	cmp	r1, r3
  400730:	d849      	bhi.n	4007c6 <twi_set_speed+0x9a>
		return FAIL;
	}

	/* Low level time not less than 1.3us of I2C Fast Mode. */
	if (ul_speed > LOW_LEVEL_TIME_LIMIT) {
  400732:	f5a3 537a 	sub.w	r3, r3, #16000	; 0x3e80
  400736:	4299      	cmp	r1, r3
  400738:	d92b      	bls.n	400792 <twi_set_speed+0x66>
{
  40073a:	b410      	push	{r4}
		/* Low level of time fixed for 1.3us. */
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  40073c:	4c27      	ldr	r4, [pc, #156]	; (4007dc <twi_set_speed+0xb0>)
  40073e:	fba4 3402 	umull	r3, r4, r4, r2
  400742:	0ba4      	lsrs	r4, r4, #14
  400744:	3c04      	subs	r4, #4
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  400746:	4b26      	ldr	r3, [pc, #152]	; (4007e0 <twi_set_speed+0xb4>)
  400748:	440b      	add	r3, r1
  40074a:	009b      	lsls	r3, r3, #2
  40074c:	fbb2 f2f3 	udiv	r2, r2, r3
  400750:	3a04      	subs	r2, #4
		
		/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400752:	2cff      	cmp	r4, #255	; 0xff
  400754:	d939      	bls.n	4007ca <twi_set_speed+0x9e>
  400756:	2100      	movs	r1, #0
			/* Increase clock divider */
			ckdiv++;
  400758:	3101      	adds	r1, #1
			/* Divide cldiv value */
			cldiv /= TWI_CLK_DIVIDER;
  40075a:	0864      	lsrs	r4, r4, #1
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40075c:	2cff      	cmp	r4, #255	; 0xff
  40075e:	d90d      	bls.n	40077c <twi_set_speed+0x50>
  400760:	2907      	cmp	r1, #7
  400762:	d1f9      	bne.n	400758 <twi_set_speed+0x2c>
			chdiv /= TWI_CLK_DIVIDER;
		}

		/* set clock waveform generator register */
		p_twi->TWI_CWGR =
				TWI_CWGR_CLDIV(cldiv) | TWI_CWGR_CHDIV(chdiv) |
  400764:	0213      	lsls	r3, r2, #8
  400766:	b29b      	uxth	r3, r3
				TWI_CWGR_CKDIV(ckdiv);		
  400768:	0409      	lsls	r1, r1, #16
  40076a:	f401 21e0 	and.w	r1, r1, #458752	; 0x70000
				TWI_CWGR_CLDIV(cldiv) | TWI_CWGR_CHDIV(chdiv) |
  40076e:	430b      	orrs	r3, r1
  400770:	b2e4      	uxtb	r4, r4
  400772:	4323      	orrs	r3, r4
		p_twi->TWI_CWGR =
  400774:	6103      	str	r3, [r0, #16]
		p_twi->TWI_CWGR =
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
				TWI_CWGR_CKDIV(ckdiv);
	}

	return PASS;
  400776:	2000      	movs	r0, #0
}
  400778:	bc10      	pop	{r4}
  40077a:	4770      	bx	lr
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40077c:	2aff      	cmp	r2, #255	; 0xff
  40077e:	d9f1      	bls.n	400764 <twi_set_speed+0x38>
  400780:	2906      	cmp	r1, #6
  400782:	d8ef      	bhi.n	400764 <twi_set_speed+0x38>
			ckdiv++;
  400784:	3101      	adds	r1, #1
			chdiv /= TWI_CLK_DIVIDER;
  400786:	0852      	lsrs	r2, r2, #1
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400788:	2aff      	cmp	r2, #255	; 0xff
  40078a:	d9eb      	bls.n	400764 <twi_set_speed+0x38>
  40078c:	2906      	cmp	r1, #6
  40078e:	d9f9      	bls.n	400784 <twi_set_speed+0x58>
  400790:	e7e8      	b.n	400764 <twi_set_speed+0x38>
		c_lh_div = ul_mck / (ul_speed * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  400792:	0049      	lsls	r1, r1, #1
  400794:	fbb2 f2f1 	udiv	r2, r2, r1
  400798:	3a04      	subs	r2, #4
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40079a:	2aff      	cmp	r2, #255	; 0xff
  40079c:	d911      	bls.n	4007c2 <twi_set_speed+0x96>
  40079e:	2300      	movs	r3, #0
			ckdiv++;
  4007a0:	3301      	adds	r3, #1
			c_lh_div /= TWI_CLK_DIVIDER;
  4007a2:	0852      	lsrs	r2, r2, #1
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4007a4:	2aff      	cmp	r2, #255	; 0xff
  4007a6:	d901      	bls.n	4007ac <twi_set_speed+0x80>
  4007a8:	2b07      	cmp	r3, #7
  4007aa:	d1f9      	bne.n	4007a0 <twi_set_speed+0x74>
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
  4007ac:	0211      	lsls	r1, r2, #8
  4007ae:	b289      	uxth	r1, r1
				TWI_CWGR_CKDIV(ckdiv);
  4007b0:	041b      	lsls	r3, r3, #16
  4007b2:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
  4007b6:	430b      	orrs	r3, r1
  4007b8:	b2d2      	uxtb	r2, r2
  4007ba:	431a      	orrs	r2, r3
		p_twi->TWI_CWGR =
  4007bc:	6102      	str	r2, [r0, #16]
	return PASS;
  4007be:	2000      	movs	r0, #0
  4007c0:	4770      	bx	lr
	uint32_t ckdiv = 0;
  4007c2:	2300      	movs	r3, #0
  4007c4:	e7f2      	b.n	4007ac <twi_set_speed+0x80>
		return FAIL;
  4007c6:	2001      	movs	r0, #1
  4007c8:	4770      	bx	lr
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4007ca:	2aff      	cmp	r2, #255	; 0xff
	uint32_t ckdiv = 0;
  4007cc:	bf88      	it	hi
  4007ce:	2100      	movhi	r1, #0
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4007d0:	d8d8      	bhi.n	400784 <twi_set_speed+0x58>
	uint32_t ckdiv = 0;
  4007d2:	2100      	movs	r1, #0
  4007d4:	e7c6      	b.n	400764 <twi_set_speed+0x38>
  4007d6:	bf00      	nop
  4007d8:	00061a80 	.word	0x00061a80
  4007dc:	057619f1 	.word	0x057619f1
  4007e0:	3ffd1200 	.word	0x3ffd1200

004007e4 <twi_master_init>:
{
  4007e4:	b538      	push	{r3, r4, r5, lr}
  4007e6:	4604      	mov	r4, r0
  4007e8:	460d      	mov	r5, r1
	p_twi->TWI_IDR = ~0UL;
  4007ea:	f04f 33ff 	mov.w	r3, #4294967295
  4007ee:	6283      	str	r3, [r0, #40]	; 0x28
	p_twi->TWI_SR;
  4007f0:	6a03      	ldr	r3, [r0, #32]
 * \param p_twi Pointer to a TWI instance.
 */
void twi_reset(Twi *p_twi)
{
	/* Set SWRST bit to reset TWI peripheral */
	p_twi->TWI_CR = TWI_CR_SWRST;
  4007f2:	2380      	movs	r3, #128	; 0x80
  4007f4:	6003      	str	r3, [r0, #0]
	p_twi->TWI_RHR;
  4007f6:	6b03      	ldr	r3, [r0, #48]	; 0x30
	p_twi->TWI_CR = TWI_CR_MSDIS;
  4007f8:	2308      	movs	r3, #8
  4007fa:	6003      	str	r3, [r0, #0]
	p_twi->TWI_CR = TWI_CR_SVDIS;
  4007fc:	2320      	movs	r3, #32
  4007fe:	6003      	str	r3, [r0, #0]
	p_twi->TWI_CR = TWI_CR_MSEN;
  400800:	2304      	movs	r3, #4
  400802:	6003      	str	r3, [r0, #0]
	if (twi_set_speed(p_twi, p_opt->speed, p_opt->master_clk) == FAIL) {
  400804:	680a      	ldr	r2, [r1, #0]
  400806:	6849      	ldr	r1, [r1, #4]
  400808:	4b05      	ldr	r3, [pc, #20]	; (400820 <twi_master_init+0x3c>)
  40080a:	4798      	blx	r3
  40080c:	2801      	cmp	r0, #1
  40080e:	bf14      	ite	ne
  400810:	2000      	movne	r0, #0
  400812:	2001      	moveq	r0, #1
	if (p_opt->smbus == 1) {
  400814:	7a6b      	ldrb	r3, [r5, #9]
  400816:	2b01      	cmp	r3, #1
		p_twi->TWI_CR = TWI_CR_QUICK;
  400818:	bf04      	itt	eq
  40081a:	2340      	moveq	r3, #64	; 0x40
  40081c:	6023      	streq	r3, [r4, #0]
}
  40081e:	bd38      	pop	{r3, r4, r5, pc}
  400820:	0040072d 	.word	0x0040072d

00400824 <twi_mk_addr>:
	if (len == 0)
  400824:	460a      	mov	r2, r1
  400826:	b159      	cbz	r1, 400840 <twi_mk_addr+0x1c>
	val = addr[0];
  400828:	7803      	ldrb	r3, [r0, #0]
	if (len > 1) {
  40082a:	2901      	cmp	r1, #1
		val |= addr[1];
  40082c:	bfc4      	itt	gt
  40082e:	7841      	ldrbgt	r1, [r0, #1]
  400830:	ea41 2303 	orrgt.w	r3, r1, r3, lsl #8
	if (len > 2) {
  400834:	2a02      	cmp	r2, #2
  400836:	dd04      	ble.n	400842 <twi_mk_addr+0x1e>
		val |= addr[2];
  400838:	7882      	ldrb	r2, [r0, #2]
  40083a:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
  40083e:	e000      	b.n	400842 <twi_mk_addr+0x1e>
		return 0;
  400840:	2300      	movs	r3, #0
}
  400842:	4618      	mov	r0, r3
  400844:	4770      	bx	lr
	...

00400848 <twi_master_write>:
{
  400848:	b570      	push	{r4, r5, r6, lr}
	uint32_t cnt = p_packet->length;
  40084a:	68cd      	ldr	r5, [r1, #12]
	if (cnt == 0) {
  40084c:	2d00      	cmp	r5, #0
  40084e:	d035      	beq.n	4008bc <twi_master_write+0x74>
  400850:	460b      	mov	r3, r1
  400852:	4604      	mov	r4, r0
	uint8_t *buffer = p_packet->buffer;
  400854:	688e      	ldr	r6, [r1, #8]
	p_twi->TWI_MMR = 0;
  400856:	2000      	movs	r0, #0
  400858:	6060      	str	r0, [r4, #4]
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  40085a:	7c0a      	ldrb	r2, [r1, #16]
  40085c:	0412      	lsls	r2, r2, #16
  40085e:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
  400862:	6849      	ldr	r1, [r1, #4]
  400864:	0209      	lsls	r1, r1, #8
  400866:	f401 7140 	and.w	r1, r1, #768	; 0x300
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  40086a:	430a      	orrs	r2, r1
  40086c:	6062      	str	r2, [r4, #4]
	p_twi->TWI_IADR = 0;
  40086e:	60e0      	str	r0, [r4, #12]
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  400870:	6859      	ldr	r1, [r3, #4]
  400872:	4618      	mov	r0, r3
  400874:	4b15      	ldr	r3, [pc, #84]	; (4008cc <twi_master_write+0x84>)
  400876:	4798      	blx	r3
  400878:	60e0      	str	r0, [r4, #12]
		status = p_twi->TWI_SR;
  40087a:	6a23      	ldr	r3, [r4, #32]
		if (status & TWI_SR_NACK) {
  40087c:	f413 7f80 	tst.w	r3, #256	; 0x100
  400880:	d006      	beq.n	400890 <twi_master_write+0x48>
			return TWI_RECEIVE_NACK;
  400882:	2505      	movs	r5, #5
  400884:	e01b      	b.n	4008be <twi_master_write+0x76>
	while (cnt > 0) {
  400886:	b15d      	cbz	r5, 4008a0 <twi_master_write+0x58>
		status = p_twi->TWI_SR;
  400888:	6a23      	ldr	r3, [r4, #32]
		if (status & TWI_SR_NACK) {
  40088a:	f413 7f80 	tst.w	r3, #256	; 0x100
  40088e:	d118      	bne.n	4008c2 <twi_master_write+0x7a>
		if (!(status & TWI_SR_TXRDY)) {
  400890:	f013 0f04 	tst.w	r3, #4
  400894:	d0f7      	beq.n	400886 <twi_master_write+0x3e>
		p_twi->TWI_THR = *buffer++;
  400896:	7833      	ldrb	r3, [r6, #0]
  400898:	6363      	str	r3, [r4, #52]	; 0x34
		cnt--;
  40089a:	3d01      	subs	r5, #1
		p_twi->TWI_THR = *buffer++;
  40089c:	3601      	adds	r6, #1
  40089e:	e7f2      	b.n	400886 <twi_master_write+0x3e>
		status = p_twi->TWI_SR;
  4008a0:	6a23      	ldr	r3, [r4, #32]
		if (status & TWI_SR_NACK) {
  4008a2:	f413 7f80 	tst.w	r3, #256	; 0x100
  4008a6:	d10e      	bne.n	4008c6 <twi_master_write+0x7e>
		if (status & TWI_SR_TXRDY) {
  4008a8:	f013 0f04 	tst.w	r3, #4
  4008ac:	d0f8      	beq.n	4008a0 <twi_master_write+0x58>
	p_twi->TWI_CR = TWI_CR_STOP;
  4008ae:	2302      	movs	r3, #2
  4008b0:	6023      	str	r3, [r4, #0]
	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
  4008b2:	6a23      	ldr	r3, [r4, #32]
  4008b4:	f013 0f01 	tst.w	r3, #1
  4008b8:	d0fb      	beq.n	4008b2 <twi_master_write+0x6a>
  4008ba:	e000      	b.n	4008be <twi_master_write+0x76>
		return TWI_INVALID_ARGUMENT;
  4008bc:	2501      	movs	r5, #1
}
  4008be:	4628      	mov	r0, r5
  4008c0:	bd70      	pop	{r4, r5, r6, pc}
			return TWI_RECEIVE_NACK;
  4008c2:	2505      	movs	r5, #5
  4008c4:	e7fb      	b.n	4008be <twi_master_write+0x76>
			return TWI_RECEIVE_NACK;
  4008c6:	2505      	movs	r5, #5
  4008c8:	e7f9      	b.n	4008be <twi_master_write+0x76>
  4008ca:	bf00      	nop
  4008cc:	00400825 	.word	0x00400825

004008d0 <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
  4008d0:	b410      	push	{r4}
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  4008d2:	010b      	lsls	r3, r1, #4
  4008d4:	4293      	cmp	r3, r2
  4008d6:	d914      	bls.n	400902 <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  4008d8:	00c9      	lsls	r1, r1, #3
  4008da:	084b      	lsrs	r3, r1, #1
  4008dc:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  4008e0:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
  4008e4:	08d3      	lsrs	r3, r2, #3
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  4008e6:	1e5c      	subs	r4, r3, #1
  4008e8:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  4008ec:	428c      	cmp	r4, r1
  4008ee:	d901      	bls.n	4008f4 <usart_set_async_baudrate+0x24>
		return 1;
  4008f0:	2001      	movs	r0, #1
  4008f2:	e017      	b.n	400924 <usart_set_async_baudrate+0x54>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
  4008f4:	6841      	ldr	r1, [r0, #4]
  4008f6:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
  4008fa:	6041      	str	r1, [r0, #4]
  4008fc:	e00c      	b.n	400918 <usart_set_async_baudrate+0x48>
		return 1;
  4008fe:	2001      	movs	r0, #1
  400900:	e010      	b.n	400924 <usart_set_async_baudrate+0x54>
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  400902:	0859      	lsrs	r1, r3, #1
  400904:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
  400908:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
  40090c:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  40090e:	1e5c      	subs	r4, r3, #1
  400910:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  400914:	428c      	cmp	r4, r1
  400916:	d8f2      	bhi.n	4008fe <usart_set_async_baudrate+0x2e>
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  400918:	0412      	lsls	r2, r2, #16
  40091a:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  40091e:	431a      	orrs	r2, r3
  400920:	6202      	str	r2, [r0, #32]

	return 0;
  400922:	2000      	movs	r0, #0
}
  400924:	bc10      	pop	{r4}
  400926:	4770      	bx	lr

00400928 <usart_reset>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  400928:	4b0a      	ldr	r3, [pc, #40]	; (400954 <usart_reset+0x2c>)
  40092a:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
  40092e:	2300      	movs	r3, #0
  400930:	6043      	str	r3, [r0, #4]
	p_usart->US_RTOR = 0;
  400932:	6243      	str	r3, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
  400934:	6283      	str	r3, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  400936:	2388      	movs	r3, #136	; 0x88
  400938:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  40093a:	2324      	movs	r3, #36	; 0x24
  40093c:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
  40093e:	f44f 7380 	mov.w	r3, #256	; 0x100
  400942:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RTSDIS;
  400944:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  400948:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_DTRDIS;
  40094a:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  40094e:	6003      	str	r3, [r0, #0]
  400950:	4770      	bx	lr
  400952:	bf00      	nop
  400954:	55534100 	.word	0x55534100

00400958 <usart_init_rs232>:
{
  400958:	b570      	push	{r4, r5, r6, lr}
  40095a:	4605      	mov	r5, r0
  40095c:	460c      	mov	r4, r1
  40095e:	4616      	mov	r6, r2
	usart_reset(p_usart);
  400960:	4b0f      	ldr	r3, [pc, #60]	; (4009a0 <usart_init_rs232+0x48>)
  400962:	4798      	blx	r3
	ul_reg_val = 0;
  400964:	2200      	movs	r2, #0
  400966:	4b0f      	ldr	r3, [pc, #60]	; (4009a4 <usart_init_rs232+0x4c>)
  400968:	601a      	str	r2, [r3, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  40096a:	b1a4      	cbz	r4, 400996 <usart_init_rs232+0x3e>
  40096c:	4632      	mov	r2, r6
  40096e:	6821      	ldr	r1, [r4, #0]
  400970:	4628      	mov	r0, r5
  400972:	4b0d      	ldr	r3, [pc, #52]	; (4009a8 <usart_init_rs232+0x50>)
  400974:	4798      	blx	r3
  400976:	4602      	mov	r2, r0
  400978:	b978      	cbnz	r0, 40099a <usart_init_rs232+0x42>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  40097a:	6863      	ldr	r3, [r4, #4]
  40097c:	68a1      	ldr	r1, [r4, #8]
  40097e:	430b      	orrs	r3, r1
  400980:	6921      	ldr	r1, [r4, #16]
  400982:	430b      	orrs	r3, r1
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  400984:	68e1      	ldr	r1, [r4, #12]
  400986:	430b      	orrs	r3, r1
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400988:	4906      	ldr	r1, [pc, #24]	; (4009a4 <usart_init_rs232+0x4c>)
  40098a:	600b      	str	r3, [r1, #0]
	p_usart->US_MR |= ul_reg_val;
  40098c:	6869      	ldr	r1, [r5, #4]
  40098e:	430b      	orrs	r3, r1
  400990:	606b      	str	r3, [r5, #4]
}
  400992:	4610      	mov	r0, r2
  400994:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
  400996:	2201      	movs	r2, #1
  400998:	e7fb      	b.n	400992 <usart_init_rs232+0x3a>
  40099a:	2201      	movs	r2, #1
  40099c:	e7f9      	b.n	400992 <usart_init_rs232+0x3a>
  40099e:	bf00      	nop
  4009a0:	00400929 	.word	0x00400929
  4009a4:	20000a54 	.word	0x20000a54
  4009a8:	004008d1 	.word	0x004008d1

004009ac <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
  4009ac:	2340      	movs	r3, #64	; 0x40
  4009ae:	6003      	str	r3, [r0, #0]
  4009b0:	4770      	bx	lr

004009b2 <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
  4009b2:	2310      	movs	r3, #16
  4009b4:	6003      	str	r3, [r0, #0]
  4009b6:	4770      	bx	lr

004009b8 <usart_enable_interrupt>:
	p_usart->US_IER = ul_sources;
  4009b8:	6081      	str	r1, [r0, #8]
  4009ba:	4770      	bx	lr

004009bc <usart_disable_interrupt>:
	p_usart->US_IDR = ul_sources;
  4009bc:	60c1      	str	r1, [r0, #12]
  4009be:	4770      	bx	lr

004009c0 <usart_putchar>:
	while (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  4009c0:	6943      	ldr	r3, [r0, #20]
  4009c2:	f013 0f02 	tst.w	r3, #2
  4009c6:	d0fb      	beq.n	4009c0 <usart_putchar>
	p_usart->US_THR = US_THR_TXCHR(c);
  4009c8:	f3c1 0108 	ubfx	r1, r1, #0, #9
  4009cc:	61c1      	str	r1, [r0, #28]
}
  4009ce:	2000      	movs	r0, #0
  4009d0:	4770      	bx	lr
	...

004009d4 <usart_write_line>:
{
  4009d4:	b570      	push	{r4, r5, r6, lr}
  4009d6:	460c      	mov	r4, r1
	while (*string != '\0') {
  4009d8:	7809      	ldrb	r1, [r1, #0]
  4009da:	b139      	cbz	r1, 4009ec <usart_write_line+0x18>
  4009dc:	4605      	mov	r5, r0
		usart_putchar(p_usart, *string++);
  4009de:	4e04      	ldr	r6, [pc, #16]	; (4009f0 <usart_write_line+0x1c>)
  4009e0:	4628      	mov	r0, r5
  4009e2:	47b0      	blx	r6
	while (*string != '\0') {
  4009e4:	f814 1f01 	ldrb.w	r1, [r4, #1]!
  4009e8:	2900      	cmp	r1, #0
  4009ea:	d1f9      	bne.n	4009e0 <usart_write_line+0xc>
  4009ec:	bd70      	pop	{r4, r5, r6, pc}
  4009ee:	bf00      	nop
  4009f0:	004009c1 	.word	0x004009c1

004009f4 <vsync_handler>:
#define TWI_CLK     (400000UL)

void vsync_handler(uint32_t ul_id, uint32_t ul_mask) {
	unused(ul_id);
	unused(ul_mask);
	g_vsync_flag = 1;
  4009f4:	2201      	movs	r2, #1
  4009f6:	4b01      	ldr	r3, [pc, #4]	; (4009fc <vsync_handler+0x8>)
  4009f8:	701a      	strb	r2, [r3, #0]
  4009fa:	4770      	bx	lr
  4009fc:	20000aad 	.word	0x20000aad

00400a00 <init_vsync_interrupts>:
}


void init_vsync_interrupts(void) {
  400a00:	b510      	push	{r4, lr}
  400a02:	b082      	sub	sp, #8
	pio_handler_set(PIOA, ID_PIOA, CAMERA_VSYNC_PIN, PIO_IT_RISE_EDGE, vsync_handler);
  400a04:	4b07      	ldr	r3, [pc, #28]	; (400a24 <init_vsync_interrupts+0x24>)
  400a06:	9300      	str	r3, [sp, #0]
  400a08:	2370      	movs	r3, #112	; 0x70
  400a0a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400a0e:	210b      	movs	r1, #11
  400a10:	4805      	ldr	r0, [pc, #20]	; (400a28 <init_vsync_interrupts+0x28>)
  400a12:	4c06      	ldr	r4, [pc, #24]	; (400a2c <init_vsync_interrupts+0x2c>)
  400a14:	47a0      	blx	r4
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400a16:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400a1a:	4b05      	ldr	r3, [pc, #20]	; (400a30 <init_vsync_interrupts+0x30>)
  400a1c:	601a      	str	r2, [r3, #0]
	NVIC_EnableIRQ(PIOA_IRQn);
}
  400a1e:	b002      	add	sp, #8
  400a20:	bd10      	pop	{r4, pc}
  400a22:	bf00      	nop
  400a24:	004009f5 	.word	0x004009f5
  400a28:	400e0e00 	.word	0x400e0e00
  400a2c:	0040047d 	.word	0x0040047d
  400a30:	e000e100 	.word	0xe000e100

00400a34 <pio_capture_init>:
	//while (ov_init(BOARD_TWI) == 1) {
	//}

}

void pio_capture_init(Pio *p_pio, uint32_t ul_id) {
  400a34:	b510      	push	{r4, lr}
  400a36:	4604      	mov	r4, r0
	/* Enable periphral clock */
	pmc_enable_periph_clk(ul_id);
  400a38:	4608      	mov	r0, r1
  400a3a:	4b19      	ldr	r3, [pc, #100]	; (400aa0 <pio_capture_init+0x6c>)
  400a3c:	4798      	blx	r3

	/* Disable pio capture */
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_PCEN);
  400a3e:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400a42:	f023 0301 	bic.w	r3, r3, #1
  400a46:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150

	/* Disable rxbuff interrupt */
	p_pio->PIO_PCIDR |= PIO_PCIDR_RXBUFF;
  400a4a:	f8d4 3158 	ldr.w	r3, [r4, #344]	; 0x158
  400a4e:	f043 0308 	orr.w	r3, r3, #8
  400a52:	f8c4 3158 	str.w	r3, [r4, #344]	; 0x158

	/* 32bit width*/
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_DSIZE_Msk);
  400a56:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400a5a:	f023 0330 	bic.w	r3, r3, #48	; 0x30
  400a5e:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
	p_pio->PIO_PCMR |= PIO_PCMR_DSIZE_WORD;
  400a62:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400a66:	f043 0320 	orr.w	r3, r3, #32
  400a6a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150

	/* Only HSYNC and VSYNC enabled */
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_ALWYS);
  400a6e:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400a72:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  400a76:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_HALFS);
  400a7a:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400a7e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
  400a82:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150

	#if !defined(DEFAULT_MODE_COLORED)
		/* Samples only data with even index */
		p_pio->PIO_PCMR |= PIO_PCMR_HALFS;
  400a86:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400a8a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
  400a8e:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
		p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_FRSTS);
  400a92:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400a96:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  400a9a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
  400a9e:	bd10      	pop	{r4, pc}
  400aa0:	00400631 	.word	0x00400631

00400aa4 <configure_twi>:
void configure_twi(void) {
  400aa4:	b500      	push	{lr}
  400aa6:	b085      	sub	sp, #20
	init_vsync_interrupts();
  400aa8:	4b16      	ldr	r3, [pc, #88]	; (400b04 <configure_twi+0x60>)
  400aaa:	4798      	blx	r3
	pio_capture_init(PIOA, ID_PIOA);
  400aac:	210b      	movs	r1, #11
  400aae:	4816      	ldr	r0, [pc, #88]	; (400b08 <configure_twi+0x64>)
  400ab0:	4b16      	ldr	r3, [pc, #88]	; (400b0c <configure_twi+0x68>)
  400ab2:	4798      	blx	r3
	PMC->PMC_PCK[0] = (PMC_PCK_PRES_CLK_4 | PMC_PCK_CSS_PLLA_CLK);
  400ab4:	4b16      	ldr	r3, [pc, #88]	; (400b10 <configure_twi+0x6c>)
  400ab6:	2222      	movs	r2, #34	; 0x22
  400ab8:	641a      	str	r2, [r3, #64]	; 0x40
	PMC->PMC_SCER = PMC_SCER_PCK0;
  400aba:	f44f 7280 	mov.w	r2, #256	; 0x100
  400abe:	601a      	str	r2, [r3, #0]
	while (!(PMC->PMC_SCSR & PMC_SCSR_PCK0)) {
  400ac0:	461a      	mov	r2, r3
  400ac2:	6893      	ldr	r3, [r2, #8]
  400ac4:	f413 7f80 	tst.w	r3, #256	; 0x100
  400ac8:	d0fb      	beq.n	400ac2 <configure_twi+0x1e>
	pmc_enable_periph_clk(BOARD_TWI_ID);
  400aca:	2013      	movs	r0, #19
  400acc:	4b11      	ldr	r3, [pc, #68]	; (400b14 <configure_twi+0x70>)
  400ace:	4798      	blx	r3
	opt.master_clk = sysclk_get_cpu_hz();
  400ad0:	4b11      	ldr	r3, [pc, #68]	; (400b18 <configure_twi+0x74>)
  400ad2:	9301      	str	r3, [sp, #4]
	opt.speed      = TWI_CLK;
  400ad4:	4b11      	ldr	r3, [pc, #68]	; (400b1c <configure_twi+0x78>)
  400ad6:	9302      	str	r3, [sp, #8]
	twi_master_init(BOARD_TWI, &opt);
  400ad8:	a901      	add	r1, sp, #4
  400ada:	4811      	ldr	r0, [pc, #68]	; (400b20 <configure_twi+0x7c>)
  400adc:	4b11      	ldr	r3, [pc, #68]	; (400b24 <configure_twi+0x80>)
  400ade:	4798      	blx	r3
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400ae0:	4b11      	ldr	r3, [pc, #68]	; (400b28 <configure_twi+0x84>)
  400ae2:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  400ae6:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
  400aea:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  400aee:	f3bf 8f6f 	isb	sy
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400af2:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  400af6:	2100      	movs	r1, #0
  400af8:	f883 1313 	strb.w	r1, [r3, #787]	; 0x313
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400afc:	601a      	str	r2, [r3, #0]
}
  400afe:	b005      	add	sp, #20
  400b00:	f85d fb04 	ldr.w	pc, [sp], #4
  400b04:	00400a01 	.word	0x00400a01
  400b08:	400e0e00 	.word	0x400e0e00
  400b0c:	00400a35 	.word	0x00400a35
  400b10:	400e0400 	.word	0x400e0400
  400b14:	00400631 	.word	0x00400631
  400b18:	07270e00 	.word	0x07270e00
  400b1c:	00061a80 	.word	0x00061a80
  400b20:	40018000 	.word	0x40018000
  400b24:	004007e5 	.word	0x004007e5
  400b28:	e000e100 	.word	0xe000e100

00400b2c <pio_capture_to_buffer>:
	#endif
}

uint8_t pio_capture_to_buffer(Pio *p_pio, uint8_t *uc_buf, uint32_t ul_size){
	if ((p_pio->PIO_RCR == 0) && (p_pio->PIO_RNCR == 0)) {
  400b2c:	f8d0 316c 	ldr.w	r3, [r0, #364]	; 0x16c
  400b30:	b913      	cbnz	r3, 400b38 <pio_capture_to_buffer+0xc>
  400b32:	f8d0 317c 	ldr.w	r3, [r0, #380]	; 0x17c
  400b36:	b143      	cbz	r3, 400b4a <pio_capture_to_buffer+0x1e>
		p_pio->PIO_RPR = (uint32_t)uc_buf;
		p_pio->PIO_RCR = ul_size;
		p_pio->PIO_PTCR = PIO_PTCR_RXTEN;
		return 1;
	} else if (p_pio->PIO_RNCR == 0) {
  400b38:	f8d0 317c 	ldr.w	r3, [r0, #380]	; 0x17c
  400b3c:	b973      	cbnz	r3, 400b5c <pio_capture_to_buffer+0x30>
		p_pio->PIO_RNPR = (uint32_t)uc_buf;
  400b3e:	f8c0 1178 	str.w	r1, [r0, #376]	; 0x178
		p_pio->PIO_RNCR = ul_size;
  400b42:	f8c0 217c 	str.w	r2, [r0, #380]	; 0x17c
		return 1;
  400b46:	2001      	movs	r0, #1
  400b48:	4770      	bx	lr
		p_pio->PIO_RPR = (uint32_t)uc_buf;
  400b4a:	f8c0 1168 	str.w	r1, [r0, #360]	; 0x168
		p_pio->PIO_RCR = ul_size;
  400b4e:	f8c0 216c 	str.w	r2, [r0, #364]	; 0x16c
		p_pio->PIO_PTCR = PIO_PTCR_RXTEN;
  400b52:	2301      	movs	r3, #1
  400b54:	f8c0 3188 	str.w	r3, [r0, #392]	; 0x188
		return 1;
  400b58:	4618      	mov	r0, r3
  400b5a:	4770      	bx	lr
	} else {
		return 0;
  400b5c:	2000      	movs	r0, #0
	}
}
  400b5e:	4770      	bx	lr

00400b60 <init_camera>:


void init_camera(void){
  400b60:	b508      	push	{r3, lr}
	//Configuration of camera pins, camera clock (XCLK), and
	//calling the configure_twi() function.
	configure_twi();
  400b62:	4b0f      	ldr	r3, [pc, #60]	; (400ba0 <init_camera+0x40>)
  400b64:	4798      	blx	r3
	
	/* Init Vsync handler*/
	init_vsync_interrupts();
  400b66:	4b0f      	ldr	r3, [pc, #60]	; (400ba4 <init_camera+0x44>)
  400b68:	4798      	blx	r3

	/* Init PIO capture*/
	pio_capture_init(PIOA, ID_PIOA);
  400b6a:	210b      	movs	r1, #11
  400b6c:	480e      	ldr	r0, [pc, #56]	; (400ba8 <init_camera+0x48>)
  400b6e:	4b0f      	ldr	r3, [pc, #60]	; (400bac <init_camera+0x4c>)
  400b70:	4798      	blx	r3
	
	gpio_configure_pin(PIN_PCK1, PIN_PCK1_FLAGS);
  400b72:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400b76:	2011      	movs	r0, #17
  400b78:	4b0d      	ldr	r3, [pc, #52]	; (400bb0 <init_camera+0x50>)
  400b7a:	4798      	blx	r3
	
	// Enable XCLCK
	pmc_enable_pllbck(7, 0x1, 1); /* PLLA work at 96 Mhz */ // PA17 is xclck signal
  400b7c:	2201      	movs	r2, #1
  400b7e:	4611      	mov	r1, r2
  400b80:	2007      	movs	r0, #7
  400b82:	4b0c      	ldr	r3, [pc, #48]	; (400bb4 <init_camera+0x54>)
  400b84:	4798      	blx	r3
	
	/* Init PCK1 to work at 24 Mhz initialize PLLB*/
	/* 96/4=24 Mhz */
	PMC->PMC_PCK[1] = (PMC_PCK_PRES_CLK_4 | PMC_PCK_CSS_PLLB_CLK);
  400b86:	4b0c      	ldr	r3, [pc, #48]	; (400bb8 <init_camera+0x58>)
  400b88:	2223      	movs	r2, #35	; 0x23
  400b8a:	645a      	str	r2, [r3, #68]	; 0x44
	PMC->PMC_SCER = PMC_SCER_PCK1;
  400b8c:	f44f 7200 	mov.w	r2, #512	; 0x200
  400b90:	601a      	str	r2, [r3, #0]
	while (!(PMC->PMC_SCSR & PMC_SCSR_PCK1)) {
  400b92:	461a      	mov	r2, r3
  400b94:	6893      	ldr	r3, [r2, #8]
  400b96:	f413 7f00 	tst.w	r3, #512	; 0x200
  400b9a:	d0fb      	beq.n	400b94 <init_camera+0x34>
	
	// Initialize camera and wait to let it adjust  // ASK ILYA
	//while (ov_init(BOARD_TWI) == 1) {
	//}
	
}
  400b9c:	bd08      	pop	{r3, pc}
  400b9e:	bf00      	nop
  400ba0:	00400aa5 	.word	0x00400aa5
  400ba4:	00400a01 	.word	0x00400a01
  400ba8:	400e0e00 	.word	0x400e0e00
  400bac:	00400a35 	.word	0x00400a35
  400bb0:	004002c5 	.word	0x004002c5
  400bb4:	004005fd 	.word	0x004005fd
  400bb8:	400e0400 	.word	0x400e0400

00400bbc <configure_camera>:

void configure_camera(void){
  400bbc:	b538      	push	{r3, r4, r5, lr}
	ov_configure(BOARD_TWI, JPEG_INIT);
  400bbe:	4d09      	ldr	r5, [pc, #36]	; (400be4 <configure_camera+0x28>)
  400bc0:	2100      	movs	r1, #0
  400bc2:	4628      	mov	r0, r5
  400bc4:	4c08      	ldr	r4, [pc, #32]	; (400be8 <configure_camera+0x2c>)
  400bc6:	47a0      	blx	r4
	ov_configure(BOARD_TWI, YUV422);
  400bc8:	2101      	movs	r1, #1
  400bca:	4628      	mov	r0, r5
  400bcc:	47a0      	blx	r4
	ov_configure(BOARD_TWI, JPEG);
  400bce:	2102      	movs	r1, #2
  400bd0:	4628      	mov	r0, r5
  400bd2:	47a0      	blx	r4
	ov_configure(BOARD_TWI, JPEG_320x240);
  400bd4:	2103      	movs	r1, #3
  400bd6:	4628      	mov	r0, r5
  400bd8:	47a0      	blx	r4
	delay_ms(3000);
  400bda:	4804      	ldr	r0, [pc, #16]	; (400bec <configure_camera+0x30>)
  400bdc:	4b04      	ldr	r3, [pc, #16]	; (400bf0 <configure_camera+0x34>)
  400bde:	4798      	blx	r3
  400be0:	bd38      	pop	{r3, r4, r5, pc}
  400be2:	bf00      	nop
  400be4:	40018000 	.word	0x40018000
  400be8:	00400cc9 	.word	0x00400cc9
  400bec:	01885e6e 	.word	0x01885e6e
  400bf0:	20000001 	.word	0x20000001

00400bf4 <start_capture>:
}

uint8_t start_capture(void) {
  400bf4:	b510      	push	{r4, lr}

	pio_enable_interrupt(PIOA, CAMERA_VSYNC_PIN);
  400bf6:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  400bfa:	4811      	ldr	r0, [pc, #68]	; (400c40 <start_capture+0x4c>)
  400bfc:	4b11      	ldr	r3, [pc, #68]	; (400c44 <start_capture+0x50>)
  400bfe:	4798      	blx	r3
	while (!g_vsync_flag) {
  400c00:	4a11      	ldr	r2, [pc, #68]	; (400c48 <start_capture+0x54>)
  400c02:	7813      	ldrb	r3, [r2, #0]
  400c04:	2b00      	cmp	r3, #0
  400c06:	d0fc      	beq.n	400c02 <start_capture+0xe>
		// Wait for VSYNC rising edge
	}
	
	pio_disable_interrupt(PIOA, CAMERA_VSYNC_PIN);
  400c08:	4c0d      	ldr	r4, [pc, #52]	; (400c40 <start_capture+0x4c>)
  400c0a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  400c0e:	4620      	mov	r0, r4
  400c10:	4b0e      	ldr	r3, [pc, #56]	; (400c4c <start_capture+0x58>)
  400c12:	4798      	blx	r3
	
	// Enable the capture function to start capture data
	pio_capture_enable(PIOA);
  400c14:	4620      	mov	r0, r4
  400c16:	4b0e      	ldr	r3, [pc, #56]	; (400c50 <start_capture+0x5c>)
  400c18:	4798      	blx	r3
	
	/* Capture data and send it to external SRAM memory thanks to PDC
	 * feature */
	pio_capture_to_buffer(PIOA, g_image_buffer, (100000) >> 2);
  400c1a:	f246 12a8 	movw	r2, #25000	; 0x61a8
  400c1e:	490d      	ldr	r1, [pc, #52]	; (400c54 <start_capture+0x60>)
  400c20:	4620      	mov	r0, r4
  400c22:	4b0d      	ldr	r3, [pc, #52]	; (400c58 <start_capture+0x64>)
  400c24:	4798      	blx	r3

	/* Wait end of capture*/
	while (!((PIOA->PIO_PCISR & PIO_PCIMR_RXBUFF) ==
  400c26:	4622      	mov	r2, r4
  400c28:	f8d2 3160 	ldr.w	r3, [r2, #352]	; 0x160
  400c2c:	f013 0f08 	tst.w	r3, #8
  400c30:	d0fa      	beq.n	400c28 <start_capture+0x34>
			PIO_PCIMR_RXBUFF)) {
	}

	/* Disable pio capture*/
	pio_capture_disable(PIOA);
  400c32:	4803      	ldr	r0, [pc, #12]	; (400c40 <start_capture+0x4c>)
  400c34:	4b09      	ldr	r3, [pc, #36]	; (400c5c <start_capture+0x68>)
  400c36:	4798      	blx	r3

	/* Reset vsync flag*/
	g_vsync_flag = 0;
  400c38:	2200      	movs	r2, #0
  400c3a:	4b03      	ldr	r3, [pc, #12]	; (400c48 <start_capture+0x54>)
  400c3c:	701a      	strb	r2, [r3, #0]
		
}
  400c3e:	bd10      	pop	{r4, pc}
  400c40:	400e0e00 	.word	0x400e0e00
  400c44:	004002b3 	.word	0x004002b3
  400c48:	20000aad 	.word	0x20000aad
  400c4c:	004002b7 	.word	0x004002b7
  400c50:	004003e5 	.word	0x004003e5
  400c54:	20000aac 	.word	0x20000aac
  400c58:	00400b2d 	.word	0x00400b2d
  400c5c:	004003fd 	.word	0x004003fd

00400c60 <ov_write_reg>:
 * \param p_twi TWI interface.
 * \param p_packet TWI packet.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_write_reg(Twi* const p_twi, twi_packet_t* const p_packet)
{
  400c60:	b508      	push	{r3, lr}
	uint32_t ul_status;

	ul_status = twi_master_write(p_twi, p_packet);
  400c62:	4b01      	ldr	r3, [pc, #4]	; (400c68 <ov_write_reg+0x8>)
  400c64:	4798      	blx	r3

	return ul_status;
}
  400c66:	bd08      	pop	{r3, pc}
  400c68:	00400849 	.word	0x00400849

00400c6c <ov_write_regs>:
 * \param p_twi TWI interface.
 * \param p_reg_list Register list to be written.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_write_regs(Twi* const p_twi, const ov_reg *p_reg_list)
{
  400c6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400c70:	b086      	sub	sp, #24
  400c72:	4607      	mov	r7, r0
  400c74:	1c4c      	adds	r4, r1, #1
			(p_next->val == OV_VAL_TERM))) {
		if (p_next->reg == 0xFE) {
			delay_ms(5);
		} else {
			twi_packet_regs.addr[0] = p_next->reg;
			twi_packet_regs.addr_length = 1;
  400c76:	2501      	movs	r5, #1
			twi_packet_regs.chip = OV_I2C_SENSOR_ADDRESS;
			twi_packet_regs.length = 1;
			twi_packet_regs.buffer = &(p_next->val);

			ul_err = ov_write_reg(p_twi, &twi_packet_regs);
  400c78:	4e11      	ldr	r6, [pc, #68]	; (400cc0 <ov_write_regs+0x54>)
			delay_ms(5);
  400c7a:	f8df 8048 	ldr.w	r8, [pc, #72]	; 400cc4 <ov_write_regs+0x58>
	while (!((p_next->reg == OV_REG_TERM) &&
  400c7e:	e010      	b.n	400ca2 <ov_write_regs+0x36>
  400c80:	7821      	ldrb	r1, [r4, #0]
  400c82:	29ff      	cmp	r1, #255	; 0xff
  400c84:	d018      	beq.n	400cb8 <ov_write_regs+0x4c>
			twi_packet_regs.addr[0] = p_next->reg;
  400c86:	f88d 3004 	strb.w	r3, [sp, #4]
			twi_packet_regs.addr_length = 1;
  400c8a:	9502      	str	r5, [sp, #8]
			twi_packet_regs.chip = OV_I2C_SENSOR_ADDRESS;
  400c8c:	2330      	movs	r3, #48	; 0x30
  400c8e:	f88d 3014 	strb.w	r3, [sp, #20]
			twi_packet_regs.length = 1;
  400c92:	9504      	str	r5, [sp, #16]
			twi_packet_regs.buffer = &(p_next->val);
  400c94:	9203      	str	r2, [sp, #12]
			ul_err = ov_write_reg(p_twi, &twi_packet_regs);
  400c96:	a901      	add	r1, sp, #4
  400c98:	4638      	mov	r0, r7
  400c9a:	47b0      	blx	r6
			ul_size++;

			if (ul_err == TWI_BUSY) {
  400c9c:	2808      	cmp	r0, #8
  400c9e:	d00c      	beq.n	400cba <ov_write_regs+0x4e>
  400ca0:	3402      	adds	r4, #2
  400ca2:	4622      	mov	r2, r4
	while (!((p_next->reg == OV_REG_TERM) &&
  400ca4:	f814 3c01 	ldrb.w	r3, [r4, #-1]
  400ca8:	2bff      	cmp	r3, #255	; 0xff
  400caa:	d0e9      	beq.n	400c80 <ov_write_regs+0x14>
		if (p_next->reg == 0xFE) {
  400cac:	2bfe      	cmp	r3, #254	; 0xfe
  400cae:	d1ea      	bne.n	400c86 <ov_write_regs+0x1a>
			delay_ms(5);
  400cb0:	f24a 706a 	movw	r0, #42858	; 0xa76a
  400cb4:	47c0      	blx	r8
  400cb6:	e7f3      	b.n	400ca0 <ov_write_regs+0x34>
			}
		}

		p_next++;
	}
	return 0;
  400cb8:	2000      	movs	r0, #0
}
  400cba:	b006      	add	sp, #24
  400cbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400cc0:	00400c61 	.word	0x00400c61
  400cc4:	20000001 	.word	0x20000001

00400cc8 <ov_configure>:
 * \param p_twi TWI interface.
 * \param format Specific format to configure.
 * \return 0 on success, 1 otherwise.
 */
uint32_t ov_configure(Twi* const p_twi, const e_OV2640_format format)
{
  400cc8:	b508      	push	{r3, lr}
	const ov_reg *p_regs_conf = NULL;

	/* Common register initialization */
	switch (format) {
  400cca:	2911      	cmp	r1, #17
  400ccc:	d82a      	bhi.n	400d24 <ov_configure+0x5c>
  400cce:	e8df f001 	tbb	[pc, r1]
  400cd2:	092b      	.short	0x092b
  400cd4:	0f0d0b2d 	.word	0x0f0d0b2d
  400cd8:	17151311 	.word	0x17151311
  400cdc:	1f1d1b19 	.word	0x1f1d1b19
  400ce0:	27252321 	.word	0x27252321
	case JPEG_INIT:
		p_regs_conf = OV2640_JPEG_INIT;
		break;
		
	case YUV422:
		p_regs_conf = OV2640_YUV422;
  400ce4:	4914      	ldr	r1, [pc, #80]	; (400d38 <ov_configure+0x70>)
  400ce6:	e022      	b.n	400d2e <ov_configure+0x66>
	case JPEG:
		p_regs_conf = OV2640_JPEG;
		break;
		
	case JPEG_320x240:
		p_regs_conf = OV2640_JPEG_320x240;
  400ce8:	4914      	ldr	r1, [pc, #80]	; (400d3c <ov_configure+0x74>)
		break;
  400cea:	e020      	b.n	400d2e <ov_configure+0x66>
		
	case JPEG_640x480:
		p_regs_conf = OV2640_JPEG_640x480;
  400cec:	4914      	ldr	r1, [pc, #80]	; (400d40 <ov_configure+0x78>)
		break;
  400cee:	e01e      	b.n	400d2e <ov_configure+0x66>
		
	case JPEG_800x600:
		p_regs_conf = OV2640_JPEG_800x600;
  400cf0:	4914      	ldr	r1, [pc, #80]	; (400d44 <ov_configure+0x7c>)
		break;
  400cf2:	e01c      	b.n	400d2e <ov_configure+0x66>
		
	case JPEG_1024x768:
		p_regs_conf = OV2640_JPEG_1024x768;
  400cf4:	4914      	ldr	r1, [pc, #80]	; (400d48 <ov_configure+0x80>)
		break;
  400cf6:	e01a      	b.n	400d2e <ov_configure+0x66>
		
	case JPEG_1280x1024:
		p_regs_conf = OV2640_JPEG_1280x1024;
  400cf8:	4914      	ldr	r1, [pc, #80]	; (400d4c <ov_configure+0x84>)
		break;
  400cfa:	e018      	b.n	400d2e <ov_configure+0x66>
		
	case JPEG_1600x1200:
		p_regs_conf = OV2640_JPEG_1600x1200;
  400cfc:	4914      	ldr	r1, [pc, #80]	; (400d50 <ov_configure+0x88>)
		break;
  400cfe:	e016      	b.n	400d2e <ov_configure+0x66>
		
	case QVGA_YUV422_10FPS:
		p_regs_conf = OV2640_QVGA_YUV422_10FPS;
  400d00:	4914      	ldr	r1, [pc, #80]	; (400d54 <ov_configure+0x8c>)
		break;
  400d02:	e014      	b.n	400d2e <ov_configure+0x66>

	case QVGA_YUV422_15FPS:
		p_regs_conf = OV2640_QVGA_YUV422_15FPS;
  400d04:	4914      	ldr	r1, [pc, #80]	; (400d58 <ov_configure+0x90>)
		break;
  400d06:	e012      	b.n	400d2e <ov_configure+0x66>

	case QVGA_YUV422_20FPS:
		p_regs_conf = OV2640_QVGA_YUV422_20FPS;
  400d08:	4914      	ldr	r1, [pc, #80]	; (400d5c <ov_configure+0x94>)
		break;
  400d0a:	e010      	b.n	400d2e <ov_configure+0x66>

	case QVGA_YUV422_30FPS:
		p_regs_conf = OV2640_QVGA_YUV422_30FPS;
  400d0c:	4914      	ldr	r1, [pc, #80]	; (400d60 <ov_configure+0x98>)
		break;
  400d0e:	e00e      	b.n	400d2e <ov_configure+0x66>

	case QVGA_RGB888:
		p_regs_conf = OV2640_QVGA_RGB888;
  400d10:	4914      	ldr	r1, [pc, #80]	; (400d64 <ov_configure+0x9c>)
		break;
  400d12:	e00c      	b.n	400d2e <ov_configure+0x66>

	case QQVGA_YUV422:
		p_regs_conf = OV2640_QQVGA_YUV422;
  400d14:	4914      	ldr	r1, [pc, #80]	; (400d68 <ov_configure+0xa0>)
		break;
  400d16:	e00a      	b.n	400d2e <ov_configure+0x66>

	case QQVGA_RGB888:
		p_regs_conf = OV2640_QQVGA_RGB888;
  400d18:	4914      	ldr	r1, [pc, #80]	; (400d6c <ov_configure+0xa4>)
		break;
  400d1a:	e008      	b.n	400d2e <ov_configure+0x66>

	case TEST_PATTERN:
		p_regs_conf = OV2640_TEST_PATTERN;
  400d1c:	4914      	ldr	r1, [pc, #80]	; (400d70 <ov_configure+0xa8>)
		break;
  400d1e:	e006      	b.n	400d2e <ov_configure+0x66>

	case VGA_YUV422_20FPS:
		p_regs_conf = OV2640_VGA_YUV422_20FPS;
  400d20:	4914      	ldr	r1, [pc, #80]	; (400d74 <ov_configure+0xac>)
		break;
  400d22:	e004      	b.n	400d2e <ov_configure+0x66>
	if (p_regs_conf != NULL) {
		ov_write_regs( p_twi, p_regs_conf );
		return 0;
	}

	return 1;
  400d24:	2001      	movs	r0, #1
  400d26:	bd08      	pop	{r3, pc}
		p_regs_conf = OV2640_JPEG_INIT;
  400d28:	4913      	ldr	r1, [pc, #76]	; (400d78 <ov_configure+0xb0>)
  400d2a:	e000      	b.n	400d2e <ov_configure+0x66>
		p_regs_conf = OV2640_JPEG;
  400d2c:	4913      	ldr	r1, [pc, #76]	; (400d7c <ov_configure+0xb4>)
		ov_write_regs( p_twi, p_regs_conf );
  400d2e:	4b14      	ldr	r3, [pc, #80]	; (400d80 <ov_configure+0xb8>)
  400d30:	4798      	blx	r3
		return 0;
  400d32:	2000      	movs	r0, #0
}
  400d34:	bd08      	pop	{r3, pc}
  400d36:	bf00      	nop
  400d38:	00406f78 	.word	0x00406f78
  400d3c:	00406480 	.word	0x00406480
  400d40:	004064d0 	.word	0x004064d0
  400d44:	00406524 	.word	0x00406524
  400d48:	00406388 	.word	0x00406388
  400d4c:	004063d8 	.word	0x004063d8
  400d50:	0040642c 	.word	0x0040642c
  400d54:	004069d4 	.word	0x004069d4
  400d58:	00406ac4 	.word	0x00406ac4
  400d5c:	00406bb4 	.word	0x00406bb4
  400d60:	00406ca4 	.word	0x00406ca4
  400d64:	004068e0 	.word	0x004068e0
  400d68:	004067ec 	.word	0x004067ec
  400d6c:	004066f8 	.word	0x004066f8
  400d70:	00406d94 	.word	0x00406d94
  400d74:	00406e88 	.word	0x00406e88
  400d78:	00406578 	.word	0x00406578
  400d7c:	00406374 	.word	0x00406374
  400d80:	00400c6d 	.word	0x00400c6d

00400d84 <TC0_Handler>:
 */ 

#include "timer_interface.h"

void TC0_Handler(void)
{
  400d84:	b508      	push	{r3, lr}
	uint32_t ul_status;

	// Read TC0 status.
	ul_status = tc_get_status(TC0, 0);
  400d86:	2100      	movs	r1, #0
  400d88:	4805      	ldr	r0, [pc, #20]	; (400da0 <TC0_Handler+0x1c>)
  400d8a:	4b06      	ldr	r3, [pc, #24]	; (400da4 <TC0_Handler+0x20>)
  400d8c:	4798      	blx	r3

	// RC compare.
	if ((ul_status & TC_SR_CPCS) == TC_SR_CPCS) {
  400d8e:	f010 0f10 	tst.w	r0, #16
  400d92:	d004      	beq.n	400d9e <TC0_Handler+0x1a>
		counts++;
  400d94:	4a04      	ldr	r2, [pc, #16]	; (400da8 <TC0_Handler+0x24>)
  400d96:	7813      	ldrb	r3, [r2, #0]
  400d98:	3301      	adds	r3, #1
  400d9a:	b2db      	uxtb	r3, r3
  400d9c:	7013      	strb	r3, [r2, #0]
  400d9e:	bd08      	pop	{r3, pc}
  400da0:	40010000 	.word	0x40010000
  400da4:	004006b5 	.word	0x004006b5
  400da8:	20000ab4 	.word	0x20000ab4

00400dac <configure_tc>:
	}
}

void configure_tc(void)
{
  400dac:	b530      	push	{r4, r5, lr}
  400dae:	b085      	sub	sp, #20

	// Get system clock.
	ul_sysclk = sysclk_get_cpu_hz();

	// Configure PMC.
	pmc_enable_periph_clk(ID_TC0);
  400db0:	2017      	movs	r0, #23
  400db2:	4b14      	ldr	r3, [pc, #80]	; (400e04 <configure_tc+0x58>)
  400db4:	4798      	blx	r3

	// Configure TC for a 1Hz frequency and trigger on RC compare.
	tc_find_mck_divisor(TC_FREQ, ul_sysclk, &ul_div, &ul_tcclks, ul_sysclk);
  400db6:	4d14      	ldr	r5, [pc, #80]	; (400e08 <configure_tc+0x5c>)
  400db8:	9500      	str	r5, [sp, #0]
  400dba:	ab02      	add	r3, sp, #8
  400dbc:	aa03      	add	r2, sp, #12
  400dbe:	4629      	mov	r1, r5
  400dc0:	2001      	movs	r0, #1
  400dc2:	4c12      	ldr	r4, [pc, #72]	; (400e0c <configure_tc+0x60>)
  400dc4:	47a0      	blx	r4
	tc_init(TC0, 0, ul_tcclks | TC_CMR_CPCTRG);
  400dc6:	4c12      	ldr	r4, [pc, #72]	; (400e10 <configure_tc+0x64>)
  400dc8:	9a02      	ldr	r2, [sp, #8]
  400dca:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
  400dce:	2100      	movs	r1, #0
  400dd0:	4620      	mov	r0, r4
  400dd2:	4b10      	ldr	r3, [pc, #64]	; (400e14 <configure_tc+0x68>)
  400dd4:	4798      	blx	r3
	tc_write_rc(TC0, 0, (ul_sysclk / ul_div) / TC_FREQ);
  400dd6:	9a03      	ldr	r2, [sp, #12]
  400dd8:	fbb5 f2f2 	udiv	r2, r5, r2
  400ddc:	2100      	movs	r1, #0
  400dde:	4620      	mov	r0, r4
  400de0:	4b0d      	ldr	r3, [pc, #52]	; (400e18 <configure_tc+0x6c>)
  400de2:	4798      	blx	r3
  400de4:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
  400de8:	4b0c      	ldr	r3, [pc, #48]	; (400e1c <configure_tc+0x70>)
  400dea:	601a      	str	r2, [r3, #0]

	// Configure and enable interrupt on RC compare.
	NVIC_EnableIRQ((IRQn_Type) ID_TC0);
	tc_enable_interrupt(TC0, 0, TC_IER_CPCS);
  400dec:	2210      	movs	r2, #16
  400dee:	2100      	movs	r1, #0
  400df0:	4620      	mov	r0, r4
  400df2:	4b0b      	ldr	r3, [pc, #44]	; (400e20 <configure_tc+0x74>)
  400df4:	4798      	blx	r3
	
	// Start the timer
	tc_start(TC0, 0);
  400df6:	2100      	movs	r1, #0
  400df8:	4620      	mov	r0, r4
  400dfa:	4b0a      	ldr	r3, [pc, #40]	; (400e24 <configure_tc+0x78>)
  400dfc:	4798      	blx	r3
  400dfe:	b005      	add	sp, #20
  400e00:	bd30      	pop	{r4, r5, pc}
  400e02:	bf00      	nop
  400e04:	00400631 	.word	0x00400631
  400e08:	07270e00 	.word	0x07270e00
  400e0c:	004006bd 	.word	0x004006bd
  400e10:	40010000 	.word	0x40010000
  400e14:	00400685 	.word	0x00400685
  400e18:	004006a5 	.word	0x004006a5
  400e1c:	e000e100 	.word	0xe000e100
  400e20:	004006ad 	.word	0x004006ad
  400e24:	0040069d 	.word	0x0040069d

00400e28 <process_data_wifi>:
	process_data_wifi();
	for (int jj=0;jj<MAX_INPUT_WIFI;jj++) input_line_wifi[jj] = 0;
	input_pos_wifi = 0;
}

void process_data_wifi(void) {
  400e28:	b508      	push	{r3, lr}
	// Processes the response of the ESP32, which should be stored in the buffer filled by process incoming byte wifi. This processing
	// should be looking for certain responses that the ESP32 should give, such as ?SUCCESS? when ?test? is sent to it.
	if (strstr(input_line_wifi, "SUCCESS")) {
  400e2a:	4909      	ldr	r1, [pc, #36]	; (400e50 <process_data_wifi+0x28>)
  400e2c:	4809      	ldr	r0, [pc, #36]	; (400e54 <process_data_wifi+0x2c>)
  400e2e:	4b0a      	ldr	r3, [pc, #40]	; (400e58 <process_data_wifi+0x30>)
  400e30:	4798      	blx	r3
  400e32:	b138      	cbz	r0, 400e44 <process_data_wifi+0x1c>
__always_inline static void arch_ioport_toggle_pin_level(ioport_pin_t pin)
{
	Pio *port = arch_ioport_pin_to_base(pin);
	ioport_port_mask_t mask = arch_ioport_pin_to_mask(pin);

	if (port->PIO_PDSR & arch_ioport_pin_to_mask(pin)) {
  400e34:	4b09      	ldr	r3, [pc, #36]	; (400e5c <process_data_wifi+0x34>)
  400e36:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
  400e38:	f013 0f01 	tst.w	r3, #1
  400e3c:	d103      	bne.n	400e46 <process_data_wifi+0x1e>
		port->PIO_CODR = mask;
	} else {
		port->PIO_SODR = mask;
  400e3e:	2201      	movs	r2, #1
  400e40:	4b06      	ldr	r3, [pc, #24]	; (400e5c <process_data_wifi+0x34>)
  400e42:	631a      	str	r2, [r3, #48]	; 0x30
  400e44:	bd08      	pop	{r3, pc}
		port->PIO_CODR = mask;
  400e46:	2201      	movs	r2, #1
  400e48:	4b04      	ldr	r3, [pc, #16]	; (400e5c <process_data_wifi+0x34>)
  400e4a:	635a      	str	r2, [r3, #52]	; 0x34
  400e4c:	bd08      	pop	{r3, pc}
  400e4e:	bf00      	nop
  400e50:	00406fa4 	.word	0x00406fa4
  400e54:	20000ab8 	.word	0x20000ab8
  400e58:	0040182d 	.word	0x0040182d
  400e5c:	600e0e00 	.word	0x600e0e00

00400e60 <wifi_command_response_handler>:
void wifi_command_response_handler(uint32_t ul_id, uint32_t ul_mask) {
  400e60:	b508      	push	{r3, lr}
	wifi_comm_success = true;
  400e62:	2201      	movs	r2, #1
  400e64:	4b07      	ldr	r3, [pc, #28]	; (400e84 <wifi_command_response_handler+0x24>)
  400e66:	701a      	strb	r2, [r3, #0]
	process_data_wifi();
  400e68:	4b07      	ldr	r3, [pc, #28]	; (400e88 <wifi_command_response_handler+0x28>)
  400e6a:	4798      	blx	r3
	for (int jj=0;jj<MAX_INPUT_WIFI;jj++) input_line_wifi[jj] = 0;
  400e6c:	2300      	movs	r3, #0
  400e6e:	4907      	ldr	r1, [pc, #28]	; (400e8c <wifi_command_response_handler+0x2c>)
  400e70:	461a      	mov	r2, r3
  400e72:	54ca      	strb	r2, [r1, r3]
  400e74:	3301      	adds	r3, #1
  400e76:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
  400e7a:	d1fa      	bne.n	400e72 <wifi_command_response_handler+0x12>
	input_pos_wifi = 0;
  400e7c:	2200      	movs	r2, #0
  400e7e:	4b04      	ldr	r3, [pc, #16]	; (400e90 <wifi_command_response_handler+0x30>)
  400e80:	601a      	str	r2, [r3, #0]
  400e82:	bd08      	pop	{r3, pc}
  400e84:	20000a6c 	.word	0x20000a6c
  400e88:	00400e29 	.word	0x00400e29
  400e8c:	20000ab8 	.word	0x20000ab8
  400e90:	20000a58 	.word	0x20000a58

00400e94 <configure_usart_wifi>:
			spi_write(SPI, transfer_index++, 0, 0);
		}
	}
}

void configure_usart_wifi(void) {
  400e94:	b530      	push	{r4, r5, lr}
  400e96:	b087      	sub	sp, #28
	// Configuration of USART port used to communicate with the ESP32.
	gpio_configure_pin(PIN_USART0_RXD_IDX, PIN_USART0_RXD_FLAGS);
  400e98:	4d18      	ldr	r5, [pc, #96]	; (400efc <configure_usart_wifi+0x68>)
  400e9a:	4629      	mov	r1, r5
  400e9c:	2005      	movs	r0, #5
  400e9e:	4c18      	ldr	r4, [pc, #96]	; (400f00 <configure_usart_wifi+0x6c>)
  400ea0:	47a0      	blx	r4
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
  400ea2:	4629      	mov	r1, r5
  400ea4:	2006      	movs	r0, #6
  400ea6:	47a0      	blx	r4
	
	static uint32_t ul_sysclk;
	const sam_usart_opt_t wifi_usart_settings = {
  400ea8:	466c      	mov	r4, sp
  400eaa:	4d16      	ldr	r5, [pc, #88]	; (400f04 <configure_usart_wifi+0x70>)
  400eac:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  400eae:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  400eb0:	e895 0003 	ldmia.w	r5, {r0, r1}
  400eb4:	e884 0003 	stmia.w	r4, {r0, r1}
		/* This field is only used in IrDA mode. */
		0
	};
	
	/* Get system clock. */
	ul_sysclk = sysclk_get_cpu_hz();
  400eb8:	4d13      	ldr	r5, [pc, #76]	; (400f08 <configure_usart_wifi+0x74>)
  400eba:	4b14      	ldr	r3, [pc, #80]	; (400f0c <configure_usart_wifi+0x78>)
  400ebc:	602b      	str	r3, [r5, #0]
	
	pmc_enable_periph_clk(WIFI_USART_ID);
  400ebe:	200e      	movs	r0, #14
  400ec0:	4b13      	ldr	r3, [pc, #76]	; (400f10 <configure_usart_wifi+0x7c>)
  400ec2:	4798      	blx	r3
	
	usart_init_rs232(WIFI_USART,&wifi_usart_settings,ul_sysclk);
  400ec4:	4c13      	ldr	r4, [pc, #76]	; (400f14 <configure_usart_wifi+0x80>)
  400ec6:	682a      	ldr	r2, [r5, #0]
  400ec8:	4669      	mov	r1, sp
  400eca:	4620      	mov	r0, r4
  400ecc:	4b12      	ldr	r3, [pc, #72]	; (400f18 <configure_usart_wifi+0x84>)
  400ece:	4798      	blx	r3

	/* Disable all the interrupts. */
	usart_disable_interrupt(WIFI_USART, ALL_INTERRUPT_MASK);
  400ed0:	f04f 31ff 	mov.w	r1, #4294967295
  400ed4:	4620      	mov	r0, r4
  400ed6:	4b11      	ldr	r3, [pc, #68]	; (400f1c <configure_usart_wifi+0x88>)
  400ed8:	4798      	blx	r3
	
	/* Enable TX & RX function. */
	usart_enable_tx(WIFI_USART);
  400eda:	4620      	mov	r0, r4
  400edc:	4b10      	ldr	r3, [pc, #64]	; (400f20 <configure_usart_wifi+0x8c>)
  400ede:	4798      	blx	r3
	usart_enable_rx(WIFI_USART);
  400ee0:	4620      	mov	r0, r4
  400ee2:	4b10      	ldr	r3, [pc, #64]	; (400f24 <configure_usart_wifi+0x90>)
  400ee4:	4798      	blx	r3

	usart_enable_interrupt(WIFI_USART, US_IER_RXRDY);
  400ee6:	2101      	movs	r1, #1
  400ee8:	4620      	mov	r0, r4
  400eea:	4b0f      	ldr	r3, [pc, #60]	; (400f28 <configure_usart_wifi+0x94>)
  400eec:	4798      	blx	r3
  400eee:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  400ef2:	4b0e      	ldr	r3, [pc, #56]	; (400f2c <configure_usart_wifi+0x98>)
  400ef4:	601a      	str	r2, [r3, #0]

	/* Configure and enable interrupt of USART. */
	NVIC_EnableIRQ(WIFI_USART_IRQn);
}
  400ef6:	b007      	add	sp, #28
  400ef8:	bd30      	pop	{r4, r5, pc}
  400efa:	bf00      	nop
  400efc:	08000001 	.word	0x08000001
  400f00:	004002c5 	.word	0x004002c5
  400f04:	00406f8c 	.word	0x00406f8c
  400f08:	20000a68 	.word	0x20000a68
  400f0c:	07270e00 	.word	0x07270e00
  400f10:	00400631 	.word	0x00400631
  400f14:	40024000 	.word	0x40024000
  400f18:	00400959 	.word	0x00400959
  400f1c:	004009bd 	.word	0x004009bd
  400f20:	004009ad 	.word	0x004009ad
  400f24:	004009b3 	.word	0x004009b3
  400f28:	004009b9 	.word	0x004009b9
  400f2c:	e000e100 	.word	0xe000e100

00400f30 <configure_wifi_comm_pin>:

void configure_wifi_comm_pin(void) {
  400f30:	b530      	push	{r4, r5, lr}
  400f32:	b083      	sub	sp, #12
	// Configuration of ?command complete? rising-edge interrupt.
	/* Configure PIO clock. */
	pmc_enable_periph_clk(WIFI_COMM_ID);
  400f34:	200c      	movs	r0, #12
  400f36:	4b0b      	ldr	r3, [pc, #44]	; (400f64 <configure_wifi_comm_pin+0x34>)
  400f38:	4798      	blx	r3

	/* Initialize PIO interrupt handler, see PIO definition in conf_board.h
	**/
	pio_handler_set(WIFI_COMM_PIO, WIFI_COMM_ID, WIFI_COMM_PIN_NUM, WIFI_COMM_ATTR, wifi_command_response_handler);
  400f3a:	4c0b      	ldr	r4, [pc, #44]	; (400f68 <configure_wifi_comm_pin+0x38>)
  400f3c:	4b0b      	ldr	r3, [pc, #44]	; (400f6c <configure_wifi_comm_pin+0x3c>)
  400f3e:	9300      	str	r3, [sp, #0]
  400f40:	2370      	movs	r3, #112	; 0x70
  400f42:	f44f 6280 	mov.w	r2, #1024	; 0x400
  400f46:	210c      	movs	r1, #12
  400f48:	4620      	mov	r0, r4
  400f4a:	4d09      	ldr	r5, [pc, #36]	; (400f70 <configure_wifi_comm_pin+0x40>)
  400f4c:	47a8      	blx	r5
  400f4e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  400f52:	4b08      	ldr	r3, [pc, #32]	; (400f74 <configure_wifi_comm_pin+0x44>)
  400f54:	601a      	str	r2, [r3, #0]

	/* Enable PIO controller IRQs. */
	NVIC_EnableIRQ((IRQn_Type)WIFI_COMM_ID);

	/* Enable PIO interrupt lines. */
	pio_enable_interrupt(WIFI_COMM_PIO, WIFI_COMM_PIN_NUM);
  400f56:	f44f 6180 	mov.w	r1, #1024	; 0x400
  400f5a:	4620      	mov	r0, r4
  400f5c:	4b06      	ldr	r3, [pc, #24]	; (400f78 <configure_wifi_comm_pin+0x48>)
  400f5e:	4798      	blx	r3
}
  400f60:	b003      	add	sp, #12
  400f62:	bd30      	pop	{r4, r5, pc}
  400f64:	00400631 	.word	0x00400631
  400f68:	400e1000 	.word	0x400e1000
  400f6c:	00400e61 	.word	0x00400e61
  400f70:	0040047d 	.word	0x0040047d
  400f74:	e000e100 	.word	0xe000e100
  400f78:	004002b3 	.word	0x004002b3

00400f7c <configure_wifi_provision_pin>:

void configure_wifi_provision_pin(void) { //
  400f7c:	b530      	push	{r4, r5, lr}
  400f7e:	b083      	sub	sp, #12
	// Configuration of button interrupt to initiate provisioning mode.
	// if flag then interrupt
	// This configures the ESP32 as an access point with SSID ?ESD1 XY?, where X is the fifth byte of the MAC address and Y is the 
	// sixth byte of the MAC address
	pmc_enable_periph_clk(WIFI_PROVIS_ID);
  400f80:	200b      	movs	r0, #11
  400f82:	4b0b      	ldr	r3, [pc, #44]	; (400fb0 <configure_wifi_provision_pin+0x34>)
  400f84:	4798      	blx	r3
	pio_handler_set(WIFI_PROVIS_PIO, WIFI_PROVIS_ID, WIFI_PROVIS_PIN_NUM, WIFI_PROVIS_ATTR, wifi_command_response_handler);
  400f86:	4c0b      	ldr	r4, [pc, #44]	; (400fb4 <configure_wifi_provision_pin+0x38>)
  400f88:	4b0b      	ldr	r3, [pc, #44]	; (400fb8 <configure_wifi_provision_pin+0x3c>)
  400f8a:	9300      	str	r3, [sp, #0]
  400f8c:	2370      	movs	r3, #112	; 0x70
  400f8e:	f44f 2280 	mov.w	r2, #262144	; 0x40000
  400f92:	210b      	movs	r1, #11
  400f94:	4620      	mov	r0, r4
  400f96:	4d09      	ldr	r5, [pc, #36]	; (400fbc <configure_wifi_provision_pin+0x40>)
  400f98:	47a8      	blx	r5
  400f9a:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400f9e:	4b08      	ldr	r3, [pc, #32]	; (400fc0 <configure_wifi_provision_pin+0x44>)
  400fa0:	601a      	str	r2, [r3, #0]
	NVIC_EnableIRQ((IRQn_Type)WIFI_PROVIS_ID);
	pio_enable_interrupt(WIFI_PROVIS_PIO, WIFI_PROVIS_PIN_NUM);
  400fa2:	f44f 2180 	mov.w	r1, #262144	; 0x40000
  400fa6:	4620      	mov	r0, r4
  400fa8:	4b06      	ldr	r3, [pc, #24]	; (400fc4 <configure_wifi_provision_pin+0x48>)
  400faa:	4798      	blx	r3
}
  400fac:	b003      	add	sp, #12
  400fae:	bd30      	pop	{r4, r5, pc}
  400fb0:	00400631 	.word	0x00400631
  400fb4:	400e0e00 	.word	0x400e0e00
  400fb8:	00400e61 	.word	0x00400e61
  400fbc:	0040047d 	.word	0x0040047d
  400fc0:	e000e100 	.word	0xe000e100
  400fc4:	004002b3 	.word	0x004002b3

00400fc8 <configure_spi>:

void configure_spi(void) {
  400fc8:	b510      	push	{r4, lr}
	// Configuration of SPI port and interrupts used to send images to the ESP32.
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  400fca:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400fce:	200c      	movs	r0, #12
  400fd0:	4c0e      	ldr	r4, [pc, #56]	; (40100c <configure_spi+0x44>)
  400fd2:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  400fd4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400fd8:	200d      	movs	r0, #13
  400fda:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  400fdc:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400fe0:	200e      	movs	r0, #14
  400fe2:	47a0      	blx	r4
	gpio_configure_pin(SPI_NPCS0_GPIO, SPI_NPCS0_FLAGS);
  400fe4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400fe8:	200b      	movs	r0, #11
  400fea:	47a0      	blx	r4
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400fec:	4b08      	ldr	r3, [pc, #32]	; (401010 <configure_spi+0x48>)
  400fee:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  400ff2:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  __ASM volatile ("dsb 0xF":::"memory");
  400ff6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  400ffa:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400ffe:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  401002:	2100      	movs	r1, #0
  401004:	f883 1315 	strb.w	r1, [r3, #789]	; 0x315
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  401008:	601a      	str	r2, [r3, #0]
  40100a:	bd10      	pop	{r4, pc}
  40100c:	004002c5 	.word	0x004002c5
  401010:	e000e100 	.word	0xe000e100

00401014 <prepare_spi_transfer>:
	spi_enable(SPI);
}

void prepare_spi_transfer(void) {
	// Set necessary parameters to prepare for SPI transfer.
	transfer_len = 100;
  401014:	2264      	movs	r2, #100	; 0x64
  401016:	4b03      	ldr	r3, [pc, #12]	; (401024 <prepare_spi_transfer+0x10>)
  401018:	601a      	str	r2, [r3, #0]
	transfer_index = 0;
  40101a:	2200      	movs	r2, #0
  40101c:	4b02      	ldr	r3, [pc, #8]	; (401028 <prepare_spi_transfer+0x14>)
  40101e:	601a      	str	r2, [r3, #0]
  401020:	4770      	bx	lr
  401022:	bf00      	nop
  401024:	20000a64 	.word	0x20000a64
  401028:	20000a60 	.word	0x20000a60

0040102c <write_wifi_command>:
}

void write_wifi_command(char* comm, uint8_t cnt) { //
  40102c:	b510      	push	{r4, lr}
  40102e:	460c      	mov	r4, r1
	// Writes a command (comm) to the ESP32, and waits either for an acknowledgment (via the ?command complete? pin)
	// or a timeout. The timeout can be created by setting the global variable counts to zero, which will automatically increment every second, 
	// and waiting while counts < cnt.
	
	usart_write_line(WIFI_USART,comm); // write command
  401030:	4601      	mov	r1, r0
  401032:	4808      	ldr	r0, [pc, #32]	; (401054 <write_wifi_command+0x28>)
  401034:	4b08      	ldr	r3, [pc, #32]	; (401058 <write_wifi_command+0x2c>)
  401036:	4798      	blx	r3
	// wait for acknowledgment or timeout 
	counts = 0;
  401038:	2200      	movs	r2, #0
  40103a:	4b08      	ldr	r3, [pc, #32]	; (40105c <write_wifi_command+0x30>)
  40103c:	701a      	strb	r2, [r3, #0]
	while (counts < cnt) {
  40103e:	461a      	mov	r2, r3
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
  401040:	4907      	ldr	r1, [pc, #28]	; (401060 <write_wifi_command+0x34>)
  401042:	7813      	ldrb	r3, [r2, #0]
  401044:	b2db      	uxtb	r3, r3
  401046:	42a3      	cmp	r3, r4
  401048:	d203      	bcs.n	401052 <write_wifi_command+0x26>
  40104a:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
		if (ioport_get_pin_level(COMMAND_COMPLETE) == true) {
  40104c:	f013 0f01 	tst.w	r3, #1
  401050:	d0f7      	beq.n	401042 <write_wifi_command+0x16>
  401052:	bd10      	pop	{r4, pc}
  401054:	40024000 	.word	0x40024000
  401058:	004009d5 	.word	0x004009d5
  40105c:	20000ab4 	.word	0x20000ab4
  401060:	420e0e00 	.word	0x420e0e00

00401064 <write_image_to_web>:
	// follow this protocol (illustrated in Appendix C):
	// 1. Configure the SPI interface to be ready for a transfer by setting its parameters appropriately.
	// 2. Issue the command ?image transfer xxxx?, where xxxx is replaced by the length of the image you want to transfer.
	// 3. The ESP32 will then set the ?command complete? pin low and begin transferring the image over SPI.
	// 4. After the image is done sending, the ESP32 will set the ?command complete? pin high. The MCU should sense this and then move on.
	if (transfer_len == 0) {
  401064:	4b09      	ldr	r3, [pc, #36]	; (40108c <write_image_to_web+0x28>)
  401066:	681b      	ldr	r3, [r3, #0]
  401068:	b903      	cbnz	r3, 40106c <write_image_to_web+0x8>
  40106a:	4770      	bx	lr
void write_image_to_web(void) { //
  40106c:	b510      	push	{r4, lr}
		return;
	}
	else {
		prepare_spi_transfer();
  40106e:	4b08      	ldr	r3, [pc, #32]	; (401090 <write_image_to_web+0x2c>)
  401070:	4798      	blx	r3
		char transfer_message;
		sprintf(transfer_message, "image transfer %i\n", transfer_len);
  401072:	4b06      	ldr	r3, [pc, #24]	; (40108c <write_image_to_web+0x28>)
  401074:	681a      	ldr	r2, [r3, #0]
  401076:	4907      	ldr	r1, [pc, #28]	; (401094 <write_image_to_web+0x30>)
  401078:	2400      	movs	r4, #0
  40107a:	4620      	mov	r0, r4
  40107c:	4b06      	ldr	r3, [pc, #24]	; (401098 <write_image_to_web+0x34>)
  40107e:	4798      	blx	r3
		write_wifi_command(transfer_message,1);		
  401080:	2101      	movs	r1, #1
  401082:	4620      	mov	r0, r4
  401084:	4b05      	ldr	r3, [pc, #20]	; (40109c <write_image_to_web+0x38>)
  401086:	4798      	blx	r3
  401088:	bd10      	pop	{r4, pc}
  40108a:	bf00      	nop
  40108c:	20000a64 	.word	0x20000a64
  401090:	00401015 	.word	0x00401015
  401094:	00406fac 	.word	0x00406fac
  401098:	00401531 	.word	0x00401531
  40109c:	0040102d 	.word	0x0040102d

004010a0 <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
  4010a0:	4770      	bx	lr

004010a2 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  4010a2:	e7fe      	b.n	4010a2 <Dummy_Handler>

004010a4 <Reset_Handler>:
{
  4010a4:	b508      	push	{r3, lr}
	if (pSrc > pDest) {
  4010a6:	4b21      	ldr	r3, [pc, #132]	; (40112c <Reset_Handler+0x88>)
  4010a8:	4a21      	ldr	r2, [pc, #132]	; (401130 <Reset_Handler+0x8c>)
  4010aa:	429a      	cmp	r2, r3
  4010ac:	d928      	bls.n	401100 <Reset_Handler+0x5c>
		for (; pDest < &_erelocate;) {
  4010ae:	4b21      	ldr	r3, [pc, #132]	; (401134 <Reset_Handler+0x90>)
  4010b0:	4a1e      	ldr	r2, [pc, #120]	; (40112c <Reset_Handler+0x88>)
  4010b2:	429a      	cmp	r2, r3
  4010b4:	d20c      	bcs.n	4010d0 <Reset_Handler+0x2c>
  4010b6:	3b01      	subs	r3, #1
  4010b8:	1a9b      	subs	r3, r3, r2
  4010ba:	f023 0303 	bic.w	r3, r3, #3
  4010be:	3304      	adds	r3, #4
  4010c0:	4413      	add	r3, r2
  4010c2:	491b      	ldr	r1, [pc, #108]	; (401130 <Reset_Handler+0x8c>)
			*pDest++ = *pSrc++;
  4010c4:	f851 0b04 	ldr.w	r0, [r1], #4
  4010c8:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
  4010cc:	429a      	cmp	r2, r3
  4010ce:	d1f9      	bne.n	4010c4 <Reset_Handler+0x20>
	__NOP();
  4010d0:	bf00      	nop
	for (pDest = &_szero; pDest < &_ezero;) {
  4010d2:	4b19      	ldr	r3, [pc, #100]	; (401138 <Reset_Handler+0x94>)
  4010d4:	4a19      	ldr	r2, [pc, #100]	; (40113c <Reset_Handler+0x98>)
  4010d6:	429a      	cmp	r2, r3
  4010d8:	d20a      	bcs.n	4010f0 <Reset_Handler+0x4c>
  4010da:	3b01      	subs	r3, #1
  4010dc:	1a9b      	subs	r3, r3, r2
  4010de:	f023 0303 	bic.w	r3, r3, #3
  4010e2:	3304      	adds	r3, #4
  4010e4:	4413      	add	r3, r2
		*pDest++ = 0;
  4010e6:	2100      	movs	r1, #0
  4010e8:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
  4010ec:	429a      	cmp	r2, r3
  4010ee:	d1fb      	bne.n	4010e8 <Reset_Handler+0x44>
	SCB->VTOR = ((uint32_t) pSrc);
  4010f0:	4b13      	ldr	r3, [pc, #76]	; (401140 <Reset_Handler+0x9c>)
  4010f2:	4a14      	ldr	r2, [pc, #80]	; (401144 <Reset_Handler+0xa0>)
  4010f4:	609a      	str	r2, [r3, #8]
	__libc_init_array();
  4010f6:	4b14      	ldr	r3, [pc, #80]	; (401148 <Reset_Handler+0xa4>)
  4010f8:	4798      	blx	r3
	main();
  4010fa:	4b14      	ldr	r3, [pc, #80]	; (40114c <Reset_Handler+0xa8>)
  4010fc:	4798      	blx	r3
  4010fe:	e7fe      	b.n	4010fe <Reset_Handler+0x5a>
	} else if (pSrc < pDest) {
  401100:	4b0a      	ldr	r3, [pc, #40]	; (40112c <Reset_Handler+0x88>)
  401102:	4a0b      	ldr	r2, [pc, #44]	; (401130 <Reset_Handler+0x8c>)
  401104:	429a      	cmp	r2, r3
  401106:	d2e3      	bcs.n	4010d0 <Reset_Handler+0x2c>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  401108:	4b0a      	ldr	r3, [pc, #40]	; (401134 <Reset_Handler+0x90>)
  40110a:	4808      	ldr	r0, [pc, #32]	; (40112c <Reset_Handler+0x88>)
  40110c:	1a18      	subs	r0, r3, r0
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  40110e:	4611      	mov	r1, r2
  401110:	3a04      	subs	r2, #4
  401112:	4402      	add	r2, r0
		for (;nb_bytes;nb_bytes -= 4) {
  401114:	2800      	cmp	r0, #0
  401116:	d0db      	beq.n	4010d0 <Reset_Handler+0x2c>
  401118:	f1c1 0104 	rsb	r1, r1, #4
			*pDest-- = *pSrc--;
  40111c:	f852 0904 	ldr.w	r0, [r2], #-4
  401120:	f843 0d04 	str.w	r0, [r3, #-4]!
		for (;nb_bytes;nb_bytes -= 4) {
  401124:	42ca      	cmn	r2, r1
  401126:	d1f9      	bne.n	40111c <Reset_Handler+0x78>
  401128:	e7d2      	b.n	4010d0 <Reset_Handler+0x2c>
  40112a:	bf00      	nop
  40112c:	20000000 	.word	0x20000000
  401130:	0040728c 	.word	0x0040728c
  401134:	200009c0 	.word	0x200009c0
  401138:	20000ec8 	.word	0x20000ec8
  40113c:	200009c0 	.word	0x200009c0
  401140:	e000ed00 	.word	0xe000ed00
  401144:	00400000 	.word	0x00400000
  401148:	00401445 	.word	0x00401445
  40114c:	0040130d 	.word	0x0040130d

00401150 <SystemCoreClockUpdate>:
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  401150:	4b3c      	ldr	r3, [pc, #240]	; (401244 <SystemCoreClockUpdate+0xf4>)
  401152:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401154:	f003 0303 	and.w	r3, r3, #3
  401158:	2b03      	cmp	r3, #3
  40115a:	d80e      	bhi.n	40117a <SystemCoreClockUpdate+0x2a>
  40115c:	e8df f003 	tbb	[pc, r3]
  401160:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  401164:	4b38      	ldr	r3, [pc, #224]	; (401248 <SystemCoreClockUpdate+0xf8>)
  401166:	695b      	ldr	r3, [r3, #20]
  401168:	f013 0f80 	tst.w	r3, #128	; 0x80
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  40116c:	bf14      	ite	ne
  40116e:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  401172:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  401176:	4b35      	ldr	r3, [pc, #212]	; (40124c <SystemCoreClockUpdate+0xfc>)
  401178:	601a      	str	r2, [r3, #0]
		
	default:
		break;
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  40117a:	4b32      	ldr	r3, [pc, #200]	; (401244 <SystemCoreClockUpdate+0xf4>)
  40117c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40117e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401182:	2b70      	cmp	r3, #112	; 0x70
  401184:	d055      	beq.n	401232 <SystemCoreClockUpdate+0xe2>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  401186:	4b2f      	ldr	r3, [pc, #188]	; (401244 <SystemCoreClockUpdate+0xf4>)
  401188:	6b1a      	ldr	r2, [r3, #48]	; 0x30
		SystemCoreClock >>=
  40118a:	4930      	ldr	r1, [pc, #192]	; (40124c <SystemCoreClockUpdate+0xfc>)
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  40118c:	f3c2 1202 	ubfx	r2, r2, #4, #3
		SystemCoreClock >>=
  401190:	680b      	ldr	r3, [r1, #0]
  401192:	40d3      	lsrs	r3, r2
  401194:	600b      	str	r3, [r1, #0]
  401196:	4770      	bx	lr
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  401198:	4b2a      	ldr	r3, [pc, #168]	; (401244 <SystemCoreClockUpdate+0xf4>)
  40119a:	6a1b      	ldr	r3, [r3, #32]
  40119c:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4011a0:	d003      	beq.n	4011aa <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL;
  4011a2:	4a2b      	ldr	r2, [pc, #172]	; (401250 <SystemCoreClockUpdate+0x100>)
  4011a4:	4b29      	ldr	r3, [pc, #164]	; (40124c <SystemCoreClockUpdate+0xfc>)
  4011a6:	601a      	str	r2, [r3, #0]
  4011a8:	e7e7      	b.n	40117a <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4011aa:	4a2a      	ldr	r2, [pc, #168]	; (401254 <SystemCoreClockUpdate+0x104>)
  4011ac:	4b27      	ldr	r3, [pc, #156]	; (40124c <SystemCoreClockUpdate+0xfc>)
  4011ae:	601a      	str	r2, [r3, #0]
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  4011b0:	4b24      	ldr	r3, [pc, #144]	; (401244 <SystemCoreClockUpdate+0xf4>)
  4011b2:	6a1b      	ldr	r3, [r3, #32]
  4011b4:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4011b8:	2b10      	cmp	r3, #16
  4011ba:	d005      	beq.n	4011c8 <SystemCoreClockUpdate+0x78>
  4011bc:	2b20      	cmp	r3, #32
  4011be:	d1dc      	bne.n	40117a <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  4011c0:	4a23      	ldr	r2, [pc, #140]	; (401250 <SystemCoreClockUpdate+0x100>)
  4011c2:	4b22      	ldr	r3, [pc, #136]	; (40124c <SystemCoreClockUpdate+0xfc>)
  4011c4:	601a      	str	r2, [r3, #0]
			break;
  4011c6:	e7d8      	b.n	40117a <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  4011c8:	4a23      	ldr	r2, [pc, #140]	; (401258 <SystemCoreClockUpdate+0x108>)
  4011ca:	4b20      	ldr	r3, [pc, #128]	; (40124c <SystemCoreClockUpdate+0xfc>)
  4011cc:	601a      	str	r2, [r3, #0]
			break;
  4011ce:	e7d4      	b.n	40117a <SystemCoreClockUpdate+0x2a>
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  4011d0:	4b1c      	ldr	r3, [pc, #112]	; (401244 <SystemCoreClockUpdate+0xf4>)
  4011d2:	6a1b      	ldr	r3, [r3, #32]
  4011d4:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4011d8:	d018      	beq.n	40120c <SystemCoreClockUpdate+0xbc>
				SystemCoreClock = CHIP_FREQ_XTAL;
  4011da:	4a1d      	ldr	r2, [pc, #116]	; (401250 <SystemCoreClockUpdate+0x100>)
  4011dc:	4b1b      	ldr	r3, [pc, #108]	; (40124c <SystemCoreClockUpdate+0xfc>)
  4011de:	601a      	str	r2, [r3, #0]
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  4011e0:	4b18      	ldr	r3, [pc, #96]	; (401244 <SystemCoreClockUpdate+0xf4>)
  4011e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4011e4:	f003 0303 	and.w	r3, r3, #3
  4011e8:	2b02      	cmp	r3, #2
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  4011ea:	4a16      	ldr	r2, [pc, #88]	; (401244 <SystemCoreClockUpdate+0xf4>)
  4011ec:	bf07      	ittee	eq
  4011ee:	6a91      	ldreq	r1, [r2, #40]	; 0x28
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  4011f0:	6a92      	ldreq	r2, [r2, #40]	; 0x28
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  4011f2:	6ad1      	ldrne	r1, [r2, #44]	; 0x2c
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  4011f4:	6ad2      	ldrne	r2, [r2, #44]	; 0x2c
  4011f6:	4815      	ldr	r0, [pc, #84]	; (40124c <SystemCoreClockUpdate+0xfc>)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  4011f8:	f3c1 410a 	ubfx	r1, r1, #16, #11
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  4011fc:	6803      	ldr	r3, [r0, #0]
  4011fe:	fb01 3303 	mla	r3, r1, r3, r3
						>> CKGR_PLLBR_DIVB_Pos));
  401202:	b2d2      	uxtb	r2, r2
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  401204:	fbb3 f3f2 	udiv	r3, r3, r2
  401208:	6003      	str	r3, [r0, #0]
  40120a:	e7b6      	b.n	40117a <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40120c:	4a11      	ldr	r2, [pc, #68]	; (401254 <SystemCoreClockUpdate+0x104>)
  40120e:	4b0f      	ldr	r3, [pc, #60]	; (40124c <SystemCoreClockUpdate+0xfc>)
  401210:	601a      	str	r2, [r3, #0]
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  401212:	4b0c      	ldr	r3, [pc, #48]	; (401244 <SystemCoreClockUpdate+0xf4>)
  401214:	6a1b      	ldr	r3, [r3, #32]
  401216:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40121a:	2b10      	cmp	r3, #16
  40121c:	d005      	beq.n	40122a <SystemCoreClockUpdate+0xda>
  40121e:	2b20      	cmp	r3, #32
  401220:	d1de      	bne.n	4011e0 <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  401222:	4a0b      	ldr	r2, [pc, #44]	; (401250 <SystemCoreClockUpdate+0x100>)
  401224:	4b09      	ldr	r3, [pc, #36]	; (40124c <SystemCoreClockUpdate+0xfc>)
  401226:	601a      	str	r2, [r3, #0]
					break;
  401228:	e7da      	b.n	4011e0 <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  40122a:	4a0b      	ldr	r2, [pc, #44]	; (401258 <SystemCoreClockUpdate+0x108>)
  40122c:	4b07      	ldr	r3, [pc, #28]	; (40124c <SystemCoreClockUpdate+0xfc>)
  40122e:	601a      	str	r2, [r3, #0]
					break;
  401230:	e7d6      	b.n	4011e0 <SystemCoreClockUpdate+0x90>
		SystemCoreClock /= 3U;
  401232:	4a06      	ldr	r2, [pc, #24]	; (40124c <SystemCoreClockUpdate+0xfc>)
  401234:	6813      	ldr	r3, [r2, #0]
  401236:	4909      	ldr	r1, [pc, #36]	; (40125c <SystemCoreClockUpdate+0x10c>)
  401238:	fba1 1303 	umull	r1, r3, r1, r3
  40123c:	085b      	lsrs	r3, r3, #1
  40123e:	6013      	str	r3, [r2, #0]
  401240:	4770      	bx	lr
  401242:	bf00      	nop
  401244:	400e0400 	.word	0x400e0400
  401248:	400e1410 	.word	0x400e1410
  40124c:	2000000c 	.word	0x2000000c
  401250:	00b71b00 	.word	0x00b71b00
  401254:	003d0900 	.word	0x003d0900
  401258:	007a1200 	.word	0x007a1200
  40125c:	aaaaaaab 	.word	0xaaaaaaab

00401260 <system_init_flash>:
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
#if !defined(ID_EFC1)
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  401260:	4b12      	ldr	r3, [pc, #72]	; (4012ac <system_init_flash+0x4c>)
  401262:	4298      	cmp	r0, r3
  401264:	d911      	bls.n	40128a <system_init_flash+0x2a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  401266:	4b12      	ldr	r3, [pc, #72]	; (4012b0 <system_init_flash+0x50>)
  401268:	4298      	cmp	r0, r3
  40126a:	d913      	bls.n	401294 <system_init_flash+0x34>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  40126c:	4b11      	ldr	r3, [pc, #68]	; (4012b4 <system_init_flash+0x54>)
  40126e:	4298      	cmp	r0, r3
  401270:	d914      	bls.n	40129c <system_init_flash+0x3c>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  401272:	4b11      	ldr	r3, [pc, #68]	; (4012b8 <system_init_flash+0x58>)
  401274:	4298      	cmp	r0, r3
  401276:	d915      	bls.n	4012a4 <system_init_flash+0x44>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  401278:	4b10      	ldr	r3, [pc, #64]	; (4012bc <system_init_flash+0x5c>)
  40127a:	4298      	cmp	r0, r3
					EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  40127c:	bf94      	ite	ls
  40127e:	f04f 2204 	movls.w	r2, #67109888	; 0x4000400
					} else {
					EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  401282:	4a0f      	ldrhi	r2, [pc, #60]	; (4012c0 <system_init_flash+0x60>)
  401284:	4b0f      	ldr	r3, [pc, #60]	; (4012c4 <system_init_flash+0x64>)
  401286:	601a      	str	r2, [r3, #0]
  401288:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  40128a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  40128e:	4b0d      	ldr	r3, [pc, #52]	; (4012c4 <system_init_flash+0x64>)
  401290:	601a      	str	r2, [r3, #0]
  401292:	4770      	bx	lr
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  401294:	4a0c      	ldr	r2, [pc, #48]	; (4012c8 <system_init_flash+0x68>)
  401296:	4b0b      	ldr	r3, [pc, #44]	; (4012c4 <system_init_flash+0x64>)
  401298:	601a      	str	r2, [r3, #0]
  40129a:	4770      	bx	lr
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  40129c:	4a0b      	ldr	r2, [pc, #44]	; (4012cc <system_init_flash+0x6c>)
  40129e:	4b09      	ldr	r3, [pc, #36]	; (4012c4 <system_init_flash+0x64>)
  4012a0:	601a      	str	r2, [r3, #0]
  4012a2:	4770      	bx	lr
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  4012a4:	4a0a      	ldr	r2, [pc, #40]	; (4012d0 <system_init_flash+0x70>)
  4012a6:	4b07      	ldr	r3, [pc, #28]	; (4012c4 <system_init_flash+0x64>)
  4012a8:	601a      	str	r2, [r3, #0]
  4012aa:	4770      	bx	lr
  4012ac:	01312cff 	.word	0x01312cff
  4012b0:	026259ff 	.word	0x026259ff
  4012b4:	039386ff 	.word	0x039386ff
  4012b8:	04c4b3ff 	.word	0x04c4b3ff
  4012bc:	05f5e0ff 	.word	0x05f5e0ff
  4012c0:	04000500 	.word	0x04000500
  4012c4:	400e0a00 	.word	0x400e0a00
  4012c8:	04000100 	.word	0x04000100
  4012cc:	04000200 	.word	0x04000200
  4012d0:	04000300 	.word	0x04000300

004012d4 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  4012d4:	4b0a      	ldr	r3, [pc, #40]	; (401300 <_sbrk+0x2c>)
  4012d6:	681b      	ldr	r3, [r3, #0]
  4012d8:	b153      	cbz	r3, 4012f0 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  4012da:	4b09      	ldr	r3, [pc, #36]	; (401300 <_sbrk+0x2c>)
  4012dc:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  4012de:	181a      	adds	r2, r3, r0
  4012e0:	4908      	ldr	r1, [pc, #32]	; (401304 <_sbrk+0x30>)
  4012e2:	4291      	cmp	r1, r2
  4012e4:	db08      	blt.n	4012f8 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  4012e6:	4610      	mov	r0, r2
  4012e8:	4a05      	ldr	r2, [pc, #20]	; (401300 <_sbrk+0x2c>)
  4012ea:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  4012ec:	4618      	mov	r0, r3
  4012ee:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  4012f0:	4a05      	ldr	r2, [pc, #20]	; (401308 <_sbrk+0x34>)
  4012f2:	4b03      	ldr	r3, [pc, #12]	; (401300 <_sbrk+0x2c>)
  4012f4:	601a      	str	r2, [r3, #0]
  4012f6:	e7f0      	b.n	4012da <_sbrk+0x6>
		return (caddr_t) -1;	
  4012f8:	f04f 30ff 	mov.w	r0, #4294967295
}
  4012fc:	4770      	bx	lr
  4012fe:	bf00      	nop
  401300:	20000a70 	.word	0x20000a70
  401304:	2001fffc 	.word	0x2001fffc
  401308:	20003ec8 	.word	0x20003ec8

0040130c <main>:
#include "camera.h"
#include "timer_interface.h"
#include "camera_helper/ov2640.h"
#include <asf.h>

int main(void) {
  40130c:	b580      	push	{r7, lr}
	// Initialize clock and board definitions
	sysclk_init();
  40130e:	4b34      	ldr	r3, [pc, #208]	; (4013e0 <main+0xd4>)
  401310:	4798      	blx	r3
	board_init();
  401312:	4b34      	ldr	r3, [pc, #208]	; (4013e4 <main+0xd8>)
  401314:	4798      	blx	r3
	
	// Configure and start the Timer
	configure_tc();
  401316:	4b34      	ldr	r3, [pc, #208]	; (4013e8 <main+0xdc>)
  401318:	4798      	blx	r3
	
	// Configure WiFi USART, SPI, and pins
	configure_usart_wifi();
  40131a:	4b34      	ldr	r3, [pc, #208]	; (4013ec <main+0xe0>)
  40131c:	4798      	blx	r3
	configure_spi();
  40131e:	4b34      	ldr	r3, [pc, #208]	; (4013f0 <main+0xe4>)
  401320:	4798      	blx	r3
	configure_wifi_comm_pin();
  401322:	4b34      	ldr	r3, [pc, #208]	; (4013f4 <main+0xe8>)
  401324:	4798      	blx	r3
	configure_wifi_provision_pin();
  401326:	4b34      	ldr	r3, [pc, #208]	; (4013f8 <main+0xec>)
  401328:	4798      	blx	r3
	
	// Initialize and configure camera
	init_camera();
  40132a:	4b34      	ldr	r3, [pc, #208]	; (4013fc <main+0xf0>)
  40132c:	4798      	blx	r3
	configure_camera();
  40132e:	4b34      	ldr	r3, [pc, #208]	; (401400 <main+0xf4>)
  401330:	4798      	blx	r3
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  401332:	4c34      	ldr	r4, [pc, #208]	; (401404 <main+0xf8>)
  401334:	2501      	movs	r5, #1
  401336:	6365      	str	r5, [r4, #52]	; 0x34
	
	// Reset WiFi and wait for connection
	ioport_set_pin_level(WIFI_RESET, false);
	delay_ms(100);
  401338:	4833      	ldr	r0, [pc, #204]	; (401408 <main+0xfc>)
  40133a:	4b34      	ldr	r3, [pc, #208]	; (40140c <main+0x100>)
  40133c:	4798      	blx	r3
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  40133e:	6325      	str	r5, [r4, #48]	; 0x30
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
  401340:	4b33      	ldr	r3, [pc, #204]	; (401410 <main+0x104>)
  401342:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
	ioport_set_pin_level(WIFI_RESET, true);
	
	while (!ioport_get_pin_level(WIFI_GPIO_23)) { // Choose: connection pin 23
  401344:	f013 0f01 	tst.w	r3, #1
  401348:	d114      	bne.n	401374 <main+0x68>
		if (provision_flag) {
  40134a:	4c32      	ldr	r4, [pc, #200]	; (401414 <main+0x108>)
			write_wifi_command("provision\r\n", 5); 
			provision_flag = 0;
		}
		delay_ms(1000);
  40134c:	4e32      	ldr	r6, [pc, #200]	; (401418 <main+0x10c>)
  40134e:	4d30      	ldr	r5, [pc, #192]	; (401410 <main+0x104>)
  401350:	e006      	b.n	401360 <main+0x54>
  401352:	4630      	mov	r0, r6
  401354:	4b2d      	ldr	r3, [pc, #180]	; (40140c <main+0x100>)
  401356:	4798      	blx	r3
  401358:	6beb      	ldr	r3, [r5, #60]	; 0x3c
	while (!ioport_get_pin_level(WIFI_GPIO_23)) { // Choose: connection pin 23
  40135a:	f013 0f01 	tst.w	r3, #1
  40135e:	d109      	bne.n	401374 <main+0x68>
		if (provision_flag) {
  401360:	7823      	ldrb	r3, [r4, #0]
  401362:	2b00      	cmp	r3, #0
  401364:	d0f5      	beq.n	401352 <main+0x46>
			write_wifi_command("provision\r\n", 5); 
  401366:	2105      	movs	r1, #5
  401368:	482c      	ldr	r0, [pc, #176]	; (40141c <main+0x110>)
  40136a:	4b2d      	ldr	r3, [pc, #180]	; (401420 <main+0x114>)
  40136c:	4798      	blx	r3
			provision_flag = 0;
  40136e:	2300      	movs	r3, #0
  401370:	7023      	strb	r3, [r4, #0]
  401372:	e7ee      	b.n	401352 <main+0x46>
	}
	
	// Send test command to WiFi module
	while (1) {
		write_wifi_command("test\r\n", 10);
  401374:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 401440 <main+0x134>
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  401378:	4c22      	ldr	r4, [pc, #136]	; (401404 <main+0xf8>)
			break;
		}
		ioport_set_pin_level(WIFI_RESET, false);
		delay_ms(100);
		ioport_set_pin_level(WIFI_RESET, true);
		delay_ms(10000);
  40137a:	4f2a      	ldr	r7, [pc, #168]	; (401424 <main+0x118>)
		write_wifi_command("test\r\n", 10);
  40137c:	210a      	movs	r1, #10
  40137e:	4640      	mov	r0, r8
  401380:	4b27      	ldr	r3, [pc, #156]	; (401420 <main+0x114>)
  401382:	4798      	blx	r3
		if (strstr((char*)input_line_wifi, "SUCCESS")) {
  401384:	4928      	ldr	r1, [pc, #160]	; (401428 <main+0x11c>)
  401386:	4829      	ldr	r0, [pc, #164]	; (40142c <main+0x120>)
  401388:	4b29      	ldr	r3, [pc, #164]	; (401430 <main+0x124>)
  40138a:	4798      	blx	r3
  40138c:	b940      	cbnz	r0, 4013a0 <main+0x94>
  40138e:	2601      	movs	r6, #1
  401390:	6366      	str	r6, [r4, #52]	; 0x34
		delay_ms(100);
  401392:	481d      	ldr	r0, [pc, #116]	; (401408 <main+0xfc>)
  401394:	4d1d      	ldr	r5, [pc, #116]	; (40140c <main+0x100>)
  401396:	47a8      	blx	r5
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  401398:	6326      	str	r6, [r4, #48]	; 0x30
		delay_ms(10000);
  40139a:	4638      	mov	r0, r7
  40139c:	47a8      	blx	r5
		write_wifi_command("test\r\n", 10);
  40139e:	e7ed      	b.n	40137c <main+0x70>
	}
	
	// Main loop
	while (1) {
		// Check for provisioning request
		if (provision_flag) {
  4013a0:	4c1c      	ldr	r4, [pc, #112]	; (401414 <main+0x108>)
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
  4013a2:	4d1b      	ldr	r5, [pc, #108]	; (401410 <main+0x104>)
  4013a4:	4e23      	ldr	r6, [pc, #140]	; (401434 <main+0x128>)
  4013a6:	e009      	b.n	4013bc <main+0xb0>
			write_wifi_command("provision\r\n", 5);
  4013a8:	2105      	movs	r1, #5
  4013aa:	481c      	ldr	r0, [pc, #112]	; (40141c <main+0x110>)
  4013ac:	4b1c      	ldr	r3, [pc, #112]	; (401420 <main+0x114>)
  4013ae:	4798      	blx	r3
			provision_flag = 0;
  4013b0:	2300      	movs	r3, #0
  4013b2:	7023      	strb	r3, [r4, #0]
  4013b4:	e005      	b.n	4013c2 <main+0xb6>
			if (start_capture()) {
				write_image_to_web();
			}
		}
		
		delay_ms(100);
  4013b6:	4814      	ldr	r0, [pc, #80]	; (401408 <main+0xfc>)
  4013b8:	4b14      	ldr	r3, [pc, #80]	; (40140c <main+0x100>)
  4013ba:	4798      	blx	r3
		if (provision_flag) {
  4013bc:	7823      	ldrb	r3, [r4, #0]
  4013be:	2b00      	cmp	r3, #0
  4013c0:	d1f2      	bne.n	4013a8 <main+0x9c>
  4013c2:	6beb      	ldr	r3, [r5, #60]	; 0x3c
		if (ioport_get_pin_level(WIFI_GPIO_23) && ioport_get_pin_level(WIFI_GPIO_32)) {
  4013c4:	f013 0f01 	tst.w	r3, #1
  4013c8:	d0f5      	beq.n	4013b6 <main+0xaa>
  4013ca:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
  4013cc:	f013 0f01 	tst.w	r3, #1
  4013d0:	d0f1      	beq.n	4013b6 <main+0xaa>
			if (start_capture()) {
  4013d2:	4b19      	ldr	r3, [pc, #100]	; (401438 <main+0x12c>)
  4013d4:	4798      	blx	r3
  4013d6:	2800      	cmp	r0, #0
  4013d8:	d0ed      	beq.n	4013b6 <main+0xaa>
				write_image_to_web();
  4013da:	4b18      	ldr	r3, [pc, #96]	; (40143c <main+0x130>)
  4013dc:	4798      	blx	r3
  4013de:	e7ea      	b.n	4013b6 <main+0xaa>
  4013e0:	00400139 	.word	0x00400139
  4013e4:	004010a1 	.word	0x004010a1
  4013e8:	00400dad 	.word	0x00400dad
  4013ec:	00400e95 	.word	0x00400e95
  4013f0:	00400fc9 	.word	0x00400fc9
  4013f4:	00400f31 	.word	0x00400f31
  4013f8:	00400f7d 	.word	0x00400f7d
  4013fc:	00400b61 	.word	0x00400b61
  401400:	00400bbd 	.word	0x00400bbd
  401404:	408e0e00 	.word	0x408e0e00
  401408:	000d1437 	.word	0x000d1437
  40140c:	20000001 	.word	0x20000001
  401410:	400e1e00 	.word	0x400e1e00
  401414:	20000a5c 	.word	0x20000a5c
  401418:	0082ca25 	.word	0x0082ca25
  40141c:	00406fc0 	.word	0x00406fc0
  401420:	0040102d 	.word	0x0040102d
  401424:	051be56e 	.word	0x051be56e
  401428:	00406fa4 	.word	0x00406fa4
  40142c:	20000ab8 	.word	0x20000ab8
  401430:	0040182d 	.word	0x0040182d
  401434:	400e2e00 	.word	0x400e2e00
  401438:	00400bf5 	.word	0x00400bf5
  40143c:	00401065 	.word	0x00401065
  401440:	00406fcc 	.word	0x00406fcc

00401444 <__libc_init_array>:
  401444:	b570      	push	{r4, r5, r6, lr}
  401446:	4e0f      	ldr	r6, [pc, #60]	; (401484 <__libc_init_array+0x40>)
  401448:	4d0f      	ldr	r5, [pc, #60]	; (401488 <__libc_init_array+0x44>)
  40144a:	1b76      	subs	r6, r6, r5
  40144c:	10b6      	asrs	r6, r6, #2
  40144e:	bf18      	it	ne
  401450:	2400      	movne	r4, #0
  401452:	d005      	beq.n	401460 <__libc_init_array+0x1c>
  401454:	3401      	adds	r4, #1
  401456:	f855 3b04 	ldr.w	r3, [r5], #4
  40145a:	4798      	blx	r3
  40145c:	42a6      	cmp	r6, r4
  40145e:	d1f9      	bne.n	401454 <__libc_init_array+0x10>
  401460:	4e0a      	ldr	r6, [pc, #40]	; (40148c <__libc_init_array+0x48>)
  401462:	4d0b      	ldr	r5, [pc, #44]	; (401490 <__libc_init_array+0x4c>)
  401464:	1b76      	subs	r6, r6, r5
  401466:	f005 fefb 	bl	407260 <_init>
  40146a:	10b6      	asrs	r6, r6, #2
  40146c:	bf18      	it	ne
  40146e:	2400      	movne	r4, #0
  401470:	d006      	beq.n	401480 <__libc_init_array+0x3c>
  401472:	3401      	adds	r4, #1
  401474:	f855 3b04 	ldr.w	r3, [r5], #4
  401478:	4798      	blx	r3
  40147a:	42a6      	cmp	r6, r4
  40147c:	d1f9      	bne.n	401472 <__libc_init_array+0x2e>
  40147e:	bd70      	pop	{r4, r5, r6, pc}
  401480:	bd70      	pop	{r4, r5, r6, pc}
  401482:	bf00      	nop
  401484:	0040726c 	.word	0x0040726c
  401488:	0040726c 	.word	0x0040726c
  40148c:	00407274 	.word	0x00407274
  401490:	0040726c 	.word	0x0040726c

00401494 <memset>:
  401494:	b470      	push	{r4, r5, r6}
  401496:	0786      	lsls	r6, r0, #30
  401498:	d046      	beq.n	401528 <memset+0x94>
  40149a:	1e54      	subs	r4, r2, #1
  40149c:	2a00      	cmp	r2, #0
  40149e:	d041      	beq.n	401524 <memset+0x90>
  4014a0:	b2ca      	uxtb	r2, r1
  4014a2:	4603      	mov	r3, r0
  4014a4:	e002      	b.n	4014ac <memset+0x18>
  4014a6:	f114 34ff 	adds.w	r4, r4, #4294967295
  4014aa:	d33b      	bcc.n	401524 <memset+0x90>
  4014ac:	f803 2b01 	strb.w	r2, [r3], #1
  4014b0:	079d      	lsls	r5, r3, #30
  4014b2:	d1f8      	bne.n	4014a6 <memset+0x12>
  4014b4:	2c03      	cmp	r4, #3
  4014b6:	d92e      	bls.n	401516 <memset+0x82>
  4014b8:	b2cd      	uxtb	r5, r1
  4014ba:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  4014be:	2c0f      	cmp	r4, #15
  4014c0:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  4014c4:	d919      	bls.n	4014fa <memset+0x66>
  4014c6:	f103 0210 	add.w	r2, r3, #16
  4014ca:	4626      	mov	r6, r4
  4014cc:	3e10      	subs	r6, #16
  4014ce:	2e0f      	cmp	r6, #15
  4014d0:	f842 5c10 	str.w	r5, [r2, #-16]
  4014d4:	f842 5c0c 	str.w	r5, [r2, #-12]
  4014d8:	f842 5c08 	str.w	r5, [r2, #-8]
  4014dc:	f842 5c04 	str.w	r5, [r2, #-4]
  4014e0:	f102 0210 	add.w	r2, r2, #16
  4014e4:	d8f2      	bhi.n	4014cc <memset+0x38>
  4014e6:	f1a4 0210 	sub.w	r2, r4, #16
  4014ea:	f022 020f 	bic.w	r2, r2, #15
  4014ee:	f004 040f 	and.w	r4, r4, #15
  4014f2:	3210      	adds	r2, #16
  4014f4:	2c03      	cmp	r4, #3
  4014f6:	4413      	add	r3, r2
  4014f8:	d90d      	bls.n	401516 <memset+0x82>
  4014fa:	461e      	mov	r6, r3
  4014fc:	4622      	mov	r2, r4
  4014fe:	3a04      	subs	r2, #4
  401500:	2a03      	cmp	r2, #3
  401502:	f846 5b04 	str.w	r5, [r6], #4
  401506:	d8fa      	bhi.n	4014fe <memset+0x6a>
  401508:	1f22      	subs	r2, r4, #4
  40150a:	f022 0203 	bic.w	r2, r2, #3
  40150e:	3204      	adds	r2, #4
  401510:	4413      	add	r3, r2
  401512:	f004 0403 	and.w	r4, r4, #3
  401516:	b12c      	cbz	r4, 401524 <memset+0x90>
  401518:	b2c9      	uxtb	r1, r1
  40151a:	441c      	add	r4, r3
  40151c:	f803 1b01 	strb.w	r1, [r3], #1
  401520:	429c      	cmp	r4, r3
  401522:	d1fb      	bne.n	40151c <memset+0x88>
  401524:	bc70      	pop	{r4, r5, r6}
  401526:	4770      	bx	lr
  401528:	4614      	mov	r4, r2
  40152a:	4603      	mov	r3, r0
  40152c:	e7c2      	b.n	4014b4 <memset+0x20>
  40152e:	bf00      	nop

00401530 <sprintf>:
  401530:	b40e      	push	{r1, r2, r3}
  401532:	b5f0      	push	{r4, r5, r6, r7, lr}
  401534:	b09c      	sub	sp, #112	; 0x70
  401536:	ab21      	add	r3, sp, #132	; 0x84
  401538:	490f      	ldr	r1, [pc, #60]	; (401578 <sprintf+0x48>)
  40153a:	f853 2b04 	ldr.w	r2, [r3], #4
  40153e:	9301      	str	r3, [sp, #4]
  401540:	4605      	mov	r5, r0
  401542:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  401546:	6808      	ldr	r0, [r1, #0]
  401548:	9502      	str	r5, [sp, #8]
  40154a:	f44f 7702 	mov.w	r7, #520	; 0x208
  40154e:	f64f 76ff 	movw	r6, #65535	; 0xffff
  401552:	a902      	add	r1, sp, #8
  401554:	9506      	str	r5, [sp, #24]
  401556:	f8ad 7014 	strh.w	r7, [sp, #20]
  40155a:	9404      	str	r4, [sp, #16]
  40155c:	9407      	str	r4, [sp, #28]
  40155e:	f8ad 6016 	strh.w	r6, [sp, #22]
  401562:	f000 fa6f 	bl	401a44 <_svfprintf_r>
  401566:	9b02      	ldr	r3, [sp, #8]
  401568:	2200      	movs	r2, #0
  40156a:	701a      	strb	r2, [r3, #0]
  40156c:	b01c      	add	sp, #112	; 0x70
  40156e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  401572:	b003      	add	sp, #12
  401574:	4770      	bx	lr
  401576:	bf00      	nop
  401578:	20000010 	.word	0x20000010

0040157c <critical_factorization>:
  40157c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401580:	f04f 0e01 	mov.w	lr, #1
  401584:	4674      	mov	r4, lr
  401586:	2500      	movs	r5, #0
  401588:	f04f 36ff 	mov.w	r6, #4294967295
  40158c:	192b      	adds	r3, r5, r4
  40158e:	428b      	cmp	r3, r1
  401590:	eb00 0706 	add.w	r7, r0, r6
  401594:	d20d      	bcs.n	4015b2 <critical_factorization+0x36>
  401596:	5d3f      	ldrb	r7, [r7, r4]
  401598:	f810 c003 	ldrb.w	ip, [r0, r3]
  40159c:	45bc      	cmp	ip, r7
  40159e:	d22d      	bcs.n	4015fc <critical_factorization+0x80>
  4015a0:	461d      	mov	r5, r3
  4015a2:	2401      	movs	r4, #1
  4015a4:	eba3 0e06 	sub.w	lr, r3, r6
  4015a8:	192b      	adds	r3, r5, r4
  4015aa:	428b      	cmp	r3, r1
  4015ac:	eb00 0706 	add.w	r7, r0, r6
  4015b0:	d3f1      	bcc.n	401596 <critical_factorization+0x1a>
  4015b2:	f04f 0801 	mov.w	r8, #1
  4015b6:	f8c2 e000 	str.w	lr, [r2]
  4015ba:	4644      	mov	r4, r8
  4015bc:	2500      	movs	r5, #0
  4015be:	f04f 37ff 	mov.w	r7, #4294967295
  4015c2:	192b      	adds	r3, r5, r4
  4015c4:	4299      	cmp	r1, r3
  4015c6:	eb00 0e07 	add.w	lr, r0, r7
  4015ca:	d90e      	bls.n	4015ea <critical_factorization+0x6e>
  4015cc:	f81e e004 	ldrb.w	lr, [lr, r4]
  4015d0:	f810 c003 	ldrb.w	ip, [r0, r3]
  4015d4:	45f4      	cmp	ip, lr
  4015d6:	d918      	bls.n	40160a <critical_factorization+0x8e>
  4015d8:	461d      	mov	r5, r3
  4015da:	2401      	movs	r4, #1
  4015dc:	eba3 0807 	sub.w	r8, r3, r7
  4015e0:	192b      	adds	r3, r5, r4
  4015e2:	4299      	cmp	r1, r3
  4015e4:	eb00 0e07 	add.w	lr, r0, r7
  4015e8:	d8f0      	bhi.n	4015cc <critical_factorization+0x50>
  4015ea:	3701      	adds	r7, #1
  4015ec:	1c70      	adds	r0, r6, #1
  4015ee:	4287      	cmp	r7, r0
  4015f0:	bf24      	itt	cs
  4015f2:	f8c2 8000 	strcs.w	r8, [r2]
  4015f6:	4638      	movcs	r0, r7
  4015f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4015fc:	d00c      	beq.n	401618 <critical_factorization+0x9c>
  4015fe:	f04f 0e01 	mov.w	lr, #1
  401602:	462e      	mov	r6, r5
  401604:	4674      	mov	r4, lr
  401606:	4475      	add	r5, lr
  401608:	e7c0      	b.n	40158c <critical_factorization+0x10>
  40160a:	d00b      	beq.n	401624 <critical_factorization+0xa8>
  40160c:	f04f 0801 	mov.w	r8, #1
  401610:	462f      	mov	r7, r5
  401612:	4644      	mov	r4, r8
  401614:	4445      	add	r5, r8
  401616:	e7d4      	b.n	4015c2 <critical_factorization+0x46>
  401618:	4574      	cmp	r4, lr
  40161a:	bf12      	itee	ne
  40161c:	3401      	addne	r4, #1
  40161e:	461d      	moveq	r5, r3
  401620:	2401      	moveq	r4, #1
  401622:	e7b3      	b.n	40158c <critical_factorization+0x10>
  401624:	4544      	cmp	r4, r8
  401626:	bf12      	itee	ne
  401628:	3401      	addne	r4, #1
  40162a:	461d      	moveq	r5, r3
  40162c:	2401      	moveq	r4, #1
  40162e:	e7c8      	b.n	4015c2 <critical_factorization+0x46>

00401630 <two_way_long_needle>:
  401630:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401634:	f2ad 4d14 	subw	sp, sp, #1044	; 0x414
  401638:	4616      	mov	r6, r2
  40163a:	4605      	mov	r5, r0
  40163c:	468b      	mov	fp, r1
  40163e:	4610      	mov	r0, r2
  401640:	4619      	mov	r1, r3
  401642:	aa03      	add	r2, sp, #12
  401644:	461c      	mov	r4, r3
  401646:	f7ff ff99 	bl	40157c <critical_factorization>
  40164a:	ab03      	add	r3, sp, #12
  40164c:	4681      	mov	r9, r0
  40164e:	f20d 420c 	addw	r2, sp, #1036	; 0x40c
  401652:	f843 4f04 	str.w	r4, [r3, #4]!
  401656:	4293      	cmp	r3, r2
  401658:	d1fb      	bne.n	401652 <two_way_long_needle+0x22>
  40165a:	b14c      	cbz	r4, 401670 <two_way_long_needle+0x40>
  40165c:	1e63      	subs	r3, r4, #1
  40165e:	1e72      	subs	r2, r6, #1
  401660:	a804      	add	r0, sp, #16
  401662:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  401666:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
  40166a:	f113 33ff 	adds.w	r3, r3, #4294967295
  40166e:	d2f8      	bcs.n	401662 <two_way_long_needle+0x32>
  401670:	9903      	ldr	r1, [sp, #12]
  401672:	464a      	mov	r2, r9
  401674:	4431      	add	r1, r6
  401676:	4630      	mov	r0, r6
  401678:	f002 ff12 	bl	4044a0 <memcmp>
  40167c:	2800      	cmp	r0, #0
  40167e:	d16f      	bne.n	401760 <two_way_long_needle+0x130>
  401680:	f109 33ff 	add.w	r3, r9, #4294967295
  401684:	9300      	str	r3, [sp, #0]
  401686:	18f3      	adds	r3, r6, r3
  401688:	4682      	mov	sl, r0
  40168a:	9301      	str	r3, [sp, #4]
  40168c:	4623      	mov	r3, r4
  40168e:	4680      	mov	r8, r0
  401690:	4654      	mov	r4, sl
  401692:	4658      	mov	r0, fp
  401694:	469a      	mov	sl, r3
  401696:	eb08 070a 	add.w	r7, r8, sl
  40169a:	1a3a      	subs	r2, r7, r0
  40169c:	2100      	movs	r1, #0
  40169e:	4428      	add	r0, r5
  4016a0:	f002 feae 	bl	404400 <memchr>
  4016a4:	2800      	cmp	r0, #0
  4016a6:	d156      	bne.n	401756 <two_way_long_needle+0x126>
  4016a8:	2f00      	cmp	r7, #0
  4016aa:	d054      	beq.n	401756 <two_way_long_needle+0x126>
  4016ac:	19eb      	adds	r3, r5, r7
  4016ae:	aa04      	add	r2, sp, #16
  4016b0:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  4016b4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  4016b8:	b14b      	cbz	r3, 4016ce <two_way_long_needle+0x9e>
  4016ba:	b124      	cbz	r4, 4016c6 <two_way_long_needle+0x96>
  4016bc:	9a03      	ldr	r2, [sp, #12]
  4016be:	4293      	cmp	r3, r2
  4016c0:	d201      	bcs.n	4016c6 <two_way_long_needle+0x96>
  4016c2:	ebaa 0302 	sub.w	r3, sl, r2
  4016c6:	4498      	add	r8, r3
  4016c8:	2400      	movs	r4, #0
  4016ca:	4638      	mov	r0, r7
  4016cc:	e7e3      	b.n	401696 <two_way_long_needle+0x66>
  4016ce:	454c      	cmp	r4, r9
  4016d0:	4623      	mov	r3, r4
  4016d2:	f10a 3eff 	add.w	lr, sl, #4294967295
  4016d6:	bf38      	it	cc
  4016d8:	464b      	movcc	r3, r9
  4016da:	4573      	cmp	r3, lr
  4016dc:	d213      	bcs.n	401706 <two_way_long_needle+0xd6>
  4016de:	eb08 0203 	add.w	r2, r8, r3
  4016e2:	f816 c003 	ldrb.w	ip, [r6, r3]
  4016e6:	5ca8      	ldrb	r0, [r5, r2]
  4016e8:	4584      	cmp	ip, r0
  4016ea:	442a      	add	r2, r5
  4016ec:	eb06 0103 	add.w	r1, r6, r3
  4016f0:	d006      	beq.n	401700 <two_way_long_needle+0xd0>
  4016f2:	e02c      	b.n	40174e <two_way_long_needle+0x11e>
  4016f4:	f811 cf01 	ldrb.w	ip, [r1, #1]!
  4016f8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  4016fc:	4584      	cmp	ip, r0
  4016fe:	d126      	bne.n	40174e <two_way_long_needle+0x11e>
  401700:	3301      	adds	r3, #1
  401702:	4573      	cmp	r3, lr
  401704:	d3f6      	bcc.n	4016f4 <two_way_long_needle+0xc4>
  401706:	454c      	cmp	r4, r9
  401708:	9900      	ldr	r1, [sp, #0]
  40170a:	f080 8089 	bcs.w	401820 <two_way_long_needle+0x1f0>
  40170e:	9b00      	ldr	r3, [sp, #0]
  401710:	eb08 0203 	add.w	r2, r8, r3
  401714:	9b01      	ldr	r3, [sp, #4]
  401716:	5ca8      	ldrb	r0, [r5, r2]
  401718:	781b      	ldrb	r3, [r3, #0]
  40171a:	4298      	cmp	r0, r3
  40171c:	442a      	add	r2, r5
  40171e:	d17f      	bne.n	401820 <two_way_long_needle+0x1f0>
  401720:	9801      	ldr	r0, [sp, #4]
  401722:	f104 3bff 	add.w	fp, r4, #4294967295
  401726:	e006      	b.n	401736 <two_way_long_needle+0x106>
  401728:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  40172c:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  401730:	45f4      	cmp	ip, lr
  401732:	d103      	bne.n	40173c <two_way_long_needle+0x10c>
  401734:	4619      	mov	r1, r3
  401736:	1e4b      	subs	r3, r1, #1
  401738:	459b      	cmp	fp, r3
  40173a:	d1f5      	bne.n	401728 <two_way_long_needle+0xf8>
  40173c:	3401      	adds	r4, #1
  40173e:	428c      	cmp	r4, r1
  401740:	d870      	bhi.n	401824 <two_way_long_needle+0x1f4>
  401742:	9c03      	ldr	r4, [sp, #12]
  401744:	4638      	mov	r0, r7
  401746:	44a0      	add	r8, r4
  401748:	ebaa 0404 	sub.w	r4, sl, r4
  40174c:	e7a3      	b.n	401696 <two_way_long_needle+0x66>
  40174e:	f1c9 0201 	rsb	r2, r9, #1
  401752:	4490      	add	r8, r2
  401754:	e7b7      	b.n	4016c6 <two_way_long_needle+0x96>
  401756:	2000      	movs	r0, #0
  401758:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  40175c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401760:	eba4 0309 	sub.w	r3, r4, r9
  401764:	454b      	cmp	r3, r9
  401766:	bf38      	it	cc
  401768:	464b      	movcc	r3, r9
  40176a:	3301      	adds	r3, #1
  40176c:	f109 38ff 	add.w	r8, r9, #4294967295
  401770:	9303      	str	r3, [sp, #12]
  401772:	eb06 0308 	add.w	r3, r6, r8
  401776:	4658      	mov	r0, fp
  401778:	f04f 0a00 	mov.w	sl, #0
  40177c:	46cb      	mov	fp, r9
  40177e:	4699      	mov	r9, r3
  401780:	eb0a 0704 	add.w	r7, sl, r4
  401784:	1a3a      	subs	r2, r7, r0
  401786:	2100      	movs	r1, #0
  401788:	4428      	add	r0, r5
  40178a:	f002 fe39 	bl	404400 <memchr>
  40178e:	2800      	cmp	r0, #0
  401790:	d1e1      	bne.n	401756 <two_way_long_needle+0x126>
  401792:	2f00      	cmp	r7, #0
  401794:	d0df      	beq.n	401756 <two_way_long_needle+0x126>
  401796:	19eb      	adds	r3, r5, r7
  401798:	aa04      	add	r2, sp, #16
  40179a:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  40179e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  4017a2:	bba3      	cbnz	r3, 40180e <two_way_long_needle+0x1de>
  4017a4:	1e61      	subs	r1, r4, #1
  4017a6:	458b      	cmp	fp, r1
  4017a8:	d215      	bcs.n	4017d6 <two_way_long_needle+0x1a6>
  4017aa:	eb0a 020b 	add.w	r2, sl, fp
  4017ae:	f816 300b 	ldrb.w	r3, [r6, fp]
  4017b2:	f815 e002 	ldrb.w	lr, [r5, r2]
  4017b6:	459e      	cmp	lr, r3
  4017b8:	442a      	add	r2, r5
  4017ba:	eb06 000b 	add.w	r0, r6, fp
  4017be:	465b      	mov	r3, fp
  4017c0:	d006      	beq.n	4017d0 <two_way_long_needle+0x1a0>
  4017c2:	e027      	b.n	401814 <two_way_long_needle+0x1e4>
  4017c4:	f810 cf01 	ldrb.w	ip, [r0, #1]!
  4017c8:	f812 ef01 	ldrb.w	lr, [r2, #1]!
  4017cc:	45f4      	cmp	ip, lr
  4017ce:	d121      	bne.n	401814 <two_way_long_needle+0x1e4>
  4017d0:	3301      	adds	r3, #1
  4017d2:	428b      	cmp	r3, r1
  4017d4:	d3f6      	bcc.n	4017c4 <two_way_long_needle+0x194>
  4017d6:	f1b8 3fff 	cmp.w	r8, #4294967295
  4017da:	d011      	beq.n	401800 <two_way_long_needle+0x1d0>
  4017dc:	eb0a 0208 	add.w	r2, sl, r8
  4017e0:	f899 1000 	ldrb.w	r1, [r9]
  4017e4:	5cab      	ldrb	r3, [r5, r2]
  4017e6:	4299      	cmp	r1, r3
  4017e8:	442a      	add	r2, r5
  4017ea:	d10f      	bne.n	40180c <two_way_long_needle+0x1dc>
  4017ec:	464b      	mov	r3, r9
  4017ee:	e005      	b.n	4017fc <two_way_long_needle+0x1cc>
  4017f0:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  4017f4:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  4017f8:	4288      	cmp	r0, r1
  4017fa:	d107      	bne.n	40180c <two_way_long_needle+0x1dc>
  4017fc:	42b3      	cmp	r3, r6
  4017fe:	d1f7      	bne.n	4017f0 <two_way_long_needle+0x1c0>
  401800:	eb05 000a 	add.w	r0, r5, sl
  401804:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  401808:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40180c:	9b03      	ldr	r3, [sp, #12]
  40180e:	449a      	add	sl, r3
  401810:	4638      	mov	r0, r7
  401812:	e7b5      	b.n	401780 <two_way_long_needle+0x150>
  401814:	f1cb 0201 	rsb	r2, fp, #1
  401818:	4492      	add	sl, r2
  40181a:	449a      	add	sl, r3
  40181c:	4638      	mov	r0, r7
  40181e:	e7af      	b.n	401780 <two_way_long_needle+0x150>
  401820:	4649      	mov	r1, r9
  401822:	e78b      	b.n	40173c <two_way_long_needle+0x10c>
  401824:	eb05 0008 	add.w	r0, r5, r8
  401828:	e796      	b.n	401758 <two_way_long_needle+0x128>
  40182a:	bf00      	nop

0040182c <strstr>:
  40182c:	7802      	ldrb	r2, [r0, #0]
  40182e:	2a00      	cmp	r2, #0
  401830:	f000 8101 	beq.w	401a36 <strstr+0x20a>
  401834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401838:	f891 8000 	ldrb.w	r8, [r1]
  40183c:	b085      	sub	sp, #20
  40183e:	4644      	mov	r4, r8
  401840:	f1b8 0f00 	cmp.w	r8, #0
  401844:	d016      	beq.n	401874 <strstr+0x48>
  401846:	4686      	mov	lr, r0
  401848:	f101 0c01 	add.w	ip, r1, #1
  40184c:	2701      	movs	r7, #1
  40184e:	e003      	b.n	401858 <strstr+0x2c>
  401850:	f813 4b01 	ldrb.w	r4, [r3], #1
  401854:	b16c      	cbz	r4, 401872 <strstr+0x46>
  401856:	469c      	mov	ip, r3
  401858:	42a2      	cmp	r2, r4
  40185a:	bf14      	ite	ne
  40185c:	2700      	movne	r7, #0
  40185e:	f007 0701 	andeq.w	r7, r7, #1
  401862:	f81e 2f01 	ldrb.w	r2, [lr, #1]!
  401866:	4663      	mov	r3, ip
  401868:	2a00      	cmp	r2, #0
  40186a:	d1f1      	bne.n	401850 <strstr+0x24>
  40186c:	f89c 3000 	ldrb.w	r3, [ip]
  401870:	b9fb      	cbnz	r3, 4018b2 <strstr+0x86>
  401872:	b117      	cbz	r7, 40187a <strstr+0x4e>
  401874:	b005      	add	sp, #20
  401876:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40187a:	460e      	mov	r6, r1
  40187c:	4605      	mov	r5, r0
  40187e:	4641      	mov	r1, r8
  401880:	3001      	adds	r0, #1
  401882:	ebac 0406 	sub.w	r4, ip, r6
  401886:	f003 f9ed 	bl	404c64 <strchr>
  40188a:	4607      	mov	r7, r0
  40188c:	b188      	cbz	r0, 4018b2 <strstr+0x86>
  40188e:	2c01      	cmp	r4, #1
  401890:	d0f0      	beq.n	401874 <strstr+0x48>
  401892:	1928      	adds	r0, r5, r4
  401894:	4287      	cmp	r7, r0
  401896:	bf94      	ite	ls
  401898:	1bc1      	subls	r1, r0, r7
  40189a:	2101      	movhi	r1, #1
  40189c:	2c1f      	cmp	r4, #31
  40189e:	468b      	mov	fp, r1
  4018a0:	d90b      	bls.n	4018ba <strstr+0x8e>
  4018a2:	4623      	mov	r3, r4
  4018a4:	4632      	mov	r2, r6
  4018a6:	4638      	mov	r0, r7
  4018a8:	f7ff fec2 	bl	401630 <two_way_long_needle>
  4018ac:	b005      	add	sp, #20
  4018ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4018b2:	2000      	movs	r0, #0
  4018b4:	b005      	add	sp, #20
  4018b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4018ba:	aa03      	add	r2, sp, #12
  4018bc:	4621      	mov	r1, r4
  4018be:	4630      	mov	r0, r6
  4018c0:	f7ff fe5c 	bl	40157c <critical_factorization>
  4018c4:	9903      	ldr	r1, [sp, #12]
  4018c6:	4680      	mov	r8, r0
  4018c8:	4602      	mov	r2, r0
  4018ca:	4431      	add	r1, r6
  4018cc:	4630      	mov	r0, r6
  4018ce:	f002 fde7 	bl	4044a0 <memcmp>
  4018d2:	2800      	cmp	r0, #0
  4018d4:	d157      	bne.n	401986 <strstr+0x15a>
  4018d6:	f108 33ff 	add.w	r3, r8, #4294967295
  4018da:	9300      	str	r3, [sp, #0]
  4018dc:	18f3      	adds	r3, r6, r3
  4018de:	4681      	mov	r9, r0
  4018e0:	4605      	mov	r5, r0
  4018e2:	9301      	str	r3, [sp, #4]
  4018e4:	4658      	mov	r0, fp
  4018e6:	46b2      	mov	sl, r6
  4018e8:	1966      	adds	r6, r4, r5
  4018ea:	1a32      	subs	r2, r6, r0
  4018ec:	2100      	movs	r1, #0
  4018ee:	4438      	add	r0, r7
  4018f0:	f002 fd86 	bl	404400 <memchr>
  4018f4:	2800      	cmp	r0, #0
  4018f6:	d1dc      	bne.n	4018b2 <strstr+0x86>
  4018f8:	2e00      	cmp	r6, #0
  4018fa:	d0da      	beq.n	4018b2 <strstr+0x86>
  4018fc:	45c8      	cmp	r8, r9
  4018fe:	4643      	mov	r3, r8
  401900:	bf38      	it	cc
  401902:	464b      	movcc	r3, r9
  401904:	429c      	cmp	r4, r3
  401906:	d912      	bls.n	40192e <strstr+0x102>
  401908:	195a      	adds	r2, r3, r5
  40190a:	f81a 1003 	ldrb.w	r1, [sl, r3]
  40190e:	5cb8      	ldrb	r0, [r7, r2]
  401910:	4281      	cmp	r1, r0
  401912:	443a      	add	r2, r7
  401914:	eb0a 0e03 	add.w	lr, sl, r3
  401918:	d006      	beq.n	401928 <strstr+0xfc>
  40191a:	e02c      	b.n	401976 <strstr+0x14a>
  40191c:	f81e 0f01 	ldrb.w	r0, [lr, #1]!
  401920:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  401924:	4288      	cmp	r0, r1
  401926:	d126      	bne.n	401976 <strstr+0x14a>
  401928:	3301      	adds	r3, #1
  40192a:	429c      	cmp	r4, r3
  40192c:	d1f6      	bne.n	40191c <strstr+0xf0>
  40192e:	45c8      	cmp	r8, r9
  401930:	9900      	ldr	r1, [sp, #0]
  401932:	f240 8083 	bls.w	401a3c <strstr+0x210>
  401936:	9b00      	ldr	r3, [sp, #0]
  401938:	18ea      	adds	r2, r5, r3
  40193a:	9b01      	ldr	r3, [sp, #4]
  40193c:	5cb8      	ldrb	r0, [r7, r2]
  40193e:	781b      	ldrb	r3, [r3, #0]
  401940:	4298      	cmp	r0, r3
  401942:	443a      	add	r2, r7
  401944:	d17a      	bne.n	401a3c <strstr+0x210>
  401946:	9801      	ldr	r0, [sp, #4]
  401948:	f109 3bff 	add.w	fp, r9, #4294967295
  40194c:	e006      	b.n	40195c <strstr+0x130>
  40194e:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  401952:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  401956:	45f4      	cmp	ip, lr
  401958:	d103      	bne.n	401962 <strstr+0x136>
  40195a:	4619      	mov	r1, r3
  40195c:	1e4b      	subs	r3, r1, #1
  40195e:	455b      	cmp	r3, fp
  401960:	d1f5      	bne.n	40194e <strstr+0x122>
  401962:	f109 0901 	add.w	r9, r9, #1
  401966:	4589      	cmp	r9, r1
  401968:	d857      	bhi.n	401a1a <strstr+0x1ee>
  40196a:	9b03      	ldr	r3, [sp, #12]
  40196c:	4630      	mov	r0, r6
  40196e:	441d      	add	r5, r3
  401970:	eba4 0903 	sub.w	r9, r4, r3
  401974:	e7b8      	b.n	4018e8 <strstr+0xbc>
  401976:	f1c8 0201 	rsb	r2, r8, #1
  40197a:	4415      	add	r5, r2
  40197c:	441d      	add	r5, r3
  40197e:	f04f 0900 	mov.w	r9, #0
  401982:	4630      	mov	r0, r6
  401984:	e7b0      	b.n	4018e8 <strstr+0xbc>
  401986:	eba4 0308 	sub.w	r3, r4, r8
  40198a:	4543      	cmp	r3, r8
  40198c:	bf38      	it	cc
  40198e:	4643      	movcc	r3, r8
  401990:	3301      	adds	r3, #1
  401992:	f108 39ff 	add.w	r9, r8, #4294967295
  401996:	9303      	str	r3, [sp, #12]
  401998:	eb06 0309 	add.w	r3, r6, r9
  40199c:	4658      	mov	r0, fp
  40199e:	2500      	movs	r5, #0
  4019a0:	46bb      	mov	fp, r7
  4019a2:	469a      	mov	sl, r3
  4019a4:	1967      	adds	r7, r4, r5
  4019a6:	1a3a      	subs	r2, r7, r0
  4019a8:	2100      	movs	r1, #0
  4019aa:	4458      	add	r0, fp
  4019ac:	f002 fd28 	bl	404400 <memchr>
  4019b0:	2800      	cmp	r0, #0
  4019b2:	f47f af7e 	bne.w	4018b2 <strstr+0x86>
  4019b6:	2f00      	cmp	r7, #0
  4019b8:	f43f af7b 	beq.w	4018b2 <strstr+0x86>
  4019bc:	4544      	cmp	r4, r8
  4019be:	d915      	bls.n	4019ec <strstr+0x1c0>
  4019c0:	eb08 0205 	add.w	r2, r8, r5
  4019c4:	f816 3008 	ldrb.w	r3, [r6, r8]
  4019c8:	f81b 0002 	ldrb.w	r0, [fp, r2]
  4019cc:	4298      	cmp	r0, r3
  4019ce:	445a      	add	r2, fp
  4019d0:	eb06 0108 	add.w	r1, r6, r8
  4019d4:	4643      	mov	r3, r8
  4019d6:	d006      	beq.n	4019e6 <strstr+0x1ba>
  4019d8:	e023      	b.n	401a22 <strstr+0x1f6>
  4019da:	f811 ef01 	ldrb.w	lr, [r1, #1]!
  4019de:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  4019e2:	4586      	cmp	lr, r0
  4019e4:	d11d      	bne.n	401a22 <strstr+0x1f6>
  4019e6:	3301      	adds	r3, #1
  4019e8:	429c      	cmp	r4, r3
  4019ea:	d1f6      	bne.n	4019da <strstr+0x1ae>
  4019ec:	f1b9 3fff 	cmp.w	r9, #4294967295
  4019f0:	d012      	beq.n	401a18 <strstr+0x1ec>
  4019f2:	eb05 0209 	add.w	r2, r5, r9
  4019f6:	f89a 3000 	ldrb.w	r3, [sl]
  4019fa:	f81b 1002 	ldrb.w	r1, [fp, r2]
  4019fe:	4299      	cmp	r1, r3
  401a00:	445a      	add	r2, fp
  401a02:	d114      	bne.n	401a2e <strstr+0x202>
  401a04:	4653      	mov	r3, sl
  401a06:	e005      	b.n	401a14 <strstr+0x1e8>
  401a08:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  401a0c:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  401a10:	4288      	cmp	r0, r1
  401a12:	d10c      	bne.n	401a2e <strstr+0x202>
  401a14:	42b3      	cmp	r3, r6
  401a16:	d1f7      	bne.n	401a08 <strstr+0x1dc>
  401a18:	465f      	mov	r7, fp
  401a1a:	1978      	adds	r0, r7, r5
  401a1c:	b005      	add	sp, #20
  401a1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401a22:	f1c8 0201 	rsb	r2, r8, #1
  401a26:	4415      	add	r5, r2
  401a28:	441d      	add	r5, r3
  401a2a:	4638      	mov	r0, r7
  401a2c:	e7ba      	b.n	4019a4 <strstr+0x178>
  401a2e:	9b03      	ldr	r3, [sp, #12]
  401a30:	4638      	mov	r0, r7
  401a32:	441d      	add	r5, r3
  401a34:	e7b6      	b.n	4019a4 <strstr+0x178>
  401a36:	780b      	ldrb	r3, [r1, #0]
  401a38:	b913      	cbnz	r3, 401a40 <strstr+0x214>
  401a3a:	4770      	bx	lr
  401a3c:	4641      	mov	r1, r8
  401a3e:	e790      	b.n	401962 <strstr+0x136>
  401a40:	2000      	movs	r0, #0
  401a42:	4770      	bx	lr

00401a44 <_svfprintf_r>:
  401a44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401a48:	b0c3      	sub	sp, #268	; 0x10c
  401a4a:	460c      	mov	r4, r1
  401a4c:	910b      	str	r1, [sp, #44]	; 0x2c
  401a4e:	4692      	mov	sl, r2
  401a50:	930f      	str	r3, [sp, #60]	; 0x3c
  401a52:	900c      	str	r0, [sp, #48]	; 0x30
  401a54:	f002 fa0c 	bl	403e70 <_localeconv_r>
  401a58:	6803      	ldr	r3, [r0, #0]
  401a5a:	931a      	str	r3, [sp, #104]	; 0x68
  401a5c:	4618      	mov	r0, r3
  401a5e:	f003 f98f 	bl	404d80 <strlen>
  401a62:	89a3      	ldrh	r3, [r4, #12]
  401a64:	9019      	str	r0, [sp, #100]	; 0x64
  401a66:	0619      	lsls	r1, r3, #24
  401a68:	d503      	bpl.n	401a72 <_svfprintf_r+0x2e>
  401a6a:	6923      	ldr	r3, [r4, #16]
  401a6c:	2b00      	cmp	r3, #0
  401a6e:	f001 8003 	beq.w	402a78 <_svfprintf_r+0x1034>
  401a72:	2300      	movs	r3, #0
  401a74:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  401a78:	9313      	str	r3, [sp, #76]	; 0x4c
  401a7a:	9315      	str	r3, [sp, #84]	; 0x54
  401a7c:	9314      	str	r3, [sp, #80]	; 0x50
  401a7e:	9327      	str	r3, [sp, #156]	; 0x9c
  401a80:	9326      	str	r3, [sp, #152]	; 0x98
  401a82:	9318      	str	r3, [sp, #96]	; 0x60
  401a84:	931b      	str	r3, [sp, #108]	; 0x6c
  401a86:	9309      	str	r3, [sp, #36]	; 0x24
  401a88:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  401a8c:	46c8      	mov	r8, r9
  401a8e:	9316      	str	r3, [sp, #88]	; 0x58
  401a90:	9317      	str	r3, [sp, #92]	; 0x5c
  401a92:	f89a 3000 	ldrb.w	r3, [sl]
  401a96:	4654      	mov	r4, sl
  401a98:	b1e3      	cbz	r3, 401ad4 <_svfprintf_r+0x90>
  401a9a:	2b25      	cmp	r3, #37	; 0x25
  401a9c:	d102      	bne.n	401aa4 <_svfprintf_r+0x60>
  401a9e:	e019      	b.n	401ad4 <_svfprintf_r+0x90>
  401aa0:	2b25      	cmp	r3, #37	; 0x25
  401aa2:	d003      	beq.n	401aac <_svfprintf_r+0x68>
  401aa4:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  401aa8:	2b00      	cmp	r3, #0
  401aaa:	d1f9      	bne.n	401aa0 <_svfprintf_r+0x5c>
  401aac:	eba4 050a 	sub.w	r5, r4, sl
  401ab0:	b185      	cbz	r5, 401ad4 <_svfprintf_r+0x90>
  401ab2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401ab4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  401ab6:	f8c8 a000 	str.w	sl, [r8]
  401aba:	3301      	adds	r3, #1
  401abc:	442a      	add	r2, r5
  401abe:	2b07      	cmp	r3, #7
  401ac0:	f8c8 5004 	str.w	r5, [r8, #4]
  401ac4:	9227      	str	r2, [sp, #156]	; 0x9c
  401ac6:	9326      	str	r3, [sp, #152]	; 0x98
  401ac8:	dc7f      	bgt.n	401bca <_svfprintf_r+0x186>
  401aca:	f108 0808 	add.w	r8, r8, #8
  401ace:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401ad0:	442b      	add	r3, r5
  401ad2:	9309      	str	r3, [sp, #36]	; 0x24
  401ad4:	7823      	ldrb	r3, [r4, #0]
  401ad6:	2b00      	cmp	r3, #0
  401ad8:	d07f      	beq.n	401bda <_svfprintf_r+0x196>
  401ada:	2300      	movs	r3, #0
  401adc:	461a      	mov	r2, r3
  401ade:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  401ae2:	4619      	mov	r1, r3
  401ae4:	930d      	str	r3, [sp, #52]	; 0x34
  401ae6:	469b      	mov	fp, r3
  401ae8:	f04f 30ff 	mov.w	r0, #4294967295
  401aec:	7863      	ldrb	r3, [r4, #1]
  401aee:	900a      	str	r0, [sp, #40]	; 0x28
  401af0:	f104 0a01 	add.w	sl, r4, #1
  401af4:	f10a 0a01 	add.w	sl, sl, #1
  401af8:	f1a3 0020 	sub.w	r0, r3, #32
  401afc:	2858      	cmp	r0, #88	; 0x58
  401afe:	f200 83c1 	bhi.w	402284 <_svfprintf_r+0x840>
  401b02:	e8df f010 	tbh	[pc, r0, lsl #1]
  401b06:	0238      	.short	0x0238
  401b08:	03bf03bf 	.word	0x03bf03bf
  401b0c:	03bf0240 	.word	0x03bf0240
  401b10:	03bf03bf 	.word	0x03bf03bf
  401b14:	03bf03bf 	.word	0x03bf03bf
  401b18:	024503bf 	.word	0x024503bf
  401b1c:	03bf0203 	.word	0x03bf0203
  401b20:	026b005d 	.word	0x026b005d
  401b24:	028603bf 	.word	0x028603bf
  401b28:	039d039d 	.word	0x039d039d
  401b2c:	039d039d 	.word	0x039d039d
  401b30:	039d039d 	.word	0x039d039d
  401b34:	039d039d 	.word	0x039d039d
  401b38:	03bf039d 	.word	0x03bf039d
  401b3c:	03bf03bf 	.word	0x03bf03bf
  401b40:	03bf03bf 	.word	0x03bf03bf
  401b44:	03bf03bf 	.word	0x03bf03bf
  401b48:	03bf03bf 	.word	0x03bf03bf
  401b4c:	033703bf 	.word	0x033703bf
  401b50:	03bf0357 	.word	0x03bf0357
  401b54:	03bf0357 	.word	0x03bf0357
  401b58:	03bf03bf 	.word	0x03bf03bf
  401b5c:	039803bf 	.word	0x039803bf
  401b60:	03bf03bf 	.word	0x03bf03bf
  401b64:	03bf03ad 	.word	0x03bf03ad
  401b68:	03bf03bf 	.word	0x03bf03bf
  401b6c:	03bf03bf 	.word	0x03bf03bf
  401b70:	03bf0259 	.word	0x03bf0259
  401b74:	031e03bf 	.word	0x031e03bf
  401b78:	03bf03bf 	.word	0x03bf03bf
  401b7c:	03bf03bf 	.word	0x03bf03bf
  401b80:	03bf03bf 	.word	0x03bf03bf
  401b84:	03bf03bf 	.word	0x03bf03bf
  401b88:	03bf03bf 	.word	0x03bf03bf
  401b8c:	02db02c6 	.word	0x02db02c6
  401b90:	03570357 	.word	0x03570357
  401b94:	028b0357 	.word	0x028b0357
  401b98:	03bf02db 	.word	0x03bf02db
  401b9c:	029003bf 	.word	0x029003bf
  401ba0:	029d03bf 	.word	0x029d03bf
  401ba4:	02b401cc 	.word	0x02b401cc
  401ba8:	03bf0208 	.word	0x03bf0208
  401bac:	03bf01e1 	.word	0x03bf01e1
  401bb0:	03bf007e 	.word	0x03bf007e
  401bb4:	020d03bf 	.word	0x020d03bf
  401bb8:	980d      	ldr	r0, [sp, #52]	; 0x34
  401bba:	930f      	str	r3, [sp, #60]	; 0x3c
  401bbc:	4240      	negs	r0, r0
  401bbe:	900d      	str	r0, [sp, #52]	; 0x34
  401bc0:	f04b 0b04 	orr.w	fp, fp, #4
  401bc4:	f89a 3000 	ldrb.w	r3, [sl]
  401bc8:	e794      	b.n	401af4 <_svfprintf_r+0xb0>
  401bca:	aa25      	add	r2, sp, #148	; 0x94
  401bcc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401bce:	980c      	ldr	r0, [sp, #48]	; 0x30
  401bd0:	f003 f944 	bl	404e5c <__ssprint_r>
  401bd4:	b940      	cbnz	r0, 401be8 <_svfprintf_r+0x1a4>
  401bd6:	46c8      	mov	r8, r9
  401bd8:	e779      	b.n	401ace <_svfprintf_r+0x8a>
  401bda:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  401bdc:	b123      	cbz	r3, 401be8 <_svfprintf_r+0x1a4>
  401bde:	980c      	ldr	r0, [sp, #48]	; 0x30
  401be0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401be2:	aa25      	add	r2, sp, #148	; 0x94
  401be4:	f003 f93a 	bl	404e5c <__ssprint_r>
  401be8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401bea:	899b      	ldrh	r3, [r3, #12]
  401bec:	f013 0f40 	tst.w	r3, #64	; 0x40
  401bf0:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401bf2:	bf18      	it	ne
  401bf4:	f04f 33ff 	movne.w	r3, #4294967295
  401bf8:	9309      	str	r3, [sp, #36]	; 0x24
  401bfa:	9809      	ldr	r0, [sp, #36]	; 0x24
  401bfc:	b043      	add	sp, #268	; 0x10c
  401bfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401c02:	f01b 0f20 	tst.w	fp, #32
  401c06:	9311      	str	r3, [sp, #68]	; 0x44
  401c08:	f040 81dd 	bne.w	401fc6 <_svfprintf_r+0x582>
  401c0c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401c0e:	f01b 0f10 	tst.w	fp, #16
  401c12:	4613      	mov	r3, r2
  401c14:	f040 856e 	bne.w	4026f4 <_svfprintf_r+0xcb0>
  401c18:	f01b 0f40 	tst.w	fp, #64	; 0x40
  401c1c:	f000 856a 	beq.w	4026f4 <_svfprintf_r+0xcb0>
  401c20:	8814      	ldrh	r4, [r2, #0]
  401c22:	3204      	adds	r2, #4
  401c24:	2500      	movs	r5, #0
  401c26:	2301      	movs	r3, #1
  401c28:	920f      	str	r2, [sp, #60]	; 0x3c
  401c2a:	2700      	movs	r7, #0
  401c2c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  401c30:	990a      	ldr	r1, [sp, #40]	; 0x28
  401c32:	1c4a      	adds	r2, r1, #1
  401c34:	f000 8265 	beq.w	402102 <_svfprintf_r+0x6be>
  401c38:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  401c3c:	9207      	str	r2, [sp, #28]
  401c3e:	ea54 0205 	orrs.w	r2, r4, r5
  401c42:	f040 8264 	bne.w	40210e <_svfprintf_r+0x6ca>
  401c46:	2900      	cmp	r1, #0
  401c48:	f040 843c 	bne.w	4024c4 <_svfprintf_r+0xa80>
  401c4c:	2b00      	cmp	r3, #0
  401c4e:	f040 84d7 	bne.w	402600 <_svfprintf_r+0xbbc>
  401c52:	f01b 0301 	ands.w	r3, fp, #1
  401c56:	930e      	str	r3, [sp, #56]	; 0x38
  401c58:	f000 8604 	beq.w	402864 <_svfprintf_r+0xe20>
  401c5c:	ae42      	add	r6, sp, #264	; 0x108
  401c5e:	2330      	movs	r3, #48	; 0x30
  401c60:	f806 3d41 	strb.w	r3, [r6, #-65]!
  401c64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401c66:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  401c68:	4293      	cmp	r3, r2
  401c6a:	bfb8      	it	lt
  401c6c:	4613      	movlt	r3, r2
  401c6e:	9308      	str	r3, [sp, #32]
  401c70:	2300      	movs	r3, #0
  401c72:	9312      	str	r3, [sp, #72]	; 0x48
  401c74:	b117      	cbz	r7, 401c7c <_svfprintf_r+0x238>
  401c76:	9b08      	ldr	r3, [sp, #32]
  401c78:	3301      	adds	r3, #1
  401c7a:	9308      	str	r3, [sp, #32]
  401c7c:	9b07      	ldr	r3, [sp, #28]
  401c7e:	f013 0302 	ands.w	r3, r3, #2
  401c82:	9310      	str	r3, [sp, #64]	; 0x40
  401c84:	d002      	beq.n	401c8c <_svfprintf_r+0x248>
  401c86:	9b08      	ldr	r3, [sp, #32]
  401c88:	3302      	adds	r3, #2
  401c8a:	9308      	str	r3, [sp, #32]
  401c8c:	9b07      	ldr	r3, [sp, #28]
  401c8e:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  401c92:	f040 830e 	bne.w	4022b2 <_svfprintf_r+0x86e>
  401c96:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  401c98:	9a08      	ldr	r2, [sp, #32]
  401c9a:	eba3 0b02 	sub.w	fp, r3, r2
  401c9e:	f1bb 0f00 	cmp.w	fp, #0
  401ca2:	f340 8306 	ble.w	4022b2 <_svfprintf_r+0x86e>
  401ca6:	f1bb 0f10 	cmp.w	fp, #16
  401caa:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  401cac:	9a26      	ldr	r2, [sp, #152]	; 0x98
  401cae:	dd29      	ble.n	401d04 <_svfprintf_r+0x2c0>
  401cb0:	4643      	mov	r3, r8
  401cb2:	4621      	mov	r1, r4
  401cb4:	46a8      	mov	r8, r5
  401cb6:	2710      	movs	r7, #16
  401cb8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  401cba:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  401cbc:	e006      	b.n	401ccc <_svfprintf_r+0x288>
  401cbe:	f1ab 0b10 	sub.w	fp, fp, #16
  401cc2:	f1bb 0f10 	cmp.w	fp, #16
  401cc6:	f103 0308 	add.w	r3, r3, #8
  401cca:	dd18      	ble.n	401cfe <_svfprintf_r+0x2ba>
  401ccc:	3201      	adds	r2, #1
  401cce:	48b7      	ldr	r0, [pc, #732]	; (401fac <_svfprintf_r+0x568>)
  401cd0:	9226      	str	r2, [sp, #152]	; 0x98
  401cd2:	3110      	adds	r1, #16
  401cd4:	2a07      	cmp	r2, #7
  401cd6:	9127      	str	r1, [sp, #156]	; 0x9c
  401cd8:	e883 0081 	stmia.w	r3, {r0, r7}
  401cdc:	ddef      	ble.n	401cbe <_svfprintf_r+0x27a>
  401cde:	aa25      	add	r2, sp, #148	; 0x94
  401ce0:	4629      	mov	r1, r5
  401ce2:	4620      	mov	r0, r4
  401ce4:	f003 f8ba 	bl	404e5c <__ssprint_r>
  401ce8:	2800      	cmp	r0, #0
  401cea:	f47f af7d 	bne.w	401be8 <_svfprintf_r+0x1a4>
  401cee:	f1ab 0b10 	sub.w	fp, fp, #16
  401cf2:	f1bb 0f10 	cmp.w	fp, #16
  401cf6:	9927      	ldr	r1, [sp, #156]	; 0x9c
  401cf8:	9a26      	ldr	r2, [sp, #152]	; 0x98
  401cfa:	464b      	mov	r3, r9
  401cfc:	dce6      	bgt.n	401ccc <_svfprintf_r+0x288>
  401cfe:	4645      	mov	r5, r8
  401d00:	460c      	mov	r4, r1
  401d02:	4698      	mov	r8, r3
  401d04:	3201      	adds	r2, #1
  401d06:	4ba9      	ldr	r3, [pc, #676]	; (401fac <_svfprintf_r+0x568>)
  401d08:	9226      	str	r2, [sp, #152]	; 0x98
  401d0a:	445c      	add	r4, fp
  401d0c:	2a07      	cmp	r2, #7
  401d0e:	9427      	str	r4, [sp, #156]	; 0x9c
  401d10:	e888 0808 	stmia.w	r8, {r3, fp}
  401d14:	f300 8498 	bgt.w	402648 <_svfprintf_r+0xc04>
  401d18:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  401d1c:	f108 0808 	add.w	r8, r8, #8
  401d20:	b177      	cbz	r7, 401d40 <_svfprintf_r+0x2fc>
  401d22:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401d24:	3301      	adds	r3, #1
  401d26:	3401      	adds	r4, #1
  401d28:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  401d2c:	2201      	movs	r2, #1
  401d2e:	2b07      	cmp	r3, #7
  401d30:	9427      	str	r4, [sp, #156]	; 0x9c
  401d32:	9326      	str	r3, [sp, #152]	; 0x98
  401d34:	e888 0006 	stmia.w	r8, {r1, r2}
  401d38:	f300 83db 	bgt.w	4024f2 <_svfprintf_r+0xaae>
  401d3c:	f108 0808 	add.w	r8, r8, #8
  401d40:	9b10      	ldr	r3, [sp, #64]	; 0x40
  401d42:	b16b      	cbz	r3, 401d60 <_svfprintf_r+0x31c>
  401d44:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401d46:	3301      	adds	r3, #1
  401d48:	3402      	adds	r4, #2
  401d4a:	a91e      	add	r1, sp, #120	; 0x78
  401d4c:	2202      	movs	r2, #2
  401d4e:	2b07      	cmp	r3, #7
  401d50:	9427      	str	r4, [sp, #156]	; 0x9c
  401d52:	9326      	str	r3, [sp, #152]	; 0x98
  401d54:	e888 0006 	stmia.w	r8, {r1, r2}
  401d58:	f300 83d6 	bgt.w	402508 <_svfprintf_r+0xac4>
  401d5c:	f108 0808 	add.w	r8, r8, #8
  401d60:	2d80      	cmp	r5, #128	; 0x80
  401d62:	f000 8315 	beq.w	402390 <_svfprintf_r+0x94c>
  401d66:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401d68:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  401d6a:	1a9f      	subs	r7, r3, r2
  401d6c:	2f00      	cmp	r7, #0
  401d6e:	dd36      	ble.n	401dde <_svfprintf_r+0x39a>
  401d70:	2f10      	cmp	r7, #16
  401d72:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401d74:	4d8e      	ldr	r5, [pc, #568]	; (401fb0 <_svfprintf_r+0x56c>)
  401d76:	dd27      	ble.n	401dc8 <_svfprintf_r+0x384>
  401d78:	4642      	mov	r2, r8
  401d7a:	4621      	mov	r1, r4
  401d7c:	46b0      	mov	r8, r6
  401d7e:	f04f 0b10 	mov.w	fp, #16
  401d82:	462e      	mov	r6, r5
  401d84:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  401d86:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  401d88:	e004      	b.n	401d94 <_svfprintf_r+0x350>
  401d8a:	3f10      	subs	r7, #16
  401d8c:	2f10      	cmp	r7, #16
  401d8e:	f102 0208 	add.w	r2, r2, #8
  401d92:	dd15      	ble.n	401dc0 <_svfprintf_r+0x37c>
  401d94:	3301      	adds	r3, #1
  401d96:	3110      	adds	r1, #16
  401d98:	2b07      	cmp	r3, #7
  401d9a:	9127      	str	r1, [sp, #156]	; 0x9c
  401d9c:	9326      	str	r3, [sp, #152]	; 0x98
  401d9e:	e882 0840 	stmia.w	r2, {r6, fp}
  401da2:	ddf2      	ble.n	401d8a <_svfprintf_r+0x346>
  401da4:	aa25      	add	r2, sp, #148	; 0x94
  401da6:	4629      	mov	r1, r5
  401da8:	4620      	mov	r0, r4
  401daa:	f003 f857 	bl	404e5c <__ssprint_r>
  401dae:	2800      	cmp	r0, #0
  401db0:	f47f af1a 	bne.w	401be8 <_svfprintf_r+0x1a4>
  401db4:	3f10      	subs	r7, #16
  401db6:	2f10      	cmp	r7, #16
  401db8:	9927      	ldr	r1, [sp, #156]	; 0x9c
  401dba:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401dbc:	464a      	mov	r2, r9
  401dbe:	dce9      	bgt.n	401d94 <_svfprintf_r+0x350>
  401dc0:	4635      	mov	r5, r6
  401dc2:	460c      	mov	r4, r1
  401dc4:	4646      	mov	r6, r8
  401dc6:	4690      	mov	r8, r2
  401dc8:	3301      	adds	r3, #1
  401dca:	443c      	add	r4, r7
  401dcc:	2b07      	cmp	r3, #7
  401dce:	9427      	str	r4, [sp, #156]	; 0x9c
  401dd0:	9326      	str	r3, [sp, #152]	; 0x98
  401dd2:	e888 00a0 	stmia.w	r8, {r5, r7}
  401dd6:	f300 8381 	bgt.w	4024dc <_svfprintf_r+0xa98>
  401dda:	f108 0808 	add.w	r8, r8, #8
  401dde:	9b07      	ldr	r3, [sp, #28]
  401de0:	05df      	lsls	r7, r3, #23
  401de2:	f100 8268 	bmi.w	4022b6 <_svfprintf_r+0x872>
  401de6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401de8:	990e      	ldr	r1, [sp, #56]	; 0x38
  401dea:	f8c8 6000 	str.w	r6, [r8]
  401dee:	3301      	adds	r3, #1
  401df0:	440c      	add	r4, r1
  401df2:	2b07      	cmp	r3, #7
  401df4:	9427      	str	r4, [sp, #156]	; 0x9c
  401df6:	f8c8 1004 	str.w	r1, [r8, #4]
  401dfa:	9326      	str	r3, [sp, #152]	; 0x98
  401dfc:	f300 834d 	bgt.w	40249a <_svfprintf_r+0xa56>
  401e00:	f108 0808 	add.w	r8, r8, #8
  401e04:	9b07      	ldr	r3, [sp, #28]
  401e06:	075b      	lsls	r3, r3, #29
  401e08:	d53a      	bpl.n	401e80 <_svfprintf_r+0x43c>
  401e0a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  401e0c:	9a08      	ldr	r2, [sp, #32]
  401e0e:	1a9d      	subs	r5, r3, r2
  401e10:	2d00      	cmp	r5, #0
  401e12:	dd35      	ble.n	401e80 <_svfprintf_r+0x43c>
  401e14:	2d10      	cmp	r5, #16
  401e16:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401e18:	dd20      	ble.n	401e5c <_svfprintf_r+0x418>
  401e1a:	2610      	movs	r6, #16
  401e1c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  401e1e:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  401e22:	e004      	b.n	401e2e <_svfprintf_r+0x3ea>
  401e24:	3d10      	subs	r5, #16
  401e26:	2d10      	cmp	r5, #16
  401e28:	f108 0808 	add.w	r8, r8, #8
  401e2c:	dd16      	ble.n	401e5c <_svfprintf_r+0x418>
  401e2e:	3301      	adds	r3, #1
  401e30:	4a5e      	ldr	r2, [pc, #376]	; (401fac <_svfprintf_r+0x568>)
  401e32:	9326      	str	r3, [sp, #152]	; 0x98
  401e34:	3410      	adds	r4, #16
  401e36:	2b07      	cmp	r3, #7
  401e38:	9427      	str	r4, [sp, #156]	; 0x9c
  401e3a:	e888 0044 	stmia.w	r8, {r2, r6}
  401e3e:	ddf1      	ble.n	401e24 <_svfprintf_r+0x3e0>
  401e40:	aa25      	add	r2, sp, #148	; 0x94
  401e42:	4659      	mov	r1, fp
  401e44:	4638      	mov	r0, r7
  401e46:	f003 f809 	bl	404e5c <__ssprint_r>
  401e4a:	2800      	cmp	r0, #0
  401e4c:	f47f aecc 	bne.w	401be8 <_svfprintf_r+0x1a4>
  401e50:	3d10      	subs	r5, #16
  401e52:	2d10      	cmp	r5, #16
  401e54:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  401e56:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401e58:	46c8      	mov	r8, r9
  401e5a:	dce8      	bgt.n	401e2e <_svfprintf_r+0x3ea>
  401e5c:	3301      	adds	r3, #1
  401e5e:	4a53      	ldr	r2, [pc, #332]	; (401fac <_svfprintf_r+0x568>)
  401e60:	9326      	str	r3, [sp, #152]	; 0x98
  401e62:	442c      	add	r4, r5
  401e64:	2b07      	cmp	r3, #7
  401e66:	9427      	str	r4, [sp, #156]	; 0x9c
  401e68:	e888 0024 	stmia.w	r8, {r2, r5}
  401e6c:	dd08      	ble.n	401e80 <_svfprintf_r+0x43c>
  401e6e:	aa25      	add	r2, sp, #148	; 0x94
  401e70:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401e72:	980c      	ldr	r0, [sp, #48]	; 0x30
  401e74:	f002 fff2 	bl	404e5c <__ssprint_r>
  401e78:	2800      	cmp	r0, #0
  401e7a:	f47f aeb5 	bne.w	401be8 <_svfprintf_r+0x1a4>
  401e7e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  401e80:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401e82:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  401e84:	9908      	ldr	r1, [sp, #32]
  401e86:	428a      	cmp	r2, r1
  401e88:	bfac      	ite	ge
  401e8a:	189b      	addge	r3, r3, r2
  401e8c:	185b      	addlt	r3, r3, r1
  401e8e:	9309      	str	r3, [sp, #36]	; 0x24
  401e90:	2c00      	cmp	r4, #0
  401e92:	f040 830d 	bne.w	4024b0 <_svfprintf_r+0xa6c>
  401e96:	2300      	movs	r3, #0
  401e98:	9326      	str	r3, [sp, #152]	; 0x98
  401e9a:	46c8      	mov	r8, r9
  401e9c:	e5f9      	b.n	401a92 <_svfprintf_r+0x4e>
  401e9e:	9311      	str	r3, [sp, #68]	; 0x44
  401ea0:	f01b 0320 	ands.w	r3, fp, #32
  401ea4:	f040 81e3 	bne.w	40226e <_svfprintf_r+0x82a>
  401ea8:	f01b 0210 	ands.w	r2, fp, #16
  401eac:	f040 842e 	bne.w	40270c <_svfprintf_r+0xcc8>
  401eb0:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  401eb4:	f000 842a 	beq.w	40270c <_svfprintf_r+0xcc8>
  401eb8:	990f      	ldr	r1, [sp, #60]	; 0x3c
  401eba:	4613      	mov	r3, r2
  401ebc:	460a      	mov	r2, r1
  401ebe:	3204      	adds	r2, #4
  401ec0:	880c      	ldrh	r4, [r1, #0]
  401ec2:	920f      	str	r2, [sp, #60]	; 0x3c
  401ec4:	2500      	movs	r5, #0
  401ec6:	e6b0      	b.n	401c2a <_svfprintf_r+0x1e6>
  401ec8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401eca:	9311      	str	r3, [sp, #68]	; 0x44
  401ecc:	6816      	ldr	r6, [r2, #0]
  401ece:	2400      	movs	r4, #0
  401ed0:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  401ed4:	1d15      	adds	r5, r2, #4
  401ed6:	2e00      	cmp	r6, #0
  401ed8:	f000 86a7 	beq.w	402c2a <_svfprintf_r+0x11e6>
  401edc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  401ede:	1c53      	adds	r3, r2, #1
  401ee0:	f000 8609 	beq.w	402af6 <_svfprintf_r+0x10b2>
  401ee4:	4621      	mov	r1, r4
  401ee6:	4630      	mov	r0, r6
  401ee8:	f002 fa8a 	bl	404400 <memchr>
  401eec:	2800      	cmp	r0, #0
  401eee:	f000 86e1 	beq.w	402cb4 <_svfprintf_r+0x1270>
  401ef2:	1b83      	subs	r3, r0, r6
  401ef4:	930e      	str	r3, [sp, #56]	; 0x38
  401ef6:	940a      	str	r4, [sp, #40]	; 0x28
  401ef8:	950f      	str	r5, [sp, #60]	; 0x3c
  401efa:	f8cd b01c 	str.w	fp, [sp, #28]
  401efe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  401f02:	9308      	str	r3, [sp, #32]
  401f04:	9412      	str	r4, [sp, #72]	; 0x48
  401f06:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  401f0a:	e6b3      	b.n	401c74 <_svfprintf_r+0x230>
  401f0c:	f89a 3000 	ldrb.w	r3, [sl]
  401f10:	2201      	movs	r2, #1
  401f12:	212b      	movs	r1, #43	; 0x2b
  401f14:	e5ee      	b.n	401af4 <_svfprintf_r+0xb0>
  401f16:	f04b 0b20 	orr.w	fp, fp, #32
  401f1a:	f89a 3000 	ldrb.w	r3, [sl]
  401f1e:	e5e9      	b.n	401af4 <_svfprintf_r+0xb0>
  401f20:	9311      	str	r3, [sp, #68]	; 0x44
  401f22:	2a00      	cmp	r2, #0
  401f24:	f040 8795 	bne.w	402e52 <_svfprintf_r+0x140e>
  401f28:	4b22      	ldr	r3, [pc, #136]	; (401fb4 <_svfprintf_r+0x570>)
  401f2a:	9318      	str	r3, [sp, #96]	; 0x60
  401f2c:	f01b 0f20 	tst.w	fp, #32
  401f30:	f040 8111 	bne.w	402156 <_svfprintf_r+0x712>
  401f34:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401f36:	f01b 0f10 	tst.w	fp, #16
  401f3a:	4613      	mov	r3, r2
  401f3c:	f040 83e1 	bne.w	402702 <_svfprintf_r+0xcbe>
  401f40:	f01b 0f40 	tst.w	fp, #64	; 0x40
  401f44:	f000 83dd 	beq.w	402702 <_svfprintf_r+0xcbe>
  401f48:	3304      	adds	r3, #4
  401f4a:	8814      	ldrh	r4, [r2, #0]
  401f4c:	930f      	str	r3, [sp, #60]	; 0x3c
  401f4e:	2500      	movs	r5, #0
  401f50:	f01b 0f01 	tst.w	fp, #1
  401f54:	f000 810c 	beq.w	402170 <_svfprintf_r+0x72c>
  401f58:	ea54 0305 	orrs.w	r3, r4, r5
  401f5c:	f000 8108 	beq.w	402170 <_svfprintf_r+0x72c>
  401f60:	2330      	movs	r3, #48	; 0x30
  401f62:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  401f66:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  401f6a:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  401f6e:	f04b 0b02 	orr.w	fp, fp, #2
  401f72:	2302      	movs	r3, #2
  401f74:	e659      	b.n	401c2a <_svfprintf_r+0x1e6>
  401f76:	f89a 3000 	ldrb.w	r3, [sl]
  401f7a:	2900      	cmp	r1, #0
  401f7c:	f47f adba 	bne.w	401af4 <_svfprintf_r+0xb0>
  401f80:	2201      	movs	r2, #1
  401f82:	2120      	movs	r1, #32
  401f84:	e5b6      	b.n	401af4 <_svfprintf_r+0xb0>
  401f86:	f04b 0b01 	orr.w	fp, fp, #1
  401f8a:	f89a 3000 	ldrb.w	r3, [sl]
  401f8e:	e5b1      	b.n	401af4 <_svfprintf_r+0xb0>
  401f90:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  401f92:	6823      	ldr	r3, [r4, #0]
  401f94:	930d      	str	r3, [sp, #52]	; 0x34
  401f96:	4618      	mov	r0, r3
  401f98:	2800      	cmp	r0, #0
  401f9a:	4623      	mov	r3, r4
  401f9c:	f103 0304 	add.w	r3, r3, #4
  401fa0:	f6ff ae0a 	blt.w	401bb8 <_svfprintf_r+0x174>
  401fa4:	930f      	str	r3, [sp, #60]	; 0x3c
  401fa6:	f89a 3000 	ldrb.w	r3, [sl]
  401faa:	e5a3      	b.n	401af4 <_svfprintf_r+0xb0>
  401fac:	0040701c 	.word	0x0040701c
  401fb0:	0040702c 	.word	0x0040702c
  401fb4:	00406ffc 	.word	0x00406ffc
  401fb8:	f04b 0b10 	orr.w	fp, fp, #16
  401fbc:	f01b 0f20 	tst.w	fp, #32
  401fc0:	9311      	str	r3, [sp, #68]	; 0x44
  401fc2:	f43f ae23 	beq.w	401c0c <_svfprintf_r+0x1c8>
  401fc6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  401fc8:	3507      	adds	r5, #7
  401fca:	f025 0307 	bic.w	r3, r5, #7
  401fce:	f103 0208 	add.w	r2, r3, #8
  401fd2:	e9d3 4500 	ldrd	r4, r5, [r3]
  401fd6:	920f      	str	r2, [sp, #60]	; 0x3c
  401fd8:	2301      	movs	r3, #1
  401fda:	e626      	b.n	401c2a <_svfprintf_r+0x1e6>
  401fdc:	f89a 3000 	ldrb.w	r3, [sl]
  401fe0:	2b2a      	cmp	r3, #42	; 0x2a
  401fe2:	f10a 0401 	add.w	r4, sl, #1
  401fe6:	f000 8727 	beq.w	402e38 <_svfprintf_r+0x13f4>
  401fea:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  401fee:	2809      	cmp	r0, #9
  401ff0:	46a2      	mov	sl, r4
  401ff2:	f200 86ad 	bhi.w	402d50 <_svfprintf_r+0x130c>
  401ff6:	2300      	movs	r3, #0
  401ff8:	461c      	mov	r4, r3
  401ffa:	f81a 3b01 	ldrb.w	r3, [sl], #1
  401ffe:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402002:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402006:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40200a:	2809      	cmp	r0, #9
  40200c:	d9f5      	bls.n	401ffa <_svfprintf_r+0x5b6>
  40200e:	940a      	str	r4, [sp, #40]	; 0x28
  402010:	e572      	b.n	401af8 <_svfprintf_r+0xb4>
  402012:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  402016:	f89a 3000 	ldrb.w	r3, [sl]
  40201a:	e56b      	b.n	401af4 <_svfprintf_r+0xb0>
  40201c:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  402020:	f89a 3000 	ldrb.w	r3, [sl]
  402024:	e566      	b.n	401af4 <_svfprintf_r+0xb0>
  402026:	f89a 3000 	ldrb.w	r3, [sl]
  40202a:	2b6c      	cmp	r3, #108	; 0x6c
  40202c:	bf03      	ittte	eq
  40202e:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  402032:	f04b 0b20 	orreq.w	fp, fp, #32
  402036:	f10a 0a01 	addeq.w	sl, sl, #1
  40203a:	f04b 0b10 	orrne.w	fp, fp, #16
  40203e:	e559      	b.n	401af4 <_svfprintf_r+0xb0>
  402040:	2a00      	cmp	r2, #0
  402042:	f040 8711 	bne.w	402e68 <_svfprintf_r+0x1424>
  402046:	f01b 0f20 	tst.w	fp, #32
  40204a:	f040 84f9 	bne.w	402a40 <_svfprintf_r+0xffc>
  40204e:	f01b 0f10 	tst.w	fp, #16
  402052:	f040 84ac 	bne.w	4029ae <_svfprintf_r+0xf6a>
  402056:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40205a:	f000 84a8 	beq.w	4029ae <_svfprintf_r+0xf6a>
  40205e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402060:	6813      	ldr	r3, [r2, #0]
  402062:	3204      	adds	r2, #4
  402064:	920f      	str	r2, [sp, #60]	; 0x3c
  402066:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  40206a:	801a      	strh	r2, [r3, #0]
  40206c:	e511      	b.n	401a92 <_svfprintf_r+0x4e>
  40206e:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402070:	4bb3      	ldr	r3, [pc, #716]	; (402340 <_svfprintf_r+0x8fc>)
  402072:	680c      	ldr	r4, [r1, #0]
  402074:	9318      	str	r3, [sp, #96]	; 0x60
  402076:	2230      	movs	r2, #48	; 0x30
  402078:	2378      	movs	r3, #120	; 0x78
  40207a:	3104      	adds	r1, #4
  40207c:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  402080:	9311      	str	r3, [sp, #68]	; 0x44
  402082:	f04b 0b02 	orr.w	fp, fp, #2
  402086:	910f      	str	r1, [sp, #60]	; 0x3c
  402088:	2500      	movs	r5, #0
  40208a:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  40208e:	2302      	movs	r3, #2
  402090:	e5cb      	b.n	401c2a <_svfprintf_r+0x1e6>
  402092:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402094:	9311      	str	r3, [sp, #68]	; 0x44
  402096:	680a      	ldr	r2, [r1, #0]
  402098:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  40209c:	2300      	movs	r3, #0
  40209e:	460a      	mov	r2, r1
  4020a0:	461f      	mov	r7, r3
  4020a2:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4020a6:	3204      	adds	r2, #4
  4020a8:	2301      	movs	r3, #1
  4020aa:	9308      	str	r3, [sp, #32]
  4020ac:	f8cd b01c 	str.w	fp, [sp, #28]
  4020b0:	970a      	str	r7, [sp, #40]	; 0x28
  4020b2:	9712      	str	r7, [sp, #72]	; 0x48
  4020b4:	920f      	str	r2, [sp, #60]	; 0x3c
  4020b6:	930e      	str	r3, [sp, #56]	; 0x38
  4020b8:	ae28      	add	r6, sp, #160	; 0xa0
  4020ba:	e5df      	b.n	401c7c <_svfprintf_r+0x238>
  4020bc:	9311      	str	r3, [sp, #68]	; 0x44
  4020be:	2a00      	cmp	r2, #0
  4020c0:	f040 86ea 	bne.w	402e98 <_svfprintf_r+0x1454>
  4020c4:	f01b 0f20 	tst.w	fp, #32
  4020c8:	d15d      	bne.n	402186 <_svfprintf_r+0x742>
  4020ca:	f01b 0f10 	tst.w	fp, #16
  4020ce:	f040 8308 	bne.w	4026e2 <_svfprintf_r+0xc9e>
  4020d2:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4020d6:	f000 8304 	beq.w	4026e2 <_svfprintf_r+0xc9e>
  4020da:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4020dc:	f9b1 4000 	ldrsh.w	r4, [r1]
  4020e0:	3104      	adds	r1, #4
  4020e2:	17e5      	asrs	r5, r4, #31
  4020e4:	4622      	mov	r2, r4
  4020e6:	462b      	mov	r3, r5
  4020e8:	910f      	str	r1, [sp, #60]	; 0x3c
  4020ea:	2a00      	cmp	r2, #0
  4020ec:	f173 0300 	sbcs.w	r3, r3, #0
  4020f0:	db58      	blt.n	4021a4 <_svfprintf_r+0x760>
  4020f2:	990a      	ldr	r1, [sp, #40]	; 0x28
  4020f4:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4020f8:	1c4a      	adds	r2, r1, #1
  4020fa:	f04f 0301 	mov.w	r3, #1
  4020fe:	f47f ad9b 	bne.w	401c38 <_svfprintf_r+0x1f4>
  402102:	ea54 0205 	orrs.w	r2, r4, r5
  402106:	f000 81df 	beq.w	4024c8 <_svfprintf_r+0xa84>
  40210a:	f8cd b01c 	str.w	fp, [sp, #28]
  40210e:	2b01      	cmp	r3, #1
  402110:	f000 827b 	beq.w	40260a <_svfprintf_r+0xbc6>
  402114:	2b02      	cmp	r3, #2
  402116:	f040 8206 	bne.w	402526 <_svfprintf_r+0xae2>
  40211a:	9818      	ldr	r0, [sp, #96]	; 0x60
  40211c:	464e      	mov	r6, r9
  40211e:	0923      	lsrs	r3, r4, #4
  402120:	f004 010f 	and.w	r1, r4, #15
  402124:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402128:	092a      	lsrs	r2, r5, #4
  40212a:	461c      	mov	r4, r3
  40212c:	4615      	mov	r5, r2
  40212e:	5c43      	ldrb	r3, [r0, r1]
  402130:	f806 3d01 	strb.w	r3, [r6, #-1]!
  402134:	ea54 0305 	orrs.w	r3, r4, r5
  402138:	d1f1      	bne.n	40211e <_svfprintf_r+0x6da>
  40213a:	eba9 0306 	sub.w	r3, r9, r6
  40213e:	930e      	str	r3, [sp, #56]	; 0x38
  402140:	e590      	b.n	401c64 <_svfprintf_r+0x220>
  402142:	9311      	str	r3, [sp, #68]	; 0x44
  402144:	2a00      	cmp	r2, #0
  402146:	f040 86a3 	bne.w	402e90 <_svfprintf_r+0x144c>
  40214a:	4b7e      	ldr	r3, [pc, #504]	; (402344 <_svfprintf_r+0x900>)
  40214c:	9318      	str	r3, [sp, #96]	; 0x60
  40214e:	f01b 0f20 	tst.w	fp, #32
  402152:	f43f aeef 	beq.w	401f34 <_svfprintf_r+0x4f0>
  402156:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402158:	3507      	adds	r5, #7
  40215a:	f025 0307 	bic.w	r3, r5, #7
  40215e:	f103 0208 	add.w	r2, r3, #8
  402162:	f01b 0f01 	tst.w	fp, #1
  402166:	920f      	str	r2, [sp, #60]	; 0x3c
  402168:	e9d3 4500 	ldrd	r4, r5, [r3]
  40216c:	f47f aef4 	bne.w	401f58 <_svfprintf_r+0x514>
  402170:	2302      	movs	r3, #2
  402172:	e55a      	b.n	401c2a <_svfprintf_r+0x1e6>
  402174:	9311      	str	r3, [sp, #68]	; 0x44
  402176:	2a00      	cmp	r2, #0
  402178:	f040 8686 	bne.w	402e88 <_svfprintf_r+0x1444>
  40217c:	f04b 0b10 	orr.w	fp, fp, #16
  402180:	f01b 0f20 	tst.w	fp, #32
  402184:	d0a1      	beq.n	4020ca <_svfprintf_r+0x686>
  402186:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402188:	3507      	adds	r5, #7
  40218a:	f025 0507 	bic.w	r5, r5, #7
  40218e:	e9d5 2300 	ldrd	r2, r3, [r5]
  402192:	2a00      	cmp	r2, #0
  402194:	f105 0108 	add.w	r1, r5, #8
  402198:	461d      	mov	r5, r3
  40219a:	f173 0300 	sbcs.w	r3, r3, #0
  40219e:	910f      	str	r1, [sp, #60]	; 0x3c
  4021a0:	4614      	mov	r4, r2
  4021a2:	daa6      	bge.n	4020f2 <_svfprintf_r+0x6ae>
  4021a4:	272d      	movs	r7, #45	; 0x2d
  4021a6:	4264      	negs	r4, r4
  4021a8:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  4021ac:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4021b0:	2301      	movs	r3, #1
  4021b2:	e53d      	b.n	401c30 <_svfprintf_r+0x1ec>
  4021b4:	9311      	str	r3, [sp, #68]	; 0x44
  4021b6:	2a00      	cmp	r2, #0
  4021b8:	f040 8662 	bne.w	402e80 <_svfprintf_r+0x143c>
  4021bc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4021be:	3507      	adds	r5, #7
  4021c0:	f025 0307 	bic.w	r3, r5, #7
  4021c4:	f103 0208 	add.w	r2, r3, #8
  4021c8:	920f      	str	r2, [sp, #60]	; 0x3c
  4021ca:	681a      	ldr	r2, [r3, #0]
  4021cc:	9215      	str	r2, [sp, #84]	; 0x54
  4021ce:	685b      	ldr	r3, [r3, #4]
  4021d0:	9314      	str	r3, [sp, #80]	; 0x50
  4021d2:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4021d4:	9d15      	ldr	r5, [sp, #84]	; 0x54
  4021d6:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  4021da:	4628      	mov	r0, r5
  4021dc:	4621      	mov	r1, r4
  4021de:	f04f 32ff 	mov.w	r2, #4294967295
  4021e2:	4b59      	ldr	r3, [pc, #356]	; (402348 <_svfprintf_r+0x904>)
  4021e4:	f003 ff00 	bl	405fe8 <__aeabi_dcmpun>
  4021e8:	2800      	cmp	r0, #0
  4021ea:	f040 834a 	bne.w	402882 <_svfprintf_r+0xe3e>
  4021ee:	4628      	mov	r0, r5
  4021f0:	4621      	mov	r1, r4
  4021f2:	f04f 32ff 	mov.w	r2, #4294967295
  4021f6:	4b54      	ldr	r3, [pc, #336]	; (402348 <_svfprintf_r+0x904>)
  4021f8:	f003 fed8 	bl	405fac <__aeabi_dcmple>
  4021fc:	2800      	cmp	r0, #0
  4021fe:	f040 8340 	bne.w	402882 <_svfprintf_r+0xe3e>
  402202:	a815      	add	r0, sp, #84	; 0x54
  402204:	c80d      	ldmia	r0, {r0, r2, r3}
  402206:	9914      	ldr	r1, [sp, #80]	; 0x50
  402208:	f003 fec6 	bl	405f98 <__aeabi_dcmplt>
  40220c:	2800      	cmp	r0, #0
  40220e:	f040 8530 	bne.w	402c72 <_svfprintf_r+0x122e>
  402212:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402216:	4e4d      	ldr	r6, [pc, #308]	; (40234c <_svfprintf_r+0x908>)
  402218:	4b4d      	ldr	r3, [pc, #308]	; (402350 <_svfprintf_r+0x90c>)
  40221a:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  40221e:	9007      	str	r0, [sp, #28]
  402220:	9811      	ldr	r0, [sp, #68]	; 0x44
  402222:	2203      	movs	r2, #3
  402224:	2100      	movs	r1, #0
  402226:	9208      	str	r2, [sp, #32]
  402228:	910a      	str	r1, [sp, #40]	; 0x28
  40222a:	2847      	cmp	r0, #71	; 0x47
  40222c:	bfd8      	it	le
  40222e:	461e      	movle	r6, r3
  402230:	920e      	str	r2, [sp, #56]	; 0x38
  402232:	9112      	str	r1, [sp, #72]	; 0x48
  402234:	e51e      	b.n	401c74 <_svfprintf_r+0x230>
  402236:	f04b 0b08 	orr.w	fp, fp, #8
  40223a:	f89a 3000 	ldrb.w	r3, [sl]
  40223e:	e459      	b.n	401af4 <_svfprintf_r+0xb0>
  402240:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402244:	2300      	movs	r3, #0
  402246:	461c      	mov	r4, r3
  402248:	f81a 3b01 	ldrb.w	r3, [sl], #1
  40224c:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402250:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402254:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402258:	2809      	cmp	r0, #9
  40225a:	d9f5      	bls.n	402248 <_svfprintf_r+0x804>
  40225c:	940d      	str	r4, [sp, #52]	; 0x34
  40225e:	e44b      	b.n	401af8 <_svfprintf_r+0xb4>
  402260:	f04b 0b10 	orr.w	fp, fp, #16
  402264:	9311      	str	r3, [sp, #68]	; 0x44
  402266:	f01b 0320 	ands.w	r3, fp, #32
  40226a:	f43f ae1d 	beq.w	401ea8 <_svfprintf_r+0x464>
  40226e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402270:	3507      	adds	r5, #7
  402272:	f025 0307 	bic.w	r3, r5, #7
  402276:	f103 0208 	add.w	r2, r3, #8
  40227a:	e9d3 4500 	ldrd	r4, r5, [r3]
  40227e:	920f      	str	r2, [sp, #60]	; 0x3c
  402280:	2300      	movs	r3, #0
  402282:	e4d2      	b.n	401c2a <_svfprintf_r+0x1e6>
  402284:	9311      	str	r3, [sp, #68]	; 0x44
  402286:	2a00      	cmp	r2, #0
  402288:	f040 85e7 	bne.w	402e5a <_svfprintf_r+0x1416>
  40228c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40228e:	2a00      	cmp	r2, #0
  402290:	f43f aca3 	beq.w	401bda <_svfprintf_r+0x196>
  402294:	2300      	movs	r3, #0
  402296:	2101      	movs	r1, #1
  402298:	461f      	mov	r7, r3
  40229a:	9108      	str	r1, [sp, #32]
  40229c:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4022a0:	f8cd b01c 	str.w	fp, [sp, #28]
  4022a4:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4022a8:	930a      	str	r3, [sp, #40]	; 0x28
  4022aa:	9312      	str	r3, [sp, #72]	; 0x48
  4022ac:	910e      	str	r1, [sp, #56]	; 0x38
  4022ae:	ae28      	add	r6, sp, #160	; 0xa0
  4022b0:	e4e4      	b.n	401c7c <_svfprintf_r+0x238>
  4022b2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4022b4:	e534      	b.n	401d20 <_svfprintf_r+0x2dc>
  4022b6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4022b8:	2b65      	cmp	r3, #101	; 0x65
  4022ba:	f340 80a7 	ble.w	40240c <_svfprintf_r+0x9c8>
  4022be:	a815      	add	r0, sp, #84	; 0x54
  4022c0:	c80d      	ldmia	r0, {r0, r2, r3}
  4022c2:	9914      	ldr	r1, [sp, #80]	; 0x50
  4022c4:	f003 fe5e 	bl	405f84 <__aeabi_dcmpeq>
  4022c8:	2800      	cmp	r0, #0
  4022ca:	f000 8150 	beq.w	40256e <_svfprintf_r+0xb2a>
  4022ce:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4022d0:	4a20      	ldr	r2, [pc, #128]	; (402354 <_svfprintf_r+0x910>)
  4022d2:	f8c8 2000 	str.w	r2, [r8]
  4022d6:	3301      	adds	r3, #1
  4022d8:	3401      	adds	r4, #1
  4022da:	2201      	movs	r2, #1
  4022dc:	2b07      	cmp	r3, #7
  4022de:	9427      	str	r4, [sp, #156]	; 0x9c
  4022e0:	9326      	str	r3, [sp, #152]	; 0x98
  4022e2:	f8c8 2004 	str.w	r2, [r8, #4]
  4022e6:	f300 836a 	bgt.w	4029be <_svfprintf_r+0xf7a>
  4022ea:	f108 0808 	add.w	r8, r8, #8
  4022ee:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4022f0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4022f2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4022f4:	4293      	cmp	r3, r2
  4022f6:	db03      	blt.n	402300 <_svfprintf_r+0x8bc>
  4022f8:	9b07      	ldr	r3, [sp, #28]
  4022fa:	07dd      	lsls	r5, r3, #31
  4022fc:	f57f ad82 	bpl.w	401e04 <_svfprintf_r+0x3c0>
  402300:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402302:	9919      	ldr	r1, [sp, #100]	; 0x64
  402304:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402306:	f8c8 2000 	str.w	r2, [r8]
  40230a:	3301      	adds	r3, #1
  40230c:	440c      	add	r4, r1
  40230e:	2b07      	cmp	r3, #7
  402310:	f8c8 1004 	str.w	r1, [r8, #4]
  402314:	9427      	str	r4, [sp, #156]	; 0x9c
  402316:	9326      	str	r3, [sp, #152]	; 0x98
  402318:	f300 839e 	bgt.w	402a58 <_svfprintf_r+0x1014>
  40231c:	f108 0808 	add.w	r8, r8, #8
  402320:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402322:	1e5e      	subs	r6, r3, #1
  402324:	2e00      	cmp	r6, #0
  402326:	f77f ad6d 	ble.w	401e04 <_svfprintf_r+0x3c0>
  40232a:	2e10      	cmp	r6, #16
  40232c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40232e:	4d0a      	ldr	r5, [pc, #40]	; (402358 <_svfprintf_r+0x914>)
  402330:	f340 81f5 	ble.w	40271e <_svfprintf_r+0xcda>
  402334:	4622      	mov	r2, r4
  402336:	2710      	movs	r7, #16
  402338:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40233c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  40233e:	e013      	b.n	402368 <_svfprintf_r+0x924>
  402340:	00406ffc 	.word	0x00406ffc
  402344:	00406fe8 	.word	0x00406fe8
  402348:	7fefffff 	.word	0x7fefffff
  40234c:	00406fdc 	.word	0x00406fdc
  402350:	00406fd8 	.word	0x00406fd8
  402354:	00407018 	.word	0x00407018
  402358:	0040702c 	.word	0x0040702c
  40235c:	f108 0808 	add.w	r8, r8, #8
  402360:	3e10      	subs	r6, #16
  402362:	2e10      	cmp	r6, #16
  402364:	f340 81da 	ble.w	40271c <_svfprintf_r+0xcd8>
  402368:	3301      	adds	r3, #1
  40236a:	3210      	adds	r2, #16
  40236c:	2b07      	cmp	r3, #7
  40236e:	9227      	str	r2, [sp, #156]	; 0x9c
  402370:	9326      	str	r3, [sp, #152]	; 0x98
  402372:	e888 00a0 	stmia.w	r8, {r5, r7}
  402376:	ddf1      	ble.n	40235c <_svfprintf_r+0x918>
  402378:	aa25      	add	r2, sp, #148	; 0x94
  40237a:	4621      	mov	r1, r4
  40237c:	4658      	mov	r0, fp
  40237e:	f002 fd6d 	bl	404e5c <__ssprint_r>
  402382:	2800      	cmp	r0, #0
  402384:	f47f ac30 	bne.w	401be8 <_svfprintf_r+0x1a4>
  402388:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40238a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40238c:	46c8      	mov	r8, r9
  40238e:	e7e7      	b.n	402360 <_svfprintf_r+0x91c>
  402390:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402392:	9a08      	ldr	r2, [sp, #32]
  402394:	1a9f      	subs	r7, r3, r2
  402396:	2f00      	cmp	r7, #0
  402398:	f77f ace5 	ble.w	401d66 <_svfprintf_r+0x322>
  40239c:	2f10      	cmp	r7, #16
  40239e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4023a0:	4db6      	ldr	r5, [pc, #728]	; (40267c <_svfprintf_r+0xc38>)
  4023a2:	dd27      	ble.n	4023f4 <_svfprintf_r+0x9b0>
  4023a4:	4642      	mov	r2, r8
  4023a6:	4621      	mov	r1, r4
  4023a8:	46b0      	mov	r8, r6
  4023aa:	f04f 0b10 	mov.w	fp, #16
  4023ae:	462e      	mov	r6, r5
  4023b0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4023b2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4023b4:	e004      	b.n	4023c0 <_svfprintf_r+0x97c>
  4023b6:	3f10      	subs	r7, #16
  4023b8:	2f10      	cmp	r7, #16
  4023ba:	f102 0208 	add.w	r2, r2, #8
  4023be:	dd15      	ble.n	4023ec <_svfprintf_r+0x9a8>
  4023c0:	3301      	adds	r3, #1
  4023c2:	3110      	adds	r1, #16
  4023c4:	2b07      	cmp	r3, #7
  4023c6:	9127      	str	r1, [sp, #156]	; 0x9c
  4023c8:	9326      	str	r3, [sp, #152]	; 0x98
  4023ca:	e882 0840 	stmia.w	r2, {r6, fp}
  4023ce:	ddf2      	ble.n	4023b6 <_svfprintf_r+0x972>
  4023d0:	aa25      	add	r2, sp, #148	; 0x94
  4023d2:	4629      	mov	r1, r5
  4023d4:	4620      	mov	r0, r4
  4023d6:	f002 fd41 	bl	404e5c <__ssprint_r>
  4023da:	2800      	cmp	r0, #0
  4023dc:	f47f ac04 	bne.w	401be8 <_svfprintf_r+0x1a4>
  4023e0:	3f10      	subs	r7, #16
  4023e2:	2f10      	cmp	r7, #16
  4023e4:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4023e6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4023e8:	464a      	mov	r2, r9
  4023ea:	dce9      	bgt.n	4023c0 <_svfprintf_r+0x97c>
  4023ec:	4635      	mov	r5, r6
  4023ee:	460c      	mov	r4, r1
  4023f0:	4646      	mov	r6, r8
  4023f2:	4690      	mov	r8, r2
  4023f4:	3301      	adds	r3, #1
  4023f6:	443c      	add	r4, r7
  4023f8:	2b07      	cmp	r3, #7
  4023fa:	9427      	str	r4, [sp, #156]	; 0x9c
  4023fc:	9326      	str	r3, [sp, #152]	; 0x98
  4023fe:	e888 00a0 	stmia.w	r8, {r5, r7}
  402402:	f300 8232 	bgt.w	40286a <_svfprintf_r+0xe26>
  402406:	f108 0808 	add.w	r8, r8, #8
  40240a:	e4ac      	b.n	401d66 <_svfprintf_r+0x322>
  40240c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40240e:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402410:	2b01      	cmp	r3, #1
  402412:	f340 81fe 	ble.w	402812 <_svfprintf_r+0xdce>
  402416:	3701      	adds	r7, #1
  402418:	3401      	adds	r4, #1
  40241a:	2301      	movs	r3, #1
  40241c:	2f07      	cmp	r7, #7
  40241e:	9427      	str	r4, [sp, #156]	; 0x9c
  402420:	9726      	str	r7, [sp, #152]	; 0x98
  402422:	f8c8 6000 	str.w	r6, [r8]
  402426:	f8c8 3004 	str.w	r3, [r8, #4]
  40242a:	f300 8203 	bgt.w	402834 <_svfprintf_r+0xdf0>
  40242e:	f108 0808 	add.w	r8, r8, #8
  402432:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402434:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  402436:	f8c8 3000 	str.w	r3, [r8]
  40243a:	3701      	adds	r7, #1
  40243c:	4414      	add	r4, r2
  40243e:	2f07      	cmp	r7, #7
  402440:	9427      	str	r4, [sp, #156]	; 0x9c
  402442:	9726      	str	r7, [sp, #152]	; 0x98
  402444:	f8c8 2004 	str.w	r2, [r8, #4]
  402448:	f300 8200 	bgt.w	40284c <_svfprintf_r+0xe08>
  40244c:	f108 0808 	add.w	r8, r8, #8
  402450:	a815      	add	r0, sp, #84	; 0x54
  402452:	c80d      	ldmia	r0, {r0, r2, r3}
  402454:	9914      	ldr	r1, [sp, #80]	; 0x50
  402456:	f003 fd95 	bl	405f84 <__aeabi_dcmpeq>
  40245a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40245c:	2800      	cmp	r0, #0
  40245e:	f040 8101 	bne.w	402664 <_svfprintf_r+0xc20>
  402462:	3b01      	subs	r3, #1
  402464:	3701      	adds	r7, #1
  402466:	3601      	adds	r6, #1
  402468:	441c      	add	r4, r3
  40246a:	2f07      	cmp	r7, #7
  40246c:	9726      	str	r7, [sp, #152]	; 0x98
  40246e:	9427      	str	r4, [sp, #156]	; 0x9c
  402470:	f8c8 6000 	str.w	r6, [r8]
  402474:	f8c8 3004 	str.w	r3, [r8, #4]
  402478:	f300 8127 	bgt.w	4026ca <_svfprintf_r+0xc86>
  40247c:	f108 0808 	add.w	r8, r8, #8
  402480:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  402482:	f8c8 2004 	str.w	r2, [r8, #4]
  402486:	3701      	adds	r7, #1
  402488:	4414      	add	r4, r2
  40248a:	ab21      	add	r3, sp, #132	; 0x84
  40248c:	2f07      	cmp	r7, #7
  40248e:	9427      	str	r4, [sp, #156]	; 0x9c
  402490:	9726      	str	r7, [sp, #152]	; 0x98
  402492:	f8c8 3000 	str.w	r3, [r8]
  402496:	f77f acb3 	ble.w	401e00 <_svfprintf_r+0x3bc>
  40249a:	aa25      	add	r2, sp, #148	; 0x94
  40249c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40249e:	980c      	ldr	r0, [sp, #48]	; 0x30
  4024a0:	f002 fcdc 	bl	404e5c <__ssprint_r>
  4024a4:	2800      	cmp	r0, #0
  4024a6:	f47f ab9f 	bne.w	401be8 <_svfprintf_r+0x1a4>
  4024aa:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4024ac:	46c8      	mov	r8, r9
  4024ae:	e4a9      	b.n	401e04 <_svfprintf_r+0x3c0>
  4024b0:	aa25      	add	r2, sp, #148	; 0x94
  4024b2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4024b4:	980c      	ldr	r0, [sp, #48]	; 0x30
  4024b6:	f002 fcd1 	bl	404e5c <__ssprint_r>
  4024ba:	2800      	cmp	r0, #0
  4024bc:	f43f aceb 	beq.w	401e96 <_svfprintf_r+0x452>
  4024c0:	f7ff bb92 	b.w	401be8 <_svfprintf_r+0x1a4>
  4024c4:	f8dd b01c 	ldr.w	fp, [sp, #28]
  4024c8:	2b01      	cmp	r3, #1
  4024ca:	f000 8134 	beq.w	402736 <_svfprintf_r+0xcf2>
  4024ce:	2b02      	cmp	r3, #2
  4024d0:	d125      	bne.n	40251e <_svfprintf_r+0xada>
  4024d2:	f8cd b01c 	str.w	fp, [sp, #28]
  4024d6:	2400      	movs	r4, #0
  4024d8:	2500      	movs	r5, #0
  4024da:	e61e      	b.n	40211a <_svfprintf_r+0x6d6>
  4024dc:	aa25      	add	r2, sp, #148	; 0x94
  4024de:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4024e0:	980c      	ldr	r0, [sp, #48]	; 0x30
  4024e2:	f002 fcbb 	bl	404e5c <__ssprint_r>
  4024e6:	2800      	cmp	r0, #0
  4024e8:	f47f ab7e 	bne.w	401be8 <_svfprintf_r+0x1a4>
  4024ec:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4024ee:	46c8      	mov	r8, r9
  4024f0:	e475      	b.n	401dde <_svfprintf_r+0x39a>
  4024f2:	aa25      	add	r2, sp, #148	; 0x94
  4024f4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4024f6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4024f8:	f002 fcb0 	bl	404e5c <__ssprint_r>
  4024fc:	2800      	cmp	r0, #0
  4024fe:	f47f ab73 	bne.w	401be8 <_svfprintf_r+0x1a4>
  402502:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402504:	46c8      	mov	r8, r9
  402506:	e41b      	b.n	401d40 <_svfprintf_r+0x2fc>
  402508:	aa25      	add	r2, sp, #148	; 0x94
  40250a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40250c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40250e:	f002 fca5 	bl	404e5c <__ssprint_r>
  402512:	2800      	cmp	r0, #0
  402514:	f47f ab68 	bne.w	401be8 <_svfprintf_r+0x1a4>
  402518:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40251a:	46c8      	mov	r8, r9
  40251c:	e420      	b.n	401d60 <_svfprintf_r+0x31c>
  40251e:	f8cd b01c 	str.w	fp, [sp, #28]
  402522:	2400      	movs	r4, #0
  402524:	2500      	movs	r5, #0
  402526:	4649      	mov	r1, r9
  402528:	e000      	b.n	40252c <_svfprintf_r+0xae8>
  40252a:	4631      	mov	r1, r6
  40252c:	08e2      	lsrs	r2, r4, #3
  40252e:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402532:	08e8      	lsrs	r0, r5, #3
  402534:	f004 0307 	and.w	r3, r4, #7
  402538:	4605      	mov	r5, r0
  40253a:	4614      	mov	r4, r2
  40253c:	3330      	adds	r3, #48	; 0x30
  40253e:	ea54 0205 	orrs.w	r2, r4, r5
  402542:	f801 3c01 	strb.w	r3, [r1, #-1]
  402546:	f101 36ff 	add.w	r6, r1, #4294967295
  40254a:	d1ee      	bne.n	40252a <_svfprintf_r+0xae6>
  40254c:	9a07      	ldr	r2, [sp, #28]
  40254e:	07d2      	lsls	r2, r2, #31
  402550:	f57f adf3 	bpl.w	40213a <_svfprintf_r+0x6f6>
  402554:	2b30      	cmp	r3, #48	; 0x30
  402556:	f43f adf0 	beq.w	40213a <_svfprintf_r+0x6f6>
  40255a:	3902      	subs	r1, #2
  40255c:	2330      	movs	r3, #48	; 0x30
  40255e:	f806 3c01 	strb.w	r3, [r6, #-1]
  402562:	eba9 0301 	sub.w	r3, r9, r1
  402566:	930e      	str	r3, [sp, #56]	; 0x38
  402568:	460e      	mov	r6, r1
  40256a:	f7ff bb7b 	b.w	401c64 <_svfprintf_r+0x220>
  40256e:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402570:	2900      	cmp	r1, #0
  402572:	f340 822e 	ble.w	4029d2 <_svfprintf_r+0xf8e>
  402576:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402578:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  40257a:	4293      	cmp	r3, r2
  40257c:	bfa8      	it	ge
  40257e:	4613      	movge	r3, r2
  402580:	2b00      	cmp	r3, #0
  402582:	461f      	mov	r7, r3
  402584:	dd0d      	ble.n	4025a2 <_svfprintf_r+0xb5e>
  402586:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402588:	f8c8 6000 	str.w	r6, [r8]
  40258c:	3301      	adds	r3, #1
  40258e:	443c      	add	r4, r7
  402590:	2b07      	cmp	r3, #7
  402592:	9427      	str	r4, [sp, #156]	; 0x9c
  402594:	f8c8 7004 	str.w	r7, [r8, #4]
  402598:	9326      	str	r3, [sp, #152]	; 0x98
  40259a:	f300 831f 	bgt.w	402bdc <_svfprintf_r+0x1198>
  40259e:	f108 0808 	add.w	r8, r8, #8
  4025a2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4025a4:	2f00      	cmp	r7, #0
  4025a6:	bfa8      	it	ge
  4025a8:	1bdb      	subge	r3, r3, r7
  4025aa:	2b00      	cmp	r3, #0
  4025ac:	461f      	mov	r7, r3
  4025ae:	f340 80d6 	ble.w	40275e <_svfprintf_r+0xd1a>
  4025b2:	2f10      	cmp	r7, #16
  4025b4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4025b6:	4d31      	ldr	r5, [pc, #196]	; (40267c <_svfprintf_r+0xc38>)
  4025b8:	f340 81ed 	ble.w	402996 <_svfprintf_r+0xf52>
  4025bc:	4642      	mov	r2, r8
  4025be:	4621      	mov	r1, r4
  4025c0:	46b0      	mov	r8, r6
  4025c2:	f04f 0b10 	mov.w	fp, #16
  4025c6:	462e      	mov	r6, r5
  4025c8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4025ca:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4025cc:	e004      	b.n	4025d8 <_svfprintf_r+0xb94>
  4025ce:	3208      	adds	r2, #8
  4025d0:	3f10      	subs	r7, #16
  4025d2:	2f10      	cmp	r7, #16
  4025d4:	f340 81db 	ble.w	40298e <_svfprintf_r+0xf4a>
  4025d8:	3301      	adds	r3, #1
  4025da:	3110      	adds	r1, #16
  4025dc:	2b07      	cmp	r3, #7
  4025de:	9127      	str	r1, [sp, #156]	; 0x9c
  4025e0:	9326      	str	r3, [sp, #152]	; 0x98
  4025e2:	e882 0840 	stmia.w	r2, {r6, fp}
  4025e6:	ddf2      	ble.n	4025ce <_svfprintf_r+0xb8a>
  4025e8:	aa25      	add	r2, sp, #148	; 0x94
  4025ea:	4629      	mov	r1, r5
  4025ec:	4620      	mov	r0, r4
  4025ee:	f002 fc35 	bl	404e5c <__ssprint_r>
  4025f2:	2800      	cmp	r0, #0
  4025f4:	f47f aaf8 	bne.w	401be8 <_svfprintf_r+0x1a4>
  4025f8:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4025fa:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4025fc:	464a      	mov	r2, r9
  4025fe:	e7e7      	b.n	4025d0 <_svfprintf_r+0xb8c>
  402600:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402602:	930e      	str	r3, [sp, #56]	; 0x38
  402604:	464e      	mov	r6, r9
  402606:	f7ff bb2d 	b.w	401c64 <_svfprintf_r+0x220>
  40260a:	2d00      	cmp	r5, #0
  40260c:	bf08      	it	eq
  40260e:	2c0a      	cmpeq	r4, #10
  402610:	f0c0 808f 	bcc.w	402732 <_svfprintf_r+0xcee>
  402614:	464e      	mov	r6, r9
  402616:	4620      	mov	r0, r4
  402618:	4629      	mov	r1, r5
  40261a:	220a      	movs	r2, #10
  40261c:	2300      	movs	r3, #0
  40261e:	f003 fd21 	bl	406064 <__aeabi_uldivmod>
  402622:	3230      	adds	r2, #48	; 0x30
  402624:	f806 2d01 	strb.w	r2, [r6, #-1]!
  402628:	4620      	mov	r0, r4
  40262a:	4629      	mov	r1, r5
  40262c:	2300      	movs	r3, #0
  40262e:	220a      	movs	r2, #10
  402630:	f003 fd18 	bl	406064 <__aeabi_uldivmod>
  402634:	4604      	mov	r4, r0
  402636:	460d      	mov	r5, r1
  402638:	ea54 0305 	orrs.w	r3, r4, r5
  40263c:	d1eb      	bne.n	402616 <_svfprintf_r+0xbd2>
  40263e:	eba9 0306 	sub.w	r3, r9, r6
  402642:	930e      	str	r3, [sp, #56]	; 0x38
  402644:	f7ff bb0e 	b.w	401c64 <_svfprintf_r+0x220>
  402648:	aa25      	add	r2, sp, #148	; 0x94
  40264a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40264c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40264e:	f002 fc05 	bl	404e5c <__ssprint_r>
  402652:	2800      	cmp	r0, #0
  402654:	f47f aac8 	bne.w	401be8 <_svfprintf_r+0x1a4>
  402658:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40265c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40265e:	46c8      	mov	r8, r9
  402660:	f7ff bb5e 	b.w	401d20 <_svfprintf_r+0x2dc>
  402664:	1e5e      	subs	r6, r3, #1
  402666:	2e00      	cmp	r6, #0
  402668:	f77f af0a 	ble.w	402480 <_svfprintf_r+0xa3c>
  40266c:	2e10      	cmp	r6, #16
  40266e:	4d03      	ldr	r5, [pc, #12]	; (40267c <_svfprintf_r+0xc38>)
  402670:	dd22      	ble.n	4026b8 <_svfprintf_r+0xc74>
  402672:	4622      	mov	r2, r4
  402674:	f04f 0b10 	mov.w	fp, #16
  402678:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40267a:	e006      	b.n	40268a <_svfprintf_r+0xc46>
  40267c:	0040702c 	.word	0x0040702c
  402680:	3e10      	subs	r6, #16
  402682:	2e10      	cmp	r6, #16
  402684:	f108 0808 	add.w	r8, r8, #8
  402688:	dd15      	ble.n	4026b6 <_svfprintf_r+0xc72>
  40268a:	3701      	adds	r7, #1
  40268c:	3210      	adds	r2, #16
  40268e:	2f07      	cmp	r7, #7
  402690:	9227      	str	r2, [sp, #156]	; 0x9c
  402692:	9726      	str	r7, [sp, #152]	; 0x98
  402694:	e888 0820 	stmia.w	r8, {r5, fp}
  402698:	ddf2      	ble.n	402680 <_svfprintf_r+0xc3c>
  40269a:	aa25      	add	r2, sp, #148	; 0x94
  40269c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40269e:	4620      	mov	r0, r4
  4026a0:	f002 fbdc 	bl	404e5c <__ssprint_r>
  4026a4:	2800      	cmp	r0, #0
  4026a6:	f47f aa9f 	bne.w	401be8 <_svfprintf_r+0x1a4>
  4026aa:	3e10      	subs	r6, #16
  4026ac:	2e10      	cmp	r6, #16
  4026ae:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4026b0:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4026b2:	46c8      	mov	r8, r9
  4026b4:	dce9      	bgt.n	40268a <_svfprintf_r+0xc46>
  4026b6:	4614      	mov	r4, r2
  4026b8:	3701      	adds	r7, #1
  4026ba:	4434      	add	r4, r6
  4026bc:	2f07      	cmp	r7, #7
  4026be:	9427      	str	r4, [sp, #156]	; 0x9c
  4026c0:	9726      	str	r7, [sp, #152]	; 0x98
  4026c2:	e888 0060 	stmia.w	r8, {r5, r6}
  4026c6:	f77f aed9 	ble.w	40247c <_svfprintf_r+0xa38>
  4026ca:	aa25      	add	r2, sp, #148	; 0x94
  4026cc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4026ce:	980c      	ldr	r0, [sp, #48]	; 0x30
  4026d0:	f002 fbc4 	bl	404e5c <__ssprint_r>
  4026d4:	2800      	cmp	r0, #0
  4026d6:	f47f aa87 	bne.w	401be8 <_svfprintf_r+0x1a4>
  4026da:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4026dc:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4026de:	46c8      	mov	r8, r9
  4026e0:	e6ce      	b.n	402480 <_svfprintf_r+0xa3c>
  4026e2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4026e4:	6814      	ldr	r4, [r2, #0]
  4026e6:	4613      	mov	r3, r2
  4026e8:	3304      	adds	r3, #4
  4026ea:	17e5      	asrs	r5, r4, #31
  4026ec:	930f      	str	r3, [sp, #60]	; 0x3c
  4026ee:	4622      	mov	r2, r4
  4026f0:	462b      	mov	r3, r5
  4026f2:	e4fa      	b.n	4020ea <_svfprintf_r+0x6a6>
  4026f4:	3204      	adds	r2, #4
  4026f6:	681c      	ldr	r4, [r3, #0]
  4026f8:	920f      	str	r2, [sp, #60]	; 0x3c
  4026fa:	2301      	movs	r3, #1
  4026fc:	2500      	movs	r5, #0
  4026fe:	f7ff ba94 	b.w	401c2a <_svfprintf_r+0x1e6>
  402702:	681c      	ldr	r4, [r3, #0]
  402704:	3304      	adds	r3, #4
  402706:	930f      	str	r3, [sp, #60]	; 0x3c
  402708:	2500      	movs	r5, #0
  40270a:	e421      	b.n	401f50 <_svfprintf_r+0x50c>
  40270c:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40270e:	460a      	mov	r2, r1
  402710:	3204      	adds	r2, #4
  402712:	680c      	ldr	r4, [r1, #0]
  402714:	920f      	str	r2, [sp, #60]	; 0x3c
  402716:	2500      	movs	r5, #0
  402718:	f7ff ba87 	b.w	401c2a <_svfprintf_r+0x1e6>
  40271c:	4614      	mov	r4, r2
  40271e:	3301      	adds	r3, #1
  402720:	4434      	add	r4, r6
  402722:	2b07      	cmp	r3, #7
  402724:	9427      	str	r4, [sp, #156]	; 0x9c
  402726:	9326      	str	r3, [sp, #152]	; 0x98
  402728:	e888 0060 	stmia.w	r8, {r5, r6}
  40272c:	f77f ab68 	ble.w	401e00 <_svfprintf_r+0x3bc>
  402730:	e6b3      	b.n	40249a <_svfprintf_r+0xa56>
  402732:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402736:	f8cd b01c 	str.w	fp, [sp, #28]
  40273a:	ae42      	add	r6, sp, #264	; 0x108
  40273c:	3430      	adds	r4, #48	; 0x30
  40273e:	2301      	movs	r3, #1
  402740:	f806 4d41 	strb.w	r4, [r6, #-65]!
  402744:	930e      	str	r3, [sp, #56]	; 0x38
  402746:	f7ff ba8d 	b.w	401c64 <_svfprintf_r+0x220>
  40274a:	aa25      	add	r2, sp, #148	; 0x94
  40274c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40274e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402750:	f002 fb84 	bl	404e5c <__ssprint_r>
  402754:	2800      	cmp	r0, #0
  402756:	f47f aa47 	bne.w	401be8 <_svfprintf_r+0x1a4>
  40275a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40275c:	46c8      	mov	r8, r9
  40275e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402760:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402762:	429a      	cmp	r2, r3
  402764:	db44      	blt.n	4027f0 <_svfprintf_r+0xdac>
  402766:	9b07      	ldr	r3, [sp, #28]
  402768:	07d9      	lsls	r1, r3, #31
  40276a:	d441      	bmi.n	4027f0 <_svfprintf_r+0xdac>
  40276c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40276e:	9812      	ldr	r0, [sp, #72]	; 0x48
  402770:	1a9a      	subs	r2, r3, r2
  402772:	1a1d      	subs	r5, r3, r0
  402774:	4295      	cmp	r5, r2
  402776:	bfa8      	it	ge
  402778:	4615      	movge	r5, r2
  40277a:	2d00      	cmp	r5, #0
  40277c:	dd0e      	ble.n	40279c <_svfprintf_r+0xd58>
  40277e:	9926      	ldr	r1, [sp, #152]	; 0x98
  402780:	f8c8 5004 	str.w	r5, [r8, #4]
  402784:	3101      	adds	r1, #1
  402786:	4406      	add	r6, r0
  402788:	442c      	add	r4, r5
  40278a:	2907      	cmp	r1, #7
  40278c:	f8c8 6000 	str.w	r6, [r8]
  402790:	9427      	str	r4, [sp, #156]	; 0x9c
  402792:	9126      	str	r1, [sp, #152]	; 0x98
  402794:	f300 823b 	bgt.w	402c0e <_svfprintf_r+0x11ca>
  402798:	f108 0808 	add.w	r8, r8, #8
  40279c:	2d00      	cmp	r5, #0
  40279e:	bfac      	ite	ge
  4027a0:	1b56      	subge	r6, r2, r5
  4027a2:	4616      	movlt	r6, r2
  4027a4:	2e00      	cmp	r6, #0
  4027a6:	f77f ab2d 	ble.w	401e04 <_svfprintf_r+0x3c0>
  4027aa:	2e10      	cmp	r6, #16
  4027ac:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4027ae:	4db0      	ldr	r5, [pc, #704]	; (402a70 <_svfprintf_r+0x102c>)
  4027b0:	ddb5      	ble.n	40271e <_svfprintf_r+0xcda>
  4027b2:	4622      	mov	r2, r4
  4027b4:	2710      	movs	r7, #16
  4027b6:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  4027ba:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  4027bc:	e004      	b.n	4027c8 <_svfprintf_r+0xd84>
  4027be:	f108 0808 	add.w	r8, r8, #8
  4027c2:	3e10      	subs	r6, #16
  4027c4:	2e10      	cmp	r6, #16
  4027c6:	dda9      	ble.n	40271c <_svfprintf_r+0xcd8>
  4027c8:	3301      	adds	r3, #1
  4027ca:	3210      	adds	r2, #16
  4027cc:	2b07      	cmp	r3, #7
  4027ce:	9227      	str	r2, [sp, #156]	; 0x9c
  4027d0:	9326      	str	r3, [sp, #152]	; 0x98
  4027d2:	e888 00a0 	stmia.w	r8, {r5, r7}
  4027d6:	ddf2      	ble.n	4027be <_svfprintf_r+0xd7a>
  4027d8:	aa25      	add	r2, sp, #148	; 0x94
  4027da:	4621      	mov	r1, r4
  4027dc:	4658      	mov	r0, fp
  4027de:	f002 fb3d 	bl	404e5c <__ssprint_r>
  4027e2:	2800      	cmp	r0, #0
  4027e4:	f47f aa00 	bne.w	401be8 <_svfprintf_r+0x1a4>
  4027e8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4027ea:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4027ec:	46c8      	mov	r8, r9
  4027ee:	e7e8      	b.n	4027c2 <_svfprintf_r+0xd7e>
  4027f0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4027f2:	9819      	ldr	r0, [sp, #100]	; 0x64
  4027f4:	991a      	ldr	r1, [sp, #104]	; 0x68
  4027f6:	f8c8 1000 	str.w	r1, [r8]
  4027fa:	3301      	adds	r3, #1
  4027fc:	4404      	add	r4, r0
  4027fe:	2b07      	cmp	r3, #7
  402800:	9427      	str	r4, [sp, #156]	; 0x9c
  402802:	f8c8 0004 	str.w	r0, [r8, #4]
  402806:	9326      	str	r3, [sp, #152]	; 0x98
  402808:	f300 81f5 	bgt.w	402bf6 <_svfprintf_r+0x11b2>
  40280c:	f108 0808 	add.w	r8, r8, #8
  402810:	e7ac      	b.n	40276c <_svfprintf_r+0xd28>
  402812:	9b07      	ldr	r3, [sp, #28]
  402814:	07da      	lsls	r2, r3, #31
  402816:	f53f adfe 	bmi.w	402416 <_svfprintf_r+0x9d2>
  40281a:	3701      	adds	r7, #1
  40281c:	3401      	adds	r4, #1
  40281e:	2301      	movs	r3, #1
  402820:	2f07      	cmp	r7, #7
  402822:	9427      	str	r4, [sp, #156]	; 0x9c
  402824:	9726      	str	r7, [sp, #152]	; 0x98
  402826:	f8c8 6000 	str.w	r6, [r8]
  40282a:	f8c8 3004 	str.w	r3, [r8, #4]
  40282e:	f77f ae25 	ble.w	40247c <_svfprintf_r+0xa38>
  402832:	e74a      	b.n	4026ca <_svfprintf_r+0xc86>
  402834:	aa25      	add	r2, sp, #148	; 0x94
  402836:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402838:	980c      	ldr	r0, [sp, #48]	; 0x30
  40283a:	f002 fb0f 	bl	404e5c <__ssprint_r>
  40283e:	2800      	cmp	r0, #0
  402840:	f47f a9d2 	bne.w	401be8 <_svfprintf_r+0x1a4>
  402844:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402846:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402848:	46c8      	mov	r8, r9
  40284a:	e5f2      	b.n	402432 <_svfprintf_r+0x9ee>
  40284c:	aa25      	add	r2, sp, #148	; 0x94
  40284e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402850:	980c      	ldr	r0, [sp, #48]	; 0x30
  402852:	f002 fb03 	bl	404e5c <__ssprint_r>
  402856:	2800      	cmp	r0, #0
  402858:	f47f a9c6 	bne.w	401be8 <_svfprintf_r+0x1a4>
  40285c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40285e:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402860:	46c8      	mov	r8, r9
  402862:	e5f5      	b.n	402450 <_svfprintf_r+0xa0c>
  402864:	464e      	mov	r6, r9
  402866:	f7ff b9fd 	b.w	401c64 <_svfprintf_r+0x220>
  40286a:	aa25      	add	r2, sp, #148	; 0x94
  40286c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40286e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402870:	f002 faf4 	bl	404e5c <__ssprint_r>
  402874:	2800      	cmp	r0, #0
  402876:	f47f a9b7 	bne.w	401be8 <_svfprintf_r+0x1a4>
  40287a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40287c:	46c8      	mov	r8, r9
  40287e:	f7ff ba72 	b.w	401d66 <_svfprintf_r+0x322>
  402882:	9c15      	ldr	r4, [sp, #84]	; 0x54
  402884:	4622      	mov	r2, r4
  402886:	4620      	mov	r0, r4
  402888:	9c14      	ldr	r4, [sp, #80]	; 0x50
  40288a:	4623      	mov	r3, r4
  40288c:	4621      	mov	r1, r4
  40288e:	f003 fbab 	bl	405fe8 <__aeabi_dcmpun>
  402892:	2800      	cmp	r0, #0
  402894:	f040 8286 	bne.w	402da4 <_svfprintf_r+0x1360>
  402898:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40289a:	3301      	adds	r3, #1
  40289c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40289e:	f023 0320 	bic.w	r3, r3, #32
  4028a2:	930e      	str	r3, [sp, #56]	; 0x38
  4028a4:	f000 81e2 	beq.w	402c6c <_svfprintf_r+0x1228>
  4028a8:	2b47      	cmp	r3, #71	; 0x47
  4028aa:	f000 811e 	beq.w	402aea <_svfprintf_r+0x10a6>
  4028ae:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  4028b2:	9307      	str	r3, [sp, #28]
  4028b4:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4028b6:	1e1f      	subs	r7, r3, #0
  4028b8:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4028ba:	9308      	str	r3, [sp, #32]
  4028bc:	bfbb      	ittet	lt
  4028be:	463b      	movlt	r3, r7
  4028c0:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  4028c4:	2300      	movge	r3, #0
  4028c6:	232d      	movlt	r3, #45	; 0x2d
  4028c8:	9310      	str	r3, [sp, #64]	; 0x40
  4028ca:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4028cc:	2b66      	cmp	r3, #102	; 0x66
  4028ce:	f000 81bb 	beq.w	402c48 <_svfprintf_r+0x1204>
  4028d2:	2b46      	cmp	r3, #70	; 0x46
  4028d4:	f000 80df 	beq.w	402a96 <_svfprintf_r+0x1052>
  4028d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4028da:	9a08      	ldr	r2, [sp, #32]
  4028dc:	2b45      	cmp	r3, #69	; 0x45
  4028de:	bf0c      	ite	eq
  4028e0:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  4028e2:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  4028e4:	a823      	add	r0, sp, #140	; 0x8c
  4028e6:	a920      	add	r1, sp, #128	; 0x80
  4028e8:	bf08      	it	eq
  4028ea:	1c5d      	addeq	r5, r3, #1
  4028ec:	9004      	str	r0, [sp, #16]
  4028ee:	9103      	str	r1, [sp, #12]
  4028f0:	a81f      	add	r0, sp, #124	; 0x7c
  4028f2:	2102      	movs	r1, #2
  4028f4:	463b      	mov	r3, r7
  4028f6:	9002      	str	r0, [sp, #8]
  4028f8:	9501      	str	r5, [sp, #4]
  4028fa:	9100      	str	r1, [sp, #0]
  4028fc:	980c      	ldr	r0, [sp, #48]	; 0x30
  4028fe:	f000 fb73 	bl	402fe8 <_dtoa_r>
  402902:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402904:	2b67      	cmp	r3, #103	; 0x67
  402906:	4606      	mov	r6, r0
  402908:	f040 81e0 	bne.w	402ccc <_svfprintf_r+0x1288>
  40290c:	f01b 0f01 	tst.w	fp, #1
  402910:	f000 8246 	beq.w	402da0 <_svfprintf_r+0x135c>
  402914:	1974      	adds	r4, r6, r5
  402916:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402918:	9808      	ldr	r0, [sp, #32]
  40291a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  40291c:	4639      	mov	r1, r7
  40291e:	f003 fb31 	bl	405f84 <__aeabi_dcmpeq>
  402922:	2800      	cmp	r0, #0
  402924:	f040 8165 	bne.w	402bf2 <_svfprintf_r+0x11ae>
  402928:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40292a:	42a3      	cmp	r3, r4
  40292c:	d206      	bcs.n	40293c <_svfprintf_r+0xef8>
  40292e:	2130      	movs	r1, #48	; 0x30
  402930:	1c5a      	adds	r2, r3, #1
  402932:	9223      	str	r2, [sp, #140]	; 0x8c
  402934:	7019      	strb	r1, [r3, #0]
  402936:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402938:	429c      	cmp	r4, r3
  40293a:	d8f9      	bhi.n	402930 <_svfprintf_r+0xeec>
  40293c:	1b9b      	subs	r3, r3, r6
  40293e:	9313      	str	r3, [sp, #76]	; 0x4c
  402940:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402942:	2b47      	cmp	r3, #71	; 0x47
  402944:	f000 80e9 	beq.w	402b1a <_svfprintf_r+0x10d6>
  402948:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40294a:	2b65      	cmp	r3, #101	; 0x65
  40294c:	f340 81cd 	ble.w	402cea <_svfprintf_r+0x12a6>
  402950:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402952:	2b66      	cmp	r3, #102	; 0x66
  402954:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402956:	9312      	str	r3, [sp, #72]	; 0x48
  402958:	f000 819e 	beq.w	402c98 <_svfprintf_r+0x1254>
  40295c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40295e:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402960:	4619      	mov	r1, r3
  402962:	4291      	cmp	r1, r2
  402964:	f300 818a 	bgt.w	402c7c <_svfprintf_r+0x1238>
  402968:	f01b 0f01 	tst.w	fp, #1
  40296c:	f040 8213 	bne.w	402d96 <_svfprintf_r+0x1352>
  402970:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  402974:	9308      	str	r3, [sp, #32]
  402976:	2367      	movs	r3, #103	; 0x67
  402978:	920e      	str	r2, [sp, #56]	; 0x38
  40297a:	9311      	str	r3, [sp, #68]	; 0x44
  40297c:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40297e:	2b00      	cmp	r3, #0
  402980:	f040 80c4 	bne.w	402b0c <_svfprintf_r+0x10c8>
  402984:	930a      	str	r3, [sp, #40]	; 0x28
  402986:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40298a:	f7ff b973 	b.w	401c74 <_svfprintf_r+0x230>
  40298e:	4635      	mov	r5, r6
  402990:	460c      	mov	r4, r1
  402992:	4646      	mov	r6, r8
  402994:	4690      	mov	r8, r2
  402996:	3301      	adds	r3, #1
  402998:	443c      	add	r4, r7
  40299a:	2b07      	cmp	r3, #7
  40299c:	9427      	str	r4, [sp, #156]	; 0x9c
  40299e:	9326      	str	r3, [sp, #152]	; 0x98
  4029a0:	e888 00a0 	stmia.w	r8, {r5, r7}
  4029a4:	f73f aed1 	bgt.w	40274a <_svfprintf_r+0xd06>
  4029a8:	f108 0808 	add.w	r8, r8, #8
  4029ac:	e6d7      	b.n	40275e <_svfprintf_r+0xd1a>
  4029ae:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4029b0:	6813      	ldr	r3, [r2, #0]
  4029b2:	3204      	adds	r2, #4
  4029b4:	920f      	str	r2, [sp, #60]	; 0x3c
  4029b6:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4029b8:	601a      	str	r2, [r3, #0]
  4029ba:	f7ff b86a 	b.w	401a92 <_svfprintf_r+0x4e>
  4029be:	aa25      	add	r2, sp, #148	; 0x94
  4029c0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4029c2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4029c4:	f002 fa4a 	bl	404e5c <__ssprint_r>
  4029c8:	2800      	cmp	r0, #0
  4029ca:	f47f a90d 	bne.w	401be8 <_svfprintf_r+0x1a4>
  4029ce:	46c8      	mov	r8, r9
  4029d0:	e48d      	b.n	4022ee <_svfprintf_r+0x8aa>
  4029d2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4029d4:	4a27      	ldr	r2, [pc, #156]	; (402a74 <_svfprintf_r+0x1030>)
  4029d6:	f8c8 2000 	str.w	r2, [r8]
  4029da:	3301      	adds	r3, #1
  4029dc:	3401      	adds	r4, #1
  4029de:	2201      	movs	r2, #1
  4029e0:	2b07      	cmp	r3, #7
  4029e2:	9427      	str	r4, [sp, #156]	; 0x9c
  4029e4:	9326      	str	r3, [sp, #152]	; 0x98
  4029e6:	f8c8 2004 	str.w	r2, [r8, #4]
  4029ea:	dc72      	bgt.n	402ad2 <_svfprintf_r+0x108e>
  4029ec:	f108 0808 	add.w	r8, r8, #8
  4029f0:	b929      	cbnz	r1, 4029fe <_svfprintf_r+0xfba>
  4029f2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4029f4:	b91b      	cbnz	r3, 4029fe <_svfprintf_r+0xfba>
  4029f6:	9b07      	ldr	r3, [sp, #28]
  4029f8:	07d8      	lsls	r0, r3, #31
  4029fa:	f57f aa03 	bpl.w	401e04 <_svfprintf_r+0x3c0>
  4029fe:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402a00:	9819      	ldr	r0, [sp, #100]	; 0x64
  402a02:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402a04:	f8c8 2000 	str.w	r2, [r8]
  402a08:	3301      	adds	r3, #1
  402a0a:	4602      	mov	r2, r0
  402a0c:	4422      	add	r2, r4
  402a0e:	2b07      	cmp	r3, #7
  402a10:	9227      	str	r2, [sp, #156]	; 0x9c
  402a12:	f8c8 0004 	str.w	r0, [r8, #4]
  402a16:	9326      	str	r3, [sp, #152]	; 0x98
  402a18:	f300 818d 	bgt.w	402d36 <_svfprintf_r+0x12f2>
  402a1c:	f108 0808 	add.w	r8, r8, #8
  402a20:	2900      	cmp	r1, #0
  402a22:	f2c0 8165 	blt.w	402cf0 <_svfprintf_r+0x12ac>
  402a26:	9913      	ldr	r1, [sp, #76]	; 0x4c
  402a28:	f8c8 6000 	str.w	r6, [r8]
  402a2c:	3301      	adds	r3, #1
  402a2e:	188c      	adds	r4, r1, r2
  402a30:	2b07      	cmp	r3, #7
  402a32:	9427      	str	r4, [sp, #156]	; 0x9c
  402a34:	9326      	str	r3, [sp, #152]	; 0x98
  402a36:	f8c8 1004 	str.w	r1, [r8, #4]
  402a3a:	f77f a9e1 	ble.w	401e00 <_svfprintf_r+0x3bc>
  402a3e:	e52c      	b.n	40249a <_svfprintf_r+0xa56>
  402a40:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402a42:	9909      	ldr	r1, [sp, #36]	; 0x24
  402a44:	6813      	ldr	r3, [r2, #0]
  402a46:	17cd      	asrs	r5, r1, #31
  402a48:	4608      	mov	r0, r1
  402a4a:	3204      	adds	r2, #4
  402a4c:	4629      	mov	r1, r5
  402a4e:	920f      	str	r2, [sp, #60]	; 0x3c
  402a50:	e9c3 0100 	strd	r0, r1, [r3]
  402a54:	f7ff b81d 	b.w	401a92 <_svfprintf_r+0x4e>
  402a58:	aa25      	add	r2, sp, #148	; 0x94
  402a5a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a5c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a5e:	f002 f9fd 	bl	404e5c <__ssprint_r>
  402a62:	2800      	cmp	r0, #0
  402a64:	f47f a8c0 	bne.w	401be8 <_svfprintf_r+0x1a4>
  402a68:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402a6a:	46c8      	mov	r8, r9
  402a6c:	e458      	b.n	402320 <_svfprintf_r+0x8dc>
  402a6e:	bf00      	nop
  402a70:	0040702c 	.word	0x0040702c
  402a74:	00407018 	.word	0x00407018
  402a78:	2140      	movs	r1, #64	; 0x40
  402a7a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a7c:	f001 fa0a 	bl	403e94 <_malloc_r>
  402a80:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402a82:	6010      	str	r0, [r2, #0]
  402a84:	6110      	str	r0, [r2, #16]
  402a86:	2800      	cmp	r0, #0
  402a88:	f000 81f2 	beq.w	402e70 <_svfprintf_r+0x142c>
  402a8c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402a8e:	2340      	movs	r3, #64	; 0x40
  402a90:	6153      	str	r3, [r2, #20]
  402a92:	f7fe bfee 	b.w	401a72 <_svfprintf_r+0x2e>
  402a96:	a823      	add	r0, sp, #140	; 0x8c
  402a98:	a920      	add	r1, sp, #128	; 0x80
  402a9a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  402a9c:	9004      	str	r0, [sp, #16]
  402a9e:	9103      	str	r1, [sp, #12]
  402aa0:	a81f      	add	r0, sp, #124	; 0x7c
  402aa2:	2103      	movs	r1, #3
  402aa4:	9002      	str	r0, [sp, #8]
  402aa6:	9a08      	ldr	r2, [sp, #32]
  402aa8:	9401      	str	r4, [sp, #4]
  402aaa:	463b      	mov	r3, r7
  402aac:	9100      	str	r1, [sp, #0]
  402aae:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ab0:	f000 fa9a 	bl	402fe8 <_dtoa_r>
  402ab4:	4625      	mov	r5, r4
  402ab6:	4606      	mov	r6, r0
  402ab8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402aba:	2b46      	cmp	r3, #70	; 0x46
  402abc:	eb06 0405 	add.w	r4, r6, r5
  402ac0:	f47f af29 	bne.w	402916 <_svfprintf_r+0xed2>
  402ac4:	7833      	ldrb	r3, [r6, #0]
  402ac6:	2b30      	cmp	r3, #48	; 0x30
  402ac8:	f000 8178 	beq.w	402dbc <_svfprintf_r+0x1378>
  402acc:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  402ace:	442c      	add	r4, r5
  402ad0:	e721      	b.n	402916 <_svfprintf_r+0xed2>
  402ad2:	aa25      	add	r2, sp, #148	; 0x94
  402ad4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ad6:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ad8:	f002 f9c0 	bl	404e5c <__ssprint_r>
  402adc:	2800      	cmp	r0, #0
  402ade:	f47f a883 	bne.w	401be8 <_svfprintf_r+0x1a4>
  402ae2:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402ae4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402ae6:	46c8      	mov	r8, r9
  402ae8:	e782      	b.n	4029f0 <_svfprintf_r+0xfac>
  402aea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402aec:	2b00      	cmp	r3, #0
  402aee:	bf08      	it	eq
  402af0:	2301      	moveq	r3, #1
  402af2:	930a      	str	r3, [sp, #40]	; 0x28
  402af4:	e6db      	b.n	4028ae <_svfprintf_r+0xe6a>
  402af6:	4630      	mov	r0, r6
  402af8:	940a      	str	r4, [sp, #40]	; 0x28
  402afa:	f002 f941 	bl	404d80 <strlen>
  402afe:	950f      	str	r5, [sp, #60]	; 0x3c
  402b00:	900e      	str	r0, [sp, #56]	; 0x38
  402b02:	f8cd b01c 	str.w	fp, [sp, #28]
  402b06:	4603      	mov	r3, r0
  402b08:	f7ff b9f9 	b.w	401efe <_svfprintf_r+0x4ba>
  402b0c:	272d      	movs	r7, #45	; 0x2d
  402b0e:	2300      	movs	r3, #0
  402b10:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402b14:	930a      	str	r3, [sp, #40]	; 0x28
  402b16:	f7ff b8ae 	b.w	401c76 <_svfprintf_r+0x232>
  402b1a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402b1c:	9312      	str	r3, [sp, #72]	; 0x48
  402b1e:	461a      	mov	r2, r3
  402b20:	3303      	adds	r3, #3
  402b22:	db04      	blt.n	402b2e <_svfprintf_r+0x10ea>
  402b24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402b26:	4619      	mov	r1, r3
  402b28:	4291      	cmp	r1, r2
  402b2a:	f6bf af17 	bge.w	40295c <_svfprintf_r+0xf18>
  402b2e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402b30:	3b02      	subs	r3, #2
  402b32:	9311      	str	r3, [sp, #68]	; 0x44
  402b34:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  402b38:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  402b3c:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402b3e:	3b01      	subs	r3, #1
  402b40:	2b00      	cmp	r3, #0
  402b42:	931f      	str	r3, [sp, #124]	; 0x7c
  402b44:	bfbd      	ittte	lt
  402b46:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  402b48:	f1c3 0301 	rsblt	r3, r3, #1
  402b4c:	222d      	movlt	r2, #45	; 0x2d
  402b4e:	222b      	movge	r2, #43	; 0x2b
  402b50:	2b09      	cmp	r3, #9
  402b52:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  402b56:	f340 8116 	ble.w	402d86 <_svfprintf_r+0x1342>
  402b5a:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  402b5e:	4620      	mov	r0, r4
  402b60:	4dab      	ldr	r5, [pc, #684]	; (402e10 <_svfprintf_r+0x13cc>)
  402b62:	e000      	b.n	402b66 <_svfprintf_r+0x1122>
  402b64:	4610      	mov	r0, r2
  402b66:	fb85 1203 	smull	r1, r2, r5, r3
  402b6a:	17d9      	asrs	r1, r3, #31
  402b6c:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  402b70:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  402b74:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  402b78:	3230      	adds	r2, #48	; 0x30
  402b7a:	2909      	cmp	r1, #9
  402b7c:	f800 2c01 	strb.w	r2, [r0, #-1]
  402b80:	460b      	mov	r3, r1
  402b82:	f100 32ff 	add.w	r2, r0, #4294967295
  402b86:	dced      	bgt.n	402b64 <_svfprintf_r+0x1120>
  402b88:	3330      	adds	r3, #48	; 0x30
  402b8a:	3802      	subs	r0, #2
  402b8c:	b2d9      	uxtb	r1, r3
  402b8e:	4284      	cmp	r4, r0
  402b90:	f802 1c01 	strb.w	r1, [r2, #-1]
  402b94:	f240 8165 	bls.w	402e62 <_svfprintf_r+0x141e>
  402b98:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  402b9c:	4613      	mov	r3, r2
  402b9e:	e001      	b.n	402ba4 <_svfprintf_r+0x1160>
  402ba0:	f813 1b01 	ldrb.w	r1, [r3], #1
  402ba4:	f800 1b01 	strb.w	r1, [r0], #1
  402ba8:	42a3      	cmp	r3, r4
  402baa:	d1f9      	bne.n	402ba0 <_svfprintf_r+0x115c>
  402bac:	3301      	adds	r3, #1
  402bae:	1a9b      	subs	r3, r3, r2
  402bb0:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  402bb4:	4413      	add	r3, r2
  402bb6:	aa21      	add	r2, sp, #132	; 0x84
  402bb8:	1a9b      	subs	r3, r3, r2
  402bba:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402bbc:	931b      	str	r3, [sp, #108]	; 0x6c
  402bbe:	2a01      	cmp	r2, #1
  402bc0:	4413      	add	r3, r2
  402bc2:	930e      	str	r3, [sp, #56]	; 0x38
  402bc4:	f340 8119 	ble.w	402dfa <_svfprintf_r+0x13b6>
  402bc8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402bca:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402bcc:	4413      	add	r3, r2
  402bce:	930e      	str	r3, [sp, #56]	; 0x38
  402bd0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402bd4:	9308      	str	r3, [sp, #32]
  402bd6:	2300      	movs	r3, #0
  402bd8:	9312      	str	r3, [sp, #72]	; 0x48
  402bda:	e6cf      	b.n	40297c <_svfprintf_r+0xf38>
  402bdc:	aa25      	add	r2, sp, #148	; 0x94
  402bde:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402be0:	980c      	ldr	r0, [sp, #48]	; 0x30
  402be2:	f002 f93b 	bl	404e5c <__ssprint_r>
  402be6:	2800      	cmp	r0, #0
  402be8:	f47e affe 	bne.w	401be8 <_svfprintf_r+0x1a4>
  402bec:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402bee:	46c8      	mov	r8, r9
  402bf0:	e4d7      	b.n	4025a2 <_svfprintf_r+0xb5e>
  402bf2:	4623      	mov	r3, r4
  402bf4:	e6a2      	b.n	40293c <_svfprintf_r+0xef8>
  402bf6:	aa25      	add	r2, sp, #148	; 0x94
  402bf8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402bfa:	980c      	ldr	r0, [sp, #48]	; 0x30
  402bfc:	f002 f92e 	bl	404e5c <__ssprint_r>
  402c00:	2800      	cmp	r0, #0
  402c02:	f47e aff1 	bne.w	401be8 <_svfprintf_r+0x1a4>
  402c06:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402c08:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c0a:	46c8      	mov	r8, r9
  402c0c:	e5ae      	b.n	40276c <_svfprintf_r+0xd28>
  402c0e:	aa25      	add	r2, sp, #148	; 0x94
  402c10:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c12:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c14:	f002 f922 	bl	404e5c <__ssprint_r>
  402c18:	2800      	cmp	r0, #0
  402c1a:	f47e afe5 	bne.w	401be8 <_svfprintf_r+0x1a4>
  402c1e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402c20:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402c22:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c24:	1a9a      	subs	r2, r3, r2
  402c26:	46c8      	mov	r8, r9
  402c28:	e5b8      	b.n	40279c <_svfprintf_r+0xd58>
  402c2a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402c2c:	9612      	str	r6, [sp, #72]	; 0x48
  402c2e:	2b06      	cmp	r3, #6
  402c30:	bf28      	it	cs
  402c32:	2306      	movcs	r3, #6
  402c34:	960a      	str	r6, [sp, #40]	; 0x28
  402c36:	4637      	mov	r7, r6
  402c38:	9308      	str	r3, [sp, #32]
  402c3a:	950f      	str	r5, [sp, #60]	; 0x3c
  402c3c:	f8cd b01c 	str.w	fp, [sp, #28]
  402c40:	930e      	str	r3, [sp, #56]	; 0x38
  402c42:	4e74      	ldr	r6, [pc, #464]	; (402e14 <_svfprintf_r+0x13d0>)
  402c44:	f7ff b816 	b.w	401c74 <_svfprintf_r+0x230>
  402c48:	a823      	add	r0, sp, #140	; 0x8c
  402c4a:	a920      	add	r1, sp, #128	; 0x80
  402c4c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  402c4e:	9004      	str	r0, [sp, #16]
  402c50:	9103      	str	r1, [sp, #12]
  402c52:	a81f      	add	r0, sp, #124	; 0x7c
  402c54:	2103      	movs	r1, #3
  402c56:	9002      	str	r0, [sp, #8]
  402c58:	9a08      	ldr	r2, [sp, #32]
  402c5a:	9501      	str	r5, [sp, #4]
  402c5c:	463b      	mov	r3, r7
  402c5e:	9100      	str	r1, [sp, #0]
  402c60:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c62:	f000 f9c1 	bl	402fe8 <_dtoa_r>
  402c66:	4606      	mov	r6, r0
  402c68:	1944      	adds	r4, r0, r5
  402c6a:	e72b      	b.n	402ac4 <_svfprintf_r+0x1080>
  402c6c:	2306      	movs	r3, #6
  402c6e:	930a      	str	r3, [sp, #40]	; 0x28
  402c70:	e61d      	b.n	4028ae <_svfprintf_r+0xe6a>
  402c72:	272d      	movs	r7, #45	; 0x2d
  402c74:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402c78:	f7ff bacd 	b.w	402216 <_svfprintf_r+0x7d2>
  402c7c:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402c7e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402c80:	4413      	add	r3, r2
  402c82:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402c84:	930e      	str	r3, [sp, #56]	; 0x38
  402c86:	2a00      	cmp	r2, #0
  402c88:	f340 80b0 	ble.w	402dec <_svfprintf_r+0x13a8>
  402c8c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402c90:	9308      	str	r3, [sp, #32]
  402c92:	2367      	movs	r3, #103	; 0x67
  402c94:	9311      	str	r3, [sp, #68]	; 0x44
  402c96:	e671      	b.n	40297c <_svfprintf_r+0xf38>
  402c98:	2b00      	cmp	r3, #0
  402c9a:	f340 80c3 	ble.w	402e24 <_svfprintf_r+0x13e0>
  402c9e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402ca0:	2a00      	cmp	r2, #0
  402ca2:	f040 8099 	bne.w	402dd8 <_svfprintf_r+0x1394>
  402ca6:	f01b 0f01 	tst.w	fp, #1
  402caa:	f040 8095 	bne.w	402dd8 <_svfprintf_r+0x1394>
  402cae:	9308      	str	r3, [sp, #32]
  402cb0:	930e      	str	r3, [sp, #56]	; 0x38
  402cb2:	e663      	b.n	40297c <_svfprintf_r+0xf38>
  402cb4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402cb6:	9308      	str	r3, [sp, #32]
  402cb8:	930e      	str	r3, [sp, #56]	; 0x38
  402cba:	900a      	str	r0, [sp, #40]	; 0x28
  402cbc:	950f      	str	r5, [sp, #60]	; 0x3c
  402cbe:	f8cd b01c 	str.w	fp, [sp, #28]
  402cc2:	9012      	str	r0, [sp, #72]	; 0x48
  402cc4:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402cc8:	f7fe bfd4 	b.w	401c74 <_svfprintf_r+0x230>
  402ccc:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402cce:	2b47      	cmp	r3, #71	; 0x47
  402cd0:	f47f ae20 	bne.w	402914 <_svfprintf_r+0xed0>
  402cd4:	f01b 0f01 	tst.w	fp, #1
  402cd8:	f47f aeee 	bne.w	402ab8 <_svfprintf_r+0x1074>
  402cdc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402cde:	1b9b      	subs	r3, r3, r6
  402ce0:	9313      	str	r3, [sp, #76]	; 0x4c
  402ce2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402ce4:	2b47      	cmp	r3, #71	; 0x47
  402ce6:	f43f af18 	beq.w	402b1a <_svfprintf_r+0x10d6>
  402cea:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402cec:	9312      	str	r3, [sp, #72]	; 0x48
  402cee:	e721      	b.n	402b34 <_svfprintf_r+0x10f0>
  402cf0:	424f      	negs	r7, r1
  402cf2:	3110      	adds	r1, #16
  402cf4:	4d48      	ldr	r5, [pc, #288]	; (402e18 <_svfprintf_r+0x13d4>)
  402cf6:	da2f      	bge.n	402d58 <_svfprintf_r+0x1314>
  402cf8:	2410      	movs	r4, #16
  402cfa:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402cfe:	e004      	b.n	402d0a <_svfprintf_r+0x12c6>
  402d00:	f108 0808 	add.w	r8, r8, #8
  402d04:	3f10      	subs	r7, #16
  402d06:	2f10      	cmp	r7, #16
  402d08:	dd26      	ble.n	402d58 <_svfprintf_r+0x1314>
  402d0a:	3301      	adds	r3, #1
  402d0c:	3210      	adds	r2, #16
  402d0e:	2b07      	cmp	r3, #7
  402d10:	9227      	str	r2, [sp, #156]	; 0x9c
  402d12:	9326      	str	r3, [sp, #152]	; 0x98
  402d14:	f8c8 5000 	str.w	r5, [r8]
  402d18:	f8c8 4004 	str.w	r4, [r8, #4]
  402d1c:	ddf0      	ble.n	402d00 <_svfprintf_r+0x12bc>
  402d1e:	aa25      	add	r2, sp, #148	; 0x94
  402d20:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d22:	4658      	mov	r0, fp
  402d24:	f002 f89a 	bl	404e5c <__ssprint_r>
  402d28:	2800      	cmp	r0, #0
  402d2a:	f47e af5d 	bne.w	401be8 <_svfprintf_r+0x1a4>
  402d2e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402d30:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d32:	46c8      	mov	r8, r9
  402d34:	e7e6      	b.n	402d04 <_svfprintf_r+0x12c0>
  402d36:	aa25      	add	r2, sp, #148	; 0x94
  402d38:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d3a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d3c:	f002 f88e 	bl	404e5c <__ssprint_r>
  402d40:	2800      	cmp	r0, #0
  402d42:	f47e af51 	bne.w	401be8 <_svfprintf_r+0x1a4>
  402d46:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402d48:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402d4a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d4c:	46c8      	mov	r8, r9
  402d4e:	e667      	b.n	402a20 <_svfprintf_r+0xfdc>
  402d50:	2000      	movs	r0, #0
  402d52:	900a      	str	r0, [sp, #40]	; 0x28
  402d54:	f7fe bed0 	b.w	401af8 <_svfprintf_r+0xb4>
  402d58:	3301      	adds	r3, #1
  402d5a:	443a      	add	r2, r7
  402d5c:	2b07      	cmp	r3, #7
  402d5e:	e888 00a0 	stmia.w	r8, {r5, r7}
  402d62:	9227      	str	r2, [sp, #156]	; 0x9c
  402d64:	9326      	str	r3, [sp, #152]	; 0x98
  402d66:	f108 0808 	add.w	r8, r8, #8
  402d6a:	f77f ae5c 	ble.w	402a26 <_svfprintf_r+0xfe2>
  402d6e:	aa25      	add	r2, sp, #148	; 0x94
  402d70:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d72:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d74:	f002 f872 	bl	404e5c <__ssprint_r>
  402d78:	2800      	cmp	r0, #0
  402d7a:	f47e af35 	bne.w	401be8 <_svfprintf_r+0x1a4>
  402d7e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402d80:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d82:	46c8      	mov	r8, r9
  402d84:	e64f      	b.n	402a26 <_svfprintf_r+0xfe2>
  402d86:	3330      	adds	r3, #48	; 0x30
  402d88:	2230      	movs	r2, #48	; 0x30
  402d8a:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  402d8e:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  402d92:	ab22      	add	r3, sp, #136	; 0x88
  402d94:	e70f      	b.n	402bb6 <_svfprintf_r+0x1172>
  402d96:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402d98:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402d9a:	4413      	add	r3, r2
  402d9c:	930e      	str	r3, [sp, #56]	; 0x38
  402d9e:	e775      	b.n	402c8c <_svfprintf_r+0x1248>
  402da0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402da2:	e5cb      	b.n	40293c <_svfprintf_r+0xef8>
  402da4:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402da6:	4e1d      	ldr	r6, [pc, #116]	; (402e1c <_svfprintf_r+0x13d8>)
  402da8:	2b00      	cmp	r3, #0
  402daa:	bfb6      	itet	lt
  402dac:	272d      	movlt	r7, #45	; 0x2d
  402dae:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  402db2:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  402db6:	4b1a      	ldr	r3, [pc, #104]	; (402e20 <_svfprintf_r+0x13dc>)
  402db8:	f7ff ba2f 	b.w	40221a <_svfprintf_r+0x7d6>
  402dbc:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402dbe:	9808      	ldr	r0, [sp, #32]
  402dc0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402dc2:	4639      	mov	r1, r7
  402dc4:	f003 f8de 	bl	405f84 <__aeabi_dcmpeq>
  402dc8:	2800      	cmp	r0, #0
  402dca:	f47f ae7f 	bne.w	402acc <_svfprintf_r+0x1088>
  402dce:	f1c5 0501 	rsb	r5, r5, #1
  402dd2:	951f      	str	r5, [sp, #124]	; 0x7c
  402dd4:	442c      	add	r4, r5
  402dd6:	e59e      	b.n	402916 <_svfprintf_r+0xed2>
  402dd8:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402dda:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402ddc:	4413      	add	r3, r2
  402dde:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402de0:	441a      	add	r2, r3
  402de2:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  402de6:	920e      	str	r2, [sp, #56]	; 0x38
  402de8:	9308      	str	r3, [sp, #32]
  402dea:	e5c7      	b.n	40297c <_svfprintf_r+0xf38>
  402dec:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402dee:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402df0:	f1c3 0301 	rsb	r3, r3, #1
  402df4:	441a      	add	r2, r3
  402df6:	4613      	mov	r3, r2
  402df8:	e7d0      	b.n	402d9c <_svfprintf_r+0x1358>
  402dfa:	f01b 0301 	ands.w	r3, fp, #1
  402dfe:	9312      	str	r3, [sp, #72]	; 0x48
  402e00:	f47f aee2 	bne.w	402bc8 <_svfprintf_r+0x1184>
  402e04:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402e06:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402e0a:	9308      	str	r3, [sp, #32]
  402e0c:	e5b6      	b.n	40297c <_svfprintf_r+0xf38>
  402e0e:	bf00      	nop
  402e10:	66666667 	.word	0x66666667
  402e14:	00407010 	.word	0x00407010
  402e18:	0040702c 	.word	0x0040702c
  402e1c:	00406fe4 	.word	0x00406fe4
  402e20:	00406fe0 	.word	0x00406fe0
  402e24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402e26:	b913      	cbnz	r3, 402e2e <_svfprintf_r+0x13ea>
  402e28:	f01b 0f01 	tst.w	fp, #1
  402e2c:	d002      	beq.n	402e34 <_svfprintf_r+0x13f0>
  402e2e:	9b19      	ldr	r3, [sp, #100]	; 0x64
  402e30:	3301      	adds	r3, #1
  402e32:	e7d4      	b.n	402dde <_svfprintf_r+0x139a>
  402e34:	2301      	movs	r3, #1
  402e36:	e73a      	b.n	402cae <_svfprintf_r+0x126a>
  402e38:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402e3a:	f89a 3001 	ldrb.w	r3, [sl, #1]
  402e3e:	6828      	ldr	r0, [r5, #0]
  402e40:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  402e44:	900a      	str	r0, [sp, #40]	; 0x28
  402e46:	4628      	mov	r0, r5
  402e48:	3004      	adds	r0, #4
  402e4a:	46a2      	mov	sl, r4
  402e4c:	900f      	str	r0, [sp, #60]	; 0x3c
  402e4e:	f7fe be51 	b.w	401af4 <_svfprintf_r+0xb0>
  402e52:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402e56:	f7ff b867 	b.w	401f28 <_svfprintf_r+0x4e4>
  402e5a:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402e5e:	f7ff ba15 	b.w	40228c <_svfprintf_r+0x848>
  402e62:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  402e66:	e6a6      	b.n	402bb6 <_svfprintf_r+0x1172>
  402e68:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402e6c:	f7ff b8eb 	b.w	402046 <_svfprintf_r+0x602>
  402e70:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  402e72:	230c      	movs	r3, #12
  402e74:	6013      	str	r3, [r2, #0]
  402e76:	f04f 33ff 	mov.w	r3, #4294967295
  402e7a:	9309      	str	r3, [sp, #36]	; 0x24
  402e7c:	f7fe bebd 	b.w	401bfa <_svfprintf_r+0x1b6>
  402e80:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402e84:	f7ff b99a 	b.w	4021bc <_svfprintf_r+0x778>
  402e88:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402e8c:	f7ff b976 	b.w	40217c <_svfprintf_r+0x738>
  402e90:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402e94:	f7ff b959 	b.w	40214a <_svfprintf_r+0x706>
  402e98:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402e9c:	f7ff b912 	b.w	4020c4 <_svfprintf_r+0x680>

00402ea0 <register_fini>:
  402ea0:	4b02      	ldr	r3, [pc, #8]	; (402eac <register_fini+0xc>)
  402ea2:	b113      	cbz	r3, 402eaa <register_fini+0xa>
  402ea4:	4802      	ldr	r0, [pc, #8]	; (402eb0 <register_fini+0x10>)
  402ea6:	f000 b805 	b.w	402eb4 <atexit>
  402eaa:	4770      	bx	lr
  402eac:	00000000 	.word	0x00000000
  402eb0:	00403e3d 	.word	0x00403e3d

00402eb4 <atexit>:
  402eb4:	2300      	movs	r3, #0
  402eb6:	4601      	mov	r1, r0
  402eb8:	461a      	mov	r2, r3
  402eba:	4618      	mov	r0, r3
  402ebc:	f002 b84c 	b.w	404f58 <__register_exitproc>

00402ec0 <quorem>:
  402ec0:	6902      	ldr	r2, [r0, #16]
  402ec2:	690b      	ldr	r3, [r1, #16]
  402ec4:	4293      	cmp	r3, r2
  402ec6:	f300 808d 	bgt.w	402fe4 <quorem+0x124>
  402eca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402ece:	f103 38ff 	add.w	r8, r3, #4294967295
  402ed2:	f101 0714 	add.w	r7, r1, #20
  402ed6:	f100 0b14 	add.w	fp, r0, #20
  402eda:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  402ede:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  402ee2:	ea4f 0488 	mov.w	r4, r8, lsl #2
  402ee6:	b083      	sub	sp, #12
  402ee8:	3201      	adds	r2, #1
  402eea:	fbb3 f9f2 	udiv	r9, r3, r2
  402eee:	eb0b 0304 	add.w	r3, fp, r4
  402ef2:	9400      	str	r4, [sp, #0]
  402ef4:	eb07 0a04 	add.w	sl, r7, r4
  402ef8:	9301      	str	r3, [sp, #4]
  402efa:	f1b9 0f00 	cmp.w	r9, #0
  402efe:	d039      	beq.n	402f74 <quorem+0xb4>
  402f00:	2500      	movs	r5, #0
  402f02:	462e      	mov	r6, r5
  402f04:	46bc      	mov	ip, r7
  402f06:	46de      	mov	lr, fp
  402f08:	f85c 4b04 	ldr.w	r4, [ip], #4
  402f0c:	f8de 3000 	ldr.w	r3, [lr]
  402f10:	b2a2      	uxth	r2, r4
  402f12:	fb09 5502 	mla	r5, r9, r2, r5
  402f16:	0c22      	lsrs	r2, r4, #16
  402f18:	0c2c      	lsrs	r4, r5, #16
  402f1a:	fb09 4202 	mla	r2, r9, r2, r4
  402f1e:	b2ad      	uxth	r5, r5
  402f20:	1b75      	subs	r5, r6, r5
  402f22:	b296      	uxth	r6, r2
  402f24:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  402f28:	fa15 f383 	uxtah	r3, r5, r3
  402f2c:	eb06 4623 	add.w	r6, r6, r3, asr #16
  402f30:	b29b      	uxth	r3, r3
  402f32:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  402f36:	45e2      	cmp	sl, ip
  402f38:	ea4f 4512 	mov.w	r5, r2, lsr #16
  402f3c:	f84e 3b04 	str.w	r3, [lr], #4
  402f40:	ea4f 4626 	mov.w	r6, r6, asr #16
  402f44:	d2e0      	bcs.n	402f08 <quorem+0x48>
  402f46:	9b00      	ldr	r3, [sp, #0]
  402f48:	f85b 3003 	ldr.w	r3, [fp, r3]
  402f4c:	b993      	cbnz	r3, 402f74 <quorem+0xb4>
  402f4e:	9c01      	ldr	r4, [sp, #4]
  402f50:	1f23      	subs	r3, r4, #4
  402f52:	459b      	cmp	fp, r3
  402f54:	d20c      	bcs.n	402f70 <quorem+0xb0>
  402f56:	f854 3c04 	ldr.w	r3, [r4, #-4]
  402f5a:	b94b      	cbnz	r3, 402f70 <quorem+0xb0>
  402f5c:	f1a4 0308 	sub.w	r3, r4, #8
  402f60:	e002      	b.n	402f68 <quorem+0xa8>
  402f62:	681a      	ldr	r2, [r3, #0]
  402f64:	3b04      	subs	r3, #4
  402f66:	b91a      	cbnz	r2, 402f70 <quorem+0xb0>
  402f68:	459b      	cmp	fp, r3
  402f6a:	f108 38ff 	add.w	r8, r8, #4294967295
  402f6e:	d3f8      	bcc.n	402f62 <quorem+0xa2>
  402f70:	f8c0 8010 	str.w	r8, [r0, #16]
  402f74:	4604      	mov	r4, r0
  402f76:	f001 fd67 	bl	404a48 <__mcmp>
  402f7a:	2800      	cmp	r0, #0
  402f7c:	db2e      	blt.n	402fdc <quorem+0x11c>
  402f7e:	f109 0901 	add.w	r9, r9, #1
  402f82:	465d      	mov	r5, fp
  402f84:	2300      	movs	r3, #0
  402f86:	f857 1b04 	ldr.w	r1, [r7], #4
  402f8a:	6828      	ldr	r0, [r5, #0]
  402f8c:	b28a      	uxth	r2, r1
  402f8e:	1a9a      	subs	r2, r3, r2
  402f90:	0c0b      	lsrs	r3, r1, #16
  402f92:	fa12 f280 	uxtah	r2, r2, r0
  402f96:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  402f9a:	eb03 4322 	add.w	r3, r3, r2, asr #16
  402f9e:	b292      	uxth	r2, r2
  402fa0:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  402fa4:	45ba      	cmp	sl, r7
  402fa6:	f845 2b04 	str.w	r2, [r5], #4
  402faa:	ea4f 4323 	mov.w	r3, r3, asr #16
  402fae:	d2ea      	bcs.n	402f86 <quorem+0xc6>
  402fb0:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  402fb4:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  402fb8:	b982      	cbnz	r2, 402fdc <quorem+0x11c>
  402fba:	1f1a      	subs	r2, r3, #4
  402fbc:	4593      	cmp	fp, r2
  402fbe:	d20b      	bcs.n	402fd8 <quorem+0x118>
  402fc0:	f853 2c04 	ldr.w	r2, [r3, #-4]
  402fc4:	b942      	cbnz	r2, 402fd8 <quorem+0x118>
  402fc6:	3b08      	subs	r3, #8
  402fc8:	e002      	b.n	402fd0 <quorem+0x110>
  402fca:	681a      	ldr	r2, [r3, #0]
  402fcc:	3b04      	subs	r3, #4
  402fce:	b91a      	cbnz	r2, 402fd8 <quorem+0x118>
  402fd0:	459b      	cmp	fp, r3
  402fd2:	f108 38ff 	add.w	r8, r8, #4294967295
  402fd6:	d3f8      	bcc.n	402fca <quorem+0x10a>
  402fd8:	f8c4 8010 	str.w	r8, [r4, #16]
  402fdc:	4648      	mov	r0, r9
  402fde:	b003      	add	sp, #12
  402fe0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402fe4:	2000      	movs	r0, #0
  402fe6:	4770      	bx	lr

00402fe8 <_dtoa_r>:
  402fe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402fec:	6c01      	ldr	r1, [r0, #64]	; 0x40
  402fee:	b09b      	sub	sp, #108	; 0x6c
  402ff0:	4604      	mov	r4, r0
  402ff2:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  402ff4:	4692      	mov	sl, r2
  402ff6:	469b      	mov	fp, r3
  402ff8:	b141      	cbz	r1, 40300c <_dtoa_r+0x24>
  402ffa:	6c42      	ldr	r2, [r0, #68]	; 0x44
  402ffc:	604a      	str	r2, [r1, #4]
  402ffe:	2301      	movs	r3, #1
  403000:	4093      	lsls	r3, r2
  403002:	608b      	str	r3, [r1, #8]
  403004:	f001 fb48 	bl	404698 <_Bfree>
  403008:	2300      	movs	r3, #0
  40300a:	6423      	str	r3, [r4, #64]	; 0x40
  40300c:	f1bb 0f00 	cmp.w	fp, #0
  403010:	465d      	mov	r5, fp
  403012:	db35      	blt.n	403080 <_dtoa_r+0x98>
  403014:	2300      	movs	r3, #0
  403016:	6033      	str	r3, [r6, #0]
  403018:	4b9d      	ldr	r3, [pc, #628]	; (403290 <_dtoa_r+0x2a8>)
  40301a:	43ab      	bics	r3, r5
  40301c:	d015      	beq.n	40304a <_dtoa_r+0x62>
  40301e:	4650      	mov	r0, sl
  403020:	4659      	mov	r1, fp
  403022:	2200      	movs	r2, #0
  403024:	2300      	movs	r3, #0
  403026:	f002 ffad 	bl	405f84 <__aeabi_dcmpeq>
  40302a:	4680      	mov	r8, r0
  40302c:	2800      	cmp	r0, #0
  40302e:	d02d      	beq.n	40308c <_dtoa_r+0xa4>
  403030:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403032:	2301      	movs	r3, #1
  403034:	6013      	str	r3, [r2, #0]
  403036:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403038:	2b00      	cmp	r3, #0
  40303a:	f000 80bd 	beq.w	4031b8 <_dtoa_r+0x1d0>
  40303e:	4895      	ldr	r0, [pc, #596]	; (403294 <_dtoa_r+0x2ac>)
  403040:	6018      	str	r0, [r3, #0]
  403042:	3801      	subs	r0, #1
  403044:	b01b      	add	sp, #108	; 0x6c
  403046:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40304a:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40304c:	f242 730f 	movw	r3, #9999	; 0x270f
  403050:	6013      	str	r3, [r2, #0]
  403052:	f1ba 0f00 	cmp.w	sl, #0
  403056:	d10d      	bne.n	403074 <_dtoa_r+0x8c>
  403058:	f3c5 0513 	ubfx	r5, r5, #0, #20
  40305c:	b955      	cbnz	r5, 403074 <_dtoa_r+0x8c>
  40305e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403060:	488d      	ldr	r0, [pc, #564]	; (403298 <_dtoa_r+0x2b0>)
  403062:	2b00      	cmp	r3, #0
  403064:	d0ee      	beq.n	403044 <_dtoa_r+0x5c>
  403066:	f100 0308 	add.w	r3, r0, #8
  40306a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  40306c:	6013      	str	r3, [r2, #0]
  40306e:	b01b      	add	sp, #108	; 0x6c
  403070:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403074:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403076:	4889      	ldr	r0, [pc, #548]	; (40329c <_dtoa_r+0x2b4>)
  403078:	2b00      	cmp	r3, #0
  40307a:	d0e3      	beq.n	403044 <_dtoa_r+0x5c>
  40307c:	1cc3      	adds	r3, r0, #3
  40307e:	e7f4      	b.n	40306a <_dtoa_r+0x82>
  403080:	2301      	movs	r3, #1
  403082:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  403086:	6033      	str	r3, [r6, #0]
  403088:	46ab      	mov	fp, r5
  40308a:	e7c5      	b.n	403018 <_dtoa_r+0x30>
  40308c:	aa18      	add	r2, sp, #96	; 0x60
  40308e:	ab19      	add	r3, sp, #100	; 0x64
  403090:	9201      	str	r2, [sp, #4]
  403092:	9300      	str	r3, [sp, #0]
  403094:	4652      	mov	r2, sl
  403096:	465b      	mov	r3, fp
  403098:	4620      	mov	r0, r4
  40309a:	f001 fd75 	bl	404b88 <__d2b>
  40309e:	0d2b      	lsrs	r3, r5, #20
  4030a0:	4681      	mov	r9, r0
  4030a2:	d071      	beq.n	403188 <_dtoa_r+0x1a0>
  4030a4:	f3cb 0213 	ubfx	r2, fp, #0, #20
  4030a8:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  4030ac:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4030ae:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  4030b2:	4650      	mov	r0, sl
  4030b4:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  4030b8:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  4030bc:	2200      	movs	r2, #0
  4030be:	4b78      	ldr	r3, [pc, #480]	; (4032a0 <_dtoa_r+0x2b8>)
  4030c0:	f002 fb44 	bl	40574c <__aeabi_dsub>
  4030c4:	a36c      	add	r3, pc, #432	; (adr r3, 403278 <_dtoa_r+0x290>)
  4030c6:	e9d3 2300 	ldrd	r2, r3, [r3]
  4030ca:	f002 fcf3 	bl	405ab4 <__aeabi_dmul>
  4030ce:	a36c      	add	r3, pc, #432	; (adr r3, 403280 <_dtoa_r+0x298>)
  4030d0:	e9d3 2300 	ldrd	r2, r3, [r3]
  4030d4:	f002 fb3c 	bl	405750 <__adddf3>
  4030d8:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4030dc:	4630      	mov	r0, r6
  4030de:	f002 fc83 	bl	4059e8 <__aeabi_i2d>
  4030e2:	a369      	add	r3, pc, #420	; (adr r3, 403288 <_dtoa_r+0x2a0>)
  4030e4:	e9d3 2300 	ldrd	r2, r3, [r3]
  4030e8:	f002 fce4 	bl	405ab4 <__aeabi_dmul>
  4030ec:	4602      	mov	r2, r0
  4030ee:	460b      	mov	r3, r1
  4030f0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4030f4:	f002 fb2c 	bl	405750 <__adddf3>
  4030f8:	e9cd 0104 	strd	r0, r1, [sp, #16]
  4030fc:	f002 ff8a 	bl	406014 <__aeabi_d2iz>
  403100:	2200      	movs	r2, #0
  403102:	9002      	str	r0, [sp, #8]
  403104:	2300      	movs	r3, #0
  403106:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40310a:	f002 ff45 	bl	405f98 <__aeabi_dcmplt>
  40310e:	2800      	cmp	r0, #0
  403110:	f040 8173 	bne.w	4033fa <_dtoa_r+0x412>
  403114:	9d02      	ldr	r5, [sp, #8]
  403116:	2d16      	cmp	r5, #22
  403118:	f200 815d 	bhi.w	4033d6 <_dtoa_r+0x3ee>
  40311c:	4b61      	ldr	r3, [pc, #388]	; (4032a4 <_dtoa_r+0x2bc>)
  40311e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  403122:	e9d3 0100 	ldrd	r0, r1, [r3]
  403126:	4652      	mov	r2, sl
  403128:	465b      	mov	r3, fp
  40312a:	f002 ff53 	bl	405fd4 <__aeabi_dcmpgt>
  40312e:	2800      	cmp	r0, #0
  403130:	f000 81c5 	beq.w	4034be <_dtoa_r+0x4d6>
  403134:	1e6b      	subs	r3, r5, #1
  403136:	9302      	str	r3, [sp, #8]
  403138:	2300      	movs	r3, #0
  40313a:	930e      	str	r3, [sp, #56]	; 0x38
  40313c:	1bbf      	subs	r7, r7, r6
  40313e:	1e7b      	subs	r3, r7, #1
  403140:	9306      	str	r3, [sp, #24]
  403142:	f100 8154 	bmi.w	4033ee <_dtoa_r+0x406>
  403146:	2300      	movs	r3, #0
  403148:	9308      	str	r3, [sp, #32]
  40314a:	9b02      	ldr	r3, [sp, #8]
  40314c:	2b00      	cmp	r3, #0
  40314e:	f2c0 8145 	blt.w	4033dc <_dtoa_r+0x3f4>
  403152:	9a06      	ldr	r2, [sp, #24]
  403154:	930d      	str	r3, [sp, #52]	; 0x34
  403156:	4611      	mov	r1, r2
  403158:	4419      	add	r1, r3
  40315a:	2300      	movs	r3, #0
  40315c:	9106      	str	r1, [sp, #24]
  40315e:	930c      	str	r3, [sp, #48]	; 0x30
  403160:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403162:	2b09      	cmp	r3, #9
  403164:	d82a      	bhi.n	4031bc <_dtoa_r+0x1d4>
  403166:	2b05      	cmp	r3, #5
  403168:	f340 865b 	ble.w	403e22 <_dtoa_r+0xe3a>
  40316c:	3b04      	subs	r3, #4
  40316e:	9324      	str	r3, [sp, #144]	; 0x90
  403170:	2500      	movs	r5, #0
  403172:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403174:	3b02      	subs	r3, #2
  403176:	2b03      	cmp	r3, #3
  403178:	f200 8642 	bhi.w	403e00 <_dtoa_r+0xe18>
  40317c:	e8df f013 	tbh	[pc, r3, lsl #1]
  403180:	02c903d4 	.word	0x02c903d4
  403184:	046103df 	.word	0x046103df
  403188:	9f18      	ldr	r7, [sp, #96]	; 0x60
  40318a:	9e19      	ldr	r6, [sp, #100]	; 0x64
  40318c:	443e      	add	r6, r7
  40318e:	f206 4332 	addw	r3, r6, #1074	; 0x432
  403192:	2b20      	cmp	r3, #32
  403194:	f340 818e 	ble.w	4034b4 <_dtoa_r+0x4cc>
  403198:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  40319c:	f206 4012 	addw	r0, r6, #1042	; 0x412
  4031a0:	409d      	lsls	r5, r3
  4031a2:	fa2a f000 	lsr.w	r0, sl, r0
  4031a6:	4328      	orrs	r0, r5
  4031a8:	f002 fc0e 	bl	4059c8 <__aeabi_ui2d>
  4031ac:	2301      	movs	r3, #1
  4031ae:	3e01      	subs	r6, #1
  4031b0:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  4031b4:	9314      	str	r3, [sp, #80]	; 0x50
  4031b6:	e781      	b.n	4030bc <_dtoa_r+0xd4>
  4031b8:	483b      	ldr	r0, [pc, #236]	; (4032a8 <_dtoa_r+0x2c0>)
  4031ba:	e743      	b.n	403044 <_dtoa_r+0x5c>
  4031bc:	2100      	movs	r1, #0
  4031be:	6461      	str	r1, [r4, #68]	; 0x44
  4031c0:	4620      	mov	r0, r4
  4031c2:	9125      	str	r1, [sp, #148]	; 0x94
  4031c4:	f001 fa42 	bl	40464c <_Balloc>
  4031c8:	f04f 33ff 	mov.w	r3, #4294967295
  4031cc:	930a      	str	r3, [sp, #40]	; 0x28
  4031ce:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4031d0:	930f      	str	r3, [sp, #60]	; 0x3c
  4031d2:	2301      	movs	r3, #1
  4031d4:	9004      	str	r0, [sp, #16]
  4031d6:	6420      	str	r0, [r4, #64]	; 0x40
  4031d8:	9224      	str	r2, [sp, #144]	; 0x90
  4031da:	930b      	str	r3, [sp, #44]	; 0x2c
  4031dc:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4031de:	2b00      	cmp	r3, #0
  4031e0:	f2c0 80d9 	blt.w	403396 <_dtoa_r+0x3ae>
  4031e4:	9a02      	ldr	r2, [sp, #8]
  4031e6:	2a0e      	cmp	r2, #14
  4031e8:	f300 80d5 	bgt.w	403396 <_dtoa_r+0x3ae>
  4031ec:	4b2d      	ldr	r3, [pc, #180]	; (4032a4 <_dtoa_r+0x2bc>)
  4031ee:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4031f2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4031f6:	e9cd 2308 	strd	r2, r3, [sp, #32]
  4031fa:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4031fc:	2b00      	cmp	r3, #0
  4031fe:	f2c0 83ba 	blt.w	403976 <_dtoa_r+0x98e>
  403202:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  403206:	4650      	mov	r0, sl
  403208:	462a      	mov	r2, r5
  40320a:	4633      	mov	r3, r6
  40320c:	4659      	mov	r1, fp
  40320e:	f002 fd7b 	bl	405d08 <__aeabi_ddiv>
  403212:	f002 feff 	bl	406014 <__aeabi_d2iz>
  403216:	4680      	mov	r8, r0
  403218:	f002 fbe6 	bl	4059e8 <__aeabi_i2d>
  40321c:	462a      	mov	r2, r5
  40321e:	4633      	mov	r3, r6
  403220:	f002 fc48 	bl	405ab4 <__aeabi_dmul>
  403224:	460b      	mov	r3, r1
  403226:	4602      	mov	r2, r0
  403228:	4659      	mov	r1, fp
  40322a:	4650      	mov	r0, sl
  40322c:	f002 fa8e 	bl	40574c <__aeabi_dsub>
  403230:	9d04      	ldr	r5, [sp, #16]
  403232:	f108 0330 	add.w	r3, r8, #48	; 0x30
  403236:	702b      	strb	r3, [r5, #0]
  403238:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40323a:	2b01      	cmp	r3, #1
  40323c:	4606      	mov	r6, r0
  40323e:	460f      	mov	r7, r1
  403240:	f105 0501 	add.w	r5, r5, #1
  403244:	d068      	beq.n	403318 <_dtoa_r+0x330>
  403246:	2200      	movs	r2, #0
  403248:	4b18      	ldr	r3, [pc, #96]	; (4032ac <_dtoa_r+0x2c4>)
  40324a:	f002 fc33 	bl	405ab4 <__aeabi_dmul>
  40324e:	2200      	movs	r2, #0
  403250:	2300      	movs	r3, #0
  403252:	4606      	mov	r6, r0
  403254:	460f      	mov	r7, r1
  403256:	f002 fe95 	bl	405f84 <__aeabi_dcmpeq>
  40325a:	2800      	cmp	r0, #0
  40325c:	f040 8088 	bne.w	403370 <_dtoa_r+0x388>
  403260:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  403264:	f04f 0a00 	mov.w	sl, #0
  403268:	f8df b040 	ldr.w	fp, [pc, #64]	; 4032ac <_dtoa_r+0x2c4>
  40326c:	940c      	str	r4, [sp, #48]	; 0x30
  40326e:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  403272:	e028      	b.n	4032c6 <_dtoa_r+0x2de>
  403274:	f3af 8000 	nop.w
  403278:	636f4361 	.word	0x636f4361
  40327c:	3fd287a7 	.word	0x3fd287a7
  403280:	8b60c8b3 	.word	0x8b60c8b3
  403284:	3fc68a28 	.word	0x3fc68a28
  403288:	509f79fb 	.word	0x509f79fb
  40328c:	3fd34413 	.word	0x3fd34413
  403290:	7ff00000 	.word	0x7ff00000
  403294:	00407019 	.word	0x00407019
  403298:	0040703c 	.word	0x0040703c
  40329c:	00407048 	.word	0x00407048
  4032a0:	3ff80000 	.word	0x3ff80000
  4032a4:	00407078 	.word	0x00407078
  4032a8:	00407018 	.word	0x00407018
  4032ac:	40240000 	.word	0x40240000
  4032b0:	f002 fc00 	bl	405ab4 <__aeabi_dmul>
  4032b4:	2200      	movs	r2, #0
  4032b6:	2300      	movs	r3, #0
  4032b8:	4606      	mov	r6, r0
  4032ba:	460f      	mov	r7, r1
  4032bc:	f002 fe62 	bl	405f84 <__aeabi_dcmpeq>
  4032c0:	2800      	cmp	r0, #0
  4032c2:	f040 83c1 	bne.w	403a48 <_dtoa_r+0xa60>
  4032c6:	4642      	mov	r2, r8
  4032c8:	464b      	mov	r3, r9
  4032ca:	4630      	mov	r0, r6
  4032cc:	4639      	mov	r1, r7
  4032ce:	f002 fd1b 	bl	405d08 <__aeabi_ddiv>
  4032d2:	f002 fe9f 	bl	406014 <__aeabi_d2iz>
  4032d6:	4604      	mov	r4, r0
  4032d8:	f002 fb86 	bl	4059e8 <__aeabi_i2d>
  4032dc:	4642      	mov	r2, r8
  4032de:	464b      	mov	r3, r9
  4032e0:	f002 fbe8 	bl	405ab4 <__aeabi_dmul>
  4032e4:	4602      	mov	r2, r0
  4032e6:	460b      	mov	r3, r1
  4032e8:	4630      	mov	r0, r6
  4032ea:	4639      	mov	r1, r7
  4032ec:	f002 fa2e 	bl	40574c <__aeabi_dsub>
  4032f0:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  4032f4:	9e04      	ldr	r6, [sp, #16]
  4032f6:	f805 eb01 	strb.w	lr, [r5], #1
  4032fa:	eba5 0e06 	sub.w	lr, r5, r6
  4032fe:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403300:	45b6      	cmp	lr, r6
  403302:	e9cd 0106 	strd	r0, r1, [sp, #24]
  403306:	4652      	mov	r2, sl
  403308:	465b      	mov	r3, fp
  40330a:	d1d1      	bne.n	4032b0 <_dtoa_r+0x2c8>
  40330c:	46a0      	mov	r8, r4
  40330e:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403312:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403314:	4606      	mov	r6, r0
  403316:	460f      	mov	r7, r1
  403318:	4632      	mov	r2, r6
  40331a:	463b      	mov	r3, r7
  40331c:	4630      	mov	r0, r6
  40331e:	4639      	mov	r1, r7
  403320:	f002 fa16 	bl	405750 <__adddf3>
  403324:	4606      	mov	r6, r0
  403326:	460f      	mov	r7, r1
  403328:	4602      	mov	r2, r0
  40332a:	460b      	mov	r3, r1
  40332c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403330:	f002 fe32 	bl	405f98 <__aeabi_dcmplt>
  403334:	b948      	cbnz	r0, 40334a <_dtoa_r+0x362>
  403336:	4632      	mov	r2, r6
  403338:	463b      	mov	r3, r7
  40333a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  40333e:	f002 fe21 	bl	405f84 <__aeabi_dcmpeq>
  403342:	b1a8      	cbz	r0, 403370 <_dtoa_r+0x388>
  403344:	f018 0f01 	tst.w	r8, #1
  403348:	d012      	beq.n	403370 <_dtoa_r+0x388>
  40334a:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  40334e:	9a04      	ldr	r2, [sp, #16]
  403350:	1e6b      	subs	r3, r5, #1
  403352:	e004      	b.n	40335e <_dtoa_r+0x376>
  403354:	429a      	cmp	r2, r3
  403356:	f000 8401 	beq.w	403b5c <_dtoa_r+0xb74>
  40335a:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  40335e:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  403362:	f103 0501 	add.w	r5, r3, #1
  403366:	d0f5      	beq.n	403354 <_dtoa_r+0x36c>
  403368:	f108 0801 	add.w	r8, r8, #1
  40336c:	f883 8000 	strb.w	r8, [r3]
  403370:	4649      	mov	r1, r9
  403372:	4620      	mov	r0, r4
  403374:	f001 f990 	bl	404698 <_Bfree>
  403378:	2200      	movs	r2, #0
  40337a:	9b02      	ldr	r3, [sp, #8]
  40337c:	702a      	strb	r2, [r5, #0]
  40337e:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403380:	3301      	adds	r3, #1
  403382:	6013      	str	r3, [r2, #0]
  403384:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403386:	2b00      	cmp	r3, #0
  403388:	f000 839e 	beq.w	403ac8 <_dtoa_r+0xae0>
  40338c:	9804      	ldr	r0, [sp, #16]
  40338e:	601d      	str	r5, [r3, #0]
  403390:	b01b      	add	sp, #108	; 0x6c
  403392:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403396:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403398:	2a00      	cmp	r2, #0
  40339a:	d03e      	beq.n	40341a <_dtoa_r+0x432>
  40339c:	9a24      	ldr	r2, [sp, #144]	; 0x90
  40339e:	2a01      	cmp	r2, #1
  4033a0:	f340 8311 	ble.w	4039c6 <_dtoa_r+0x9de>
  4033a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4033a6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4033a8:	1e5f      	subs	r7, r3, #1
  4033aa:	42ba      	cmp	r2, r7
  4033ac:	f2c0 838f 	blt.w	403ace <_dtoa_r+0xae6>
  4033b0:	1bd7      	subs	r7, r2, r7
  4033b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4033b4:	2b00      	cmp	r3, #0
  4033b6:	f2c0 848b 	blt.w	403cd0 <_dtoa_r+0xce8>
  4033ba:	9d08      	ldr	r5, [sp, #32]
  4033bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4033be:	9a08      	ldr	r2, [sp, #32]
  4033c0:	441a      	add	r2, r3
  4033c2:	9208      	str	r2, [sp, #32]
  4033c4:	9a06      	ldr	r2, [sp, #24]
  4033c6:	2101      	movs	r1, #1
  4033c8:	441a      	add	r2, r3
  4033ca:	4620      	mov	r0, r4
  4033cc:	9206      	str	r2, [sp, #24]
  4033ce:	f001 f9fd 	bl	4047cc <__i2b>
  4033d2:	4606      	mov	r6, r0
  4033d4:	e024      	b.n	403420 <_dtoa_r+0x438>
  4033d6:	2301      	movs	r3, #1
  4033d8:	930e      	str	r3, [sp, #56]	; 0x38
  4033da:	e6af      	b.n	40313c <_dtoa_r+0x154>
  4033dc:	9a08      	ldr	r2, [sp, #32]
  4033de:	9b02      	ldr	r3, [sp, #8]
  4033e0:	1ad2      	subs	r2, r2, r3
  4033e2:	425b      	negs	r3, r3
  4033e4:	930c      	str	r3, [sp, #48]	; 0x30
  4033e6:	2300      	movs	r3, #0
  4033e8:	9208      	str	r2, [sp, #32]
  4033ea:	930d      	str	r3, [sp, #52]	; 0x34
  4033ec:	e6b8      	b.n	403160 <_dtoa_r+0x178>
  4033ee:	f1c7 0301 	rsb	r3, r7, #1
  4033f2:	9308      	str	r3, [sp, #32]
  4033f4:	2300      	movs	r3, #0
  4033f6:	9306      	str	r3, [sp, #24]
  4033f8:	e6a7      	b.n	40314a <_dtoa_r+0x162>
  4033fa:	9d02      	ldr	r5, [sp, #8]
  4033fc:	4628      	mov	r0, r5
  4033fe:	f002 faf3 	bl	4059e8 <__aeabi_i2d>
  403402:	4602      	mov	r2, r0
  403404:	460b      	mov	r3, r1
  403406:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40340a:	f002 fdbb 	bl	405f84 <__aeabi_dcmpeq>
  40340e:	2800      	cmp	r0, #0
  403410:	f47f ae80 	bne.w	403114 <_dtoa_r+0x12c>
  403414:	1e6b      	subs	r3, r5, #1
  403416:	9302      	str	r3, [sp, #8]
  403418:	e67c      	b.n	403114 <_dtoa_r+0x12c>
  40341a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40341c:	9d08      	ldr	r5, [sp, #32]
  40341e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403420:	2d00      	cmp	r5, #0
  403422:	dd0c      	ble.n	40343e <_dtoa_r+0x456>
  403424:	9906      	ldr	r1, [sp, #24]
  403426:	2900      	cmp	r1, #0
  403428:	460b      	mov	r3, r1
  40342a:	dd08      	ble.n	40343e <_dtoa_r+0x456>
  40342c:	42a9      	cmp	r1, r5
  40342e:	9a08      	ldr	r2, [sp, #32]
  403430:	bfa8      	it	ge
  403432:	462b      	movge	r3, r5
  403434:	1ad2      	subs	r2, r2, r3
  403436:	1aed      	subs	r5, r5, r3
  403438:	1acb      	subs	r3, r1, r3
  40343a:	9208      	str	r2, [sp, #32]
  40343c:	9306      	str	r3, [sp, #24]
  40343e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403440:	b1d3      	cbz	r3, 403478 <_dtoa_r+0x490>
  403442:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403444:	2b00      	cmp	r3, #0
  403446:	f000 82b7 	beq.w	4039b8 <_dtoa_r+0x9d0>
  40344a:	2f00      	cmp	r7, #0
  40344c:	dd10      	ble.n	403470 <_dtoa_r+0x488>
  40344e:	4631      	mov	r1, r6
  403450:	463a      	mov	r2, r7
  403452:	4620      	mov	r0, r4
  403454:	f001 fa56 	bl	404904 <__pow5mult>
  403458:	464a      	mov	r2, r9
  40345a:	4601      	mov	r1, r0
  40345c:	4606      	mov	r6, r0
  40345e:	4620      	mov	r0, r4
  403460:	f001 f9be 	bl	4047e0 <__multiply>
  403464:	4649      	mov	r1, r9
  403466:	4680      	mov	r8, r0
  403468:	4620      	mov	r0, r4
  40346a:	f001 f915 	bl	404698 <_Bfree>
  40346e:	46c1      	mov	r9, r8
  403470:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403472:	1bda      	subs	r2, r3, r7
  403474:	f040 82a1 	bne.w	4039ba <_dtoa_r+0x9d2>
  403478:	2101      	movs	r1, #1
  40347a:	4620      	mov	r0, r4
  40347c:	f001 f9a6 	bl	4047cc <__i2b>
  403480:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403482:	2b00      	cmp	r3, #0
  403484:	4680      	mov	r8, r0
  403486:	dd1c      	ble.n	4034c2 <_dtoa_r+0x4da>
  403488:	4601      	mov	r1, r0
  40348a:	461a      	mov	r2, r3
  40348c:	4620      	mov	r0, r4
  40348e:	f001 fa39 	bl	404904 <__pow5mult>
  403492:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403494:	2b01      	cmp	r3, #1
  403496:	4680      	mov	r8, r0
  403498:	f340 8254 	ble.w	403944 <_dtoa_r+0x95c>
  40349c:	2300      	movs	r3, #0
  40349e:	930c      	str	r3, [sp, #48]	; 0x30
  4034a0:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4034a4:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  4034a8:	6918      	ldr	r0, [r3, #16]
  4034aa:	f001 f93f 	bl	40472c <__hi0bits>
  4034ae:	f1c0 0020 	rsb	r0, r0, #32
  4034b2:	e010      	b.n	4034d6 <_dtoa_r+0x4ee>
  4034b4:	f1c3 0520 	rsb	r5, r3, #32
  4034b8:	fa0a f005 	lsl.w	r0, sl, r5
  4034bc:	e674      	b.n	4031a8 <_dtoa_r+0x1c0>
  4034be:	900e      	str	r0, [sp, #56]	; 0x38
  4034c0:	e63c      	b.n	40313c <_dtoa_r+0x154>
  4034c2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4034c4:	2b01      	cmp	r3, #1
  4034c6:	f340 8287 	ble.w	4039d8 <_dtoa_r+0x9f0>
  4034ca:	2300      	movs	r3, #0
  4034cc:	930c      	str	r3, [sp, #48]	; 0x30
  4034ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4034d0:	2001      	movs	r0, #1
  4034d2:	2b00      	cmp	r3, #0
  4034d4:	d1e4      	bne.n	4034a0 <_dtoa_r+0x4b8>
  4034d6:	9a06      	ldr	r2, [sp, #24]
  4034d8:	4410      	add	r0, r2
  4034da:	f010 001f 	ands.w	r0, r0, #31
  4034de:	f000 80a1 	beq.w	403624 <_dtoa_r+0x63c>
  4034e2:	f1c0 0320 	rsb	r3, r0, #32
  4034e6:	2b04      	cmp	r3, #4
  4034e8:	f340 849e 	ble.w	403e28 <_dtoa_r+0xe40>
  4034ec:	9b08      	ldr	r3, [sp, #32]
  4034ee:	f1c0 001c 	rsb	r0, r0, #28
  4034f2:	4403      	add	r3, r0
  4034f4:	9308      	str	r3, [sp, #32]
  4034f6:	4613      	mov	r3, r2
  4034f8:	4403      	add	r3, r0
  4034fa:	4405      	add	r5, r0
  4034fc:	9306      	str	r3, [sp, #24]
  4034fe:	9b08      	ldr	r3, [sp, #32]
  403500:	2b00      	cmp	r3, #0
  403502:	dd05      	ble.n	403510 <_dtoa_r+0x528>
  403504:	4649      	mov	r1, r9
  403506:	461a      	mov	r2, r3
  403508:	4620      	mov	r0, r4
  40350a:	f001 fa4b 	bl	4049a4 <__lshift>
  40350e:	4681      	mov	r9, r0
  403510:	9b06      	ldr	r3, [sp, #24]
  403512:	2b00      	cmp	r3, #0
  403514:	dd05      	ble.n	403522 <_dtoa_r+0x53a>
  403516:	4641      	mov	r1, r8
  403518:	461a      	mov	r2, r3
  40351a:	4620      	mov	r0, r4
  40351c:	f001 fa42 	bl	4049a4 <__lshift>
  403520:	4680      	mov	r8, r0
  403522:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403524:	2b00      	cmp	r3, #0
  403526:	f040 8086 	bne.w	403636 <_dtoa_r+0x64e>
  40352a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40352c:	2b00      	cmp	r3, #0
  40352e:	f340 8266 	ble.w	4039fe <_dtoa_r+0xa16>
  403532:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403534:	2b00      	cmp	r3, #0
  403536:	f000 8098 	beq.w	40366a <_dtoa_r+0x682>
  40353a:	2d00      	cmp	r5, #0
  40353c:	dd05      	ble.n	40354a <_dtoa_r+0x562>
  40353e:	4631      	mov	r1, r6
  403540:	462a      	mov	r2, r5
  403542:	4620      	mov	r0, r4
  403544:	f001 fa2e 	bl	4049a4 <__lshift>
  403548:	4606      	mov	r6, r0
  40354a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40354c:	2b00      	cmp	r3, #0
  40354e:	f040 8337 	bne.w	403bc0 <_dtoa_r+0xbd8>
  403552:	9606      	str	r6, [sp, #24]
  403554:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403556:	9a04      	ldr	r2, [sp, #16]
  403558:	f8dd b018 	ldr.w	fp, [sp, #24]
  40355c:	3b01      	subs	r3, #1
  40355e:	18d3      	adds	r3, r2, r3
  403560:	930b      	str	r3, [sp, #44]	; 0x2c
  403562:	f00a 0301 	and.w	r3, sl, #1
  403566:	930c      	str	r3, [sp, #48]	; 0x30
  403568:	4617      	mov	r7, r2
  40356a:	46c2      	mov	sl, r8
  40356c:	4651      	mov	r1, sl
  40356e:	4648      	mov	r0, r9
  403570:	f7ff fca6 	bl	402ec0 <quorem>
  403574:	4631      	mov	r1, r6
  403576:	4605      	mov	r5, r0
  403578:	4648      	mov	r0, r9
  40357a:	f001 fa65 	bl	404a48 <__mcmp>
  40357e:	465a      	mov	r2, fp
  403580:	900a      	str	r0, [sp, #40]	; 0x28
  403582:	4651      	mov	r1, sl
  403584:	4620      	mov	r0, r4
  403586:	f001 fa7b 	bl	404a80 <__mdiff>
  40358a:	68c2      	ldr	r2, [r0, #12]
  40358c:	4680      	mov	r8, r0
  40358e:	f105 0330 	add.w	r3, r5, #48	; 0x30
  403592:	2a00      	cmp	r2, #0
  403594:	f040 822b 	bne.w	4039ee <_dtoa_r+0xa06>
  403598:	4601      	mov	r1, r0
  40359a:	4648      	mov	r0, r9
  40359c:	9308      	str	r3, [sp, #32]
  40359e:	f001 fa53 	bl	404a48 <__mcmp>
  4035a2:	4641      	mov	r1, r8
  4035a4:	9006      	str	r0, [sp, #24]
  4035a6:	4620      	mov	r0, r4
  4035a8:	f001 f876 	bl	404698 <_Bfree>
  4035ac:	9a06      	ldr	r2, [sp, #24]
  4035ae:	9b08      	ldr	r3, [sp, #32]
  4035b0:	b932      	cbnz	r2, 4035c0 <_dtoa_r+0x5d8>
  4035b2:	9924      	ldr	r1, [sp, #144]	; 0x90
  4035b4:	b921      	cbnz	r1, 4035c0 <_dtoa_r+0x5d8>
  4035b6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4035b8:	2a00      	cmp	r2, #0
  4035ba:	f000 83ef 	beq.w	403d9c <_dtoa_r+0xdb4>
  4035be:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4035c0:	990a      	ldr	r1, [sp, #40]	; 0x28
  4035c2:	2900      	cmp	r1, #0
  4035c4:	f2c0 829f 	blt.w	403b06 <_dtoa_r+0xb1e>
  4035c8:	d105      	bne.n	4035d6 <_dtoa_r+0x5ee>
  4035ca:	9924      	ldr	r1, [sp, #144]	; 0x90
  4035cc:	b919      	cbnz	r1, 4035d6 <_dtoa_r+0x5ee>
  4035ce:	990c      	ldr	r1, [sp, #48]	; 0x30
  4035d0:	2900      	cmp	r1, #0
  4035d2:	f000 8298 	beq.w	403b06 <_dtoa_r+0xb1e>
  4035d6:	2a00      	cmp	r2, #0
  4035d8:	f300 8306 	bgt.w	403be8 <_dtoa_r+0xc00>
  4035dc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4035de:	703b      	strb	r3, [r7, #0]
  4035e0:	f107 0801 	add.w	r8, r7, #1
  4035e4:	4297      	cmp	r7, r2
  4035e6:	4645      	mov	r5, r8
  4035e8:	f000 830c 	beq.w	403c04 <_dtoa_r+0xc1c>
  4035ec:	4649      	mov	r1, r9
  4035ee:	2300      	movs	r3, #0
  4035f0:	220a      	movs	r2, #10
  4035f2:	4620      	mov	r0, r4
  4035f4:	f001 f85a 	bl	4046ac <__multadd>
  4035f8:	455e      	cmp	r6, fp
  4035fa:	4681      	mov	r9, r0
  4035fc:	4631      	mov	r1, r6
  4035fe:	f04f 0300 	mov.w	r3, #0
  403602:	f04f 020a 	mov.w	r2, #10
  403606:	4620      	mov	r0, r4
  403608:	f000 81eb 	beq.w	4039e2 <_dtoa_r+0x9fa>
  40360c:	f001 f84e 	bl	4046ac <__multadd>
  403610:	4659      	mov	r1, fp
  403612:	4606      	mov	r6, r0
  403614:	2300      	movs	r3, #0
  403616:	220a      	movs	r2, #10
  403618:	4620      	mov	r0, r4
  40361a:	f001 f847 	bl	4046ac <__multadd>
  40361e:	4647      	mov	r7, r8
  403620:	4683      	mov	fp, r0
  403622:	e7a3      	b.n	40356c <_dtoa_r+0x584>
  403624:	201c      	movs	r0, #28
  403626:	9b08      	ldr	r3, [sp, #32]
  403628:	4403      	add	r3, r0
  40362a:	9308      	str	r3, [sp, #32]
  40362c:	9b06      	ldr	r3, [sp, #24]
  40362e:	4403      	add	r3, r0
  403630:	4405      	add	r5, r0
  403632:	9306      	str	r3, [sp, #24]
  403634:	e763      	b.n	4034fe <_dtoa_r+0x516>
  403636:	4641      	mov	r1, r8
  403638:	4648      	mov	r0, r9
  40363a:	f001 fa05 	bl	404a48 <__mcmp>
  40363e:	2800      	cmp	r0, #0
  403640:	f6bf af73 	bge.w	40352a <_dtoa_r+0x542>
  403644:	9f02      	ldr	r7, [sp, #8]
  403646:	4649      	mov	r1, r9
  403648:	2300      	movs	r3, #0
  40364a:	220a      	movs	r2, #10
  40364c:	4620      	mov	r0, r4
  40364e:	3f01      	subs	r7, #1
  403650:	9702      	str	r7, [sp, #8]
  403652:	f001 f82b 	bl	4046ac <__multadd>
  403656:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403658:	4681      	mov	r9, r0
  40365a:	2b00      	cmp	r3, #0
  40365c:	f040 83b6 	bne.w	403dcc <_dtoa_r+0xde4>
  403660:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403662:	2b00      	cmp	r3, #0
  403664:	f340 83bf 	ble.w	403de6 <_dtoa_r+0xdfe>
  403668:	930a      	str	r3, [sp, #40]	; 0x28
  40366a:	f8dd b010 	ldr.w	fp, [sp, #16]
  40366e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  403670:	465d      	mov	r5, fp
  403672:	e002      	b.n	40367a <_dtoa_r+0x692>
  403674:	f001 f81a 	bl	4046ac <__multadd>
  403678:	4681      	mov	r9, r0
  40367a:	4641      	mov	r1, r8
  40367c:	4648      	mov	r0, r9
  40367e:	f7ff fc1f 	bl	402ec0 <quorem>
  403682:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  403686:	f805 ab01 	strb.w	sl, [r5], #1
  40368a:	eba5 030b 	sub.w	r3, r5, fp
  40368e:	42bb      	cmp	r3, r7
  403690:	f04f 020a 	mov.w	r2, #10
  403694:	f04f 0300 	mov.w	r3, #0
  403698:	4649      	mov	r1, r9
  40369a:	4620      	mov	r0, r4
  40369c:	dbea      	blt.n	403674 <_dtoa_r+0x68c>
  40369e:	9b04      	ldr	r3, [sp, #16]
  4036a0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4036a2:	2a01      	cmp	r2, #1
  4036a4:	bfac      	ite	ge
  4036a6:	189b      	addge	r3, r3, r2
  4036a8:	3301      	addlt	r3, #1
  4036aa:	461d      	mov	r5, r3
  4036ac:	f04f 0b00 	mov.w	fp, #0
  4036b0:	4649      	mov	r1, r9
  4036b2:	2201      	movs	r2, #1
  4036b4:	4620      	mov	r0, r4
  4036b6:	f001 f975 	bl	4049a4 <__lshift>
  4036ba:	4641      	mov	r1, r8
  4036bc:	4681      	mov	r9, r0
  4036be:	f001 f9c3 	bl	404a48 <__mcmp>
  4036c2:	2800      	cmp	r0, #0
  4036c4:	f340 823d 	ble.w	403b42 <_dtoa_r+0xb5a>
  4036c8:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  4036cc:	9904      	ldr	r1, [sp, #16]
  4036ce:	1e6b      	subs	r3, r5, #1
  4036d0:	e004      	b.n	4036dc <_dtoa_r+0x6f4>
  4036d2:	428b      	cmp	r3, r1
  4036d4:	f000 81ae 	beq.w	403a34 <_dtoa_r+0xa4c>
  4036d8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  4036dc:	2a39      	cmp	r2, #57	; 0x39
  4036de:	f103 0501 	add.w	r5, r3, #1
  4036e2:	d0f6      	beq.n	4036d2 <_dtoa_r+0x6ea>
  4036e4:	3201      	adds	r2, #1
  4036e6:	701a      	strb	r2, [r3, #0]
  4036e8:	4641      	mov	r1, r8
  4036ea:	4620      	mov	r0, r4
  4036ec:	f000 ffd4 	bl	404698 <_Bfree>
  4036f0:	2e00      	cmp	r6, #0
  4036f2:	f43f ae3d 	beq.w	403370 <_dtoa_r+0x388>
  4036f6:	f1bb 0f00 	cmp.w	fp, #0
  4036fa:	d005      	beq.n	403708 <_dtoa_r+0x720>
  4036fc:	45b3      	cmp	fp, r6
  4036fe:	d003      	beq.n	403708 <_dtoa_r+0x720>
  403700:	4659      	mov	r1, fp
  403702:	4620      	mov	r0, r4
  403704:	f000 ffc8 	bl	404698 <_Bfree>
  403708:	4631      	mov	r1, r6
  40370a:	4620      	mov	r0, r4
  40370c:	f000 ffc4 	bl	404698 <_Bfree>
  403710:	e62e      	b.n	403370 <_dtoa_r+0x388>
  403712:	2300      	movs	r3, #0
  403714:	930b      	str	r3, [sp, #44]	; 0x2c
  403716:	9b02      	ldr	r3, [sp, #8]
  403718:	9a25      	ldr	r2, [sp, #148]	; 0x94
  40371a:	4413      	add	r3, r2
  40371c:	930f      	str	r3, [sp, #60]	; 0x3c
  40371e:	3301      	adds	r3, #1
  403720:	2b01      	cmp	r3, #1
  403722:	461f      	mov	r7, r3
  403724:	461e      	mov	r6, r3
  403726:	930a      	str	r3, [sp, #40]	; 0x28
  403728:	bfb8      	it	lt
  40372a:	2701      	movlt	r7, #1
  40372c:	2100      	movs	r1, #0
  40372e:	2f17      	cmp	r7, #23
  403730:	6461      	str	r1, [r4, #68]	; 0x44
  403732:	d90a      	bls.n	40374a <_dtoa_r+0x762>
  403734:	2201      	movs	r2, #1
  403736:	2304      	movs	r3, #4
  403738:	005b      	lsls	r3, r3, #1
  40373a:	f103 0014 	add.w	r0, r3, #20
  40373e:	4287      	cmp	r7, r0
  403740:	4611      	mov	r1, r2
  403742:	f102 0201 	add.w	r2, r2, #1
  403746:	d2f7      	bcs.n	403738 <_dtoa_r+0x750>
  403748:	6461      	str	r1, [r4, #68]	; 0x44
  40374a:	4620      	mov	r0, r4
  40374c:	f000 ff7e 	bl	40464c <_Balloc>
  403750:	2e0e      	cmp	r6, #14
  403752:	9004      	str	r0, [sp, #16]
  403754:	6420      	str	r0, [r4, #64]	; 0x40
  403756:	f63f ad41 	bhi.w	4031dc <_dtoa_r+0x1f4>
  40375a:	2d00      	cmp	r5, #0
  40375c:	f43f ad3e 	beq.w	4031dc <_dtoa_r+0x1f4>
  403760:	9902      	ldr	r1, [sp, #8]
  403762:	2900      	cmp	r1, #0
  403764:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  403768:	f340 8202 	ble.w	403b70 <_dtoa_r+0xb88>
  40376c:	4bb8      	ldr	r3, [pc, #736]	; (403a50 <_dtoa_r+0xa68>)
  40376e:	f001 020f 	and.w	r2, r1, #15
  403772:	110d      	asrs	r5, r1, #4
  403774:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403778:	06e9      	lsls	r1, r5, #27
  40377a:	e9d3 6700 	ldrd	r6, r7, [r3]
  40377e:	f140 81ae 	bpl.w	403ade <_dtoa_r+0xaf6>
  403782:	4bb4      	ldr	r3, [pc, #720]	; (403a54 <_dtoa_r+0xa6c>)
  403784:	4650      	mov	r0, sl
  403786:	4659      	mov	r1, fp
  403788:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  40378c:	f002 fabc 	bl	405d08 <__aeabi_ddiv>
  403790:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  403794:	f005 050f 	and.w	r5, r5, #15
  403798:	f04f 0a03 	mov.w	sl, #3
  40379c:	b18d      	cbz	r5, 4037c2 <_dtoa_r+0x7da>
  40379e:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 403a54 <_dtoa_r+0xa6c>
  4037a2:	07ea      	lsls	r2, r5, #31
  4037a4:	d509      	bpl.n	4037ba <_dtoa_r+0x7d2>
  4037a6:	4630      	mov	r0, r6
  4037a8:	4639      	mov	r1, r7
  4037aa:	e9d8 2300 	ldrd	r2, r3, [r8]
  4037ae:	f002 f981 	bl	405ab4 <__aeabi_dmul>
  4037b2:	f10a 0a01 	add.w	sl, sl, #1
  4037b6:	4606      	mov	r6, r0
  4037b8:	460f      	mov	r7, r1
  4037ba:	106d      	asrs	r5, r5, #1
  4037bc:	f108 0808 	add.w	r8, r8, #8
  4037c0:	d1ef      	bne.n	4037a2 <_dtoa_r+0x7ba>
  4037c2:	463b      	mov	r3, r7
  4037c4:	4632      	mov	r2, r6
  4037c6:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  4037ca:	f002 fa9d 	bl	405d08 <__aeabi_ddiv>
  4037ce:	4607      	mov	r7, r0
  4037d0:	4688      	mov	r8, r1
  4037d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4037d4:	b143      	cbz	r3, 4037e8 <_dtoa_r+0x800>
  4037d6:	2200      	movs	r2, #0
  4037d8:	4b9f      	ldr	r3, [pc, #636]	; (403a58 <_dtoa_r+0xa70>)
  4037da:	4638      	mov	r0, r7
  4037dc:	4641      	mov	r1, r8
  4037de:	f002 fbdb 	bl	405f98 <__aeabi_dcmplt>
  4037e2:	2800      	cmp	r0, #0
  4037e4:	f040 8286 	bne.w	403cf4 <_dtoa_r+0xd0c>
  4037e8:	4650      	mov	r0, sl
  4037ea:	f002 f8fd 	bl	4059e8 <__aeabi_i2d>
  4037ee:	463a      	mov	r2, r7
  4037f0:	4643      	mov	r3, r8
  4037f2:	f002 f95f 	bl	405ab4 <__aeabi_dmul>
  4037f6:	4b99      	ldr	r3, [pc, #612]	; (403a5c <_dtoa_r+0xa74>)
  4037f8:	2200      	movs	r2, #0
  4037fa:	f001 ffa9 	bl	405750 <__adddf3>
  4037fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403800:	4605      	mov	r5, r0
  403802:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403806:	2b00      	cmp	r3, #0
  403808:	f000 813e 	beq.w	403a88 <_dtoa_r+0xaa0>
  40380c:	9b02      	ldr	r3, [sp, #8]
  40380e:	9315      	str	r3, [sp, #84]	; 0x54
  403810:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403812:	9312      	str	r3, [sp, #72]	; 0x48
  403814:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403816:	2b00      	cmp	r3, #0
  403818:	f000 81fa 	beq.w	403c10 <_dtoa_r+0xc28>
  40381c:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40381e:	4b8c      	ldr	r3, [pc, #560]	; (403a50 <_dtoa_r+0xa68>)
  403820:	498f      	ldr	r1, [pc, #572]	; (403a60 <_dtoa_r+0xa78>)
  403822:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403826:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  40382a:	2000      	movs	r0, #0
  40382c:	f002 fa6c 	bl	405d08 <__aeabi_ddiv>
  403830:	462a      	mov	r2, r5
  403832:	4633      	mov	r3, r6
  403834:	f001 ff8a 	bl	40574c <__aeabi_dsub>
  403838:	4682      	mov	sl, r0
  40383a:	468b      	mov	fp, r1
  40383c:	4638      	mov	r0, r7
  40383e:	4641      	mov	r1, r8
  403840:	f002 fbe8 	bl	406014 <__aeabi_d2iz>
  403844:	4605      	mov	r5, r0
  403846:	f002 f8cf 	bl	4059e8 <__aeabi_i2d>
  40384a:	4602      	mov	r2, r0
  40384c:	460b      	mov	r3, r1
  40384e:	4638      	mov	r0, r7
  403850:	4641      	mov	r1, r8
  403852:	f001 ff7b 	bl	40574c <__aeabi_dsub>
  403856:	3530      	adds	r5, #48	; 0x30
  403858:	fa5f f885 	uxtb.w	r8, r5
  40385c:	9d04      	ldr	r5, [sp, #16]
  40385e:	4606      	mov	r6, r0
  403860:	460f      	mov	r7, r1
  403862:	f885 8000 	strb.w	r8, [r5]
  403866:	4602      	mov	r2, r0
  403868:	460b      	mov	r3, r1
  40386a:	4650      	mov	r0, sl
  40386c:	4659      	mov	r1, fp
  40386e:	3501      	adds	r5, #1
  403870:	f002 fbb0 	bl	405fd4 <__aeabi_dcmpgt>
  403874:	2800      	cmp	r0, #0
  403876:	d154      	bne.n	403922 <_dtoa_r+0x93a>
  403878:	4632      	mov	r2, r6
  40387a:	463b      	mov	r3, r7
  40387c:	2000      	movs	r0, #0
  40387e:	4976      	ldr	r1, [pc, #472]	; (403a58 <_dtoa_r+0xa70>)
  403880:	f001 ff64 	bl	40574c <__aeabi_dsub>
  403884:	4602      	mov	r2, r0
  403886:	460b      	mov	r3, r1
  403888:	4650      	mov	r0, sl
  40388a:	4659      	mov	r1, fp
  40388c:	f002 fba2 	bl	405fd4 <__aeabi_dcmpgt>
  403890:	2800      	cmp	r0, #0
  403892:	f040 8270 	bne.w	403d76 <_dtoa_r+0xd8e>
  403896:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403898:	2a01      	cmp	r2, #1
  40389a:	f000 8111 	beq.w	403ac0 <_dtoa_r+0xad8>
  40389e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4038a0:	9a04      	ldr	r2, [sp, #16]
  4038a2:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  4038a6:	4413      	add	r3, r2
  4038a8:	4699      	mov	r9, r3
  4038aa:	e00d      	b.n	4038c8 <_dtoa_r+0x8e0>
  4038ac:	2000      	movs	r0, #0
  4038ae:	496a      	ldr	r1, [pc, #424]	; (403a58 <_dtoa_r+0xa70>)
  4038b0:	f001 ff4c 	bl	40574c <__aeabi_dsub>
  4038b4:	4652      	mov	r2, sl
  4038b6:	465b      	mov	r3, fp
  4038b8:	f002 fb6e 	bl	405f98 <__aeabi_dcmplt>
  4038bc:	2800      	cmp	r0, #0
  4038be:	f040 8258 	bne.w	403d72 <_dtoa_r+0xd8a>
  4038c2:	454d      	cmp	r5, r9
  4038c4:	f000 80fa 	beq.w	403abc <_dtoa_r+0xad4>
  4038c8:	4650      	mov	r0, sl
  4038ca:	4659      	mov	r1, fp
  4038cc:	2200      	movs	r2, #0
  4038ce:	4b65      	ldr	r3, [pc, #404]	; (403a64 <_dtoa_r+0xa7c>)
  4038d0:	f002 f8f0 	bl	405ab4 <__aeabi_dmul>
  4038d4:	2200      	movs	r2, #0
  4038d6:	4b63      	ldr	r3, [pc, #396]	; (403a64 <_dtoa_r+0xa7c>)
  4038d8:	4682      	mov	sl, r0
  4038da:	468b      	mov	fp, r1
  4038dc:	4630      	mov	r0, r6
  4038de:	4639      	mov	r1, r7
  4038e0:	f002 f8e8 	bl	405ab4 <__aeabi_dmul>
  4038e4:	460f      	mov	r7, r1
  4038e6:	4606      	mov	r6, r0
  4038e8:	f002 fb94 	bl	406014 <__aeabi_d2iz>
  4038ec:	4680      	mov	r8, r0
  4038ee:	f002 f87b 	bl	4059e8 <__aeabi_i2d>
  4038f2:	4602      	mov	r2, r0
  4038f4:	460b      	mov	r3, r1
  4038f6:	4630      	mov	r0, r6
  4038f8:	4639      	mov	r1, r7
  4038fa:	f001 ff27 	bl	40574c <__aeabi_dsub>
  4038fe:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403902:	fa5f f888 	uxtb.w	r8, r8
  403906:	4652      	mov	r2, sl
  403908:	465b      	mov	r3, fp
  40390a:	f805 8b01 	strb.w	r8, [r5], #1
  40390e:	4606      	mov	r6, r0
  403910:	460f      	mov	r7, r1
  403912:	f002 fb41 	bl	405f98 <__aeabi_dcmplt>
  403916:	4632      	mov	r2, r6
  403918:	463b      	mov	r3, r7
  40391a:	2800      	cmp	r0, #0
  40391c:	d0c6      	beq.n	4038ac <_dtoa_r+0x8c4>
  40391e:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403922:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403924:	9302      	str	r3, [sp, #8]
  403926:	e523      	b.n	403370 <_dtoa_r+0x388>
  403928:	2300      	movs	r3, #0
  40392a:	930b      	str	r3, [sp, #44]	; 0x2c
  40392c:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40392e:	2b00      	cmp	r3, #0
  403930:	f340 80dc 	ble.w	403aec <_dtoa_r+0xb04>
  403934:	461f      	mov	r7, r3
  403936:	461e      	mov	r6, r3
  403938:	930f      	str	r3, [sp, #60]	; 0x3c
  40393a:	930a      	str	r3, [sp, #40]	; 0x28
  40393c:	e6f6      	b.n	40372c <_dtoa_r+0x744>
  40393e:	2301      	movs	r3, #1
  403940:	930b      	str	r3, [sp, #44]	; 0x2c
  403942:	e7f3      	b.n	40392c <_dtoa_r+0x944>
  403944:	f1ba 0f00 	cmp.w	sl, #0
  403948:	f47f ada8 	bne.w	40349c <_dtoa_r+0x4b4>
  40394c:	f3cb 0313 	ubfx	r3, fp, #0, #20
  403950:	2b00      	cmp	r3, #0
  403952:	f47f adba 	bne.w	4034ca <_dtoa_r+0x4e2>
  403956:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  40395a:	0d3f      	lsrs	r7, r7, #20
  40395c:	053f      	lsls	r7, r7, #20
  40395e:	2f00      	cmp	r7, #0
  403960:	f000 820d 	beq.w	403d7e <_dtoa_r+0xd96>
  403964:	9b08      	ldr	r3, [sp, #32]
  403966:	3301      	adds	r3, #1
  403968:	9308      	str	r3, [sp, #32]
  40396a:	9b06      	ldr	r3, [sp, #24]
  40396c:	3301      	adds	r3, #1
  40396e:	9306      	str	r3, [sp, #24]
  403970:	2301      	movs	r3, #1
  403972:	930c      	str	r3, [sp, #48]	; 0x30
  403974:	e5ab      	b.n	4034ce <_dtoa_r+0x4e6>
  403976:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403978:	2b00      	cmp	r3, #0
  40397a:	f73f ac42 	bgt.w	403202 <_dtoa_r+0x21a>
  40397e:	f040 8221 	bne.w	403dc4 <_dtoa_r+0xddc>
  403982:	2200      	movs	r2, #0
  403984:	4b38      	ldr	r3, [pc, #224]	; (403a68 <_dtoa_r+0xa80>)
  403986:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  40398a:	f002 f893 	bl	405ab4 <__aeabi_dmul>
  40398e:	4652      	mov	r2, sl
  403990:	465b      	mov	r3, fp
  403992:	f002 fb15 	bl	405fc0 <__aeabi_dcmpge>
  403996:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  40399a:	4646      	mov	r6, r8
  40399c:	2800      	cmp	r0, #0
  40399e:	d041      	beq.n	403a24 <_dtoa_r+0xa3c>
  4039a0:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4039a2:	9d04      	ldr	r5, [sp, #16]
  4039a4:	43db      	mvns	r3, r3
  4039a6:	9302      	str	r3, [sp, #8]
  4039a8:	4641      	mov	r1, r8
  4039aa:	4620      	mov	r0, r4
  4039ac:	f000 fe74 	bl	404698 <_Bfree>
  4039b0:	2e00      	cmp	r6, #0
  4039b2:	f43f acdd 	beq.w	403370 <_dtoa_r+0x388>
  4039b6:	e6a7      	b.n	403708 <_dtoa_r+0x720>
  4039b8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4039ba:	4649      	mov	r1, r9
  4039bc:	4620      	mov	r0, r4
  4039be:	f000 ffa1 	bl	404904 <__pow5mult>
  4039c2:	4681      	mov	r9, r0
  4039c4:	e558      	b.n	403478 <_dtoa_r+0x490>
  4039c6:	9a14      	ldr	r2, [sp, #80]	; 0x50
  4039c8:	2a00      	cmp	r2, #0
  4039ca:	f000 8187 	beq.w	403cdc <_dtoa_r+0xcf4>
  4039ce:	f203 4333 	addw	r3, r3, #1075	; 0x433
  4039d2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4039d4:	9d08      	ldr	r5, [sp, #32]
  4039d6:	e4f2      	b.n	4033be <_dtoa_r+0x3d6>
  4039d8:	f1ba 0f00 	cmp.w	sl, #0
  4039dc:	f47f ad75 	bne.w	4034ca <_dtoa_r+0x4e2>
  4039e0:	e7b4      	b.n	40394c <_dtoa_r+0x964>
  4039e2:	f000 fe63 	bl	4046ac <__multadd>
  4039e6:	4647      	mov	r7, r8
  4039e8:	4606      	mov	r6, r0
  4039ea:	4683      	mov	fp, r0
  4039ec:	e5be      	b.n	40356c <_dtoa_r+0x584>
  4039ee:	4601      	mov	r1, r0
  4039f0:	4620      	mov	r0, r4
  4039f2:	9306      	str	r3, [sp, #24]
  4039f4:	f000 fe50 	bl	404698 <_Bfree>
  4039f8:	2201      	movs	r2, #1
  4039fa:	9b06      	ldr	r3, [sp, #24]
  4039fc:	e5e0      	b.n	4035c0 <_dtoa_r+0x5d8>
  4039fe:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403a00:	2b02      	cmp	r3, #2
  403a02:	f77f ad96 	ble.w	403532 <_dtoa_r+0x54a>
  403a06:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403a08:	2b00      	cmp	r3, #0
  403a0a:	d1c9      	bne.n	4039a0 <_dtoa_r+0x9b8>
  403a0c:	4641      	mov	r1, r8
  403a0e:	2205      	movs	r2, #5
  403a10:	4620      	mov	r0, r4
  403a12:	f000 fe4b 	bl	4046ac <__multadd>
  403a16:	4601      	mov	r1, r0
  403a18:	4680      	mov	r8, r0
  403a1a:	4648      	mov	r0, r9
  403a1c:	f001 f814 	bl	404a48 <__mcmp>
  403a20:	2800      	cmp	r0, #0
  403a22:	ddbd      	ble.n	4039a0 <_dtoa_r+0x9b8>
  403a24:	9a02      	ldr	r2, [sp, #8]
  403a26:	9904      	ldr	r1, [sp, #16]
  403a28:	2331      	movs	r3, #49	; 0x31
  403a2a:	3201      	adds	r2, #1
  403a2c:	9202      	str	r2, [sp, #8]
  403a2e:	700b      	strb	r3, [r1, #0]
  403a30:	1c4d      	adds	r5, r1, #1
  403a32:	e7b9      	b.n	4039a8 <_dtoa_r+0x9c0>
  403a34:	9a02      	ldr	r2, [sp, #8]
  403a36:	3201      	adds	r2, #1
  403a38:	9202      	str	r2, [sp, #8]
  403a3a:	9a04      	ldr	r2, [sp, #16]
  403a3c:	2331      	movs	r3, #49	; 0x31
  403a3e:	7013      	strb	r3, [r2, #0]
  403a40:	e652      	b.n	4036e8 <_dtoa_r+0x700>
  403a42:	2301      	movs	r3, #1
  403a44:	930b      	str	r3, [sp, #44]	; 0x2c
  403a46:	e666      	b.n	403716 <_dtoa_r+0x72e>
  403a48:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403a4c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403a4e:	e48f      	b.n	403370 <_dtoa_r+0x388>
  403a50:	00407078 	.word	0x00407078
  403a54:	00407050 	.word	0x00407050
  403a58:	3ff00000 	.word	0x3ff00000
  403a5c:	401c0000 	.word	0x401c0000
  403a60:	3fe00000 	.word	0x3fe00000
  403a64:	40240000 	.word	0x40240000
  403a68:	40140000 	.word	0x40140000
  403a6c:	4650      	mov	r0, sl
  403a6e:	f001 ffbb 	bl	4059e8 <__aeabi_i2d>
  403a72:	463a      	mov	r2, r7
  403a74:	4643      	mov	r3, r8
  403a76:	f002 f81d 	bl	405ab4 <__aeabi_dmul>
  403a7a:	2200      	movs	r2, #0
  403a7c:	4bc1      	ldr	r3, [pc, #772]	; (403d84 <_dtoa_r+0xd9c>)
  403a7e:	f001 fe67 	bl	405750 <__adddf3>
  403a82:	4605      	mov	r5, r0
  403a84:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403a88:	4641      	mov	r1, r8
  403a8a:	2200      	movs	r2, #0
  403a8c:	4bbe      	ldr	r3, [pc, #760]	; (403d88 <_dtoa_r+0xda0>)
  403a8e:	4638      	mov	r0, r7
  403a90:	f001 fe5c 	bl	40574c <__aeabi_dsub>
  403a94:	462a      	mov	r2, r5
  403a96:	4633      	mov	r3, r6
  403a98:	4682      	mov	sl, r0
  403a9a:	468b      	mov	fp, r1
  403a9c:	f002 fa9a 	bl	405fd4 <__aeabi_dcmpgt>
  403aa0:	4680      	mov	r8, r0
  403aa2:	2800      	cmp	r0, #0
  403aa4:	f040 8110 	bne.w	403cc8 <_dtoa_r+0xce0>
  403aa8:	462a      	mov	r2, r5
  403aaa:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  403aae:	4650      	mov	r0, sl
  403ab0:	4659      	mov	r1, fp
  403ab2:	f002 fa71 	bl	405f98 <__aeabi_dcmplt>
  403ab6:	b118      	cbz	r0, 403ac0 <_dtoa_r+0xad8>
  403ab8:	4646      	mov	r6, r8
  403aba:	e771      	b.n	4039a0 <_dtoa_r+0x9b8>
  403abc:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403ac0:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  403ac4:	f7ff bb8a 	b.w	4031dc <_dtoa_r+0x1f4>
  403ac8:	9804      	ldr	r0, [sp, #16]
  403aca:	f7ff babb 	b.w	403044 <_dtoa_r+0x5c>
  403ace:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403ad0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  403ad2:	970c      	str	r7, [sp, #48]	; 0x30
  403ad4:	1afb      	subs	r3, r7, r3
  403ad6:	441a      	add	r2, r3
  403ad8:	920d      	str	r2, [sp, #52]	; 0x34
  403ada:	2700      	movs	r7, #0
  403adc:	e469      	b.n	4033b2 <_dtoa_r+0x3ca>
  403ade:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  403ae2:	f04f 0a02 	mov.w	sl, #2
  403ae6:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  403aea:	e657      	b.n	40379c <_dtoa_r+0x7b4>
  403aec:	2100      	movs	r1, #0
  403aee:	2301      	movs	r3, #1
  403af0:	6461      	str	r1, [r4, #68]	; 0x44
  403af2:	4620      	mov	r0, r4
  403af4:	9325      	str	r3, [sp, #148]	; 0x94
  403af6:	f000 fda9 	bl	40464c <_Balloc>
  403afa:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403afc:	9004      	str	r0, [sp, #16]
  403afe:	6420      	str	r0, [r4, #64]	; 0x40
  403b00:	930a      	str	r3, [sp, #40]	; 0x28
  403b02:	930f      	str	r3, [sp, #60]	; 0x3c
  403b04:	e629      	b.n	40375a <_dtoa_r+0x772>
  403b06:	2a00      	cmp	r2, #0
  403b08:	46d0      	mov	r8, sl
  403b0a:	f8cd b018 	str.w	fp, [sp, #24]
  403b0e:	469a      	mov	sl, r3
  403b10:	dd11      	ble.n	403b36 <_dtoa_r+0xb4e>
  403b12:	4649      	mov	r1, r9
  403b14:	2201      	movs	r2, #1
  403b16:	4620      	mov	r0, r4
  403b18:	f000 ff44 	bl	4049a4 <__lshift>
  403b1c:	4641      	mov	r1, r8
  403b1e:	4681      	mov	r9, r0
  403b20:	f000 ff92 	bl	404a48 <__mcmp>
  403b24:	2800      	cmp	r0, #0
  403b26:	f340 8146 	ble.w	403db6 <_dtoa_r+0xdce>
  403b2a:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  403b2e:	f000 8106 	beq.w	403d3e <_dtoa_r+0xd56>
  403b32:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  403b36:	46b3      	mov	fp, r6
  403b38:	f887 a000 	strb.w	sl, [r7]
  403b3c:	1c7d      	adds	r5, r7, #1
  403b3e:	9e06      	ldr	r6, [sp, #24]
  403b40:	e5d2      	b.n	4036e8 <_dtoa_r+0x700>
  403b42:	d104      	bne.n	403b4e <_dtoa_r+0xb66>
  403b44:	f01a 0f01 	tst.w	sl, #1
  403b48:	d001      	beq.n	403b4e <_dtoa_r+0xb66>
  403b4a:	e5bd      	b.n	4036c8 <_dtoa_r+0x6e0>
  403b4c:	4615      	mov	r5, r2
  403b4e:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  403b52:	2b30      	cmp	r3, #48	; 0x30
  403b54:	f105 32ff 	add.w	r2, r5, #4294967295
  403b58:	d0f8      	beq.n	403b4c <_dtoa_r+0xb64>
  403b5a:	e5c5      	b.n	4036e8 <_dtoa_r+0x700>
  403b5c:	9904      	ldr	r1, [sp, #16]
  403b5e:	2230      	movs	r2, #48	; 0x30
  403b60:	700a      	strb	r2, [r1, #0]
  403b62:	9a02      	ldr	r2, [sp, #8]
  403b64:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403b68:	3201      	adds	r2, #1
  403b6a:	9202      	str	r2, [sp, #8]
  403b6c:	f7ff bbfc 	b.w	403368 <_dtoa_r+0x380>
  403b70:	f000 80bb 	beq.w	403cea <_dtoa_r+0xd02>
  403b74:	9b02      	ldr	r3, [sp, #8]
  403b76:	425d      	negs	r5, r3
  403b78:	4b84      	ldr	r3, [pc, #528]	; (403d8c <_dtoa_r+0xda4>)
  403b7a:	f005 020f 	and.w	r2, r5, #15
  403b7e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403b82:	e9d3 2300 	ldrd	r2, r3, [r3]
  403b86:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  403b8a:	f001 ff93 	bl	405ab4 <__aeabi_dmul>
  403b8e:	112d      	asrs	r5, r5, #4
  403b90:	4607      	mov	r7, r0
  403b92:	4688      	mov	r8, r1
  403b94:	f000 812c 	beq.w	403df0 <_dtoa_r+0xe08>
  403b98:	4e7d      	ldr	r6, [pc, #500]	; (403d90 <_dtoa_r+0xda8>)
  403b9a:	f04f 0a02 	mov.w	sl, #2
  403b9e:	07eb      	lsls	r3, r5, #31
  403ba0:	d509      	bpl.n	403bb6 <_dtoa_r+0xbce>
  403ba2:	4638      	mov	r0, r7
  403ba4:	4641      	mov	r1, r8
  403ba6:	e9d6 2300 	ldrd	r2, r3, [r6]
  403baa:	f001 ff83 	bl	405ab4 <__aeabi_dmul>
  403bae:	f10a 0a01 	add.w	sl, sl, #1
  403bb2:	4607      	mov	r7, r0
  403bb4:	4688      	mov	r8, r1
  403bb6:	106d      	asrs	r5, r5, #1
  403bb8:	f106 0608 	add.w	r6, r6, #8
  403bbc:	d1ef      	bne.n	403b9e <_dtoa_r+0xbb6>
  403bbe:	e608      	b.n	4037d2 <_dtoa_r+0x7ea>
  403bc0:	6871      	ldr	r1, [r6, #4]
  403bc2:	4620      	mov	r0, r4
  403bc4:	f000 fd42 	bl	40464c <_Balloc>
  403bc8:	6933      	ldr	r3, [r6, #16]
  403bca:	3302      	adds	r3, #2
  403bcc:	009a      	lsls	r2, r3, #2
  403bce:	4605      	mov	r5, r0
  403bd0:	f106 010c 	add.w	r1, r6, #12
  403bd4:	300c      	adds	r0, #12
  403bd6:	f000 fc93 	bl	404500 <memcpy>
  403bda:	4629      	mov	r1, r5
  403bdc:	2201      	movs	r2, #1
  403bde:	4620      	mov	r0, r4
  403be0:	f000 fee0 	bl	4049a4 <__lshift>
  403be4:	9006      	str	r0, [sp, #24]
  403be6:	e4b5      	b.n	403554 <_dtoa_r+0x56c>
  403be8:	2b39      	cmp	r3, #57	; 0x39
  403bea:	f8cd b018 	str.w	fp, [sp, #24]
  403bee:	46d0      	mov	r8, sl
  403bf0:	f000 80a5 	beq.w	403d3e <_dtoa_r+0xd56>
  403bf4:	f103 0a01 	add.w	sl, r3, #1
  403bf8:	46b3      	mov	fp, r6
  403bfa:	f887 a000 	strb.w	sl, [r7]
  403bfe:	1c7d      	adds	r5, r7, #1
  403c00:	9e06      	ldr	r6, [sp, #24]
  403c02:	e571      	b.n	4036e8 <_dtoa_r+0x700>
  403c04:	465a      	mov	r2, fp
  403c06:	46d0      	mov	r8, sl
  403c08:	46b3      	mov	fp, r6
  403c0a:	469a      	mov	sl, r3
  403c0c:	4616      	mov	r6, r2
  403c0e:	e54f      	b.n	4036b0 <_dtoa_r+0x6c8>
  403c10:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403c12:	495e      	ldr	r1, [pc, #376]	; (403d8c <_dtoa_r+0xda4>)
  403c14:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  403c18:	462a      	mov	r2, r5
  403c1a:	4633      	mov	r3, r6
  403c1c:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  403c20:	f001 ff48 	bl	405ab4 <__aeabi_dmul>
  403c24:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  403c28:	4638      	mov	r0, r7
  403c2a:	4641      	mov	r1, r8
  403c2c:	f002 f9f2 	bl	406014 <__aeabi_d2iz>
  403c30:	4605      	mov	r5, r0
  403c32:	f001 fed9 	bl	4059e8 <__aeabi_i2d>
  403c36:	460b      	mov	r3, r1
  403c38:	4602      	mov	r2, r0
  403c3a:	4641      	mov	r1, r8
  403c3c:	4638      	mov	r0, r7
  403c3e:	f001 fd85 	bl	40574c <__aeabi_dsub>
  403c42:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403c44:	460f      	mov	r7, r1
  403c46:	9904      	ldr	r1, [sp, #16]
  403c48:	3530      	adds	r5, #48	; 0x30
  403c4a:	2b01      	cmp	r3, #1
  403c4c:	700d      	strb	r5, [r1, #0]
  403c4e:	4606      	mov	r6, r0
  403c50:	f101 0501 	add.w	r5, r1, #1
  403c54:	d026      	beq.n	403ca4 <_dtoa_r+0xcbc>
  403c56:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403c58:	9a04      	ldr	r2, [sp, #16]
  403c5a:	f8df b13c 	ldr.w	fp, [pc, #316]	; 403d98 <_dtoa_r+0xdb0>
  403c5e:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403c62:	4413      	add	r3, r2
  403c64:	f04f 0a00 	mov.w	sl, #0
  403c68:	4699      	mov	r9, r3
  403c6a:	4652      	mov	r2, sl
  403c6c:	465b      	mov	r3, fp
  403c6e:	4630      	mov	r0, r6
  403c70:	4639      	mov	r1, r7
  403c72:	f001 ff1f 	bl	405ab4 <__aeabi_dmul>
  403c76:	460f      	mov	r7, r1
  403c78:	4606      	mov	r6, r0
  403c7a:	f002 f9cb 	bl	406014 <__aeabi_d2iz>
  403c7e:	4680      	mov	r8, r0
  403c80:	f001 feb2 	bl	4059e8 <__aeabi_i2d>
  403c84:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403c88:	4602      	mov	r2, r0
  403c8a:	460b      	mov	r3, r1
  403c8c:	4630      	mov	r0, r6
  403c8e:	4639      	mov	r1, r7
  403c90:	f001 fd5c 	bl	40574c <__aeabi_dsub>
  403c94:	f805 8b01 	strb.w	r8, [r5], #1
  403c98:	454d      	cmp	r5, r9
  403c9a:	4606      	mov	r6, r0
  403c9c:	460f      	mov	r7, r1
  403c9e:	d1e4      	bne.n	403c6a <_dtoa_r+0xc82>
  403ca0:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403ca4:	4b3b      	ldr	r3, [pc, #236]	; (403d94 <_dtoa_r+0xdac>)
  403ca6:	2200      	movs	r2, #0
  403ca8:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  403cac:	f001 fd50 	bl	405750 <__adddf3>
  403cb0:	4632      	mov	r2, r6
  403cb2:	463b      	mov	r3, r7
  403cb4:	f002 f970 	bl	405f98 <__aeabi_dcmplt>
  403cb8:	2800      	cmp	r0, #0
  403cba:	d046      	beq.n	403d4a <_dtoa_r+0xd62>
  403cbc:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403cbe:	9302      	str	r3, [sp, #8]
  403cc0:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403cc4:	f7ff bb43 	b.w	40334e <_dtoa_r+0x366>
  403cc8:	f04f 0800 	mov.w	r8, #0
  403ccc:	4646      	mov	r6, r8
  403cce:	e6a9      	b.n	403a24 <_dtoa_r+0xa3c>
  403cd0:	9b08      	ldr	r3, [sp, #32]
  403cd2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403cd4:	1a9d      	subs	r5, r3, r2
  403cd6:	2300      	movs	r3, #0
  403cd8:	f7ff bb71 	b.w	4033be <_dtoa_r+0x3d6>
  403cdc:	9b18      	ldr	r3, [sp, #96]	; 0x60
  403cde:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403ce0:	9d08      	ldr	r5, [sp, #32]
  403ce2:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  403ce6:	f7ff bb6a 	b.w	4033be <_dtoa_r+0x3d6>
  403cea:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  403cee:	f04f 0a02 	mov.w	sl, #2
  403cf2:	e56e      	b.n	4037d2 <_dtoa_r+0x7ea>
  403cf4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403cf6:	2b00      	cmp	r3, #0
  403cf8:	f43f aeb8 	beq.w	403a6c <_dtoa_r+0xa84>
  403cfc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403cfe:	2b00      	cmp	r3, #0
  403d00:	f77f aede 	ble.w	403ac0 <_dtoa_r+0xad8>
  403d04:	2200      	movs	r2, #0
  403d06:	4b24      	ldr	r3, [pc, #144]	; (403d98 <_dtoa_r+0xdb0>)
  403d08:	4638      	mov	r0, r7
  403d0a:	4641      	mov	r1, r8
  403d0c:	f001 fed2 	bl	405ab4 <__aeabi_dmul>
  403d10:	4607      	mov	r7, r0
  403d12:	4688      	mov	r8, r1
  403d14:	f10a 0001 	add.w	r0, sl, #1
  403d18:	f001 fe66 	bl	4059e8 <__aeabi_i2d>
  403d1c:	463a      	mov	r2, r7
  403d1e:	4643      	mov	r3, r8
  403d20:	f001 fec8 	bl	405ab4 <__aeabi_dmul>
  403d24:	2200      	movs	r2, #0
  403d26:	4b17      	ldr	r3, [pc, #92]	; (403d84 <_dtoa_r+0xd9c>)
  403d28:	f001 fd12 	bl	405750 <__adddf3>
  403d2c:	9a02      	ldr	r2, [sp, #8]
  403d2e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403d30:	9312      	str	r3, [sp, #72]	; 0x48
  403d32:	3a01      	subs	r2, #1
  403d34:	4605      	mov	r5, r0
  403d36:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403d3a:	9215      	str	r2, [sp, #84]	; 0x54
  403d3c:	e56a      	b.n	403814 <_dtoa_r+0x82c>
  403d3e:	2239      	movs	r2, #57	; 0x39
  403d40:	46b3      	mov	fp, r6
  403d42:	703a      	strb	r2, [r7, #0]
  403d44:	9e06      	ldr	r6, [sp, #24]
  403d46:	1c7d      	adds	r5, r7, #1
  403d48:	e4c0      	b.n	4036cc <_dtoa_r+0x6e4>
  403d4a:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  403d4e:	2000      	movs	r0, #0
  403d50:	4910      	ldr	r1, [pc, #64]	; (403d94 <_dtoa_r+0xdac>)
  403d52:	f001 fcfb 	bl	40574c <__aeabi_dsub>
  403d56:	4632      	mov	r2, r6
  403d58:	463b      	mov	r3, r7
  403d5a:	f002 f93b 	bl	405fd4 <__aeabi_dcmpgt>
  403d5e:	b908      	cbnz	r0, 403d64 <_dtoa_r+0xd7c>
  403d60:	e6ae      	b.n	403ac0 <_dtoa_r+0xad8>
  403d62:	4615      	mov	r5, r2
  403d64:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  403d68:	2b30      	cmp	r3, #48	; 0x30
  403d6a:	f105 32ff 	add.w	r2, r5, #4294967295
  403d6e:	d0f8      	beq.n	403d62 <_dtoa_r+0xd7a>
  403d70:	e5d7      	b.n	403922 <_dtoa_r+0x93a>
  403d72:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403d76:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403d78:	9302      	str	r3, [sp, #8]
  403d7a:	f7ff bae8 	b.w	40334e <_dtoa_r+0x366>
  403d7e:	970c      	str	r7, [sp, #48]	; 0x30
  403d80:	f7ff bba5 	b.w	4034ce <_dtoa_r+0x4e6>
  403d84:	401c0000 	.word	0x401c0000
  403d88:	40140000 	.word	0x40140000
  403d8c:	00407078 	.word	0x00407078
  403d90:	00407050 	.word	0x00407050
  403d94:	3fe00000 	.word	0x3fe00000
  403d98:	40240000 	.word	0x40240000
  403d9c:	2b39      	cmp	r3, #57	; 0x39
  403d9e:	f8cd b018 	str.w	fp, [sp, #24]
  403da2:	46d0      	mov	r8, sl
  403da4:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  403da8:	469a      	mov	sl, r3
  403daa:	d0c8      	beq.n	403d3e <_dtoa_r+0xd56>
  403dac:	f1bb 0f00 	cmp.w	fp, #0
  403db0:	f73f aebf 	bgt.w	403b32 <_dtoa_r+0xb4a>
  403db4:	e6bf      	b.n	403b36 <_dtoa_r+0xb4e>
  403db6:	f47f aebe 	bne.w	403b36 <_dtoa_r+0xb4e>
  403dba:	f01a 0f01 	tst.w	sl, #1
  403dbe:	f43f aeba 	beq.w	403b36 <_dtoa_r+0xb4e>
  403dc2:	e6b2      	b.n	403b2a <_dtoa_r+0xb42>
  403dc4:	f04f 0800 	mov.w	r8, #0
  403dc8:	4646      	mov	r6, r8
  403dca:	e5e9      	b.n	4039a0 <_dtoa_r+0x9b8>
  403dcc:	4631      	mov	r1, r6
  403dce:	2300      	movs	r3, #0
  403dd0:	220a      	movs	r2, #10
  403dd2:	4620      	mov	r0, r4
  403dd4:	f000 fc6a 	bl	4046ac <__multadd>
  403dd8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403dda:	2b00      	cmp	r3, #0
  403ddc:	4606      	mov	r6, r0
  403dde:	dd0a      	ble.n	403df6 <_dtoa_r+0xe0e>
  403de0:	930a      	str	r3, [sp, #40]	; 0x28
  403de2:	f7ff bbaa 	b.w	40353a <_dtoa_r+0x552>
  403de6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403de8:	2b02      	cmp	r3, #2
  403dea:	dc23      	bgt.n	403e34 <_dtoa_r+0xe4c>
  403dec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403dee:	e43b      	b.n	403668 <_dtoa_r+0x680>
  403df0:	f04f 0a02 	mov.w	sl, #2
  403df4:	e4ed      	b.n	4037d2 <_dtoa_r+0x7ea>
  403df6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403df8:	2b02      	cmp	r3, #2
  403dfa:	dc1b      	bgt.n	403e34 <_dtoa_r+0xe4c>
  403dfc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403dfe:	e7ef      	b.n	403de0 <_dtoa_r+0xdf8>
  403e00:	2500      	movs	r5, #0
  403e02:	6465      	str	r5, [r4, #68]	; 0x44
  403e04:	4629      	mov	r1, r5
  403e06:	4620      	mov	r0, r4
  403e08:	f000 fc20 	bl	40464c <_Balloc>
  403e0c:	f04f 33ff 	mov.w	r3, #4294967295
  403e10:	930a      	str	r3, [sp, #40]	; 0x28
  403e12:	930f      	str	r3, [sp, #60]	; 0x3c
  403e14:	2301      	movs	r3, #1
  403e16:	9004      	str	r0, [sp, #16]
  403e18:	9525      	str	r5, [sp, #148]	; 0x94
  403e1a:	6420      	str	r0, [r4, #64]	; 0x40
  403e1c:	930b      	str	r3, [sp, #44]	; 0x2c
  403e1e:	f7ff b9dd 	b.w	4031dc <_dtoa_r+0x1f4>
  403e22:	2501      	movs	r5, #1
  403e24:	f7ff b9a5 	b.w	403172 <_dtoa_r+0x18a>
  403e28:	f43f ab69 	beq.w	4034fe <_dtoa_r+0x516>
  403e2c:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  403e30:	f7ff bbf9 	b.w	403626 <_dtoa_r+0x63e>
  403e34:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403e36:	930a      	str	r3, [sp, #40]	; 0x28
  403e38:	e5e5      	b.n	403a06 <_dtoa_r+0xa1e>
  403e3a:	bf00      	nop

00403e3c <__libc_fini_array>:
  403e3c:	b538      	push	{r3, r4, r5, lr}
  403e3e:	4c0a      	ldr	r4, [pc, #40]	; (403e68 <__libc_fini_array+0x2c>)
  403e40:	4d0a      	ldr	r5, [pc, #40]	; (403e6c <__libc_fini_array+0x30>)
  403e42:	1b64      	subs	r4, r4, r5
  403e44:	10a4      	asrs	r4, r4, #2
  403e46:	d00a      	beq.n	403e5e <__libc_fini_array+0x22>
  403e48:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  403e4c:	3b01      	subs	r3, #1
  403e4e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  403e52:	3c01      	subs	r4, #1
  403e54:	f855 3904 	ldr.w	r3, [r5], #-4
  403e58:	4798      	blx	r3
  403e5a:	2c00      	cmp	r4, #0
  403e5c:	d1f9      	bne.n	403e52 <__libc_fini_array+0x16>
  403e5e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  403e62:	f003 ba07 	b.w	407274 <_fini>
  403e66:	bf00      	nop
  403e68:	00407284 	.word	0x00407284
  403e6c:	00407280 	.word	0x00407280

00403e70 <_localeconv_r>:
  403e70:	4a04      	ldr	r2, [pc, #16]	; (403e84 <_localeconv_r+0x14>)
  403e72:	4b05      	ldr	r3, [pc, #20]	; (403e88 <_localeconv_r+0x18>)
  403e74:	6812      	ldr	r2, [r2, #0]
  403e76:	6b50      	ldr	r0, [r2, #52]	; 0x34
  403e78:	2800      	cmp	r0, #0
  403e7a:	bf08      	it	eq
  403e7c:	4618      	moveq	r0, r3
  403e7e:	30f0      	adds	r0, #240	; 0xf0
  403e80:	4770      	bx	lr
  403e82:	bf00      	nop
  403e84:	20000010 	.word	0x20000010
  403e88:	20000854 	.word	0x20000854

00403e8c <__retarget_lock_acquire_recursive>:
  403e8c:	4770      	bx	lr
  403e8e:	bf00      	nop

00403e90 <__retarget_lock_release_recursive>:
  403e90:	4770      	bx	lr
  403e92:	bf00      	nop

00403e94 <_malloc_r>:
  403e94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403e98:	f101 060b 	add.w	r6, r1, #11
  403e9c:	2e16      	cmp	r6, #22
  403e9e:	b083      	sub	sp, #12
  403ea0:	4605      	mov	r5, r0
  403ea2:	f240 809e 	bls.w	403fe2 <_malloc_r+0x14e>
  403ea6:	f036 0607 	bics.w	r6, r6, #7
  403eaa:	f100 80bd 	bmi.w	404028 <_malloc_r+0x194>
  403eae:	42b1      	cmp	r1, r6
  403eb0:	f200 80ba 	bhi.w	404028 <_malloc_r+0x194>
  403eb4:	f000 fbbe 	bl	404634 <__malloc_lock>
  403eb8:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  403ebc:	f0c0 8293 	bcc.w	4043e6 <_malloc_r+0x552>
  403ec0:	0a73      	lsrs	r3, r6, #9
  403ec2:	f000 80b8 	beq.w	404036 <_malloc_r+0x1a2>
  403ec6:	2b04      	cmp	r3, #4
  403ec8:	f200 8179 	bhi.w	4041be <_malloc_r+0x32a>
  403ecc:	09b3      	lsrs	r3, r6, #6
  403ece:	f103 0039 	add.w	r0, r3, #57	; 0x39
  403ed2:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  403ed6:	00c3      	lsls	r3, r0, #3
  403ed8:	4fbf      	ldr	r7, [pc, #764]	; (4041d8 <_malloc_r+0x344>)
  403eda:	443b      	add	r3, r7
  403edc:	f1a3 0108 	sub.w	r1, r3, #8
  403ee0:	685c      	ldr	r4, [r3, #4]
  403ee2:	42a1      	cmp	r1, r4
  403ee4:	d106      	bne.n	403ef4 <_malloc_r+0x60>
  403ee6:	e00c      	b.n	403f02 <_malloc_r+0x6e>
  403ee8:	2a00      	cmp	r2, #0
  403eea:	f280 80aa 	bge.w	404042 <_malloc_r+0x1ae>
  403eee:	68e4      	ldr	r4, [r4, #12]
  403ef0:	42a1      	cmp	r1, r4
  403ef2:	d006      	beq.n	403f02 <_malloc_r+0x6e>
  403ef4:	6863      	ldr	r3, [r4, #4]
  403ef6:	f023 0303 	bic.w	r3, r3, #3
  403efa:	1b9a      	subs	r2, r3, r6
  403efc:	2a0f      	cmp	r2, #15
  403efe:	ddf3      	ble.n	403ee8 <_malloc_r+0x54>
  403f00:	4670      	mov	r0, lr
  403f02:	693c      	ldr	r4, [r7, #16]
  403f04:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 4041ec <_malloc_r+0x358>
  403f08:	4574      	cmp	r4, lr
  403f0a:	f000 81ab 	beq.w	404264 <_malloc_r+0x3d0>
  403f0e:	6863      	ldr	r3, [r4, #4]
  403f10:	f023 0303 	bic.w	r3, r3, #3
  403f14:	1b9a      	subs	r2, r3, r6
  403f16:	2a0f      	cmp	r2, #15
  403f18:	f300 8190 	bgt.w	40423c <_malloc_r+0x3a8>
  403f1c:	2a00      	cmp	r2, #0
  403f1e:	f8c7 e014 	str.w	lr, [r7, #20]
  403f22:	f8c7 e010 	str.w	lr, [r7, #16]
  403f26:	f280 809d 	bge.w	404064 <_malloc_r+0x1d0>
  403f2a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  403f2e:	f080 8161 	bcs.w	4041f4 <_malloc_r+0x360>
  403f32:	08db      	lsrs	r3, r3, #3
  403f34:	f103 0c01 	add.w	ip, r3, #1
  403f38:	1099      	asrs	r1, r3, #2
  403f3a:	687a      	ldr	r2, [r7, #4]
  403f3c:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  403f40:	f8c4 8008 	str.w	r8, [r4, #8]
  403f44:	2301      	movs	r3, #1
  403f46:	408b      	lsls	r3, r1
  403f48:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  403f4c:	4313      	orrs	r3, r2
  403f4e:	3908      	subs	r1, #8
  403f50:	60e1      	str	r1, [r4, #12]
  403f52:	607b      	str	r3, [r7, #4]
  403f54:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  403f58:	f8c8 400c 	str.w	r4, [r8, #12]
  403f5c:	1082      	asrs	r2, r0, #2
  403f5e:	2401      	movs	r4, #1
  403f60:	4094      	lsls	r4, r2
  403f62:	429c      	cmp	r4, r3
  403f64:	f200 808b 	bhi.w	40407e <_malloc_r+0x1ea>
  403f68:	421c      	tst	r4, r3
  403f6a:	d106      	bne.n	403f7a <_malloc_r+0xe6>
  403f6c:	f020 0003 	bic.w	r0, r0, #3
  403f70:	0064      	lsls	r4, r4, #1
  403f72:	421c      	tst	r4, r3
  403f74:	f100 0004 	add.w	r0, r0, #4
  403f78:	d0fa      	beq.n	403f70 <_malloc_r+0xdc>
  403f7a:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  403f7e:	46cc      	mov	ip, r9
  403f80:	4680      	mov	r8, r0
  403f82:	f8dc 300c 	ldr.w	r3, [ip, #12]
  403f86:	459c      	cmp	ip, r3
  403f88:	d107      	bne.n	403f9a <_malloc_r+0x106>
  403f8a:	e16d      	b.n	404268 <_malloc_r+0x3d4>
  403f8c:	2a00      	cmp	r2, #0
  403f8e:	f280 817b 	bge.w	404288 <_malloc_r+0x3f4>
  403f92:	68db      	ldr	r3, [r3, #12]
  403f94:	459c      	cmp	ip, r3
  403f96:	f000 8167 	beq.w	404268 <_malloc_r+0x3d4>
  403f9a:	6859      	ldr	r1, [r3, #4]
  403f9c:	f021 0103 	bic.w	r1, r1, #3
  403fa0:	1b8a      	subs	r2, r1, r6
  403fa2:	2a0f      	cmp	r2, #15
  403fa4:	ddf2      	ble.n	403f8c <_malloc_r+0xf8>
  403fa6:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  403faa:	f8d3 8008 	ldr.w	r8, [r3, #8]
  403fae:	9300      	str	r3, [sp, #0]
  403fb0:	199c      	adds	r4, r3, r6
  403fb2:	4628      	mov	r0, r5
  403fb4:	f046 0601 	orr.w	r6, r6, #1
  403fb8:	f042 0501 	orr.w	r5, r2, #1
  403fbc:	605e      	str	r6, [r3, #4]
  403fbe:	f8c8 c00c 	str.w	ip, [r8, #12]
  403fc2:	f8cc 8008 	str.w	r8, [ip, #8]
  403fc6:	617c      	str	r4, [r7, #20]
  403fc8:	613c      	str	r4, [r7, #16]
  403fca:	f8c4 e00c 	str.w	lr, [r4, #12]
  403fce:	f8c4 e008 	str.w	lr, [r4, #8]
  403fd2:	6065      	str	r5, [r4, #4]
  403fd4:	505a      	str	r2, [r3, r1]
  403fd6:	f000 fb33 	bl	404640 <__malloc_unlock>
  403fda:	9b00      	ldr	r3, [sp, #0]
  403fdc:	f103 0408 	add.w	r4, r3, #8
  403fe0:	e01e      	b.n	404020 <_malloc_r+0x18c>
  403fe2:	2910      	cmp	r1, #16
  403fe4:	d820      	bhi.n	404028 <_malloc_r+0x194>
  403fe6:	f000 fb25 	bl	404634 <__malloc_lock>
  403fea:	2610      	movs	r6, #16
  403fec:	2318      	movs	r3, #24
  403fee:	2002      	movs	r0, #2
  403ff0:	4f79      	ldr	r7, [pc, #484]	; (4041d8 <_malloc_r+0x344>)
  403ff2:	443b      	add	r3, r7
  403ff4:	f1a3 0208 	sub.w	r2, r3, #8
  403ff8:	685c      	ldr	r4, [r3, #4]
  403ffa:	4294      	cmp	r4, r2
  403ffc:	f000 813d 	beq.w	40427a <_malloc_r+0x3e6>
  404000:	6863      	ldr	r3, [r4, #4]
  404002:	68e1      	ldr	r1, [r4, #12]
  404004:	68a6      	ldr	r6, [r4, #8]
  404006:	f023 0303 	bic.w	r3, r3, #3
  40400a:	4423      	add	r3, r4
  40400c:	4628      	mov	r0, r5
  40400e:	685a      	ldr	r2, [r3, #4]
  404010:	60f1      	str	r1, [r6, #12]
  404012:	f042 0201 	orr.w	r2, r2, #1
  404016:	608e      	str	r6, [r1, #8]
  404018:	605a      	str	r2, [r3, #4]
  40401a:	f000 fb11 	bl	404640 <__malloc_unlock>
  40401e:	3408      	adds	r4, #8
  404020:	4620      	mov	r0, r4
  404022:	b003      	add	sp, #12
  404024:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404028:	2400      	movs	r4, #0
  40402a:	230c      	movs	r3, #12
  40402c:	4620      	mov	r0, r4
  40402e:	602b      	str	r3, [r5, #0]
  404030:	b003      	add	sp, #12
  404032:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404036:	2040      	movs	r0, #64	; 0x40
  404038:	f44f 7300 	mov.w	r3, #512	; 0x200
  40403c:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  404040:	e74a      	b.n	403ed8 <_malloc_r+0x44>
  404042:	4423      	add	r3, r4
  404044:	68e1      	ldr	r1, [r4, #12]
  404046:	685a      	ldr	r2, [r3, #4]
  404048:	68a6      	ldr	r6, [r4, #8]
  40404a:	f042 0201 	orr.w	r2, r2, #1
  40404e:	60f1      	str	r1, [r6, #12]
  404050:	4628      	mov	r0, r5
  404052:	608e      	str	r6, [r1, #8]
  404054:	605a      	str	r2, [r3, #4]
  404056:	f000 faf3 	bl	404640 <__malloc_unlock>
  40405a:	3408      	adds	r4, #8
  40405c:	4620      	mov	r0, r4
  40405e:	b003      	add	sp, #12
  404060:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404064:	4423      	add	r3, r4
  404066:	4628      	mov	r0, r5
  404068:	685a      	ldr	r2, [r3, #4]
  40406a:	f042 0201 	orr.w	r2, r2, #1
  40406e:	605a      	str	r2, [r3, #4]
  404070:	f000 fae6 	bl	404640 <__malloc_unlock>
  404074:	3408      	adds	r4, #8
  404076:	4620      	mov	r0, r4
  404078:	b003      	add	sp, #12
  40407a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40407e:	68bc      	ldr	r4, [r7, #8]
  404080:	6863      	ldr	r3, [r4, #4]
  404082:	f023 0803 	bic.w	r8, r3, #3
  404086:	45b0      	cmp	r8, r6
  404088:	d304      	bcc.n	404094 <_malloc_r+0x200>
  40408a:	eba8 0306 	sub.w	r3, r8, r6
  40408e:	2b0f      	cmp	r3, #15
  404090:	f300 8085 	bgt.w	40419e <_malloc_r+0x30a>
  404094:	f8df 9158 	ldr.w	r9, [pc, #344]	; 4041f0 <_malloc_r+0x35c>
  404098:	4b50      	ldr	r3, [pc, #320]	; (4041dc <_malloc_r+0x348>)
  40409a:	f8d9 2000 	ldr.w	r2, [r9]
  40409e:	681b      	ldr	r3, [r3, #0]
  4040a0:	3201      	adds	r2, #1
  4040a2:	4433      	add	r3, r6
  4040a4:	eb04 0a08 	add.w	sl, r4, r8
  4040a8:	f000 8155 	beq.w	404356 <_malloc_r+0x4c2>
  4040ac:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  4040b0:	330f      	adds	r3, #15
  4040b2:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  4040b6:	f02b 0b0f 	bic.w	fp, fp, #15
  4040ba:	4659      	mov	r1, fp
  4040bc:	4628      	mov	r0, r5
  4040be:	f000 fdbf 	bl	404c40 <_sbrk_r>
  4040c2:	1c41      	adds	r1, r0, #1
  4040c4:	4602      	mov	r2, r0
  4040c6:	f000 80fc 	beq.w	4042c2 <_malloc_r+0x42e>
  4040ca:	4582      	cmp	sl, r0
  4040cc:	f200 80f7 	bhi.w	4042be <_malloc_r+0x42a>
  4040d0:	4b43      	ldr	r3, [pc, #268]	; (4041e0 <_malloc_r+0x34c>)
  4040d2:	6819      	ldr	r1, [r3, #0]
  4040d4:	4459      	add	r1, fp
  4040d6:	6019      	str	r1, [r3, #0]
  4040d8:	f000 814d 	beq.w	404376 <_malloc_r+0x4e2>
  4040dc:	f8d9 0000 	ldr.w	r0, [r9]
  4040e0:	3001      	adds	r0, #1
  4040e2:	bf1b      	ittet	ne
  4040e4:	eba2 0a0a 	subne.w	sl, r2, sl
  4040e8:	4451      	addne	r1, sl
  4040ea:	f8c9 2000 	streq.w	r2, [r9]
  4040ee:	6019      	strne	r1, [r3, #0]
  4040f0:	f012 0107 	ands.w	r1, r2, #7
  4040f4:	f000 8115 	beq.w	404322 <_malloc_r+0x48e>
  4040f8:	f1c1 0008 	rsb	r0, r1, #8
  4040fc:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404100:	4402      	add	r2, r0
  404102:	3108      	adds	r1, #8
  404104:	eb02 090b 	add.w	r9, r2, fp
  404108:	f3c9 090b 	ubfx	r9, r9, #0, #12
  40410c:	eba1 0909 	sub.w	r9, r1, r9
  404110:	4649      	mov	r1, r9
  404112:	4628      	mov	r0, r5
  404114:	9301      	str	r3, [sp, #4]
  404116:	9200      	str	r2, [sp, #0]
  404118:	f000 fd92 	bl	404c40 <_sbrk_r>
  40411c:	1c43      	adds	r3, r0, #1
  40411e:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404122:	f000 8143 	beq.w	4043ac <_malloc_r+0x518>
  404126:	1a80      	subs	r0, r0, r2
  404128:	4448      	add	r0, r9
  40412a:	f040 0001 	orr.w	r0, r0, #1
  40412e:	6819      	ldr	r1, [r3, #0]
  404130:	60ba      	str	r2, [r7, #8]
  404132:	4449      	add	r1, r9
  404134:	42bc      	cmp	r4, r7
  404136:	6050      	str	r0, [r2, #4]
  404138:	6019      	str	r1, [r3, #0]
  40413a:	d017      	beq.n	40416c <_malloc_r+0x2d8>
  40413c:	f1b8 0f0f 	cmp.w	r8, #15
  404140:	f240 80fb 	bls.w	40433a <_malloc_r+0x4a6>
  404144:	6860      	ldr	r0, [r4, #4]
  404146:	f1a8 020c 	sub.w	r2, r8, #12
  40414a:	f022 0207 	bic.w	r2, r2, #7
  40414e:	eb04 0e02 	add.w	lr, r4, r2
  404152:	f000 0001 	and.w	r0, r0, #1
  404156:	f04f 0c05 	mov.w	ip, #5
  40415a:	4310      	orrs	r0, r2
  40415c:	2a0f      	cmp	r2, #15
  40415e:	6060      	str	r0, [r4, #4]
  404160:	f8ce c004 	str.w	ip, [lr, #4]
  404164:	f8ce c008 	str.w	ip, [lr, #8]
  404168:	f200 8117 	bhi.w	40439a <_malloc_r+0x506>
  40416c:	4b1d      	ldr	r3, [pc, #116]	; (4041e4 <_malloc_r+0x350>)
  40416e:	68bc      	ldr	r4, [r7, #8]
  404170:	681a      	ldr	r2, [r3, #0]
  404172:	4291      	cmp	r1, r2
  404174:	bf88      	it	hi
  404176:	6019      	strhi	r1, [r3, #0]
  404178:	4b1b      	ldr	r3, [pc, #108]	; (4041e8 <_malloc_r+0x354>)
  40417a:	681a      	ldr	r2, [r3, #0]
  40417c:	4291      	cmp	r1, r2
  40417e:	6862      	ldr	r2, [r4, #4]
  404180:	bf88      	it	hi
  404182:	6019      	strhi	r1, [r3, #0]
  404184:	f022 0203 	bic.w	r2, r2, #3
  404188:	4296      	cmp	r6, r2
  40418a:	eba2 0306 	sub.w	r3, r2, r6
  40418e:	d801      	bhi.n	404194 <_malloc_r+0x300>
  404190:	2b0f      	cmp	r3, #15
  404192:	dc04      	bgt.n	40419e <_malloc_r+0x30a>
  404194:	4628      	mov	r0, r5
  404196:	f000 fa53 	bl	404640 <__malloc_unlock>
  40419a:	2400      	movs	r4, #0
  40419c:	e740      	b.n	404020 <_malloc_r+0x18c>
  40419e:	19a2      	adds	r2, r4, r6
  4041a0:	f043 0301 	orr.w	r3, r3, #1
  4041a4:	f046 0601 	orr.w	r6, r6, #1
  4041a8:	6066      	str	r6, [r4, #4]
  4041aa:	4628      	mov	r0, r5
  4041ac:	60ba      	str	r2, [r7, #8]
  4041ae:	6053      	str	r3, [r2, #4]
  4041b0:	f000 fa46 	bl	404640 <__malloc_unlock>
  4041b4:	3408      	adds	r4, #8
  4041b6:	4620      	mov	r0, r4
  4041b8:	b003      	add	sp, #12
  4041ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4041be:	2b14      	cmp	r3, #20
  4041c0:	d971      	bls.n	4042a6 <_malloc_r+0x412>
  4041c2:	2b54      	cmp	r3, #84	; 0x54
  4041c4:	f200 80a3 	bhi.w	40430e <_malloc_r+0x47a>
  4041c8:	0b33      	lsrs	r3, r6, #12
  4041ca:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  4041ce:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  4041d2:	00c3      	lsls	r3, r0, #3
  4041d4:	e680      	b.n	403ed8 <_malloc_r+0x44>
  4041d6:	bf00      	nop
  4041d8:	20000444 	.word	0x20000444
  4041dc:	20000aa4 	.word	0x20000aa4
  4041e0:	20000a74 	.word	0x20000a74
  4041e4:	20000a9c 	.word	0x20000a9c
  4041e8:	20000aa0 	.word	0x20000aa0
  4041ec:	2000044c 	.word	0x2000044c
  4041f0:	2000084c 	.word	0x2000084c
  4041f4:	0a5a      	lsrs	r2, r3, #9
  4041f6:	2a04      	cmp	r2, #4
  4041f8:	d95b      	bls.n	4042b2 <_malloc_r+0x41e>
  4041fa:	2a14      	cmp	r2, #20
  4041fc:	f200 80ae 	bhi.w	40435c <_malloc_r+0x4c8>
  404200:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  404204:	00c9      	lsls	r1, r1, #3
  404206:	325b      	adds	r2, #91	; 0x5b
  404208:	eb07 0c01 	add.w	ip, r7, r1
  40420c:	5879      	ldr	r1, [r7, r1]
  40420e:	f1ac 0c08 	sub.w	ip, ip, #8
  404212:	458c      	cmp	ip, r1
  404214:	f000 8088 	beq.w	404328 <_malloc_r+0x494>
  404218:	684a      	ldr	r2, [r1, #4]
  40421a:	f022 0203 	bic.w	r2, r2, #3
  40421e:	4293      	cmp	r3, r2
  404220:	d273      	bcs.n	40430a <_malloc_r+0x476>
  404222:	6889      	ldr	r1, [r1, #8]
  404224:	458c      	cmp	ip, r1
  404226:	d1f7      	bne.n	404218 <_malloc_r+0x384>
  404228:	f8dc 200c 	ldr.w	r2, [ip, #12]
  40422c:	687b      	ldr	r3, [r7, #4]
  40422e:	60e2      	str	r2, [r4, #12]
  404230:	f8c4 c008 	str.w	ip, [r4, #8]
  404234:	6094      	str	r4, [r2, #8]
  404236:	f8cc 400c 	str.w	r4, [ip, #12]
  40423a:	e68f      	b.n	403f5c <_malloc_r+0xc8>
  40423c:	19a1      	adds	r1, r4, r6
  40423e:	f046 0c01 	orr.w	ip, r6, #1
  404242:	f042 0601 	orr.w	r6, r2, #1
  404246:	f8c4 c004 	str.w	ip, [r4, #4]
  40424a:	4628      	mov	r0, r5
  40424c:	6179      	str	r1, [r7, #20]
  40424e:	6139      	str	r1, [r7, #16]
  404250:	f8c1 e00c 	str.w	lr, [r1, #12]
  404254:	f8c1 e008 	str.w	lr, [r1, #8]
  404258:	604e      	str	r6, [r1, #4]
  40425a:	50e2      	str	r2, [r4, r3]
  40425c:	f000 f9f0 	bl	404640 <__malloc_unlock>
  404260:	3408      	adds	r4, #8
  404262:	e6dd      	b.n	404020 <_malloc_r+0x18c>
  404264:	687b      	ldr	r3, [r7, #4]
  404266:	e679      	b.n	403f5c <_malloc_r+0xc8>
  404268:	f108 0801 	add.w	r8, r8, #1
  40426c:	f018 0f03 	tst.w	r8, #3
  404270:	f10c 0c08 	add.w	ip, ip, #8
  404274:	f47f ae85 	bne.w	403f82 <_malloc_r+0xee>
  404278:	e02d      	b.n	4042d6 <_malloc_r+0x442>
  40427a:	68dc      	ldr	r4, [r3, #12]
  40427c:	42a3      	cmp	r3, r4
  40427e:	bf08      	it	eq
  404280:	3002      	addeq	r0, #2
  404282:	f43f ae3e 	beq.w	403f02 <_malloc_r+0x6e>
  404286:	e6bb      	b.n	404000 <_malloc_r+0x16c>
  404288:	4419      	add	r1, r3
  40428a:	461c      	mov	r4, r3
  40428c:	684a      	ldr	r2, [r1, #4]
  40428e:	68db      	ldr	r3, [r3, #12]
  404290:	f854 6f08 	ldr.w	r6, [r4, #8]!
  404294:	f042 0201 	orr.w	r2, r2, #1
  404298:	604a      	str	r2, [r1, #4]
  40429a:	4628      	mov	r0, r5
  40429c:	60f3      	str	r3, [r6, #12]
  40429e:	609e      	str	r6, [r3, #8]
  4042a0:	f000 f9ce 	bl	404640 <__malloc_unlock>
  4042a4:	e6bc      	b.n	404020 <_malloc_r+0x18c>
  4042a6:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  4042aa:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  4042ae:	00c3      	lsls	r3, r0, #3
  4042b0:	e612      	b.n	403ed8 <_malloc_r+0x44>
  4042b2:	099a      	lsrs	r2, r3, #6
  4042b4:	f102 0139 	add.w	r1, r2, #57	; 0x39
  4042b8:	00c9      	lsls	r1, r1, #3
  4042ba:	3238      	adds	r2, #56	; 0x38
  4042bc:	e7a4      	b.n	404208 <_malloc_r+0x374>
  4042be:	42bc      	cmp	r4, r7
  4042c0:	d054      	beq.n	40436c <_malloc_r+0x4d8>
  4042c2:	68bc      	ldr	r4, [r7, #8]
  4042c4:	6862      	ldr	r2, [r4, #4]
  4042c6:	f022 0203 	bic.w	r2, r2, #3
  4042ca:	e75d      	b.n	404188 <_malloc_r+0x2f4>
  4042cc:	f859 3908 	ldr.w	r3, [r9], #-8
  4042d0:	4599      	cmp	r9, r3
  4042d2:	f040 8086 	bne.w	4043e2 <_malloc_r+0x54e>
  4042d6:	f010 0f03 	tst.w	r0, #3
  4042da:	f100 30ff 	add.w	r0, r0, #4294967295
  4042de:	d1f5      	bne.n	4042cc <_malloc_r+0x438>
  4042e0:	687b      	ldr	r3, [r7, #4]
  4042e2:	ea23 0304 	bic.w	r3, r3, r4
  4042e6:	607b      	str	r3, [r7, #4]
  4042e8:	0064      	lsls	r4, r4, #1
  4042ea:	429c      	cmp	r4, r3
  4042ec:	f63f aec7 	bhi.w	40407e <_malloc_r+0x1ea>
  4042f0:	2c00      	cmp	r4, #0
  4042f2:	f43f aec4 	beq.w	40407e <_malloc_r+0x1ea>
  4042f6:	421c      	tst	r4, r3
  4042f8:	4640      	mov	r0, r8
  4042fa:	f47f ae3e 	bne.w	403f7a <_malloc_r+0xe6>
  4042fe:	0064      	lsls	r4, r4, #1
  404300:	421c      	tst	r4, r3
  404302:	f100 0004 	add.w	r0, r0, #4
  404306:	d0fa      	beq.n	4042fe <_malloc_r+0x46a>
  404308:	e637      	b.n	403f7a <_malloc_r+0xe6>
  40430a:	468c      	mov	ip, r1
  40430c:	e78c      	b.n	404228 <_malloc_r+0x394>
  40430e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  404312:	d815      	bhi.n	404340 <_malloc_r+0x4ac>
  404314:	0bf3      	lsrs	r3, r6, #15
  404316:	f103 0078 	add.w	r0, r3, #120	; 0x78
  40431a:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  40431e:	00c3      	lsls	r3, r0, #3
  404320:	e5da      	b.n	403ed8 <_malloc_r+0x44>
  404322:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  404326:	e6ed      	b.n	404104 <_malloc_r+0x270>
  404328:	687b      	ldr	r3, [r7, #4]
  40432a:	1092      	asrs	r2, r2, #2
  40432c:	2101      	movs	r1, #1
  40432e:	fa01 f202 	lsl.w	r2, r1, r2
  404332:	4313      	orrs	r3, r2
  404334:	607b      	str	r3, [r7, #4]
  404336:	4662      	mov	r2, ip
  404338:	e779      	b.n	40422e <_malloc_r+0x39a>
  40433a:	2301      	movs	r3, #1
  40433c:	6053      	str	r3, [r2, #4]
  40433e:	e729      	b.n	404194 <_malloc_r+0x300>
  404340:	f240 5254 	movw	r2, #1364	; 0x554
  404344:	4293      	cmp	r3, r2
  404346:	d822      	bhi.n	40438e <_malloc_r+0x4fa>
  404348:	0cb3      	lsrs	r3, r6, #18
  40434a:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  40434e:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  404352:	00c3      	lsls	r3, r0, #3
  404354:	e5c0      	b.n	403ed8 <_malloc_r+0x44>
  404356:	f103 0b10 	add.w	fp, r3, #16
  40435a:	e6ae      	b.n	4040ba <_malloc_r+0x226>
  40435c:	2a54      	cmp	r2, #84	; 0x54
  40435e:	d829      	bhi.n	4043b4 <_malloc_r+0x520>
  404360:	0b1a      	lsrs	r2, r3, #12
  404362:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  404366:	00c9      	lsls	r1, r1, #3
  404368:	326e      	adds	r2, #110	; 0x6e
  40436a:	e74d      	b.n	404208 <_malloc_r+0x374>
  40436c:	4b20      	ldr	r3, [pc, #128]	; (4043f0 <_malloc_r+0x55c>)
  40436e:	6819      	ldr	r1, [r3, #0]
  404370:	4459      	add	r1, fp
  404372:	6019      	str	r1, [r3, #0]
  404374:	e6b2      	b.n	4040dc <_malloc_r+0x248>
  404376:	f3ca 000b 	ubfx	r0, sl, #0, #12
  40437a:	2800      	cmp	r0, #0
  40437c:	f47f aeae 	bne.w	4040dc <_malloc_r+0x248>
  404380:	eb08 030b 	add.w	r3, r8, fp
  404384:	68ba      	ldr	r2, [r7, #8]
  404386:	f043 0301 	orr.w	r3, r3, #1
  40438a:	6053      	str	r3, [r2, #4]
  40438c:	e6ee      	b.n	40416c <_malloc_r+0x2d8>
  40438e:	207f      	movs	r0, #127	; 0x7f
  404390:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  404394:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  404398:	e59e      	b.n	403ed8 <_malloc_r+0x44>
  40439a:	f104 0108 	add.w	r1, r4, #8
  40439e:	4628      	mov	r0, r5
  4043a0:	9300      	str	r3, [sp, #0]
  4043a2:	f000 febb 	bl	40511c <_free_r>
  4043a6:	9b00      	ldr	r3, [sp, #0]
  4043a8:	6819      	ldr	r1, [r3, #0]
  4043aa:	e6df      	b.n	40416c <_malloc_r+0x2d8>
  4043ac:	2001      	movs	r0, #1
  4043ae:	f04f 0900 	mov.w	r9, #0
  4043b2:	e6bc      	b.n	40412e <_malloc_r+0x29a>
  4043b4:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4043b8:	d805      	bhi.n	4043c6 <_malloc_r+0x532>
  4043ba:	0bda      	lsrs	r2, r3, #15
  4043bc:	f102 0178 	add.w	r1, r2, #120	; 0x78
  4043c0:	00c9      	lsls	r1, r1, #3
  4043c2:	3277      	adds	r2, #119	; 0x77
  4043c4:	e720      	b.n	404208 <_malloc_r+0x374>
  4043c6:	f240 5154 	movw	r1, #1364	; 0x554
  4043ca:	428a      	cmp	r2, r1
  4043cc:	d805      	bhi.n	4043da <_malloc_r+0x546>
  4043ce:	0c9a      	lsrs	r2, r3, #18
  4043d0:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  4043d4:	00c9      	lsls	r1, r1, #3
  4043d6:	327c      	adds	r2, #124	; 0x7c
  4043d8:	e716      	b.n	404208 <_malloc_r+0x374>
  4043da:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  4043de:	227e      	movs	r2, #126	; 0x7e
  4043e0:	e712      	b.n	404208 <_malloc_r+0x374>
  4043e2:	687b      	ldr	r3, [r7, #4]
  4043e4:	e780      	b.n	4042e8 <_malloc_r+0x454>
  4043e6:	08f0      	lsrs	r0, r6, #3
  4043e8:	f106 0308 	add.w	r3, r6, #8
  4043ec:	e600      	b.n	403ff0 <_malloc_r+0x15c>
  4043ee:	bf00      	nop
  4043f0:	20000a74 	.word	0x20000a74
	...

00404400 <memchr>:
  404400:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404404:	2a10      	cmp	r2, #16
  404406:	db2b      	blt.n	404460 <memchr+0x60>
  404408:	f010 0f07 	tst.w	r0, #7
  40440c:	d008      	beq.n	404420 <memchr+0x20>
  40440e:	f810 3b01 	ldrb.w	r3, [r0], #1
  404412:	3a01      	subs	r2, #1
  404414:	428b      	cmp	r3, r1
  404416:	d02d      	beq.n	404474 <memchr+0x74>
  404418:	f010 0f07 	tst.w	r0, #7
  40441c:	b342      	cbz	r2, 404470 <memchr+0x70>
  40441e:	d1f6      	bne.n	40440e <memchr+0xe>
  404420:	b4f0      	push	{r4, r5, r6, r7}
  404422:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404426:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40442a:	f022 0407 	bic.w	r4, r2, #7
  40442e:	f07f 0700 	mvns.w	r7, #0
  404432:	2300      	movs	r3, #0
  404434:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404438:	3c08      	subs	r4, #8
  40443a:	ea85 0501 	eor.w	r5, r5, r1
  40443e:	ea86 0601 	eor.w	r6, r6, r1
  404442:	fa85 f547 	uadd8	r5, r5, r7
  404446:	faa3 f587 	sel	r5, r3, r7
  40444a:	fa86 f647 	uadd8	r6, r6, r7
  40444e:	faa5 f687 	sel	r6, r5, r7
  404452:	b98e      	cbnz	r6, 404478 <memchr+0x78>
  404454:	d1ee      	bne.n	404434 <memchr+0x34>
  404456:	bcf0      	pop	{r4, r5, r6, r7}
  404458:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40445c:	f002 0207 	and.w	r2, r2, #7
  404460:	b132      	cbz	r2, 404470 <memchr+0x70>
  404462:	f810 3b01 	ldrb.w	r3, [r0], #1
  404466:	3a01      	subs	r2, #1
  404468:	ea83 0301 	eor.w	r3, r3, r1
  40446c:	b113      	cbz	r3, 404474 <memchr+0x74>
  40446e:	d1f8      	bne.n	404462 <memchr+0x62>
  404470:	2000      	movs	r0, #0
  404472:	4770      	bx	lr
  404474:	3801      	subs	r0, #1
  404476:	4770      	bx	lr
  404478:	2d00      	cmp	r5, #0
  40447a:	bf06      	itte	eq
  40447c:	4635      	moveq	r5, r6
  40447e:	3803      	subeq	r0, #3
  404480:	3807      	subne	r0, #7
  404482:	f015 0f01 	tst.w	r5, #1
  404486:	d107      	bne.n	404498 <memchr+0x98>
  404488:	3001      	adds	r0, #1
  40448a:	f415 7f80 	tst.w	r5, #256	; 0x100
  40448e:	bf02      	ittt	eq
  404490:	3001      	addeq	r0, #1
  404492:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404496:	3001      	addeq	r0, #1
  404498:	bcf0      	pop	{r4, r5, r6, r7}
  40449a:	3801      	subs	r0, #1
  40449c:	4770      	bx	lr
  40449e:	bf00      	nop

004044a0 <memcmp>:
  4044a0:	2a03      	cmp	r2, #3
  4044a2:	b470      	push	{r4, r5, r6}
  4044a4:	d922      	bls.n	4044ec <memcmp+0x4c>
  4044a6:	ea40 0301 	orr.w	r3, r0, r1
  4044aa:	079b      	lsls	r3, r3, #30
  4044ac:	d011      	beq.n	4044d2 <memcmp+0x32>
  4044ae:	7803      	ldrb	r3, [r0, #0]
  4044b0:	780c      	ldrb	r4, [r1, #0]
  4044b2:	42a3      	cmp	r3, r4
  4044b4:	d11d      	bne.n	4044f2 <memcmp+0x52>
  4044b6:	440a      	add	r2, r1
  4044b8:	3101      	adds	r1, #1
  4044ba:	e005      	b.n	4044c8 <memcmp+0x28>
  4044bc:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  4044c0:	f811 4b01 	ldrb.w	r4, [r1], #1
  4044c4:	42a3      	cmp	r3, r4
  4044c6:	d114      	bne.n	4044f2 <memcmp+0x52>
  4044c8:	4291      	cmp	r1, r2
  4044ca:	d1f7      	bne.n	4044bc <memcmp+0x1c>
  4044cc:	2000      	movs	r0, #0
  4044ce:	bc70      	pop	{r4, r5, r6}
  4044d0:	4770      	bx	lr
  4044d2:	680d      	ldr	r5, [r1, #0]
  4044d4:	6806      	ldr	r6, [r0, #0]
  4044d6:	42ae      	cmp	r6, r5
  4044d8:	460c      	mov	r4, r1
  4044da:	4603      	mov	r3, r0
  4044dc:	f101 0104 	add.w	r1, r1, #4
  4044e0:	f100 0004 	add.w	r0, r0, #4
  4044e4:	d108      	bne.n	4044f8 <memcmp+0x58>
  4044e6:	3a04      	subs	r2, #4
  4044e8:	2a03      	cmp	r2, #3
  4044ea:	d8f2      	bhi.n	4044d2 <memcmp+0x32>
  4044ec:	2a00      	cmp	r2, #0
  4044ee:	d1de      	bne.n	4044ae <memcmp+0xe>
  4044f0:	e7ec      	b.n	4044cc <memcmp+0x2c>
  4044f2:	1b18      	subs	r0, r3, r4
  4044f4:	bc70      	pop	{r4, r5, r6}
  4044f6:	4770      	bx	lr
  4044f8:	4621      	mov	r1, r4
  4044fa:	4618      	mov	r0, r3
  4044fc:	e7d7      	b.n	4044ae <memcmp+0xe>
  4044fe:	bf00      	nop

00404500 <memcpy>:
  404500:	4684      	mov	ip, r0
  404502:	ea41 0300 	orr.w	r3, r1, r0
  404506:	f013 0303 	ands.w	r3, r3, #3
  40450a:	d16d      	bne.n	4045e8 <memcpy+0xe8>
  40450c:	3a40      	subs	r2, #64	; 0x40
  40450e:	d341      	bcc.n	404594 <memcpy+0x94>
  404510:	f851 3b04 	ldr.w	r3, [r1], #4
  404514:	f840 3b04 	str.w	r3, [r0], #4
  404518:	f851 3b04 	ldr.w	r3, [r1], #4
  40451c:	f840 3b04 	str.w	r3, [r0], #4
  404520:	f851 3b04 	ldr.w	r3, [r1], #4
  404524:	f840 3b04 	str.w	r3, [r0], #4
  404528:	f851 3b04 	ldr.w	r3, [r1], #4
  40452c:	f840 3b04 	str.w	r3, [r0], #4
  404530:	f851 3b04 	ldr.w	r3, [r1], #4
  404534:	f840 3b04 	str.w	r3, [r0], #4
  404538:	f851 3b04 	ldr.w	r3, [r1], #4
  40453c:	f840 3b04 	str.w	r3, [r0], #4
  404540:	f851 3b04 	ldr.w	r3, [r1], #4
  404544:	f840 3b04 	str.w	r3, [r0], #4
  404548:	f851 3b04 	ldr.w	r3, [r1], #4
  40454c:	f840 3b04 	str.w	r3, [r0], #4
  404550:	f851 3b04 	ldr.w	r3, [r1], #4
  404554:	f840 3b04 	str.w	r3, [r0], #4
  404558:	f851 3b04 	ldr.w	r3, [r1], #4
  40455c:	f840 3b04 	str.w	r3, [r0], #4
  404560:	f851 3b04 	ldr.w	r3, [r1], #4
  404564:	f840 3b04 	str.w	r3, [r0], #4
  404568:	f851 3b04 	ldr.w	r3, [r1], #4
  40456c:	f840 3b04 	str.w	r3, [r0], #4
  404570:	f851 3b04 	ldr.w	r3, [r1], #4
  404574:	f840 3b04 	str.w	r3, [r0], #4
  404578:	f851 3b04 	ldr.w	r3, [r1], #4
  40457c:	f840 3b04 	str.w	r3, [r0], #4
  404580:	f851 3b04 	ldr.w	r3, [r1], #4
  404584:	f840 3b04 	str.w	r3, [r0], #4
  404588:	f851 3b04 	ldr.w	r3, [r1], #4
  40458c:	f840 3b04 	str.w	r3, [r0], #4
  404590:	3a40      	subs	r2, #64	; 0x40
  404592:	d2bd      	bcs.n	404510 <memcpy+0x10>
  404594:	3230      	adds	r2, #48	; 0x30
  404596:	d311      	bcc.n	4045bc <memcpy+0xbc>
  404598:	f851 3b04 	ldr.w	r3, [r1], #4
  40459c:	f840 3b04 	str.w	r3, [r0], #4
  4045a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4045a4:	f840 3b04 	str.w	r3, [r0], #4
  4045a8:	f851 3b04 	ldr.w	r3, [r1], #4
  4045ac:	f840 3b04 	str.w	r3, [r0], #4
  4045b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4045b4:	f840 3b04 	str.w	r3, [r0], #4
  4045b8:	3a10      	subs	r2, #16
  4045ba:	d2ed      	bcs.n	404598 <memcpy+0x98>
  4045bc:	320c      	adds	r2, #12
  4045be:	d305      	bcc.n	4045cc <memcpy+0xcc>
  4045c0:	f851 3b04 	ldr.w	r3, [r1], #4
  4045c4:	f840 3b04 	str.w	r3, [r0], #4
  4045c8:	3a04      	subs	r2, #4
  4045ca:	d2f9      	bcs.n	4045c0 <memcpy+0xc0>
  4045cc:	3204      	adds	r2, #4
  4045ce:	d008      	beq.n	4045e2 <memcpy+0xe2>
  4045d0:	07d2      	lsls	r2, r2, #31
  4045d2:	bf1c      	itt	ne
  4045d4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4045d8:	f800 3b01 	strbne.w	r3, [r0], #1
  4045dc:	d301      	bcc.n	4045e2 <memcpy+0xe2>
  4045de:	880b      	ldrh	r3, [r1, #0]
  4045e0:	8003      	strh	r3, [r0, #0]
  4045e2:	4660      	mov	r0, ip
  4045e4:	4770      	bx	lr
  4045e6:	bf00      	nop
  4045e8:	2a08      	cmp	r2, #8
  4045ea:	d313      	bcc.n	404614 <memcpy+0x114>
  4045ec:	078b      	lsls	r3, r1, #30
  4045ee:	d08d      	beq.n	40450c <memcpy+0xc>
  4045f0:	f010 0303 	ands.w	r3, r0, #3
  4045f4:	d08a      	beq.n	40450c <memcpy+0xc>
  4045f6:	f1c3 0304 	rsb	r3, r3, #4
  4045fa:	1ad2      	subs	r2, r2, r3
  4045fc:	07db      	lsls	r3, r3, #31
  4045fe:	bf1c      	itt	ne
  404600:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404604:	f800 3b01 	strbne.w	r3, [r0], #1
  404608:	d380      	bcc.n	40450c <memcpy+0xc>
  40460a:	f831 3b02 	ldrh.w	r3, [r1], #2
  40460e:	f820 3b02 	strh.w	r3, [r0], #2
  404612:	e77b      	b.n	40450c <memcpy+0xc>
  404614:	3a04      	subs	r2, #4
  404616:	d3d9      	bcc.n	4045cc <memcpy+0xcc>
  404618:	3a01      	subs	r2, #1
  40461a:	f811 3b01 	ldrb.w	r3, [r1], #1
  40461e:	f800 3b01 	strb.w	r3, [r0], #1
  404622:	d2f9      	bcs.n	404618 <memcpy+0x118>
  404624:	780b      	ldrb	r3, [r1, #0]
  404626:	7003      	strb	r3, [r0, #0]
  404628:	784b      	ldrb	r3, [r1, #1]
  40462a:	7043      	strb	r3, [r0, #1]
  40462c:	788b      	ldrb	r3, [r1, #2]
  40462e:	7083      	strb	r3, [r0, #2]
  404630:	4660      	mov	r0, ip
  404632:	4770      	bx	lr

00404634 <__malloc_lock>:
  404634:	4801      	ldr	r0, [pc, #4]	; (40463c <__malloc_lock+0x8>)
  404636:	f7ff bc29 	b.w	403e8c <__retarget_lock_acquire_recursive>
  40463a:	bf00      	nop
  40463c:	20000eb0 	.word	0x20000eb0

00404640 <__malloc_unlock>:
  404640:	4801      	ldr	r0, [pc, #4]	; (404648 <__malloc_unlock+0x8>)
  404642:	f7ff bc25 	b.w	403e90 <__retarget_lock_release_recursive>
  404646:	bf00      	nop
  404648:	20000eb0 	.word	0x20000eb0

0040464c <_Balloc>:
  40464c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40464e:	b570      	push	{r4, r5, r6, lr}
  404650:	4605      	mov	r5, r0
  404652:	460c      	mov	r4, r1
  404654:	b14b      	cbz	r3, 40466a <_Balloc+0x1e>
  404656:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  40465a:	b180      	cbz	r0, 40467e <_Balloc+0x32>
  40465c:	6802      	ldr	r2, [r0, #0]
  40465e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  404662:	2300      	movs	r3, #0
  404664:	6103      	str	r3, [r0, #16]
  404666:	60c3      	str	r3, [r0, #12]
  404668:	bd70      	pop	{r4, r5, r6, pc}
  40466a:	2221      	movs	r2, #33	; 0x21
  40466c:	2104      	movs	r1, #4
  40466e:	f000 fcd5 	bl	40501c <_calloc_r>
  404672:	64e8      	str	r0, [r5, #76]	; 0x4c
  404674:	4603      	mov	r3, r0
  404676:	2800      	cmp	r0, #0
  404678:	d1ed      	bne.n	404656 <_Balloc+0xa>
  40467a:	2000      	movs	r0, #0
  40467c:	bd70      	pop	{r4, r5, r6, pc}
  40467e:	2101      	movs	r1, #1
  404680:	fa01 f604 	lsl.w	r6, r1, r4
  404684:	1d72      	adds	r2, r6, #5
  404686:	4628      	mov	r0, r5
  404688:	0092      	lsls	r2, r2, #2
  40468a:	f000 fcc7 	bl	40501c <_calloc_r>
  40468e:	2800      	cmp	r0, #0
  404690:	d0f3      	beq.n	40467a <_Balloc+0x2e>
  404692:	6044      	str	r4, [r0, #4]
  404694:	6086      	str	r6, [r0, #8]
  404696:	e7e4      	b.n	404662 <_Balloc+0x16>

00404698 <_Bfree>:
  404698:	b131      	cbz	r1, 4046a8 <_Bfree+0x10>
  40469a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40469c:	684a      	ldr	r2, [r1, #4]
  40469e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  4046a2:	6008      	str	r0, [r1, #0]
  4046a4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  4046a8:	4770      	bx	lr
  4046aa:	bf00      	nop

004046ac <__multadd>:
  4046ac:	b5f0      	push	{r4, r5, r6, r7, lr}
  4046ae:	690c      	ldr	r4, [r1, #16]
  4046b0:	b083      	sub	sp, #12
  4046b2:	460d      	mov	r5, r1
  4046b4:	4606      	mov	r6, r0
  4046b6:	f101 0e14 	add.w	lr, r1, #20
  4046ba:	2700      	movs	r7, #0
  4046bc:	f8de 0000 	ldr.w	r0, [lr]
  4046c0:	b281      	uxth	r1, r0
  4046c2:	fb02 3301 	mla	r3, r2, r1, r3
  4046c6:	0c01      	lsrs	r1, r0, #16
  4046c8:	0c18      	lsrs	r0, r3, #16
  4046ca:	fb02 0101 	mla	r1, r2, r1, r0
  4046ce:	b29b      	uxth	r3, r3
  4046d0:	3701      	adds	r7, #1
  4046d2:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  4046d6:	42bc      	cmp	r4, r7
  4046d8:	f84e 3b04 	str.w	r3, [lr], #4
  4046dc:	ea4f 4311 	mov.w	r3, r1, lsr #16
  4046e0:	dcec      	bgt.n	4046bc <__multadd+0x10>
  4046e2:	b13b      	cbz	r3, 4046f4 <__multadd+0x48>
  4046e4:	68aa      	ldr	r2, [r5, #8]
  4046e6:	4294      	cmp	r4, r2
  4046e8:	da07      	bge.n	4046fa <__multadd+0x4e>
  4046ea:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  4046ee:	3401      	adds	r4, #1
  4046f0:	6153      	str	r3, [r2, #20]
  4046f2:	612c      	str	r4, [r5, #16]
  4046f4:	4628      	mov	r0, r5
  4046f6:	b003      	add	sp, #12
  4046f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4046fa:	6869      	ldr	r1, [r5, #4]
  4046fc:	9301      	str	r3, [sp, #4]
  4046fe:	3101      	adds	r1, #1
  404700:	4630      	mov	r0, r6
  404702:	f7ff ffa3 	bl	40464c <_Balloc>
  404706:	692a      	ldr	r2, [r5, #16]
  404708:	3202      	adds	r2, #2
  40470a:	f105 010c 	add.w	r1, r5, #12
  40470e:	4607      	mov	r7, r0
  404710:	0092      	lsls	r2, r2, #2
  404712:	300c      	adds	r0, #12
  404714:	f7ff fef4 	bl	404500 <memcpy>
  404718:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  40471a:	6869      	ldr	r1, [r5, #4]
  40471c:	9b01      	ldr	r3, [sp, #4]
  40471e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  404722:	6028      	str	r0, [r5, #0]
  404724:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  404728:	463d      	mov	r5, r7
  40472a:	e7de      	b.n	4046ea <__multadd+0x3e>

0040472c <__hi0bits>:
  40472c:	0c02      	lsrs	r2, r0, #16
  40472e:	0412      	lsls	r2, r2, #16
  404730:	4603      	mov	r3, r0
  404732:	b9b2      	cbnz	r2, 404762 <__hi0bits+0x36>
  404734:	0403      	lsls	r3, r0, #16
  404736:	2010      	movs	r0, #16
  404738:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  40473c:	bf04      	itt	eq
  40473e:	021b      	lsleq	r3, r3, #8
  404740:	3008      	addeq	r0, #8
  404742:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  404746:	bf04      	itt	eq
  404748:	011b      	lsleq	r3, r3, #4
  40474a:	3004      	addeq	r0, #4
  40474c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  404750:	bf04      	itt	eq
  404752:	009b      	lsleq	r3, r3, #2
  404754:	3002      	addeq	r0, #2
  404756:	2b00      	cmp	r3, #0
  404758:	db02      	blt.n	404760 <__hi0bits+0x34>
  40475a:	005b      	lsls	r3, r3, #1
  40475c:	d403      	bmi.n	404766 <__hi0bits+0x3a>
  40475e:	2020      	movs	r0, #32
  404760:	4770      	bx	lr
  404762:	2000      	movs	r0, #0
  404764:	e7e8      	b.n	404738 <__hi0bits+0xc>
  404766:	3001      	adds	r0, #1
  404768:	4770      	bx	lr
  40476a:	bf00      	nop

0040476c <__lo0bits>:
  40476c:	6803      	ldr	r3, [r0, #0]
  40476e:	f013 0207 	ands.w	r2, r3, #7
  404772:	4601      	mov	r1, r0
  404774:	d007      	beq.n	404786 <__lo0bits+0x1a>
  404776:	07da      	lsls	r2, r3, #31
  404778:	d421      	bmi.n	4047be <__lo0bits+0x52>
  40477a:	0798      	lsls	r0, r3, #30
  40477c:	d421      	bmi.n	4047c2 <__lo0bits+0x56>
  40477e:	089b      	lsrs	r3, r3, #2
  404780:	600b      	str	r3, [r1, #0]
  404782:	2002      	movs	r0, #2
  404784:	4770      	bx	lr
  404786:	b298      	uxth	r0, r3
  404788:	b198      	cbz	r0, 4047b2 <__lo0bits+0x46>
  40478a:	4610      	mov	r0, r2
  40478c:	f013 0fff 	tst.w	r3, #255	; 0xff
  404790:	bf04      	itt	eq
  404792:	0a1b      	lsreq	r3, r3, #8
  404794:	3008      	addeq	r0, #8
  404796:	071a      	lsls	r2, r3, #28
  404798:	bf04      	itt	eq
  40479a:	091b      	lsreq	r3, r3, #4
  40479c:	3004      	addeq	r0, #4
  40479e:	079a      	lsls	r2, r3, #30
  4047a0:	bf04      	itt	eq
  4047a2:	089b      	lsreq	r3, r3, #2
  4047a4:	3002      	addeq	r0, #2
  4047a6:	07da      	lsls	r2, r3, #31
  4047a8:	d407      	bmi.n	4047ba <__lo0bits+0x4e>
  4047aa:	085b      	lsrs	r3, r3, #1
  4047ac:	d104      	bne.n	4047b8 <__lo0bits+0x4c>
  4047ae:	2020      	movs	r0, #32
  4047b0:	4770      	bx	lr
  4047b2:	0c1b      	lsrs	r3, r3, #16
  4047b4:	2010      	movs	r0, #16
  4047b6:	e7e9      	b.n	40478c <__lo0bits+0x20>
  4047b8:	3001      	adds	r0, #1
  4047ba:	600b      	str	r3, [r1, #0]
  4047bc:	4770      	bx	lr
  4047be:	2000      	movs	r0, #0
  4047c0:	4770      	bx	lr
  4047c2:	085b      	lsrs	r3, r3, #1
  4047c4:	600b      	str	r3, [r1, #0]
  4047c6:	2001      	movs	r0, #1
  4047c8:	4770      	bx	lr
  4047ca:	bf00      	nop

004047cc <__i2b>:
  4047cc:	b510      	push	{r4, lr}
  4047ce:	460c      	mov	r4, r1
  4047d0:	2101      	movs	r1, #1
  4047d2:	f7ff ff3b 	bl	40464c <_Balloc>
  4047d6:	2201      	movs	r2, #1
  4047d8:	6144      	str	r4, [r0, #20]
  4047da:	6102      	str	r2, [r0, #16]
  4047dc:	bd10      	pop	{r4, pc}
  4047de:	bf00      	nop

004047e0 <__multiply>:
  4047e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4047e4:	690c      	ldr	r4, [r1, #16]
  4047e6:	6915      	ldr	r5, [r2, #16]
  4047e8:	42ac      	cmp	r4, r5
  4047ea:	b083      	sub	sp, #12
  4047ec:	468b      	mov	fp, r1
  4047ee:	4616      	mov	r6, r2
  4047f0:	da04      	bge.n	4047fc <__multiply+0x1c>
  4047f2:	4622      	mov	r2, r4
  4047f4:	46b3      	mov	fp, r6
  4047f6:	462c      	mov	r4, r5
  4047f8:	460e      	mov	r6, r1
  4047fa:	4615      	mov	r5, r2
  4047fc:	f8db 3008 	ldr.w	r3, [fp, #8]
  404800:	f8db 1004 	ldr.w	r1, [fp, #4]
  404804:	eb04 0805 	add.w	r8, r4, r5
  404808:	4598      	cmp	r8, r3
  40480a:	bfc8      	it	gt
  40480c:	3101      	addgt	r1, #1
  40480e:	f7ff ff1d 	bl	40464c <_Balloc>
  404812:	f100 0914 	add.w	r9, r0, #20
  404816:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  40481a:	45d1      	cmp	r9, sl
  40481c:	9000      	str	r0, [sp, #0]
  40481e:	d205      	bcs.n	40482c <__multiply+0x4c>
  404820:	464b      	mov	r3, r9
  404822:	2100      	movs	r1, #0
  404824:	f843 1b04 	str.w	r1, [r3], #4
  404828:	459a      	cmp	sl, r3
  40482a:	d8fb      	bhi.n	404824 <__multiply+0x44>
  40482c:	f106 0c14 	add.w	ip, r6, #20
  404830:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  404834:	f10b 0b14 	add.w	fp, fp, #20
  404838:	459c      	cmp	ip, r3
  40483a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  40483e:	d24c      	bcs.n	4048da <__multiply+0xfa>
  404840:	f8cd a004 	str.w	sl, [sp, #4]
  404844:	469a      	mov	sl, r3
  404846:	f8dc 5000 	ldr.w	r5, [ip]
  40484a:	b2af      	uxth	r7, r5
  40484c:	b1ef      	cbz	r7, 40488a <__multiply+0xaa>
  40484e:	2100      	movs	r1, #0
  404850:	464d      	mov	r5, r9
  404852:	465e      	mov	r6, fp
  404854:	460c      	mov	r4, r1
  404856:	f856 2b04 	ldr.w	r2, [r6], #4
  40485a:	6828      	ldr	r0, [r5, #0]
  40485c:	b293      	uxth	r3, r2
  40485e:	b281      	uxth	r1, r0
  404860:	fb07 1303 	mla	r3, r7, r3, r1
  404864:	0c12      	lsrs	r2, r2, #16
  404866:	0c01      	lsrs	r1, r0, #16
  404868:	4423      	add	r3, r4
  40486a:	fb07 1102 	mla	r1, r7, r2, r1
  40486e:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  404872:	b29b      	uxth	r3, r3
  404874:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  404878:	45b6      	cmp	lr, r6
  40487a:	f845 3b04 	str.w	r3, [r5], #4
  40487e:	ea4f 4411 	mov.w	r4, r1, lsr #16
  404882:	d8e8      	bhi.n	404856 <__multiply+0x76>
  404884:	602c      	str	r4, [r5, #0]
  404886:	f8dc 5000 	ldr.w	r5, [ip]
  40488a:	0c2d      	lsrs	r5, r5, #16
  40488c:	d01d      	beq.n	4048ca <__multiply+0xea>
  40488e:	f8d9 3000 	ldr.w	r3, [r9]
  404892:	4648      	mov	r0, r9
  404894:	461c      	mov	r4, r3
  404896:	4659      	mov	r1, fp
  404898:	2200      	movs	r2, #0
  40489a:	880e      	ldrh	r6, [r1, #0]
  40489c:	0c24      	lsrs	r4, r4, #16
  40489e:	fb05 4406 	mla	r4, r5, r6, r4
  4048a2:	4422      	add	r2, r4
  4048a4:	b29b      	uxth	r3, r3
  4048a6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  4048aa:	f840 3b04 	str.w	r3, [r0], #4
  4048ae:	f851 3b04 	ldr.w	r3, [r1], #4
  4048b2:	6804      	ldr	r4, [r0, #0]
  4048b4:	0c1b      	lsrs	r3, r3, #16
  4048b6:	b2a6      	uxth	r6, r4
  4048b8:	fb05 6303 	mla	r3, r5, r3, r6
  4048bc:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  4048c0:	458e      	cmp	lr, r1
  4048c2:	ea4f 4213 	mov.w	r2, r3, lsr #16
  4048c6:	d8e8      	bhi.n	40489a <__multiply+0xba>
  4048c8:	6003      	str	r3, [r0, #0]
  4048ca:	f10c 0c04 	add.w	ip, ip, #4
  4048ce:	45e2      	cmp	sl, ip
  4048d0:	f109 0904 	add.w	r9, r9, #4
  4048d4:	d8b7      	bhi.n	404846 <__multiply+0x66>
  4048d6:	f8dd a004 	ldr.w	sl, [sp, #4]
  4048da:	f1b8 0f00 	cmp.w	r8, #0
  4048de:	dd0b      	ble.n	4048f8 <__multiply+0x118>
  4048e0:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  4048e4:	f1aa 0a04 	sub.w	sl, sl, #4
  4048e8:	b11b      	cbz	r3, 4048f2 <__multiply+0x112>
  4048ea:	e005      	b.n	4048f8 <__multiply+0x118>
  4048ec:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  4048f0:	b913      	cbnz	r3, 4048f8 <__multiply+0x118>
  4048f2:	f1b8 0801 	subs.w	r8, r8, #1
  4048f6:	d1f9      	bne.n	4048ec <__multiply+0x10c>
  4048f8:	9800      	ldr	r0, [sp, #0]
  4048fa:	f8c0 8010 	str.w	r8, [r0, #16]
  4048fe:	b003      	add	sp, #12
  404900:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404904 <__pow5mult>:
  404904:	f012 0303 	ands.w	r3, r2, #3
  404908:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40490c:	4614      	mov	r4, r2
  40490e:	4607      	mov	r7, r0
  404910:	d12e      	bne.n	404970 <__pow5mult+0x6c>
  404912:	460d      	mov	r5, r1
  404914:	10a4      	asrs	r4, r4, #2
  404916:	d01c      	beq.n	404952 <__pow5mult+0x4e>
  404918:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  40491a:	b396      	cbz	r6, 404982 <__pow5mult+0x7e>
  40491c:	07e3      	lsls	r3, r4, #31
  40491e:	f04f 0800 	mov.w	r8, #0
  404922:	d406      	bmi.n	404932 <__pow5mult+0x2e>
  404924:	1064      	asrs	r4, r4, #1
  404926:	d014      	beq.n	404952 <__pow5mult+0x4e>
  404928:	6830      	ldr	r0, [r6, #0]
  40492a:	b1a8      	cbz	r0, 404958 <__pow5mult+0x54>
  40492c:	4606      	mov	r6, r0
  40492e:	07e3      	lsls	r3, r4, #31
  404930:	d5f8      	bpl.n	404924 <__pow5mult+0x20>
  404932:	4632      	mov	r2, r6
  404934:	4629      	mov	r1, r5
  404936:	4638      	mov	r0, r7
  404938:	f7ff ff52 	bl	4047e0 <__multiply>
  40493c:	b1b5      	cbz	r5, 40496c <__pow5mult+0x68>
  40493e:	686a      	ldr	r2, [r5, #4]
  404940:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404942:	1064      	asrs	r4, r4, #1
  404944:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404948:	6029      	str	r1, [r5, #0]
  40494a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  40494e:	4605      	mov	r5, r0
  404950:	d1ea      	bne.n	404928 <__pow5mult+0x24>
  404952:	4628      	mov	r0, r5
  404954:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404958:	4632      	mov	r2, r6
  40495a:	4631      	mov	r1, r6
  40495c:	4638      	mov	r0, r7
  40495e:	f7ff ff3f 	bl	4047e0 <__multiply>
  404962:	6030      	str	r0, [r6, #0]
  404964:	f8c0 8000 	str.w	r8, [r0]
  404968:	4606      	mov	r6, r0
  40496a:	e7e0      	b.n	40492e <__pow5mult+0x2a>
  40496c:	4605      	mov	r5, r0
  40496e:	e7d9      	b.n	404924 <__pow5mult+0x20>
  404970:	1e5a      	subs	r2, r3, #1
  404972:	4d0b      	ldr	r5, [pc, #44]	; (4049a0 <__pow5mult+0x9c>)
  404974:	2300      	movs	r3, #0
  404976:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  40497a:	f7ff fe97 	bl	4046ac <__multadd>
  40497e:	4605      	mov	r5, r0
  404980:	e7c8      	b.n	404914 <__pow5mult+0x10>
  404982:	2101      	movs	r1, #1
  404984:	4638      	mov	r0, r7
  404986:	f7ff fe61 	bl	40464c <_Balloc>
  40498a:	f240 2171 	movw	r1, #625	; 0x271
  40498e:	2201      	movs	r2, #1
  404990:	2300      	movs	r3, #0
  404992:	6141      	str	r1, [r0, #20]
  404994:	6102      	str	r2, [r0, #16]
  404996:	4606      	mov	r6, r0
  404998:	64b8      	str	r0, [r7, #72]	; 0x48
  40499a:	6003      	str	r3, [r0, #0]
  40499c:	e7be      	b.n	40491c <__pow5mult+0x18>
  40499e:	bf00      	nop
  4049a0:	00407140 	.word	0x00407140

004049a4 <__lshift>:
  4049a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4049a8:	4691      	mov	r9, r2
  4049aa:	690a      	ldr	r2, [r1, #16]
  4049ac:	688b      	ldr	r3, [r1, #8]
  4049ae:	ea4f 1469 	mov.w	r4, r9, asr #5
  4049b2:	eb04 0802 	add.w	r8, r4, r2
  4049b6:	f108 0501 	add.w	r5, r8, #1
  4049ba:	429d      	cmp	r5, r3
  4049bc:	460e      	mov	r6, r1
  4049be:	4607      	mov	r7, r0
  4049c0:	6849      	ldr	r1, [r1, #4]
  4049c2:	dd04      	ble.n	4049ce <__lshift+0x2a>
  4049c4:	005b      	lsls	r3, r3, #1
  4049c6:	429d      	cmp	r5, r3
  4049c8:	f101 0101 	add.w	r1, r1, #1
  4049cc:	dcfa      	bgt.n	4049c4 <__lshift+0x20>
  4049ce:	4638      	mov	r0, r7
  4049d0:	f7ff fe3c 	bl	40464c <_Balloc>
  4049d4:	2c00      	cmp	r4, #0
  4049d6:	f100 0314 	add.w	r3, r0, #20
  4049da:	dd06      	ble.n	4049ea <__lshift+0x46>
  4049dc:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  4049e0:	2100      	movs	r1, #0
  4049e2:	f843 1b04 	str.w	r1, [r3], #4
  4049e6:	429a      	cmp	r2, r3
  4049e8:	d1fb      	bne.n	4049e2 <__lshift+0x3e>
  4049ea:	6934      	ldr	r4, [r6, #16]
  4049ec:	f106 0114 	add.w	r1, r6, #20
  4049f0:	f019 091f 	ands.w	r9, r9, #31
  4049f4:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  4049f8:	d01d      	beq.n	404a36 <__lshift+0x92>
  4049fa:	f1c9 0c20 	rsb	ip, r9, #32
  4049fe:	2200      	movs	r2, #0
  404a00:	680c      	ldr	r4, [r1, #0]
  404a02:	fa04 f409 	lsl.w	r4, r4, r9
  404a06:	4314      	orrs	r4, r2
  404a08:	f843 4b04 	str.w	r4, [r3], #4
  404a0c:	f851 2b04 	ldr.w	r2, [r1], #4
  404a10:	458e      	cmp	lr, r1
  404a12:	fa22 f20c 	lsr.w	r2, r2, ip
  404a16:	d8f3      	bhi.n	404a00 <__lshift+0x5c>
  404a18:	601a      	str	r2, [r3, #0]
  404a1a:	b10a      	cbz	r2, 404a20 <__lshift+0x7c>
  404a1c:	f108 0502 	add.w	r5, r8, #2
  404a20:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404a22:	6872      	ldr	r2, [r6, #4]
  404a24:	3d01      	subs	r5, #1
  404a26:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404a2a:	6105      	str	r5, [r0, #16]
  404a2c:	6031      	str	r1, [r6, #0]
  404a2e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  404a32:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404a36:	3b04      	subs	r3, #4
  404a38:	f851 2b04 	ldr.w	r2, [r1], #4
  404a3c:	f843 2f04 	str.w	r2, [r3, #4]!
  404a40:	458e      	cmp	lr, r1
  404a42:	d8f9      	bhi.n	404a38 <__lshift+0x94>
  404a44:	e7ec      	b.n	404a20 <__lshift+0x7c>
  404a46:	bf00      	nop

00404a48 <__mcmp>:
  404a48:	b430      	push	{r4, r5}
  404a4a:	690b      	ldr	r3, [r1, #16]
  404a4c:	4605      	mov	r5, r0
  404a4e:	6900      	ldr	r0, [r0, #16]
  404a50:	1ac0      	subs	r0, r0, r3
  404a52:	d10f      	bne.n	404a74 <__mcmp+0x2c>
  404a54:	009b      	lsls	r3, r3, #2
  404a56:	3514      	adds	r5, #20
  404a58:	3114      	adds	r1, #20
  404a5a:	4419      	add	r1, r3
  404a5c:	442b      	add	r3, r5
  404a5e:	e001      	b.n	404a64 <__mcmp+0x1c>
  404a60:	429d      	cmp	r5, r3
  404a62:	d207      	bcs.n	404a74 <__mcmp+0x2c>
  404a64:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  404a68:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  404a6c:	4294      	cmp	r4, r2
  404a6e:	d0f7      	beq.n	404a60 <__mcmp+0x18>
  404a70:	d302      	bcc.n	404a78 <__mcmp+0x30>
  404a72:	2001      	movs	r0, #1
  404a74:	bc30      	pop	{r4, r5}
  404a76:	4770      	bx	lr
  404a78:	f04f 30ff 	mov.w	r0, #4294967295
  404a7c:	e7fa      	b.n	404a74 <__mcmp+0x2c>
  404a7e:	bf00      	nop

00404a80 <__mdiff>:
  404a80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404a84:	690f      	ldr	r7, [r1, #16]
  404a86:	460e      	mov	r6, r1
  404a88:	6911      	ldr	r1, [r2, #16]
  404a8a:	1a7f      	subs	r7, r7, r1
  404a8c:	2f00      	cmp	r7, #0
  404a8e:	4690      	mov	r8, r2
  404a90:	d117      	bne.n	404ac2 <__mdiff+0x42>
  404a92:	0089      	lsls	r1, r1, #2
  404a94:	f106 0514 	add.w	r5, r6, #20
  404a98:	f102 0e14 	add.w	lr, r2, #20
  404a9c:	186b      	adds	r3, r5, r1
  404a9e:	4471      	add	r1, lr
  404aa0:	e001      	b.n	404aa6 <__mdiff+0x26>
  404aa2:	429d      	cmp	r5, r3
  404aa4:	d25c      	bcs.n	404b60 <__mdiff+0xe0>
  404aa6:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  404aaa:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  404aae:	42a2      	cmp	r2, r4
  404ab0:	d0f7      	beq.n	404aa2 <__mdiff+0x22>
  404ab2:	d25e      	bcs.n	404b72 <__mdiff+0xf2>
  404ab4:	4633      	mov	r3, r6
  404ab6:	462c      	mov	r4, r5
  404ab8:	4646      	mov	r6, r8
  404aba:	4675      	mov	r5, lr
  404abc:	4698      	mov	r8, r3
  404abe:	2701      	movs	r7, #1
  404ac0:	e005      	b.n	404ace <__mdiff+0x4e>
  404ac2:	db58      	blt.n	404b76 <__mdiff+0xf6>
  404ac4:	f106 0514 	add.w	r5, r6, #20
  404ac8:	f108 0414 	add.w	r4, r8, #20
  404acc:	2700      	movs	r7, #0
  404ace:	6871      	ldr	r1, [r6, #4]
  404ad0:	f7ff fdbc 	bl	40464c <_Balloc>
  404ad4:	f8d8 3010 	ldr.w	r3, [r8, #16]
  404ad8:	6936      	ldr	r6, [r6, #16]
  404ada:	60c7      	str	r7, [r0, #12]
  404adc:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  404ae0:	46a6      	mov	lr, r4
  404ae2:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  404ae6:	f100 0414 	add.w	r4, r0, #20
  404aea:	2300      	movs	r3, #0
  404aec:	f85e 1b04 	ldr.w	r1, [lr], #4
  404af0:	f855 8b04 	ldr.w	r8, [r5], #4
  404af4:	b28a      	uxth	r2, r1
  404af6:	fa13 f388 	uxtah	r3, r3, r8
  404afa:	0c09      	lsrs	r1, r1, #16
  404afc:	1a9a      	subs	r2, r3, r2
  404afe:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  404b02:	eb03 4322 	add.w	r3, r3, r2, asr #16
  404b06:	b292      	uxth	r2, r2
  404b08:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  404b0c:	45f4      	cmp	ip, lr
  404b0e:	f844 2b04 	str.w	r2, [r4], #4
  404b12:	ea4f 4323 	mov.w	r3, r3, asr #16
  404b16:	d8e9      	bhi.n	404aec <__mdiff+0x6c>
  404b18:	42af      	cmp	r7, r5
  404b1a:	d917      	bls.n	404b4c <__mdiff+0xcc>
  404b1c:	46a4      	mov	ip, r4
  404b1e:	46ae      	mov	lr, r5
  404b20:	f85e 2b04 	ldr.w	r2, [lr], #4
  404b24:	fa13 f382 	uxtah	r3, r3, r2
  404b28:	1419      	asrs	r1, r3, #16
  404b2a:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  404b2e:	b29b      	uxth	r3, r3
  404b30:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  404b34:	4577      	cmp	r7, lr
  404b36:	f84c 2b04 	str.w	r2, [ip], #4
  404b3a:	ea4f 4321 	mov.w	r3, r1, asr #16
  404b3e:	d8ef      	bhi.n	404b20 <__mdiff+0xa0>
  404b40:	43ed      	mvns	r5, r5
  404b42:	442f      	add	r7, r5
  404b44:	f027 0703 	bic.w	r7, r7, #3
  404b48:	3704      	adds	r7, #4
  404b4a:	443c      	add	r4, r7
  404b4c:	3c04      	subs	r4, #4
  404b4e:	b922      	cbnz	r2, 404b5a <__mdiff+0xda>
  404b50:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  404b54:	3e01      	subs	r6, #1
  404b56:	2b00      	cmp	r3, #0
  404b58:	d0fa      	beq.n	404b50 <__mdiff+0xd0>
  404b5a:	6106      	str	r6, [r0, #16]
  404b5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404b60:	2100      	movs	r1, #0
  404b62:	f7ff fd73 	bl	40464c <_Balloc>
  404b66:	2201      	movs	r2, #1
  404b68:	2300      	movs	r3, #0
  404b6a:	6102      	str	r2, [r0, #16]
  404b6c:	6143      	str	r3, [r0, #20]
  404b6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404b72:	4674      	mov	r4, lr
  404b74:	e7ab      	b.n	404ace <__mdiff+0x4e>
  404b76:	4633      	mov	r3, r6
  404b78:	f106 0414 	add.w	r4, r6, #20
  404b7c:	f102 0514 	add.w	r5, r2, #20
  404b80:	4616      	mov	r6, r2
  404b82:	2701      	movs	r7, #1
  404b84:	4698      	mov	r8, r3
  404b86:	e7a2      	b.n	404ace <__mdiff+0x4e>

00404b88 <__d2b>:
  404b88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404b8c:	b082      	sub	sp, #8
  404b8e:	2101      	movs	r1, #1
  404b90:	461c      	mov	r4, r3
  404b92:	f3c3 570a 	ubfx	r7, r3, #20, #11
  404b96:	4615      	mov	r5, r2
  404b98:	9e08      	ldr	r6, [sp, #32]
  404b9a:	f7ff fd57 	bl	40464c <_Balloc>
  404b9e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  404ba2:	4680      	mov	r8, r0
  404ba4:	b10f      	cbz	r7, 404baa <__d2b+0x22>
  404ba6:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  404baa:	9401      	str	r4, [sp, #4]
  404bac:	b31d      	cbz	r5, 404bf6 <__d2b+0x6e>
  404bae:	a802      	add	r0, sp, #8
  404bb0:	f840 5d08 	str.w	r5, [r0, #-8]!
  404bb4:	f7ff fdda 	bl	40476c <__lo0bits>
  404bb8:	2800      	cmp	r0, #0
  404bba:	d134      	bne.n	404c26 <__d2b+0x9e>
  404bbc:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404bc0:	f8c8 2014 	str.w	r2, [r8, #20]
  404bc4:	2b00      	cmp	r3, #0
  404bc6:	bf0c      	ite	eq
  404bc8:	2101      	moveq	r1, #1
  404bca:	2102      	movne	r1, #2
  404bcc:	f8c8 3018 	str.w	r3, [r8, #24]
  404bd0:	f8c8 1010 	str.w	r1, [r8, #16]
  404bd4:	b9df      	cbnz	r7, 404c0e <__d2b+0x86>
  404bd6:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  404bda:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  404bde:	6030      	str	r0, [r6, #0]
  404be0:	6918      	ldr	r0, [r3, #16]
  404be2:	f7ff fda3 	bl	40472c <__hi0bits>
  404be6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404be8:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  404bec:	6018      	str	r0, [r3, #0]
  404bee:	4640      	mov	r0, r8
  404bf0:	b002      	add	sp, #8
  404bf2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404bf6:	a801      	add	r0, sp, #4
  404bf8:	f7ff fdb8 	bl	40476c <__lo0bits>
  404bfc:	9b01      	ldr	r3, [sp, #4]
  404bfe:	f8c8 3014 	str.w	r3, [r8, #20]
  404c02:	2101      	movs	r1, #1
  404c04:	3020      	adds	r0, #32
  404c06:	f8c8 1010 	str.w	r1, [r8, #16]
  404c0a:	2f00      	cmp	r7, #0
  404c0c:	d0e3      	beq.n	404bd6 <__d2b+0x4e>
  404c0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404c10:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  404c14:	4407      	add	r7, r0
  404c16:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  404c1a:	6037      	str	r7, [r6, #0]
  404c1c:	6018      	str	r0, [r3, #0]
  404c1e:	4640      	mov	r0, r8
  404c20:	b002      	add	sp, #8
  404c22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404c26:	e89d 000a 	ldmia.w	sp, {r1, r3}
  404c2a:	f1c0 0220 	rsb	r2, r0, #32
  404c2e:	fa03 f202 	lsl.w	r2, r3, r2
  404c32:	430a      	orrs	r2, r1
  404c34:	40c3      	lsrs	r3, r0
  404c36:	9301      	str	r3, [sp, #4]
  404c38:	f8c8 2014 	str.w	r2, [r8, #20]
  404c3c:	e7c2      	b.n	404bc4 <__d2b+0x3c>
  404c3e:	bf00      	nop

00404c40 <_sbrk_r>:
  404c40:	b538      	push	{r3, r4, r5, lr}
  404c42:	4c07      	ldr	r4, [pc, #28]	; (404c60 <_sbrk_r+0x20>)
  404c44:	2300      	movs	r3, #0
  404c46:	4605      	mov	r5, r0
  404c48:	4608      	mov	r0, r1
  404c4a:	6023      	str	r3, [r4, #0]
  404c4c:	f7fc fb42 	bl	4012d4 <_sbrk>
  404c50:	1c43      	adds	r3, r0, #1
  404c52:	d000      	beq.n	404c56 <_sbrk_r+0x16>
  404c54:	bd38      	pop	{r3, r4, r5, pc}
  404c56:	6823      	ldr	r3, [r4, #0]
  404c58:	2b00      	cmp	r3, #0
  404c5a:	d0fb      	beq.n	404c54 <_sbrk_r+0x14>
  404c5c:	602b      	str	r3, [r5, #0]
  404c5e:	bd38      	pop	{r3, r4, r5, pc}
  404c60:	20000ec4 	.word	0x20000ec4

00404c64 <strchr>:
  404c64:	b2c9      	uxtb	r1, r1
  404c66:	2900      	cmp	r1, #0
  404c68:	d041      	beq.n	404cee <strchr+0x8a>
  404c6a:	0782      	lsls	r2, r0, #30
  404c6c:	b4f0      	push	{r4, r5, r6, r7}
  404c6e:	d067      	beq.n	404d40 <strchr+0xdc>
  404c70:	7803      	ldrb	r3, [r0, #0]
  404c72:	2b00      	cmp	r3, #0
  404c74:	d068      	beq.n	404d48 <strchr+0xe4>
  404c76:	4299      	cmp	r1, r3
  404c78:	d037      	beq.n	404cea <strchr+0x86>
  404c7a:	1c43      	adds	r3, r0, #1
  404c7c:	e004      	b.n	404c88 <strchr+0x24>
  404c7e:	f813 0b01 	ldrb.w	r0, [r3], #1
  404c82:	b390      	cbz	r0, 404cea <strchr+0x86>
  404c84:	4281      	cmp	r1, r0
  404c86:	d02f      	beq.n	404ce8 <strchr+0x84>
  404c88:	079a      	lsls	r2, r3, #30
  404c8a:	461c      	mov	r4, r3
  404c8c:	d1f7      	bne.n	404c7e <strchr+0x1a>
  404c8e:	6825      	ldr	r5, [r4, #0]
  404c90:	ea41 2301 	orr.w	r3, r1, r1, lsl #8
  404c94:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
  404c98:	ea83 0605 	eor.w	r6, r3, r5
  404c9c:	f1a6 3001 	sub.w	r0, r6, #16843009	; 0x1010101
  404ca0:	f1a5 3201 	sub.w	r2, r5, #16843009	; 0x1010101
  404ca4:	ea20 0006 	bic.w	r0, r0, r6
  404ca8:	ea22 0205 	bic.w	r2, r2, r5
  404cac:	4302      	orrs	r2, r0
  404cae:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  404cb2:	d111      	bne.n	404cd8 <strchr+0x74>
  404cb4:	4620      	mov	r0, r4
  404cb6:	f850 6f04 	ldr.w	r6, [r0, #4]!
  404cba:	ea83 0706 	eor.w	r7, r3, r6
  404cbe:	f1a7 3501 	sub.w	r5, r7, #16843009	; 0x1010101
  404cc2:	f1a6 3201 	sub.w	r2, r6, #16843009	; 0x1010101
  404cc6:	ea25 0507 	bic.w	r5, r5, r7
  404cca:	ea22 0206 	bic.w	r2, r2, r6
  404cce:	432a      	orrs	r2, r5
  404cd0:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  404cd4:	d0ef      	beq.n	404cb6 <strchr+0x52>
  404cd6:	4604      	mov	r4, r0
  404cd8:	7820      	ldrb	r0, [r4, #0]
  404cda:	b918      	cbnz	r0, 404ce4 <strchr+0x80>
  404cdc:	e005      	b.n	404cea <strchr+0x86>
  404cde:	f814 0f01 	ldrb.w	r0, [r4, #1]!
  404ce2:	b110      	cbz	r0, 404cea <strchr+0x86>
  404ce4:	4281      	cmp	r1, r0
  404ce6:	d1fa      	bne.n	404cde <strchr+0x7a>
  404ce8:	4620      	mov	r0, r4
  404cea:	bcf0      	pop	{r4, r5, r6, r7}
  404cec:	4770      	bx	lr
  404cee:	0783      	lsls	r3, r0, #30
  404cf0:	d024      	beq.n	404d3c <strchr+0xd8>
  404cf2:	7803      	ldrb	r3, [r0, #0]
  404cf4:	2b00      	cmp	r3, #0
  404cf6:	d0f9      	beq.n	404cec <strchr+0x88>
  404cf8:	1c43      	adds	r3, r0, #1
  404cfa:	e003      	b.n	404d04 <strchr+0xa0>
  404cfc:	7802      	ldrb	r2, [r0, #0]
  404cfe:	3301      	adds	r3, #1
  404d00:	2a00      	cmp	r2, #0
  404d02:	d0f3      	beq.n	404cec <strchr+0x88>
  404d04:	0799      	lsls	r1, r3, #30
  404d06:	4618      	mov	r0, r3
  404d08:	d1f8      	bne.n	404cfc <strchr+0x98>
  404d0a:	6819      	ldr	r1, [r3, #0]
  404d0c:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  404d10:	ea22 0201 	bic.w	r2, r2, r1
  404d14:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  404d18:	d108      	bne.n	404d2c <strchr+0xc8>
  404d1a:	f853 1f04 	ldr.w	r1, [r3, #4]!
  404d1e:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  404d22:	ea22 0201 	bic.w	r2, r2, r1
  404d26:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  404d2a:	d0f6      	beq.n	404d1a <strchr+0xb6>
  404d2c:	781a      	ldrb	r2, [r3, #0]
  404d2e:	4618      	mov	r0, r3
  404d30:	b142      	cbz	r2, 404d44 <strchr+0xe0>
  404d32:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  404d36:	2b00      	cmp	r3, #0
  404d38:	d1fb      	bne.n	404d32 <strchr+0xce>
  404d3a:	4770      	bx	lr
  404d3c:	4603      	mov	r3, r0
  404d3e:	e7e4      	b.n	404d0a <strchr+0xa6>
  404d40:	4604      	mov	r4, r0
  404d42:	e7a4      	b.n	404c8e <strchr+0x2a>
  404d44:	4618      	mov	r0, r3
  404d46:	4770      	bx	lr
  404d48:	4618      	mov	r0, r3
  404d4a:	e7ce      	b.n	404cea <strchr+0x86>
	...

00404d80 <strlen>:
  404d80:	f890 f000 	pld	[r0]
  404d84:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  404d88:	f020 0107 	bic.w	r1, r0, #7
  404d8c:	f06f 0c00 	mvn.w	ip, #0
  404d90:	f010 0407 	ands.w	r4, r0, #7
  404d94:	f891 f020 	pld	[r1, #32]
  404d98:	f040 8049 	bne.w	404e2e <strlen+0xae>
  404d9c:	f04f 0400 	mov.w	r4, #0
  404da0:	f06f 0007 	mvn.w	r0, #7
  404da4:	e9d1 2300 	ldrd	r2, r3, [r1]
  404da8:	f891 f040 	pld	[r1, #64]	; 0x40
  404dac:	f100 0008 	add.w	r0, r0, #8
  404db0:	fa82 f24c 	uadd8	r2, r2, ip
  404db4:	faa4 f28c 	sel	r2, r4, ip
  404db8:	fa83 f34c 	uadd8	r3, r3, ip
  404dbc:	faa2 f38c 	sel	r3, r2, ip
  404dc0:	bb4b      	cbnz	r3, 404e16 <strlen+0x96>
  404dc2:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  404dc6:	fa82 f24c 	uadd8	r2, r2, ip
  404dca:	f100 0008 	add.w	r0, r0, #8
  404dce:	faa4 f28c 	sel	r2, r4, ip
  404dd2:	fa83 f34c 	uadd8	r3, r3, ip
  404dd6:	faa2 f38c 	sel	r3, r2, ip
  404dda:	b9e3      	cbnz	r3, 404e16 <strlen+0x96>
  404ddc:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  404de0:	fa82 f24c 	uadd8	r2, r2, ip
  404de4:	f100 0008 	add.w	r0, r0, #8
  404de8:	faa4 f28c 	sel	r2, r4, ip
  404dec:	fa83 f34c 	uadd8	r3, r3, ip
  404df0:	faa2 f38c 	sel	r3, r2, ip
  404df4:	b97b      	cbnz	r3, 404e16 <strlen+0x96>
  404df6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  404dfa:	f101 0120 	add.w	r1, r1, #32
  404dfe:	fa82 f24c 	uadd8	r2, r2, ip
  404e02:	f100 0008 	add.w	r0, r0, #8
  404e06:	faa4 f28c 	sel	r2, r4, ip
  404e0a:	fa83 f34c 	uadd8	r3, r3, ip
  404e0e:	faa2 f38c 	sel	r3, r2, ip
  404e12:	2b00      	cmp	r3, #0
  404e14:	d0c6      	beq.n	404da4 <strlen+0x24>
  404e16:	2a00      	cmp	r2, #0
  404e18:	bf04      	itt	eq
  404e1a:	3004      	addeq	r0, #4
  404e1c:	461a      	moveq	r2, r3
  404e1e:	ba12      	rev	r2, r2
  404e20:	fab2 f282 	clz	r2, r2
  404e24:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  404e28:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  404e2c:	4770      	bx	lr
  404e2e:	e9d1 2300 	ldrd	r2, r3, [r1]
  404e32:	f004 0503 	and.w	r5, r4, #3
  404e36:	f1c4 0000 	rsb	r0, r4, #0
  404e3a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  404e3e:	f014 0f04 	tst.w	r4, #4
  404e42:	f891 f040 	pld	[r1, #64]	; 0x40
  404e46:	fa0c f505 	lsl.w	r5, ip, r5
  404e4a:	ea62 0205 	orn	r2, r2, r5
  404e4e:	bf1c      	itt	ne
  404e50:	ea63 0305 	ornne	r3, r3, r5
  404e54:	4662      	movne	r2, ip
  404e56:	f04f 0400 	mov.w	r4, #0
  404e5a:	e7a9      	b.n	404db0 <strlen+0x30>

00404e5c <__ssprint_r>:
  404e5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404e60:	6893      	ldr	r3, [r2, #8]
  404e62:	b083      	sub	sp, #12
  404e64:	4690      	mov	r8, r2
  404e66:	2b00      	cmp	r3, #0
  404e68:	d070      	beq.n	404f4c <__ssprint_r+0xf0>
  404e6a:	4682      	mov	sl, r0
  404e6c:	460c      	mov	r4, r1
  404e6e:	6817      	ldr	r7, [r2, #0]
  404e70:	688d      	ldr	r5, [r1, #8]
  404e72:	6808      	ldr	r0, [r1, #0]
  404e74:	e042      	b.n	404efc <__ssprint_r+0xa0>
  404e76:	89a3      	ldrh	r3, [r4, #12]
  404e78:	f413 6f90 	tst.w	r3, #1152	; 0x480
  404e7c:	d02e      	beq.n	404edc <__ssprint_r+0x80>
  404e7e:	6965      	ldr	r5, [r4, #20]
  404e80:	6921      	ldr	r1, [r4, #16]
  404e82:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  404e86:	eba0 0b01 	sub.w	fp, r0, r1
  404e8a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  404e8e:	f10b 0001 	add.w	r0, fp, #1
  404e92:	106d      	asrs	r5, r5, #1
  404e94:	4430      	add	r0, r6
  404e96:	42a8      	cmp	r0, r5
  404e98:	462a      	mov	r2, r5
  404e9a:	bf84      	itt	hi
  404e9c:	4605      	movhi	r5, r0
  404e9e:	462a      	movhi	r2, r5
  404ea0:	055b      	lsls	r3, r3, #21
  404ea2:	d538      	bpl.n	404f16 <__ssprint_r+0xba>
  404ea4:	4611      	mov	r1, r2
  404ea6:	4650      	mov	r0, sl
  404ea8:	f7fe fff4 	bl	403e94 <_malloc_r>
  404eac:	2800      	cmp	r0, #0
  404eae:	d03c      	beq.n	404f2a <__ssprint_r+0xce>
  404eb0:	465a      	mov	r2, fp
  404eb2:	6921      	ldr	r1, [r4, #16]
  404eb4:	9001      	str	r0, [sp, #4]
  404eb6:	f7ff fb23 	bl	404500 <memcpy>
  404eba:	89a2      	ldrh	r2, [r4, #12]
  404ebc:	9b01      	ldr	r3, [sp, #4]
  404ebe:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  404ec2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  404ec6:	81a2      	strh	r2, [r4, #12]
  404ec8:	eba5 020b 	sub.w	r2, r5, fp
  404ecc:	eb03 000b 	add.w	r0, r3, fp
  404ed0:	6165      	str	r5, [r4, #20]
  404ed2:	6123      	str	r3, [r4, #16]
  404ed4:	6020      	str	r0, [r4, #0]
  404ed6:	60a2      	str	r2, [r4, #8]
  404ed8:	4635      	mov	r5, r6
  404eda:	46b3      	mov	fp, r6
  404edc:	465a      	mov	r2, fp
  404ede:	4649      	mov	r1, r9
  404ee0:	f000 fa18 	bl	405314 <memmove>
  404ee4:	f8d8 3008 	ldr.w	r3, [r8, #8]
  404ee8:	68a2      	ldr	r2, [r4, #8]
  404eea:	6820      	ldr	r0, [r4, #0]
  404eec:	1b55      	subs	r5, r2, r5
  404eee:	4458      	add	r0, fp
  404ef0:	1b9e      	subs	r6, r3, r6
  404ef2:	60a5      	str	r5, [r4, #8]
  404ef4:	6020      	str	r0, [r4, #0]
  404ef6:	f8c8 6008 	str.w	r6, [r8, #8]
  404efa:	b33e      	cbz	r6, 404f4c <__ssprint_r+0xf0>
  404efc:	687e      	ldr	r6, [r7, #4]
  404efe:	463b      	mov	r3, r7
  404f00:	3708      	adds	r7, #8
  404f02:	2e00      	cmp	r6, #0
  404f04:	d0fa      	beq.n	404efc <__ssprint_r+0xa0>
  404f06:	42ae      	cmp	r6, r5
  404f08:	f8d3 9000 	ldr.w	r9, [r3]
  404f0c:	46ab      	mov	fp, r5
  404f0e:	d2b2      	bcs.n	404e76 <__ssprint_r+0x1a>
  404f10:	4635      	mov	r5, r6
  404f12:	46b3      	mov	fp, r6
  404f14:	e7e2      	b.n	404edc <__ssprint_r+0x80>
  404f16:	4650      	mov	r0, sl
  404f18:	f000 fa60 	bl	4053dc <_realloc_r>
  404f1c:	4603      	mov	r3, r0
  404f1e:	2800      	cmp	r0, #0
  404f20:	d1d2      	bne.n	404ec8 <__ssprint_r+0x6c>
  404f22:	6921      	ldr	r1, [r4, #16]
  404f24:	4650      	mov	r0, sl
  404f26:	f000 f8f9 	bl	40511c <_free_r>
  404f2a:	230c      	movs	r3, #12
  404f2c:	f8ca 3000 	str.w	r3, [sl]
  404f30:	89a3      	ldrh	r3, [r4, #12]
  404f32:	2200      	movs	r2, #0
  404f34:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404f38:	f04f 30ff 	mov.w	r0, #4294967295
  404f3c:	81a3      	strh	r3, [r4, #12]
  404f3e:	f8c8 2008 	str.w	r2, [r8, #8]
  404f42:	f8c8 2004 	str.w	r2, [r8, #4]
  404f46:	b003      	add	sp, #12
  404f48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404f4c:	2000      	movs	r0, #0
  404f4e:	f8c8 0004 	str.w	r0, [r8, #4]
  404f52:	b003      	add	sp, #12
  404f54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404f58 <__register_exitproc>:
  404f58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404f5c:	4d2c      	ldr	r5, [pc, #176]	; (405010 <__register_exitproc+0xb8>)
  404f5e:	4606      	mov	r6, r0
  404f60:	6828      	ldr	r0, [r5, #0]
  404f62:	4698      	mov	r8, r3
  404f64:	460f      	mov	r7, r1
  404f66:	4691      	mov	r9, r2
  404f68:	f7fe ff90 	bl	403e8c <__retarget_lock_acquire_recursive>
  404f6c:	4b29      	ldr	r3, [pc, #164]	; (405014 <__register_exitproc+0xbc>)
  404f6e:	681c      	ldr	r4, [r3, #0]
  404f70:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  404f74:	2b00      	cmp	r3, #0
  404f76:	d03e      	beq.n	404ff6 <__register_exitproc+0x9e>
  404f78:	685a      	ldr	r2, [r3, #4]
  404f7a:	2a1f      	cmp	r2, #31
  404f7c:	dc1c      	bgt.n	404fb8 <__register_exitproc+0x60>
  404f7e:	f102 0e01 	add.w	lr, r2, #1
  404f82:	b176      	cbz	r6, 404fa2 <__register_exitproc+0x4a>
  404f84:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  404f88:	2401      	movs	r4, #1
  404f8a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  404f8e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  404f92:	4094      	lsls	r4, r2
  404f94:	4320      	orrs	r0, r4
  404f96:	2e02      	cmp	r6, #2
  404f98:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  404f9c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  404fa0:	d023      	beq.n	404fea <__register_exitproc+0x92>
  404fa2:	3202      	adds	r2, #2
  404fa4:	f8c3 e004 	str.w	lr, [r3, #4]
  404fa8:	6828      	ldr	r0, [r5, #0]
  404faa:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  404fae:	f7fe ff6f 	bl	403e90 <__retarget_lock_release_recursive>
  404fb2:	2000      	movs	r0, #0
  404fb4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404fb8:	4b17      	ldr	r3, [pc, #92]	; (405018 <__register_exitproc+0xc0>)
  404fba:	b30b      	cbz	r3, 405000 <__register_exitproc+0xa8>
  404fbc:	f44f 70c8 	mov.w	r0, #400	; 0x190
  404fc0:	f3af 8000 	nop.w
  404fc4:	4603      	mov	r3, r0
  404fc6:	b1d8      	cbz	r0, 405000 <__register_exitproc+0xa8>
  404fc8:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  404fcc:	6002      	str	r2, [r0, #0]
  404fce:	2100      	movs	r1, #0
  404fd0:	6041      	str	r1, [r0, #4]
  404fd2:	460a      	mov	r2, r1
  404fd4:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  404fd8:	f04f 0e01 	mov.w	lr, #1
  404fdc:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  404fe0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  404fe4:	2e00      	cmp	r6, #0
  404fe6:	d0dc      	beq.n	404fa2 <__register_exitproc+0x4a>
  404fe8:	e7cc      	b.n	404f84 <__register_exitproc+0x2c>
  404fea:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  404fee:	430c      	orrs	r4, r1
  404ff0:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  404ff4:	e7d5      	b.n	404fa2 <__register_exitproc+0x4a>
  404ff6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  404ffa:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  404ffe:	e7bb      	b.n	404f78 <__register_exitproc+0x20>
  405000:	6828      	ldr	r0, [r5, #0]
  405002:	f7fe ff45 	bl	403e90 <__retarget_lock_release_recursive>
  405006:	f04f 30ff 	mov.w	r0, #4294967295
  40500a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40500e:	bf00      	nop
  405010:	20000440 	.word	0x20000440
  405014:	00406fd4 	.word	0x00406fd4
  405018:	00000000 	.word	0x00000000

0040501c <_calloc_r>:
  40501c:	b510      	push	{r4, lr}
  40501e:	fb02 f101 	mul.w	r1, r2, r1
  405022:	f7fe ff37 	bl	403e94 <_malloc_r>
  405026:	4604      	mov	r4, r0
  405028:	b1d8      	cbz	r0, 405062 <_calloc_r+0x46>
  40502a:	f850 2c04 	ldr.w	r2, [r0, #-4]
  40502e:	f022 0203 	bic.w	r2, r2, #3
  405032:	3a04      	subs	r2, #4
  405034:	2a24      	cmp	r2, #36	; 0x24
  405036:	d818      	bhi.n	40506a <_calloc_r+0x4e>
  405038:	2a13      	cmp	r2, #19
  40503a:	d914      	bls.n	405066 <_calloc_r+0x4a>
  40503c:	2300      	movs	r3, #0
  40503e:	2a1b      	cmp	r2, #27
  405040:	6003      	str	r3, [r0, #0]
  405042:	6043      	str	r3, [r0, #4]
  405044:	d916      	bls.n	405074 <_calloc_r+0x58>
  405046:	2a24      	cmp	r2, #36	; 0x24
  405048:	6083      	str	r3, [r0, #8]
  40504a:	60c3      	str	r3, [r0, #12]
  40504c:	bf11      	iteee	ne
  40504e:	f100 0210 	addne.w	r2, r0, #16
  405052:	6103      	streq	r3, [r0, #16]
  405054:	6143      	streq	r3, [r0, #20]
  405056:	f100 0218 	addeq.w	r2, r0, #24
  40505a:	2300      	movs	r3, #0
  40505c:	6013      	str	r3, [r2, #0]
  40505e:	6053      	str	r3, [r2, #4]
  405060:	6093      	str	r3, [r2, #8]
  405062:	4620      	mov	r0, r4
  405064:	bd10      	pop	{r4, pc}
  405066:	4602      	mov	r2, r0
  405068:	e7f7      	b.n	40505a <_calloc_r+0x3e>
  40506a:	2100      	movs	r1, #0
  40506c:	f7fc fa12 	bl	401494 <memset>
  405070:	4620      	mov	r0, r4
  405072:	bd10      	pop	{r4, pc}
  405074:	f100 0208 	add.w	r2, r0, #8
  405078:	e7ef      	b.n	40505a <_calloc_r+0x3e>
  40507a:	bf00      	nop

0040507c <_malloc_trim_r>:
  40507c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40507e:	4f24      	ldr	r7, [pc, #144]	; (405110 <_malloc_trim_r+0x94>)
  405080:	460c      	mov	r4, r1
  405082:	4606      	mov	r6, r0
  405084:	f7ff fad6 	bl	404634 <__malloc_lock>
  405088:	68bb      	ldr	r3, [r7, #8]
  40508a:	685d      	ldr	r5, [r3, #4]
  40508c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  405090:	310f      	adds	r1, #15
  405092:	f025 0503 	bic.w	r5, r5, #3
  405096:	4429      	add	r1, r5
  405098:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40509c:	f021 010f 	bic.w	r1, r1, #15
  4050a0:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  4050a4:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  4050a8:	db07      	blt.n	4050ba <_malloc_trim_r+0x3e>
  4050aa:	2100      	movs	r1, #0
  4050ac:	4630      	mov	r0, r6
  4050ae:	f7ff fdc7 	bl	404c40 <_sbrk_r>
  4050b2:	68bb      	ldr	r3, [r7, #8]
  4050b4:	442b      	add	r3, r5
  4050b6:	4298      	cmp	r0, r3
  4050b8:	d004      	beq.n	4050c4 <_malloc_trim_r+0x48>
  4050ba:	4630      	mov	r0, r6
  4050bc:	f7ff fac0 	bl	404640 <__malloc_unlock>
  4050c0:	2000      	movs	r0, #0
  4050c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4050c4:	4261      	negs	r1, r4
  4050c6:	4630      	mov	r0, r6
  4050c8:	f7ff fdba 	bl	404c40 <_sbrk_r>
  4050cc:	3001      	adds	r0, #1
  4050ce:	d00d      	beq.n	4050ec <_malloc_trim_r+0x70>
  4050d0:	4b10      	ldr	r3, [pc, #64]	; (405114 <_malloc_trim_r+0x98>)
  4050d2:	68ba      	ldr	r2, [r7, #8]
  4050d4:	6819      	ldr	r1, [r3, #0]
  4050d6:	1b2d      	subs	r5, r5, r4
  4050d8:	f045 0501 	orr.w	r5, r5, #1
  4050dc:	4630      	mov	r0, r6
  4050de:	1b09      	subs	r1, r1, r4
  4050e0:	6055      	str	r5, [r2, #4]
  4050e2:	6019      	str	r1, [r3, #0]
  4050e4:	f7ff faac 	bl	404640 <__malloc_unlock>
  4050e8:	2001      	movs	r0, #1
  4050ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4050ec:	2100      	movs	r1, #0
  4050ee:	4630      	mov	r0, r6
  4050f0:	f7ff fda6 	bl	404c40 <_sbrk_r>
  4050f4:	68ba      	ldr	r2, [r7, #8]
  4050f6:	1a83      	subs	r3, r0, r2
  4050f8:	2b0f      	cmp	r3, #15
  4050fa:	ddde      	ble.n	4050ba <_malloc_trim_r+0x3e>
  4050fc:	4c06      	ldr	r4, [pc, #24]	; (405118 <_malloc_trim_r+0x9c>)
  4050fe:	4905      	ldr	r1, [pc, #20]	; (405114 <_malloc_trim_r+0x98>)
  405100:	6824      	ldr	r4, [r4, #0]
  405102:	f043 0301 	orr.w	r3, r3, #1
  405106:	1b00      	subs	r0, r0, r4
  405108:	6053      	str	r3, [r2, #4]
  40510a:	6008      	str	r0, [r1, #0]
  40510c:	e7d5      	b.n	4050ba <_malloc_trim_r+0x3e>
  40510e:	bf00      	nop
  405110:	20000444 	.word	0x20000444
  405114:	20000a74 	.word	0x20000a74
  405118:	2000084c 	.word	0x2000084c

0040511c <_free_r>:
  40511c:	2900      	cmp	r1, #0
  40511e:	d044      	beq.n	4051aa <_free_r+0x8e>
  405120:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405124:	460d      	mov	r5, r1
  405126:	4680      	mov	r8, r0
  405128:	f7ff fa84 	bl	404634 <__malloc_lock>
  40512c:	f855 7c04 	ldr.w	r7, [r5, #-4]
  405130:	4969      	ldr	r1, [pc, #420]	; (4052d8 <_free_r+0x1bc>)
  405132:	f027 0301 	bic.w	r3, r7, #1
  405136:	f1a5 0408 	sub.w	r4, r5, #8
  40513a:	18e2      	adds	r2, r4, r3
  40513c:	688e      	ldr	r6, [r1, #8]
  40513e:	6850      	ldr	r0, [r2, #4]
  405140:	42b2      	cmp	r2, r6
  405142:	f020 0003 	bic.w	r0, r0, #3
  405146:	d05e      	beq.n	405206 <_free_r+0xea>
  405148:	07fe      	lsls	r6, r7, #31
  40514a:	6050      	str	r0, [r2, #4]
  40514c:	d40b      	bmi.n	405166 <_free_r+0x4a>
  40514e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  405152:	1be4      	subs	r4, r4, r7
  405154:	f101 0e08 	add.w	lr, r1, #8
  405158:	68a5      	ldr	r5, [r4, #8]
  40515a:	4575      	cmp	r5, lr
  40515c:	443b      	add	r3, r7
  40515e:	d06d      	beq.n	40523c <_free_r+0x120>
  405160:	68e7      	ldr	r7, [r4, #12]
  405162:	60ef      	str	r7, [r5, #12]
  405164:	60bd      	str	r5, [r7, #8]
  405166:	1815      	adds	r5, r2, r0
  405168:	686d      	ldr	r5, [r5, #4]
  40516a:	07ed      	lsls	r5, r5, #31
  40516c:	d53e      	bpl.n	4051ec <_free_r+0xd0>
  40516e:	f043 0201 	orr.w	r2, r3, #1
  405172:	6062      	str	r2, [r4, #4]
  405174:	50e3      	str	r3, [r4, r3]
  405176:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40517a:	d217      	bcs.n	4051ac <_free_r+0x90>
  40517c:	08db      	lsrs	r3, r3, #3
  40517e:	1c58      	adds	r0, r3, #1
  405180:	109a      	asrs	r2, r3, #2
  405182:	684d      	ldr	r5, [r1, #4]
  405184:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  405188:	60a7      	str	r7, [r4, #8]
  40518a:	2301      	movs	r3, #1
  40518c:	4093      	lsls	r3, r2
  40518e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  405192:	432b      	orrs	r3, r5
  405194:	3a08      	subs	r2, #8
  405196:	60e2      	str	r2, [r4, #12]
  405198:	604b      	str	r3, [r1, #4]
  40519a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40519e:	60fc      	str	r4, [r7, #12]
  4051a0:	4640      	mov	r0, r8
  4051a2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4051a6:	f7ff ba4b 	b.w	404640 <__malloc_unlock>
  4051aa:	4770      	bx	lr
  4051ac:	0a5a      	lsrs	r2, r3, #9
  4051ae:	2a04      	cmp	r2, #4
  4051b0:	d852      	bhi.n	405258 <_free_r+0x13c>
  4051b2:	099a      	lsrs	r2, r3, #6
  4051b4:	f102 0739 	add.w	r7, r2, #57	; 0x39
  4051b8:	00ff      	lsls	r7, r7, #3
  4051ba:	f102 0538 	add.w	r5, r2, #56	; 0x38
  4051be:	19c8      	adds	r0, r1, r7
  4051c0:	59ca      	ldr	r2, [r1, r7]
  4051c2:	3808      	subs	r0, #8
  4051c4:	4290      	cmp	r0, r2
  4051c6:	d04f      	beq.n	405268 <_free_r+0x14c>
  4051c8:	6851      	ldr	r1, [r2, #4]
  4051ca:	f021 0103 	bic.w	r1, r1, #3
  4051ce:	428b      	cmp	r3, r1
  4051d0:	d232      	bcs.n	405238 <_free_r+0x11c>
  4051d2:	6892      	ldr	r2, [r2, #8]
  4051d4:	4290      	cmp	r0, r2
  4051d6:	d1f7      	bne.n	4051c8 <_free_r+0xac>
  4051d8:	68c3      	ldr	r3, [r0, #12]
  4051da:	60a0      	str	r0, [r4, #8]
  4051dc:	60e3      	str	r3, [r4, #12]
  4051de:	609c      	str	r4, [r3, #8]
  4051e0:	60c4      	str	r4, [r0, #12]
  4051e2:	4640      	mov	r0, r8
  4051e4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4051e8:	f7ff ba2a 	b.w	404640 <__malloc_unlock>
  4051ec:	6895      	ldr	r5, [r2, #8]
  4051ee:	4f3b      	ldr	r7, [pc, #236]	; (4052dc <_free_r+0x1c0>)
  4051f0:	42bd      	cmp	r5, r7
  4051f2:	4403      	add	r3, r0
  4051f4:	d040      	beq.n	405278 <_free_r+0x15c>
  4051f6:	68d0      	ldr	r0, [r2, #12]
  4051f8:	60e8      	str	r0, [r5, #12]
  4051fa:	f043 0201 	orr.w	r2, r3, #1
  4051fe:	6085      	str	r5, [r0, #8]
  405200:	6062      	str	r2, [r4, #4]
  405202:	50e3      	str	r3, [r4, r3]
  405204:	e7b7      	b.n	405176 <_free_r+0x5a>
  405206:	07ff      	lsls	r7, r7, #31
  405208:	4403      	add	r3, r0
  40520a:	d407      	bmi.n	40521c <_free_r+0x100>
  40520c:	f855 2c08 	ldr.w	r2, [r5, #-8]
  405210:	1aa4      	subs	r4, r4, r2
  405212:	4413      	add	r3, r2
  405214:	68a0      	ldr	r0, [r4, #8]
  405216:	68e2      	ldr	r2, [r4, #12]
  405218:	60c2      	str	r2, [r0, #12]
  40521a:	6090      	str	r0, [r2, #8]
  40521c:	4a30      	ldr	r2, [pc, #192]	; (4052e0 <_free_r+0x1c4>)
  40521e:	6812      	ldr	r2, [r2, #0]
  405220:	f043 0001 	orr.w	r0, r3, #1
  405224:	4293      	cmp	r3, r2
  405226:	6060      	str	r0, [r4, #4]
  405228:	608c      	str	r4, [r1, #8]
  40522a:	d3b9      	bcc.n	4051a0 <_free_r+0x84>
  40522c:	4b2d      	ldr	r3, [pc, #180]	; (4052e4 <_free_r+0x1c8>)
  40522e:	4640      	mov	r0, r8
  405230:	6819      	ldr	r1, [r3, #0]
  405232:	f7ff ff23 	bl	40507c <_malloc_trim_r>
  405236:	e7b3      	b.n	4051a0 <_free_r+0x84>
  405238:	4610      	mov	r0, r2
  40523a:	e7cd      	b.n	4051d8 <_free_r+0xbc>
  40523c:	1811      	adds	r1, r2, r0
  40523e:	6849      	ldr	r1, [r1, #4]
  405240:	07c9      	lsls	r1, r1, #31
  405242:	d444      	bmi.n	4052ce <_free_r+0x1b2>
  405244:	6891      	ldr	r1, [r2, #8]
  405246:	68d2      	ldr	r2, [r2, #12]
  405248:	60ca      	str	r2, [r1, #12]
  40524a:	4403      	add	r3, r0
  40524c:	f043 0001 	orr.w	r0, r3, #1
  405250:	6091      	str	r1, [r2, #8]
  405252:	6060      	str	r0, [r4, #4]
  405254:	50e3      	str	r3, [r4, r3]
  405256:	e7a3      	b.n	4051a0 <_free_r+0x84>
  405258:	2a14      	cmp	r2, #20
  40525a:	d816      	bhi.n	40528a <_free_r+0x16e>
  40525c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405260:	00ff      	lsls	r7, r7, #3
  405262:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  405266:	e7aa      	b.n	4051be <_free_r+0xa2>
  405268:	10aa      	asrs	r2, r5, #2
  40526a:	2301      	movs	r3, #1
  40526c:	684d      	ldr	r5, [r1, #4]
  40526e:	4093      	lsls	r3, r2
  405270:	432b      	orrs	r3, r5
  405272:	604b      	str	r3, [r1, #4]
  405274:	4603      	mov	r3, r0
  405276:	e7b0      	b.n	4051da <_free_r+0xbe>
  405278:	f043 0201 	orr.w	r2, r3, #1
  40527c:	614c      	str	r4, [r1, #20]
  40527e:	610c      	str	r4, [r1, #16]
  405280:	60e5      	str	r5, [r4, #12]
  405282:	60a5      	str	r5, [r4, #8]
  405284:	6062      	str	r2, [r4, #4]
  405286:	50e3      	str	r3, [r4, r3]
  405288:	e78a      	b.n	4051a0 <_free_r+0x84>
  40528a:	2a54      	cmp	r2, #84	; 0x54
  40528c:	d806      	bhi.n	40529c <_free_r+0x180>
  40528e:	0b1a      	lsrs	r2, r3, #12
  405290:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405294:	00ff      	lsls	r7, r7, #3
  405296:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40529a:	e790      	b.n	4051be <_free_r+0xa2>
  40529c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4052a0:	d806      	bhi.n	4052b0 <_free_r+0x194>
  4052a2:	0bda      	lsrs	r2, r3, #15
  4052a4:	f102 0778 	add.w	r7, r2, #120	; 0x78
  4052a8:	00ff      	lsls	r7, r7, #3
  4052aa:	f102 0577 	add.w	r5, r2, #119	; 0x77
  4052ae:	e786      	b.n	4051be <_free_r+0xa2>
  4052b0:	f240 5054 	movw	r0, #1364	; 0x554
  4052b4:	4282      	cmp	r2, r0
  4052b6:	d806      	bhi.n	4052c6 <_free_r+0x1aa>
  4052b8:	0c9a      	lsrs	r2, r3, #18
  4052ba:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  4052be:	00ff      	lsls	r7, r7, #3
  4052c0:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  4052c4:	e77b      	b.n	4051be <_free_r+0xa2>
  4052c6:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  4052ca:	257e      	movs	r5, #126	; 0x7e
  4052cc:	e777      	b.n	4051be <_free_r+0xa2>
  4052ce:	f043 0101 	orr.w	r1, r3, #1
  4052d2:	6061      	str	r1, [r4, #4]
  4052d4:	6013      	str	r3, [r2, #0]
  4052d6:	e763      	b.n	4051a0 <_free_r+0x84>
  4052d8:	20000444 	.word	0x20000444
  4052dc:	2000044c 	.word	0x2000044c
  4052e0:	20000850 	.word	0x20000850
  4052e4:	20000aa4 	.word	0x20000aa4

004052e8 <__ascii_mbtowc>:
  4052e8:	b082      	sub	sp, #8
  4052ea:	b149      	cbz	r1, 405300 <__ascii_mbtowc+0x18>
  4052ec:	b15a      	cbz	r2, 405306 <__ascii_mbtowc+0x1e>
  4052ee:	b16b      	cbz	r3, 40530c <__ascii_mbtowc+0x24>
  4052f0:	7813      	ldrb	r3, [r2, #0]
  4052f2:	600b      	str	r3, [r1, #0]
  4052f4:	7812      	ldrb	r2, [r2, #0]
  4052f6:	1c10      	adds	r0, r2, #0
  4052f8:	bf18      	it	ne
  4052fa:	2001      	movne	r0, #1
  4052fc:	b002      	add	sp, #8
  4052fe:	4770      	bx	lr
  405300:	a901      	add	r1, sp, #4
  405302:	2a00      	cmp	r2, #0
  405304:	d1f3      	bne.n	4052ee <__ascii_mbtowc+0x6>
  405306:	4610      	mov	r0, r2
  405308:	b002      	add	sp, #8
  40530a:	4770      	bx	lr
  40530c:	f06f 0001 	mvn.w	r0, #1
  405310:	e7f4      	b.n	4052fc <__ascii_mbtowc+0x14>
  405312:	bf00      	nop

00405314 <memmove>:
  405314:	4288      	cmp	r0, r1
  405316:	b5f0      	push	{r4, r5, r6, r7, lr}
  405318:	d90d      	bls.n	405336 <memmove+0x22>
  40531a:	188b      	adds	r3, r1, r2
  40531c:	4298      	cmp	r0, r3
  40531e:	d20a      	bcs.n	405336 <memmove+0x22>
  405320:	1884      	adds	r4, r0, r2
  405322:	2a00      	cmp	r2, #0
  405324:	d051      	beq.n	4053ca <memmove+0xb6>
  405326:	4622      	mov	r2, r4
  405328:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  40532c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  405330:	4299      	cmp	r1, r3
  405332:	d1f9      	bne.n	405328 <memmove+0x14>
  405334:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405336:	2a0f      	cmp	r2, #15
  405338:	d948      	bls.n	4053cc <memmove+0xb8>
  40533a:	ea41 0300 	orr.w	r3, r1, r0
  40533e:	079b      	lsls	r3, r3, #30
  405340:	d146      	bne.n	4053d0 <memmove+0xbc>
  405342:	f100 0410 	add.w	r4, r0, #16
  405346:	f101 0310 	add.w	r3, r1, #16
  40534a:	4615      	mov	r5, r2
  40534c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405350:	f844 6c10 	str.w	r6, [r4, #-16]
  405354:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405358:	f844 6c0c 	str.w	r6, [r4, #-12]
  40535c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405360:	f844 6c08 	str.w	r6, [r4, #-8]
  405364:	3d10      	subs	r5, #16
  405366:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40536a:	f844 6c04 	str.w	r6, [r4, #-4]
  40536e:	2d0f      	cmp	r5, #15
  405370:	f103 0310 	add.w	r3, r3, #16
  405374:	f104 0410 	add.w	r4, r4, #16
  405378:	d8e8      	bhi.n	40534c <memmove+0x38>
  40537a:	f1a2 0310 	sub.w	r3, r2, #16
  40537e:	f023 030f 	bic.w	r3, r3, #15
  405382:	f002 0e0f 	and.w	lr, r2, #15
  405386:	3310      	adds	r3, #16
  405388:	f1be 0f03 	cmp.w	lr, #3
  40538c:	4419      	add	r1, r3
  40538e:	4403      	add	r3, r0
  405390:	d921      	bls.n	4053d6 <memmove+0xc2>
  405392:	1f1e      	subs	r6, r3, #4
  405394:	460d      	mov	r5, r1
  405396:	4674      	mov	r4, lr
  405398:	3c04      	subs	r4, #4
  40539a:	f855 7b04 	ldr.w	r7, [r5], #4
  40539e:	f846 7f04 	str.w	r7, [r6, #4]!
  4053a2:	2c03      	cmp	r4, #3
  4053a4:	d8f8      	bhi.n	405398 <memmove+0x84>
  4053a6:	f1ae 0404 	sub.w	r4, lr, #4
  4053aa:	f024 0403 	bic.w	r4, r4, #3
  4053ae:	3404      	adds	r4, #4
  4053b0:	4421      	add	r1, r4
  4053b2:	4423      	add	r3, r4
  4053b4:	f002 0203 	and.w	r2, r2, #3
  4053b8:	b162      	cbz	r2, 4053d4 <memmove+0xc0>
  4053ba:	3b01      	subs	r3, #1
  4053bc:	440a      	add	r2, r1
  4053be:	f811 4b01 	ldrb.w	r4, [r1], #1
  4053c2:	f803 4f01 	strb.w	r4, [r3, #1]!
  4053c6:	428a      	cmp	r2, r1
  4053c8:	d1f9      	bne.n	4053be <memmove+0xaa>
  4053ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4053cc:	4603      	mov	r3, r0
  4053ce:	e7f3      	b.n	4053b8 <memmove+0xa4>
  4053d0:	4603      	mov	r3, r0
  4053d2:	e7f2      	b.n	4053ba <memmove+0xa6>
  4053d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4053d6:	4672      	mov	r2, lr
  4053d8:	e7ee      	b.n	4053b8 <memmove+0xa4>
  4053da:	bf00      	nop

004053dc <_realloc_r>:
  4053dc:	2900      	cmp	r1, #0
  4053de:	f000 8095 	beq.w	40550c <_realloc_r+0x130>
  4053e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4053e6:	460d      	mov	r5, r1
  4053e8:	4616      	mov	r6, r2
  4053ea:	b083      	sub	sp, #12
  4053ec:	4680      	mov	r8, r0
  4053ee:	f106 070b 	add.w	r7, r6, #11
  4053f2:	f7ff f91f 	bl	404634 <__malloc_lock>
  4053f6:	f855 ec04 	ldr.w	lr, [r5, #-4]
  4053fa:	2f16      	cmp	r7, #22
  4053fc:	f02e 0403 	bic.w	r4, lr, #3
  405400:	f1a5 0908 	sub.w	r9, r5, #8
  405404:	d83c      	bhi.n	405480 <_realloc_r+0xa4>
  405406:	2210      	movs	r2, #16
  405408:	4617      	mov	r7, r2
  40540a:	42be      	cmp	r6, r7
  40540c:	d83d      	bhi.n	40548a <_realloc_r+0xae>
  40540e:	4294      	cmp	r4, r2
  405410:	da43      	bge.n	40549a <_realloc_r+0xbe>
  405412:	4bc4      	ldr	r3, [pc, #784]	; (405724 <_realloc_r+0x348>)
  405414:	6899      	ldr	r1, [r3, #8]
  405416:	eb09 0004 	add.w	r0, r9, r4
  40541a:	4288      	cmp	r0, r1
  40541c:	f000 80b4 	beq.w	405588 <_realloc_r+0x1ac>
  405420:	6843      	ldr	r3, [r0, #4]
  405422:	f023 0101 	bic.w	r1, r3, #1
  405426:	4401      	add	r1, r0
  405428:	6849      	ldr	r1, [r1, #4]
  40542a:	07c9      	lsls	r1, r1, #31
  40542c:	d54c      	bpl.n	4054c8 <_realloc_r+0xec>
  40542e:	f01e 0f01 	tst.w	lr, #1
  405432:	f000 809b 	beq.w	40556c <_realloc_r+0x190>
  405436:	4631      	mov	r1, r6
  405438:	4640      	mov	r0, r8
  40543a:	f7fe fd2b 	bl	403e94 <_malloc_r>
  40543e:	4606      	mov	r6, r0
  405440:	2800      	cmp	r0, #0
  405442:	d03a      	beq.n	4054ba <_realloc_r+0xde>
  405444:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405448:	f023 0301 	bic.w	r3, r3, #1
  40544c:	444b      	add	r3, r9
  40544e:	f1a0 0208 	sub.w	r2, r0, #8
  405452:	429a      	cmp	r2, r3
  405454:	f000 8121 	beq.w	40569a <_realloc_r+0x2be>
  405458:	1f22      	subs	r2, r4, #4
  40545a:	2a24      	cmp	r2, #36	; 0x24
  40545c:	f200 8107 	bhi.w	40566e <_realloc_r+0x292>
  405460:	2a13      	cmp	r2, #19
  405462:	f200 80db 	bhi.w	40561c <_realloc_r+0x240>
  405466:	4603      	mov	r3, r0
  405468:	462a      	mov	r2, r5
  40546a:	6811      	ldr	r1, [r2, #0]
  40546c:	6019      	str	r1, [r3, #0]
  40546e:	6851      	ldr	r1, [r2, #4]
  405470:	6059      	str	r1, [r3, #4]
  405472:	6892      	ldr	r2, [r2, #8]
  405474:	609a      	str	r2, [r3, #8]
  405476:	4629      	mov	r1, r5
  405478:	4640      	mov	r0, r8
  40547a:	f7ff fe4f 	bl	40511c <_free_r>
  40547e:	e01c      	b.n	4054ba <_realloc_r+0xde>
  405480:	f027 0707 	bic.w	r7, r7, #7
  405484:	2f00      	cmp	r7, #0
  405486:	463a      	mov	r2, r7
  405488:	dabf      	bge.n	40540a <_realloc_r+0x2e>
  40548a:	2600      	movs	r6, #0
  40548c:	230c      	movs	r3, #12
  40548e:	4630      	mov	r0, r6
  405490:	f8c8 3000 	str.w	r3, [r8]
  405494:	b003      	add	sp, #12
  405496:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40549a:	462e      	mov	r6, r5
  40549c:	1be3      	subs	r3, r4, r7
  40549e:	2b0f      	cmp	r3, #15
  4054a0:	d81e      	bhi.n	4054e0 <_realloc_r+0x104>
  4054a2:	f8d9 3004 	ldr.w	r3, [r9, #4]
  4054a6:	f003 0301 	and.w	r3, r3, #1
  4054aa:	4323      	orrs	r3, r4
  4054ac:	444c      	add	r4, r9
  4054ae:	f8c9 3004 	str.w	r3, [r9, #4]
  4054b2:	6863      	ldr	r3, [r4, #4]
  4054b4:	f043 0301 	orr.w	r3, r3, #1
  4054b8:	6063      	str	r3, [r4, #4]
  4054ba:	4640      	mov	r0, r8
  4054bc:	f7ff f8c0 	bl	404640 <__malloc_unlock>
  4054c0:	4630      	mov	r0, r6
  4054c2:	b003      	add	sp, #12
  4054c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4054c8:	f023 0303 	bic.w	r3, r3, #3
  4054cc:	18e1      	adds	r1, r4, r3
  4054ce:	4291      	cmp	r1, r2
  4054d0:	db1f      	blt.n	405512 <_realloc_r+0x136>
  4054d2:	68c3      	ldr	r3, [r0, #12]
  4054d4:	6882      	ldr	r2, [r0, #8]
  4054d6:	462e      	mov	r6, r5
  4054d8:	60d3      	str	r3, [r2, #12]
  4054da:	460c      	mov	r4, r1
  4054dc:	609a      	str	r2, [r3, #8]
  4054de:	e7dd      	b.n	40549c <_realloc_r+0xc0>
  4054e0:	f8d9 2004 	ldr.w	r2, [r9, #4]
  4054e4:	eb09 0107 	add.w	r1, r9, r7
  4054e8:	f002 0201 	and.w	r2, r2, #1
  4054ec:	444c      	add	r4, r9
  4054ee:	f043 0301 	orr.w	r3, r3, #1
  4054f2:	4317      	orrs	r7, r2
  4054f4:	f8c9 7004 	str.w	r7, [r9, #4]
  4054f8:	604b      	str	r3, [r1, #4]
  4054fa:	6863      	ldr	r3, [r4, #4]
  4054fc:	f043 0301 	orr.w	r3, r3, #1
  405500:	3108      	adds	r1, #8
  405502:	6063      	str	r3, [r4, #4]
  405504:	4640      	mov	r0, r8
  405506:	f7ff fe09 	bl	40511c <_free_r>
  40550a:	e7d6      	b.n	4054ba <_realloc_r+0xde>
  40550c:	4611      	mov	r1, r2
  40550e:	f7fe bcc1 	b.w	403e94 <_malloc_r>
  405512:	f01e 0f01 	tst.w	lr, #1
  405516:	d18e      	bne.n	405436 <_realloc_r+0x5a>
  405518:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40551c:	eba9 0a01 	sub.w	sl, r9, r1
  405520:	f8da 1004 	ldr.w	r1, [sl, #4]
  405524:	f021 0103 	bic.w	r1, r1, #3
  405528:	440b      	add	r3, r1
  40552a:	4423      	add	r3, r4
  40552c:	4293      	cmp	r3, r2
  40552e:	db25      	blt.n	40557c <_realloc_r+0x1a0>
  405530:	68c2      	ldr	r2, [r0, #12]
  405532:	6881      	ldr	r1, [r0, #8]
  405534:	4656      	mov	r6, sl
  405536:	60ca      	str	r2, [r1, #12]
  405538:	6091      	str	r1, [r2, #8]
  40553a:	f8da 100c 	ldr.w	r1, [sl, #12]
  40553e:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405542:	1f22      	subs	r2, r4, #4
  405544:	2a24      	cmp	r2, #36	; 0x24
  405546:	60c1      	str	r1, [r0, #12]
  405548:	6088      	str	r0, [r1, #8]
  40554a:	f200 8094 	bhi.w	405676 <_realloc_r+0x29a>
  40554e:	2a13      	cmp	r2, #19
  405550:	d96f      	bls.n	405632 <_realloc_r+0x256>
  405552:	6829      	ldr	r1, [r5, #0]
  405554:	f8ca 1008 	str.w	r1, [sl, #8]
  405558:	6869      	ldr	r1, [r5, #4]
  40555a:	f8ca 100c 	str.w	r1, [sl, #12]
  40555e:	2a1b      	cmp	r2, #27
  405560:	f200 80a2 	bhi.w	4056a8 <_realloc_r+0x2cc>
  405564:	3508      	adds	r5, #8
  405566:	f10a 0210 	add.w	r2, sl, #16
  40556a:	e063      	b.n	405634 <_realloc_r+0x258>
  40556c:	f855 3c08 	ldr.w	r3, [r5, #-8]
  405570:	eba9 0a03 	sub.w	sl, r9, r3
  405574:	f8da 1004 	ldr.w	r1, [sl, #4]
  405578:	f021 0103 	bic.w	r1, r1, #3
  40557c:	1863      	adds	r3, r4, r1
  40557e:	4293      	cmp	r3, r2
  405580:	f6ff af59 	blt.w	405436 <_realloc_r+0x5a>
  405584:	4656      	mov	r6, sl
  405586:	e7d8      	b.n	40553a <_realloc_r+0x15e>
  405588:	6841      	ldr	r1, [r0, #4]
  40558a:	f021 0b03 	bic.w	fp, r1, #3
  40558e:	44a3      	add	fp, r4
  405590:	f107 0010 	add.w	r0, r7, #16
  405594:	4583      	cmp	fp, r0
  405596:	da56      	bge.n	405646 <_realloc_r+0x26a>
  405598:	f01e 0f01 	tst.w	lr, #1
  40559c:	f47f af4b 	bne.w	405436 <_realloc_r+0x5a>
  4055a0:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4055a4:	eba9 0a01 	sub.w	sl, r9, r1
  4055a8:	f8da 1004 	ldr.w	r1, [sl, #4]
  4055ac:	f021 0103 	bic.w	r1, r1, #3
  4055b0:	448b      	add	fp, r1
  4055b2:	4558      	cmp	r0, fp
  4055b4:	dce2      	bgt.n	40557c <_realloc_r+0x1a0>
  4055b6:	4656      	mov	r6, sl
  4055b8:	f8da 100c 	ldr.w	r1, [sl, #12]
  4055bc:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4055c0:	1f22      	subs	r2, r4, #4
  4055c2:	2a24      	cmp	r2, #36	; 0x24
  4055c4:	60c1      	str	r1, [r0, #12]
  4055c6:	6088      	str	r0, [r1, #8]
  4055c8:	f200 808f 	bhi.w	4056ea <_realloc_r+0x30e>
  4055cc:	2a13      	cmp	r2, #19
  4055ce:	f240 808a 	bls.w	4056e6 <_realloc_r+0x30a>
  4055d2:	6829      	ldr	r1, [r5, #0]
  4055d4:	f8ca 1008 	str.w	r1, [sl, #8]
  4055d8:	6869      	ldr	r1, [r5, #4]
  4055da:	f8ca 100c 	str.w	r1, [sl, #12]
  4055de:	2a1b      	cmp	r2, #27
  4055e0:	f200 808a 	bhi.w	4056f8 <_realloc_r+0x31c>
  4055e4:	3508      	adds	r5, #8
  4055e6:	f10a 0210 	add.w	r2, sl, #16
  4055ea:	6829      	ldr	r1, [r5, #0]
  4055ec:	6011      	str	r1, [r2, #0]
  4055ee:	6869      	ldr	r1, [r5, #4]
  4055f0:	6051      	str	r1, [r2, #4]
  4055f2:	68a9      	ldr	r1, [r5, #8]
  4055f4:	6091      	str	r1, [r2, #8]
  4055f6:	eb0a 0107 	add.w	r1, sl, r7
  4055fa:	ebab 0207 	sub.w	r2, fp, r7
  4055fe:	f042 0201 	orr.w	r2, r2, #1
  405602:	6099      	str	r1, [r3, #8]
  405604:	604a      	str	r2, [r1, #4]
  405606:	f8da 3004 	ldr.w	r3, [sl, #4]
  40560a:	f003 0301 	and.w	r3, r3, #1
  40560e:	431f      	orrs	r7, r3
  405610:	4640      	mov	r0, r8
  405612:	f8ca 7004 	str.w	r7, [sl, #4]
  405616:	f7ff f813 	bl	404640 <__malloc_unlock>
  40561a:	e751      	b.n	4054c0 <_realloc_r+0xe4>
  40561c:	682b      	ldr	r3, [r5, #0]
  40561e:	6003      	str	r3, [r0, #0]
  405620:	686b      	ldr	r3, [r5, #4]
  405622:	6043      	str	r3, [r0, #4]
  405624:	2a1b      	cmp	r2, #27
  405626:	d82d      	bhi.n	405684 <_realloc_r+0x2a8>
  405628:	f100 0308 	add.w	r3, r0, #8
  40562c:	f105 0208 	add.w	r2, r5, #8
  405630:	e71b      	b.n	40546a <_realloc_r+0x8e>
  405632:	4632      	mov	r2, r6
  405634:	6829      	ldr	r1, [r5, #0]
  405636:	6011      	str	r1, [r2, #0]
  405638:	6869      	ldr	r1, [r5, #4]
  40563a:	6051      	str	r1, [r2, #4]
  40563c:	68a9      	ldr	r1, [r5, #8]
  40563e:	6091      	str	r1, [r2, #8]
  405640:	461c      	mov	r4, r3
  405642:	46d1      	mov	r9, sl
  405644:	e72a      	b.n	40549c <_realloc_r+0xc0>
  405646:	eb09 0107 	add.w	r1, r9, r7
  40564a:	ebab 0b07 	sub.w	fp, fp, r7
  40564e:	f04b 0201 	orr.w	r2, fp, #1
  405652:	6099      	str	r1, [r3, #8]
  405654:	604a      	str	r2, [r1, #4]
  405656:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40565a:	f003 0301 	and.w	r3, r3, #1
  40565e:	431f      	orrs	r7, r3
  405660:	4640      	mov	r0, r8
  405662:	f845 7c04 	str.w	r7, [r5, #-4]
  405666:	f7fe ffeb 	bl	404640 <__malloc_unlock>
  40566a:	462e      	mov	r6, r5
  40566c:	e728      	b.n	4054c0 <_realloc_r+0xe4>
  40566e:	4629      	mov	r1, r5
  405670:	f7ff fe50 	bl	405314 <memmove>
  405674:	e6ff      	b.n	405476 <_realloc_r+0x9a>
  405676:	4629      	mov	r1, r5
  405678:	4630      	mov	r0, r6
  40567a:	461c      	mov	r4, r3
  40567c:	46d1      	mov	r9, sl
  40567e:	f7ff fe49 	bl	405314 <memmove>
  405682:	e70b      	b.n	40549c <_realloc_r+0xc0>
  405684:	68ab      	ldr	r3, [r5, #8]
  405686:	6083      	str	r3, [r0, #8]
  405688:	68eb      	ldr	r3, [r5, #12]
  40568a:	60c3      	str	r3, [r0, #12]
  40568c:	2a24      	cmp	r2, #36	; 0x24
  40568e:	d017      	beq.n	4056c0 <_realloc_r+0x2e4>
  405690:	f100 0310 	add.w	r3, r0, #16
  405694:	f105 0210 	add.w	r2, r5, #16
  405698:	e6e7      	b.n	40546a <_realloc_r+0x8e>
  40569a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  40569e:	f023 0303 	bic.w	r3, r3, #3
  4056a2:	441c      	add	r4, r3
  4056a4:	462e      	mov	r6, r5
  4056a6:	e6f9      	b.n	40549c <_realloc_r+0xc0>
  4056a8:	68a9      	ldr	r1, [r5, #8]
  4056aa:	f8ca 1010 	str.w	r1, [sl, #16]
  4056ae:	68e9      	ldr	r1, [r5, #12]
  4056b0:	f8ca 1014 	str.w	r1, [sl, #20]
  4056b4:	2a24      	cmp	r2, #36	; 0x24
  4056b6:	d00c      	beq.n	4056d2 <_realloc_r+0x2f6>
  4056b8:	3510      	adds	r5, #16
  4056ba:	f10a 0218 	add.w	r2, sl, #24
  4056be:	e7b9      	b.n	405634 <_realloc_r+0x258>
  4056c0:	692b      	ldr	r3, [r5, #16]
  4056c2:	6103      	str	r3, [r0, #16]
  4056c4:	696b      	ldr	r3, [r5, #20]
  4056c6:	6143      	str	r3, [r0, #20]
  4056c8:	f105 0218 	add.w	r2, r5, #24
  4056cc:	f100 0318 	add.w	r3, r0, #24
  4056d0:	e6cb      	b.n	40546a <_realloc_r+0x8e>
  4056d2:	692a      	ldr	r2, [r5, #16]
  4056d4:	f8ca 2018 	str.w	r2, [sl, #24]
  4056d8:	696a      	ldr	r2, [r5, #20]
  4056da:	f8ca 201c 	str.w	r2, [sl, #28]
  4056de:	3518      	adds	r5, #24
  4056e0:	f10a 0220 	add.w	r2, sl, #32
  4056e4:	e7a6      	b.n	405634 <_realloc_r+0x258>
  4056e6:	4632      	mov	r2, r6
  4056e8:	e77f      	b.n	4055ea <_realloc_r+0x20e>
  4056ea:	4629      	mov	r1, r5
  4056ec:	4630      	mov	r0, r6
  4056ee:	9301      	str	r3, [sp, #4]
  4056f0:	f7ff fe10 	bl	405314 <memmove>
  4056f4:	9b01      	ldr	r3, [sp, #4]
  4056f6:	e77e      	b.n	4055f6 <_realloc_r+0x21a>
  4056f8:	68a9      	ldr	r1, [r5, #8]
  4056fa:	f8ca 1010 	str.w	r1, [sl, #16]
  4056fe:	68e9      	ldr	r1, [r5, #12]
  405700:	f8ca 1014 	str.w	r1, [sl, #20]
  405704:	2a24      	cmp	r2, #36	; 0x24
  405706:	d003      	beq.n	405710 <_realloc_r+0x334>
  405708:	3510      	adds	r5, #16
  40570a:	f10a 0218 	add.w	r2, sl, #24
  40570e:	e76c      	b.n	4055ea <_realloc_r+0x20e>
  405710:	692a      	ldr	r2, [r5, #16]
  405712:	f8ca 2018 	str.w	r2, [sl, #24]
  405716:	696a      	ldr	r2, [r5, #20]
  405718:	f8ca 201c 	str.w	r2, [sl, #28]
  40571c:	3518      	adds	r5, #24
  40571e:	f10a 0220 	add.w	r2, sl, #32
  405722:	e762      	b.n	4055ea <_realloc_r+0x20e>
  405724:	20000444 	.word	0x20000444

00405728 <__ascii_wctomb>:
  405728:	b121      	cbz	r1, 405734 <__ascii_wctomb+0xc>
  40572a:	2aff      	cmp	r2, #255	; 0xff
  40572c:	d804      	bhi.n	405738 <__ascii_wctomb+0x10>
  40572e:	700a      	strb	r2, [r1, #0]
  405730:	2001      	movs	r0, #1
  405732:	4770      	bx	lr
  405734:	4608      	mov	r0, r1
  405736:	4770      	bx	lr
  405738:	238a      	movs	r3, #138	; 0x8a
  40573a:	6003      	str	r3, [r0, #0]
  40573c:	f04f 30ff 	mov.w	r0, #4294967295
  405740:	4770      	bx	lr
  405742:	bf00      	nop

00405744 <__aeabi_drsub>:
  405744:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  405748:	e002      	b.n	405750 <__adddf3>
  40574a:	bf00      	nop

0040574c <__aeabi_dsub>:
  40574c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00405750 <__adddf3>:
  405750:	b530      	push	{r4, r5, lr}
  405752:	ea4f 0441 	mov.w	r4, r1, lsl #1
  405756:	ea4f 0543 	mov.w	r5, r3, lsl #1
  40575a:	ea94 0f05 	teq	r4, r5
  40575e:	bf08      	it	eq
  405760:	ea90 0f02 	teqeq	r0, r2
  405764:	bf1f      	itttt	ne
  405766:	ea54 0c00 	orrsne.w	ip, r4, r0
  40576a:	ea55 0c02 	orrsne.w	ip, r5, r2
  40576e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  405772:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405776:	f000 80e2 	beq.w	40593e <__adddf3+0x1ee>
  40577a:	ea4f 5454 	mov.w	r4, r4, lsr #21
  40577e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  405782:	bfb8      	it	lt
  405784:	426d      	neglt	r5, r5
  405786:	dd0c      	ble.n	4057a2 <__adddf3+0x52>
  405788:	442c      	add	r4, r5
  40578a:	ea80 0202 	eor.w	r2, r0, r2
  40578e:	ea81 0303 	eor.w	r3, r1, r3
  405792:	ea82 0000 	eor.w	r0, r2, r0
  405796:	ea83 0101 	eor.w	r1, r3, r1
  40579a:	ea80 0202 	eor.w	r2, r0, r2
  40579e:	ea81 0303 	eor.w	r3, r1, r3
  4057a2:	2d36      	cmp	r5, #54	; 0x36
  4057a4:	bf88      	it	hi
  4057a6:	bd30      	pophi	{r4, r5, pc}
  4057a8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4057ac:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4057b0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  4057b4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  4057b8:	d002      	beq.n	4057c0 <__adddf3+0x70>
  4057ba:	4240      	negs	r0, r0
  4057bc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4057c0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  4057c4:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4057c8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  4057cc:	d002      	beq.n	4057d4 <__adddf3+0x84>
  4057ce:	4252      	negs	r2, r2
  4057d0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  4057d4:	ea94 0f05 	teq	r4, r5
  4057d8:	f000 80a7 	beq.w	40592a <__adddf3+0x1da>
  4057dc:	f1a4 0401 	sub.w	r4, r4, #1
  4057e0:	f1d5 0e20 	rsbs	lr, r5, #32
  4057e4:	db0d      	blt.n	405802 <__adddf3+0xb2>
  4057e6:	fa02 fc0e 	lsl.w	ip, r2, lr
  4057ea:	fa22 f205 	lsr.w	r2, r2, r5
  4057ee:	1880      	adds	r0, r0, r2
  4057f0:	f141 0100 	adc.w	r1, r1, #0
  4057f4:	fa03 f20e 	lsl.w	r2, r3, lr
  4057f8:	1880      	adds	r0, r0, r2
  4057fa:	fa43 f305 	asr.w	r3, r3, r5
  4057fe:	4159      	adcs	r1, r3
  405800:	e00e      	b.n	405820 <__adddf3+0xd0>
  405802:	f1a5 0520 	sub.w	r5, r5, #32
  405806:	f10e 0e20 	add.w	lr, lr, #32
  40580a:	2a01      	cmp	r2, #1
  40580c:	fa03 fc0e 	lsl.w	ip, r3, lr
  405810:	bf28      	it	cs
  405812:	f04c 0c02 	orrcs.w	ip, ip, #2
  405816:	fa43 f305 	asr.w	r3, r3, r5
  40581a:	18c0      	adds	r0, r0, r3
  40581c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  405820:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405824:	d507      	bpl.n	405836 <__adddf3+0xe6>
  405826:	f04f 0e00 	mov.w	lr, #0
  40582a:	f1dc 0c00 	rsbs	ip, ip, #0
  40582e:	eb7e 0000 	sbcs.w	r0, lr, r0
  405832:	eb6e 0101 	sbc.w	r1, lr, r1
  405836:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  40583a:	d31b      	bcc.n	405874 <__adddf3+0x124>
  40583c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  405840:	d30c      	bcc.n	40585c <__adddf3+0x10c>
  405842:	0849      	lsrs	r1, r1, #1
  405844:	ea5f 0030 	movs.w	r0, r0, rrx
  405848:	ea4f 0c3c 	mov.w	ip, ip, rrx
  40584c:	f104 0401 	add.w	r4, r4, #1
  405850:	ea4f 5244 	mov.w	r2, r4, lsl #21
  405854:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  405858:	f080 809a 	bcs.w	405990 <__adddf3+0x240>
  40585c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  405860:	bf08      	it	eq
  405862:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405866:	f150 0000 	adcs.w	r0, r0, #0
  40586a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40586e:	ea41 0105 	orr.w	r1, r1, r5
  405872:	bd30      	pop	{r4, r5, pc}
  405874:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  405878:	4140      	adcs	r0, r0
  40587a:	eb41 0101 	adc.w	r1, r1, r1
  40587e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405882:	f1a4 0401 	sub.w	r4, r4, #1
  405886:	d1e9      	bne.n	40585c <__adddf3+0x10c>
  405888:	f091 0f00 	teq	r1, #0
  40588c:	bf04      	itt	eq
  40588e:	4601      	moveq	r1, r0
  405890:	2000      	moveq	r0, #0
  405892:	fab1 f381 	clz	r3, r1
  405896:	bf08      	it	eq
  405898:	3320      	addeq	r3, #32
  40589a:	f1a3 030b 	sub.w	r3, r3, #11
  40589e:	f1b3 0220 	subs.w	r2, r3, #32
  4058a2:	da0c      	bge.n	4058be <__adddf3+0x16e>
  4058a4:	320c      	adds	r2, #12
  4058a6:	dd08      	ble.n	4058ba <__adddf3+0x16a>
  4058a8:	f102 0c14 	add.w	ip, r2, #20
  4058ac:	f1c2 020c 	rsb	r2, r2, #12
  4058b0:	fa01 f00c 	lsl.w	r0, r1, ip
  4058b4:	fa21 f102 	lsr.w	r1, r1, r2
  4058b8:	e00c      	b.n	4058d4 <__adddf3+0x184>
  4058ba:	f102 0214 	add.w	r2, r2, #20
  4058be:	bfd8      	it	le
  4058c0:	f1c2 0c20 	rsble	ip, r2, #32
  4058c4:	fa01 f102 	lsl.w	r1, r1, r2
  4058c8:	fa20 fc0c 	lsr.w	ip, r0, ip
  4058cc:	bfdc      	itt	le
  4058ce:	ea41 010c 	orrle.w	r1, r1, ip
  4058d2:	4090      	lslle	r0, r2
  4058d4:	1ae4      	subs	r4, r4, r3
  4058d6:	bfa2      	ittt	ge
  4058d8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  4058dc:	4329      	orrge	r1, r5
  4058de:	bd30      	popge	{r4, r5, pc}
  4058e0:	ea6f 0404 	mvn.w	r4, r4
  4058e4:	3c1f      	subs	r4, #31
  4058e6:	da1c      	bge.n	405922 <__adddf3+0x1d2>
  4058e8:	340c      	adds	r4, #12
  4058ea:	dc0e      	bgt.n	40590a <__adddf3+0x1ba>
  4058ec:	f104 0414 	add.w	r4, r4, #20
  4058f0:	f1c4 0220 	rsb	r2, r4, #32
  4058f4:	fa20 f004 	lsr.w	r0, r0, r4
  4058f8:	fa01 f302 	lsl.w	r3, r1, r2
  4058fc:	ea40 0003 	orr.w	r0, r0, r3
  405900:	fa21 f304 	lsr.w	r3, r1, r4
  405904:	ea45 0103 	orr.w	r1, r5, r3
  405908:	bd30      	pop	{r4, r5, pc}
  40590a:	f1c4 040c 	rsb	r4, r4, #12
  40590e:	f1c4 0220 	rsb	r2, r4, #32
  405912:	fa20 f002 	lsr.w	r0, r0, r2
  405916:	fa01 f304 	lsl.w	r3, r1, r4
  40591a:	ea40 0003 	orr.w	r0, r0, r3
  40591e:	4629      	mov	r1, r5
  405920:	bd30      	pop	{r4, r5, pc}
  405922:	fa21 f004 	lsr.w	r0, r1, r4
  405926:	4629      	mov	r1, r5
  405928:	bd30      	pop	{r4, r5, pc}
  40592a:	f094 0f00 	teq	r4, #0
  40592e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  405932:	bf06      	itte	eq
  405934:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  405938:	3401      	addeq	r4, #1
  40593a:	3d01      	subne	r5, #1
  40593c:	e74e      	b.n	4057dc <__adddf3+0x8c>
  40593e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405942:	bf18      	it	ne
  405944:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405948:	d029      	beq.n	40599e <__adddf3+0x24e>
  40594a:	ea94 0f05 	teq	r4, r5
  40594e:	bf08      	it	eq
  405950:	ea90 0f02 	teqeq	r0, r2
  405954:	d005      	beq.n	405962 <__adddf3+0x212>
  405956:	ea54 0c00 	orrs.w	ip, r4, r0
  40595a:	bf04      	itt	eq
  40595c:	4619      	moveq	r1, r3
  40595e:	4610      	moveq	r0, r2
  405960:	bd30      	pop	{r4, r5, pc}
  405962:	ea91 0f03 	teq	r1, r3
  405966:	bf1e      	ittt	ne
  405968:	2100      	movne	r1, #0
  40596a:	2000      	movne	r0, #0
  40596c:	bd30      	popne	{r4, r5, pc}
  40596e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  405972:	d105      	bne.n	405980 <__adddf3+0x230>
  405974:	0040      	lsls	r0, r0, #1
  405976:	4149      	adcs	r1, r1
  405978:	bf28      	it	cs
  40597a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  40597e:	bd30      	pop	{r4, r5, pc}
  405980:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  405984:	bf3c      	itt	cc
  405986:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  40598a:	bd30      	popcc	{r4, r5, pc}
  40598c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405990:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  405994:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405998:	f04f 0000 	mov.w	r0, #0
  40599c:	bd30      	pop	{r4, r5, pc}
  40599e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4059a2:	bf1a      	itte	ne
  4059a4:	4619      	movne	r1, r3
  4059a6:	4610      	movne	r0, r2
  4059a8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  4059ac:	bf1c      	itt	ne
  4059ae:	460b      	movne	r3, r1
  4059b0:	4602      	movne	r2, r0
  4059b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  4059b6:	bf06      	itte	eq
  4059b8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  4059bc:	ea91 0f03 	teqeq	r1, r3
  4059c0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  4059c4:	bd30      	pop	{r4, r5, pc}
  4059c6:	bf00      	nop

004059c8 <__aeabi_ui2d>:
  4059c8:	f090 0f00 	teq	r0, #0
  4059cc:	bf04      	itt	eq
  4059ce:	2100      	moveq	r1, #0
  4059d0:	4770      	bxeq	lr
  4059d2:	b530      	push	{r4, r5, lr}
  4059d4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4059d8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4059dc:	f04f 0500 	mov.w	r5, #0
  4059e0:	f04f 0100 	mov.w	r1, #0
  4059e4:	e750      	b.n	405888 <__adddf3+0x138>
  4059e6:	bf00      	nop

004059e8 <__aeabi_i2d>:
  4059e8:	f090 0f00 	teq	r0, #0
  4059ec:	bf04      	itt	eq
  4059ee:	2100      	moveq	r1, #0
  4059f0:	4770      	bxeq	lr
  4059f2:	b530      	push	{r4, r5, lr}
  4059f4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4059f8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4059fc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  405a00:	bf48      	it	mi
  405a02:	4240      	negmi	r0, r0
  405a04:	f04f 0100 	mov.w	r1, #0
  405a08:	e73e      	b.n	405888 <__adddf3+0x138>
  405a0a:	bf00      	nop

00405a0c <__aeabi_f2d>:
  405a0c:	0042      	lsls	r2, r0, #1
  405a0e:	ea4f 01e2 	mov.w	r1, r2, asr #3
  405a12:	ea4f 0131 	mov.w	r1, r1, rrx
  405a16:	ea4f 7002 	mov.w	r0, r2, lsl #28
  405a1a:	bf1f      	itttt	ne
  405a1c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  405a20:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405a24:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  405a28:	4770      	bxne	lr
  405a2a:	f092 0f00 	teq	r2, #0
  405a2e:	bf14      	ite	ne
  405a30:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405a34:	4770      	bxeq	lr
  405a36:	b530      	push	{r4, r5, lr}
  405a38:	f44f 7460 	mov.w	r4, #896	; 0x380
  405a3c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405a40:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405a44:	e720      	b.n	405888 <__adddf3+0x138>
  405a46:	bf00      	nop

00405a48 <__aeabi_ul2d>:
  405a48:	ea50 0201 	orrs.w	r2, r0, r1
  405a4c:	bf08      	it	eq
  405a4e:	4770      	bxeq	lr
  405a50:	b530      	push	{r4, r5, lr}
  405a52:	f04f 0500 	mov.w	r5, #0
  405a56:	e00a      	b.n	405a6e <__aeabi_l2d+0x16>

00405a58 <__aeabi_l2d>:
  405a58:	ea50 0201 	orrs.w	r2, r0, r1
  405a5c:	bf08      	it	eq
  405a5e:	4770      	bxeq	lr
  405a60:	b530      	push	{r4, r5, lr}
  405a62:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  405a66:	d502      	bpl.n	405a6e <__aeabi_l2d+0x16>
  405a68:	4240      	negs	r0, r0
  405a6a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405a6e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405a72:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405a76:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  405a7a:	f43f aedc 	beq.w	405836 <__adddf3+0xe6>
  405a7e:	f04f 0203 	mov.w	r2, #3
  405a82:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405a86:	bf18      	it	ne
  405a88:	3203      	addne	r2, #3
  405a8a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405a8e:	bf18      	it	ne
  405a90:	3203      	addne	r2, #3
  405a92:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  405a96:	f1c2 0320 	rsb	r3, r2, #32
  405a9a:	fa00 fc03 	lsl.w	ip, r0, r3
  405a9e:	fa20 f002 	lsr.w	r0, r0, r2
  405aa2:	fa01 fe03 	lsl.w	lr, r1, r3
  405aa6:	ea40 000e 	orr.w	r0, r0, lr
  405aaa:	fa21 f102 	lsr.w	r1, r1, r2
  405aae:	4414      	add	r4, r2
  405ab0:	e6c1      	b.n	405836 <__adddf3+0xe6>
  405ab2:	bf00      	nop

00405ab4 <__aeabi_dmul>:
  405ab4:	b570      	push	{r4, r5, r6, lr}
  405ab6:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405aba:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405abe:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405ac2:	bf1d      	ittte	ne
  405ac4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405ac8:	ea94 0f0c 	teqne	r4, ip
  405acc:	ea95 0f0c 	teqne	r5, ip
  405ad0:	f000 f8de 	bleq	405c90 <__aeabi_dmul+0x1dc>
  405ad4:	442c      	add	r4, r5
  405ad6:	ea81 0603 	eor.w	r6, r1, r3
  405ada:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  405ade:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  405ae2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  405ae6:	bf18      	it	ne
  405ae8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  405aec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405af0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  405af4:	d038      	beq.n	405b68 <__aeabi_dmul+0xb4>
  405af6:	fba0 ce02 	umull	ip, lr, r0, r2
  405afa:	f04f 0500 	mov.w	r5, #0
  405afe:	fbe1 e502 	umlal	lr, r5, r1, r2
  405b02:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  405b06:	fbe0 e503 	umlal	lr, r5, r0, r3
  405b0a:	f04f 0600 	mov.w	r6, #0
  405b0e:	fbe1 5603 	umlal	r5, r6, r1, r3
  405b12:	f09c 0f00 	teq	ip, #0
  405b16:	bf18      	it	ne
  405b18:	f04e 0e01 	orrne.w	lr, lr, #1
  405b1c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  405b20:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  405b24:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  405b28:	d204      	bcs.n	405b34 <__aeabi_dmul+0x80>
  405b2a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  405b2e:	416d      	adcs	r5, r5
  405b30:	eb46 0606 	adc.w	r6, r6, r6
  405b34:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  405b38:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  405b3c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  405b40:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  405b44:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  405b48:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405b4c:	bf88      	it	hi
  405b4e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405b52:	d81e      	bhi.n	405b92 <__aeabi_dmul+0xde>
  405b54:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  405b58:	bf08      	it	eq
  405b5a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  405b5e:	f150 0000 	adcs.w	r0, r0, #0
  405b62:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405b66:	bd70      	pop	{r4, r5, r6, pc}
  405b68:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  405b6c:	ea46 0101 	orr.w	r1, r6, r1
  405b70:	ea40 0002 	orr.w	r0, r0, r2
  405b74:	ea81 0103 	eor.w	r1, r1, r3
  405b78:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  405b7c:	bfc2      	ittt	gt
  405b7e:	ebd4 050c 	rsbsgt	r5, r4, ip
  405b82:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405b86:	bd70      	popgt	{r4, r5, r6, pc}
  405b88:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405b8c:	f04f 0e00 	mov.w	lr, #0
  405b90:	3c01      	subs	r4, #1
  405b92:	f300 80ab 	bgt.w	405cec <__aeabi_dmul+0x238>
  405b96:	f114 0f36 	cmn.w	r4, #54	; 0x36
  405b9a:	bfde      	ittt	le
  405b9c:	2000      	movle	r0, #0
  405b9e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  405ba2:	bd70      	pople	{r4, r5, r6, pc}
  405ba4:	f1c4 0400 	rsb	r4, r4, #0
  405ba8:	3c20      	subs	r4, #32
  405baa:	da35      	bge.n	405c18 <__aeabi_dmul+0x164>
  405bac:	340c      	adds	r4, #12
  405bae:	dc1b      	bgt.n	405be8 <__aeabi_dmul+0x134>
  405bb0:	f104 0414 	add.w	r4, r4, #20
  405bb4:	f1c4 0520 	rsb	r5, r4, #32
  405bb8:	fa00 f305 	lsl.w	r3, r0, r5
  405bbc:	fa20 f004 	lsr.w	r0, r0, r4
  405bc0:	fa01 f205 	lsl.w	r2, r1, r5
  405bc4:	ea40 0002 	orr.w	r0, r0, r2
  405bc8:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  405bcc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405bd0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405bd4:	fa21 f604 	lsr.w	r6, r1, r4
  405bd8:	eb42 0106 	adc.w	r1, r2, r6
  405bdc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405be0:	bf08      	it	eq
  405be2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405be6:	bd70      	pop	{r4, r5, r6, pc}
  405be8:	f1c4 040c 	rsb	r4, r4, #12
  405bec:	f1c4 0520 	rsb	r5, r4, #32
  405bf0:	fa00 f304 	lsl.w	r3, r0, r4
  405bf4:	fa20 f005 	lsr.w	r0, r0, r5
  405bf8:	fa01 f204 	lsl.w	r2, r1, r4
  405bfc:	ea40 0002 	orr.w	r0, r0, r2
  405c00:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405c04:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405c08:	f141 0100 	adc.w	r1, r1, #0
  405c0c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405c10:	bf08      	it	eq
  405c12:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405c16:	bd70      	pop	{r4, r5, r6, pc}
  405c18:	f1c4 0520 	rsb	r5, r4, #32
  405c1c:	fa00 f205 	lsl.w	r2, r0, r5
  405c20:	ea4e 0e02 	orr.w	lr, lr, r2
  405c24:	fa20 f304 	lsr.w	r3, r0, r4
  405c28:	fa01 f205 	lsl.w	r2, r1, r5
  405c2c:	ea43 0302 	orr.w	r3, r3, r2
  405c30:	fa21 f004 	lsr.w	r0, r1, r4
  405c34:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405c38:	fa21 f204 	lsr.w	r2, r1, r4
  405c3c:	ea20 0002 	bic.w	r0, r0, r2
  405c40:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  405c44:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405c48:	bf08      	it	eq
  405c4a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405c4e:	bd70      	pop	{r4, r5, r6, pc}
  405c50:	f094 0f00 	teq	r4, #0
  405c54:	d10f      	bne.n	405c76 <__aeabi_dmul+0x1c2>
  405c56:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  405c5a:	0040      	lsls	r0, r0, #1
  405c5c:	eb41 0101 	adc.w	r1, r1, r1
  405c60:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405c64:	bf08      	it	eq
  405c66:	3c01      	subeq	r4, #1
  405c68:	d0f7      	beq.n	405c5a <__aeabi_dmul+0x1a6>
  405c6a:	ea41 0106 	orr.w	r1, r1, r6
  405c6e:	f095 0f00 	teq	r5, #0
  405c72:	bf18      	it	ne
  405c74:	4770      	bxne	lr
  405c76:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  405c7a:	0052      	lsls	r2, r2, #1
  405c7c:	eb43 0303 	adc.w	r3, r3, r3
  405c80:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  405c84:	bf08      	it	eq
  405c86:	3d01      	subeq	r5, #1
  405c88:	d0f7      	beq.n	405c7a <__aeabi_dmul+0x1c6>
  405c8a:	ea43 0306 	orr.w	r3, r3, r6
  405c8e:	4770      	bx	lr
  405c90:	ea94 0f0c 	teq	r4, ip
  405c94:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405c98:	bf18      	it	ne
  405c9a:	ea95 0f0c 	teqne	r5, ip
  405c9e:	d00c      	beq.n	405cba <__aeabi_dmul+0x206>
  405ca0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405ca4:	bf18      	it	ne
  405ca6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405caa:	d1d1      	bne.n	405c50 <__aeabi_dmul+0x19c>
  405cac:	ea81 0103 	eor.w	r1, r1, r3
  405cb0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405cb4:	f04f 0000 	mov.w	r0, #0
  405cb8:	bd70      	pop	{r4, r5, r6, pc}
  405cba:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405cbe:	bf06      	itte	eq
  405cc0:	4610      	moveq	r0, r2
  405cc2:	4619      	moveq	r1, r3
  405cc4:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405cc8:	d019      	beq.n	405cfe <__aeabi_dmul+0x24a>
  405cca:	ea94 0f0c 	teq	r4, ip
  405cce:	d102      	bne.n	405cd6 <__aeabi_dmul+0x222>
  405cd0:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  405cd4:	d113      	bne.n	405cfe <__aeabi_dmul+0x24a>
  405cd6:	ea95 0f0c 	teq	r5, ip
  405cda:	d105      	bne.n	405ce8 <__aeabi_dmul+0x234>
  405cdc:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  405ce0:	bf1c      	itt	ne
  405ce2:	4610      	movne	r0, r2
  405ce4:	4619      	movne	r1, r3
  405ce6:	d10a      	bne.n	405cfe <__aeabi_dmul+0x24a>
  405ce8:	ea81 0103 	eor.w	r1, r1, r3
  405cec:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405cf0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405cf4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405cf8:	f04f 0000 	mov.w	r0, #0
  405cfc:	bd70      	pop	{r4, r5, r6, pc}
  405cfe:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405d02:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  405d06:	bd70      	pop	{r4, r5, r6, pc}

00405d08 <__aeabi_ddiv>:
  405d08:	b570      	push	{r4, r5, r6, lr}
  405d0a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405d0e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405d12:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405d16:	bf1d      	ittte	ne
  405d18:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405d1c:	ea94 0f0c 	teqne	r4, ip
  405d20:	ea95 0f0c 	teqne	r5, ip
  405d24:	f000 f8a7 	bleq	405e76 <__aeabi_ddiv+0x16e>
  405d28:	eba4 0405 	sub.w	r4, r4, r5
  405d2c:	ea81 0e03 	eor.w	lr, r1, r3
  405d30:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  405d34:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405d38:	f000 8088 	beq.w	405e4c <__aeabi_ddiv+0x144>
  405d3c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405d40:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  405d44:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  405d48:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  405d4c:	ea4f 2202 	mov.w	r2, r2, lsl #8
  405d50:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  405d54:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  405d58:	ea4f 2600 	mov.w	r6, r0, lsl #8
  405d5c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  405d60:	429d      	cmp	r5, r3
  405d62:	bf08      	it	eq
  405d64:	4296      	cmpeq	r6, r2
  405d66:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  405d6a:	f504 7440 	add.w	r4, r4, #768	; 0x300
  405d6e:	d202      	bcs.n	405d76 <__aeabi_ddiv+0x6e>
  405d70:	085b      	lsrs	r3, r3, #1
  405d72:	ea4f 0232 	mov.w	r2, r2, rrx
  405d76:	1ab6      	subs	r6, r6, r2
  405d78:	eb65 0503 	sbc.w	r5, r5, r3
  405d7c:	085b      	lsrs	r3, r3, #1
  405d7e:	ea4f 0232 	mov.w	r2, r2, rrx
  405d82:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  405d86:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  405d8a:	ebb6 0e02 	subs.w	lr, r6, r2
  405d8e:	eb75 0e03 	sbcs.w	lr, r5, r3
  405d92:	bf22      	ittt	cs
  405d94:	1ab6      	subcs	r6, r6, r2
  405d96:	4675      	movcs	r5, lr
  405d98:	ea40 000c 	orrcs.w	r0, r0, ip
  405d9c:	085b      	lsrs	r3, r3, #1
  405d9e:	ea4f 0232 	mov.w	r2, r2, rrx
  405da2:	ebb6 0e02 	subs.w	lr, r6, r2
  405da6:	eb75 0e03 	sbcs.w	lr, r5, r3
  405daa:	bf22      	ittt	cs
  405dac:	1ab6      	subcs	r6, r6, r2
  405dae:	4675      	movcs	r5, lr
  405db0:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  405db4:	085b      	lsrs	r3, r3, #1
  405db6:	ea4f 0232 	mov.w	r2, r2, rrx
  405dba:	ebb6 0e02 	subs.w	lr, r6, r2
  405dbe:	eb75 0e03 	sbcs.w	lr, r5, r3
  405dc2:	bf22      	ittt	cs
  405dc4:	1ab6      	subcs	r6, r6, r2
  405dc6:	4675      	movcs	r5, lr
  405dc8:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  405dcc:	085b      	lsrs	r3, r3, #1
  405dce:	ea4f 0232 	mov.w	r2, r2, rrx
  405dd2:	ebb6 0e02 	subs.w	lr, r6, r2
  405dd6:	eb75 0e03 	sbcs.w	lr, r5, r3
  405dda:	bf22      	ittt	cs
  405ddc:	1ab6      	subcs	r6, r6, r2
  405dde:	4675      	movcs	r5, lr
  405de0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  405de4:	ea55 0e06 	orrs.w	lr, r5, r6
  405de8:	d018      	beq.n	405e1c <__aeabi_ddiv+0x114>
  405dea:	ea4f 1505 	mov.w	r5, r5, lsl #4
  405dee:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  405df2:	ea4f 1606 	mov.w	r6, r6, lsl #4
  405df6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  405dfa:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  405dfe:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  405e02:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  405e06:	d1c0      	bne.n	405d8a <__aeabi_ddiv+0x82>
  405e08:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405e0c:	d10b      	bne.n	405e26 <__aeabi_ddiv+0x11e>
  405e0e:	ea41 0100 	orr.w	r1, r1, r0
  405e12:	f04f 0000 	mov.w	r0, #0
  405e16:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  405e1a:	e7b6      	b.n	405d8a <__aeabi_ddiv+0x82>
  405e1c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405e20:	bf04      	itt	eq
  405e22:	4301      	orreq	r1, r0
  405e24:	2000      	moveq	r0, #0
  405e26:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405e2a:	bf88      	it	hi
  405e2c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405e30:	f63f aeaf 	bhi.w	405b92 <__aeabi_dmul+0xde>
  405e34:	ebb5 0c03 	subs.w	ip, r5, r3
  405e38:	bf04      	itt	eq
  405e3a:	ebb6 0c02 	subseq.w	ip, r6, r2
  405e3e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405e42:	f150 0000 	adcs.w	r0, r0, #0
  405e46:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405e4a:	bd70      	pop	{r4, r5, r6, pc}
  405e4c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  405e50:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  405e54:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  405e58:	bfc2      	ittt	gt
  405e5a:	ebd4 050c 	rsbsgt	r5, r4, ip
  405e5e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405e62:	bd70      	popgt	{r4, r5, r6, pc}
  405e64:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405e68:	f04f 0e00 	mov.w	lr, #0
  405e6c:	3c01      	subs	r4, #1
  405e6e:	e690      	b.n	405b92 <__aeabi_dmul+0xde>
  405e70:	ea45 0e06 	orr.w	lr, r5, r6
  405e74:	e68d      	b.n	405b92 <__aeabi_dmul+0xde>
  405e76:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405e7a:	ea94 0f0c 	teq	r4, ip
  405e7e:	bf08      	it	eq
  405e80:	ea95 0f0c 	teqeq	r5, ip
  405e84:	f43f af3b 	beq.w	405cfe <__aeabi_dmul+0x24a>
  405e88:	ea94 0f0c 	teq	r4, ip
  405e8c:	d10a      	bne.n	405ea4 <__aeabi_ddiv+0x19c>
  405e8e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405e92:	f47f af34 	bne.w	405cfe <__aeabi_dmul+0x24a>
  405e96:	ea95 0f0c 	teq	r5, ip
  405e9a:	f47f af25 	bne.w	405ce8 <__aeabi_dmul+0x234>
  405e9e:	4610      	mov	r0, r2
  405ea0:	4619      	mov	r1, r3
  405ea2:	e72c      	b.n	405cfe <__aeabi_dmul+0x24a>
  405ea4:	ea95 0f0c 	teq	r5, ip
  405ea8:	d106      	bne.n	405eb8 <__aeabi_ddiv+0x1b0>
  405eaa:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  405eae:	f43f aefd 	beq.w	405cac <__aeabi_dmul+0x1f8>
  405eb2:	4610      	mov	r0, r2
  405eb4:	4619      	mov	r1, r3
  405eb6:	e722      	b.n	405cfe <__aeabi_dmul+0x24a>
  405eb8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405ebc:	bf18      	it	ne
  405ebe:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405ec2:	f47f aec5 	bne.w	405c50 <__aeabi_dmul+0x19c>
  405ec6:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  405eca:	f47f af0d 	bne.w	405ce8 <__aeabi_dmul+0x234>
  405ece:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  405ed2:	f47f aeeb 	bne.w	405cac <__aeabi_dmul+0x1f8>
  405ed6:	e712      	b.n	405cfe <__aeabi_dmul+0x24a>

00405ed8 <__gedf2>:
  405ed8:	f04f 3cff 	mov.w	ip, #4294967295
  405edc:	e006      	b.n	405eec <__cmpdf2+0x4>
  405ede:	bf00      	nop

00405ee0 <__ledf2>:
  405ee0:	f04f 0c01 	mov.w	ip, #1
  405ee4:	e002      	b.n	405eec <__cmpdf2+0x4>
  405ee6:	bf00      	nop

00405ee8 <__cmpdf2>:
  405ee8:	f04f 0c01 	mov.w	ip, #1
  405eec:	f84d cd04 	str.w	ip, [sp, #-4]!
  405ef0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405ef4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405ef8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405efc:	bf18      	it	ne
  405efe:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  405f02:	d01b      	beq.n	405f3c <__cmpdf2+0x54>
  405f04:	b001      	add	sp, #4
  405f06:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  405f0a:	bf0c      	ite	eq
  405f0c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  405f10:	ea91 0f03 	teqne	r1, r3
  405f14:	bf02      	ittt	eq
  405f16:	ea90 0f02 	teqeq	r0, r2
  405f1a:	2000      	moveq	r0, #0
  405f1c:	4770      	bxeq	lr
  405f1e:	f110 0f00 	cmn.w	r0, #0
  405f22:	ea91 0f03 	teq	r1, r3
  405f26:	bf58      	it	pl
  405f28:	4299      	cmppl	r1, r3
  405f2a:	bf08      	it	eq
  405f2c:	4290      	cmpeq	r0, r2
  405f2e:	bf2c      	ite	cs
  405f30:	17d8      	asrcs	r0, r3, #31
  405f32:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  405f36:	f040 0001 	orr.w	r0, r0, #1
  405f3a:	4770      	bx	lr
  405f3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405f40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405f44:	d102      	bne.n	405f4c <__cmpdf2+0x64>
  405f46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405f4a:	d107      	bne.n	405f5c <__cmpdf2+0x74>
  405f4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405f50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405f54:	d1d6      	bne.n	405f04 <__cmpdf2+0x1c>
  405f56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405f5a:	d0d3      	beq.n	405f04 <__cmpdf2+0x1c>
  405f5c:	f85d 0b04 	ldr.w	r0, [sp], #4
  405f60:	4770      	bx	lr
  405f62:	bf00      	nop

00405f64 <__aeabi_cdrcmple>:
  405f64:	4684      	mov	ip, r0
  405f66:	4610      	mov	r0, r2
  405f68:	4662      	mov	r2, ip
  405f6a:	468c      	mov	ip, r1
  405f6c:	4619      	mov	r1, r3
  405f6e:	4663      	mov	r3, ip
  405f70:	e000      	b.n	405f74 <__aeabi_cdcmpeq>
  405f72:	bf00      	nop

00405f74 <__aeabi_cdcmpeq>:
  405f74:	b501      	push	{r0, lr}
  405f76:	f7ff ffb7 	bl	405ee8 <__cmpdf2>
  405f7a:	2800      	cmp	r0, #0
  405f7c:	bf48      	it	mi
  405f7e:	f110 0f00 	cmnmi.w	r0, #0
  405f82:	bd01      	pop	{r0, pc}

00405f84 <__aeabi_dcmpeq>:
  405f84:	f84d ed08 	str.w	lr, [sp, #-8]!
  405f88:	f7ff fff4 	bl	405f74 <__aeabi_cdcmpeq>
  405f8c:	bf0c      	ite	eq
  405f8e:	2001      	moveq	r0, #1
  405f90:	2000      	movne	r0, #0
  405f92:	f85d fb08 	ldr.w	pc, [sp], #8
  405f96:	bf00      	nop

00405f98 <__aeabi_dcmplt>:
  405f98:	f84d ed08 	str.w	lr, [sp, #-8]!
  405f9c:	f7ff ffea 	bl	405f74 <__aeabi_cdcmpeq>
  405fa0:	bf34      	ite	cc
  405fa2:	2001      	movcc	r0, #1
  405fa4:	2000      	movcs	r0, #0
  405fa6:	f85d fb08 	ldr.w	pc, [sp], #8
  405faa:	bf00      	nop

00405fac <__aeabi_dcmple>:
  405fac:	f84d ed08 	str.w	lr, [sp, #-8]!
  405fb0:	f7ff ffe0 	bl	405f74 <__aeabi_cdcmpeq>
  405fb4:	bf94      	ite	ls
  405fb6:	2001      	movls	r0, #1
  405fb8:	2000      	movhi	r0, #0
  405fba:	f85d fb08 	ldr.w	pc, [sp], #8
  405fbe:	bf00      	nop

00405fc0 <__aeabi_dcmpge>:
  405fc0:	f84d ed08 	str.w	lr, [sp, #-8]!
  405fc4:	f7ff ffce 	bl	405f64 <__aeabi_cdrcmple>
  405fc8:	bf94      	ite	ls
  405fca:	2001      	movls	r0, #1
  405fcc:	2000      	movhi	r0, #0
  405fce:	f85d fb08 	ldr.w	pc, [sp], #8
  405fd2:	bf00      	nop

00405fd4 <__aeabi_dcmpgt>:
  405fd4:	f84d ed08 	str.w	lr, [sp, #-8]!
  405fd8:	f7ff ffc4 	bl	405f64 <__aeabi_cdrcmple>
  405fdc:	bf34      	ite	cc
  405fde:	2001      	movcc	r0, #1
  405fe0:	2000      	movcs	r0, #0
  405fe2:	f85d fb08 	ldr.w	pc, [sp], #8
  405fe6:	bf00      	nop

00405fe8 <__aeabi_dcmpun>:
  405fe8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405fec:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405ff0:	d102      	bne.n	405ff8 <__aeabi_dcmpun+0x10>
  405ff2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405ff6:	d10a      	bne.n	40600e <__aeabi_dcmpun+0x26>
  405ff8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405ffc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406000:	d102      	bne.n	406008 <__aeabi_dcmpun+0x20>
  406002:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  406006:	d102      	bne.n	40600e <__aeabi_dcmpun+0x26>
  406008:	f04f 0000 	mov.w	r0, #0
  40600c:	4770      	bx	lr
  40600e:	f04f 0001 	mov.w	r0, #1
  406012:	4770      	bx	lr

00406014 <__aeabi_d2iz>:
  406014:	ea4f 0241 	mov.w	r2, r1, lsl #1
  406018:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  40601c:	d215      	bcs.n	40604a <__aeabi_d2iz+0x36>
  40601e:	d511      	bpl.n	406044 <__aeabi_d2iz+0x30>
  406020:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  406024:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  406028:	d912      	bls.n	406050 <__aeabi_d2iz+0x3c>
  40602a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  40602e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  406032:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  406036:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40603a:	fa23 f002 	lsr.w	r0, r3, r2
  40603e:	bf18      	it	ne
  406040:	4240      	negne	r0, r0
  406042:	4770      	bx	lr
  406044:	f04f 0000 	mov.w	r0, #0
  406048:	4770      	bx	lr
  40604a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  40604e:	d105      	bne.n	40605c <__aeabi_d2iz+0x48>
  406050:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  406054:	bf08      	it	eq
  406056:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  40605a:	4770      	bx	lr
  40605c:	f04f 0000 	mov.w	r0, #0
  406060:	4770      	bx	lr
  406062:	bf00      	nop

00406064 <__aeabi_uldivmod>:
  406064:	b953      	cbnz	r3, 40607c <__aeabi_uldivmod+0x18>
  406066:	b94a      	cbnz	r2, 40607c <__aeabi_uldivmod+0x18>
  406068:	2900      	cmp	r1, #0
  40606a:	bf08      	it	eq
  40606c:	2800      	cmpeq	r0, #0
  40606e:	bf1c      	itt	ne
  406070:	f04f 31ff 	movne.w	r1, #4294967295
  406074:	f04f 30ff 	movne.w	r0, #4294967295
  406078:	f000 b97a 	b.w	406370 <__aeabi_idiv0>
  40607c:	f1ad 0c08 	sub.w	ip, sp, #8
  406080:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  406084:	f000 f806 	bl	406094 <__udivmoddi4>
  406088:	f8dd e004 	ldr.w	lr, [sp, #4]
  40608c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  406090:	b004      	add	sp, #16
  406092:	4770      	bx	lr

00406094 <__udivmoddi4>:
  406094:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  406098:	468c      	mov	ip, r1
  40609a:	460d      	mov	r5, r1
  40609c:	4604      	mov	r4, r0
  40609e:	9e08      	ldr	r6, [sp, #32]
  4060a0:	2b00      	cmp	r3, #0
  4060a2:	d151      	bne.n	406148 <__udivmoddi4+0xb4>
  4060a4:	428a      	cmp	r2, r1
  4060a6:	4617      	mov	r7, r2
  4060a8:	d96d      	bls.n	406186 <__udivmoddi4+0xf2>
  4060aa:	fab2 fe82 	clz	lr, r2
  4060ae:	f1be 0f00 	cmp.w	lr, #0
  4060b2:	d00b      	beq.n	4060cc <__udivmoddi4+0x38>
  4060b4:	f1ce 0c20 	rsb	ip, lr, #32
  4060b8:	fa01 f50e 	lsl.w	r5, r1, lr
  4060bc:	fa20 fc0c 	lsr.w	ip, r0, ip
  4060c0:	fa02 f70e 	lsl.w	r7, r2, lr
  4060c4:	ea4c 0c05 	orr.w	ip, ip, r5
  4060c8:	fa00 f40e 	lsl.w	r4, r0, lr
  4060cc:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  4060d0:	0c25      	lsrs	r5, r4, #16
  4060d2:	fbbc f8fa 	udiv	r8, ip, sl
  4060d6:	fa1f f987 	uxth.w	r9, r7
  4060da:	fb0a cc18 	mls	ip, sl, r8, ip
  4060de:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  4060e2:	fb08 f309 	mul.w	r3, r8, r9
  4060e6:	42ab      	cmp	r3, r5
  4060e8:	d90a      	bls.n	406100 <__udivmoddi4+0x6c>
  4060ea:	19ed      	adds	r5, r5, r7
  4060ec:	f108 32ff 	add.w	r2, r8, #4294967295
  4060f0:	f080 8123 	bcs.w	40633a <__udivmoddi4+0x2a6>
  4060f4:	42ab      	cmp	r3, r5
  4060f6:	f240 8120 	bls.w	40633a <__udivmoddi4+0x2a6>
  4060fa:	f1a8 0802 	sub.w	r8, r8, #2
  4060fe:	443d      	add	r5, r7
  406100:	1aed      	subs	r5, r5, r3
  406102:	b2a4      	uxth	r4, r4
  406104:	fbb5 f0fa 	udiv	r0, r5, sl
  406108:	fb0a 5510 	mls	r5, sl, r0, r5
  40610c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  406110:	fb00 f909 	mul.w	r9, r0, r9
  406114:	45a1      	cmp	r9, r4
  406116:	d909      	bls.n	40612c <__udivmoddi4+0x98>
  406118:	19e4      	adds	r4, r4, r7
  40611a:	f100 33ff 	add.w	r3, r0, #4294967295
  40611e:	f080 810a 	bcs.w	406336 <__udivmoddi4+0x2a2>
  406122:	45a1      	cmp	r9, r4
  406124:	f240 8107 	bls.w	406336 <__udivmoddi4+0x2a2>
  406128:	3802      	subs	r0, #2
  40612a:	443c      	add	r4, r7
  40612c:	eba4 0409 	sub.w	r4, r4, r9
  406130:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406134:	2100      	movs	r1, #0
  406136:	2e00      	cmp	r6, #0
  406138:	d061      	beq.n	4061fe <__udivmoddi4+0x16a>
  40613a:	fa24 f40e 	lsr.w	r4, r4, lr
  40613e:	2300      	movs	r3, #0
  406140:	6034      	str	r4, [r6, #0]
  406142:	6073      	str	r3, [r6, #4]
  406144:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406148:	428b      	cmp	r3, r1
  40614a:	d907      	bls.n	40615c <__udivmoddi4+0xc8>
  40614c:	2e00      	cmp	r6, #0
  40614e:	d054      	beq.n	4061fa <__udivmoddi4+0x166>
  406150:	2100      	movs	r1, #0
  406152:	e886 0021 	stmia.w	r6, {r0, r5}
  406156:	4608      	mov	r0, r1
  406158:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40615c:	fab3 f183 	clz	r1, r3
  406160:	2900      	cmp	r1, #0
  406162:	f040 808e 	bne.w	406282 <__udivmoddi4+0x1ee>
  406166:	42ab      	cmp	r3, r5
  406168:	d302      	bcc.n	406170 <__udivmoddi4+0xdc>
  40616a:	4282      	cmp	r2, r0
  40616c:	f200 80fa 	bhi.w	406364 <__udivmoddi4+0x2d0>
  406170:	1a84      	subs	r4, r0, r2
  406172:	eb65 0503 	sbc.w	r5, r5, r3
  406176:	2001      	movs	r0, #1
  406178:	46ac      	mov	ip, r5
  40617a:	2e00      	cmp	r6, #0
  40617c:	d03f      	beq.n	4061fe <__udivmoddi4+0x16a>
  40617e:	e886 1010 	stmia.w	r6, {r4, ip}
  406182:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406186:	b912      	cbnz	r2, 40618e <__udivmoddi4+0xfa>
  406188:	2701      	movs	r7, #1
  40618a:	fbb7 f7f2 	udiv	r7, r7, r2
  40618e:	fab7 fe87 	clz	lr, r7
  406192:	f1be 0f00 	cmp.w	lr, #0
  406196:	d134      	bne.n	406202 <__udivmoddi4+0x16e>
  406198:	1beb      	subs	r3, r5, r7
  40619a:	0c3a      	lsrs	r2, r7, #16
  40619c:	fa1f fc87 	uxth.w	ip, r7
  4061a0:	2101      	movs	r1, #1
  4061a2:	fbb3 f8f2 	udiv	r8, r3, r2
  4061a6:	0c25      	lsrs	r5, r4, #16
  4061a8:	fb02 3318 	mls	r3, r2, r8, r3
  4061ac:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4061b0:	fb0c f308 	mul.w	r3, ip, r8
  4061b4:	42ab      	cmp	r3, r5
  4061b6:	d907      	bls.n	4061c8 <__udivmoddi4+0x134>
  4061b8:	19ed      	adds	r5, r5, r7
  4061ba:	f108 30ff 	add.w	r0, r8, #4294967295
  4061be:	d202      	bcs.n	4061c6 <__udivmoddi4+0x132>
  4061c0:	42ab      	cmp	r3, r5
  4061c2:	f200 80d1 	bhi.w	406368 <__udivmoddi4+0x2d4>
  4061c6:	4680      	mov	r8, r0
  4061c8:	1aed      	subs	r5, r5, r3
  4061ca:	b2a3      	uxth	r3, r4
  4061cc:	fbb5 f0f2 	udiv	r0, r5, r2
  4061d0:	fb02 5510 	mls	r5, r2, r0, r5
  4061d4:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  4061d8:	fb0c fc00 	mul.w	ip, ip, r0
  4061dc:	45a4      	cmp	ip, r4
  4061de:	d907      	bls.n	4061f0 <__udivmoddi4+0x15c>
  4061e0:	19e4      	adds	r4, r4, r7
  4061e2:	f100 33ff 	add.w	r3, r0, #4294967295
  4061e6:	d202      	bcs.n	4061ee <__udivmoddi4+0x15a>
  4061e8:	45a4      	cmp	ip, r4
  4061ea:	f200 80b8 	bhi.w	40635e <__udivmoddi4+0x2ca>
  4061ee:	4618      	mov	r0, r3
  4061f0:	eba4 040c 	sub.w	r4, r4, ip
  4061f4:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4061f8:	e79d      	b.n	406136 <__udivmoddi4+0xa2>
  4061fa:	4631      	mov	r1, r6
  4061fc:	4630      	mov	r0, r6
  4061fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406202:	f1ce 0420 	rsb	r4, lr, #32
  406206:	fa05 f30e 	lsl.w	r3, r5, lr
  40620a:	fa07 f70e 	lsl.w	r7, r7, lr
  40620e:	fa20 f804 	lsr.w	r8, r0, r4
  406212:	0c3a      	lsrs	r2, r7, #16
  406214:	fa25 f404 	lsr.w	r4, r5, r4
  406218:	ea48 0803 	orr.w	r8, r8, r3
  40621c:	fbb4 f1f2 	udiv	r1, r4, r2
  406220:	ea4f 4518 	mov.w	r5, r8, lsr #16
  406224:	fb02 4411 	mls	r4, r2, r1, r4
  406228:	fa1f fc87 	uxth.w	ip, r7
  40622c:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  406230:	fb01 f30c 	mul.w	r3, r1, ip
  406234:	42ab      	cmp	r3, r5
  406236:	fa00 f40e 	lsl.w	r4, r0, lr
  40623a:	d909      	bls.n	406250 <__udivmoddi4+0x1bc>
  40623c:	19ed      	adds	r5, r5, r7
  40623e:	f101 30ff 	add.w	r0, r1, #4294967295
  406242:	f080 808a 	bcs.w	40635a <__udivmoddi4+0x2c6>
  406246:	42ab      	cmp	r3, r5
  406248:	f240 8087 	bls.w	40635a <__udivmoddi4+0x2c6>
  40624c:	3902      	subs	r1, #2
  40624e:	443d      	add	r5, r7
  406250:	1aeb      	subs	r3, r5, r3
  406252:	fa1f f588 	uxth.w	r5, r8
  406256:	fbb3 f0f2 	udiv	r0, r3, r2
  40625a:	fb02 3310 	mls	r3, r2, r0, r3
  40625e:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406262:	fb00 f30c 	mul.w	r3, r0, ip
  406266:	42ab      	cmp	r3, r5
  406268:	d907      	bls.n	40627a <__udivmoddi4+0x1e6>
  40626a:	19ed      	adds	r5, r5, r7
  40626c:	f100 38ff 	add.w	r8, r0, #4294967295
  406270:	d26f      	bcs.n	406352 <__udivmoddi4+0x2be>
  406272:	42ab      	cmp	r3, r5
  406274:	d96d      	bls.n	406352 <__udivmoddi4+0x2be>
  406276:	3802      	subs	r0, #2
  406278:	443d      	add	r5, r7
  40627a:	1aeb      	subs	r3, r5, r3
  40627c:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  406280:	e78f      	b.n	4061a2 <__udivmoddi4+0x10e>
  406282:	f1c1 0720 	rsb	r7, r1, #32
  406286:	fa22 f807 	lsr.w	r8, r2, r7
  40628a:	408b      	lsls	r3, r1
  40628c:	fa05 f401 	lsl.w	r4, r5, r1
  406290:	ea48 0303 	orr.w	r3, r8, r3
  406294:	fa20 fe07 	lsr.w	lr, r0, r7
  406298:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  40629c:	40fd      	lsrs	r5, r7
  40629e:	ea4e 0e04 	orr.w	lr, lr, r4
  4062a2:	fbb5 f9fc 	udiv	r9, r5, ip
  4062a6:	ea4f 441e 	mov.w	r4, lr, lsr #16
  4062aa:	fb0c 5519 	mls	r5, ip, r9, r5
  4062ae:	fa1f f883 	uxth.w	r8, r3
  4062b2:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  4062b6:	fb09 f408 	mul.w	r4, r9, r8
  4062ba:	42ac      	cmp	r4, r5
  4062bc:	fa02 f201 	lsl.w	r2, r2, r1
  4062c0:	fa00 fa01 	lsl.w	sl, r0, r1
  4062c4:	d908      	bls.n	4062d8 <__udivmoddi4+0x244>
  4062c6:	18ed      	adds	r5, r5, r3
  4062c8:	f109 30ff 	add.w	r0, r9, #4294967295
  4062cc:	d243      	bcs.n	406356 <__udivmoddi4+0x2c2>
  4062ce:	42ac      	cmp	r4, r5
  4062d0:	d941      	bls.n	406356 <__udivmoddi4+0x2c2>
  4062d2:	f1a9 0902 	sub.w	r9, r9, #2
  4062d6:	441d      	add	r5, r3
  4062d8:	1b2d      	subs	r5, r5, r4
  4062da:	fa1f fe8e 	uxth.w	lr, lr
  4062de:	fbb5 f0fc 	udiv	r0, r5, ip
  4062e2:	fb0c 5510 	mls	r5, ip, r0, r5
  4062e6:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  4062ea:	fb00 f808 	mul.w	r8, r0, r8
  4062ee:	45a0      	cmp	r8, r4
  4062f0:	d907      	bls.n	406302 <__udivmoddi4+0x26e>
  4062f2:	18e4      	adds	r4, r4, r3
  4062f4:	f100 35ff 	add.w	r5, r0, #4294967295
  4062f8:	d229      	bcs.n	40634e <__udivmoddi4+0x2ba>
  4062fa:	45a0      	cmp	r8, r4
  4062fc:	d927      	bls.n	40634e <__udivmoddi4+0x2ba>
  4062fe:	3802      	subs	r0, #2
  406300:	441c      	add	r4, r3
  406302:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  406306:	eba4 0408 	sub.w	r4, r4, r8
  40630a:	fba0 8902 	umull	r8, r9, r0, r2
  40630e:	454c      	cmp	r4, r9
  406310:	46c6      	mov	lr, r8
  406312:	464d      	mov	r5, r9
  406314:	d315      	bcc.n	406342 <__udivmoddi4+0x2ae>
  406316:	d012      	beq.n	40633e <__udivmoddi4+0x2aa>
  406318:	b156      	cbz	r6, 406330 <__udivmoddi4+0x29c>
  40631a:	ebba 030e 	subs.w	r3, sl, lr
  40631e:	eb64 0405 	sbc.w	r4, r4, r5
  406322:	fa04 f707 	lsl.w	r7, r4, r7
  406326:	40cb      	lsrs	r3, r1
  406328:	431f      	orrs	r7, r3
  40632a:	40cc      	lsrs	r4, r1
  40632c:	6037      	str	r7, [r6, #0]
  40632e:	6074      	str	r4, [r6, #4]
  406330:	2100      	movs	r1, #0
  406332:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406336:	4618      	mov	r0, r3
  406338:	e6f8      	b.n	40612c <__udivmoddi4+0x98>
  40633a:	4690      	mov	r8, r2
  40633c:	e6e0      	b.n	406100 <__udivmoddi4+0x6c>
  40633e:	45c2      	cmp	sl, r8
  406340:	d2ea      	bcs.n	406318 <__udivmoddi4+0x284>
  406342:	ebb8 0e02 	subs.w	lr, r8, r2
  406346:	eb69 0503 	sbc.w	r5, r9, r3
  40634a:	3801      	subs	r0, #1
  40634c:	e7e4      	b.n	406318 <__udivmoddi4+0x284>
  40634e:	4628      	mov	r0, r5
  406350:	e7d7      	b.n	406302 <__udivmoddi4+0x26e>
  406352:	4640      	mov	r0, r8
  406354:	e791      	b.n	40627a <__udivmoddi4+0x1e6>
  406356:	4681      	mov	r9, r0
  406358:	e7be      	b.n	4062d8 <__udivmoddi4+0x244>
  40635a:	4601      	mov	r1, r0
  40635c:	e778      	b.n	406250 <__udivmoddi4+0x1bc>
  40635e:	3802      	subs	r0, #2
  406360:	443c      	add	r4, r7
  406362:	e745      	b.n	4061f0 <__udivmoddi4+0x15c>
  406364:	4608      	mov	r0, r1
  406366:	e708      	b.n	40617a <__udivmoddi4+0xe6>
  406368:	f1a8 0802 	sub.w	r8, r8, #2
  40636c:	443d      	add	r5, r7
  40636e:	e72b      	b.n	4061c8 <__udivmoddi4+0x134>

00406370 <__aeabi_idiv0>:
  406370:	4770      	bx	lr
  406372:	bf00      	nop

00406374 <OV2640_JPEG>:
  406374:	14e0 77e1 1fe5 03d7 10da 00e0 01ff 0804     ...w............
  406384:	ffff 0000                                   ....

00406388 <OV2640_JPEG_1024x768>:
  406388:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  406398:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  4063a8:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  4063b8:	c8c0 96c1 008c 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  4063c8:	0054 8855 005a c05b 015c 02d3 ffff 0000     T.U.Z.[.\.......

004063d8 <OV2640_JPEG_1280x1024>:
  4063d8:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  4063e8:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  4063f8:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406408:	04e0 c8c0 96c1 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  406418:	0054 8855 0057 405a f05b 015c 02d3 00e0     T.U.W.Z@[.\.....
  406428:	ffff 0000                                   ....

0040642c <OV2640_JPEG_1600x1200>:
  40642c:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  40643c:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  40644c:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  40645c:	04e0 c8c0 96c1 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  40646c:	0054 8855 0057 905a 2c5b 055c 02d3 00e0     T.U.W.Z.[,\.....
  40647c:	ffff 0000                                   ....

00406480 <OV2640_JPEG_320x240>:
  406480:	01ff 4012 1117 4318 0019 4b1a 0932 ca4f     ...@...C...K2.O.
  406490:	a850 235a 006d 1239 da35 1a22 c337 0023     P.Z#m.9.5.".7.#.
  4064a0:	c034 1a36 8806 c007 870d 410e 004c 00ff     4.6........AL...
  4064b0:	04e0 64c0 4bc1 3586 8950 c851 9652 0053     ...d.K.5P.Q.R.S.
  4064c0:	0054 0055 0057 505a 3c5b 005c 00e0 ffff     T.U.W.ZP[<\.....

004064d0 <OV2640_JPEG_640x480>:
  4064d0:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  4064e0:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  4064f0:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406500:	04e0 c8c0 96c1 3d86 8950 9051 2c52 0053     .......=P.Q.R,S.
  406510:	0054 8855 0057 a05a 785b 005c 04d3 00e0     T.U.W.Z.[x\.....
  406520:	ffff 0000                                   ....

00406524 <OV2640_JPEG_800x600>:
  406524:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  406534:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  406544:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406554:	04e0 c8c0 96c1 3586 8950 9051 2c52 0053     .......5P.Q.R,S.
  406564:	0054 8855 0057 c85a 965b 005c 02d3 00e0     T.U.W.Z.[.\.....
  406574:	ffff 0000                                   ....

00406578 <OV2640_JPEG_INIT>:
  406578:	00ff ff2c df2e 01ff 323c 0111 0209 2804     ..,.....<2.....(
  406588:	e513 4814 0c2c 7833 333a fb3b 003e 1143     ...H,.3x:3;.>.C.
  406598:	1016 9239 da35 1a22 c337 0023 c034 1a36     ..9.5.".7.#.4.6.
  4065a8:	8806 c007 870d 410e 004c 0048 005b 0342     .......AL.H.[.B.
  4065b8:	814a 9921 4024 3825 8226 005c 0063 7061     J.!.$@%8&.\.c.ap
  4065c8:	8062 057c 8020 3028 006c 806d 006e 0270     b.|. .(0l.m.n.p.
  4065d8:	9471 c173 4012 1117 4318 0019 4b1a 0932     q.s..@...C...K2.
  4065e8:	c037 604f a850 006d 383d 3f46 604f 3c0c     7.O`P.m.=8F?O`.<
  4065f8:	00ff 7fe5 c0f9 2441 14e0 ff76 a033 2042     ......A$..v.3.B 
  406608:	1843 004c d587 3f88 03d7 10d9 82d3 08c8     C.L....?........
  406618:	80c9 007c 007d 037c 487d 487d 087c 207d     ..|.}.|.}H}H|.} 
  406628:	107d 0e7d 0090 0e91 1a91 3191 5a91 6991     }.}........1.Z.i
  406638:	7591 7e91 8891 8f91 9691 a391 af91 c491     .u.~............
  406648:	d791 e891 2091 0092 0693 e393 0593 0593     ..... ..........
  406658:	0093 0493 0093 0093 0093 0093 0093 0093     ................
  406668:	0093 0096 0897 1997 0297 0c97 2497 3097     .............$.0
  406678:	2897 2697 0297 9897 8097 0097 0097 edc3     .(.&............
  406688:	00a4 00a8 11c5 51c6 80bf 10c7 66b6 a5b8     .......Q.....f..
  406698:	64b7 7cb9 afb3 97b4 ffb5 c5b0 94b1 0fb2     .d.|............
  4066a8:	5cc4 64c0 4bc1 008c 3d86 0050 c851 9652     .\.d.K...=P.Q.R.
  4066b8:	0053 0054 0055 c85a 965b 005c 00d3 edc3     S.T.U.Z.[.\.....
  4066c8:	007f 00da 1fe5 67e1 00e0 7fdd 0005 4012     .......g.......@
  4066d8:	04d3 16c0 12c1 008c 3d86 0050 2c51 2452     .........=P.Q,R$
  4066e8:	0053 0054 0055 2c5a 245b 005c ffff 0000     S.T.U.Z,[$\.....

004066f8 <OV2640_QQVGA_RGB888>:
  4066f8:	000e 8012 0013 0111 0012 10d5 120c 340d     ...............4
  406708:	2517 a018 0319 f01a 891b 0322 1829 f82b     .%........".).+.
  406718:	012c a031 f032 c433 b43a 3f36 6004 8027     ,.1.2.3.:.6?.`'.
  406728:	0f3d 803e 403f 7f40 6a41 2942 e544 4145     =.>.?@@.AjB)D.EA
  406738:	0247 6449 a14a 704b 1a4c 504d 134e 0064     G.IdJ.KpL.MPN.d.
  406748:	8867 1a68 3814 3c24 3025 7226 9750 7e51     g.h..8$<%0&rP.Q~
  406758:	0052 0053 0020 2321 1438 00e9 5556 ff57     R.S. .!#8...VUW.
  406768:	ff58 ff59 045f 00ec ff13 7f80 3f81 3282     X.Y._........?.2
  406778:	0183 1138 7084 0085 0386 0187 0588 3089     ..8..p.........0
  406788:	308d 858f 3093 8595 3099 859b 089c 129d     .0...0...0......
  406798:	239e 459f 55a0 64a1 72a2 7fa3 8ba4 95a5     .#.E.U.d.r......
  4067a8:	a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce 6ecf     .............x.n
  4067b8:	0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b 885c     ..........Z$[.\.
  4067c8:	605d 6eac ffbe 00bf 2831 3c32 3f82 0112     ]`.n....1(2<.?..
  4067d8:	2f36 0483 0053 f433 8a1b 0322 0084 0084     6/..S.3...".....
  4067e8:	0228 ffff                                   (...

004067ec <OV2640_QQVGA_YUV422>:
  4067ec:	000e 8012 0013 0111 0012 10d5 540c 340d     .............T.4
  4067fc:	0116 2517 a018 0319 f01a 891b 0322 1829     ...%........".).
  40680c:	f82b 012c a031 f032 c433 b43a 3f36 6004     +.,.1.2.3.:.6?.`
  40681c:	8027 0f3d 803e 403f 7f40 6a41 2942 e544     '.=.>.?@@.AjB)D.
  40682c:	4145 0247 6449 a14a 704b 1a4c 504d 134e     EAG.IdJ.KpL.MPN.
  40683c:	0064 8867 1a68 3814 3c24 3025 7226 9750     d.g.h..8$<%0&rP.
  40684c:	7e51 0052 0053 0020 2321 1438 00e9 5556     Q~R.S. .!#8...VU
  40685c:	ff57 ff58 ff59 045f 00ec ff13 7f80 3f81     W.X.Y._........?
  40686c:	3282 0183 1138 7084 0085 0386 0187 0588     .2..8..p........
  40687c:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  40688c:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  40689c:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  4068ac:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  4068bc:	885c 605d 6eac ffbe 00bf 2831 3c32 0034     \.]`.n....1(2<4.
  4068cc:	3f82 0012 3f36 0053 0033 891b 0322 0228     .?..6?S.3...".(.
  4068dc:	00d9 ffff                                   ....

004068e0 <OV2640_QVGA_RGB888>:
  4068e0:	000e 8012 0013 0111 0012 10d5 120c 340d     ...............4
  4068f0:	2517 a018 0319 f01a 891b 0322 1829 f82b     .%........".).+.
  406900:	012c a031 f032 c433 b43a 3f36 6004 8027     ,.1.2.3.:.6?.`'.
  406910:	0f3d 803e 403f 7f40 6a41 2942 e544 4145     =.>.?@@.AjB)D.EA
  406920:	0247 6449 a14a 704b 1a4c 504d 134e 0064     G.IdJ.KpL.MPN.d.
  406930:	8867 1a68 3814 3c24 3025 7226 9750 7e51     g.h..8$<%0&rP.Q~
  406940:	0052 0053 0020 2321 1438 00e9 5556 ff57     R.S. .!#8...VUW.
  406950:	ff58 ff59 045f 00ec ff13 7f80 3f81 3282     X.Y._........?.2
  406960:	0183 1138 7084 0085 0386 0187 0588 3089     ..8..p.........0
  406970:	308d 858f 3093 8595 3099 859b 089c 129d     .0...0...0......
  406980:	239e 459f 55a0 64a1 72a2 7fa3 8ba4 95a5     .#.E.U.d.r......
  406990:	a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce 6ecf     .............x.n
  4069a0:	0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b 885c     ..........Z$[.\.
  4069b0:	605d 6eac ffbe 00bf 5031 7832 3f82 0112     ]`.n....1P2x.?..
  4069c0:	2f36 0483 0053 f433 8a1b 0322 0084 0084     6/..S.3...".....
  4069d0:	0228 ffff                                   (...

004069d4 <OV2640_QVGA_YUV422_10FPS>:
  4069d4:	000e 8012 05fe 0013 0511 0012 10d5 d40c     ................
  4069e4:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  4069f4:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406a04:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406a14:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406a24:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  406a34:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  406a44:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  406a54:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  406a64:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406a74:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406a84:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406a94:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406aa4:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  406ab4:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00406ac4 <OV2640_QVGA_YUV422_15FPS>:
  406ac4:	000e 8012 05fe 0013 0311 0012 10d5 d40c     ................
  406ad4:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  406ae4:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406af4:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406b04:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406b14:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  406b24:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  406b34:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  406b44:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  406b54:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406b64:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406b74:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406b84:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406b94:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  406ba4:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00406bb4 <OV2640_QVGA_YUV422_20FPS>:
  406bb4:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  406bc4:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  406bd4:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406be4:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406bf4:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406c04:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  406c14:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  406c24:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  406c34:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  406c44:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406c54:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406c64:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406c74:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406c84:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  406c94:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00406ca4 <OV2640_QVGA_YUV422_30FPS>:
  406ca4:	000e 8012 05fe 0013 0111 0012 10d5 d40c     ................
  406cb4:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  406cc4:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406cd4:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406ce4:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406cf4:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  406d04:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  406d14:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  406d24:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  406d34:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406d44:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406d54:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406d64:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406d74:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  406d84:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00406d94 <OV2640_TEST_PATTERN>:
  406d94:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  406da4:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  406db4:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406dc4:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406dd4:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406de4:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  406df4:	9750 7e51 0052 0053 0020 2321 0738 0284     P.Q~R.S. .!#8...
  406e04:	1438 00e9 5556 ff57 ff58 ff59 045f 00ec     8...VUW.X.Y._...
  406e14:	ff13 7f80 3f81 3282 0183 1138 0085 0386     .....?.2..8.....
  406e24:	0187 0588 3089 308d 858f 3093 8595 3099     .....0.0...0...0
  406e34:	859b 089c 129d 239e 459f 55a0 64a1 72a2     .......#.E.U.d.r
  406e44:	7fa3 8ba4 95a5 a7a6 b5a7 cba8 dda9 ecaa     ................
  406e54:	1aab 78ce 6ecf 0ad0 0cd1 84d2 90d3 1ed4     ...x.n..........
  406e64:	245a 1f5b 885c 605d 6eac ffbe 00bf 5031     Z$[.\.]`.n....1P
  406e74:	7832 3f82 0012 3f36 0053 c433 891b 0322     2x.?..6?S.3...".
  406e84:	0228 ffff                                   (...

00406e88 <OV2640_VGA_YUV422_20FPS>:
  406e88:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  406e98:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  406ea8:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406eb8:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406ec8:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406ed8:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  406ee8:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  406ef8:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  406f08:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  406f18:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406f28:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406f38:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406f48:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406f58:	885c 605d 6eac ffbe 00bf a031 f032 3f82     \.]`.n....1.2..?
  406f68:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00406f78 <OV2640_YUV422>:
  406f78:	00ff 0005 10da 03d7 00df 8033 403c 77e1     ..........3.<@.w
  406f88:	0000 ffff c200 0001 00c0 0000 0800 0000     ................
	...
  406fa4:	5553 4343 5345 0053 6d69 6761 2065 7274     SUCCESS.image tr
  406fb4:	6e61 6673 7265 2520 0a69 0000 7270 766f     ansfer %i...prov
  406fc4:	7369 6f69 0d6e 000a 6574 7473 0a0d 0000     ision...test....

00406fd4 <_global_impure_ptr>:
  406fd4:	0018 2000 4e49 0046 6e69 0066 414e 004e     ... INF.inf.NAN.
  406fe4:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  406ff4:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  407004:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  407014:	296c 0000 0030 0000                         l)..0...

0040701c <blanks.7223>:
  40701c:	2020 2020 2020 2020 2020 2020 2020 2020                     

0040702c <zeroes.7224>:
  40702c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  40703c:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.
  40704c:	0000 0000                                   ....

00407050 <__mprec_bigtens>:
  407050:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  407060:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  407070:	bf3c 7f73 4fdd 7515                         <.s..O.u

00407078 <__mprec_tens>:
  407078:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  407088:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  407098:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  4070a8:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  4070b8:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  4070c8:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  4070d8:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  4070e8:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  4070f8:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  407108:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  407118:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  407128:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  407138:	9db4 79d9 7843 44ea                         ...yCx.D

00407140 <p05.6055>:
  407140:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  407150:	4f50 4953 0058 0000 002e 0000               POSIX.......

0040715c <_ctype_>:
  40715c:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  40716c:	2020 2020 2020 2020 2020 2020 2020 2020                     
  40717c:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  40718c:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  40719c:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  4071ac:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  4071bc:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  4071cc:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  4071dc:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00407260 <_init>:
  407260:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407262:	bf00      	nop
  407264:	bcf8      	pop	{r3, r4, r5, r6, r7}
  407266:	bc08      	pop	{r3}
  407268:	469e      	mov	lr, r3
  40726a:	4770      	bx	lr

0040726c <__init_array_start>:
  40726c:	00402ea1 	.word	0x00402ea1

00407270 <__frame_dummy_init_array_entry>:
  407270:	004000f1                                ..@.

00407274 <_fini>:
  407274:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407276:	bf00      	nop
  407278:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40727a:	bc08      	pop	{r3}
  40727c:	469e      	mov	lr, r3
  40727e:	4770      	bx	lr

00407280 <__fini_array_start>:
  407280:	004000cd 	.word	0x004000cd

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
20000008:	4770      	bx	lr
	...

2000000c <SystemCoreClock>:
2000000c:	0900 003d                                   ..=.

20000010 <_impure_ptr>:
20000010:	0018 2000 0000 0000                         ... ....

20000018 <impure_data>:
20000018:	0000 0000 0304 2000 036c 2000 03d4 2000     ....... l.. ... 
	...
200000c0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
200000d0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20000440 <__atexit_recursive_mutex>:
20000440:	0ea0 2000                                   ... 

20000444 <__malloc_av_>:
	...
2000044c:	0444 2000 0444 2000 044c 2000 044c 2000     D.. D.. L.. L.. 
2000045c:	0454 2000 0454 2000 045c 2000 045c 2000     T.. T.. \.. \.. 
2000046c:	0464 2000 0464 2000 046c 2000 046c 2000     d.. d.. l.. l.. 
2000047c:	0474 2000 0474 2000 047c 2000 047c 2000     t.. t.. |.. |.. 
2000048c:	0484 2000 0484 2000 048c 2000 048c 2000     ... ... ... ... 
2000049c:	0494 2000 0494 2000 049c 2000 049c 2000     ... ... ... ... 
200004ac:	04a4 2000 04a4 2000 04ac 2000 04ac 2000     ... ... ... ... 
200004bc:	04b4 2000 04b4 2000 04bc 2000 04bc 2000     ... ... ... ... 
200004cc:	04c4 2000 04c4 2000 04cc 2000 04cc 2000     ... ... ... ... 
200004dc:	04d4 2000 04d4 2000 04dc 2000 04dc 2000     ... ... ... ... 
200004ec:	04e4 2000 04e4 2000 04ec 2000 04ec 2000     ... ... ... ... 
200004fc:	04f4 2000 04f4 2000 04fc 2000 04fc 2000     ... ... ... ... 
2000050c:	0504 2000 0504 2000 050c 2000 050c 2000     ... ... ... ... 
2000051c:	0514 2000 0514 2000 051c 2000 051c 2000     ... ... ... ... 
2000052c:	0524 2000 0524 2000 052c 2000 052c 2000     $.. $.. ,.. ,.. 
2000053c:	0534 2000 0534 2000 053c 2000 053c 2000     4.. 4.. <.. <.. 
2000054c:	0544 2000 0544 2000 054c 2000 054c 2000     D.. D.. L.. L.. 
2000055c:	0554 2000 0554 2000 055c 2000 055c 2000     T.. T.. \.. \.. 
2000056c:	0564 2000 0564 2000 056c 2000 056c 2000     d.. d.. l.. l.. 
2000057c:	0574 2000 0574 2000 057c 2000 057c 2000     t.. t.. |.. |.. 
2000058c:	0584 2000 0584 2000 058c 2000 058c 2000     ... ... ... ... 
2000059c:	0594 2000 0594 2000 059c 2000 059c 2000     ... ... ... ... 
200005ac:	05a4 2000 05a4 2000 05ac 2000 05ac 2000     ... ... ... ... 
200005bc:	05b4 2000 05b4 2000 05bc 2000 05bc 2000     ... ... ... ... 
200005cc:	05c4 2000 05c4 2000 05cc 2000 05cc 2000     ... ... ... ... 
200005dc:	05d4 2000 05d4 2000 05dc 2000 05dc 2000     ... ... ... ... 
200005ec:	05e4 2000 05e4 2000 05ec 2000 05ec 2000     ... ... ... ... 
200005fc:	05f4 2000 05f4 2000 05fc 2000 05fc 2000     ... ... ... ... 
2000060c:	0604 2000 0604 2000 060c 2000 060c 2000     ... ... ... ... 
2000061c:	0614 2000 0614 2000 061c 2000 061c 2000     ... ... ... ... 
2000062c:	0624 2000 0624 2000 062c 2000 062c 2000     $.. $.. ,.. ,.. 
2000063c:	0634 2000 0634 2000 063c 2000 063c 2000     4.. 4.. <.. <.. 
2000064c:	0644 2000 0644 2000 064c 2000 064c 2000     D.. D.. L.. L.. 
2000065c:	0654 2000 0654 2000 065c 2000 065c 2000     T.. T.. \.. \.. 
2000066c:	0664 2000 0664 2000 066c 2000 066c 2000     d.. d.. l.. l.. 
2000067c:	0674 2000 0674 2000 067c 2000 067c 2000     t.. t.. |.. |.. 
2000068c:	0684 2000 0684 2000 068c 2000 068c 2000     ... ... ... ... 
2000069c:	0694 2000 0694 2000 069c 2000 069c 2000     ... ... ... ... 
200006ac:	06a4 2000 06a4 2000 06ac 2000 06ac 2000     ... ... ... ... 
200006bc:	06b4 2000 06b4 2000 06bc 2000 06bc 2000     ... ... ... ... 
200006cc:	06c4 2000 06c4 2000 06cc 2000 06cc 2000     ... ... ... ... 
200006dc:	06d4 2000 06d4 2000 06dc 2000 06dc 2000     ... ... ... ... 
200006ec:	06e4 2000 06e4 2000 06ec 2000 06ec 2000     ... ... ... ... 
200006fc:	06f4 2000 06f4 2000 06fc 2000 06fc 2000     ... ... ... ... 
2000070c:	0704 2000 0704 2000 070c 2000 070c 2000     ... ... ... ... 
2000071c:	0714 2000 0714 2000 071c 2000 071c 2000     ... ... ... ... 
2000072c:	0724 2000 0724 2000 072c 2000 072c 2000     $.. $.. ,.. ,.. 
2000073c:	0734 2000 0734 2000 073c 2000 073c 2000     4.. 4.. <.. <.. 
2000074c:	0744 2000 0744 2000 074c 2000 074c 2000     D.. D.. L.. L.. 
2000075c:	0754 2000 0754 2000 075c 2000 075c 2000     T.. T.. \.. \.. 
2000076c:	0764 2000 0764 2000 076c 2000 076c 2000     d.. d.. l.. l.. 
2000077c:	0774 2000 0774 2000 077c 2000 077c 2000     t.. t.. |.. |.. 
2000078c:	0784 2000 0784 2000 078c 2000 078c 2000     ... ... ... ... 
2000079c:	0794 2000 0794 2000 079c 2000 079c 2000     ... ... ... ... 
200007ac:	07a4 2000 07a4 2000 07ac 2000 07ac 2000     ... ... ... ... 
200007bc:	07b4 2000 07b4 2000 07bc 2000 07bc 2000     ... ... ... ... 
200007cc:	07c4 2000 07c4 2000 07cc 2000 07cc 2000     ... ... ... ... 
200007dc:	07d4 2000 07d4 2000 07dc 2000 07dc 2000     ... ... ... ... 
200007ec:	07e4 2000 07e4 2000 07ec 2000 07ec 2000     ... ... ... ... 
200007fc:	07f4 2000 07f4 2000 07fc 2000 07fc 2000     ... ... ... ... 
2000080c:	0804 2000 0804 2000 080c 2000 080c 2000     ... ... ... ... 
2000081c:	0814 2000 0814 2000 081c 2000 081c 2000     ... ... ... ... 
2000082c:	0824 2000 0824 2000 082c 2000 082c 2000     $.. $.. ,.. ,.. 
2000083c:	0834 2000 0834 2000 083c 2000 083c 2000     4.. 4.. <.. <.. 

2000084c <__malloc_sbrk_base>:
2000084c:	ffff ffff                                   ....

20000850 <__malloc_trim_threshold>:
20000850:	0000 0002                                   ....

20000854 <__global_locale>:
20000854:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000874:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000894:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008b4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008d4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008f4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000914:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000934:	5729 0040 52e9 0040 0000 0000 715c 0040     )W@..R@.....\q@.
20000944:	7158 0040 6ff8 0040 6ff8 0040 6ff8 0040     Xq@..o@..o@..o@.
20000954:	6ff8 0040 6ff8 0040 6ff8 0040 6ff8 0040     .o@..o@..o@..o@.
20000964:	6ff8 0040 6ff8 0040 ffff ffff ffff ffff     .o@..o@.........
20000974:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
2000099c:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...

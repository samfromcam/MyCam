
firmware.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000761c  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0040761c  0040761c  0001761c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009c0  20000000  00407624  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000508  200009c0  00407fe4  000209c0  2**2
                  ALLOC
  4 .stack        00003000  20000ec8  004084ec  000209c0  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  000209c0  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000209ea  2**0
                  CONTENTS, READONLY
  7 .debug_info   00018e5d  00000000  00000000  00020a43  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000038c0  00000000  00000000  000398a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00005896  00000000  00000000  0003d160  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000b78  00000000  00000000  000429f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000a90  00000000  00000000  0004356e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00015d4e  00000000  00000000  00043ffe  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000f8d6  00000000  00000000  00059d4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000522fb  00000000  00000000  00069622  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000025b8  00000000  00000000  000bb920  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	c8 3e 00 20 e9 13 40 00 e7 13 40 00 e7 13 40 00     .>. ..@...@...@.
  400010:	e7 13 40 00 e7 13 40 00 e7 13 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	e7 13 40 00 e7 13 40 00 00 00 00 00 e7 13 40 00     ..@...@.......@.
  40003c:	e7 13 40 00 e7 13 40 00 e7 13 40 00 e7 13 40 00     ..@...@...@...@.
  40004c:	e7 13 40 00 e7 13 40 00 e7 13 40 00 e7 13 40 00     ..@...@...@...@.
  40005c:	00 00 00 00 e7 13 40 00 e7 13 40 00 00 00 00 00     ......@...@.....
  40006c:	05 05 40 00 19 05 40 00 00 00 00 00 e7 13 40 00     ..@...@.......@.
  40007c:	e7 13 40 00 00 00 00 00 00 00 00 00 e7 13 40 00     ..@...........@.
  40008c:	e7 13 40 00 e7 13 40 00 e7 13 40 00 e7 13 40 00     ..@...@...@...@.
  40009c:	51 10 40 00 e7 13 40 00 e7 13 40 00 00 00 00 00     Q.@...@...@.....
	...
  4000b4:	e7 13 40 00 e7 13 40 00 e7 13 40 00 e7 13 40 00     ..@...@...@...@.
  4000c4:	e7 13 40 00 e7 13 40 00                             ..@...@.

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	200009c0 	.word	0x200009c0
  4000e8:	00000000 	.word	0x00000000
  4000ec:	00407624 	.word	0x00407624

004000f0 <frame_dummy>:
  4000f0:	4b0c      	ldr	r3, [pc, #48]	; (400124 <frame_dummy+0x34>)
  4000f2:	b143      	cbz	r3, 400106 <frame_dummy+0x16>
  4000f4:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x38>)
  4000f6:	490d      	ldr	r1, [pc, #52]	; (40012c <frame_dummy+0x3c>)
  4000f8:	b510      	push	{r4, lr}
  4000fa:	f3af 8000 	nop.w
  4000fe:	480c      	ldr	r0, [pc, #48]	; (400130 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b923      	cbnz	r3, 40010e <frame_dummy+0x1e>
  400104:	bd10      	pop	{r4, pc}
  400106:	480a      	ldr	r0, [pc, #40]	; (400130 <frame_dummy+0x40>)
  400108:	6803      	ldr	r3, [r0, #0]
  40010a:	b933      	cbnz	r3, 40011a <frame_dummy+0x2a>
  40010c:	4770      	bx	lr
  40010e:	4b09      	ldr	r3, [pc, #36]	; (400134 <frame_dummy+0x44>)
  400110:	2b00      	cmp	r3, #0
  400112:	d0f7      	beq.n	400104 <frame_dummy+0x14>
  400114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400118:	4718      	bx	r3
  40011a:	4b06      	ldr	r3, [pc, #24]	; (400134 <frame_dummy+0x44>)
  40011c:	2b00      	cmp	r3, #0
  40011e:	d0f5      	beq.n	40010c <frame_dummy+0x1c>
  400120:	4718      	bx	r3
  400122:	bf00      	nop
  400124:	00000000 	.word	0x00000000
  400128:	00407624 	.word	0x00407624
  40012c:	200009c4 	.word	0x200009c4
  400130:	00407624 	.word	0x00407624
  400134:	00000000 	.word	0x00000000

00400138 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400138:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40013a:	480e      	ldr	r0, [pc, #56]	; (400174 <sysclk_init+0x3c>)
  40013c:	4b0e      	ldr	r3, [pc, #56]	; (400178 <sysclk_init+0x40>)
  40013e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400140:	213e      	movs	r1, #62	; 0x3e
  400142:	2000      	movs	r0, #0
  400144:	4b0d      	ldr	r3, [pc, #52]	; (40017c <sysclk_init+0x44>)
  400146:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400148:	4c0d      	ldr	r4, [pc, #52]	; (400180 <sysclk_init+0x48>)
  40014a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  40014c:	2800      	cmp	r0, #0
  40014e:	d0fc      	beq.n	40014a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400150:	4b0c      	ldr	r3, [pc, #48]	; (400184 <sysclk_init+0x4c>)
  400152:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400154:	4a0c      	ldr	r2, [pc, #48]	; (400188 <sysclk_init+0x50>)
  400156:	4b0d      	ldr	r3, [pc, #52]	; (40018c <sysclk_init+0x54>)
  400158:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  40015a:	4c0d      	ldr	r4, [pc, #52]	; (400190 <sysclk_init+0x58>)
  40015c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  40015e:	2800      	cmp	r0, #0
  400160:	d0fc      	beq.n	40015c <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400162:	2010      	movs	r0, #16
  400164:	4b0b      	ldr	r3, [pc, #44]	; (400194 <sysclk_init+0x5c>)
  400166:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400168:	4b0b      	ldr	r3, [pc, #44]	; (400198 <sysclk_init+0x60>)
  40016a:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  40016c:	4801      	ldr	r0, [pc, #4]	; (400174 <sysclk_init+0x3c>)
  40016e:	4b02      	ldr	r3, [pc, #8]	; (400178 <sysclk_init+0x40>)
  400170:	4798      	blx	r3
  400172:	bd10      	pop	{r4, pc}
  400174:	07270e00 	.word	0x07270e00
  400178:	004015a5 	.word	0x004015a5
  40017c:	00400591 	.word	0x00400591
  400180:	004005e5 	.word	0x004005e5
  400184:	004005f5 	.word	0x004005f5
  400188:	20133f01 	.word	0x20133f01
  40018c:	400e0400 	.word	0x400e0400
  400190:	00400605 	.word	0x00400605
  400194:	0040052d 	.word	0x0040052d
  400198:	00401495 	.word	0x00401495

0040019c <pio_set_debounce_filter>:
void pio_set_debounce_filter(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_cut_off)
{
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Set Debouncing, 0 bit field no effect */
	p_pio->PIO_IFSCER = ul_mask;
  40019c:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
	/*
	 * The debouncing filter can filter a pulse of less than 1/2 Period of a
	 * programmable Divided Slow Clock:
	 * Tdiv_slclk = ((DIV+1)*2).Tslow_clock
	 */
	p_pio->PIO_SCDR = PIO_SCDR_DIV((FREQ_SLOW_CLOCK_EXT /
  4001a0:	0053      	lsls	r3, r2, #1
  4001a2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4001a6:	fbb2 f2f3 	udiv	r2, r2, r3
  4001aa:	3a01      	subs	r2, #1
  4001ac:	f3c2 020d 	ubfx	r2, r2, #0, #14
  4001b0:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
  4001b4:	4770      	bx	lr

004001b6 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  4001b6:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  4001b8:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  4001bc:	d039      	beq.n	400232 <pio_set_peripheral+0x7c>
  4001be:	d813      	bhi.n	4001e8 <pio_set_peripheral+0x32>
  4001c0:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  4001c4:	d025      	beq.n	400212 <pio_set_peripheral+0x5c>
  4001c6:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  4001ca:	d10a      	bne.n	4001e2 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4001cc:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4001ce:	4313      	orrs	r3, r2
  4001d0:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4001d2:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4001d4:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4001d6:	400b      	ands	r3, r1
  4001d8:	ea23 0302 	bic.w	r3, r3, r2
  4001dc:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4001de:	6042      	str	r2, [r0, #4]
  4001e0:	4770      	bx	lr
	switch (ul_type) {
  4001e2:	2900      	cmp	r1, #0
  4001e4:	d1fb      	bne.n	4001de <pio_set_peripheral+0x28>
  4001e6:	4770      	bx	lr
  4001e8:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4001ec:	d020      	beq.n	400230 <pio_set_peripheral+0x7a>
  4001ee:	d809      	bhi.n	400204 <pio_set_peripheral+0x4e>
  4001f0:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4001f4:	d1f3      	bne.n	4001de <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  4001f6:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4001f8:	4313      	orrs	r3, r2
  4001fa:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  4001fc:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4001fe:	4313      	orrs	r3, r2
  400200:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400202:	e7ec      	b.n	4001de <pio_set_peripheral+0x28>
	switch (ul_type) {
  400204:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400208:	d012      	beq.n	400230 <pio_set_peripheral+0x7a>
  40020a:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  40020e:	d00f      	beq.n	400230 <pio_set_peripheral+0x7a>
  400210:	e7e5      	b.n	4001de <pio_set_peripheral+0x28>
{
  400212:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400214:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400216:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400218:	43d3      	mvns	r3, r2
  40021a:	4021      	ands	r1, r4
  40021c:	461c      	mov	r4, r3
  40021e:	4019      	ands	r1, r3
  400220:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400222:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400224:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400226:	400b      	ands	r3, r1
  400228:	4023      	ands	r3, r4
  40022a:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  40022c:	6042      	str	r2, [r0, #4]
}
  40022e:	bc10      	pop	{r4}
  400230:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400232:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400234:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400236:	400b      	ands	r3, r1
  400238:	ea23 0302 	bic.w	r3, r3, r2
  40023c:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  40023e:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400240:	4313      	orrs	r3, r2
  400242:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400244:	e7cb      	b.n	4001de <pio_set_peripheral+0x28>

00400246 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400246:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400248:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  40024c:	bf14      	ite	ne
  40024e:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400250:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400252:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  400256:	bf14      	ite	ne
  400258:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
  40025a:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
  40025c:	f012 0f02 	tst.w	r2, #2
  400260:	d107      	bne.n	400272 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400262:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  400266:	bf18      	it	ne
  400268:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
  40026c:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  40026e:	6001      	str	r1, [r0, #0]
  400270:	4770      	bx	lr
		p_pio->PIO_IFSCDR = ul_mask;
  400272:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  400276:	e7f9      	b.n	40026c <pio_set_input+0x26>

00400278 <pio_set_output>:
{
  400278:	b410      	push	{r4}
  40027a:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  40027c:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  40027e:	b944      	cbnz	r4, 400292 <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
  400280:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400282:	b143      	cbz	r3, 400296 <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
  400284:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400286:	b942      	cbnz	r2, 40029a <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
  400288:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  40028a:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  40028c:	6001      	str	r1, [r0, #0]
}
  40028e:	bc10      	pop	{r4}
  400290:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400292:	6641      	str	r1, [r0, #100]	; 0x64
  400294:	e7f5      	b.n	400282 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400296:	6541      	str	r1, [r0, #84]	; 0x54
  400298:	e7f5      	b.n	400286 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  40029a:	6301      	str	r1, [r0, #48]	; 0x30
  40029c:	e7f5      	b.n	40028a <pio_set_output+0x12>

0040029e <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  40029e:	f012 0f10 	tst.w	r2, #16
  4002a2:	d010      	beq.n	4002c6 <pio_configure_interrupt+0x28>
		p_pio->PIO_AIMER = ul_mask;
  4002a4:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  4002a8:	f012 0f20 	tst.w	r2, #32
			p_pio->PIO_REHLSR = ul_mask;
  4002ac:	bf14      	ite	ne
  4002ae:	f8c0 10d4 	strne.w	r1, [r0, #212]	; 0xd4
			p_pio->PIO_FELLSR = ul_mask;
  4002b2:	f8c0 10d0 	streq.w	r1, [r0, #208]	; 0xd0
		if (ul_attr & PIO_IT_EDGE) {
  4002b6:	f012 0f40 	tst.w	r2, #64	; 0x40
			p_pio->PIO_ESR = ul_mask;
  4002ba:	bf14      	ite	ne
  4002bc:	f8c0 10c0 	strne.w	r1, [r0, #192]	; 0xc0
			p_pio->PIO_LSR = ul_mask;
  4002c0:	f8c0 10c4 	streq.w	r1, [r0, #196]	; 0xc4
  4002c4:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  4002c6:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  4002ca:	4770      	bx	lr

004002cc <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  4002cc:	6401      	str	r1, [r0, #64]	; 0x40
  4002ce:	4770      	bx	lr

004002d0 <pio_disable_interrupt>:
	p_pio->PIO_IDR = ul_mask;
  4002d0:	6441      	str	r1, [r0, #68]	; 0x44
  4002d2:	4770      	bx	lr

004002d4 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  4002d4:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  4002d6:	4770      	bx	lr

004002d8 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  4002d8:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  4002da:	4770      	bx	lr

004002dc <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
  4002dc:	b570      	push	{r4, r5, r6, lr}
  4002de:	b082      	sub	sp, #8
  4002e0:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4002e2:	0943      	lsrs	r3, r0, #5
  4002e4:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4002e8:	f203 7307 	addw	r3, r3, #1799	; 0x707
  4002ec:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
  4002ee:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  4002f2:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4002f6:	d053      	beq.n	4003a0 <pio_configure_pin+0xc4>
  4002f8:	d80a      	bhi.n	400310 <pio_configure_pin+0x34>
  4002fa:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4002fe:	d02d      	beq.n	40035c <pio_configure_pin+0x80>
  400300:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  400304:	d03b      	beq.n	40037e <pio_configure_pin+0xa2>
  400306:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  40030a:	d015      	beq.n	400338 <pio_configure_pin+0x5c>
		return 0;
  40030c:	2000      	movs	r0, #0
  40030e:	e023      	b.n	400358 <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
  400310:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  400314:	d055      	beq.n	4003c2 <pio_configure_pin+0xe6>
  400316:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  40031a:	d052      	beq.n	4003c2 <pio_configure_pin+0xe6>
  40031c:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400320:	d1f4      	bne.n	40030c <pio_configure_pin+0x30>
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  400322:	f000 011f 	and.w	r1, r0, #31
  400326:	2601      	movs	r6, #1
  400328:	462a      	mov	r2, r5
  40032a:	fa06 f101 	lsl.w	r1, r6, r1
  40032e:	4620      	mov	r0, r4
  400330:	4b2f      	ldr	r3, [pc, #188]	; (4003f0 <pio_configure_pin+0x114>)
  400332:	4798      	blx	r3
	return 1;
  400334:	4630      	mov	r0, r6
		break;
  400336:	e00f      	b.n	400358 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  400338:	f000 001f 	and.w	r0, r0, #31
  40033c:	2601      	movs	r6, #1
  40033e:	4086      	lsls	r6, r0
  400340:	4632      	mov	r2, r6
  400342:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400346:	4620      	mov	r0, r4
  400348:	4b2a      	ldr	r3, [pc, #168]	; (4003f4 <pio_configure_pin+0x118>)
  40034a:	4798      	blx	r3
	if (ul_pull_up_enable) {
  40034c:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400350:	bf14      	ite	ne
  400352:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400354:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400356:	2001      	movs	r0, #1
}
  400358:	b002      	add	sp, #8
  40035a:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  40035c:	f000 001f 	and.w	r0, r0, #31
  400360:	2601      	movs	r6, #1
  400362:	4086      	lsls	r6, r0
  400364:	4632      	mov	r2, r6
  400366:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40036a:	4620      	mov	r0, r4
  40036c:	4b21      	ldr	r3, [pc, #132]	; (4003f4 <pio_configure_pin+0x118>)
  40036e:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400370:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400374:	bf14      	ite	ne
  400376:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400378:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  40037a:	2001      	movs	r0, #1
  40037c:	e7ec      	b.n	400358 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  40037e:	f000 001f 	and.w	r0, r0, #31
  400382:	2601      	movs	r6, #1
  400384:	4086      	lsls	r6, r0
  400386:	4632      	mov	r2, r6
  400388:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  40038c:	4620      	mov	r0, r4
  40038e:	4b19      	ldr	r3, [pc, #100]	; (4003f4 <pio_configure_pin+0x118>)
  400390:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400392:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400396:	bf14      	ite	ne
  400398:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  40039a:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  40039c:	2001      	movs	r0, #1
  40039e:	e7db      	b.n	400358 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  4003a0:	f000 001f 	and.w	r0, r0, #31
  4003a4:	2601      	movs	r6, #1
  4003a6:	4086      	lsls	r6, r0
  4003a8:	4632      	mov	r2, r6
  4003aa:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  4003ae:	4620      	mov	r0, r4
  4003b0:	4b10      	ldr	r3, [pc, #64]	; (4003f4 <pio_configure_pin+0x118>)
  4003b2:	4798      	blx	r3
	if (ul_pull_up_enable) {
  4003b4:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  4003b8:	bf14      	ite	ne
  4003ba:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  4003bc:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  4003be:	2001      	movs	r0, #1
  4003c0:	e7ca      	b.n	400358 <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  4003c2:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4003c6:	f000 011f 	and.w	r1, r0, #31
  4003ca:	2601      	movs	r6, #1
  4003cc:	ea05 0306 	and.w	r3, r5, r6
  4003d0:	9300      	str	r3, [sp, #0]
  4003d2:	f3c5 0380 	ubfx	r3, r5, #2, #1
  4003d6:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  4003da:	bf14      	ite	ne
  4003dc:	2200      	movne	r2, #0
  4003de:	2201      	moveq	r2, #1
  4003e0:	fa06 f101 	lsl.w	r1, r6, r1
  4003e4:	4620      	mov	r0, r4
  4003e6:	4c04      	ldr	r4, [pc, #16]	; (4003f8 <pio_configure_pin+0x11c>)
  4003e8:	47a0      	blx	r4
	return 1;
  4003ea:	4630      	mov	r0, r6
		break;
  4003ec:	e7b4      	b.n	400358 <pio_configure_pin+0x7c>
  4003ee:	bf00      	nop
  4003f0:	00400247 	.word	0x00400247
  4003f4:	004001b7 	.word	0x004001b7
  4003f8:	00400279 	.word	0x00400279

004003fc <pio_capture_enable>:
 *
 * \param p_pio Pointer to a PIO instance.
 */
void pio_capture_enable(Pio *p_pio)
{
	p_pio->PIO_PCMR |= PIO_PCMR_PCEN;
  4003fc:	f8d0 3150 	ldr.w	r3, [r0, #336]	; 0x150
  400400:	f043 0301 	orr.w	r3, r3, #1
  400404:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
	pio_capture_enable_flag = true;
  400408:	2201      	movs	r2, #1
  40040a:	4b01      	ldr	r3, [pc, #4]	; (400410 <pio_capture_enable+0x14>)
  40040c:	601a      	str	r2, [r3, #0]
  40040e:	4770      	bx	lr
  400410:	20000aa8 	.word	0x20000aa8

00400414 <pio_capture_disable>:
 *
 * \param p_pio Pointer to a PIO instance.
 */
void pio_capture_disable(Pio *p_pio)
{
	p_pio->PIO_PCMR &= (~PIO_PCMR_PCEN);
  400414:	f8d0 3150 	ldr.w	r3, [r0, #336]	; 0x150
  400418:	f023 0301 	bic.w	r3, r3, #1
  40041c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
	pio_capture_enable_flag = false;
  400420:	2200      	movs	r2, #0
  400422:	4b01      	ldr	r3, [pc, #4]	; (400428 <pio_capture_disable+0x14>)
  400424:	601a      	str	r2, [r3, #0]
  400426:	4770      	bx	lr
  400428:	20000aa8 	.word	0x20000aa8

0040042c <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  40042c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400430:	4681      	mov	r9, r0
  400432:	460f      	mov	r7, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400434:	4b12      	ldr	r3, [pc, #72]	; (400480 <pio_handler_process+0x54>)
  400436:	4798      	blx	r3
  400438:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  40043a:	4648      	mov	r0, r9
  40043c:	4b11      	ldr	r3, [pc, #68]	; (400484 <pio_handler_process+0x58>)
  40043e:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400440:	4005      	ands	r5, r0
  400442:	d013      	beq.n	40046c <pio_handler_process+0x40>
  400444:	4c10      	ldr	r4, [pc, #64]	; (400488 <pio_handler_process+0x5c>)
  400446:	f104 0660 	add.w	r6, r4, #96	; 0x60
  40044a:	e003      	b.n	400454 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  40044c:	42b4      	cmp	r4, r6
  40044e:	d00d      	beq.n	40046c <pio_handler_process+0x40>
  400450:	3410      	adds	r4, #16
		while (status != 0) {
  400452:	b15d      	cbz	r5, 40046c <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400454:	6820      	ldr	r0, [r4, #0]
  400456:	42b8      	cmp	r0, r7
  400458:	d1f8      	bne.n	40044c <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  40045a:	6861      	ldr	r1, [r4, #4]
  40045c:	4229      	tst	r1, r5
  40045e:	d0f5      	beq.n	40044c <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400460:	68e3      	ldr	r3, [r4, #12]
  400462:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400464:	6863      	ldr	r3, [r4, #4]
  400466:	ea25 0503 	bic.w	r5, r5, r3
  40046a:	e7ef      	b.n	40044c <pio_handler_process+0x20>
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  40046c:	4b07      	ldr	r3, [pc, #28]	; (40048c <pio_handler_process+0x60>)
  40046e:	681b      	ldr	r3, [r3, #0]
  400470:	b123      	cbz	r3, 40047c <pio_handler_process+0x50>
		if (pio_capture_handler) {
  400472:	4b07      	ldr	r3, [pc, #28]	; (400490 <pio_handler_process+0x64>)
  400474:	681b      	ldr	r3, [r3, #0]
  400476:	b10b      	cbz	r3, 40047c <pio_handler_process+0x50>
			pio_capture_handler(p_pio);
  400478:	4648      	mov	r0, r9
  40047a:	4798      	blx	r3
  40047c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400480:	004002d5 	.word	0x004002d5
  400484:	004002d9 	.word	0x004002d9
  400488:	200009dc 	.word	0x200009dc
  40048c:	20000aa8 	.word	0x20000aa8
  400490:	20000a50 	.word	0x20000a50

00400494 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400494:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400496:	4c18      	ldr	r4, [pc, #96]	; (4004f8 <pio_handler_set+0x64>)
  400498:	6826      	ldr	r6, [r4, #0]
  40049a:	2e06      	cmp	r6, #6
  40049c:	d829      	bhi.n	4004f2 <pio_handler_set+0x5e>
  40049e:	f04f 0c00 	mov.w	ip, #0
  4004a2:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  4004a4:	4f15      	ldr	r7, [pc, #84]	; (4004fc <pio_handler_set+0x68>)
  4004a6:	e004      	b.n	4004b2 <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  4004a8:	3401      	adds	r4, #1
  4004aa:	b2e4      	uxtb	r4, r4
  4004ac:	46a4      	mov	ip, r4
  4004ae:	42a6      	cmp	r6, r4
  4004b0:	d309      	bcc.n	4004c6 <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  4004b2:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  4004b4:	0125      	lsls	r5, r4, #4
  4004b6:	597d      	ldr	r5, [r7, r5]
  4004b8:	428d      	cmp	r5, r1
  4004ba:	d1f5      	bne.n	4004a8 <pio_handler_set+0x14>
  4004bc:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  4004c0:	686d      	ldr	r5, [r5, #4]
  4004c2:	4295      	cmp	r5, r2
  4004c4:	d1f0      	bne.n	4004a8 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  4004c6:	4d0d      	ldr	r5, [pc, #52]	; (4004fc <pio_handler_set+0x68>)
  4004c8:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  4004cc:	eb05 040e 	add.w	r4, r5, lr
  4004d0:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  4004d4:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  4004d6:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  4004d8:	9906      	ldr	r1, [sp, #24]
  4004da:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  4004dc:	3601      	adds	r6, #1
  4004de:	4566      	cmp	r6, ip
		gs_ul_nb_sources++;
  4004e0:	bf04      	itt	eq
  4004e2:	4905      	ldreq	r1, [pc, #20]	; (4004f8 <pio_handler_set+0x64>)
  4004e4:	600e      	streq	r6, [r1, #0]
  4004e6:	4611      	mov	r1, r2
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  4004e8:	461a      	mov	r2, r3
  4004ea:	4b05      	ldr	r3, [pc, #20]	; (400500 <pio_handler_set+0x6c>)
  4004ec:	4798      	blx	r3

	return 0;
  4004ee:	2000      	movs	r0, #0
  4004f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return 1;
  4004f2:	2001      	movs	r0, #1
}
  4004f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4004f6:	bf00      	nop
  4004f8:	20000a4c 	.word	0x20000a4c
  4004fc:	200009dc 	.word	0x200009dc
  400500:	0040029f 	.word	0x0040029f

00400504 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400504:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400506:	210b      	movs	r1, #11
  400508:	4801      	ldr	r0, [pc, #4]	; (400510 <PIOA_Handler+0xc>)
  40050a:	4b02      	ldr	r3, [pc, #8]	; (400514 <PIOA_Handler+0x10>)
  40050c:	4798      	blx	r3
  40050e:	bd08      	pop	{r3, pc}
  400510:	400e0e00 	.word	0x400e0e00
  400514:	0040042d 	.word	0x0040042d

00400518 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400518:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  40051a:	210c      	movs	r1, #12
  40051c:	4801      	ldr	r0, [pc, #4]	; (400524 <PIOB_Handler+0xc>)
  40051e:	4b02      	ldr	r3, [pc, #8]	; (400528 <PIOB_Handler+0x10>)
  400520:	4798      	blx	r3
  400522:	bd08      	pop	{r3, pc}
  400524:	400e1000 	.word	0x400e1000
  400528:	0040042d 	.word	0x0040042d

0040052c <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  40052c:	4a17      	ldr	r2, [pc, #92]	; (40058c <pmc_switch_mck_to_pllack+0x60>)
  40052e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400530:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400534:	4318      	orrs	r0, r3
  400536:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400538:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40053a:	f013 0f08 	tst.w	r3, #8
  40053e:	d10a      	bne.n	400556 <pmc_switch_mck_to_pllack+0x2a>
  400540:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400544:	4911      	ldr	r1, [pc, #68]	; (40058c <pmc_switch_mck_to_pllack+0x60>)
  400546:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400548:	f012 0f08 	tst.w	r2, #8
  40054c:	d103      	bne.n	400556 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40054e:	3b01      	subs	r3, #1
  400550:	d1f9      	bne.n	400546 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400552:	2001      	movs	r0, #1
  400554:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400556:	4a0d      	ldr	r2, [pc, #52]	; (40058c <pmc_switch_mck_to_pllack+0x60>)
  400558:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40055a:	f023 0303 	bic.w	r3, r3, #3
  40055e:	f043 0302 	orr.w	r3, r3, #2
  400562:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400564:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400566:	f013 0f08 	tst.w	r3, #8
  40056a:	d10a      	bne.n	400582 <pmc_switch_mck_to_pllack+0x56>
  40056c:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400570:	4906      	ldr	r1, [pc, #24]	; (40058c <pmc_switch_mck_to_pllack+0x60>)
  400572:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400574:	f012 0f08 	tst.w	r2, #8
  400578:	d105      	bne.n	400586 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40057a:	3b01      	subs	r3, #1
  40057c:	d1f9      	bne.n	400572 <pmc_switch_mck_to_pllack+0x46>
			return 1;
  40057e:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400580:	4770      	bx	lr
	return 0;
  400582:	2000      	movs	r0, #0
  400584:	4770      	bx	lr
  400586:	2000      	movs	r0, #0
  400588:	4770      	bx	lr
  40058a:	bf00      	nop
  40058c:	400e0400 	.word	0x400e0400

00400590 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400590:	b9c8      	cbnz	r0, 4005c6 <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400592:	4a11      	ldr	r2, [pc, #68]	; (4005d8 <pmc_switch_mainck_to_xtal+0x48>)
  400594:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400596:	0209      	lsls	r1, r1, #8
  400598:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  40059a:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  40059e:	f023 0303 	bic.w	r3, r3, #3
  4005a2:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4005a6:	f043 0301 	orr.w	r3, r3, #1
  4005aa:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4005ac:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4005ae:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4005b0:	f013 0f01 	tst.w	r3, #1
  4005b4:	d0fb      	beq.n	4005ae <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  4005b6:	4a08      	ldr	r2, [pc, #32]	; (4005d8 <pmc_switch_mainck_to_xtal+0x48>)
  4005b8:	6a13      	ldr	r3, [r2, #32]
  4005ba:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  4005be:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4005c2:	6213      	str	r3, [r2, #32]
  4005c4:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4005c6:	4904      	ldr	r1, [pc, #16]	; (4005d8 <pmc_switch_mainck_to_xtal+0x48>)
  4005c8:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4005ca:	4a04      	ldr	r2, [pc, #16]	; (4005dc <pmc_switch_mainck_to_xtal+0x4c>)
  4005cc:	401a      	ands	r2, r3
  4005ce:	4b04      	ldr	r3, [pc, #16]	; (4005e0 <pmc_switch_mainck_to_xtal+0x50>)
  4005d0:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4005d2:	620b      	str	r3, [r1, #32]
  4005d4:	4770      	bx	lr
  4005d6:	bf00      	nop
  4005d8:	400e0400 	.word	0x400e0400
  4005dc:	fec8fffc 	.word	0xfec8fffc
  4005e0:	01370002 	.word	0x01370002

004005e4 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  4005e4:	4b02      	ldr	r3, [pc, #8]	; (4005f0 <pmc_osc_is_ready_mainck+0xc>)
  4005e6:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4005e8:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4005ec:	4770      	bx	lr
  4005ee:	bf00      	nop
  4005f0:	400e0400 	.word	0x400e0400

004005f4 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  4005f4:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4005f8:	4b01      	ldr	r3, [pc, #4]	; (400600 <pmc_disable_pllack+0xc>)
  4005fa:	629a      	str	r2, [r3, #40]	; 0x28
  4005fc:	4770      	bx	lr
  4005fe:	bf00      	nop
  400600:	400e0400 	.word	0x400e0400

00400604 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400604:	4b02      	ldr	r3, [pc, #8]	; (400610 <pmc_is_locked_pllack+0xc>)
  400606:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400608:	f000 0002 	and.w	r0, r0, #2
  40060c:	4770      	bx	lr
  40060e:	bf00      	nop
  400610:	400e0400 	.word	0x400e0400

00400614 <pmc_enable_pllbck>:
 * \param mulb PLLB multiplier.
 * \param pllbcount PLLB counter.
 * \param divb Divider.
 */
void pmc_enable_pllbck(uint32_t mulb, uint32_t pllbcount, uint32_t divb)
{
  400614:	b410      	push	{r4}
/**
 * \brief Disable PLLB clock.
 */
void pmc_disable_pllbck(void)
{
	PMC->CKGR_PLLBR = CKGR_PLLBR_MULB(0);
  400616:	4c0a      	ldr	r4, [pc, #40]	; (400640 <pmc_enable_pllbck+0x2c>)
  400618:	2300      	movs	r3, #0
  40061a:	62e3      	str	r3, [r4, #44]	; 0x2c
			CKGR_PLLBR_DIVB(divb) | CKGR_PLLBR_PLLBCOUNT(pllbcount)
  40061c:	0209      	lsls	r1, r1, #8
  40061e:	f401 517c 	and.w	r1, r1, #16128	; 0x3f00
  400622:	b2d2      	uxtb	r2, r2
  400624:	4311      	orrs	r1, r2
			| CKGR_PLLBR_MULB(mulb);
  400626:	4b07      	ldr	r3, [pc, #28]	; (400644 <pmc_enable_pllbck+0x30>)
  400628:	ea03 4000 	and.w	r0, r3, r0, lsl #16
  40062c:	4301      	orrs	r1, r0
	PMC->CKGR_PLLBR =
  40062e:	62e1      	str	r1, [r4, #44]	; 0x2c
	while ((PMC->PMC_SR & PMC_SR_LOCKB) == 0);
  400630:	4622      	mov	r2, r4
  400632:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400634:	f013 0f04 	tst.w	r3, #4
  400638:	d0fb      	beq.n	400632 <pmc_enable_pllbck+0x1e>
}
  40063a:	bc10      	pop	{r4}
  40063c:	4770      	bx	lr
  40063e:	bf00      	nop
  400640:	400e0400 	.word	0x400e0400
  400644:	07ff0000 	.word	0x07ff0000

00400648 <pmc_enable_periph_clk>:
	PMC->PMC_PCR = ul_id & 0x7F;
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
	PMC->PMC_PCR = pcr;
	return 0;
#else
	if (ul_id > MAX_PERIPH_ID) {
  400648:	2822      	cmp	r0, #34	; 0x22
  40064a:	d81e      	bhi.n	40068a <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  40064c:	281f      	cmp	r0, #31
  40064e:	d80c      	bhi.n	40066a <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400650:	4b11      	ldr	r3, [pc, #68]	; (400698 <pmc_enable_periph_clk+0x50>)
  400652:	699a      	ldr	r2, [r3, #24]
  400654:	2301      	movs	r3, #1
  400656:	4083      	lsls	r3, r0
  400658:	4393      	bics	r3, r2
  40065a:	d018      	beq.n	40068e <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  40065c:	2301      	movs	r3, #1
  40065e:	fa03 f000 	lsl.w	r0, r3, r0
  400662:	4b0d      	ldr	r3, [pc, #52]	; (400698 <pmc_enable_periph_clk+0x50>)
  400664:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400666:	2000      	movs	r0, #0
  400668:	4770      	bx	lr
		ul_id -= 32;
  40066a:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  40066c:	4b0a      	ldr	r3, [pc, #40]	; (400698 <pmc_enable_periph_clk+0x50>)
  40066e:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  400672:	2301      	movs	r3, #1
  400674:	4083      	lsls	r3, r0
  400676:	4393      	bics	r3, r2
  400678:	d00b      	beq.n	400692 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  40067a:	2301      	movs	r3, #1
  40067c:	fa03 f000 	lsl.w	r0, r3, r0
  400680:	4b05      	ldr	r3, [pc, #20]	; (400698 <pmc_enable_periph_clk+0x50>)
  400682:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  400686:	2000      	movs	r0, #0
  400688:	4770      	bx	lr
		return 1;
  40068a:	2001      	movs	r0, #1
  40068c:	4770      	bx	lr
	return 0;
  40068e:	2000      	movs	r0, #0
  400690:	4770      	bx	lr
  400692:	2000      	movs	r0, #0
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
  400694:	4770      	bx	lr
  400696:	bf00      	nop
  400698:	400e0400 	.word	0x400e0400

0040069c <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  40069c:	b508      	push	{r3, lr}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  40069e:	2015      	movs	r0, #21
  4006a0:	4b01      	ldr	r3, [pc, #4]	; (4006a8 <spi_enable_clock+0xc>)
  4006a2:	4798      	blx	r3
  4006a4:	bd08      	pop	{r3, pc}
  4006a6:	bf00      	nop
  4006a8:	00400649 	.word	0x00400649

004006ac <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  4006ac:	6843      	ldr	r3, [r0, #4]
  4006ae:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  4006b2:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  4006b4:	6843      	ldr	r3, [r0, #4]
  4006b6:	0409      	lsls	r1, r1, #16
  4006b8:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  4006bc:	4319      	orrs	r1, r3
  4006be:	6041      	str	r1, [r0, #4]
  4006c0:	4770      	bx	lr

004006c2 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  4006c2:	b932      	cbnz	r2, 4006d2 <spi_set_clock_polarity+0x10>
  4006c4:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  4006c8:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4006ca:	f023 0301 	bic.w	r3, r3, #1
  4006ce:	6303      	str	r3, [r0, #48]	; 0x30
  4006d0:	4770      	bx	lr
  4006d2:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  4006d6:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4006d8:	f043 0301 	orr.w	r3, r3, #1
  4006dc:	6303      	str	r3, [r0, #48]	; 0x30
  4006de:	4770      	bx	lr

004006e0 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  4006e0:	b932      	cbnz	r2, 4006f0 <spi_set_clock_phase+0x10>
  4006e2:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  4006e6:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4006e8:	f023 0302 	bic.w	r3, r3, #2
  4006ec:	6303      	str	r3, [r0, #48]	; 0x30
  4006ee:	4770      	bx	lr
  4006f0:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  4006f4:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4006f6:	f043 0302 	orr.w	r3, r3, #2
  4006fa:	6303      	str	r3, [r0, #48]	; 0x30
  4006fc:	4770      	bx	lr

004006fe <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  4006fe:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  400702:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400704:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  400708:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  40070a:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40070c:	431a      	orrs	r2, r3
  40070e:	630a      	str	r2, [r1, #48]	; 0x30
  400710:	4770      	bx	lr

00400712 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  400712:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400714:	0189      	lsls	r1, r1, #6
  400716:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  400718:	2402      	movs	r4, #2
  40071a:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  40071c:	f04f 31ff 	mov.w	r1, #4294967295
  400720:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  400722:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  400724:	605a      	str	r2, [r3, #4]
}
  400726:	bc10      	pop	{r4}
  400728:	4770      	bx	lr

0040072a <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  40072a:	0189      	lsls	r1, r1, #6
  40072c:	2305      	movs	r3, #5
  40072e:	5043      	str	r3, [r0, r1]
  400730:	4770      	bx	lr

00400732 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  400732:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  400736:	61ca      	str	r2, [r1, #28]
  400738:	4770      	bx	lr

0040073a <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  40073a:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
  40073e:	624a      	str	r2, [r1, #36]	; 0x24
  400740:	4770      	bx	lr

00400742 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400742:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
  400746:	6a08      	ldr	r0, [r1, #32]
}
  400748:	4770      	bx	lr

0040074a <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  40074a:	b4f0      	push	{r4, r5, r6, r7}
  40074c:	b086      	sub	sp, #24
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  40074e:	2402      	movs	r4, #2
  400750:	9401      	str	r4, [sp, #4]
  400752:	2408      	movs	r4, #8
  400754:	9402      	str	r4, [sp, #8]
  400756:	2420      	movs	r4, #32
  400758:	9403      	str	r4, [sp, #12]
  40075a:	2480      	movs	r4, #128	; 0x80
  40075c:	9404      	str	r4, [sp, #16]
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
  40075e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  400760:	0be4      	lsrs	r4, r4, #15
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  400762:	9405      	str	r4, [sp, #20]
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
		if (ul_freq > ul_high) {
  400764:	ebb0 0f51 	cmp.w	r0, r1, lsr #1
  400768:	d814      	bhi.n	400794 <tc_find_mck_divisor+0x4a>
  40076a:	0c4c      	lsrs	r4, r1, #17
			return 0;
		} else if (ul_freq >= ul_low) {
  40076c:	42a0      	cmp	r0, r4
  40076e:	d217      	bcs.n	4007a0 <tc_find_mck_divisor+0x56>
  400770:	2501      	movs	r5, #1
		ul_high = ul_mck / divisors[ul_index];
  400772:	af01      	add	r7, sp, #4
  400774:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
  400778:	fbb1 f4f4 	udiv	r4, r1, r4
		ul_low  = ul_high / TC_DIV_FACTOR;
  40077c:	0c26      	lsrs	r6, r4, #16
		if (ul_freq > ul_high) {
  40077e:	4284      	cmp	r4, r0
  400780:	d30a      	bcc.n	400798 <tc_find_mck_divisor+0x4e>
		} else if (ul_freq >= ul_low) {
  400782:	4286      	cmp	r6, r0
  400784:	d90d      	bls.n	4007a2 <tc_find_mck_divisor+0x58>
			ul_index++) {
  400786:	3501      	adds	r5, #1
	for (ul_index = 0;
  400788:	2d05      	cmp	r5, #5
  40078a:	d1f3      	bne.n	400774 <tc_find_mck_divisor+0x2a>
			break;
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
		return 0;
  40078c:	2000      	movs	r0, #0
	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
}
  40078e:	b006      	add	sp, #24
  400790:	bcf0      	pop	{r4, r5, r6, r7}
  400792:	4770      	bx	lr
			return 0;
  400794:	2000      	movs	r0, #0
  400796:	e7fa      	b.n	40078e <tc_find_mck_divisor+0x44>
  400798:	2000      	movs	r0, #0
  40079a:	e7f8      	b.n	40078e <tc_find_mck_divisor+0x44>
	return 1;
  40079c:	2001      	movs	r0, #1
  40079e:	e7f6      	b.n	40078e <tc_find_mck_divisor+0x44>
	for (ul_index = 0;
  4007a0:	2500      	movs	r5, #0
	if (p_uldiv) {
  4007a2:	b12a      	cbz	r2, 4007b0 <tc_find_mck_divisor+0x66>
		*p_uldiv = divisors[ul_index];
  4007a4:	a906      	add	r1, sp, #24
  4007a6:	eb01 0185 	add.w	r1, r1, r5, lsl #2
  4007aa:	f851 1c14 	ldr.w	r1, [r1, #-20]
  4007ae:	6011      	str	r1, [r2, #0]
	if (p_ultcclks) {
  4007b0:	2b00      	cmp	r3, #0
  4007b2:	d0f3      	beq.n	40079c <tc_find_mck_divisor+0x52>
		*p_ultcclks = ul_index;
  4007b4:	601d      	str	r5, [r3, #0]
	return 1;
  4007b6:	2001      	movs	r0, #1
  4007b8:	e7e9      	b.n	40078e <tc_find_mck_divisor+0x44>
	...

004007bc <twi_set_speed>:
{
	uint32_t ckdiv = 0;
	uint32_t c_lh_div;
	uint32_t cldiv, chdiv;

	if (ul_speed > I2C_FAST_MODE_SPEED) {
  4007bc:	4b2a      	ldr	r3, [pc, #168]	; (400868 <twi_set_speed+0xac>)
  4007be:	4299      	cmp	r1, r3
  4007c0:	d849      	bhi.n	400856 <twi_set_speed+0x9a>
		return FAIL;
	}

	/* Low level time not less than 1.3us of I2C Fast Mode. */
	if (ul_speed > LOW_LEVEL_TIME_LIMIT) {
  4007c2:	f5a3 537a 	sub.w	r3, r3, #16000	; 0x3e80
  4007c6:	4299      	cmp	r1, r3
  4007c8:	d92b      	bls.n	400822 <twi_set_speed+0x66>
{
  4007ca:	b410      	push	{r4}
		/* Low level of time fixed for 1.3us. */
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  4007cc:	4c27      	ldr	r4, [pc, #156]	; (40086c <twi_set_speed+0xb0>)
  4007ce:	fba4 3402 	umull	r3, r4, r4, r2
  4007d2:	0ba4      	lsrs	r4, r4, #14
  4007d4:	3c04      	subs	r4, #4
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  4007d6:	4b26      	ldr	r3, [pc, #152]	; (400870 <twi_set_speed+0xb4>)
  4007d8:	440b      	add	r3, r1
  4007da:	009b      	lsls	r3, r3, #2
  4007dc:	fbb2 f2f3 	udiv	r2, r2, r3
  4007e0:	3a04      	subs	r2, #4
		
		/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4007e2:	2cff      	cmp	r4, #255	; 0xff
  4007e4:	d939      	bls.n	40085a <twi_set_speed+0x9e>
  4007e6:	2100      	movs	r1, #0
			/* Increase clock divider */
			ckdiv++;
  4007e8:	3101      	adds	r1, #1
			/* Divide cldiv value */
			cldiv /= TWI_CLK_DIVIDER;
  4007ea:	0864      	lsrs	r4, r4, #1
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4007ec:	2cff      	cmp	r4, #255	; 0xff
  4007ee:	d90d      	bls.n	40080c <twi_set_speed+0x50>
  4007f0:	2907      	cmp	r1, #7
  4007f2:	d1f9      	bne.n	4007e8 <twi_set_speed+0x2c>
			chdiv /= TWI_CLK_DIVIDER;
		}

		/* set clock waveform generator register */
		p_twi->TWI_CWGR =
				TWI_CWGR_CLDIV(cldiv) | TWI_CWGR_CHDIV(chdiv) |
  4007f4:	0213      	lsls	r3, r2, #8
  4007f6:	b29b      	uxth	r3, r3
				TWI_CWGR_CKDIV(ckdiv);		
  4007f8:	0409      	lsls	r1, r1, #16
  4007fa:	f401 21e0 	and.w	r1, r1, #458752	; 0x70000
				TWI_CWGR_CLDIV(cldiv) | TWI_CWGR_CHDIV(chdiv) |
  4007fe:	430b      	orrs	r3, r1
  400800:	b2e4      	uxtb	r4, r4
  400802:	4323      	orrs	r3, r4
		p_twi->TWI_CWGR =
  400804:	6103      	str	r3, [r0, #16]
		p_twi->TWI_CWGR =
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
				TWI_CWGR_CKDIV(ckdiv);
	}

	return PASS;
  400806:	2000      	movs	r0, #0
}
  400808:	bc10      	pop	{r4}
  40080a:	4770      	bx	lr
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40080c:	2aff      	cmp	r2, #255	; 0xff
  40080e:	d9f1      	bls.n	4007f4 <twi_set_speed+0x38>
  400810:	2906      	cmp	r1, #6
  400812:	d8ef      	bhi.n	4007f4 <twi_set_speed+0x38>
			ckdiv++;
  400814:	3101      	adds	r1, #1
			chdiv /= TWI_CLK_DIVIDER;
  400816:	0852      	lsrs	r2, r2, #1
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400818:	2aff      	cmp	r2, #255	; 0xff
  40081a:	d9eb      	bls.n	4007f4 <twi_set_speed+0x38>
  40081c:	2906      	cmp	r1, #6
  40081e:	d9f9      	bls.n	400814 <twi_set_speed+0x58>
  400820:	e7e8      	b.n	4007f4 <twi_set_speed+0x38>
		c_lh_div = ul_mck / (ul_speed * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  400822:	0049      	lsls	r1, r1, #1
  400824:	fbb2 f2f1 	udiv	r2, r2, r1
  400828:	3a04      	subs	r2, #4
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40082a:	2aff      	cmp	r2, #255	; 0xff
  40082c:	d911      	bls.n	400852 <twi_set_speed+0x96>
  40082e:	2300      	movs	r3, #0
			ckdiv++;
  400830:	3301      	adds	r3, #1
			c_lh_div /= TWI_CLK_DIVIDER;
  400832:	0852      	lsrs	r2, r2, #1
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400834:	2aff      	cmp	r2, #255	; 0xff
  400836:	d901      	bls.n	40083c <twi_set_speed+0x80>
  400838:	2b07      	cmp	r3, #7
  40083a:	d1f9      	bne.n	400830 <twi_set_speed+0x74>
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
  40083c:	0211      	lsls	r1, r2, #8
  40083e:	b289      	uxth	r1, r1
				TWI_CWGR_CKDIV(ckdiv);
  400840:	041b      	lsls	r3, r3, #16
  400842:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
  400846:	430b      	orrs	r3, r1
  400848:	b2d2      	uxtb	r2, r2
  40084a:	431a      	orrs	r2, r3
		p_twi->TWI_CWGR =
  40084c:	6102      	str	r2, [r0, #16]
	return PASS;
  40084e:	2000      	movs	r0, #0
  400850:	4770      	bx	lr
	uint32_t ckdiv = 0;
  400852:	2300      	movs	r3, #0
  400854:	e7f2      	b.n	40083c <twi_set_speed+0x80>
		return FAIL;
  400856:	2001      	movs	r0, #1
  400858:	4770      	bx	lr
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40085a:	2aff      	cmp	r2, #255	; 0xff
	uint32_t ckdiv = 0;
  40085c:	bf88      	it	hi
  40085e:	2100      	movhi	r1, #0
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400860:	d8d8      	bhi.n	400814 <twi_set_speed+0x58>
	uint32_t ckdiv = 0;
  400862:	2100      	movs	r1, #0
  400864:	e7c6      	b.n	4007f4 <twi_set_speed+0x38>
  400866:	bf00      	nop
  400868:	00061a80 	.word	0x00061a80
  40086c:	057619f1 	.word	0x057619f1
  400870:	3ffd1200 	.word	0x3ffd1200

00400874 <twi_master_init>:
{
  400874:	b538      	push	{r3, r4, r5, lr}
  400876:	4604      	mov	r4, r0
  400878:	460d      	mov	r5, r1
	p_twi->TWI_IDR = ~0UL;
  40087a:	f04f 33ff 	mov.w	r3, #4294967295
  40087e:	6283      	str	r3, [r0, #40]	; 0x28
	p_twi->TWI_SR;
  400880:	6a03      	ldr	r3, [r0, #32]
 * \param p_twi Pointer to a TWI instance.
 */
void twi_reset(Twi *p_twi)
{
	/* Set SWRST bit to reset TWI peripheral */
	p_twi->TWI_CR = TWI_CR_SWRST;
  400882:	2380      	movs	r3, #128	; 0x80
  400884:	6003      	str	r3, [r0, #0]
	p_twi->TWI_RHR;
  400886:	6b03      	ldr	r3, [r0, #48]	; 0x30
	p_twi->TWI_CR = TWI_CR_MSDIS;
  400888:	2308      	movs	r3, #8
  40088a:	6003      	str	r3, [r0, #0]
	p_twi->TWI_CR = TWI_CR_SVDIS;
  40088c:	2320      	movs	r3, #32
  40088e:	6003      	str	r3, [r0, #0]
	p_twi->TWI_CR = TWI_CR_MSEN;
  400890:	2304      	movs	r3, #4
  400892:	6003      	str	r3, [r0, #0]
	if (twi_set_speed(p_twi, p_opt->speed, p_opt->master_clk) == FAIL) {
  400894:	680a      	ldr	r2, [r1, #0]
  400896:	6849      	ldr	r1, [r1, #4]
  400898:	4b05      	ldr	r3, [pc, #20]	; (4008b0 <twi_master_init+0x3c>)
  40089a:	4798      	blx	r3
  40089c:	2801      	cmp	r0, #1
  40089e:	bf14      	ite	ne
  4008a0:	2000      	movne	r0, #0
  4008a2:	2001      	moveq	r0, #1
	if (p_opt->smbus == 1) {
  4008a4:	7a6b      	ldrb	r3, [r5, #9]
  4008a6:	2b01      	cmp	r3, #1
		p_twi->TWI_CR = TWI_CR_QUICK;
  4008a8:	bf04      	itt	eq
  4008aa:	2340      	moveq	r3, #64	; 0x40
  4008ac:	6023      	streq	r3, [r4, #0]
}
  4008ae:	bd38      	pop	{r3, r4, r5, pc}
  4008b0:	004007bd 	.word	0x004007bd

004008b4 <twi_mk_addr>:
	if (len == 0)
  4008b4:	460a      	mov	r2, r1
  4008b6:	b159      	cbz	r1, 4008d0 <twi_mk_addr+0x1c>
	val = addr[0];
  4008b8:	7803      	ldrb	r3, [r0, #0]
	if (len > 1) {
  4008ba:	2901      	cmp	r1, #1
		val |= addr[1];
  4008bc:	bfc4      	itt	gt
  4008be:	7841      	ldrbgt	r1, [r0, #1]
  4008c0:	ea41 2303 	orrgt.w	r3, r1, r3, lsl #8
	if (len > 2) {
  4008c4:	2a02      	cmp	r2, #2
  4008c6:	dd04      	ble.n	4008d2 <twi_mk_addr+0x1e>
		val |= addr[2];
  4008c8:	7882      	ldrb	r2, [r0, #2]
  4008ca:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
  4008ce:	e000      	b.n	4008d2 <twi_mk_addr+0x1e>
		return 0;
  4008d0:	2300      	movs	r3, #0
}
  4008d2:	4618      	mov	r0, r3
  4008d4:	4770      	bx	lr
	...

004008d8 <twi_master_read>:
{
  4008d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	uint32_t cnt = p_packet->length;
  4008da:	68cc      	ldr	r4, [r1, #12]
	if (cnt == 0) {
  4008dc:	2c00      	cmp	r4, #0
  4008de:	d04f      	beq.n	400980 <twi_master_read+0xa8>
  4008e0:	460b      	mov	r3, r1
  4008e2:	4605      	mov	r5, r0
	uint8_t *buffer = p_packet->buffer;
  4008e4:	688e      	ldr	r6, [r1, #8]
	p_twi->TWI_MMR = 0;
  4008e6:	2000      	movs	r0, #0
  4008e8:	6068      	str	r0, [r5, #4]
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
  4008ea:	684a      	ldr	r2, [r1, #4]
  4008ec:	0212      	lsls	r2, r2, #8
  4008ee:	f402 7240 	and.w	r2, r2, #768	; 0x300
	p_twi->TWI_MMR = TWI_MMR_MREAD | TWI_MMR_DADR(p_packet->chip) |
  4008f2:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
  4008f6:	7c09      	ldrb	r1, [r1, #16]
  4008f8:	0409      	lsls	r1, r1, #16
  4008fa:	f401 01fe 	and.w	r1, r1, #8323072	; 0x7f0000
  4008fe:	430a      	orrs	r2, r1
  400900:	606a      	str	r2, [r5, #4]
	p_twi->TWI_IADR = 0;
  400902:	60e8      	str	r0, [r5, #12]
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  400904:	6859      	ldr	r1, [r3, #4]
  400906:	4618      	mov	r0, r3
  400908:	4b22      	ldr	r3, [pc, #136]	; (400994 <twi_master_read+0xbc>)
  40090a:	4798      	blx	r3
  40090c:	60e8      	str	r0, [r5, #12]
	if (cnt == 1) {
  40090e:	2c01      	cmp	r4, #1
  400910:	d00f      	beq.n	400932 <twi_master_read+0x5a>
		p_twi->TWI_CR = TWI_CR_START;
  400912:	2301      	movs	r3, #1
  400914:	602b      	str	r3, [r5, #0]
		stop_sent = 0;
  400916:	2000      	movs	r0, #0
		status = p_twi->TWI_SR;
  400918:	6a2b      	ldr	r3, [r5, #32]
		if (status & TWI_SR_NACK) {
  40091a:	f413 7f80 	tst.w	r3, #256	; 0x100
  40091e:	d136      	bne.n	40098e <twi_master_read+0xb6>
  400920:	f247 512f 	movw	r1, #29999	; 0x752f
		timeout = TWI_TIMEOUT;
  400924:	f247 5730 	movw	r7, #30000	; 0x7530
		if (!(status & TWI_SR_RXRDY)) {
  400928:	f04f 0e01 	mov.w	lr, #1
			p_twi->TWI_CR = TWI_CR_STOP;
  40092c:	f04f 0c02 	mov.w	ip, #2
  400930:	e019      	b.n	400966 <twi_master_read+0x8e>
		p_twi->TWI_CR = TWI_CR_START | TWI_CR_STOP;
  400932:	2303      	movs	r3, #3
  400934:	602b      	str	r3, [r5, #0]
		stop_sent = 1;
  400936:	2001      	movs	r0, #1
  400938:	e7ee      	b.n	400918 <twi_master_read+0x40>
		if (!(status & TWI_SR_RXRDY)) {
  40093a:	460a      	mov	r2, r1
  40093c:	4670      	mov	r0, lr
  40093e:	e00c      	b.n	40095a <twi_master_read+0x82>
		if (cnt == 1  && !stop_sent) {
  400940:	b908      	cbnz	r0, 400946 <twi_master_read+0x6e>
			p_twi->TWI_CR = TWI_CR_STOP;
  400942:	f8c5 c000 	str.w	ip, [r5]
		if (!(status & TWI_SR_RXRDY)) {
  400946:	f013 0f02 	tst.w	r3, #2
  40094a:	d0f6      	beq.n	40093a <twi_master_read+0x62>
  40094c:	4670      	mov	r0, lr
		*buffer++ = p_twi->TWI_RHR;
  40094e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  400950:	7033      	strb	r3, [r6, #0]
		cnt--;
  400952:	3c01      	subs	r4, #1
		*buffer++ = p_twi->TWI_RHR;
  400954:	3601      	adds	r6, #1
		timeout = TWI_TIMEOUT;
  400956:	463a      	mov	r2, r7
	while (cnt > 0) {
  400958:	b164      	cbz	r4, 400974 <twi_master_read+0x9c>
		status = p_twi->TWI_SR;
  40095a:	6a2b      	ldr	r3, [r5, #32]
		if (status & TWI_SR_NACK) {
  40095c:	f413 7f80 	tst.w	r3, #256	; 0x100
  400960:	d111      	bne.n	400986 <twi_master_read+0xae>
		if (!timeout--) {
  400962:	1e51      	subs	r1, r2, #1
  400964:	b18a      	cbz	r2, 40098a <twi_master_read+0xb2>
		if (cnt == 1  && !stop_sent) {
  400966:	2c01      	cmp	r4, #1
  400968:	d0ea      	beq.n	400940 <twi_master_read+0x68>
		if (!(status & TWI_SR_RXRDY)) {
  40096a:	f013 0f02 	tst.w	r3, #2
  40096e:	d1ee      	bne.n	40094e <twi_master_read+0x76>
  400970:	460a      	mov	r2, r1
  400972:	e7f1      	b.n	400958 <twi_master_read+0x80>
	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
  400974:	6a2b      	ldr	r3, [r5, #32]
  400976:	f013 0f01 	tst.w	r3, #1
  40097a:	d0fb      	beq.n	400974 <twi_master_read+0x9c>
	p_twi->TWI_SR;
  40097c:	6a2b      	ldr	r3, [r5, #32]
	return TWI_SUCCESS;
  40097e:	e000      	b.n	400982 <twi_master_read+0xaa>
		return TWI_INVALID_ARGUMENT;
  400980:	2401      	movs	r4, #1
}
  400982:	4620      	mov	r0, r4
  400984:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			return TWI_RECEIVE_NACK;
  400986:	2405      	movs	r4, #5
  400988:	e7fb      	b.n	400982 <twi_master_read+0xaa>
			return TWI_ERROR_TIMEOUT;
  40098a:	2409      	movs	r4, #9
  40098c:	e7f9      	b.n	400982 <twi_master_read+0xaa>
			return TWI_RECEIVE_NACK;
  40098e:	2405      	movs	r4, #5
  400990:	e7f7      	b.n	400982 <twi_master_read+0xaa>
  400992:	bf00      	nop
  400994:	004008b5 	.word	0x004008b5

00400998 <twi_master_write>:
{
  400998:	b570      	push	{r4, r5, r6, lr}
	uint32_t cnt = p_packet->length;
  40099a:	68cd      	ldr	r5, [r1, #12]
	if (cnt == 0) {
  40099c:	2d00      	cmp	r5, #0
  40099e:	d035      	beq.n	400a0c <twi_master_write+0x74>
  4009a0:	460b      	mov	r3, r1
  4009a2:	4604      	mov	r4, r0
	uint8_t *buffer = p_packet->buffer;
  4009a4:	688e      	ldr	r6, [r1, #8]
	p_twi->TWI_MMR = 0;
  4009a6:	2000      	movs	r0, #0
  4009a8:	6060      	str	r0, [r4, #4]
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  4009aa:	7c0a      	ldrb	r2, [r1, #16]
  4009ac:	0412      	lsls	r2, r2, #16
  4009ae:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
  4009b2:	6849      	ldr	r1, [r1, #4]
  4009b4:	0209      	lsls	r1, r1, #8
  4009b6:	f401 7140 	and.w	r1, r1, #768	; 0x300
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  4009ba:	430a      	orrs	r2, r1
  4009bc:	6062      	str	r2, [r4, #4]
	p_twi->TWI_IADR = 0;
  4009be:	60e0      	str	r0, [r4, #12]
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  4009c0:	6859      	ldr	r1, [r3, #4]
  4009c2:	4618      	mov	r0, r3
  4009c4:	4b15      	ldr	r3, [pc, #84]	; (400a1c <twi_master_write+0x84>)
  4009c6:	4798      	blx	r3
  4009c8:	60e0      	str	r0, [r4, #12]
		status = p_twi->TWI_SR;
  4009ca:	6a23      	ldr	r3, [r4, #32]
		if (status & TWI_SR_NACK) {
  4009cc:	f413 7f80 	tst.w	r3, #256	; 0x100
  4009d0:	d006      	beq.n	4009e0 <twi_master_write+0x48>
			return TWI_RECEIVE_NACK;
  4009d2:	2505      	movs	r5, #5
  4009d4:	e01b      	b.n	400a0e <twi_master_write+0x76>
	while (cnt > 0) {
  4009d6:	b15d      	cbz	r5, 4009f0 <twi_master_write+0x58>
		status = p_twi->TWI_SR;
  4009d8:	6a23      	ldr	r3, [r4, #32]
		if (status & TWI_SR_NACK) {
  4009da:	f413 7f80 	tst.w	r3, #256	; 0x100
  4009de:	d118      	bne.n	400a12 <twi_master_write+0x7a>
		if (!(status & TWI_SR_TXRDY)) {
  4009e0:	f013 0f04 	tst.w	r3, #4
  4009e4:	d0f7      	beq.n	4009d6 <twi_master_write+0x3e>
		p_twi->TWI_THR = *buffer++;
  4009e6:	7833      	ldrb	r3, [r6, #0]
  4009e8:	6363      	str	r3, [r4, #52]	; 0x34
		cnt--;
  4009ea:	3d01      	subs	r5, #1
		p_twi->TWI_THR = *buffer++;
  4009ec:	3601      	adds	r6, #1
  4009ee:	e7f2      	b.n	4009d6 <twi_master_write+0x3e>
		status = p_twi->TWI_SR;
  4009f0:	6a23      	ldr	r3, [r4, #32]
		if (status & TWI_SR_NACK) {
  4009f2:	f413 7f80 	tst.w	r3, #256	; 0x100
  4009f6:	d10e      	bne.n	400a16 <twi_master_write+0x7e>
		if (status & TWI_SR_TXRDY) {
  4009f8:	f013 0f04 	tst.w	r3, #4
  4009fc:	d0f8      	beq.n	4009f0 <twi_master_write+0x58>
	p_twi->TWI_CR = TWI_CR_STOP;
  4009fe:	2302      	movs	r3, #2
  400a00:	6023      	str	r3, [r4, #0]
	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
  400a02:	6a23      	ldr	r3, [r4, #32]
  400a04:	f013 0f01 	tst.w	r3, #1
  400a08:	d0fb      	beq.n	400a02 <twi_master_write+0x6a>
  400a0a:	e000      	b.n	400a0e <twi_master_write+0x76>
		return TWI_INVALID_ARGUMENT;
  400a0c:	2501      	movs	r5, #1
}
  400a0e:	4628      	mov	r0, r5
  400a10:	bd70      	pop	{r4, r5, r6, pc}
			return TWI_RECEIVE_NACK;
  400a12:	2505      	movs	r5, #5
  400a14:	e7fb      	b.n	400a0e <twi_master_write+0x76>
			return TWI_RECEIVE_NACK;
  400a16:	2505      	movs	r5, #5
  400a18:	e7f9      	b.n	400a0e <twi_master_write+0x76>
  400a1a:	bf00      	nop
  400a1c:	004008b5 	.word	0x004008b5

00400a20 <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
  400a20:	b410      	push	{r4}
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  400a22:	010b      	lsls	r3, r1, #4
  400a24:	4293      	cmp	r3, r2
  400a26:	d914      	bls.n	400a52 <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  400a28:	00c9      	lsls	r1, r1, #3
  400a2a:	084b      	lsrs	r3, r1, #1
  400a2c:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  400a30:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
  400a34:	08d3      	lsrs	r3, r2, #3
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  400a36:	1e5c      	subs	r4, r3, #1
  400a38:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  400a3c:	428c      	cmp	r4, r1
  400a3e:	d901      	bls.n	400a44 <usart_set_async_baudrate+0x24>
		return 1;
  400a40:	2001      	movs	r0, #1
  400a42:	e017      	b.n	400a74 <usart_set_async_baudrate+0x54>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
  400a44:	6841      	ldr	r1, [r0, #4]
  400a46:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
  400a4a:	6041      	str	r1, [r0, #4]
  400a4c:	e00c      	b.n	400a68 <usart_set_async_baudrate+0x48>
		return 1;
  400a4e:	2001      	movs	r0, #1
  400a50:	e010      	b.n	400a74 <usart_set_async_baudrate+0x54>
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  400a52:	0859      	lsrs	r1, r3, #1
  400a54:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
  400a58:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
  400a5c:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  400a5e:	1e5c      	subs	r4, r3, #1
  400a60:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  400a64:	428c      	cmp	r4, r1
  400a66:	d8f2      	bhi.n	400a4e <usart_set_async_baudrate+0x2e>
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  400a68:	0412      	lsls	r2, r2, #16
  400a6a:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  400a6e:	431a      	orrs	r2, r3
  400a70:	6202      	str	r2, [r0, #32]

	return 0;
  400a72:	2000      	movs	r0, #0
}
  400a74:	bc10      	pop	{r4}
  400a76:	4770      	bx	lr

00400a78 <usart_reset>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  400a78:	4b0a      	ldr	r3, [pc, #40]	; (400aa4 <usart_reset+0x2c>)
  400a7a:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
  400a7e:	2300      	movs	r3, #0
  400a80:	6043      	str	r3, [r0, #4]
	p_usart->US_RTOR = 0;
  400a82:	6243      	str	r3, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
  400a84:	6283      	str	r3, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  400a86:	2388      	movs	r3, #136	; 0x88
  400a88:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  400a8a:	2324      	movs	r3, #36	; 0x24
  400a8c:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
  400a8e:	f44f 7380 	mov.w	r3, #256	; 0x100
  400a92:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RTSDIS;
  400a94:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  400a98:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_DTRDIS;
  400a9a:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  400a9e:	6003      	str	r3, [r0, #0]
  400aa0:	4770      	bx	lr
  400aa2:	bf00      	nop
  400aa4:	55534100 	.word	0x55534100

00400aa8 <usart_init_rs232>:
{
  400aa8:	b570      	push	{r4, r5, r6, lr}
  400aaa:	4605      	mov	r5, r0
  400aac:	460c      	mov	r4, r1
  400aae:	4616      	mov	r6, r2
	usart_reset(p_usart);
  400ab0:	4b0f      	ldr	r3, [pc, #60]	; (400af0 <usart_init_rs232+0x48>)
  400ab2:	4798      	blx	r3
	ul_reg_val = 0;
  400ab4:	2200      	movs	r2, #0
  400ab6:	4b0f      	ldr	r3, [pc, #60]	; (400af4 <usart_init_rs232+0x4c>)
  400ab8:	601a      	str	r2, [r3, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  400aba:	b1a4      	cbz	r4, 400ae6 <usart_init_rs232+0x3e>
  400abc:	4632      	mov	r2, r6
  400abe:	6821      	ldr	r1, [r4, #0]
  400ac0:	4628      	mov	r0, r5
  400ac2:	4b0d      	ldr	r3, [pc, #52]	; (400af8 <usart_init_rs232+0x50>)
  400ac4:	4798      	blx	r3
  400ac6:	4602      	mov	r2, r0
  400ac8:	b978      	cbnz	r0, 400aea <usart_init_rs232+0x42>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400aca:	6863      	ldr	r3, [r4, #4]
  400acc:	68a1      	ldr	r1, [r4, #8]
  400ace:	430b      	orrs	r3, r1
  400ad0:	6921      	ldr	r1, [r4, #16]
  400ad2:	430b      	orrs	r3, r1
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  400ad4:	68e1      	ldr	r1, [r4, #12]
  400ad6:	430b      	orrs	r3, r1
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400ad8:	4906      	ldr	r1, [pc, #24]	; (400af4 <usart_init_rs232+0x4c>)
  400ada:	600b      	str	r3, [r1, #0]
	p_usart->US_MR |= ul_reg_val;
  400adc:	6869      	ldr	r1, [r5, #4]
  400ade:	430b      	orrs	r3, r1
  400ae0:	606b      	str	r3, [r5, #4]
}
  400ae2:	4610      	mov	r0, r2
  400ae4:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
  400ae6:	2201      	movs	r2, #1
  400ae8:	e7fb      	b.n	400ae2 <usart_init_rs232+0x3a>
  400aea:	2201      	movs	r2, #1
  400aec:	e7f9      	b.n	400ae2 <usart_init_rs232+0x3a>
  400aee:	bf00      	nop
  400af0:	00400a79 	.word	0x00400a79
  400af4:	20000a54 	.word	0x20000a54
  400af8:	00400a21 	.word	0x00400a21

00400afc <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
  400afc:	2340      	movs	r3, #64	; 0x40
  400afe:	6003      	str	r3, [r0, #0]
  400b00:	4770      	bx	lr

00400b02 <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
  400b02:	2310      	movs	r3, #16
  400b04:	6003      	str	r3, [r0, #0]
  400b06:	4770      	bx	lr

00400b08 <usart_enable_interrupt>:
	p_usart->US_IER = ul_sources;
  400b08:	6081      	str	r1, [r0, #8]
  400b0a:	4770      	bx	lr

00400b0c <usart_disable_interrupt>:
	p_usart->US_IDR = ul_sources;
  400b0c:	60c1      	str	r1, [r0, #12]
  400b0e:	4770      	bx	lr

00400b10 <usart_putchar>:
	while (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  400b10:	6943      	ldr	r3, [r0, #20]
  400b12:	f013 0f02 	tst.w	r3, #2
  400b16:	d0fb      	beq.n	400b10 <usart_putchar>
	p_usart->US_THR = US_THR_TXCHR(c);
  400b18:	f3c1 0108 	ubfx	r1, r1, #0, #9
  400b1c:	61c1      	str	r1, [r0, #28]
}
  400b1e:	2000      	movs	r0, #0
  400b20:	4770      	bx	lr
	...

00400b24 <usart_write_line>:
{
  400b24:	b570      	push	{r4, r5, r6, lr}
  400b26:	460c      	mov	r4, r1
	while (*string != '\0') {
  400b28:	7809      	ldrb	r1, [r1, #0]
  400b2a:	b139      	cbz	r1, 400b3c <usart_write_line+0x18>
  400b2c:	4605      	mov	r5, r0
		usart_putchar(p_usart, *string++);
  400b2e:	4e04      	ldr	r6, [pc, #16]	; (400b40 <usart_write_line+0x1c>)
  400b30:	4628      	mov	r0, r5
  400b32:	47b0      	blx	r6
	while (*string != '\0') {
  400b34:	f814 1f01 	ldrb.w	r1, [r4, #1]!
  400b38:	2900      	cmp	r1, #0
  400b3a:	d1f9      	bne.n	400b30 <usart_write_line+0xc>
  400b3c:	bd70      	pop	{r4, r5, r6, pc}
  400b3e:	bf00      	nop
  400b40:	00400b11 	.word	0x00400b11

00400b44 <wdt_disable>:
/**
 * \brief Disable the watchdog timer.
 */
void wdt_disable(Wdt *p_wdt)
{
	p_wdt->WDT_MR = WDT_MR_WDDIS;
  400b44:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  400b48:	6043      	str	r3, [r0, #4]
  400b4a:	4770      	bx	lr

00400b4c <vsync_handler>:
#define TWI_CLK (400000UL);

void vsync_handler(uint32_t ul_id, uint32_t ul_mask) {
	unused(ul_id);
	unused(ul_mask);
	g_vsync_flag = 1;
  400b4c:	2201      	movs	r2, #1
  400b4e:	4b01      	ldr	r3, [pc, #4]	; (400b54 <vsync_handler+0x8>)
  400b50:	701a      	strb	r2, [r3, #0]
  400b52:	4770      	bx	lr
  400b54:	20000aad 	.word	0x20000aad

00400b58 <init_vsync_interrupts>:
}


void init_vsync_interrupts(void) {
  400b58:	b510      	push	{r4, lr}
  400b5a:	b082      	sub	sp, #8
	pio_handler_set(PIOA, ID_PIOA, CAMERA_VSYNC_PIN, PIO_IT_RISE_EDGE, vsync_handler);
  400b5c:	4b07      	ldr	r3, [pc, #28]	; (400b7c <init_vsync_interrupts+0x24>)
  400b5e:	9300      	str	r3, [sp, #0]
  400b60:	2370      	movs	r3, #112	; 0x70
  400b62:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400b66:	210b      	movs	r1, #11
  400b68:	4805      	ldr	r0, [pc, #20]	; (400b80 <init_vsync_interrupts+0x28>)
  400b6a:	4c06      	ldr	r4, [pc, #24]	; (400b84 <init_vsync_interrupts+0x2c>)
  400b6c:	47a0      	blx	r4
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400b6e:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400b72:	4b05      	ldr	r3, [pc, #20]	; (400b88 <init_vsync_interrupts+0x30>)
  400b74:	601a      	str	r2, [r3, #0]
	NVIC_EnableIRQ(PIOA_IRQn);
}
  400b76:	b002      	add	sp, #8
  400b78:	bd10      	pop	{r4, pc}
  400b7a:	bf00      	nop
  400b7c:	00400b4d 	.word	0x00400b4d
  400b80:	400e0e00 	.word	0x400e0e00
  400b84:	00400495 	.word	0x00400495
  400b88:	e000e100 	.word	0xe000e100

00400b8c <configure_twi>:


void configure_twi(void) {
  400b8c:	b530      	push	{r4, r5, lr}
  400b8e:	b085      	sub	sp, #20
	twi_options_t opt;

	/* Enable TWI peripheral */
	pmc_enable_periph_clk(BOARD_TWI_ID);
  400b90:	2013      	movs	r0, #19
  400b92:	4b11      	ldr	r3, [pc, #68]	; (400bd8 <configure_twi+0x4c>)
  400b94:	4798      	blx	r3

	/* Init TWI peripheral */
	opt.master_clk = sysclk_get_cpu_hz();
  400b96:	4b11      	ldr	r3, [pc, #68]	; (400bdc <configure_twi+0x50>)
  400b98:	9301      	str	r3, [sp, #4]
	opt.speed      = TWI_CLK;
  400b9a:	4b11      	ldr	r3, [pc, #68]	; (400be0 <configure_twi+0x54>)
  400b9c:	9302      	str	r3, [sp, #8]
	twi_master_init(BOARD_TWI, &opt);
  400b9e:	a901      	add	r1, sp, #4
  400ba0:	4810      	ldr	r0, [pc, #64]	; (400be4 <configure_twi+0x58>)
  400ba2:	4b11      	ldr	r3, [pc, #68]	; (400be8 <configure_twi+0x5c>)
  400ba4:	4798      	blx	r3

	/* Configure TWI pins */
	#ifdef BOARD_TWI0
		gpio_configure_pin(TWI_DATA_GPIO, TWI_DATA_FLAG);
  400ba6:	4d11      	ldr	r5, [pc, #68]	; (400bec <configure_twi+0x60>)
  400ba8:	4629      	mov	r1, r5
  400baa:	2003      	movs	r0, #3
  400bac:	4c10      	ldr	r4, [pc, #64]	; (400bf0 <configure_twi+0x64>)
  400bae:	47a0      	blx	r4
		gpio_configure_pin(TWI_CLK_GPIO, TWI_CLK_FLAGS);
  400bb0:	4629      	mov	r1, r5
  400bb2:	2004      	movs	r0, #4
  400bb4:	47a0      	blx	r4
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400bb6:	4b0f      	ldr	r3, [pc, #60]	; (400bf4 <configure_twi+0x68>)
  400bb8:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  400bbc:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
  400bc0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  400bc4:	f3bf 8f6f 	isb	sy
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400bc8:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  400bcc:	2100      	movs	r1, #0
  400bce:	f883 1313 	strb.w	r1, [r3, #787]	; 0x313
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400bd2:	601a      	str	r2, [r3, #0]
	/* Configure TWI interrupts */
	NVIC_DisableIRQ(BOARD_TWI_IRQn);
	NVIC_ClearPendingIRQ(BOARD_TWI_IRQn);
	NVIC_SetPriority(BOARD_TWI_IRQn, 0);
	NVIC_EnableIRQ(BOARD_TWI_IRQn);
}
  400bd4:	b005      	add	sp, #20
  400bd6:	bd30      	pop	{r4, r5, pc}
  400bd8:	00400649 	.word	0x00400649
  400bdc:	07270e00 	.word	0x07270e00
  400be0:	00061a80 	.word	0x00061a80
  400be4:	40018000 	.word	0x40018000
  400be8:	00400875 	.word	0x00400875
  400bec:	08000001 	.word	0x08000001
  400bf0:	004002dd 	.word	0x004002dd
  400bf4:	e000e100 	.word	0xe000e100

00400bf8 <pio_capture_init>:

void pio_capture_init(Pio *p_pio, uint32_t ul_id) {
  400bf8:	b510      	push	{r4, lr}
  400bfa:	4604      	mov	r4, r0
	/* Enable periphral clock */
	pmc_enable_periph_clk(ul_id);
  400bfc:	4608      	mov	r0, r1
  400bfe:	4b19      	ldr	r3, [pc, #100]	; (400c64 <pio_capture_init+0x6c>)
  400c00:	4798      	blx	r3

	/* Disable pio capture */
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_PCEN);
  400c02:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400c06:	f023 0301 	bic.w	r3, r3, #1
  400c0a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150

	/* Disable rxbuff interrupt */
	p_pio->PIO_PCIDR |= PIO_PCIDR_RXBUFF;
  400c0e:	f8d4 3158 	ldr.w	r3, [r4, #344]	; 0x158
  400c12:	f043 0308 	orr.w	r3, r3, #8
  400c16:	f8c4 3158 	str.w	r3, [r4, #344]	; 0x158

	/* 32bit width*/
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_DSIZE_Msk);
  400c1a:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400c1e:	f023 0330 	bic.w	r3, r3, #48	; 0x30
  400c22:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
	p_pio->PIO_PCMR |= PIO_PCMR_DSIZE_WORD;
  400c26:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400c2a:	f043 0320 	orr.w	r3, r3, #32
  400c2e:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150

	/* Only HSYNC and VSYNC enabled */
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_ALWYS);
  400c32:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400c36:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  400c3a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_HALFS);
  400c3e:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400c42:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
  400c46:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150

	#if !defined(DEFAULT_MODE_COLORED)
		/* Samples only data with even index */
		p_pio->PIO_PCMR |= PIO_PCMR_HALFS;
  400c4a:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400c4e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
  400c52:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
		p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_FRSTS);
  400c56:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400c5a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  400c5e:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
  400c62:	bd10      	pop	{r4, pc}
  400c64:	00400649 	.word	0x00400649

00400c68 <pio_capture_to_buffer>:
	#endif
}

uint8_t pio_capture_to_buffer(Pio *p_pio, uint8_t *uc_buf, uint32_t ul_size){
	if ((p_pio->PIO_RCR == 0) && (p_pio->PIO_RNCR == 0)) {
  400c68:	f8d0 316c 	ldr.w	r3, [r0, #364]	; 0x16c
  400c6c:	b913      	cbnz	r3, 400c74 <pio_capture_to_buffer+0xc>
  400c6e:	f8d0 317c 	ldr.w	r3, [r0, #380]	; 0x17c
  400c72:	b143      	cbz	r3, 400c86 <pio_capture_to_buffer+0x1e>
		p_pio->PIO_RPR = (uint32_t)uc_buf;
		p_pio->PIO_RCR = ul_size;
		p_pio->PIO_PTCR = PIO_PTCR_RXTEN;
		return 1;
	} else if (p_pio->PIO_RNCR == 0) {
  400c74:	f8d0 317c 	ldr.w	r3, [r0, #380]	; 0x17c
  400c78:	b973      	cbnz	r3, 400c98 <pio_capture_to_buffer+0x30>
		p_pio->PIO_RNPR = (uint32_t)uc_buf;
  400c7a:	f8c0 1178 	str.w	r1, [r0, #376]	; 0x178
		p_pio->PIO_RNCR = ul_size;
  400c7e:	f8c0 217c 	str.w	r2, [r0, #380]	; 0x17c
		return 1;
  400c82:	2001      	movs	r0, #1
  400c84:	4770      	bx	lr
		p_pio->PIO_RPR = (uint32_t)uc_buf;
  400c86:	f8c0 1168 	str.w	r1, [r0, #360]	; 0x168
		p_pio->PIO_RCR = ul_size;
  400c8a:	f8c0 216c 	str.w	r2, [r0, #364]	; 0x16c
		p_pio->PIO_PTCR = PIO_PTCR_RXTEN;
  400c8e:	2301      	movs	r3, #1
  400c90:	f8c0 3188 	str.w	r3, [r0, #392]	; 0x188
		return 1;
  400c94:	4618      	mov	r0, r3
  400c96:	4770      	bx	lr
	} else {
		return 0;
  400c98:	2000      	movs	r0, #0
	}
}
  400c9a:	4770      	bx	lr

00400c9c <configure_camera>:
	configure_camera();
	delay_ms(3000);

}

void configure_camera(void){
  400c9c:	b538      	push	{r3, r4, r5, lr}
	ov_configure(BOARD_TWI, JPEG_INIT);
  400c9e:	4d07      	ldr	r5, [pc, #28]	; (400cbc <configure_camera+0x20>)
  400ca0:	2100      	movs	r1, #0
  400ca2:	4628      	mov	r0, r5
  400ca4:	4c06      	ldr	r4, [pc, #24]	; (400cc0 <configure_camera+0x24>)
  400ca6:	47a0      	blx	r4
	ov_configure(BOARD_TWI, YUV422);
  400ca8:	2101      	movs	r1, #1
  400caa:	4628      	mov	r0, r5
  400cac:	47a0      	blx	r4
	ov_configure(BOARD_TWI, JPEG);
  400cae:	2102      	movs	r1, #2
  400cb0:	4628      	mov	r0, r5
  400cb2:	47a0      	blx	r4
	ov_configure(BOARD_TWI, JPEG_320x240);
  400cb4:	2103      	movs	r1, #3
  400cb6:	4628      	mov	r0, r5
  400cb8:	47a0      	blx	r4
  400cba:	bd38      	pop	{r3, r4, r5, pc}
  400cbc:	40018000 	.word	0x40018000
  400cc0:	00400f95 	.word	0x00400f95

00400cc4 <init_camera>:
void init_camera(void){
  400cc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	configure_twi();
  400cc6:	4b1f      	ldr	r3, [pc, #124]	; (400d44 <init_camera+0x80>)
  400cc8:	4798      	blx	r3
	init_vsync_interrupts();
  400cca:	4b1f      	ldr	r3, [pc, #124]	; (400d48 <init_camera+0x84>)
  400ccc:	4798      	blx	r3
	pio_capture_init(PIOA, ID_PIOA);
  400cce:	210b      	movs	r1, #11
  400cd0:	481e      	ldr	r0, [pc, #120]	; (400d4c <init_camera+0x88>)
  400cd2:	4b1f      	ldr	r3, [pc, #124]	; (400d50 <init_camera+0x8c>)
  400cd4:	4798      	blx	r3
	gpio_configure_pin(PIN_PCK1, PIN_PCK1_FLAGS);
  400cd6:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400cda:	2011      	movs	r0, #17
  400cdc:	4c1d      	ldr	r4, [pc, #116]	; (400d54 <init_camera+0x90>)
  400cde:	47a0      	blx	r4
	pmc_enable_pllbck(7, 0x1, 1); /* PLLA work at 96 Mhz */ // PA17 is xclck signal
  400ce0:	2201      	movs	r2, #1
  400ce2:	4611      	mov	r1, r2
  400ce4:	2007      	movs	r0, #7
  400ce6:	4b1c      	ldr	r3, [pc, #112]	; (400d58 <init_camera+0x94>)
  400ce8:	4798      	blx	r3
	gpio_configure_pin(CAMERA_RST_GPIO, CAMERA_RST_FLAGS);
  400cea:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400cee:	2014      	movs	r0, #20
  400cf0:	47a0      	blx	r4
	gpio_configure_pin(CAMERA_HSYNC_GPIO, CAMERA_HSYNC_FLAGS);  // e.g., input or output flag as needed
  400cf2:	2171      	movs	r1, #113	; 0x71
  400cf4:	2010      	movs	r0, #16
  400cf6:	47a0      	blx	r4
	gpio_configure_pin(CAMERA_VSYNC_GPIO,  CAMERA_VSYNC_FLAGS);   // e.g., output for clock signal  // e.g., input for pixel clock
  400cf8:	2171      	movs	r1, #113	; 0x71
  400cfa:	200f      	movs	r0, #15
  400cfc:	47a0      	blx	r4
	for (uint32_t pin = PIO_PA24; pin <= PIO_PA31; pin++) {
  400cfe:	f04f 7480 	mov.w	r4, #16777216	; 0x1000000
		gpio_configure_pin(pin, CAMERA_DATA_FLAGS);  // Define CAMERA_DATA_FLAGS as needed
  400d02:	2771      	movs	r7, #113	; 0x71
  400d04:	4e13      	ldr	r6, [pc, #76]	; (400d54 <init_camera+0x90>)
	for (uint32_t pin = PIO_PA24; pin <= PIO_PA31; pin++) {
  400d06:	4d15      	ldr	r5, [pc, #84]	; (400d5c <init_camera+0x98>)
		gpio_configure_pin(pin, CAMERA_DATA_FLAGS);  // Define CAMERA_DATA_FLAGS as needed
  400d08:	4639      	mov	r1, r7
  400d0a:	4620      	mov	r0, r4
  400d0c:	47b0      	blx	r6
	for (uint32_t pin = PIO_PA24; pin <= PIO_PA31; pin++) {
  400d0e:	3401      	adds	r4, #1
  400d10:	42ac      	cmp	r4, r5
  400d12:	d1f9      	bne.n	400d08 <init_camera+0x44>
	PMC->PMC_PCK[1] = (PMC_PCK_PRES_CLK_4 | PMC_PCK_CSS_PLLB_CLK);
  400d14:	4b12      	ldr	r3, [pc, #72]	; (400d60 <init_camera+0x9c>)
  400d16:	2223      	movs	r2, #35	; 0x23
  400d18:	645a      	str	r2, [r3, #68]	; 0x44
	PMC->PMC_SCER = PMC_SCER_PCK1;
  400d1a:	f44f 7200 	mov.w	r2, #512	; 0x200
  400d1e:	601a      	str	r2, [r3, #0]
	while (!(PMC->PMC_SCSR & PMC_SCSR_PCK1)) {
  400d20:	461a      	mov	r2, r3
  400d22:	6893      	ldr	r3, [r2, #8]
  400d24:	f413 7f00 	tst.w	r3, #512	; 0x200
  400d28:	d0fb      	beq.n	400d22 <init_camera+0x5e>
	while (ov_init(BOARD_TWI) == 1){}
  400d2a:	4d0e      	ldr	r5, [pc, #56]	; (400d64 <init_camera+0xa0>)
  400d2c:	4c0e      	ldr	r4, [pc, #56]	; (400d68 <init_camera+0xa4>)
  400d2e:	4628      	mov	r0, r5
  400d30:	47a0      	blx	r4
  400d32:	2801      	cmp	r0, #1
  400d34:	d0fb      	beq.n	400d2e <init_camera+0x6a>
	configure_camera();
  400d36:	4b0d      	ldr	r3, [pc, #52]	; (400d6c <init_camera+0xa8>)
  400d38:	4798      	blx	r3
	delay_ms(3000);
  400d3a:	480d      	ldr	r0, [pc, #52]	; (400d70 <init_camera+0xac>)
  400d3c:	4b0d      	ldr	r3, [pc, #52]	; (400d74 <init_camera+0xb0>)
  400d3e:	4798      	blx	r3
  400d40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400d42:	bf00      	nop
  400d44:	00400b8d 	.word	0x00400b8d
  400d48:	00400b59 	.word	0x00400b59
  400d4c:	400e0e00 	.word	0x400e0e00
  400d50:	00400bf9 	.word	0x00400bf9
  400d54:	004002dd 	.word	0x004002dd
  400d58:	00400615 	.word	0x00400615
  400d5c:	80000001 	.word	0x80000001
  400d60:	400e0400 	.word	0x400e0400
  400d64:	40018000 	.word	0x40018000
  400d68:	00400e59 	.word	0x00400e59
  400d6c:	00400c9d 	.word	0x00400c9d
  400d70:	01885e6e 	.word	0x01885e6e
  400d74:	20000001 	.word	0x20000001

00400d78 <start_capture>:
}

uint8_t start_capture(void) {
  400d78:	b510      	push	{r4, lr}

	pio_enable_interrupt(PIOA, CAMERA_VSYNC_PIN);
  400d7a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  400d7e:	4811      	ldr	r0, [pc, #68]	; (400dc4 <start_capture+0x4c>)
  400d80:	4b11      	ldr	r3, [pc, #68]	; (400dc8 <start_capture+0x50>)
  400d82:	4798      	blx	r3
	while (!g_vsync_flag) {
  400d84:	4a11      	ldr	r2, [pc, #68]	; (400dcc <start_capture+0x54>)
  400d86:	7813      	ldrb	r3, [r2, #0]
  400d88:	2b00      	cmp	r3, #0
  400d8a:	d0fc      	beq.n	400d86 <start_capture+0xe>
		// Wait for VSYNC rising edge
	}

	pio_disable_interrupt(PIOA, CAMERA_VSYNC_PIN);
  400d8c:	4c0d      	ldr	r4, [pc, #52]	; (400dc4 <start_capture+0x4c>)
  400d8e:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  400d92:	4620      	mov	r0, r4
  400d94:	4b0e      	ldr	r3, [pc, #56]	; (400dd0 <start_capture+0x58>)
  400d96:	4798      	blx	r3

	// Enable the capture function to start capture data
	pio_capture_enable(PIOA);
  400d98:	4620      	mov	r0, r4
  400d9a:	4b0e      	ldr	r3, [pc, #56]	; (400dd4 <start_capture+0x5c>)
  400d9c:	4798      	blx	r3

	/* Capture data and send it to external SRAM memory thanks to PDC
	* feature */
	pio_capture_to_buffer(PIOA, g_image_buffer, (100000) >> 2);
  400d9e:	f246 12a8 	movw	r2, #25000	; 0x61a8
  400da2:	490d      	ldr	r1, [pc, #52]	; (400dd8 <start_capture+0x60>)
  400da4:	4620      	mov	r0, r4
  400da6:	4b0d      	ldr	r3, [pc, #52]	; (400ddc <start_capture+0x64>)
  400da8:	4798      	blx	r3

	/* Wait end of capture*/
	while (!((PIOA->PIO_PCISR & PIO_PCIMR_RXBUFF) ==
  400daa:	4622      	mov	r2, r4
  400dac:	f8d2 3160 	ldr.w	r3, [r2, #352]	; 0x160
  400db0:	f013 0f08 	tst.w	r3, #8
  400db4:	d0fa      	beq.n	400dac <start_capture+0x34>
		PIO_PCIMR_RXBUFF)) {
	}

	/* Disable pio capture*/
	pio_capture_disable(PIOA);
  400db6:	4803      	ldr	r0, [pc, #12]	; (400dc4 <start_capture+0x4c>)
  400db8:	4b09      	ldr	r3, [pc, #36]	; (400de0 <start_capture+0x68>)
  400dba:	4798      	blx	r3

	/* Reset vsync flag*/
	g_vsync_flag = false;
  400dbc:	2200      	movs	r2, #0
  400dbe:	4b03      	ldr	r3, [pc, #12]	; (400dcc <start_capture+0x54>)
  400dc0:	701a      	strb	r2, [r3, #0]

}
  400dc2:	bd10      	pop	{r4, pc}
  400dc4:	400e0e00 	.word	0x400e0e00
  400dc8:	004002cd 	.word	0x004002cd
  400dcc:	20000aad 	.word	0x20000aad
  400dd0:	004002d1 	.word	0x004002d1
  400dd4:	004003fd 	.word	0x004003fd
  400dd8:	20000aac 	.word	0x20000aac
  400ddc:	00400c69 	.word	0x00400c69
  400de0:	00400415 	.word	0x00400415

00400de4 <ov_read_reg>:
 * \param p_twi TWI interface.
 * \param p_packet TWI packet.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_read_reg(Twi* const p_twi, twi_packet_t* const p_packet)
{
  400de4:	b508      	push	{r3, lr}
	uint32_t ul_status;

	ul_status = twi_master_read(p_twi, p_packet);
  400de6:	4b01      	ldr	r3, [pc, #4]	; (400dec <ov_read_reg+0x8>)
  400de8:	4798      	blx	r3

	return ul_status;
}
  400dea:	bd08      	pop	{r3, pc}
  400dec:	004008d9 	.word	0x004008d9

00400df0 <ov_write_reg>:
 * \param p_twi TWI interface.
 * \param p_packet TWI packet.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_write_reg(Twi* const p_twi, twi_packet_t* const p_packet)
{
  400df0:	b508      	push	{r3, lr}
	uint32_t ul_status;

	ul_status = twi_master_write(p_twi, p_packet);
  400df2:	4b01      	ldr	r3, [pc, #4]	; (400df8 <ov_write_reg+0x8>)
  400df4:	4798      	blx	r3

	return ul_status;
}
  400df6:	bd08      	pop	{r3, pc}
  400df8:	00400999 	.word	0x00400999

00400dfc <ov_write_regs>:
 * \param p_twi TWI interface.
 * \param p_reg_list Register list to be written.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_write_regs(Twi* const p_twi, const ov_reg *p_reg_list)
{
  400dfc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400e00:	b086      	sub	sp, #24
  400e02:	4607      	mov	r7, r0
  400e04:	1c4c      	adds	r4, r1, #1
			(p_next->val == OV_VAL_TERM))) {
		if (p_next->reg == 0xFE) {
			delay_ms(5);
		} else {
			twi_packet_regs.addr[0] = p_next->reg;
			twi_packet_regs.addr_length = 1;
  400e06:	2501      	movs	r5, #1
			twi_packet_regs.chip = OV_I2C_SENSOR_ADDRESS;
			twi_packet_regs.length = 1;
			twi_packet_regs.buffer = &(p_next->val);

			ul_err = ov_write_reg(p_twi, &twi_packet_regs);
  400e08:	4e11      	ldr	r6, [pc, #68]	; (400e50 <ov_write_regs+0x54>)
			delay_ms(5);
  400e0a:	f8df 8048 	ldr.w	r8, [pc, #72]	; 400e54 <ov_write_regs+0x58>
	while (!((p_next->reg == OV_REG_TERM) &&
  400e0e:	e010      	b.n	400e32 <ov_write_regs+0x36>
  400e10:	7821      	ldrb	r1, [r4, #0]
  400e12:	29ff      	cmp	r1, #255	; 0xff
  400e14:	d018      	beq.n	400e48 <ov_write_regs+0x4c>
			twi_packet_regs.addr[0] = p_next->reg;
  400e16:	f88d 3004 	strb.w	r3, [sp, #4]
			twi_packet_regs.addr_length = 1;
  400e1a:	9502      	str	r5, [sp, #8]
			twi_packet_regs.chip = OV_I2C_SENSOR_ADDRESS;
  400e1c:	2330      	movs	r3, #48	; 0x30
  400e1e:	f88d 3014 	strb.w	r3, [sp, #20]
			twi_packet_regs.length = 1;
  400e22:	9504      	str	r5, [sp, #16]
			twi_packet_regs.buffer = &(p_next->val);
  400e24:	9203      	str	r2, [sp, #12]
			ul_err = ov_write_reg(p_twi, &twi_packet_regs);
  400e26:	a901      	add	r1, sp, #4
  400e28:	4638      	mov	r0, r7
  400e2a:	47b0      	blx	r6
			ul_size++;

			if (ul_err == TWI_BUSY) {
  400e2c:	2808      	cmp	r0, #8
  400e2e:	d00c      	beq.n	400e4a <ov_write_regs+0x4e>
  400e30:	3402      	adds	r4, #2
  400e32:	4622      	mov	r2, r4
	while (!((p_next->reg == OV_REG_TERM) &&
  400e34:	f814 3c01 	ldrb.w	r3, [r4, #-1]
  400e38:	2bff      	cmp	r3, #255	; 0xff
  400e3a:	d0e9      	beq.n	400e10 <ov_write_regs+0x14>
		if (p_next->reg == 0xFE) {
  400e3c:	2bfe      	cmp	r3, #254	; 0xfe
  400e3e:	d1ea      	bne.n	400e16 <ov_write_regs+0x1a>
			delay_ms(5);
  400e40:	f24a 706a 	movw	r0, #42858	; 0xa76a
  400e44:	47c0      	blx	r8
  400e46:	e7f3      	b.n	400e30 <ov_write_regs+0x34>
			}
		}

		p_next++;
	}
	return 0;
  400e48:	2000      	movs	r0, #0
}
  400e4a:	b006      	add	sp, #24
  400e4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400e50:	00400df1 	.word	0x00400df1
  400e54:	20000001 	.word	0x20000001

00400e58 <ov_init>:
 *
 * \param p_twi TWI interface.
 * \return 0 on success, 1 otherwise.
 */
uint32_t ov_init(Twi* const p_twi)
{
  400e58:	b5f0      	push	{r4, r5, r6, r7, lr}
  400e5a:	b093      	sub	sp, #76	; 0x4c
  400e5c:	4607      	mov	r7, r0
	const uint8_t cont_reg_val = 1;
  400e5e:	2401      	movs	r4, #1
  400e60:	f88d 4047 	strb.w	r4, [sp, #71]	; 0x47
	twi_packet_t init_packet = {
  400e64:	2500      	movs	r5, #0
  400e66:	950c      	str	r5, [sp, #48]	; 0x30
  400e68:	9510      	str	r5, [sp, #64]	; 0x40
  400e6a:	23ff      	movs	r3, #255	; 0xff
  400e6c:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
  400e70:	940d      	str	r4, [sp, #52]	; 0x34
  400e72:	f10d 0347 	add.w	r3, sp, #71	; 0x47
  400e76:	930e      	str	r3, [sp, #56]	; 0x38
  400e78:	940f      	str	r4, [sp, #60]	; 0x3c
  400e7a:	2630      	movs	r6, #48	; 0x30
  400e7c:	f88d 6040 	strb.w	r6, [sp, #64]	; 0x40
		.addr_length  = 1, //sizeof (uint16_t),    // TWI slave memory address data size
		.chip         = OV_I2C_SENSOR_ADDRESS,      // TWI slave bus address
		.buffer       = &cont_reg_val,        // transfer data destination buffer
		.length       = 1                    // transfer data size (bytes)
	};
	ov_write_reg(p_twi, &init_packet);
  400e80:	eb0d 0106 	add.w	r1, sp, r6
  400e84:	4b41      	ldr	r3, [pc, #260]	; (400f8c <ov_init+0x134>)
  400e86:	4798      	blx	r3
	uint32_t ul_id = 0;
  400e88:	9500      	str	r5, [sp, #0]
	uint32_t ul_ver = 0;
  400e8a:	9501      	str	r5, [sp, #4]
	packet_pid.chip = OV_I2C_SENSOR_ADDRESS;
  400e8c:	f88d 6018 	strb.w	r6, [sp, #24]
	packet_pid.addr[0] = OV2640_PIDH;
  400e90:	230a      	movs	r3, #10
  400e92:	f88d 3008 	strb.w	r3, [sp, #8]
	packet_pid.addr_length = 1;
  400e96:	9403      	str	r4, [sp, #12]
	packet_pid.buffer = &ul_id;
  400e98:	f8cd d010 	str.w	sp, [sp, #16]
	packet_pid.length = 1;
  400e9c:	9405      	str	r4, [sp, #20]
	ov_read_reg(p_twi, &packet_pid);
  400e9e:	a902      	add	r1, sp, #8
  400ea0:	4638      	mov	r0, r7
  400ea2:	4d3b      	ldr	r5, [pc, #236]	; (400f90 <ov_init+0x138>)
  400ea4:	47a8      	blx	r5
	packet_ver.chip = OV_I2C_SENSOR_ADDRESS;
  400ea6:	f88d 602c 	strb.w	r6, [sp, #44]	; 0x2c
	packet_ver.addr[0] = OV2640_PIDL;
  400eaa:	230b      	movs	r3, #11
  400eac:	f88d 301c 	strb.w	r3, [sp, #28]
	packet_ver.addr_length = 1;
  400eb0:	9408      	str	r4, [sp, #32]
	packet_ver.buffer = &ul_ver;
  400eb2:	ab01      	add	r3, sp, #4
  400eb4:	9309      	str	r3, [sp, #36]	; 0x24
	packet_ver.length = 1;
  400eb6:	940a      	str	r4, [sp, #40]	; 0x28
	ov_read_reg(p_twi, &packet_ver);
  400eb8:	a907      	add	r1, sp, #28
  400eba:	4638      	mov	r0, r7
  400ebc:	47a8      	blx	r5
	return ((uint32_t)(ul_id << 8) | ul_ver);
  400ebe:	9b01      	ldr	r3, [sp, #4]
  400ec0:	9a00      	ldr	r2, [sp, #0]
  400ec2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
	
	uint32_t ul_id = 0;

	ul_id = ov_id( p_twi );

	if (((ul_id >> 8)&0xff)  == OV2640_PIDH_DEFAULT) {
  400ec6:	f3c3 2307 	ubfx	r3, r3, #8, #8
  400eca:	2b26      	cmp	r3, #38	; 0x26
  400ecc:	d002      	beq.n	400ed4 <ov_init+0x7c>
				return 0;
			}
		}
	}

	return 1;
  400ece:	2001      	movs	r0, #1
}
  400ed0:	b013      	add	sp, #76	; 0x4c
  400ed2:	bdf0      	pop	{r4, r5, r6, r7, pc}
	uint32_t ul_midh = 0;
  400ed4:	2300      	movs	r3, #0
  400ed6:	9301      	str	r3, [sp, #4]
	uint32_t ul_midl = 0;
  400ed8:	9302      	str	r3, [sp, #8]
	twi_packet.addr[0] = OV2640_MIDH;
  400eda:	231c      	movs	r3, #28
  400edc:	f88d 301c 	strb.w	r3, [sp, #28]
	twi_packet.addr_length = 1;
  400ee0:	9408      	str	r4, [sp, #32]
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  400ee2:	f88d 602c 	strb.w	r6, [sp, #44]	; 0x2c
	twi_packet.buffer = &ul_midh;
  400ee6:	ab01      	add	r3, sp, #4
  400ee8:	9309      	str	r3, [sp, #36]	; 0x24
	twi_packet.length = 1;
  400eea:	940a      	str	r4, [sp, #40]	; 0x28
	ov_read_reg(p_twi, &twi_packet);
  400eec:	a907      	add	r1, sp, #28
  400eee:	4638      	mov	r0, r7
  400ef0:	47a8      	blx	r5
	twi_packet.addr[0] = OV2640_MIDL;
  400ef2:	231d      	movs	r3, #29
  400ef4:	f88d 301c 	strb.w	r3, [sp, #28]
	twi_packet.addr_length = 1;
  400ef8:	9408      	str	r4, [sp, #32]
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  400efa:	f88d 602c 	strb.w	r6, [sp, #44]	; 0x2c
	twi_packet.buffer = &ul_midl;
  400efe:	ab02      	add	r3, sp, #8
  400f00:	9309      	str	r3, [sp, #36]	; 0x24
	twi_packet.length = 1;
  400f02:	940a      	str	r4, [sp, #40]	; 0x28
	ov_read_reg(p_twi, &twi_packet);
  400f04:	a907      	add	r1, sp, #28
  400f06:	4638      	mov	r0, r7
  400f08:	47a8      	blx	r5
	if ((ul_midh == OV2640_MIDH_DEFAULT) && (ul_midl == OV2640_MIDL_DEFAULT)) {
  400f0a:	9b01      	ldr	r3, [sp, #4]
  400f0c:	2b7f      	cmp	r3, #127	; 0x7f
  400f0e:	d001      	beq.n	400f14 <ov_init+0xbc>
	return 1;
  400f10:	2001      	movs	r0, #1
  400f12:	e7dd      	b.n	400ed0 <ov_init+0x78>
	if ((ul_midh == OV2640_MIDH_DEFAULT) && (ul_midl == OV2640_MIDL_DEFAULT)) {
  400f14:	9b02      	ldr	r3, [sp, #8]
  400f16:	2ba2      	cmp	r3, #162	; 0xa2
  400f18:	d1fa      	bne.n	400f10 <ov_init+0xb8>
	uint32_t ul_value = 0;
  400f1a:	2300      	movs	r3, #0
  400f1c:	9300      	str	r3, [sp, #0]
	uint32_t ul_oldvalue = 0;
  400f1e:	9301      	str	r3, [sp, #4]
	uint32_t ul_entervalue = 0;
  400f20:	9302      	str	r3, [sp, #8]
	twi_packet.addr[0] = 0x01;
  400f22:	2301      	movs	r3, #1
  400f24:	f88d 301c 	strb.w	r3, [sp, #28]
	twi_packet.addr_length = 1;
  400f28:	9308      	str	r3, [sp, #32]
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  400f2a:	2230      	movs	r2, #48	; 0x30
  400f2c:	f88d 202c 	strb.w	r2, [sp, #44]	; 0x2c
	twi_packet.length = 1;
  400f30:	930a      	str	r3, [sp, #40]	; 0x28
	twi_packet.buffer = &ul_oldvalue;
  400f32:	ab01      	add	r3, sp, #4
  400f34:	9309      	str	r3, [sp, #36]	; 0x24
	ov_read_reg(p_twi, &twi_packet);
  400f36:	a907      	add	r1, sp, #28
  400f38:	4638      	mov	r0, r7
  400f3a:	4c15      	ldr	r4, [pc, #84]	; (400f90 <ov_init+0x138>)
  400f3c:	47a0      	blx	r4
	ul_entervalue = 0xAD;
  400f3e:	ab12      	add	r3, sp, #72	; 0x48
  400f40:	22ad      	movs	r2, #173	; 0xad
  400f42:	f843 2d40 	str.w	r2, [r3, #-64]!
	twi_packet.buffer = &ul_entervalue;
  400f46:	9309      	str	r3, [sp, #36]	; 0x24
	ov_write_reg(p_twi, &twi_packet);
  400f48:	a907      	add	r1, sp, #28
  400f4a:	4638      	mov	r0, r7
  400f4c:	4b0f      	ldr	r3, [pc, #60]	; (400f8c <ov_init+0x134>)
  400f4e:	4798      	blx	r3
	twi_packet.buffer = &ul_value;
  400f50:	f8cd d024 	str.w	sp, [sp, #36]	; 0x24
	ov_read_reg(p_twi, &twi_packet);
  400f54:	a907      	add	r1, sp, #28
  400f56:	4638      	mov	r0, r7
  400f58:	47a0      	blx	r4
	if (ul_value != ul_entervalue) {
  400f5a:	9b02      	ldr	r3, [sp, #8]
  400f5c:	9a00      	ldr	r2, [sp, #0]
  400f5e:	429a      	cmp	r2, r3
  400f60:	d001      	beq.n	400f66 <ov_init+0x10e>
		return 1;
  400f62:	2001      	movs	r0, #1
  400f64:	e7b4      	b.n	400ed0 <ov_init+0x78>
	twi_packet.buffer = &ul_oldvalue;
  400f66:	ab01      	add	r3, sp, #4
  400f68:	9309      	str	r3, [sp, #36]	; 0x24
	ov_write_reg(p_twi, &twi_packet);
  400f6a:	a907      	add	r1, sp, #28
  400f6c:	4638      	mov	r0, r7
  400f6e:	4b07      	ldr	r3, [pc, #28]	; (400f8c <ov_init+0x134>)
  400f70:	4798      	blx	r3
	twi_packet.buffer = &ul_value;
  400f72:	f8cd d024 	str.w	sp, [sp, #36]	; 0x24
	ov_read_reg(p_twi, &twi_packet);
  400f76:	a907      	add	r1, sp, #28
  400f78:	4638      	mov	r0, r7
  400f7a:	4b05      	ldr	r3, [pc, #20]	; (400f90 <ov_init+0x138>)
  400f7c:	4798      	blx	r3
	if (ul_value != ul_oldvalue) {
  400f7e:	9b01      	ldr	r3, [sp, #4]
  400f80:	9800      	ldr	r0, [sp, #0]
  400f82:	1ac0      	subs	r0, r0, r3
  400f84:	bf18      	it	ne
  400f86:	2001      	movne	r0, #1
  400f88:	e7a2      	b.n	400ed0 <ov_init+0x78>
  400f8a:	bf00      	nop
  400f8c:	00400df1 	.word	0x00400df1
  400f90:	00400de5 	.word	0x00400de5

00400f94 <ov_configure>:
 * \param p_twi TWI interface.
 * \param format Specific format to configure.
 * \return 0 on success, 1 otherwise.
 */
uint32_t ov_configure(Twi* const p_twi, const e_OV2640_format format)
{
  400f94:	b508      	push	{r3, lr}
	const ov_reg *p_regs_conf = NULL;

	/* Common register initialization */
	switch (format) {
  400f96:	2911      	cmp	r1, #17
  400f98:	d82a      	bhi.n	400ff0 <ov_configure+0x5c>
  400f9a:	e8df f001 	tbb	[pc, r1]
  400f9e:	092b      	.short	0x092b
  400fa0:	0f0d0b2d 	.word	0x0f0d0b2d
  400fa4:	17151311 	.word	0x17151311
  400fa8:	1f1d1b19 	.word	0x1f1d1b19
  400fac:	27252321 	.word	0x27252321
	case JPEG_INIT:
		p_regs_conf = OV2640_JPEG_INIT;
		break;
		
	case YUV422:
		p_regs_conf = OV2640_YUV422;
  400fb0:	4914      	ldr	r1, [pc, #80]	; (401004 <ov_configure+0x70>)
  400fb2:	e022      	b.n	400ffa <ov_configure+0x66>
	case JPEG:
		p_regs_conf = OV2640_JPEG;
		break;
		
	case JPEG_320x240:
		p_regs_conf = OV2640_JPEG_320x240;
  400fb4:	4914      	ldr	r1, [pc, #80]	; (401008 <ov_configure+0x74>)
		break;
  400fb6:	e020      	b.n	400ffa <ov_configure+0x66>
		
	case JPEG_640x480:
		p_regs_conf = OV2640_JPEG_640x480;
  400fb8:	4914      	ldr	r1, [pc, #80]	; (40100c <ov_configure+0x78>)
		break;
  400fba:	e01e      	b.n	400ffa <ov_configure+0x66>
		
	case JPEG_800x600:
		p_regs_conf = OV2640_JPEG_800x600;
  400fbc:	4914      	ldr	r1, [pc, #80]	; (401010 <ov_configure+0x7c>)
		break;
  400fbe:	e01c      	b.n	400ffa <ov_configure+0x66>
		
	case JPEG_1024x768:
		p_regs_conf = OV2640_JPEG_1024x768;
  400fc0:	4914      	ldr	r1, [pc, #80]	; (401014 <ov_configure+0x80>)
		break;
  400fc2:	e01a      	b.n	400ffa <ov_configure+0x66>
		
	case JPEG_1280x1024:
		p_regs_conf = OV2640_JPEG_1280x1024;
  400fc4:	4914      	ldr	r1, [pc, #80]	; (401018 <ov_configure+0x84>)
		break;
  400fc6:	e018      	b.n	400ffa <ov_configure+0x66>
		
	case JPEG_1600x1200:
		p_regs_conf = OV2640_JPEG_1600x1200;
  400fc8:	4914      	ldr	r1, [pc, #80]	; (40101c <ov_configure+0x88>)
		break;
  400fca:	e016      	b.n	400ffa <ov_configure+0x66>
		
	case QVGA_YUV422_10FPS:
		p_regs_conf = OV2640_QVGA_YUV422_10FPS;
  400fcc:	4914      	ldr	r1, [pc, #80]	; (401020 <ov_configure+0x8c>)
		break;
  400fce:	e014      	b.n	400ffa <ov_configure+0x66>

	case QVGA_YUV422_15FPS:
		p_regs_conf = OV2640_QVGA_YUV422_15FPS;
  400fd0:	4914      	ldr	r1, [pc, #80]	; (401024 <ov_configure+0x90>)
		break;
  400fd2:	e012      	b.n	400ffa <ov_configure+0x66>

	case QVGA_YUV422_20FPS:
		p_regs_conf = OV2640_QVGA_YUV422_20FPS;
  400fd4:	4914      	ldr	r1, [pc, #80]	; (401028 <ov_configure+0x94>)
		break;
  400fd6:	e010      	b.n	400ffa <ov_configure+0x66>

	case QVGA_YUV422_30FPS:
		p_regs_conf = OV2640_QVGA_YUV422_30FPS;
  400fd8:	4914      	ldr	r1, [pc, #80]	; (40102c <ov_configure+0x98>)
		break;
  400fda:	e00e      	b.n	400ffa <ov_configure+0x66>

	case QVGA_RGB888:
		p_regs_conf = OV2640_QVGA_RGB888;
  400fdc:	4914      	ldr	r1, [pc, #80]	; (401030 <ov_configure+0x9c>)
		break;
  400fde:	e00c      	b.n	400ffa <ov_configure+0x66>

	case QQVGA_YUV422:
		p_regs_conf = OV2640_QQVGA_YUV422;
  400fe0:	4914      	ldr	r1, [pc, #80]	; (401034 <ov_configure+0xa0>)
		break;
  400fe2:	e00a      	b.n	400ffa <ov_configure+0x66>

	case QQVGA_RGB888:
		p_regs_conf = OV2640_QQVGA_RGB888;
  400fe4:	4914      	ldr	r1, [pc, #80]	; (401038 <ov_configure+0xa4>)
		break;
  400fe6:	e008      	b.n	400ffa <ov_configure+0x66>

	case TEST_PATTERN:
		p_regs_conf = OV2640_TEST_PATTERN;
  400fe8:	4914      	ldr	r1, [pc, #80]	; (40103c <ov_configure+0xa8>)
		break;
  400fea:	e006      	b.n	400ffa <ov_configure+0x66>

	case VGA_YUV422_20FPS:
		p_regs_conf = OV2640_VGA_YUV422_20FPS;
  400fec:	4914      	ldr	r1, [pc, #80]	; (401040 <ov_configure+0xac>)
		break;
  400fee:	e004      	b.n	400ffa <ov_configure+0x66>
	if (p_regs_conf != NULL) {
		ov_write_regs( p_twi, p_regs_conf );
		return 0;
	}

	return 1;
  400ff0:	2001      	movs	r0, #1
  400ff2:	bd08      	pop	{r3, pc}
		p_regs_conf = OV2640_JPEG_INIT;
  400ff4:	4913      	ldr	r1, [pc, #76]	; (401044 <ov_configure+0xb0>)
  400ff6:	e000      	b.n	400ffa <ov_configure+0x66>
		p_regs_conf = OV2640_JPEG;
  400ff8:	4913      	ldr	r1, [pc, #76]	; (401048 <ov_configure+0xb4>)
		ov_write_regs( p_twi, p_regs_conf );
  400ffa:	4b14      	ldr	r3, [pc, #80]	; (40104c <ov_configure+0xb8>)
  400ffc:	4798      	blx	r3
		return 0;
  400ffe:	2000      	movs	r0, #0
}
  401000:	bd08      	pop	{r3, pc}
  401002:	bf00      	nop
  401004:	00407278 	.word	0x00407278
  401008:	00406780 	.word	0x00406780
  40100c:	004067d0 	.word	0x004067d0
  401010:	00406824 	.word	0x00406824
  401014:	00406688 	.word	0x00406688
  401018:	004066d8 	.word	0x004066d8
  40101c:	0040672c 	.word	0x0040672c
  401020:	00406cd4 	.word	0x00406cd4
  401024:	00406dc4 	.word	0x00406dc4
  401028:	00406eb4 	.word	0x00406eb4
  40102c:	00406fa4 	.word	0x00406fa4
  401030:	00406be0 	.word	0x00406be0
  401034:	00406aec 	.word	0x00406aec
  401038:	004069f8 	.word	0x004069f8
  40103c:	00407094 	.word	0x00407094
  401040:	00407188 	.word	0x00407188
  401044:	00406878 	.word	0x00406878
  401048:	00406674 	.word	0x00406674
  40104c:	00400dfd 	.word	0x00400dfd

00401050 <TC0_Handler>:
 */ 

#include "timer_interface.h"

void TC0_Handler(void)
{
  401050:	b508      	push	{r3, lr}
	uint32_t ul_status;

	// Read TC0 status.
	ul_status = tc_get_status(TC0, 0);
  401052:	2100      	movs	r1, #0
  401054:	4805      	ldr	r0, [pc, #20]	; (40106c <TC0_Handler+0x1c>)
  401056:	4b06      	ldr	r3, [pc, #24]	; (401070 <TC0_Handler+0x20>)
  401058:	4798      	blx	r3

	// RC compare.
	if ((ul_status & TC_SR_CPCS) == TC_SR_CPCS) {
  40105a:	f010 0f10 	tst.w	r0, #16
  40105e:	d004      	beq.n	40106a <TC0_Handler+0x1a>
		counts++;
  401060:	4a04      	ldr	r2, [pc, #16]	; (401074 <TC0_Handler+0x24>)
  401062:	7813      	ldrb	r3, [r2, #0]
  401064:	3301      	adds	r3, #1
  401066:	b2db      	uxtb	r3, r3
  401068:	7013      	strb	r3, [r2, #0]
  40106a:	bd08      	pop	{r3, pc}
  40106c:	40010000 	.word	0x40010000
  401070:	00400743 	.word	0x00400743
  401074:	20000ab4 	.word	0x20000ab4

00401078 <configure_tc>:
	}
}

void configure_tc(void)
{
  401078:	b530      	push	{r4, r5, lr}
  40107a:	b085      	sub	sp, #20

	// Get system clock.
	ul_sysclk = sysclk_get_cpu_hz();

	// Configure PMC.
	pmc_enable_periph_clk(ID_TC0);
  40107c:	2017      	movs	r0, #23
  40107e:	4b14      	ldr	r3, [pc, #80]	; (4010d0 <configure_tc+0x58>)
  401080:	4798      	blx	r3

	// Configure TC for a 1Hz frequency and trigger on RC compare.
	tc_find_mck_divisor(TC_FREQ, ul_sysclk, &ul_div, &ul_tcclks, ul_sysclk);
  401082:	4d14      	ldr	r5, [pc, #80]	; (4010d4 <configure_tc+0x5c>)
  401084:	9500      	str	r5, [sp, #0]
  401086:	ab02      	add	r3, sp, #8
  401088:	aa03      	add	r2, sp, #12
  40108a:	4629      	mov	r1, r5
  40108c:	2001      	movs	r0, #1
  40108e:	4c12      	ldr	r4, [pc, #72]	; (4010d8 <configure_tc+0x60>)
  401090:	47a0      	blx	r4
	tc_init(TC0, 0, ul_tcclks | TC_CMR_CPCTRG);
  401092:	4c12      	ldr	r4, [pc, #72]	; (4010dc <configure_tc+0x64>)
  401094:	9a02      	ldr	r2, [sp, #8]
  401096:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
  40109a:	2100      	movs	r1, #0
  40109c:	4620      	mov	r0, r4
  40109e:	4b10      	ldr	r3, [pc, #64]	; (4010e0 <configure_tc+0x68>)
  4010a0:	4798      	blx	r3
	tc_write_rc(TC0, 0, (ul_sysclk / ul_div) / TC_FREQ);
  4010a2:	9a03      	ldr	r2, [sp, #12]
  4010a4:	fbb5 f2f2 	udiv	r2, r5, r2
  4010a8:	2100      	movs	r1, #0
  4010aa:	4620      	mov	r0, r4
  4010ac:	4b0d      	ldr	r3, [pc, #52]	; (4010e4 <configure_tc+0x6c>)
  4010ae:	4798      	blx	r3
  4010b0:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
  4010b4:	4b0c      	ldr	r3, [pc, #48]	; (4010e8 <configure_tc+0x70>)
  4010b6:	601a      	str	r2, [r3, #0]

	// Configure and enable interrupt on RC compare.
	NVIC_EnableIRQ((IRQn_Type) ID_TC0);
	tc_enable_interrupt(TC0, 0, TC_IER_CPCS);
  4010b8:	2210      	movs	r2, #16
  4010ba:	2100      	movs	r1, #0
  4010bc:	4620      	mov	r0, r4
  4010be:	4b0b      	ldr	r3, [pc, #44]	; (4010ec <configure_tc+0x74>)
  4010c0:	4798      	blx	r3
	
	// Start the timer
	tc_start(TC0, 0);
  4010c2:	2100      	movs	r1, #0
  4010c4:	4620      	mov	r0, r4
  4010c6:	4b0a      	ldr	r3, [pc, #40]	; (4010f0 <configure_tc+0x78>)
  4010c8:	4798      	blx	r3
  4010ca:	b005      	add	sp, #20
  4010cc:	bd30      	pop	{r4, r5, pc}
  4010ce:	bf00      	nop
  4010d0:	00400649 	.word	0x00400649
  4010d4:	07270e00 	.word	0x07270e00
  4010d8:	0040074b 	.word	0x0040074b
  4010dc:	40010000 	.word	0x40010000
  4010e0:	00400713 	.word	0x00400713
  4010e4:	00400733 	.word	0x00400733
  4010e8:	e000e100 	.word	0xe000e100
  4010ec:	0040073b 	.word	0x0040073b
  4010f0:	0040072b 	.word	0x0040072b

004010f4 <wifi_provision_handler>:
	// WIFI_PROVISIONING pin is button
	// when low set flag as true 
	unused(ul_id);
	unused(ul_mask);
	
	provision_flag = 1;
  4010f4:	2201      	movs	r2, #1
  4010f6:	4b01      	ldr	r3, [pc, #4]	; (4010fc <wifi_provision_handler+0x8>)
  4010f8:	701a      	strb	r2, [r3, #0]
  4010fa:	4770      	bx	lr
  4010fc:	20000a5c 	.word	0x20000a5c

00401100 <process_data_wifi>:
void process_data_wifi(void) {
  401100:	b508      	push	{r3, lr}
	if (strstr(input_line_wifi, "SUCCESS")) {
  401102:	4904      	ldr	r1, [pc, #16]	; (401114 <process_data_wifi+0x14>)
  401104:	4804      	ldr	r0, [pc, #16]	; (401118 <process_data_wifi+0x18>)
  401106:	4b05      	ldr	r3, [pc, #20]	; (40111c <process_data_wifi+0x1c>)
  401108:	4798      	blx	r3
  40110a:	b110      	cbz	r0, 401112 <process_data_wifi+0x12>
		success_flag = 1;
  40110c:	2201      	movs	r2, #1
  40110e:	4b04      	ldr	r3, [pc, #16]	; (401120 <process_data_wifi+0x20>)
  401110:	701a      	strb	r2, [r3, #0]
  401112:	bd08      	pop	{r3, pc}
  401114:	004072a4 	.word	0x004072a4
  401118:	20000ab8 	.word	0x20000ab8
  40111c:	00401b59 	.word	0x00401b59
  401120:	20000a5d 	.word	0x20000a5d

00401124 <wifi_command_response_handler>:
void wifi_command_response_handler(uint32_t ul_id, uint32_t ul_mask) {
  401124:	b508      	push	{r3, lr}
	wifi_comm_success = 1;
  401126:	2201      	movs	r2, #1
  401128:	4b07      	ldr	r3, [pc, #28]	; (401148 <wifi_command_response_handler+0x24>)
  40112a:	701a      	strb	r2, [r3, #0]
	process_data_wifi();
  40112c:	4b07      	ldr	r3, [pc, #28]	; (40114c <wifi_command_response_handler+0x28>)
  40112e:	4798      	blx	r3
	for (int jj=0;jj<MAX_INPUT_WIFI;jj++) input_line_wifi[jj] = 0;
  401130:	2300      	movs	r3, #0
  401132:	4907      	ldr	r1, [pc, #28]	; (401150 <wifi_command_response_handler+0x2c>)
  401134:	461a      	mov	r2, r3
  401136:	54ca      	strb	r2, [r1, r3]
  401138:	3301      	adds	r3, #1
  40113a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
  40113e:	d1fa      	bne.n	401136 <wifi_command_response_handler+0x12>
	input_pos_wifi = 0;
  401140:	2200      	movs	r2, #0
  401142:	4b04      	ldr	r3, [pc, #16]	; (401154 <wifi_command_response_handler+0x30>)
  401144:	601a      	str	r2, [r3, #0]
  401146:	bd08      	pop	{r3, pc}
  401148:	20000a6c 	.word	0x20000a6c
  40114c:	00401101 	.word	0x00401101
  401150:	20000ab8 	.word	0x20000ab8
  401154:	20000a58 	.word	0x20000a58

00401158 <configure_usart_wifi>:
			spi_write(SPI, transfer_index++, 0, 0);
		}
	}
}

void configure_usart_wifi(void) {
  401158:	b530      	push	{r4, r5, lr}
  40115a:	b087      	sub	sp, #28
	// Configuration of USART port used to communicate with the ESP32.
	gpio_configure_pin(PIN_USART0_RXD_IDX, PIN_USART0_RXD_FLAGS);
  40115c:	4d18      	ldr	r5, [pc, #96]	; (4011c0 <configure_usart_wifi+0x68>)
  40115e:	4629      	mov	r1, r5
  401160:	2005      	movs	r0, #5
  401162:	4c18      	ldr	r4, [pc, #96]	; (4011c4 <configure_usart_wifi+0x6c>)
  401164:	47a0      	blx	r4
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
  401166:	4629      	mov	r1, r5
  401168:	2006      	movs	r0, #6
  40116a:	47a0      	blx	r4
	
	static uint32_t ul_sysclk;
	const sam_usart_opt_t wifi_usart_settings = {
  40116c:	466c      	mov	r4, sp
  40116e:	4d16      	ldr	r5, [pc, #88]	; (4011c8 <configure_usart_wifi+0x70>)
  401170:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  401172:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  401174:	e895 0003 	ldmia.w	r5, {r0, r1}
  401178:	e884 0003 	stmia.w	r4, {r0, r1}
		/* This field is only used in IrDA mode. */
		0
	};
	
	/* Get system clock. */
	ul_sysclk = sysclk_get_cpu_hz();
  40117c:	4d13      	ldr	r5, [pc, #76]	; (4011cc <configure_usart_wifi+0x74>)
  40117e:	4b14      	ldr	r3, [pc, #80]	; (4011d0 <configure_usart_wifi+0x78>)
  401180:	602b      	str	r3, [r5, #0]
	
	pmc_enable_periph_clk(WIFI_USART_ID);
  401182:	200e      	movs	r0, #14
  401184:	4b13      	ldr	r3, [pc, #76]	; (4011d4 <configure_usart_wifi+0x7c>)
  401186:	4798      	blx	r3
	
	usart_init_rs232(WIFI_USART,&wifi_usart_settings,ul_sysclk);
  401188:	4c13      	ldr	r4, [pc, #76]	; (4011d8 <configure_usart_wifi+0x80>)
  40118a:	682a      	ldr	r2, [r5, #0]
  40118c:	4669      	mov	r1, sp
  40118e:	4620      	mov	r0, r4
  401190:	4b12      	ldr	r3, [pc, #72]	; (4011dc <configure_usart_wifi+0x84>)
  401192:	4798      	blx	r3

	/* Disable all the interrupts. */
	usart_disable_interrupt(WIFI_USART, ALL_INTERRUPT_MASK);
  401194:	f04f 31ff 	mov.w	r1, #4294967295
  401198:	4620      	mov	r0, r4
  40119a:	4b11      	ldr	r3, [pc, #68]	; (4011e0 <configure_usart_wifi+0x88>)
  40119c:	4798      	blx	r3
	
	/* Enable TX & RX function. */
	usart_enable_tx(WIFI_USART);
  40119e:	4620      	mov	r0, r4
  4011a0:	4b10      	ldr	r3, [pc, #64]	; (4011e4 <configure_usart_wifi+0x8c>)
  4011a2:	4798      	blx	r3
	usart_enable_rx(WIFI_USART);
  4011a4:	4620      	mov	r0, r4
  4011a6:	4b10      	ldr	r3, [pc, #64]	; (4011e8 <configure_usart_wifi+0x90>)
  4011a8:	4798      	blx	r3

	usart_enable_interrupt(WIFI_USART, US_IER_RXRDY);
  4011aa:	2101      	movs	r1, #1
  4011ac:	4620      	mov	r0, r4
  4011ae:	4b0f      	ldr	r3, [pc, #60]	; (4011ec <configure_usart_wifi+0x94>)
  4011b0:	4798      	blx	r3
  4011b2:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  4011b6:	4b0e      	ldr	r3, [pc, #56]	; (4011f0 <configure_usart_wifi+0x98>)
  4011b8:	601a      	str	r2, [r3, #0]

	/* Configure and enable interrupt of USART. */
	NVIC_EnableIRQ(WIFI_USART_IRQn);
}
  4011ba:	b007      	add	sp, #28
  4011bc:	bd30      	pop	{r4, r5, pc}
  4011be:	bf00      	nop
  4011c0:	08000001 	.word	0x08000001
  4011c4:	004002dd 	.word	0x004002dd
  4011c8:	0040728c 	.word	0x0040728c
  4011cc:	20000a68 	.word	0x20000a68
  4011d0:	07270e00 	.word	0x07270e00
  4011d4:	00400649 	.word	0x00400649
  4011d8:	40024000 	.word	0x40024000
  4011dc:	00400aa9 	.word	0x00400aa9
  4011e0:	00400b0d 	.word	0x00400b0d
  4011e4:	00400afd 	.word	0x00400afd
  4011e8:	00400b03 	.word	0x00400b03
  4011ec:	00400b09 	.word	0x00400b09
  4011f0:	e000e100 	.word	0xe000e100

004011f4 <configure_wifi_comm_pin>:

void configure_wifi_comm_pin(void) {
  4011f4:	b530      	push	{r4, r5, lr}
  4011f6:	b083      	sub	sp, #12
	// Configuration of ?command complete? rising-edge interrupt.
	/* Configure PIO clock. */
	pmc_enable_periph_clk(WIFI_COMM_ID);
  4011f8:	200b      	movs	r0, #11
  4011fa:	4b0b      	ldr	r3, [pc, #44]	; (401228 <configure_wifi_comm_pin+0x34>)
  4011fc:	4798      	blx	r3

	/* Initialize PIO interrupt handler, see PIO definition in conf_board.h
	**/
	pio_handler_set(WIFI_COMM_PIO, WIFI_COMM_ID, WIFI_COMM_PIN_NUM, WIFI_COMM_ATTR, wifi_command_response_handler);
  4011fe:	4c0b      	ldr	r4, [pc, #44]	; (40122c <configure_wifi_comm_pin+0x38>)
  401200:	4b0b      	ldr	r3, [pc, #44]	; (401230 <configure_wifi_comm_pin+0x3c>)
  401202:	9300      	str	r3, [sp, #0]
  401204:	2370      	movs	r3, #112	; 0x70
  401206:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  40120a:	210b      	movs	r1, #11
  40120c:	4620      	mov	r0, r4
  40120e:	4d09      	ldr	r5, [pc, #36]	; (401234 <configure_wifi_comm_pin+0x40>)
  401210:	47a8      	blx	r5
  401212:	f44f 6200 	mov.w	r2, #2048	; 0x800
  401216:	4b08      	ldr	r3, [pc, #32]	; (401238 <configure_wifi_comm_pin+0x44>)
  401218:	601a      	str	r2, [r3, #0]

	/* Enable PIO controller IRQs. */
	NVIC_EnableIRQ((IRQn_Type)WIFI_COMM_ID);

	/* Enable PIO interrupt lines. */
	pio_enable_interrupt(WIFI_COMM_PIO, WIFI_COMM_PIN_NUM);
  40121a:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
  40121e:	4620      	mov	r0, r4
  401220:	4b06      	ldr	r3, [pc, #24]	; (40123c <configure_wifi_comm_pin+0x48>)
  401222:	4798      	blx	r3
}
  401224:	b003      	add	sp, #12
  401226:	bd30      	pop	{r4, r5, pc}
  401228:	00400649 	.word	0x00400649
  40122c:	400e0e00 	.word	0x400e0e00
  401230:	00401125 	.word	0x00401125
  401234:	00400495 	.word	0x00400495
  401238:	e000e100 	.word	0xe000e100
  40123c:	004002cd 	.word	0x004002cd

00401240 <configure_wifi_provision_pin>:

void configure_wifi_provision_pin(void) { //
  401240:	b530      	push	{r4, r5, lr}
  401242:	b083      	sub	sp, #12
	// Configuration of button interrupt to initiate provisioning mode.
	// if flag then interrupt
	// This configures the ESP32 as an access point with SSID ?ESD1 XY?, where X is the fifth byte of the MAC address and Y is the 
	// sixth byte of the MAC address
	pmc_enable_periph_clk(WIFI_PROVIS_ID);
  401244:	200b      	movs	r0, #11
  401246:	4b0e      	ldr	r3, [pc, #56]	; (401280 <configure_wifi_provision_pin+0x40>)
  401248:	4798      	blx	r3
	pio_set_debounce_filter(WIFI_PROVIS_PIO, WIFI_PROVIS_PIN_NUM, 10);
  40124a:	4c0e      	ldr	r4, [pc, #56]	; (401284 <configure_wifi_provision_pin+0x44>)
  40124c:	220a      	movs	r2, #10
  40124e:	f44f 2180 	mov.w	r1, #262144	; 0x40000
  401252:	4620      	mov	r0, r4
  401254:	4b0c      	ldr	r3, [pc, #48]	; (401288 <configure_wifi_provision_pin+0x48>)
  401256:	4798      	blx	r3
	pio_handler_set(WIFI_PROVIS_PIO, WIFI_PROVIS_ID, WIFI_PROVIS_PIN_NUM, WIFI_PROVIS_ATTR, wifi_provision_handler);
  401258:	4b0c      	ldr	r3, [pc, #48]	; (40128c <configure_wifi_provision_pin+0x4c>)
  40125a:	9300      	str	r3, [sp, #0]
  40125c:	2349      	movs	r3, #73	; 0x49
  40125e:	f44f 2280 	mov.w	r2, #262144	; 0x40000
  401262:	210b      	movs	r1, #11
  401264:	4620      	mov	r0, r4
  401266:	4d0a      	ldr	r5, [pc, #40]	; (401290 <configure_wifi_provision_pin+0x50>)
  401268:	47a8      	blx	r5
  40126a:	f44f 6200 	mov.w	r2, #2048	; 0x800
  40126e:	4b09      	ldr	r3, [pc, #36]	; (401294 <configure_wifi_provision_pin+0x54>)
  401270:	601a      	str	r2, [r3, #0]
	NVIC_EnableIRQ((IRQn_Type)WIFI_PROVIS_ID);
	pio_enable_interrupt(WIFI_PROVIS_PIO, WIFI_PROVIS_PIN_NUM);
  401272:	f44f 2180 	mov.w	r1, #262144	; 0x40000
  401276:	4620      	mov	r0, r4
  401278:	4b07      	ldr	r3, [pc, #28]	; (401298 <configure_wifi_provision_pin+0x58>)
  40127a:	4798      	blx	r3
}
  40127c:	b003      	add	sp, #12
  40127e:	bd30      	pop	{r4, r5, pc}
  401280:	00400649 	.word	0x00400649
  401284:	400e0e00 	.word	0x400e0e00
  401288:	0040019d 	.word	0x0040019d
  40128c:	004010f5 	.word	0x004010f5
  401290:	00400495 	.word	0x00400495
  401294:	e000e100 	.word	0xe000e100
  401298:	004002cd 	.word	0x004002cd

0040129c <configure_spi>:

void configure_spi(void) {
  40129c:	b510      	push	{r4, lr}
	// Configuration of SPI port and interrupts used to send images to the ESP32.
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  40129e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4012a2:	200c      	movs	r0, #12
  4012a4:	4c0e      	ldr	r4, [pc, #56]	; (4012e0 <configure_spi+0x44>)
  4012a6:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  4012a8:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4012ac:	200d      	movs	r0, #13
  4012ae:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  4012b0:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4012b4:	200e      	movs	r0, #14
  4012b6:	47a0      	blx	r4
	gpio_configure_pin(SPI_NPCS0_GPIO, SPI_NPCS0_FLAGS);
  4012b8:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4012bc:	200b      	movs	r0, #11
  4012be:	47a0      	blx	r4
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  4012c0:	4b08      	ldr	r3, [pc, #32]	; (4012e4 <configure_spi+0x48>)
  4012c2:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4012c6:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  __ASM volatile ("dsb 0xF":::"memory");
  4012ca:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  4012ce:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  4012d2:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  4012d6:	2100      	movs	r1, #0
  4012d8:	f883 1315 	strb.w	r1, [r3, #789]	; 0x315
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  4012dc:	601a      	str	r2, [r3, #0]
  4012de:	bd10      	pop	{r4, pc}
  4012e0:	004002dd 	.word	0x004002dd
  4012e4:	e000e100 	.word	0xe000e100

004012e8 <spi_peripheral_initialize>:
	NVIC_ClearPendingIRQ(SPI_IRQn);
	NVIC_SetPriority(SPI_IRQn, 0);
	NVIC_EnableIRQ(SPI_IRQn);
}

void spi_peripheral_initialize(void) {
  4012e8:	b510      	push	{r4, lr}
	// Initialize the SPI port as a peripheral (slave) device.
	spi_enable_clock(SPI);
  4012ea:	4c13      	ldr	r4, [pc, #76]	; (401338 <spi_peripheral_initialize+0x50>)
  4012ec:	4620      	mov	r0, r4
  4012ee:	4b13      	ldr	r3, [pc, #76]	; (40133c <spi_peripheral_initialize+0x54>)
  4012f0:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  4012f2:	2302      	movs	r3, #2
  4012f4:	6023      	str	r3, [r4, #0]
	p_spi->SPI_CR = SPI_CR_SWRST;
  4012f6:	2380      	movs	r3, #128	; 0x80
  4012f8:	6023      	str	r3, [r4, #0]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_set_slave_mode(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_MSTR);
  4012fa:	6863      	ldr	r3, [r4, #4]
  4012fc:	f023 0301 	bic.w	r3, r3, #1
  401300:	6063      	str	r3, [r4, #4]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_mode_fault_detect(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  401302:	6863      	ldr	r3, [r4, #4]
  401304:	f043 0310 	orr.w	r3, r3, #16
  401308:	6063      	str	r3, [r4, #4]
	spi_disable(SPI);
	spi_reset(SPI);
	spi_set_slave_mode(SPI);
	spi_disable_mode_fault_detect(SPI);
	spi_set_peripheral_chip_select_value(SPI, SPI_CHIP_PCS);
  40130a:	210e      	movs	r1, #14
  40130c:	4620      	mov	r0, r4
  40130e:	4b0c      	ldr	r3, [pc, #48]	; (401340 <spi_peripheral_initialize+0x58>)
  401310:	4798      	blx	r3
	spi_set_clock_polarity(SPI, SPI_CHIP_SEL, SPI_CLK_POLARITY);
  401312:	2200      	movs	r2, #0
  401314:	4611      	mov	r1, r2
  401316:	4620      	mov	r0, r4
  401318:	4b0a      	ldr	r3, [pc, #40]	; (401344 <spi_peripheral_initialize+0x5c>)
  40131a:	4798      	blx	r3
	spi_set_clock_phase(SPI, SPI_CHIP_SEL, SPI_CLK_PHASE);
  40131c:	2200      	movs	r2, #0
  40131e:	4611      	mov	r1, r2
  401320:	4620      	mov	r0, r4
  401322:	4b09      	ldr	r3, [pc, #36]	; (401348 <spi_peripheral_initialize+0x60>)
  401324:	4798      	blx	r3
	spi_set_bits_per_transfer(SPI, SPI_CHIP_SEL, SPI_CSR_BITS_8_BIT);
  401326:	2200      	movs	r2, #0
  401328:	4611      	mov	r1, r2
  40132a:	4620      	mov	r0, r4
  40132c:	4b07      	ldr	r3, [pc, #28]	; (40134c <spi_peripheral_initialize+0x64>)
  40132e:	4798      	blx	r3
 * \param p_spi Pointer to an SPI instance.
 * \param ul_sources Interrupts to be enabled.
 */
static inline void spi_enable_interrupt(Spi *p_spi, uint32_t ul_sources)
{
	p_spi->SPI_IER = ul_sources;
  401330:	2301      	movs	r3, #1
  401332:	6163      	str	r3, [r4, #20]
	p_spi->SPI_CR = SPI_CR_SPIEN;
  401334:	6023      	str	r3, [r4, #0]
  401336:	bd10      	pop	{r4, pc}
  401338:	40008000 	.word	0x40008000
  40133c:	0040069d 	.word	0x0040069d
  401340:	004006ad 	.word	0x004006ad
  401344:	004006c3 	.word	0x004006c3
  401348:	004006e1 	.word	0x004006e1
  40134c:	004006ff 	.word	0x004006ff

00401350 <prepare_spi_transfer>:
	spi_enable(SPI);
}

void prepare_spi_transfer(void) {
	// Set necessary parameters to prepare for SPI transfer.
	transfer_len = 100;
  401350:	2264      	movs	r2, #100	; 0x64
  401352:	4b03      	ldr	r3, [pc, #12]	; (401360 <prepare_spi_transfer+0x10>)
  401354:	601a      	str	r2, [r3, #0]
	transfer_index = 0;
  401356:	2200      	movs	r2, #0
  401358:	4b02      	ldr	r3, [pc, #8]	; (401364 <prepare_spi_transfer+0x14>)
  40135a:	601a      	str	r2, [r3, #0]
  40135c:	4770      	bx	lr
  40135e:	bf00      	nop
  401360:	20000a64 	.word	0x20000a64
  401364:	20000a60 	.word	0x20000a60

00401368 <write_wifi_command>:
}

void write_wifi_command(char* comm, uint8_t cnt) { //
  401368:	b538      	push	{r3, r4, r5, lr}
  40136a:	460c      	mov	r4, r1
	// Writes a command (comm) to the ESP32, and waits either for an acknowledgment (via the ?command complete? pin)
	// or a timeout. The timeout can be created by setting the global variable counts to zero, which will automatically increment every second, 
	// and waiting while counts < cnt.
	
	wifi_comm_success = 0;
  40136c:	2500      	movs	r5, #0
  40136e:	4b09      	ldr	r3, [pc, #36]	; (401394 <write_wifi_command+0x2c>)
  401370:	701d      	strb	r5, [r3, #0]
	usart_write_line(WIFI_USART,comm); // write command
  401372:	4601      	mov	r1, r0
  401374:	4808      	ldr	r0, [pc, #32]	; (401398 <write_wifi_command+0x30>)
  401376:	4b09      	ldr	r3, [pc, #36]	; (40139c <write_wifi_command+0x34>)
  401378:	4798      	blx	r3
	// wait for acknowledgment or timeout 
	counts = 0;
  40137a:	4b09      	ldr	r3, [pc, #36]	; (4013a0 <write_wifi_command+0x38>)
  40137c:	701d      	strb	r5, [r3, #0]
	while ((counts < cnt) && (!wifi_comm_success)) {
  40137e:	461a      	mov	r2, r3
  401380:	4904      	ldr	r1, [pc, #16]	; (401394 <write_wifi_command+0x2c>)
  401382:	7813      	ldrb	r3, [r2, #0]
  401384:	b2db      	uxtb	r3, r3
  401386:	42a3      	cmp	r3, r4
  401388:	d202      	bcs.n	401390 <write_wifi_command+0x28>
  40138a:	780b      	ldrb	r3, [r1, #0]
  40138c:	2b00      	cmp	r3, #0
  40138e:	d0f8      	beq.n	401382 <write_wifi_command+0x1a>
  401390:	bd38      	pop	{r3, r4, r5, pc}
  401392:	bf00      	nop
  401394:	20000a6c 	.word	0x20000a6c
  401398:	40024000 	.word	0x40024000
  40139c:	00400b25 	.word	0x00400b25
  4013a0:	20000ab4 	.word	0x20000ab4

004013a4 <write_image_to_web>:
	// follow this protocol (illustrated in Appendix C):
	// 1. Configure the SPI interface to be ready for a transfer by setting its parameters appropriately.
	// 2. Issue the command ?image transfer xxxx?, where xxxx is replaced by the length of the image you want to transfer.
	// 3. The ESP32 will then set the ?command complete? pin low and begin transferring the image over SPI.
	// 4. After the image is done sending, the ESP32 will set the ?command complete? pin high. The MCU should sense this and then move on.
	if (transfer_len == 0) {
  4013a4:	4b0a      	ldr	r3, [pc, #40]	; (4013d0 <write_image_to_web+0x2c>)
  4013a6:	681b      	ldr	r3, [r3, #0]
  4013a8:	b903      	cbnz	r3, 4013ac <write_image_to_web+0x8>
  4013aa:	4770      	bx	lr
void write_image_to_web(void) { //
  4013ac:	b500      	push	{lr}
  4013ae:	b09b      	sub	sp, #108	; 0x6c
		return;
	}
	
	prepare_spi_transfer();
  4013b0:	4b08      	ldr	r3, [pc, #32]	; (4013d4 <write_image_to_web+0x30>)
  4013b2:	4798      	blx	r3
	uint8_t transfer_message[100];
	sprintf(transfer_message, "image transfer %i\n", transfer_len);
  4013b4:	4b06      	ldr	r3, [pc, #24]	; (4013d0 <write_image_to_web+0x2c>)
  4013b6:	681a      	ldr	r2, [r3, #0]
  4013b8:	4907      	ldr	r1, [pc, #28]	; (4013d8 <write_image_to_web+0x34>)
  4013ba:	a801      	add	r0, sp, #4
  4013bc:	4b07      	ldr	r3, [pc, #28]	; (4013dc <write_image_to_web+0x38>)
  4013be:	4798      	blx	r3
	write_wifi_command(transfer_message,5);		
  4013c0:	2105      	movs	r1, #5
  4013c2:	a801      	add	r0, sp, #4
  4013c4:	4b06      	ldr	r3, [pc, #24]	; (4013e0 <write_image_to_web+0x3c>)
  4013c6:	4798      	blx	r3
	
  4013c8:	b01b      	add	sp, #108	; 0x6c
  4013ca:	f85d fb04 	ldr.w	pc, [sp], #4
  4013ce:	bf00      	nop
  4013d0:	20000a64 	.word	0x20000a64
  4013d4:	00401351 	.word	0x00401351
  4013d8:	004072ac 	.word	0x004072ac
  4013dc:	0040185d 	.word	0x0040185d
  4013e0:	00401369 	.word	0x00401369

004013e4 <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
  4013e4:	4770      	bx	lr

004013e6 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  4013e6:	e7fe      	b.n	4013e6 <Dummy_Handler>

004013e8 <Reset_Handler>:
{
  4013e8:	b508      	push	{r3, lr}
	if (pSrc > pDest) {
  4013ea:	4b21      	ldr	r3, [pc, #132]	; (401470 <Reset_Handler+0x88>)
  4013ec:	4a21      	ldr	r2, [pc, #132]	; (401474 <Reset_Handler+0x8c>)
  4013ee:	429a      	cmp	r2, r3
  4013f0:	d928      	bls.n	401444 <Reset_Handler+0x5c>
		for (; pDest < &_erelocate;) {
  4013f2:	4b21      	ldr	r3, [pc, #132]	; (401478 <Reset_Handler+0x90>)
  4013f4:	4a1e      	ldr	r2, [pc, #120]	; (401470 <Reset_Handler+0x88>)
  4013f6:	429a      	cmp	r2, r3
  4013f8:	d20c      	bcs.n	401414 <Reset_Handler+0x2c>
  4013fa:	3b01      	subs	r3, #1
  4013fc:	1a9b      	subs	r3, r3, r2
  4013fe:	f023 0303 	bic.w	r3, r3, #3
  401402:	3304      	adds	r3, #4
  401404:	4413      	add	r3, r2
  401406:	491b      	ldr	r1, [pc, #108]	; (401474 <Reset_Handler+0x8c>)
			*pDest++ = *pSrc++;
  401408:	f851 0b04 	ldr.w	r0, [r1], #4
  40140c:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
  401410:	429a      	cmp	r2, r3
  401412:	d1f9      	bne.n	401408 <Reset_Handler+0x20>
	__NOP();
  401414:	bf00      	nop
	for (pDest = &_szero; pDest < &_ezero;) {
  401416:	4b19      	ldr	r3, [pc, #100]	; (40147c <Reset_Handler+0x94>)
  401418:	4a19      	ldr	r2, [pc, #100]	; (401480 <Reset_Handler+0x98>)
  40141a:	429a      	cmp	r2, r3
  40141c:	d20a      	bcs.n	401434 <Reset_Handler+0x4c>
  40141e:	3b01      	subs	r3, #1
  401420:	1a9b      	subs	r3, r3, r2
  401422:	f023 0303 	bic.w	r3, r3, #3
  401426:	3304      	adds	r3, #4
  401428:	4413      	add	r3, r2
		*pDest++ = 0;
  40142a:	2100      	movs	r1, #0
  40142c:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
  401430:	429a      	cmp	r2, r3
  401432:	d1fb      	bne.n	40142c <Reset_Handler+0x44>
	SCB->VTOR = ((uint32_t) pSrc);
  401434:	4b13      	ldr	r3, [pc, #76]	; (401484 <Reset_Handler+0x9c>)
  401436:	4a14      	ldr	r2, [pc, #80]	; (401488 <Reset_Handler+0xa0>)
  401438:	609a      	str	r2, [r3, #8]
	__libc_init_array();
  40143a:	4b14      	ldr	r3, [pc, #80]	; (40148c <Reset_Handler+0xa4>)
  40143c:	4798      	blx	r3
	main();
  40143e:	4b14      	ldr	r3, [pc, #80]	; (401490 <Reset_Handler+0xa8>)
  401440:	4798      	blx	r3
  401442:	e7fe      	b.n	401442 <Reset_Handler+0x5a>
	} else if (pSrc < pDest) {
  401444:	4b0a      	ldr	r3, [pc, #40]	; (401470 <Reset_Handler+0x88>)
  401446:	4a0b      	ldr	r2, [pc, #44]	; (401474 <Reset_Handler+0x8c>)
  401448:	429a      	cmp	r2, r3
  40144a:	d2e3      	bcs.n	401414 <Reset_Handler+0x2c>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  40144c:	4b0a      	ldr	r3, [pc, #40]	; (401478 <Reset_Handler+0x90>)
  40144e:	4808      	ldr	r0, [pc, #32]	; (401470 <Reset_Handler+0x88>)
  401450:	1a18      	subs	r0, r3, r0
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  401452:	4611      	mov	r1, r2
  401454:	3a04      	subs	r2, #4
  401456:	4402      	add	r2, r0
		for (;nb_bytes;nb_bytes -= 4) {
  401458:	2800      	cmp	r0, #0
  40145a:	d0db      	beq.n	401414 <Reset_Handler+0x2c>
  40145c:	f1c1 0104 	rsb	r1, r1, #4
			*pDest-- = *pSrc--;
  401460:	f852 0904 	ldr.w	r0, [r2], #-4
  401464:	f843 0d04 	str.w	r0, [r3, #-4]!
		for (;nb_bytes;nb_bytes -= 4) {
  401468:	42ca      	cmn	r2, r1
  40146a:	d1f9      	bne.n	401460 <Reset_Handler+0x78>
  40146c:	e7d2      	b.n	401414 <Reset_Handler+0x2c>
  40146e:	bf00      	nop
  401470:	20000000 	.word	0x20000000
  401474:	00407624 	.word	0x00407624
  401478:	200009c0 	.word	0x200009c0
  40147c:	20000ec8 	.word	0x20000ec8
  401480:	200009c0 	.word	0x200009c0
  401484:	e000ed00 	.word	0xe000ed00
  401488:	00400000 	.word	0x00400000
  40148c:	00401771 	.word	0x00401771
  401490:	00401651 	.word	0x00401651

00401494 <SystemCoreClockUpdate>:
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  401494:	4b3c      	ldr	r3, [pc, #240]	; (401588 <SystemCoreClockUpdate+0xf4>)
  401496:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401498:	f003 0303 	and.w	r3, r3, #3
  40149c:	2b03      	cmp	r3, #3
  40149e:	d80e      	bhi.n	4014be <SystemCoreClockUpdate+0x2a>
  4014a0:	e8df f003 	tbb	[pc, r3]
  4014a4:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  4014a8:	4b38      	ldr	r3, [pc, #224]	; (40158c <SystemCoreClockUpdate+0xf8>)
  4014aa:	695b      	ldr	r3, [r3, #20]
  4014ac:	f013 0f80 	tst.w	r3, #128	; 0x80
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4014b0:	bf14      	ite	ne
  4014b2:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4014b6:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4014ba:	4b35      	ldr	r3, [pc, #212]	; (401590 <SystemCoreClockUpdate+0xfc>)
  4014bc:	601a      	str	r2, [r3, #0]
		
	default:
		break;
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  4014be:	4b32      	ldr	r3, [pc, #200]	; (401588 <SystemCoreClockUpdate+0xf4>)
  4014c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4014c2:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4014c6:	2b70      	cmp	r3, #112	; 0x70
  4014c8:	d055      	beq.n	401576 <SystemCoreClockUpdate+0xe2>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4014ca:	4b2f      	ldr	r3, [pc, #188]	; (401588 <SystemCoreClockUpdate+0xf4>)
  4014cc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
		SystemCoreClock >>=
  4014ce:	4930      	ldr	r1, [pc, #192]	; (401590 <SystemCoreClockUpdate+0xfc>)
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4014d0:	f3c2 1202 	ubfx	r2, r2, #4, #3
		SystemCoreClock >>=
  4014d4:	680b      	ldr	r3, [r1, #0]
  4014d6:	40d3      	lsrs	r3, r2
  4014d8:	600b      	str	r3, [r1, #0]
  4014da:	4770      	bx	lr
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  4014dc:	4b2a      	ldr	r3, [pc, #168]	; (401588 <SystemCoreClockUpdate+0xf4>)
  4014de:	6a1b      	ldr	r3, [r3, #32]
  4014e0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4014e4:	d003      	beq.n	4014ee <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL;
  4014e6:	4a2b      	ldr	r2, [pc, #172]	; (401594 <SystemCoreClockUpdate+0x100>)
  4014e8:	4b29      	ldr	r3, [pc, #164]	; (401590 <SystemCoreClockUpdate+0xfc>)
  4014ea:	601a      	str	r2, [r3, #0]
  4014ec:	e7e7      	b.n	4014be <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4014ee:	4a2a      	ldr	r2, [pc, #168]	; (401598 <SystemCoreClockUpdate+0x104>)
  4014f0:	4b27      	ldr	r3, [pc, #156]	; (401590 <SystemCoreClockUpdate+0xfc>)
  4014f2:	601a      	str	r2, [r3, #0]
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  4014f4:	4b24      	ldr	r3, [pc, #144]	; (401588 <SystemCoreClockUpdate+0xf4>)
  4014f6:	6a1b      	ldr	r3, [r3, #32]
  4014f8:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4014fc:	2b10      	cmp	r3, #16
  4014fe:	d005      	beq.n	40150c <SystemCoreClockUpdate+0x78>
  401500:	2b20      	cmp	r3, #32
  401502:	d1dc      	bne.n	4014be <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  401504:	4a23      	ldr	r2, [pc, #140]	; (401594 <SystemCoreClockUpdate+0x100>)
  401506:	4b22      	ldr	r3, [pc, #136]	; (401590 <SystemCoreClockUpdate+0xfc>)
  401508:	601a      	str	r2, [r3, #0]
			break;
  40150a:	e7d8      	b.n	4014be <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  40150c:	4a23      	ldr	r2, [pc, #140]	; (40159c <SystemCoreClockUpdate+0x108>)
  40150e:	4b20      	ldr	r3, [pc, #128]	; (401590 <SystemCoreClockUpdate+0xfc>)
  401510:	601a      	str	r2, [r3, #0]
			break;
  401512:	e7d4      	b.n	4014be <SystemCoreClockUpdate+0x2a>
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  401514:	4b1c      	ldr	r3, [pc, #112]	; (401588 <SystemCoreClockUpdate+0xf4>)
  401516:	6a1b      	ldr	r3, [r3, #32]
  401518:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  40151c:	d018      	beq.n	401550 <SystemCoreClockUpdate+0xbc>
				SystemCoreClock = CHIP_FREQ_XTAL;
  40151e:	4a1d      	ldr	r2, [pc, #116]	; (401594 <SystemCoreClockUpdate+0x100>)
  401520:	4b1b      	ldr	r3, [pc, #108]	; (401590 <SystemCoreClockUpdate+0xfc>)
  401522:	601a      	str	r2, [r3, #0]
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  401524:	4b18      	ldr	r3, [pc, #96]	; (401588 <SystemCoreClockUpdate+0xf4>)
  401526:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401528:	f003 0303 	and.w	r3, r3, #3
  40152c:	2b02      	cmp	r3, #2
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  40152e:	4a16      	ldr	r2, [pc, #88]	; (401588 <SystemCoreClockUpdate+0xf4>)
  401530:	bf07      	ittee	eq
  401532:	6a91      	ldreq	r1, [r2, #40]	; 0x28
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  401534:	6a92      	ldreq	r2, [r2, #40]	; 0x28
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  401536:	6ad1      	ldrne	r1, [r2, #44]	; 0x2c
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  401538:	6ad2      	ldrne	r2, [r2, #44]	; 0x2c
  40153a:	4815      	ldr	r0, [pc, #84]	; (401590 <SystemCoreClockUpdate+0xfc>)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  40153c:	f3c1 410a 	ubfx	r1, r1, #16, #11
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  401540:	6803      	ldr	r3, [r0, #0]
  401542:	fb01 3303 	mla	r3, r1, r3, r3
						>> CKGR_PLLBR_DIVB_Pos));
  401546:	b2d2      	uxtb	r2, r2
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  401548:	fbb3 f3f2 	udiv	r3, r3, r2
  40154c:	6003      	str	r3, [r0, #0]
  40154e:	e7b6      	b.n	4014be <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401550:	4a11      	ldr	r2, [pc, #68]	; (401598 <SystemCoreClockUpdate+0x104>)
  401552:	4b0f      	ldr	r3, [pc, #60]	; (401590 <SystemCoreClockUpdate+0xfc>)
  401554:	601a      	str	r2, [r3, #0]
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  401556:	4b0c      	ldr	r3, [pc, #48]	; (401588 <SystemCoreClockUpdate+0xf4>)
  401558:	6a1b      	ldr	r3, [r3, #32]
  40155a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40155e:	2b10      	cmp	r3, #16
  401560:	d005      	beq.n	40156e <SystemCoreClockUpdate+0xda>
  401562:	2b20      	cmp	r3, #32
  401564:	d1de      	bne.n	401524 <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  401566:	4a0b      	ldr	r2, [pc, #44]	; (401594 <SystemCoreClockUpdate+0x100>)
  401568:	4b09      	ldr	r3, [pc, #36]	; (401590 <SystemCoreClockUpdate+0xfc>)
  40156a:	601a      	str	r2, [r3, #0]
					break;
  40156c:	e7da      	b.n	401524 <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  40156e:	4a0b      	ldr	r2, [pc, #44]	; (40159c <SystemCoreClockUpdate+0x108>)
  401570:	4b07      	ldr	r3, [pc, #28]	; (401590 <SystemCoreClockUpdate+0xfc>)
  401572:	601a      	str	r2, [r3, #0]
					break;
  401574:	e7d6      	b.n	401524 <SystemCoreClockUpdate+0x90>
		SystemCoreClock /= 3U;
  401576:	4a06      	ldr	r2, [pc, #24]	; (401590 <SystemCoreClockUpdate+0xfc>)
  401578:	6813      	ldr	r3, [r2, #0]
  40157a:	4909      	ldr	r1, [pc, #36]	; (4015a0 <SystemCoreClockUpdate+0x10c>)
  40157c:	fba1 1303 	umull	r1, r3, r1, r3
  401580:	085b      	lsrs	r3, r3, #1
  401582:	6013      	str	r3, [r2, #0]
  401584:	4770      	bx	lr
  401586:	bf00      	nop
  401588:	400e0400 	.word	0x400e0400
  40158c:	400e1410 	.word	0x400e1410
  401590:	2000000c 	.word	0x2000000c
  401594:	00b71b00 	.word	0x00b71b00
  401598:	003d0900 	.word	0x003d0900
  40159c:	007a1200 	.word	0x007a1200
  4015a0:	aaaaaaab 	.word	0xaaaaaaab

004015a4 <system_init_flash>:
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
#if !defined(ID_EFC1)
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  4015a4:	4b12      	ldr	r3, [pc, #72]	; (4015f0 <system_init_flash+0x4c>)
  4015a6:	4298      	cmp	r0, r3
  4015a8:	d911      	bls.n	4015ce <system_init_flash+0x2a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  4015aa:	4b12      	ldr	r3, [pc, #72]	; (4015f4 <system_init_flash+0x50>)
  4015ac:	4298      	cmp	r0, r3
  4015ae:	d913      	bls.n	4015d8 <system_init_flash+0x34>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  4015b0:	4b11      	ldr	r3, [pc, #68]	; (4015f8 <system_init_flash+0x54>)
  4015b2:	4298      	cmp	r0, r3
  4015b4:	d914      	bls.n	4015e0 <system_init_flash+0x3c>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  4015b6:	4b11      	ldr	r3, [pc, #68]	; (4015fc <system_init_flash+0x58>)
  4015b8:	4298      	cmp	r0, r3
  4015ba:	d915      	bls.n	4015e8 <system_init_flash+0x44>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  4015bc:	4b10      	ldr	r3, [pc, #64]	; (401600 <system_init_flash+0x5c>)
  4015be:	4298      	cmp	r0, r3
					EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  4015c0:	bf94      	ite	ls
  4015c2:	f04f 2204 	movls.w	r2, #67109888	; 0x4000400
					} else {
					EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  4015c6:	4a0f      	ldrhi	r2, [pc, #60]	; (401604 <system_init_flash+0x60>)
  4015c8:	4b0f      	ldr	r3, [pc, #60]	; (401608 <system_init_flash+0x64>)
  4015ca:	601a      	str	r2, [r3, #0]
  4015cc:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  4015ce:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  4015d2:	4b0d      	ldr	r3, [pc, #52]	; (401608 <system_init_flash+0x64>)
  4015d4:	601a      	str	r2, [r3, #0]
  4015d6:	4770      	bx	lr
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  4015d8:	4a0c      	ldr	r2, [pc, #48]	; (40160c <system_init_flash+0x68>)
  4015da:	4b0b      	ldr	r3, [pc, #44]	; (401608 <system_init_flash+0x64>)
  4015dc:	601a      	str	r2, [r3, #0]
  4015de:	4770      	bx	lr
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  4015e0:	4a0b      	ldr	r2, [pc, #44]	; (401610 <system_init_flash+0x6c>)
  4015e2:	4b09      	ldr	r3, [pc, #36]	; (401608 <system_init_flash+0x64>)
  4015e4:	601a      	str	r2, [r3, #0]
  4015e6:	4770      	bx	lr
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  4015e8:	4a0a      	ldr	r2, [pc, #40]	; (401614 <system_init_flash+0x70>)
  4015ea:	4b07      	ldr	r3, [pc, #28]	; (401608 <system_init_flash+0x64>)
  4015ec:	601a      	str	r2, [r3, #0]
  4015ee:	4770      	bx	lr
  4015f0:	01312cff 	.word	0x01312cff
  4015f4:	026259ff 	.word	0x026259ff
  4015f8:	039386ff 	.word	0x039386ff
  4015fc:	04c4b3ff 	.word	0x04c4b3ff
  401600:	05f5e0ff 	.word	0x05f5e0ff
  401604:	04000500 	.word	0x04000500
  401608:	400e0a00 	.word	0x400e0a00
  40160c:	04000100 	.word	0x04000100
  401610:	04000200 	.word	0x04000200
  401614:	04000300 	.word	0x04000300

00401618 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  401618:	4b0a      	ldr	r3, [pc, #40]	; (401644 <_sbrk+0x2c>)
  40161a:	681b      	ldr	r3, [r3, #0]
  40161c:	b153      	cbz	r3, 401634 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  40161e:	4b09      	ldr	r3, [pc, #36]	; (401644 <_sbrk+0x2c>)
  401620:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  401622:	181a      	adds	r2, r3, r0
  401624:	4908      	ldr	r1, [pc, #32]	; (401648 <_sbrk+0x30>)
  401626:	4291      	cmp	r1, r2
  401628:	db08      	blt.n	40163c <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  40162a:	4610      	mov	r0, r2
  40162c:	4a05      	ldr	r2, [pc, #20]	; (401644 <_sbrk+0x2c>)
  40162e:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  401630:	4618      	mov	r0, r3
  401632:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  401634:	4a05      	ldr	r2, [pc, #20]	; (40164c <_sbrk+0x34>)
  401636:	4b03      	ldr	r3, [pc, #12]	; (401644 <_sbrk+0x2c>)
  401638:	601a      	str	r2, [r3, #0]
  40163a:	e7f0      	b.n	40161e <_sbrk+0x6>
		return (caddr_t) -1;	
  40163c:	f04f 30ff 	mov.w	r0, #4294967295
}
  401640:	4770      	bx	lr
  401642:	bf00      	nop
  401644:	20000a70 	.word	0x20000a70
  401648:	2001fffc 	.word	0x2001fffc
  40164c:	20003ec8 	.word	0x20003ec8

00401650 <main>:
#include <timer_interface.h>
#include <wifi.h>
#include <camera.h>

int main (void)
{
  401650:	b508      	push	{r3, lr}
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  401652:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  401656:	4b2b      	ldr	r3, [pc, #172]	; (401704 <main+0xb4>)
  401658:	631a      	str	r2, [r3, #48]	; 0x30
	// Initializing every required component of the device -------------------------------------------------
	//
	
	ioport_set_pin_level(WIFI_RST_PIN_NUM, HIGH); // Enable the ESP32 to 'run'
	// System init
	sysclk_init();
  40165a:	4b2b      	ldr	r3, [pc, #172]	; (401708 <main+0xb8>)
  40165c:	4798      	blx	r3
	wdt_disable(WDT);
  40165e:	482b      	ldr	r0, [pc, #172]	; (40170c <main+0xbc>)
  401660:	4b2b      	ldr	r3, [pc, #172]	; (401710 <main+0xc0>)
  401662:	4798      	blx	r3
	board_init();
  401664:	4b2b      	ldr	r3, [pc, #172]	; (401714 <main+0xc4>)
  401666:	4798      	blx	r3
  401668:	200b      	movs	r0, #11
  40166a:	4c2b      	ldr	r4, [pc, #172]	; (401718 <main+0xc8>)
  40166c:	47a0      	blx	r4
  40166e:	200c      	movs	r0, #12
  401670:	47a0      	blx	r4
	ioport_init();
	// Timeout timer init
	configure_tc();
  401672:	4b2a      	ldr	r3, [pc, #168]	; (40171c <main+0xcc>)
  401674:	4798      	blx	r3
	// Wifi init
	configure_wifi_comm_pin();
  401676:	4b2a      	ldr	r3, [pc, #168]	; (401720 <main+0xd0>)
  401678:	4798      	blx	r3
	configure_usart_wifi();
  40167a:	4b2a      	ldr	r3, [pc, #168]	; (401724 <main+0xd4>)
  40167c:	4798      	blx	r3
	configure_spi();
  40167e:	4b2a      	ldr	r3, [pc, #168]	; (401728 <main+0xd8>)
  401680:	4798      	blx	r3
	spi_peripheral_initialize();
  401682:	4b2a      	ldr	r3, [pc, #168]	; (40172c <main+0xdc>)
  401684:	4798      	blx	r3
	configure_wifi_provision_pin();
  401686:	4b2a      	ldr	r3, [pc, #168]	; (401730 <main+0xe0>)
  401688:	4798      	blx	r3
	// Cam init
	init_camera();
  40168a:	4b2a      	ldr	r3, [pc, #168]	; (401734 <main+0xe4>)
  40168c:	4798      	blx	r3
	configure_camera();
  40168e:	4b2a      	ldr	r3, [pc, #168]	; (401738 <main+0xe8>)
  401690:	4798      	blx	r3
	// testing write_wifi_command to ESP32 w/ ver
	write_wifi_command("ver\r\n", 5);
  401692:	2105      	movs	r1, #5
  401694:	4829      	ldr	r0, [pc, #164]	; (40173c <main+0xec>)
  401696:	4c2a      	ldr	r4, [pc, #168]	; (401740 <main+0xf0>)
  401698:	47a0      	blx	r4
	// configuring the wifi module
	// configuring the indicators
	write_wifi_command("set wlan_gpio 25\r\n", 5);
  40169a:	2105      	movs	r1, #5
  40169c:	4829      	ldr	r0, [pc, #164]	; (401744 <main+0xf4>)
  40169e:	47a0      	blx	r4
	write_wifi_command("set websocket_gpio 26\r\n", 5);
  4016a0:	2105      	movs	r1, #5
  4016a2:	4829      	ldr	r0, [pc, #164]	; (401748 <main+0xf8>)
  4016a4:	47a0      	blx	r4
	write_wifi_command("set ap_gpio 27\r\n", 5);
  4016a6:	2105      	movs	r1, #5
  4016a8:	4828      	ldr	r0, [pc, #160]	; (40174c <main+0xfc>)
  4016aa:	47a0      	blx	r4
	// configuring the command complete GPIO
	write_wifi_command("set comm_gpio 21\r\n", 5);
  4016ac:	2105      	movs	r1, #5
  4016ae:	4828      	ldr	r0, [pc, #160]	; (401750 <main+0x100>)
  4016b0:	47a0      	blx	r4
	// configuring the websocket clients GPIO
	write_wifi_command("set clients_gpio 22\r\n", 5);
  4016b2:	2105      	movs	r1, #5
  4016b4:	4827      	ldr	r0, [pc, #156]	; (401754 <main+0x104>)
  4016b6:	47a0      	blx	r4
	// configuring the network GPIO
	write_wifi_command("set net_gpio 23\r\n", 5);
  4016b8:	2105      	movs	r1, #5
  4016ba:	4827      	ldr	r0, [pc, #156]	; (401758 <main+0x108>)
  4016bc:	47a0      	blx	r4
	// set SPI baud rate
	write_wifi_command("set spi_baud 100000\r\n", 5);
  4016be:	2105      	movs	r1, #5
  4016c0:	4826      	ldr	r0, [pc, #152]	; (40175c <main+0x10c>)
  4016c2:	47a0      	blx	r4
	
	while (1){
		if (provision_flag){
  4016c4:	4d26      	ldr	r5, [pc, #152]	; (401760 <main+0x110>)
	}
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
  4016c6:	4c0f      	ldr	r4, [pc, #60]	; (401704 <main+0xb4>)
		
		if (!ioport_get_pin_level(CLIENTS_GPIO_PIN_NUM)){
			continue;
		}
		
		if (start_capture()){
  4016c8:	4e26      	ldr	r6, [pc, #152]	; (401764 <main+0x114>)
  4016ca:	e007      	b.n	4016dc <main+0x8c>
  4016cc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
		if (!ioport_get_pin_level(NET_GPIO_PIN_NUM)){
  4016ce:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
  4016d2:	d003      	beq.n	4016dc <main+0x8c>
  4016d4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
		if (!ioport_get_pin_level(CLIENTS_GPIO_PIN_NUM)){
  4016d6:	f413 7f80 	tst.w	r3, #256	; 0x100
  4016da:	d10d      	bne.n	4016f8 <main+0xa8>
		if (provision_flag){
  4016dc:	782b      	ldrb	r3, [r5, #0]
  4016de:	2b00      	cmp	r3, #0
  4016e0:	d0f4      	beq.n	4016cc <main+0x7c>
			write_wifi_command("provision\r\n", 10);
  4016e2:	210a      	movs	r1, #10
  4016e4:	4820      	ldr	r0, [pc, #128]	; (401768 <main+0x118>)
  4016e6:	4b16      	ldr	r3, [pc, #88]	; (401740 <main+0xf0>)
  4016e8:	4798      	blx	r3
			provision_flag = false;
  4016ea:	2300      	movs	r3, #0
  4016ec:	702b      	strb	r3, [r5, #0]
  4016ee:	6be3      	ldr	r3, [r4, #60]	; 0x3c
			while (!ioport_get_pin_level(NET_GPIO_PIN_NUM)){
  4016f0:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
  4016f4:	d0fb      	beq.n	4016ee <main+0x9e>
  4016f6:	e7f1      	b.n	4016dc <main+0x8c>
		if (start_capture()){
  4016f8:	47b0      	blx	r6
  4016fa:	2800      	cmp	r0, #0
  4016fc:	d0ee      	beq.n	4016dc <main+0x8c>
			write_image_to_web();
  4016fe:	4b1b      	ldr	r3, [pc, #108]	; (40176c <main+0x11c>)
  401700:	4798      	blx	r3
  401702:	e7eb      	b.n	4016dc <main+0x8c>
  401704:	400e0e00 	.word	0x400e0e00
  401708:	00400139 	.word	0x00400139
  40170c:	400e1450 	.word	0x400e1450
  401710:	00400b45 	.word	0x00400b45
  401714:	004013e5 	.word	0x004013e5
  401718:	00400649 	.word	0x00400649
  40171c:	00401079 	.word	0x00401079
  401720:	004011f5 	.word	0x004011f5
  401724:	00401159 	.word	0x00401159
  401728:	0040129d 	.word	0x0040129d
  40172c:	004012e9 	.word	0x004012e9
  401730:	00401241 	.word	0x00401241
  401734:	00400cc5 	.word	0x00400cc5
  401738:	00400c9d 	.word	0x00400c9d
  40173c:	004072c0 	.word	0x004072c0
  401740:	00401369 	.word	0x00401369
  401744:	004072c8 	.word	0x004072c8
  401748:	004072dc 	.word	0x004072dc
  40174c:	004072f4 	.word	0x004072f4
  401750:	00407308 	.word	0x00407308
  401754:	0040731c 	.word	0x0040731c
  401758:	00407334 	.word	0x00407334
  40175c:	00407348 	.word	0x00407348
  401760:	20000a5c 	.word	0x20000a5c
  401764:	00400d79 	.word	0x00400d79
  401768:	00407360 	.word	0x00407360
  40176c:	004013a5 	.word	0x004013a5

00401770 <__libc_init_array>:
  401770:	b570      	push	{r4, r5, r6, lr}
  401772:	4e0f      	ldr	r6, [pc, #60]	; (4017b0 <__libc_init_array+0x40>)
  401774:	4d0f      	ldr	r5, [pc, #60]	; (4017b4 <__libc_init_array+0x44>)
  401776:	1b76      	subs	r6, r6, r5
  401778:	10b6      	asrs	r6, r6, #2
  40177a:	bf18      	it	ne
  40177c:	2400      	movne	r4, #0
  40177e:	d005      	beq.n	40178c <__libc_init_array+0x1c>
  401780:	3401      	adds	r4, #1
  401782:	f855 3b04 	ldr.w	r3, [r5], #4
  401786:	4798      	blx	r3
  401788:	42a6      	cmp	r6, r4
  40178a:	d1f9      	bne.n	401780 <__libc_init_array+0x10>
  40178c:	4e0a      	ldr	r6, [pc, #40]	; (4017b8 <__libc_init_array+0x48>)
  40178e:	4d0b      	ldr	r5, [pc, #44]	; (4017bc <__libc_init_array+0x4c>)
  401790:	1b76      	subs	r6, r6, r5
  401792:	f005 ff31 	bl	4075f8 <_init>
  401796:	10b6      	asrs	r6, r6, #2
  401798:	bf18      	it	ne
  40179a:	2400      	movne	r4, #0
  40179c:	d006      	beq.n	4017ac <__libc_init_array+0x3c>
  40179e:	3401      	adds	r4, #1
  4017a0:	f855 3b04 	ldr.w	r3, [r5], #4
  4017a4:	4798      	blx	r3
  4017a6:	42a6      	cmp	r6, r4
  4017a8:	d1f9      	bne.n	40179e <__libc_init_array+0x2e>
  4017aa:	bd70      	pop	{r4, r5, r6, pc}
  4017ac:	bd70      	pop	{r4, r5, r6, pc}
  4017ae:	bf00      	nop
  4017b0:	00407604 	.word	0x00407604
  4017b4:	00407604 	.word	0x00407604
  4017b8:	0040760c 	.word	0x0040760c
  4017bc:	00407604 	.word	0x00407604

004017c0 <memset>:
  4017c0:	b470      	push	{r4, r5, r6}
  4017c2:	0786      	lsls	r6, r0, #30
  4017c4:	d046      	beq.n	401854 <memset+0x94>
  4017c6:	1e54      	subs	r4, r2, #1
  4017c8:	2a00      	cmp	r2, #0
  4017ca:	d041      	beq.n	401850 <memset+0x90>
  4017cc:	b2ca      	uxtb	r2, r1
  4017ce:	4603      	mov	r3, r0
  4017d0:	e002      	b.n	4017d8 <memset+0x18>
  4017d2:	f114 34ff 	adds.w	r4, r4, #4294967295
  4017d6:	d33b      	bcc.n	401850 <memset+0x90>
  4017d8:	f803 2b01 	strb.w	r2, [r3], #1
  4017dc:	079d      	lsls	r5, r3, #30
  4017de:	d1f8      	bne.n	4017d2 <memset+0x12>
  4017e0:	2c03      	cmp	r4, #3
  4017e2:	d92e      	bls.n	401842 <memset+0x82>
  4017e4:	b2cd      	uxtb	r5, r1
  4017e6:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  4017ea:	2c0f      	cmp	r4, #15
  4017ec:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  4017f0:	d919      	bls.n	401826 <memset+0x66>
  4017f2:	f103 0210 	add.w	r2, r3, #16
  4017f6:	4626      	mov	r6, r4
  4017f8:	3e10      	subs	r6, #16
  4017fa:	2e0f      	cmp	r6, #15
  4017fc:	f842 5c10 	str.w	r5, [r2, #-16]
  401800:	f842 5c0c 	str.w	r5, [r2, #-12]
  401804:	f842 5c08 	str.w	r5, [r2, #-8]
  401808:	f842 5c04 	str.w	r5, [r2, #-4]
  40180c:	f102 0210 	add.w	r2, r2, #16
  401810:	d8f2      	bhi.n	4017f8 <memset+0x38>
  401812:	f1a4 0210 	sub.w	r2, r4, #16
  401816:	f022 020f 	bic.w	r2, r2, #15
  40181a:	f004 040f 	and.w	r4, r4, #15
  40181e:	3210      	adds	r2, #16
  401820:	2c03      	cmp	r4, #3
  401822:	4413      	add	r3, r2
  401824:	d90d      	bls.n	401842 <memset+0x82>
  401826:	461e      	mov	r6, r3
  401828:	4622      	mov	r2, r4
  40182a:	3a04      	subs	r2, #4
  40182c:	2a03      	cmp	r2, #3
  40182e:	f846 5b04 	str.w	r5, [r6], #4
  401832:	d8fa      	bhi.n	40182a <memset+0x6a>
  401834:	1f22      	subs	r2, r4, #4
  401836:	f022 0203 	bic.w	r2, r2, #3
  40183a:	3204      	adds	r2, #4
  40183c:	4413      	add	r3, r2
  40183e:	f004 0403 	and.w	r4, r4, #3
  401842:	b12c      	cbz	r4, 401850 <memset+0x90>
  401844:	b2c9      	uxtb	r1, r1
  401846:	441c      	add	r4, r3
  401848:	f803 1b01 	strb.w	r1, [r3], #1
  40184c:	429c      	cmp	r4, r3
  40184e:	d1fb      	bne.n	401848 <memset+0x88>
  401850:	bc70      	pop	{r4, r5, r6}
  401852:	4770      	bx	lr
  401854:	4614      	mov	r4, r2
  401856:	4603      	mov	r3, r0
  401858:	e7c2      	b.n	4017e0 <memset+0x20>
  40185a:	bf00      	nop

0040185c <sprintf>:
  40185c:	b40e      	push	{r1, r2, r3}
  40185e:	b5f0      	push	{r4, r5, r6, r7, lr}
  401860:	b09c      	sub	sp, #112	; 0x70
  401862:	ab21      	add	r3, sp, #132	; 0x84
  401864:	490f      	ldr	r1, [pc, #60]	; (4018a4 <sprintf+0x48>)
  401866:	f853 2b04 	ldr.w	r2, [r3], #4
  40186a:	9301      	str	r3, [sp, #4]
  40186c:	4605      	mov	r5, r0
  40186e:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  401872:	6808      	ldr	r0, [r1, #0]
  401874:	9502      	str	r5, [sp, #8]
  401876:	f44f 7702 	mov.w	r7, #520	; 0x208
  40187a:	f64f 76ff 	movw	r6, #65535	; 0xffff
  40187e:	a902      	add	r1, sp, #8
  401880:	9506      	str	r5, [sp, #24]
  401882:	f8ad 7014 	strh.w	r7, [sp, #20]
  401886:	9404      	str	r4, [sp, #16]
  401888:	9407      	str	r4, [sp, #28]
  40188a:	f8ad 6016 	strh.w	r6, [sp, #22]
  40188e:	f000 fa6f 	bl	401d70 <_svfprintf_r>
  401892:	9b02      	ldr	r3, [sp, #8]
  401894:	2200      	movs	r2, #0
  401896:	701a      	strb	r2, [r3, #0]
  401898:	b01c      	add	sp, #112	; 0x70
  40189a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  40189e:	b003      	add	sp, #12
  4018a0:	4770      	bx	lr
  4018a2:	bf00      	nop
  4018a4:	20000010 	.word	0x20000010

004018a8 <critical_factorization>:
  4018a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4018ac:	f04f 0e01 	mov.w	lr, #1
  4018b0:	4674      	mov	r4, lr
  4018b2:	2500      	movs	r5, #0
  4018b4:	f04f 36ff 	mov.w	r6, #4294967295
  4018b8:	192b      	adds	r3, r5, r4
  4018ba:	428b      	cmp	r3, r1
  4018bc:	eb00 0706 	add.w	r7, r0, r6
  4018c0:	d20d      	bcs.n	4018de <critical_factorization+0x36>
  4018c2:	5d3f      	ldrb	r7, [r7, r4]
  4018c4:	f810 c003 	ldrb.w	ip, [r0, r3]
  4018c8:	45bc      	cmp	ip, r7
  4018ca:	d22d      	bcs.n	401928 <critical_factorization+0x80>
  4018cc:	461d      	mov	r5, r3
  4018ce:	2401      	movs	r4, #1
  4018d0:	eba3 0e06 	sub.w	lr, r3, r6
  4018d4:	192b      	adds	r3, r5, r4
  4018d6:	428b      	cmp	r3, r1
  4018d8:	eb00 0706 	add.w	r7, r0, r6
  4018dc:	d3f1      	bcc.n	4018c2 <critical_factorization+0x1a>
  4018de:	f04f 0801 	mov.w	r8, #1
  4018e2:	f8c2 e000 	str.w	lr, [r2]
  4018e6:	4644      	mov	r4, r8
  4018e8:	2500      	movs	r5, #0
  4018ea:	f04f 37ff 	mov.w	r7, #4294967295
  4018ee:	192b      	adds	r3, r5, r4
  4018f0:	4299      	cmp	r1, r3
  4018f2:	eb00 0e07 	add.w	lr, r0, r7
  4018f6:	d90e      	bls.n	401916 <critical_factorization+0x6e>
  4018f8:	f81e e004 	ldrb.w	lr, [lr, r4]
  4018fc:	f810 c003 	ldrb.w	ip, [r0, r3]
  401900:	45f4      	cmp	ip, lr
  401902:	d918      	bls.n	401936 <critical_factorization+0x8e>
  401904:	461d      	mov	r5, r3
  401906:	2401      	movs	r4, #1
  401908:	eba3 0807 	sub.w	r8, r3, r7
  40190c:	192b      	adds	r3, r5, r4
  40190e:	4299      	cmp	r1, r3
  401910:	eb00 0e07 	add.w	lr, r0, r7
  401914:	d8f0      	bhi.n	4018f8 <critical_factorization+0x50>
  401916:	3701      	adds	r7, #1
  401918:	1c70      	adds	r0, r6, #1
  40191a:	4287      	cmp	r7, r0
  40191c:	bf24      	itt	cs
  40191e:	f8c2 8000 	strcs.w	r8, [r2]
  401922:	4638      	movcs	r0, r7
  401924:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401928:	d00c      	beq.n	401944 <critical_factorization+0x9c>
  40192a:	f04f 0e01 	mov.w	lr, #1
  40192e:	462e      	mov	r6, r5
  401930:	4674      	mov	r4, lr
  401932:	4475      	add	r5, lr
  401934:	e7c0      	b.n	4018b8 <critical_factorization+0x10>
  401936:	d00b      	beq.n	401950 <critical_factorization+0xa8>
  401938:	f04f 0801 	mov.w	r8, #1
  40193c:	462f      	mov	r7, r5
  40193e:	4644      	mov	r4, r8
  401940:	4445      	add	r5, r8
  401942:	e7d4      	b.n	4018ee <critical_factorization+0x46>
  401944:	4574      	cmp	r4, lr
  401946:	bf12      	itee	ne
  401948:	3401      	addne	r4, #1
  40194a:	461d      	moveq	r5, r3
  40194c:	2401      	moveq	r4, #1
  40194e:	e7b3      	b.n	4018b8 <critical_factorization+0x10>
  401950:	4544      	cmp	r4, r8
  401952:	bf12      	itee	ne
  401954:	3401      	addne	r4, #1
  401956:	461d      	moveq	r5, r3
  401958:	2401      	moveq	r4, #1
  40195a:	e7c8      	b.n	4018ee <critical_factorization+0x46>

0040195c <two_way_long_needle>:
  40195c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401960:	f2ad 4d14 	subw	sp, sp, #1044	; 0x414
  401964:	4616      	mov	r6, r2
  401966:	4605      	mov	r5, r0
  401968:	468b      	mov	fp, r1
  40196a:	4610      	mov	r0, r2
  40196c:	4619      	mov	r1, r3
  40196e:	aa03      	add	r2, sp, #12
  401970:	461c      	mov	r4, r3
  401972:	f7ff ff99 	bl	4018a8 <critical_factorization>
  401976:	ab03      	add	r3, sp, #12
  401978:	4681      	mov	r9, r0
  40197a:	f20d 420c 	addw	r2, sp, #1036	; 0x40c
  40197e:	f843 4f04 	str.w	r4, [r3, #4]!
  401982:	4293      	cmp	r3, r2
  401984:	d1fb      	bne.n	40197e <two_way_long_needle+0x22>
  401986:	b14c      	cbz	r4, 40199c <two_way_long_needle+0x40>
  401988:	1e63      	subs	r3, r4, #1
  40198a:	1e72      	subs	r2, r6, #1
  40198c:	a804      	add	r0, sp, #16
  40198e:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  401992:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
  401996:	f113 33ff 	adds.w	r3, r3, #4294967295
  40199a:	d2f8      	bcs.n	40198e <two_way_long_needle+0x32>
  40199c:	9903      	ldr	r1, [sp, #12]
  40199e:	464a      	mov	r2, r9
  4019a0:	4431      	add	r1, r6
  4019a2:	4630      	mov	r0, r6
  4019a4:	f002 ff14 	bl	4047d0 <memcmp>
  4019a8:	2800      	cmp	r0, #0
  4019aa:	d16f      	bne.n	401a8c <two_way_long_needle+0x130>
  4019ac:	f109 33ff 	add.w	r3, r9, #4294967295
  4019b0:	9300      	str	r3, [sp, #0]
  4019b2:	18f3      	adds	r3, r6, r3
  4019b4:	4682      	mov	sl, r0
  4019b6:	9301      	str	r3, [sp, #4]
  4019b8:	4623      	mov	r3, r4
  4019ba:	4680      	mov	r8, r0
  4019bc:	4654      	mov	r4, sl
  4019be:	4658      	mov	r0, fp
  4019c0:	469a      	mov	sl, r3
  4019c2:	eb08 070a 	add.w	r7, r8, sl
  4019c6:	1a3a      	subs	r2, r7, r0
  4019c8:	2100      	movs	r1, #0
  4019ca:	4428      	add	r0, r5
  4019cc:	f002 feb0 	bl	404730 <memchr>
  4019d0:	2800      	cmp	r0, #0
  4019d2:	d156      	bne.n	401a82 <two_way_long_needle+0x126>
  4019d4:	2f00      	cmp	r7, #0
  4019d6:	d054      	beq.n	401a82 <two_way_long_needle+0x126>
  4019d8:	19eb      	adds	r3, r5, r7
  4019da:	aa04      	add	r2, sp, #16
  4019dc:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  4019e0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  4019e4:	b14b      	cbz	r3, 4019fa <two_way_long_needle+0x9e>
  4019e6:	b124      	cbz	r4, 4019f2 <two_way_long_needle+0x96>
  4019e8:	9a03      	ldr	r2, [sp, #12]
  4019ea:	4293      	cmp	r3, r2
  4019ec:	d201      	bcs.n	4019f2 <two_way_long_needle+0x96>
  4019ee:	ebaa 0302 	sub.w	r3, sl, r2
  4019f2:	4498      	add	r8, r3
  4019f4:	2400      	movs	r4, #0
  4019f6:	4638      	mov	r0, r7
  4019f8:	e7e3      	b.n	4019c2 <two_way_long_needle+0x66>
  4019fa:	454c      	cmp	r4, r9
  4019fc:	4623      	mov	r3, r4
  4019fe:	f10a 3eff 	add.w	lr, sl, #4294967295
  401a02:	bf38      	it	cc
  401a04:	464b      	movcc	r3, r9
  401a06:	4573      	cmp	r3, lr
  401a08:	d213      	bcs.n	401a32 <two_way_long_needle+0xd6>
  401a0a:	eb08 0203 	add.w	r2, r8, r3
  401a0e:	f816 c003 	ldrb.w	ip, [r6, r3]
  401a12:	5ca8      	ldrb	r0, [r5, r2]
  401a14:	4584      	cmp	ip, r0
  401a16:	442a      	add	r2, r5
  401a18:	eb06 0103 	add.w	r1, r6, r3
  401a1c:	d006      	beq.n	401a2c <two_way_long_needle+0xd0>
  401a1e:	e02c      	b.n	401a7a <two_way_long_needle+0x11e>
  401a20:	f811 cf01 	ldrb.w	ip, [r1, #1]!
  401a24:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  401a28:	4584      	cmp	ip, r0
  401a2a:	d126      	bne.n	401a7a <two_way_long_needle+0x11e>
  401a2c:	3301      	adds	r3, #1
  401a2e:	4573      	cmp	r3, lr
  401a30:	d3f6      	bcc.n	401a20 <two_way_long_needle+0xc4>
  401a32:	454c      	cmp	r4, r9
  401a34:	9900      	ldr	r1, [sp, #0]
  401a36:	f080 8089 	bcs.w	401b4c <two_way_long_needle+0x1f0>
  401a3a:	9b00      	ldr	r3, [sp, #0]
  401a3c:	eb08 0203 	add.w	r2, r8, r3
  401a40:	9b01      	ldr	r3, [sp, #4]
  401a42:	5ca8      	ldrb	r0, [r5, r2]
  401a44:	781b      	ldrb	r3, [r3, #0]
  401a46:	4298      	cmp	r0, r3
  401a48:	442a      	add	r2, r5
  401a4a:	d17f      	bne.n	401b4c <two_way_long_needle+0x1f0>
  401a4c:	9801      	ldr	r0, [sp, #4]
  401a4e:	f104 3bff 	add.w	fp, r4, #4294967295
  401a52:	e006      	b.n	401a62 <two_way_long_needle+0x106>
  401a54:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  401a58:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  401a5c:	45f4      	cmp	ip, lr
  401a5e:	d103      	bne.n	401a68 <two_way_long_needle+0x10c>
  401a60:	4619      	mov	r1, r3
  401a62:	1e4b      	subs	r3, r1, #1
  401a64:	459b      	cmp	fp, r3
  401a66:	d1f5      	bne.n	401a54 <two_way_long_needle+0xf8>
  401a68:	3401      	adds	r4, #1
  401a6a:	428c      	cmp	r4, r1
  401a6c:	d870      	bhi.n	401b50 <two_way_long_needle+0x1f4>
  401a6e:	9c03      	ldr	r4, [sp, #12]
  401a70:	4638      	mov	r0, r7
  401a72:	44a0      	add	r8, r4
  401a74:	ebaa 0404 	sub.w	r4, sl, r4
  401a78:	e7a3      	b.n	4019c2 <two_way_long_needle+0x66>
  401a7a:	f1c9 0201 	rsb	r2, r9, #1
  401a7e:	4490      	add	r8, r2
  401a80:	e7b7      	b.n	4019f2 <two_way_long_needle+0x96>
  401a82:	2000      	movs	r0, #0
  401a84:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  401a88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401a8c:	eba4 0309 	sub.w	r3, r4, r9
  401a90:	454b      	cmp	r3, r9
  401a92:	bf38      	it	cc
  401a94:	464b      	movcc	r3, r9
  401a96:	3301      	adds	r3, #1
  401a98:	f109 38ff 	add.w	r8, r9, #4294967295
  401a9c:	9303      	str	r3, [sp, #12]
  401a9e:	eb06 0308 	add.w	r3, r6, r8
  401aa2:	4658      	mov	r0, fp
  401aa4:	f04f 0a00 	mov.w	sl, #0
  401aa8:	46cb      	mov	fp, r9
  401aaa:	4699      	mov	r9, r3
  401aac:	eb0a 0704 	add.w	r7, sl, r4
  401ab0:	1a3a      	subs	r2, r7, r0
  401ab2:	2100      	movs	r1, #0
  401ab4:	4428      	add	r0, r5
  401ab6:	f002 fe3b 	bl	404730 <memchr>
  401aba:	2800      	cmp	r0, #0
  401abc:	d1e1      	bne.n	401a82 <two_way_long_needle+0x126>
  401abe:	2f00      	cmp	r7, #0
  401ac0:	d0df      	beq.n	401a82 <two_way_long_needle+0x126>
  401ac2:	19eb      	adds	r3, r5, r7
  401ac4:	aa04      	add	r2, sp, #16
  401ac6:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  401aca:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  401ace:	bba3      	cbnz	r3, 401b3a <two_way_long_needle+0x1de>
  401ad0:	1e61      	subs	r1, r4, #1
  401ad2:	458b      	cmp	fp, r1
  401ad4:	d215      	bcs.n	401b02 <two_way_long_needle+0x1a6>
  401ad6:	eb0a 020b 	add.w	r2, sl, fp
  401ada:	f816 300b 	ldrb.w	r3, [r6, fp]
  401ade:	f815 e002 	ldrb.w	lr, [r5, r2]
  401ae2:	459e      	cmp	lr, r3
  401ae4:	442a      	add	r2, r5
  401ae6:	eb06 000b 	add.w	r0, r6, fp
  401aea:	465b      	mov	r3, fp
  401aec:	d006      	beq.n	401afc <two_way_long_needle+0x1a0>
  401aee:	e027      	b.n	401b40 <two_way_long_needle+0x1e4>
  401af0:	f810 cf01 	ldrb.w	ip, [r0, #1]!
  401af4:	f812 ef01 	ldrb.w	lr, [r2, #1]!
  401af8:	45f4      	cmp	ip, lr
  401afa:	d121      	bne.n	401b40 <two_way_long_needle+0x1e4>
  401afc:	3301      	adds	r3, #1
  401afe:	428b      	cmp	r3, r1
  401b00:	d3f6      	bcc.n	401af0 <two_way_long_needle+0x194>
  401b02:	f1b8 3fff 	cmp.w	r8, #4294967295
  401b06:	d011      	beq.n	401b2c <two_way_long_needle+0x1d0>
  401b08:	eb0a 0208 	add.w	r2, sl, r8
  401b0c:	f899 1000 	ldrb.w	r1, [r9]
  401b10:	5cab      	ldrb	r3, [r5, r2]
  401b12:	4299      	cmp	r1, r3
  401b14:	442a      	add	r2, r5
  401b16:	d10f      	bne.n	401b38 <two_way_long_needle+0x1dc>
  401b18:	464b      	mov	r3, r9
  401b1a:	e005      	b.n	401b28 <two_way_long_needle+0x1cc>
  401b1c:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  401b20:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  401b24:	4288      	cmp	r0, r1
  401b26:	d107      	bne.n	401b38 <two_way_long_needle+0x1dc>
  401b28:	42b3      	cmp	r3, r6
  401b2a:	d1f7      	bne.n	401b1c <two_way_long_needle+0x1c0>
  401b2c:	eb05 000a 	add.w	r0, r5, sl
  401b30:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  401b34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401b38:	9b03      	ldr	r3, [sp, #12]
  401b3a:	449a      	add	sl, r3
  401b3c:	4638      	mov	r0, r7
  401b3e:	e7b5      	b.n	401aac <two_way_long_needle+0x150>
  401b40:	f1cb 0201 	rsb	r2, fp, #1
  401b44:	4492      	add	sl, r2
  401b46:	449a      	add	sl, r3
  401b48:	4638      	mov	r0, r7
  401b4a:	e7af      	b.n	401aac <two_way_long_needle+0x150>
  401b4c:	4649      	mov	r1, r9
  401b4e:	e78b      	b.n	401a68 <two_way_long_needle+0x10c>
  401b50:	eb05 0008 	add.w	r0, r5, r8
  401b54:	e796      	b.n	401a84 <two_way_long_needle+0x128>
  401b56:	bf00      	nop

00401b58 <strstr>:
  401b58:	7802      	ldrb	r2, [r0, #0]
  401b5a:	2a00      	cmp	r2, #0
  401b5c:	f000 8101 	beq.w	401d62 <strstr+0x20a>
  401b60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401b64:	f891 8000 	ldrb.w	r8, [r1]
  401b68:	b085      	sub	sp, #20
  401b6a:	4644      	mov	r4, r8
  401b6c:	f1b8 0f00 	cmp.w	r8, #0
  401b70:	d016      	beq.n	401ba0 <strstr+0x48>
  401b72:	4686      	mov	lr, r0
  401b74:	f101 0c01 	add.w	ip, r1, #1
  401b78:	2701      	movs	r7, #1
  401b7a:	e003      	b.n	401b84 <strstr+0x2c>
  401b7c:	f813 4b01 	ldrb.w	r4, [r3], #1
  401b80:	b16c      	cbz	r4, 401b9e <strstr+0x46>
  401b82:	469c      	mov	ip, r3
  401b84:	42a2      	cmp	r2, r4
  401b86:	bf14      	ite	ne
  401b88:	2700      	movne	r7, #0
  401b8a:	f007 0701 	andeq.w	r7, r7, #1
  401b8e:	f81e 2f01 	ldrb.w	r2, [lr, #1]!
  401b92:	4663      	mov	r3, ip
  401b94:	2a00      	cmp	r2, #0
  401b96:	d1f1      	bne.n	401b7c <strstr+0x24>
  401b98:	f89c 3000 	ldrb.w	r3, [ip]
  401b9c:	b9fb      	cbnz	r3, 401bde <strstr+0x86>
  401b9e:	b117      	cbz	r7, 401ba6 <strstr+0x4e>
  401ba0:	b005      	add	sp, #20
  401ba2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401ba6:	460e      	mov	r6, r1
  401ba8:	4605      	mov	r5, r0
  401baa:	4641      	mov	r1, r8
  401bac:	3001      	adds	r0, #1
  401bae:	ebac 0406 	sub.w	r4, ip, r6
  401bb2:	f003 f9ef 	bl	404f94 <strchr>
  401bb6:	4607      	mov	r7, r0
  401bb8:	b188      	cbz	r0, 401bde <strstr+0x86>
  401bba:	2c01      	cmp	r4, #1
  401bbc:	d0f0      	beq.n	401ba0 <strstr+0x48>
  401bbe:	1928      	adds	r0, r5, r4
  401bc0:	4287      	cmp	r7, r0
  401bc2:	bf94      	ite	ls
  401bc4:	1bc1      	subls	r1, r0, r7
  401bc6:	2101      	movhi	r1, #1
  401bc8:	2c1f      	cmp	r4, #31
  401bca:	468b      	mov	fp, r1
  401bcc:	d90b      	bls.n	401be6 <strstr+0x8e>
  401bce:	4623      	mov	r3, r4
  401bd0:	4632      	mov	r2, r6
  401bd2:	4638      	mov	r0, r7
  401bd4:	f7ff fec2 	bl	40195c <two_way_long_needle>
  401bd8:	b005      	add	sp, #20
  401bda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401bde:	2000      	movs	r0, #0
  401be0:	b005      	add	sp, #20
  401be2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401be6:	aa03      	add	r2, sp, #12
  401be8:	4621      	mov	r1, r4
  401bea:	4630      	mov	r0, r6
  401bec:	f7ff fe5c 	bl	4018a8 <critical_factorization>
  401bf0:	9903      	ldr	r1, [sp, #12]
  401bf2:	4680      	mov	r8, r0
  401bf4:	4602      	mov	r2, r0
  401bf6:	4431      	add	r1, r6
  401bf8:	4630      	mov	r0, r6
  401bfa:	f002 fde9 	bl	4047d0 <memcmp>
  401bfe:	2800      	cmp	r0, #0
  401c00:	d157      	bne.n	401cb2 <strstr+0x15a>
  401c02:	f108 33ff 	add.w	r3, r8, #4294967295
  401c06:	9300      	str	r3, [sp, #0]
  401c08:	18f3      	adds	r3, r6, r3
  401c0a:	4681      	mov	r9, r0
  401c0c:	4605      	mov	r5, r0
  401c0e:	9301      	str	r3, [sp, #4]
  401c10:	4658      	mov	r0, fp
  401c12:	46b2      	mov	sl, r6
  401c14:	1966      	adds	r6, r4, r5
  401c16:	1a32      	subs	r2, r6, r0
  401c18:	2100      	movs	r1, #0
  401c1a:	4438      	add	r0, r7
  401c1c:	f002 fd88 	bl	404730 <memchr>
  401c20:	2800      	cmp	r0, #0
  401c22:	d1dc      	bne.n	401bde <strstr+0x86>
  401c24:	2e00      	cmp	r6, #0
  401c26:	d0da      	beq.n	401bde <strstr+0x86>
  401c28:	45c8      	cmp	r8, r9
  401c2a:	4643      	mov	r3, r8
  401c2c:	bf38      	it	cc
  401c2e:	464b      	movcc	r3, r9
  401c30:	429c      	cmp	r4, r3
  401c32:	d912      	bls.n	401c5a <strstr+0x102>
  401c34:	195a      	adds	r2, r3, r5
  401c36:	f81a 1003 	ldrb.w	r1, [sl, r3]
  401c3a:	5cb8      	ldrb	r0, [r7, r2]
  401c3c:	4281      	cmp	r1, r0
  401c3e:	443a      	add	r2, r7
  401c40:	eb0a 0e03 	add.w	lr, sl, r3
  401c44:	d006      	beq.n	401c54 <strstr+0xfc>
  401c46:	e02c      	b.n	401ca2 <strstr+0x14a>
  401c48:	f81e 0f01 	ldrb.w	r0, [lr, #1]!
  401c4c:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  401c50:	4288      	cmp	r0, r1
  401c52:	d126      	bne.n	401ca2 <strstr+0x14a>
  401c54:	3301      	adds	r3, #1
  401c56:	429c      	cmp	r4, r3
  401c58:	d1f6      	bne.n	401c48 <strstr+0xf0>
  401c5a:	45c8      	cmp	r8, r9
  401c5c:	9900      	ldr	r1, [sp, #0]
  401c5e:	f240 8083 	bls.w	401d68 <strstr+0x210>
  401c62:	9b00      	ldr	r3, [sp, #0]
  401c64:	18ea      	adds	r2, r5, r3
  401c66:	9b01      	ldr	r3, [sp, #4]
  401c68:	5cb8      	ldrb	r0, [r7, r2]
  401c6a:	781b      	ldrb	r3, [r3, #0]
  401c6c:	4298      	cmp	r0, r3
  401c6e:	443a      	add	r2, r7
  401c70:	d17a      	bne.n	401d68 <strstr+0x210>
  401c72:	9801      	ldr	r0, [sp, #4]
  401c74:	f109 3bff 	add.w	fp, r9, #4294967295
  401c78:	e006      	b.n	401c88 <strstr+0x130>
  401c7a:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  401c7e:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  401c82:	45f4      	cmp	ip, lr
  401c84:	d103      	bne.n	401c8e <strstr+0x136>
  401c86:	4619      	mov	r1, r3
  401c88:	1e4b      	subs	r3, r1, #1
  401c8a:	455b      	cmp	r3, fp
  401c8c:	d1f5      	bne.n	401c7a <strstr+0x122>
  401c8e:	f109 0901 	add.w	r9, r9, #1
  401c92:	4589      	cmp	r9, r1
  401c94:	d857      	bhi.n	401d46 <strstr+0x1ee>
  401c96:	9b03      	ldr	r3, [sp, #12]
  401c98:	4630      	mov	r0, r6
  401c9a:	441d      	add	r5, r3
  401c9c:	eba4 0903 	sub.w	r9, r4, r3
  401ca0:	e7b8      	b.n	401c14 <strstr+0xbc>
  401ca2:	f1c8 0201 	rsb	r2, r8, #1
  401ca6:	4415      	add	r5, r2
  401ca8:	441d      	add	r5, r3
  401caa:	f04f 0900 	mov.w	r9, #0
  401cae:	4630      	mov	r0, r6
  401cb0:	e7b0      	b.n	401c14 <strstr+0xbc>
  401cb2:	eba4 0308 	sub.w	r3, r4, r8
  401cb6:	4543      	cmp	r3, r8
  401cb8:	bf38      	it	cc
  401cba:	4643      	movcc	r3, r8
  401cbc:	3301      	adds	r3, #1
  401cbe:	f108 39ff 	add.w	r9, r8, #4294967295
  401cc2:	9303      	str	r3, [sp, #12]
  401cc4:	eb06 0309 	add.w	r3, r6, r9
  401cc8:	4658      	mov	r0, fp
  401cca:	2500      	movs	r5, #0
  401ccc:	46bb      	mov	fp, r7
  401cce:	469a      	mov	sl, r3
  401cd0:	1967      	adds	r7, r4, r5
  401cd2:	1a3a      	subs	r2, r7, r0
  401cd4:	2100      	movs	r1, #0
  401cd6:	4458      	add	r0, fp
  401cd8:	f002 fd2a 	bl	404730 <memchr>
  401cdc:	2800      	cmp	r0, #0
  401cde:	f47f af7e 	bne.w	401bde <strstr+0x86>
  401ce2:	2f00      	cmp	r7, #0
  401ce4:	f43f af7b 	beq.w	401bde <strstr+0x86>
  401ce8:	4544      	cmp	r4, r8
  401cea:	d915      	bls.n	401d18 <strstr+0x1c0>
  401cec:	eb08 0205 	add.w	r2, r8, r5
  401cf0:	f816 3008 	ldrb.w	r3, [r6, r8]
  401cf4:	f81b 0002 	ldrb.w	r0, [fp, r2]
  401cf8:	4298      	cmp	r0, r3
  401cfa:	445a      	add	r2, fp
  401cfc:	eb06 0108 	add.w	r1, r6, r8
  401d00:	4643      	mov	r3, r8
  401d02:	d006      	beq.n	401d12 <strstr+0x1ba>
  401d04:	e023      	b.n	401d4e <strstr+0x1f6>
  401d06:	f811 ef01 	ldrb.w	lr, [r1, #1]!
  401d0a:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  401d0e:	4586      	cmp	lr, r0
  401d10:	d11d      	bne.n	401d4e <strstr+0x1f6>
  401d12:	3301      	adds	r3, #1
  401d14:	429c      	cmp	r4, r3
  401d16:	d1f6      	bne.n	401d06 <strstr+0x1ae>
  401d18:	f1b9 3fff 	cmp.w	r9, #4294967295
  401d1c:	d012      	beq.n	401d44 <strstr+0x1ec>
  401d1e:	eb05 0209 	add.w	r2, r5, r9
  401d22:	f89a 3000 	ldrb.w	r3, [sl]
  401d26:	f81b 1002 	ldrb.w	r1, [fp, r2]
  401d2a:	4299      	cmp	r1, r3
  401d2c:	445a      	add	r2, fp
  401d2e:	d114      	bne.n	401d5a <strstr+0x202>
  401d30:	4653      	mov	r3, sl
  401d32:	e005      	b.n	401d40 <strstr+0x1e8>
  401d34:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  401d38:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  401d3c:	4288      	cmp	r0, r1
  401d3e:	d10c      	bne.n	401d5a <strstr+0x202>
  401d40:	42b3      	cmp	r3, r6
  401d42:	d1f7      	bne.n	401d34 <strstr+0x1dc>
  401d44:	465f      	mov	r7, fp
  401d46:	1978      	adds	r0, r7, r5
  401d48:	b005      	add	sp, #20
  401d4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401d4e:	f1c8 0201 	rsb	r2, r8, #1
  401d52:	4415      	add	r5, r2
  401d54:	441d      	add	r5, r3
  401d56:	4638      	mov	r0, r7
  401d58:	e7ba      	b.n	401cd0 <strstr+0x178>
  401d5a:	9b03      	ldr	r3, [sp, #12]
  401d5c:	4638      	mov	r0, r7
  401d5e:	441d      	add	r5, r3
  401d60:	e7b6      	b.n	401cd0 <strstr+0x178>
  401d62:	780b      	ldrb	r3, [r1, #0]
  401d64:	b913      	cbnz	r3, 401d6c <strstr+0x214>
  401d66:	4770      	bx	lr
  401d68:	4641      	mov	r1, r8
  401d6a:	e790      	b.n	401c8e <strstr+0x136>
  401d6c:	2000      	movs	r0, #0
  401d6e:	4770      	bx	lr

00401d70 <_svfprintf_r>:
  401d70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401d74:	b0c3      	sub	sp, #268	; 0x10c
  401d76:	460c      	mov	r4, r1
  401d78:	910b      	str	r1, [sp, #44]	; 0x2c
  401d7a:	4692      	mov	sl, r2
  401d7c:	930f      	str	r3, [sp, #60]	; 0x3c
  401d7e:	900c      	str	r0, [sp, #48]	; 0x30
  401d80:	f002 fa0e 	bl	4041a0 <_localeconv_r>
  401d84:	6803      	ldr	r3, [r0, #0]
  401d86:	931a      	str	r3, [sp, #104]	; 0x68
  401d88:	4618      	mov	r0, r3
  401d8a:	f003 f979 	bl	405080 <strlen>
  401d8e:	89a3      	ldrh	r3, [r4, #12]
  401d90:	9019      	str	r0, [sp, #100]	; 0x64
  401d92:	0619      	lsls	r1, r3, #24
  401d94:	d503      	bpl.n	401d9e <_svfprintf_r+0x2e>
  401d96:	6923      	ldr	r3, [r4, #16]
  401d98:	2b00      	cmp	r3, #0
  401d9a:	f001 8003 	beq.w	402da4 <_svfprintf_r+0x1034>
  401d9e:	2300      	movs	r3, #0
  401da0:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  401da4:	9313      	str	r3, [sp, #76]	; 0x4c
  401da6:	9315      	str	r3, [sp, #84]	; 0x54
  401da8:	9314      	str	r3, [sp, #80]	; 0x50
  401daa:	9327      	str	r3, [sp, #156]	; 0x9c
  401dac:	9326      	str	r3, [sp, #152]	; 0x98
  401dae:	9318      	str	r3, [sp, #96]	; 0x60
  401db0:	931b      	str	r3, [sp, #108]	; 0x6c
  401db2:	9309      	str	r3, [sp, #36]	; 0x24
  401db4:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  401db8:	46c8      	mov	r8, r9
  401dba:	9316      	str	r3, [sp, #88]	; 0x58
  401dbc:	9317      	str	r3, [sp, #92]	; 0x5c
  401dbe:	f89a 3000 	ldrb.w	r3, [sl]
  401dc2:	4654      	mov	r4, sl
  401dc4:	b1e3      	cbz	r3, 401e00 <_svfprintf_r+0x90>
  401dc6:	2b25      	cmp	r3, #37	; 0x25
  401dc8:	d102      	bne.n	401dd0 <_svfprintf_r+0x60>
  401dca:	e019      	b.n	401e00 <_svfprintf_r+0x90>
  401dcc:	2b25      	cmp	r3, #37	; 0x25
  401dce:	d003      	beq.n	401dd8 <_svfprintf_r+0x68>
  401dd0:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  401dd4:	2b00      	cmp	r3, #0
  401dd6:	d1f9      	bne.n	401dcc <_svfprintf_r+0x5c>
  401dd8:	eba4 050a 	sub.w	r5, r4, sl
  401ddc:	b185      	cbz	r5, 401e00 <_svfprintf_r+0x90>
  401dde:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401de0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  401de2:	f8c8 a000 	str.w	sl, [r8]
  401de6:	3301      	adds	r3, #1
  401de8:	442a      	add	r2, r5
  401dea:	2b07      	cmp	r3, #7
  401dec:	f8c8 5004 	str.w	r5, [r8, #4]
  401df0:	9227      	str	r2, [sp, #156]	; 0x9c
  401df2:	9326      	str	r3, [sp, #152]	; 0x98
  401df4:	dc7f      	bgt.n	401ef6 <_svfprintf_r+0x186>
  401df6:	f108 0808 	add.w	r8, r8, #8
  401dfa:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401dfc:	442b      	add	r3, r5
  401dfe:	9309      	str	r3, [sp, #36]	; 0x24
  401e00:	7823      	ldrb	r3, [r4, #0]
  401e02:	2b00      	cmp	r3, #0
  401e04:	d07f      	beq.n	401f06 <_svfprintf_r+0x196>
  401e06:	2300      	movs	r3, #0
  401e08:	461a      	mov	r2, r3
  401e0a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  401e0e:	4619      	mov	r1, r3
  401e10:	930d      	str	r3, [sp, #52]	; 0x34
  401e12:	469b      	mov	fp, r3
  401e14:	f04f 30ff 	mov.w	r0, #4294967295
  401e18:	7863      	ldrb	r3, [r4, #1]
  401e1a:	900a      	str	r0, [sp, #40]	; 0x28
  401e1c:	f104 0a01 	add.w	sl, r4, #1
  401e20:	f10a 0a01 	add.w	sl, sl, #1
  401e24:	f1a3 0020 	sub.w	r0, r3, #32
  401e28:	2858      	cmp	r0, #88	; 0x58
  401e2a:	f200 83c1 	bhi.w	4025b0 <_svfprintf_r+0x840>
  401e2e:	e8df f010 	tbh	[pc, r0, lsl #1]
  401e32:	0238      	.short	0x0238
  401e34:	03bf03bf 	.word	0x03bf03bf
  401e38:	03bf0240 	.word	0x03bf0240
  401e3c:	03bf03bf 	.word	0x03bf03bf
  401e40:	03bf03bf 	.word	0x03bf03bf
  401e44:	024503bf 	.word	0x024503bf
  401e48:	03bf0203 	.word	0x03bf0203
  401e4c:	026b005d 	.word	0x026b005d
  401e50:	028603bf 	.word	0x028603bf
  401e54:	039d039d 	.word	0x039d039d
  401e58:	039d039d 	.word	0x039d039d
  401e5c:	039d039d 	.word	0x039d039d
  401e60:	039d039d 	.word	0x039d039d
  401e64:	03bf039d 	.word	0x03bf039d
  401e68:	03bf03bf 	.word	0x03bf03bf
  401e6c:	03bf03bf 	.word	0x03bf03bf
  401e70:	03bf03bf 	.word	0x03bf03bf
  401e74:	03bf03bf 	.word	0x03bf03bf
  401e78:	033703bf 	.word	0x033703bf
  401e7c:	03bf0357 	.word	0x03bf0357
  401e80:	03bf0357 	.word	0x03bf0357
  401e84:	03bf03bf 	.word	0x03bf03bf
  401e88:	039803bf 	.word	0x039803bf
  401e8c:	03bf03bf 	.word	0x03bf03bf
  401e90:	03bf03ad 	.word	0x03bf03ad
  401e94:	03bf03bf 	.word	0x03bf03bf
  401e98:	03bf03bf 	.word	0x03bf03bf
  401e9c:	03bf0259 	.word	0x03bf0259
  401ea0:	031e03bf 	.word	0x031e03bf
  401ea4:	03bf03bf 	.word	0x03bf03bf
  401ea8:	03bf03bf 	.word	0x03bf03bf
  401eac:	03bf03bf 	.word	0x03bf03bf
  401eb0:	03bf03bf 	.word	0x03bf03bf
  401eb4:	03bf03bf 	.word	0x03bf03bf
  401eb8:	02db02c6 	.word	0x02db02c6
  401ebc:	03570357 	.word	0x03570357
  401ec0:	028b0357 	.word	0x028b0357
  401ec4:	03bf02db 	.word	0x03bf02db
  401ec8:	029003bf 	.word	0x029003bf
  401ecc:	029d03bf 	.word	0x029d03bf
  401ed0:	02b401cc 	.word	0x02b401cc
  401ed4:	03bf0208 	.word	0x03bf0208
  401ed8:	03bf01e1 	.word	0x03bf01e1
  401edc:	03bf007e 	.word	0x03bf007e
  401ee0:	020d03bf 	.word	0x020d03bf
  401ee4:	980d      	ldr	r0, [sp, #52]	; 0x34
  401ee6:	930f      	str	r3, [sp, #60]	; 0x3c
  401ee8:	4240      	negs	r0, r0
  401eea:	900d      	str	r0, [sp, #52]	; 0x34
  401eec:	f04b 0b04 	orr.w	fp, fp, #4
  401ef0:	f89a 3000 	ldrb.w	r3, [sl]
  401ef4:	e794      	b.n	401e20 <_svfprintf_r+0xb0>
  401ef6:	aa25      	add	r2, sp, #148	; 0x94
  401ef8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401efa:	980c      	ldr	r0, [sp, #48]	; 0x30
  401efc:	f003 f92e 	bl	40515c <__ssprint_r>
  401f00:	b940      	cbnz	r0, 401f14 <_svfprintf_r+0x1a4>
  401f02:	46c8      	mov	r8, r9
  401f04:	e779      	b.n	401dfa <_svfprintf_r+0x8a>
  401f06:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  401f08:	b123      	cbz	r3, 401f14 <_svfprintf_r+0x1a4>
  401f0a:	980c      	ldr	r0, [sp, #48]	; 0x30
  401f0c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401f0e:	aa25      	add	r2, sp, #148	; 0x94
  401f10:	f003 f924 	bl	40515c <__ssprint_r>
  401f14:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401f16:	899b      	ldrh	r3, [r3, #12]
  401f18:	f013 0f40 	tst.w	r3, #64	; 0x40
  401f1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401f1e:	bf18      	it	ne
  401f20:	f04f 33ff 	movne.w	r3, #4294967295
  401f24:	9309      	str	r3, [sp, #36]	; 0x24
  401f26:	9809      	ldr	r0, [sp, #36]	; 0x24
  401f28:	b043      	add	sp, #268	; 0x10c
  401f2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401f2e:	f01b 0f20 	tst.w	fp, #32
  401f32:	9311      	str	r3, [sp, #68]	; 0x44
  401f34:	f040 81dd 	bne.w	4022f2 <_svfprintf_r+0x582>
  401f38:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401f3a:	f01b 0f10 	tst.w	fp, #16
  401f3e:	4613      	mov	r3, r2
  401f40:	f040 856e 	bne.w	402a20 <_svfprintf_r+0xcb0>
  401f44:	f01b 0f40 	tst.w	fp, #64	; 0x40
  401f48:	f000 856a 	beq.w	402a20 <_svfprintf_r+0xcb0>
  401f4c:	8814      	ldrh	r4, [r2, #0]
  401f4e:	3204      	adds	r2, #4
  401f50:	2500      	movs	r5, #0
  401f52:	2301      	movs	r3, #1
  401f54:	920f      	str	r2, [sp, #60]	; 0x3c
  401f56:	2700      	movs	r7, #0
  401f58:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  401f5c:	990a      	ldr	r1, [sp, #40]	; 0x28
  401f5e:	1c4a      	adds	r2, r1, #1
  401f60:	f000 8265 	beq.w	40242e <_svfprintf_r+0x6be>
  401f64:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  401f68:	9207      	str	r2, [sp, #28]
  401f6a:	ea54 0205 	orrs.w	r2, r4, r5
  401f6e:	f040 8264 	bne.w	40243a <_svfprintf_r+0x6ca>
  401f72:	2900      	cmp	r1, #0
  401f74:	f040 843c 	bne.w	4027f0 <_svfprintf_r+0xa80>
  401f78:	2b00      	cmp	r3, #0
  401f7a:	f040 84d7 	bne.w	40292c <_svfprintf_r+0xbbc>
  401f7e:	f01b 0301 	ands.w	r3, fp, #1
  401f82:	930e      	str	r3, [sp, #56]	; 0x38
  401f84:	f000 8604 	beq.w	402b90 <_svfprintf_r+0xe20>
  401f88:	ae42      	add	r6, sp, #264	; 0x108
  401f8a:	2330      	movs	r3, #48	; 0x30
  401f8c:	f806 3d41 	strb.w	r3, [r6, #-65]!
  401f90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401f92:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  401f94:	4293      	cmp	r3, r2
  401f96:	bfb8      	it	lt
  401f98:	4613      	movlt	r3, r2
  401f9a:	9308      	str	r3, [sp, #32]
  401f9c:	2300      	movs	r3, #0
  401f9e:	9312      	str	r3, [sp, #72]	; 0x48
  401fa0:	b117      	cbz	r7, 401fa8 <_svfprintf_r+0x238>
  401fa2:	9b08      	ldr	r3, [sp, #32]
  401fa4:	3301      	adds	r3, #1
  401fa6:	9308      	str	r3, [sp, #32]
  401fa8:	9b07      	ldr	r3, [sp, #28]
  401faa:	f013 0302 	ands.w	r3, r3, #2
  401fae:	9310      	str	r3, [sp, #64]	; 0x40
  401fb0:	d002      	beq.n	401fb8 <_svfprintf_r+0x248>
  401fb2:	9b08      	ldr	r3, [sp, #32]
  401fb4:	3302      	adds	r3, #2
  401fb6:	9308      	str	r3, [sp, #32]
  401fb8:	9b07      	ldr	r3, [sp, #28]
  401fba:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  401fbe:	f040 830e 	bne.w	4025de <_svfprintf_r+0x86e>
  401fc2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  401fc4:	9a08      	ldr	r2, [sp, #32]
  401fc6:	eba3 0b02 	sub.w	fp, r3, r2
  401fca:	f1bb 0f00 	cmp.w	fp, #0
  401fce:	f340 8306 	ble.w	4025de <_svfprintf_r+0x86e>
  401fd2:	f1bb 0f10 	cmp.w	fp, #16
  401fd6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  401fd8:	9a26      	ldr	r2, [sp, #152]	; 0x98
  401fda:	dd29      	ble.n	402030 <_svfprintf_r+0x2c0>
  401fdc:	4643      	mov	r3, r8
  401fde:	4621      	mov	r1, r4
  401fe0:	46a8      	mov	r8, r5
  401fe2:	2710      	movs	r7, #16
  401fe4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  401fe6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  401fe8:	e006      	b.n	401ff8 <_svfprintf_r+0x288>
  401fea:	f1ab 0b10 	sub.w	fp, fp, #16
  401fee:	f1bb 0f10 	cmp.w	fp, #16
  401ff2:	f103 0308 	add.w	r3, r3, #8
  401ff6:	dd18      	ble.n	40202a <_svfprintf_r+0x2ba>
  401ff8:	3201      	adds	r2, #1
  401ffa:	48b7      	ldr	r0, [pc, #732]	; (4022d8 <_svfprintf_r+0x568>)
  401ffc:	9226      	str	r2, [sp, #152]	; 0x98
  401ffe:	3110      	adds	r1, #16
  402000:	2a07      	cmp	r2, #7
  402002:	9127      	str	r1, [sp, #156]	; 0x9c
  402004:	e883 0081 	stmia.w	r3, {r0, r7}
  402008:	ddef      	ble.n	401fea <_svfprintf_r+0x27a>
  40200a:	aa25      	add	r2, sp, #148	; 0x94
  40200c:	4629      	mov	r1, r5
  40200e:	4620      	mov	r0, r4
  402010:	f003 f8a4 	bl	40515c <__ssprint_r>
  402014:	2800      	cmp	r0, #0
  402016:	f47f af7d 	bne.w	401f14 <_svfprintf_r+0x1a4>
  40201a:	f1ab 0b10 	sub.w	fp, fp, #16
  40201e:	f1bb 0f10 	cmp.w	fp, #16
  402022:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402024:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402026:	464b      	mov	r3, r9
  402028:	dce6      	bgt.n	401ff8 <_svfprintf_r+0x288>
  40202a:	4645      	mov	r5, r8
  40202c:	460c      	mov	r4, r1
  40202e:	4698      	mov	r8, r3
  402030:	3201      	adds	r2, #1
  402032:	4ba9      	ldr	r3, [pc, #676]	; (4022d8 <_svfprintf_r+0x568>)
  402034:	9226      	str	r2, [sp, #152]	; 0x98
  402036:	445c      	add	r4, fp
  402038:	2a07      	cmp	r2, #7
  40203a:	9427      	str	r4, [sp, #156]	; 0x9c
  40203c:	e888 0808 	stmia.w	r8, {r3, fp}
  402040:	f300 8498 	bgt.w	402974 <_svfprintf_r+0xc04>
  402044:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402048:	f108 0808 	add.w	r8, r8, #8
  40204c:	b177      	cbz	r7, 40206c <_svfprintf_r+0x2fc>
  40204e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402050:	3301      	adds	r3, #1
  402052:	3401      	adds	r4, #1
  402054:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  402058:	2201      	movs	r2, #1
  40205a:	2b07      	cmp	r3, #7
  40205c:	9427      	str	r4, [sp, #156]	; 0x9c
  40205e:	9326      	str	r3, [sp, #152]	; 0x98
  402060:	e888 0006 	stmia.w	r8, {r1, r2}
  402064:	f300 83db 	bgt.w	40281e <_svfprintf_r+0xaae>
  402068:	f108 0808 	add.w	r8, r8, #8
  40206c:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40206e:	b16b      	cbz	r3, 40208c <_svfprintf_r+0x31c>
  402070:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402072:	3301      	adds	r3, #1
  402074:	3402      	adds	r4, #2
  402076:	a91e      	add	r1, sp, #120	; 0x78
  402078:	2202      	movs	r2, #2
  40207a:	2b07      	cmp	r3, #7
  40207c:	9427      	str	r4, [sp, #156]	; 0x9c
  40207e:	9326      	str	r3, [sp, #152]	; 0x98
  402080:	e888 0006 	stmia.w	r8, {r1, r2}
  402084:	f300 83d6 	bgt.w	402834 <_svfprintf_r+0xac4>
  402088:	f108 0808 	add.w	r8, r8, #8
  40208c:	2d80      	cmp	r5, #128	; 0x80
  40208e:	f000 8315 	beq.w	4026bc <_svfprintf_r+0x94c>
  402092:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402094:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402096:	1a9f      	subs	r7, r3, r2
  402098:	2f00      	cmp	r7, #0
  40209a:	dd36      	ble.n	40210a <_svfprintf_r+0x39a>
  40209c:	2f10      	cmp	r7, #16
  40209e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4020a0:	4d8e      	ldr	r5, [pc, #568]	; (4022dc <_svfprintf_r+0x56c>)
  4020a2:	dd27      	ble.n	4020f4 <_svfprintf_r+0x384>
  4020a4:	4642      	mov	r2, r8
  4020a6:	4621      	mov	r1, r4
  4020a8:	46b0      	mov	r8, r6
  4020aa:	f04f 0b10 	mov.w	fp, #16
  4020ae:	462e      	mov	r6, r5
  4020b0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4020b2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4020b4:	e004      	b.n	4020c0 <_svfprintf_r+0x350>
  4020b6:	3f10      	subs	r7, #16
  4020b8:	2f10      	cmp	r7, #16
  4020ba:	f102 0208 	add.w	r2, r2, #8
  4020be:	dd15      	ble.n	4020ec <_svfprintf_r+0x37c>
  4020c0:	3301      	adds	r3, #1
  4020c2:	3110      	adds	r1, #16
  4020c4:	2b07      	cmp	r3, #7
  4020c6:	9127      	str	r1, [sp, #156]	; 0x9c
  4020c8:	9326      	str	r3, [sp, #152]	; 0x98
  4020ca:	e882 0840 	stmia.w	r2, {r6, fp}
  4020ce:	ddf2      	ble.n	4020b6 <_svfprintf_r+0x346>
  4020d0:	aa25      	add	r2, sp, #148	; 0x94
  4020d2:	4629      	mov	r1, r5
  4020d4:	4620      	mov	r0, r4
  4020d6:	f003 f841 	bl	40515c <__ssprint_r>
  4020da:	2800      	cmp	r0, #0
  4020dc:	f47f af1a 	bne.w	401f14 <_svfprintf_r+0x1a4>
  4020e0:	3f10      	subs	r7, #16
  4020e2:	2f10      	cmp	r7, #16
  4020e4:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4020e6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4020e8:	464a      	mov	r2, r9
  4020ea:	dce9      	bgt.n	4020c0 <_svfprintf_r+0x350>
  4020ec:	4635      	mov	r5, r6
  4020ee:	460c      	mov	r4, r1
  4020f0:	4646      	mov	r6, r8
  4020f2:	4690      	mov	r8, r2
  4020f4:	3301      	adds	r3, #1
  4020f6:	443c      	add	r4, r7
  4020f8:	2b07      	cmp	r3, #7
  4020fa:	9427      	str	r4, [sp, #156]	; 0x9c
  4020fc:	9326      	str	r3, [sp, #152]	; 0x98
  4020fe:	e888 00a0 	stmia.w	r8, {r5, r7}
  402102:	f300 8381 	bgt.w	402808 <_svfprintf_r+0xa98>
  402106:	f108 0808 	add.w	r8, r8, #8
  40210a:	9b07      	ldr	r3, [sp, #28]
  40210c:	05df      	lsls	r7, r3, #23
  40210e:	f100 8268 	bmi.w	4025e2 <_svfprintf_r+0x872>
  402112:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402114:	990e      	ldr	r1, [sp, #56]	; 0x38
  402116:	f8c8 6000 	str.w	r6, [r8]
  40211a:	3301      	adds	r3, #1
  40211c:	440c      	add	r4, r1
  40211e:	2b07      	cmp	r3, #7
  402120:	9427      	str	r4, [sp, #156]	; 0x9c
  402122:	f8c8 1004 	str.w	r1, [r8, #4]
  402126:	9326      	str	r3, [sp, #152]	; 0x98
  402128:	f300 834d 	bgt.w	4027c6 <_svfprintf_r+0xa56>
  40212c:	f108 0808 	add.w	r8, r8, #8
  402130:	9b07      	ldr	r3, [sp, #28]
  402132:	075b      	lsls	r3, r3, #29
  402134:	d53a      	bpl.n	4021ac <_svfprintf_r+0x43c>
  402136:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402138:	9a08      	ldr	r2, [sp, #32]
  40213a:	1a9d      	subs	r5, r3, r2
  40213c:	2d00      	cmp	r5, #0
  40213e:	dd35      	ble.n	4021ac <_svfprintf_r+0x43c>
  402140:	2d10      	cmp	r5, #16
  402142:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402144:	dd20      	ble.n	402188 <_svfprintf_r+0x418>
  402146:	2610      	movs	r6, #16
  402148:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40214a:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  40214e:	e004      	b.n	40215a <_svfprintf_r+0x3ea>
  402150:	3d10      	subs	r5, #16
  402152:	2d10      	cmp	r5, #16
  402154:	f108 0808 	add.w	r8, r8, #8
  402158:	dd16      	ble.n	402188 <_svfprintf_r+0x418>
  40215a:	3301      	adds	r3, #1
  40215c:	4a5e      	ldr	r2, [pc, #376]	; (4022d8 <_svfprintf_r+0x568>)
  40215e:	9326      	str	r3, [sp, #152]	; 0x98
  402160:	3410      	adds	r4, #16
  402162:	2b07      	cmp	r3, #7
  402164:	9427      	str	r4, [sp, #156]	; 0x9c
  402166:	e888 0044 	stmia.w	r8, {r2, r6}
  40216a:	ddf1      	ble.n	402150 <_svfprintf_r+0x3e0>
  40216c:	aa25      	add	r2, sp, #148	; 0x94
  40216e:	4659      	mov	r1, fp
  402170:	4638      	mov	r0, r7
  402172:	f002 fff3 	bl	40515c <__ssprint_r>
  402176:	2800      	cmp	r0, #0
  402178:	f47f aecc 	bne.w	401f14 <_svfprintf_r+0x1a4>
  40217c:	3d10      	subs	r5, #16
  40217e:	2d10      	cmp	r5, #16
  402180:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402182:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402184:	46c8      	mov	r8, r9
  402186:	dce8      	bgt.n	40215a <_svfprintf_r+0x3ea>
  402188:	3301      	adds	r3, #1
  40218a:	4a53      	ldr	r2, [pc, #332]	; (4022d8 <_svfprintf_r+0x568>)
  40218c:	9326      	str	r3, [sp, #152]	; 0x98
  40218e:	442c      	add	r4, r5
  402190:	2b07      	cmp	r3, #7
  402192:	9427      	str	r4, [sp, #156]	; 0x9c
  402194:	e888 0024 	stmia.w	r8, {r2, r5}
  402198:	dd08      	ble.n	4021ac <_svfprintf_r+0x43c>
  40219a:	aa25      	add	r2, sp, #148	; 0x94
  40219c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40219e:	980c      	ldr	r0, [sp, #48]	; 0x30
  4021a0:	f002 ffdc 	bl	40515c <__ssprint_r>
  4021a4:	2800      	cmp	r0, #0
  4021a6:	f47f aeb5 	bne.w	401f14 <_svfprintf_r+0x1a4>
  4021aa:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4021ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4021ae:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4021b0:	9908      	ldr	r1, [sp, #32]
  4021b2:	428a      	cmp	r2, r1
  4021b4:	bfac      	ite	ge
  4021b6:	189b      	addge	r3, r3, r2
  4021b8:	185b      	addlt	r3, r3, r1
  4021ba:	9309      	str	r3, [sp, #36]	; 0x24
  4021bc:	2c00      	cmp	r4, #0
  4021be:	f040 830d 	bne.w	4027dc <_svfprintf_r+0xa6c>
  4021c2:	2300      	movs	r3, #0
  4021c4:	9326      	str	r3, [sp, #152]	; 0x98
  4021c6:	46c8      	mov	r8, r9
  4021c8:	e5f9      	b.n	401dbe <_svfprintf_r+0x4e>
  4021ca:	9311      	str	r3, [sp, #68]	; 0x44
  4021cc:	f01b 0320 	ands.w	r3, fp, #32
  4021d0:	f040 81e3 	bne.w	40259a <_svfprintf_r+0x82a>
  4021d4:	f01b 0210 	ands.w	r2, fp, #16
  4021d8:	f040 842e 	bne.w	402a38 <_svfprintf_r+0xcc8>
  4021dc:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  4021e0:	f000 842a 	beq.w	402a38 <_svfprintf_r+0xcc8>
  4021e4:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4021e6:	4613      	mov	r3, r2
  4021e8:	460a      	mov	r2, r1
  4021ea:	3204      	adds	r2, #4
  4021ec:	880c      	ldrh	r4, [r1, #0]
  4021ee:	920f      	str	r2, [sp, #60]	; 0x3c
  4021f0:	2500      	movs	r5, #0
  4021f2:	e6b0      	b.n	401f56 <_svfprintf_r+0x1e6>
  4021f4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4021f6:	9311      	str	r3, [sp, #68]	; 0x44
  4021f8:	6816      	ldr	r6, [r2, #0]
  4021fa:	2400      	movs	r4, #0
  4021fc:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  402200:	1d15      	adds	r5, r2, #4
  402202:	2e00      	cmp	r6, #0
  402204:	f000 86a7 	beq.w	402f56 <_svfprintf_r+0x11e6>
  402208:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40220a:	1c53      	adds	r3, r2, #1
  40220c:	f000 8609 	beq.w	402e22 <_svfprintf_r+0x10b2>
  402210:	4621      	mov	r1, r4
  402212:	4630      	mov	r0, r6
  402214:	f002 fa8c 	bl	404730 <memchr>
  402218:	2800      	cmp	r0, #0
  40221a:	f000 86e1 	beq.w	402fe0 <_svfprintf_r+0x1270>
  40221e:	1b83      	subs	r3, r0, r6
  402220:	930e      	str	r3, [sp, #56]	; 0x38
  402222:	940a      	str	r4, [sp, #40]	; 0x28
  402224:	950f      	str	r5, [sp, #60]	; 0x3c
  402226:	f8cd b01c 	str.w	fp, [sp, #28]
  40222a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40222e:	9308      	str	r3, [sp, #32]
  402230:	9412      	str	r4, [sp, #72]	; 0x48
  402232:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402236:	e6b3      	b.n	401fa0 <_svfprintf_r+0x230>
  402238:	f89a 3000 	ldrb.w	r3, [sl]
  40223c:	2201      	movs	r2, #1
  40223e:	212b      	movs	r1, #43	; 0x2b
  402240:	e5ee      	b.n	401e20 <_svfprintf_r+0xb0>
  402242:	f04b 0b20 	orr.w	fp, fp, #32
  402246:	f89a 3000 	ldrb.w	r3, [sl]
  40224a:	e5e9      	b.n	401e20 <_svfprintf_r+0xb0>
  40224c:	9311      	str	r3, [sp, #68]	; 0x44
  40224e:	2a00      	cmp	r2, #0
  402250:	f040 8795 	bne.w	40317e <_svfprintf_r+0x140e>
  402254:	4b22      	ldr	r3, [pc, #136]	; (4022e0 <_svfprintf_r+0x570>)
  402256:	9318      	str	r3, [sp, #96]	; 0x60
  402258:	f01b 0f20 	tst.w	fp, #32
  40225c:	f040 8111 	bne.w	402482 <_svfprintf_r+0x712>
  402260:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402262:	f01b 0f10 	tst.w	fp, #16
  402266:	4613      	mov	r3, r2
  402268:	f040 83e1 	bne.w	402a2e <_svfprintf_r+0xcbe>
  40226c:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402270:	f000 83dd 	beq.w	402a2e <_svfprintf_r+0xcbe>
  402274:	3304      	adds	r3, #4
  402276:	8814      	ldrh	r4, [r2, #0]
  402278:	930f      	str	r3, [sp, #60]	; 0x3c
  40227a:	2500      	movs	r5, #0
  40227c:	f01b 0f01 	tst.w	fp, #1
  402280:	f000 810c 	beq.w	40249c <_svfprintf_r+0x72c>
  402284:	ea54 0305 	orrs.w	r3, r4, r5
  402288:	f000 8108 	beq.w	40249c <_svfprintf_r+0x72c>
  40228c:	2330      	movs	r3, #48	; 0x30
  40228e:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  402292:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  402296:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  40229a:	f04b 0b02 	orr.w	fp, fp, #2
  40229e:	2302      	movs	r3, #2
  4022a0:	e659      	b.n	401f56 <_svfprintf_r+0x1e6>
  4022a2:	f89a 3000 	ldrb.w	r3, [sl]
  4022a6:	2900      	cmp	r1, #0
  4022a8:	f47f adba 	bne.w	401e20 <_svfprintf_r+0xb0>
  4022ac:	2201      	movs	r2, #1
  4022ae:	2120      	movs	r1, #32
  4022b0:	e5b6      	b.n	401e20 <_svfprintf_r+0xb0>
  4022b2:	f04b 0b01 	orr.w	fp, fp, #1
  4022b6:	f89a 3000 	ldrb.w	r3, [sl]
  4022ba:	e5b1      	b.n	401e20 <_svfprintf_r+0xb0>
  4022bc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  4022be:	6823      	ldr	r3, [r4, #0]
  4022c0:	930d      	str	r3, [sp, #52]	; 0x34
  4022c2:	4618      	mov	r0, r3
  4022c4:	2800      	cmp	r0, #0
  4022c6:	4623      	mov	r3, r4
  4022c8:	f103 0304 	add.w	r3, r3, #4
  4022cc:	f6ff ae0a 	blt.w	401ee4 <_svfprintf_r+0x174>
  4022d0:	930f      	str	r3, [sp, #60]	; 0x3c
  4022d2:	f89a 3000 	ldrb.w	r3, [sl]
  4022d6:	e5a3      	b.n	401e20 <_svfprintf_r+0xb0>
  4022d8:	004073b4 	.word	0x004073b4
  4022dc:	004073c4 	.word	0x004073c4
  4022e0:	00407394 	.word	0x00407394
  4022e4:	f04b 0b10 	orr.w	fp, fp, #16
  4022e8:	f01b 0f20 	tst.w	fp, #32
  4022ec:	9311      	str	r3, [sp, #68]	; 0x44
  4022ee:	f43f ae23 	beq.w	401f38 <_svfprintf_r+0x1c8>
  4022f2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4022f4:	3507      	adds	r5, #7
  4022f6:	f025 0307 	bic.w	r3, r5, #7
  4022fa:	f103 0208 	add.w	r2, r3, #8
  4022fe:	e9d3 4500 	ldrd	r4, r5, [r3]
  402302:	920f      	str	r2, [sp, #60]	; 0x3c
  402304:	2301      	movs	r3, #1
  402306:	e626      	b.n	401f56 <_svfprintf_r+0x1e6>
  402308:	f89a 3000 	ldrb.w	r3, [sl]
  40230c:	2b2a      	cmp	r3, #42	; 0x2a
  40230e:	f10a 0401 	add.w	r4, sl, #1
  402312:	f000 8727 	beq.w	403164 <_svfprintf_r+0x13f4>
  402316:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40231a:	2809      	cmp	r0, #9
  40231c:	46a2      	mov	sl, r4
  40231e:	f200 86ad 	bhi.w	40307c <_svfprintf_r+0x130c>
  402322:	2300      	movs	r3, #0
  402324:	461c      	mov	r4, r3
  402326:	f81a 3b01 	ldrb.w	r3, [sl], #1
  40232a:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  40232e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402332:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402336:	2809      	cmp	r0, #9
  402338:	d9f5      	bls.n	402326 <_svfprintf_r+0x5b6>
  40233a:	940a      	str	r4, [sp, #40]	; 0x28
  40233c:	e572      	b.n	401e24 <_svfprintf_r+0xb4>
  40233e:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  402342:	f89a 3000 	ldrb.w	r3, [sl]
  402346:	e56b      	b.n	401e20 <_svfprintf_r+0xb0>
  402348:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  40234c:	f89a 3000 	ldrb.w	r3, [sl]
  402350:	e566      	b.n	401e20 <_svfprintf_r+0xb0>
  402352:	f89a 3000 	ldrb.w	r3, [sl]
  402356:	2b6c      	cmp	r3, #108	; 0x6c
  402358:	bf03      	ittte	eq
  40235a:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  40235e:	f04b 0b20 	orreq.w	fp, fp, #32
  402362:	f10a 0a01 	addeq.w	sl, sl, #1
  402366:	f04b 0b10 	orrne.w	fp, fp, #16
  40236a:	e559      	b.n	401e20 <_svfprintf_r+0xb0>
  40236c:	2a00      	cmp	r2, #0
  40236e:	f040 8711 	bne.w	403194 <_svfprintf_r+0x1424>
  402372:	f01b 0f20 	tst.w	fp, #32
  402376:	f040 84f9 	bne.w	402d6c <_svfprintf_r+0xffc>
  40237a:	f01b 0f10 	tst.w	fp, #16
  40237e:	f040 84ac 	bne.w	402cda <_svfprintf_r+0xf6a>
  402382:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402386:	f000 84a8 	beq.w	402cda <_svfprintf_r+0xf6a>
  40238a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40238c:	6813      	ldr	r3, [r2, #0]
  40238e:	3204      	adds	r2, #4
  402390:	920f      	str	r2, [sp, #60]	; 0x3c
  402392:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  402396:	801a      	strh	r2, [r3, #0]
  402398:	e511      	b.n	401dbe <_svfprintf_r+0x4e>
  40239a:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40239c:	4bb3      	ldr	r3, [pc, #716]	; (40266c <_svfprintf_r+0x8fc>)
  40239e:	680c      	ldr	r4, [r1, #0]
  4023a0:	9318      	str	r3, [sp, #96]	; 0x60
  4023a2:	2230      	movs	r2, #48	; 0x30
  4023a4:	2378      	movs	r3, #120	; 0x78
  4023a6:	3104      	adds	r1, #4
  4023a8:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  4023ac:	9311      	str	r3, [sp, #68]	; 0x44
  4023ae:	f04b 0b02 	orr.w	fp, fp, #2
  4023b2:	910f      	str	r1, [sp, #60]	; 0x3c
  4023b4:	2500      	movs	r5, #0
  4023b6:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  4023ba:	2302      	movs	r3, #2
  4023bc:	e5cb      	b.n	401f56 <_svfprintf_r+0x1e6>
  4023be:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4023c0:	9311      	str	r3, [sp, #68]	; 0x44
  4023c2:	680a      	ldr	r2, [r1, #0]
  4023c4:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4023c8:	2300      	movs	r3, #0
  4023ca:	460a      	mov	r2, r1
  4023cc:	461f      	mov	r7, r3
  4023ce:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4023d2:	3204      	adds	r2, #4
  4023d4:	2301      	movs	r3, #1
  4023d6:	9308      	str	r3, [sp, #32]
  4023d8:	f8cd b01c 	str.w	fp, [sp, #28]
  4023dc:	970a      	str	r7, [sp, #40]	; 0x28
  4023de:	9712      	str	r7, [sp, #72]	; 0x48
  4023e0:	920f      	str	r2, [sp, #60]	; 0x3c
  4023e2:	930e      	str	r3, [sp, #56]	; 0x38
  4023e4:	ae28      	add	r6, sp, #160	; 0xa0
  4023e6:	e5df      	b.n	401fa8 <_svfprintf_r+0x238>
  4023e8:	9311      	str	r3, [sp, #68]	; 0x44
  4023ea:	2a00      	cmp	r2, #0
  4023ec:	f040 86ea 	bne.w	4031c4 <_svfprintf_r+0x1454>
  4023f0:	f01b 0f20 	tst.w	fp, #32
  4023f4:	d15d      	bne.n	4024b2 <_svfprintf_r+0x742>
  4023f6:	f01b 0f10 	tst.w	fp, #16
  4023fa:	f040 8308 	bne.w	402a0e <_svfprintf_r+0xc9e>
  4023fe:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402402:	f000 8304 	beq.w	402a0e <_svfprintf_r+0xc9e>
  402406:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402408:	f9b1 4000 	ldrsh.w	r4, [r1]
  40240c:	3104      	adds	r1, #4
  40240e:	17e5      	asrs	r5, r4, #31
  402410:	4622      	mov	r2, r4
  402412:	462b      	mov	r3, r5
  402414:	910f      	str	r1, [sp, #60]	; 0x3c
  402416:	2a00      	cmp	r2, #0
  402418:	f173 0300 	sbcs.w	r3, r3, #0
  40241c:	db58      	blt.n	4024d0 <_svfprintf_r+0x760>
  40241e:	990a      	ldr	r1, [sp, #40]	; 0x28
  402420:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402424:	1c4a      	adds	r2, r1, #1
  402426:	f04f 0301 	mov.w	r3, #1
  40242a:	f47f ad9b 	bne.w	401f64 <_svfprintf_r+0x1f4>
  40242e:	ea54 0205 	orrs.w	r2, r4, r5
  402432:	f000 81df 	beq.w	4027f4 <_svfprintf_r+0xa84>
  402436:	f8cd b01c 	str.w	fp, [sp, #28]
  40243a:	2b01      	cmp	r3, #1
  40243c:	f000 827b 	beq.w	402936 <_svfprintf_r+0xbc6>
  402440:	2b02      	cmp	r3, #2
  402442:	f040 8206 	bne.w	402852 <_svfprintf_r+0xae2>
  402446:	9818      	ldr	r0, [sp, #96]	; 0x60
  402448:	464e      	mov	r6, r9
  40244a:	0923      	lsrs	r3, r4, #4
  40244c:	f004 010f 	and.w	r1, r4, #15
  402450:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402454:	092a      	lsrs	r2, r5, #4
  402456:	461c      	mov	r4, r3
  402458:	4615      	mov	r5, r2
  40245a:	5c43      	ldrb	r3, [r0, r1]
  40245c:	f806 3d01 	strb.w	r3, [r6, #-1]!
  402460:	ea54 0305 	orrs.w	r3, r4, r5
  402464:	d1f1      	bne.n	40244a <_svfprintf_r+0x6da>
  402466:	eba9 0306 	sub.w	r3, r9, r6
  40246a:	930e      	str	r3, [sp, #56]	; 0x38
  40246c:	e590      	b.n	401f90 <_svfprintf_r+0x220>
  40246e:	9311      	str	r3, [sp, #68]	; 0x44
  402470:	2a00      	cmp	r2, #0
  402472:	f040 86a3 	bne.w	4031bc <_svfprintf_r+0x144c>
  402476:	4b7e      	ldr	r3, [pc, #504]	; (402670 <_svfprintf_r+0x900>)
  402478:	9318      	str	r3, [sp, #96]	; 0x60
  40247a:	f01b 0f20 	tst.w	fp, #32
  40247e:	f43f aeef 	beq.w	402260 <_svfprintf_r+0x4f0>
  402482:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402484:	3507      	adds	r5, #7
  402486:	f025 0307 	bic.w	r3, r5, #7
  40248a:	f103 0208 	add.w	r2, r3, #8
  40248e:	f01b 0f01 	tst.w	fp, #1
  402492:	920f      	str	r2, [sp, #60]	; 0x3c
  402494:	e9d3 4500 	ldrd	r4, r5, [r3]
  402498:	f47f aef4 	bne.w	402284 <_svfprintf_r+0x514>
  40249c:	2302      	movs	r3, #2
  40249e:	e55a      	b.n	401f56 <_svfprintf_r+0x1e6>
  4024a0:	9311      	str	r3, [sp, #68]	; 0x44
  4024a2:	2a00      	cmp	r2, #0
  4024a4:	f040 8686 	bne.w	4031b4 <_svfprintf_r+0x1444>
  4024a8:	f04b 0b10 	orr.w	fp, fp, #16
  4024ac:	f01b 0f20 	tst.w	fp, #32
  4024b0:	d0a1      	beq.n	4023f6 <_svfprintf_r+0x686>
  4024b2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4024b4:	3507      	adds	r5, #7
  4024b6:	f025 0507 	bic.w	r5, r5, #7
  4024ba:	e9d5 2300 	ldrd	r2, r3, [r5]
  4024be:	2a00      	cmp	r2, #0
  4024c0:	f105 0108 	add.w	r1, r5, #8
  4024c4:	461d      	mov	r5, r3
  4024c6:	f173 0300 	sbcs.w	r3, r3, #0
  4024ca:	910f      	str	r1, [sp, #60]	; 0x3c
  4024cc:	4614      	mov	r4, r2
  4024ce:	daa6      	bge.n	40241e <_svfprintf_r+0x6ae>
  4024d0:	272d      	movs	r7, #45	; 0x2d
  4024d2:	4264      	negs	r4, r4
  4024d4:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  4024d8:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4024dc:	2301      	movs	r3, #1
  4024de:	e53d      	b.n	401f5c <_svfprintf_r+0x1ec>
  4024e0:	9311      	str	r3, [sp, #68]	; 0x44
  4024e2:	2a00      	cmp	r2, #0
  4024e4:	f040 8662 	bne.w	4031ac <_svfprintf_r+0x143c>
  4024e8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4024ea:	3507      	adds	r5, #7
  4024ec:	f025 0307 	bic.w	r3, r5, #7
  4024f0:	f103 0208 	add.w	r2, r3, #8
  4024f4:	920f      	str	r2, [sp, #60]	; 0x3c
  4024f6:	681a      	ldr	r2, [r3, #0]
  4024f8:	9215      	str	r2, [sp, #84]	; 0x54
  4024fa:	685b      	ldr	r3, [r3, #4]
  4024fc:	9314      	str	r3, [sp, #80]	; 0x50
  4024fe:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402500:	9d15      	ldr	r5, [sp, #84]	; 0x54
  402502:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  402506:	4628      	mov	r0, r5
  402508:	4621      	mov	r1, r4
  40250a:	f04f 32ff 	mov.w	r2, #4294967295
  40250e:	4b59      	ldr	r3, [pc, #356]	; (402674 <_svfprintf_r+0x904>)
  402510:	f003 feea 	bl	4062e8 <__aeabi_dcmpun>
  402514:	2800      	cmp	r0, #0
  402516:	f040 834a 	bne.w	402bae <_svfprintf_r+0xe3e>
  40251a:	4628      	mov	r0, r5
  40251c:	4621      	mov	r1, r4
  40251e:	f04f 32ff 	mov.w	r2, #4294967295
  402522:	4b54      	ldr	r3, [pc, #336]	; (402674 <_svfprintf_r+0x904>)
  402524:	f003 fec2 	bl	4062ac <__aeabi_dcmple>
  402528:	2800      	cmp	r0, #0
  40252a:	f040 8340 	bne.w	402bae <_svfprintf_r+0xe3e>
  40252e:	a815      	add	r0, sp, #84	; 0x54
  402530:	c80d      	ldmia	r0, {r0, r2, r3}
  402532:	9914      	ldr	r1, [sp, #80]	; 0x50
  402534:	f003 feb0 	bl	406298 <__aeabi_dcmplt>
  402538:	2800      	cmp	r0, #0
  40253a:	f040 8530 	bne.w	402f9e <_svfprintf_r+0x122e>
  40253e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402542:	4e4d      	ldr	r6, [pc, #308]	; (402678 <_svfprintf_r+0x908>)
  402544:	4b4d      	ldr	r3, [pc, #308]	; (40267c <_svfprintf_r+0x90c>)
  402546:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  40254a:	9007      	str	r0, [sp, #28]
  40254c:	9811      	ldr	r0, [sp, #68]	; 0x44
  40254e:	2203      	movs	r2, #3
  402550:	2100      	movs	r1, #0
  402552:	9208      	str	r2, [sp, #32]
  402554:	910a      	str	r1, [sp, #40]	; 0x28
  402556:	2847      	cmp	r0, #71	; 0x47
  402558:	bfd8      	it	le
  40255a:	461e      	movle	r6, r3
  40255c:	920e      	str	r2, [sp, #56]	; 0x38
  40255e:	9112      	str	r1, [sp, #72]	; 0x48
  402560:	e51e      	b.n	401fa0 <_svfprintf_r+0x230>
  402562:	f04b 0b08 	orr.w	fp, fp, #8
  402566:	f89a 3000 	ldrb.w	r3, [sl]
  40256a:	e459      	b.n	401e20 <_svfprintf_r+0xb0>
  40256c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402570:	2300      	movs	r3, #0
  402572:	461c      	mov	r4, r3
  402574:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402578:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  40257c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402580:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402584:	2809      	cmp	r0, #9
  402586:	d9f5      	bls.n	402574 <_svfprintf_r+0x804>
  402588:	940d      	str	r4, [sp, #52]	; 0x34
  40258a:	e44b      	b.n	401e24 <_svfprintf_r+0xb4>
  40258c:	f04b 0b10 	orr.w	fp, fp, #16
  402590:	9311      	str	r3, [sp, #68]	; 0x44
  402592:	f01b 0320 	ands.w	r3, fp, #32
  402596:	f43f ae1d 	beq.w	4021d4 <_svfprintf_r+0x464>
  40259a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40259c:	3507      	adds	r5, #7
  40259e:	f025 0307 	bic.w	r3, r5, #7
  4025a2:	f103 0208 	add.w	r2, r3, #8
  4025a6:	e9d3 4500 	ldrd	r4, r5, [r3]
  4025aa:	920f      	str	r2, [sp, #60]	; 0x3c
  4025ac:	2300      	movs	r3, #0
  4025ae:	e4d2      	b.n	401f56 <_svfprintf_r+0x1e6>
  4025b0:	9311      	str	r3, [sp, #68]	; 0x44
  4025b2:	2a00      	cmp	r2, #0
  4025b4:	f040 85e7 	bne.w	403186 <_svfprintf_r+0x1416>
  4025b8:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4025ba:	2a00      	cmp	r2, #0
  4025bc:	f43f aca3 	beq.w	401f06 <_svfprintf_r+0x196>
  4025c0:	2300      	movs	r3, #0
  4025c2:	2101      	movs	r1, #1
  4025c4:	461f      	mov	r7, r3
  4025c6:	9108      	str	r1, [sp, #32]
  4025c8:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4025cc:	f8cd b01c 	str.w	fp, [sp, #28]
  4025d0:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4025d4:	930a      	str	r3, [sp, #40]	; 0x28
  4025d6:	9312      	str	r3, [sp, #72]	; 0x48
  4025d8:	910e      	str	r1, [sp, #56]	; 0x38
  4025da:	ae28      	add	r6, sp, #160	; 0xa0
  4025dc:	e4e4      	b.n	401fa8 <_svfprintf_r+0x238>
  4025de:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4025e0:	e534      	b.n	40204c <_svfprintf_r+0x2dc>
  4025e2:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4025e4:	2b65      	cmp	r3, #101	; 0x65
  4025e6:	f340 80a7 	ble.w	402738 <_svfprintf_r+0x9c8>
  4025ea:	a815      	add	r0, sp, #84	; 0x54
  4025ec:	c80d      	ldmia	r0, {r0, r2, r3}
  4025ee:	9914      	ldr	r1, [sp, #80]	; 0x50
  4025f0:	f003 fe48 	bl	406284 <__aeabi_dcmpeq>
  4025f4:	2800      	cmp	r0, #0
  4025f6:	f000 8150 	beq.w	40289a <_svfprintf_r+0xb2a>
  4025fa:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4025fc:	4a20      	ldr	r2, [pc, #128]	; (402680 <_svfprintf_r+0x910>)
  4025fe:	f8c8 2000 	str.w	r2, [r8]
  402602:	3301      	adds	r3, #1
  402604:	3401      	adds	r4, #1
  402606:	2201      	movs	r2, #1
  402608:	2b07      	cmp	r3, #7
  40260a:	9427      	str	r4, [sp, #156]	; 0x9c
  40260c:	9326      	str	r3, [sp, #152]	; 0x98
  40260e:	f8c8 2004 	str.w	r2, [r8, #4]
  402612:	f300 836a 	bgt.w	402cea <_svfprintf_r+0xf7a>
  402616:	f108 0808 	add.w	r8, r8, #8
  40261a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  40261c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  40261e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402620:	4293      	cmp	r3, r2
  402622:	db03      	blt.n	40262c <_svfprintf_r+0x8bc>
  402624:	9b07      	ldr	r3, [sp, #28]
  402626:	07dd      	lsls	r5, r3, #31
  402628:	f57f ad82 	bpl.w	402130 <_svfprintf_r+0x3c0>
  40262c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40262e:	9919      	ldr	r1, [sp, #100]	; 0x64
  402630:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402632:	f8c8 2000 	str.w	r2, [r8]
  402636:	3301      	adds	r3, #1
  402638:	440c      	add	r4, r1
  40263a:	2b07      	cmp	r3, #7
  40263c:	f8c8 1004 	str.w	r1, [r8, #4]
  402640:	9427      	str	r4, [sp, #156]	; 0x9c
  402642:	9326      	str	r3, [sp, #152]	; 0x98
  402644:	f300 839e 	bgt.w	402d84 <_svfprintf_r+0x1014>
  402648:	f108 0808 	add.w	r8, r8, #8
  40264c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40264e:	1e5e      	subs	r6, r3, #1
  402650:	2e00      	cmp	r6, #0
  402652:	f77f ad6d 	ble.w	402130 <_svfprintf_r+0x3c0>
  402656:	2e10      	cmp	r6, #16
  402658:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40265a:	4d0a      	ldr	r5, [pc, #40]	; (402684 <_svfprintf_r+0x914>)
  40265c:	f340 81f5 	ble.w	402a4a <_svfprintf_r+0xcda>
  402660:	4622      	mov	r2, r4
  402662:	2710      	movs	r7, #16
  402664:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402668:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  40266a:	e013      	b.n	402694 <_svfprintf_r+0x924>
  40266c:	00407394 	.word	0x00407394
  402670:	00407380 	.word	0x00407380
  402674:	7fefffff 	.word	0x7fefffff
  402678:	00407374 	.word	0x00407374
  40267c:	00407370 	.word	0x00407370
  402680:	004073b0 	.word	0x004073b0
  402684:	004073c4 	.word	0x004073c4
  402688:	f108 0808 	add.w	r8, r8, #8
  40268c:	3e10      	subs	r6, #16
  40268e:	2e10      	cmp	r6, #16
  402690:	f340 81da 	ble.w	402a48 <_svfprintf_r+0xcd8>
  402694:	3301      	adds	r3, #1
  402696:	3210      	adds	r2, #16
  402698:	2b07      	cmp	r3, #7
  40269a:	9227      	str	r2, [sp, #156]	; 0x9c
  40269c:	9326      	str	r3, [sp, #152]	; 0x98
  40269e:	e888 00a0 	stmia.w	r8, {r5, r7}
  4026a2:	ddf1      	ble.n	402688 <_svfprintf_r+0x918>
  4026a4:	aa25      	add	r2, sp, #148	; 0x94
  4026a6:	4621      	mov	r1, r4
  4026a8:	4658      	mov	r0, fp
  4026aa:	f002 fd57 	bl	40515c <__ssprint_r>
  4026ae:	2800      	cmp	r0, #0
  4026b0:	f47f ac30 	bne.w	401f14 <_svfprintf_r+0x1a4>
  4026b4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4026b6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4026b8:	46c8      	mov	r8, r9
  4026ba:	e7e7      	b.n	40268c <_svfprintf_r+0x91c>
  4026bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4026be:	9a08      	ldr	r2, [sp, #32]
  4026c0:	1a9f      	subs	r7, r3, r2
  4026c2:	2f00      	cmp	r7, #0
  4026c4:	f77f ace5 	ble.w	402092 <_svfprintf_r+0x322>
  4026c8:	2f10      	cmp	r7, #16
  4026ca:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4026cc:	4db6      	ldr	r5, [pc, #728]	; (4029a8 <_svfprintf_r+0xc38>)
  4026ce:	dd27      	ble.n	402720 <_svfprintf_r+0x9b0>
  4026d0:	4642      	mov	r2, r8
  4026d2:	4621      	mov	r1, r4
  4026d4:	46b0      	mov	r8, r6
  4026d6:	f04f 0b10 	mov.w	fp, #16
  4026da:	462e      	mov	r6, r5
  4026dc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4026de:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4026e0:	e004      	b.n	4026ec <_svfprintf_r+0x97c>
  4026e2:	3f10      	subs	r7, #16
  4026e4:	2f10      	cmp	r7, #16
  4026e6:	f102 0208 	add.w	r2, r2, #8
  4026ea:	dd15      	ble.n	402718 <_svfprintf_r+0x9a8>
  4026ec:	3301      	adds	r3, #1
  4026ee:	3110      	adds	r1, #16
  4026f0:	2b07      	cmp	r3, #7
  4026f2:	9127      	str	r1, [sp, #156]	; 0x9c
  4026f4:	9326      	str	r3, [sp, #152]	; 0x98
  4026f6:	e882 0840 	stmia.w	r2, {r6, fp}
  4026fa:	ddf2      	ble.n	4026e2 <_svfprintf_r+0x972>
  4026fc:	aa25      	add	r2, sp, #148	; 0x94
  4026fe:	4629      	mov	r1, r5
  402700:	4620      	mov	r0, r4
  402702:	f002 fd2b 	bl	40515c <__ssprint_r>
  402706:	2800      	cmp	r0, #0
  402708:	f47f ac04 	bne.w	401f14 <_svfprintf_r+0x1a4>
  40270c:	3f10      	subs	r7, #16
  40270e:	2f10      	cmp	r7, #16
  402710:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402712:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402714:	464a      	mov	r2, r9
  402716:	dce9      	bgt.n	4026ec <_svfprintf_r+0x97c>
  402718:	4635      	mov	r5, r6
  40271a:	460c      	mov	r4, r1
  40271c:	4646      	mov	r6, r8
  40271e:	4690      	mov	r8, r2
  402720:	3301      	adds	r3, #1
  402722:	443c      	add	r4, r7
  402724:	2b07      	cmp	r3, #7
  402726:	9427      	str	r4, [sp, #156]	; 0x9c
  402728:	9326      	str	r3, [sp, #152]	; 0x98
  40272a:	e888 00a0 	stmia.w	r8, {r5, r7}
  40272e:	f300 8232 	bgt.w	402b96 <_svfprintf_r+0xe26>
  402732:	f108 0808 	add.w	r8, r8, #8
  402736:	e4ac      	b.n	402092 <_svfprintf_r+0x322>
  402738:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40273a:	9f26      	ldr	r7, [sp, #152]	; 0x98
  40273c:	2b01      	cmp	r3, #1
  40273e:	f340 81fe 	ble.w	402b3e <_svfprintf_r+0xdce>
  402742:	3701      	adds	r7, #1
  402744:	3401      	adds	r4, #1
  402746:	2301      	movs	r3, #1
  402748:	2f07      	cmp	r7, #7
  40274a:	9427      	str	r4, [sp, #156]	; 0x9c
  40274c:	9726      	str	r7, [sp, #152]	; 0x98
  40274e:	f8c8 6000 	str.w	r6, [r8]
  402752:	f8c8 3004 	str.w	r3, [r8, #4]
  402756:	f300 8203 	bgt.w	402b60 <_svfprintf_r+0xdf0>
  40275a:	f108 0808 	add.w	r8, r8, #8
  40275e:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402760:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  402762:	f8c8 3000 	str.w	r3, [r8]
  402766:	3701      	adds	r7, #1
  402768:	4414      	add	r4, r2
  40276a:	2f07      	cmp	r7, #7
  40276c:	9427      	str	r4, [sp, #156]	; 0x9c
  40276e:	9726      	str	r7, [sp, #152]	; 0x98
  402770:	f8c8 2004 	str.w	r2, [r8, #4]
  402774:	f300 8200 	bgt.w	402b78 <_svfprintf_r+0xe08>
  402778:	f108 0808 	add.w	r8, r8, #8
  40277c:	a815      	add	r0, sp, #84	; 0x54
  40277e:	c80d      	ldmia	r0, {r0, r2, r3}
  402780:	9914      	ldr	r1, [sp, #80]	; 0x50
  402782:	f003 fd7f 	bl	406284 <__aeabi_dcmpeq>
  402786:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402788:	2800      	cmp	r0, #0
  40278a:	f040 8101 	bne.w	402990 <_svfprintf_r+0xc20>
  40278e:	3b01      	subs	r3, #1
  402790:	3701      	adds	r7, #1
  402792:	3601      	adds	r6, #1
  402794:	441c      	add	r4, r3
  402796:	2f07      	cmp	r7, #7
  402798:	9726      	str	r7, [sp, #152]	; 0x98
  40279a:	9427      	str	r4, [sp, #156]	; 0x9c
  40279c:	f8c8 6000 	str.w	r6, [r8]
  4027a0:	f8c8 3004 	str.w	r3, [r8, #4]
  4027a4:	f300 8127 	bgt.w	4029f6 <_svfprintf_r+0xc86>
  4027a8:	f108 0808 	add.w	r8, r8, #8
  4027ac:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  4027ae:	f8c8 2004 	str.w	r2, [r8, #4]
  4027b2:	3701      	adds	r7, #1
  4027b4:	4414      	add	r4, r2
  4027b6:	ab21      	add	r3, sp, #132	; 0x84
  4027b8:	2f07      	cmp	r7, #7
  4027ba:	9427      	str	r4, [sp, #156]	; 0x9c
  4027bc:	9726      	str	r7, [sp, #152]	; 0x98
  4027be:	f8c8 3000 	str.w	r3, [r8]
  4027c2:	f77f acb3 	ble.w	40212c <_svfprintf_r+0x3bc>
  4027c6:	aa25      	add	r2, sp, #148	; 0x94
  4027c8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4027ca:	980c      	ldr	r0, [sp, #48]	; 0x30
  4027cc:	f002 fcc6 	bl	40515c <__ssprint_r>
  4027d0:	2800      	cmp	r0, #0
  4027d2:	f47f ab9f 	bne.w	401f14 <_svfprintf_r+0x1a4>
  4027d6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4027d8:	46c8      	mov	r8, r9
  4027da:	e4a9      	b.n	402130 <_svfprintf_r+0x3c0>
  4027dc:	aa25      	add	r2, sp, #148	; 0x94
  4027de:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4027e0:	980c      	ldr	r0, [sp, #48]	; 0x30
  4027e2:	f002 fcbb 	bl	40515c <__ssprint_r>
  4027e6:	2800      	cmp	r0, #0
  4027e8:	f43f aceb 	beq.w	4021c2 <_svfprintf_r+0x452>
  4027ec:	f7ff bb92 	b.w	401f14 <_svfprintf_r+0x1a4>
  4027f0:	f8dd b01c 	ldr.w	fp, [sp, #28]
  4027f4:	2b01      	cmp	r3, #1
  4027f6:	f000 8134 	beq.w	402a62 <_svfprintf_r+0xcf2>
  4027fa:	2b02      	cmp	r3, #2
  4027fc:	d125      	bne.n	40284a <_svfprintf_r+0xada>
  4027fe:	f8cd b01c 	str.w	fp, [sp, #28]
  402802:	2400      	movs	r4, #0
  402804:	2500      	movs	r5, #0
  402806:	e61e      	b.n	402446 <_svfprintf_r+0x6d6>
  402808:	aa25      	add	r2, sp, #148	; 0x94
  40280a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40280c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40280e:	f002 fca5 	bl	40515c <__ssprint_r>
  402812:	2800      	cmp	r0, #0
  402814:	f47f ab7e 	bne.w	401f14 <_svfprintf_r+0x1a4>
  402818:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40281a:	46c8      	mov	r8, r9
  40281c:	e475      	b.n	40210a <_svfprintf_r+0x39a>
  40281e:	aa25      	add	r2, sp, #148	; 0x94
  402820:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402822:	980c      	ldr	r0, [sp, #48]	; 0x30
  402824:	f002 fc9a 	bl	40515c <__ssprint_r>
  402828:	2800      	cmp	r0, #0
  40282a:	f47f ab73 	bne.w	401f14 <_svfprintf_r+0x1a4>
  40282e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402830:	46c8      	mov	r8, r9
  402832:	e41b      	b.n	40206c <_svfprintf_r+0x2fc>
  402834:	aa25      	add	r2, sp, #148	; 0x94
  402836:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402838:	980c      	ldr	r0, [sp, #48]	; 0x30
  40283a:	f002 fc8f 	bl	40515c <__ssprint_r>
  40283e:	2800      	cmp	r0, #0
  402840:	f47f ab68 	bne.w	401f14 <_svfprintf_r+0x1a4>
  402844:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402846:	46c8      	mov	r8, r9
  402848:	e420      	b.n	40208c <_svfprintf_r+0x31c>
  40284a:	f8cd b01c 	str.w	fp, [sp, #28]
  40284e:	2400      	movs	r4, #0
  402850:	2500      	movs	r5, #0
  402852:	4649      	mov	r1, r9
  402854:	e000      	b.n	402858 <_svfprintf_r+0xae8>
  402856:	4631      	mov	r1, r6
  402858:	08e2      	lsrs	r2, r4, #3
  40285a:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  40285e:	08e8      	lsrs	r0, r5, #3
  402860:	f004 0307 	and.w	r3, r4, #7
  402864:	4605      	mov	r5, r0
  402866:	4614      	mov	r4, r2
  402868:	3330      	adds	r3, #48	; 0x30
  40286a:	ea54 0205 	orrs.w	r2, r4, r5
  40286e:	f801 3c01 	strb.w	r3, [r1, #-1]
  402872:	f101 36ff 	add.w	r6, r1, #4294967295
  402876:	d1ee      	bne.n	402856 <_svfprintf_r+0xae6>
  402878:	9a07      	ldr	r2, [sp, #28]
  40287a:	07d2      	lsls	r2, r2, #31
  40287c:	f57f adf3 	bpl.w	402466 <_svfprintf_r+0x6f6>
  402880:	2b30      	cmp	r3, #48	; 0x30
  402882:	f43f adf0 	beq.w	402466 <_svfprintf_r+0x6f6>
  402886:	3902      	subs	r1, #2
  402888:	2330      	movs	r3, #48	; 0x30
  40288a:	f806 3c01 	strb.w	r3, [r6, #-1]
  40288e:	eba9 0301 	sub.w	r3, r9, r1
  402892:	930e      	str	r3, [sp, #56]	; 0x38
  402894:	460e      	mov	r6, r1
  402896:	f7ff bb7b 	b.w	401f90 <_svfprintf_r+0x220>
  40289a:	991f      	ldr	r1, [sp, #124]	; 0x7c
  40289c:	2900      	cmp	r1, #0
  40289e:	f340 822e 	ble.w	402cfe <_svfprintf_r+0xf8e>
  4028a2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4028a4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4028a6:	4293      	cmp	r3, r2
  4028a8:	bfa8      	it	ge
  4028aa:	4613      	movge	r3, r2
  4028ac:	2b00      	cmp	r3, #0
  4028ae:	461f      	mov	r7, r3
  4028b0:	dd0d      	ble.n	4028ce <_svfprintf_r+0xb5e>
  4028b2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4028b4:	f8c8 6000 	str.w	r6, [r8]
  4028b8:	3301      	adds	r3, #1
  4028ba:	443c      	add	r4, r7
  4028bc:	2b07      	cmp	r3, #7
  4028be:	9427      	str	r4, [sp, #156]	; 0x9c
  4028c0:	f8c8 7004 	str.w	r7, [r8, #4]
  4028c4:	9326      	str	r3, [sp, #152]	; 0x98
  4028c6:	f300 831f 	bgt.w	402f08 <_svfprintf_r+0x1198>
  4028ca:	f108 0808 	add.w	r8, r8, #8
  4028ce:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4028d0:	2f00      	cmp	r7, #0
  4028d2:	bfa8      	it	ge
  4028d4:	1bdb      	subge	r3, r3, r7
  4028d6:	2b00      	cmp	r3, #0
  4028d8:	461f      	mov	r7, r3
  4028da:	f340 80d6 	ble.w	402a8a <_svfprintf_r+0xd1a>
  4028de:	2f10      	cmp	r7, #16
  4028e0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4028e2:	4d31      	ldr	r5, [pc, #196]	; (4029a8 <_svfprintf_r+0xc38>)
  4028e4:	f340 81ed 	ble.w	402cc2 <_svfprintf_r+0xf52>
  4028e8:	4642      	mov	r2, r8
  4028ea:	4621      	mov	r1, r4
  4028ec:	46b0      	mov	r8, r6
  4028ee:	f04f 0b10 	mov.w	fp, #16
  4028f2:	462e      	mov	r6, r5
  4028f4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4028f6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4028f8:	e004      	b.n	402904 <_svfprintf_r+0xb94>
  4028fa:	3208      	adds	r2, #8
  4028fc:	3f10      	subs	r7, #16
  4028fe:	2f10      	cmp	r7, #16
  402900:	f340 81db 	ble.w	402cba <_svfprintf_r+0xf4a>
  402904:	3301      	adds	r3, #1
  402906:	3110      	adds	r1, #16
  402908:	2b07      	cmp	r3, #7
  40290a:	9127      	str	r1, [sp, #156]	; 0x9c
  40290c:	9326      	str	r3, [sp, #152]	; 0x98
  40290e:	e882 0840 	stmia.w	r2, {r6, fp}
  402912:	ddf2      	ble.n	4028fa <_svfprintf_r+0xb8a>
  402914:	aa25      	add	r2, sp, #148	; 0x94
  402916:	4629      	mov	r1, r5
  402918:	4620      	mov	r0, r4
  40291a:	f002 fc1f 	bl	40515c <__ssprint_r>
  40291e:	2800      	cmp	r0, #0
  402920:	f47f aaf8 	bne.w	401f14 <_svfprintf_r+0x1a4>
  402924:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402926:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402928:	464a      	mov	r2, r9
  40292a:	e7e7      	b.n	4028fc <_svfprintf_r+0xb8c>
  40292c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40292e:	930e      	str	r3, [sp, #56]	; 0x38
  402930:	464e      	mov	r6, r9
  402932:	f7ff bb2d 	b.w	401f90 <_svfprintf_r+0x220>
  402936:	2d00      	cmp	r5, #0
  402938:	bf08      	it	eq
  40293a:	2c0a      	cmpeq	r4, #10
  40293c:	f0c0 808f 	bcc.w	402a5e <_svfprintf_r+0xcee>
  402940:	464e      	mov	r6, r9
  402942:	4620      	mov	r0, r4
  402944:	4629      	mov	r1, r5
  402946:	220a      	movs	r2, #10
  402948:	2300      	movs	r3, #0
  40294a:	f003 fd0b 	bl	406364 <__aeabi_uldivmod>
  40294e:	3230      	adds	r2, #48	; 0x30
  402950:	f806 2d01 	strb.w	r2, [r6, #-1]!
  402954:	4620      	mov	r0, r4
  402956:	4629      	mov	r1, r5
  402958:	2300      	movs	r3, #0
  40295a:	220a      	movs	r2, #10
  40295c:	f003 fd02 	bl	406364 <__aeabi_uldivmod>
  402960:	4604      	mov	r4, r0
  402962:	460d      	mov	r5, r1
  402964:	ea54 0305 	orrs.w	r3, r4, r5
  402968:	d1eb      	bne.n	402942 <_svfprintf_r+0xbd2>
  40296a:	eba9 0306 	sub.w	r3, r9, r6
  40296e:	930e      	str	r3, [sp, #56]	; 0x38
  402970:	f7ff bb0e 	b.w	401f90 <_svfprintf_r+0x220>
  402974:	aa25      	add	r2, sp, #148	; 0x94
  402976:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402978:	980c      	ldr	r0, [sp, #48]	; 0x30
  40297a:	f002 fbef 	bl	40515c <__ssprint_r>
  40297e:	2800      	cmp	r0, #0
  402980:	f47f aac8 	bne.w	401f14 <_svfprintf_r+0x1a4>
  402984:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402988:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40298a:	46c8      	mov	r8, r9
  40298c:	f7ff bb5e 	b.w	40204c <_svfprintf_r+0x2dc>
  402990:	1e5e      	subs	r6, r3, #1
  402992:	2e00      	cmp	r6, #0
  402994:	f77f af0a 	ble.w	4027ac <_svfprintf_r+0xa3c>
  402998:	2e10      	cmp	r6, #16
  40299a:	4d03      	ldr	r5, [pc, #12]	; (4029a8 <_svfprintf_r+0xc38>)
  40299c:	dd22      	ble.n	4029e4 <_svfprintf_r+0xc74>
  40299e:	4622      	mov	r2, r4
  4029a0:	f04f 0b10 	mov.w	fp, #16
  4029a4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4029a6:	e006      	b.n	4029b6 <_svfprintf_r+0xc46>
  4029a8:	004073c4 	.word	0x004073c4
  4029ac:	3e10      	subs	r6, #16
  4029ae:	2e10      	cmp	r6, #16
  4029b0:	f108 0808 	add.w	r8, r8, #8
  4029b4:	dd15      	ble.n	4029e2 <_svfprintf_r+0xc72>
  4029b6:	3701      	adds	r7, #1
  4029b8:	3210      	adds	r2, #16
  4029ba:	2f07      	cmp	r7, #7
  4029bc:	9227      	str	r2, [sp, #156]	; 0x9c
  4029be:	9726      	str	r7, [sp, #152]	; 0x98
  4029c0:	e888 0820 	stmia.w	r8, {r5, fp}
  4029c4:	ddf2      	ble.n	4029ac <_svfprintf_r+0xc3c>
  4029c6:	aa25      	add	r2, sp, #148	; 0x94
  4029c8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4029ca:	4620      	mov	r0, r4
  4029cc:	f002 fbc6 	bl	40515c <__ssprint_r>
  4029d0:	2800      	cmp	r0, #0
  4029d2:	f47f aa9f 	bne.w	401f14 <_svfprintf_r+0x1a4>
  4029d6:	3e10      	subs	r6, #16
  4029d8:	2e10      	cmp	r6, #16
  4029da:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4029dc:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4029de:	46c8      	mov	r8, r9
  4029e0:	dce9      	bgt.n	4029b6 <_svfprintf_r+0xc46>
  4029e2:	4614      	mov	r4, r2
  4029e4:	3701      	adds	r7, #1
  4029e6:	4434      	add	r4, r6
  4029e8:	2f07      	cmp	r7, #7
  4029ea:	9427      	str	r4, [sp, #156]	; 0x9c
  4029ec:	9726      	str	r7, [sp, #152]	; 0x98
  4029ee:	e888 0060 	stmia.w	r8, {r5, r6}
  4029f2:	f77f aed9 	ble.w	4027a8 <_svfprintf_r+0xa38>
  4029f6:	aa25      	add	r2, sp, #148	; 0x94
  4029f8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4029fa:	980c      	ldr	r0, [sp, #48]	; 0x30
  4029fc:	f002 fbae 	bl	40515c <__ssprint_r>
  402a00:	2800      	cmp	r0, #0
  402a02:	f47f aa87 	bne.w	401f14 <_svfprintf_r+0x1a4>
  402a06:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402a08:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402a0a:	46c8      	mov	r8, r9
  402a0c:	e6ce      	b.n	4027ac <_svfprintf_r+0xa3c>
  402a0e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402a10:	6814      	ldr	r4, [r2, #0]
  402a12:	4613      	mov	r3, r2
  402a14:	3304      	adds	r3, #4
  402a16:	17e5      	asrs	r5, r4, #31
  402a18:	930f      	str	r3, [sp, #60]	; 0x3c
  402a1a:	4622      	mov	r2, r4
  402a1c:	462b      	mov	r3, r5
  402a1e:	e4fa      	b.n	402416 <_svfprintf_r+0x6a6>
  402a20:	3204      	adds	r2, #4
  402a22:	681c      	ldr	r4, [r3, #0]
  402a24:	920f      	str	r2, [sp, #60]	; 0x3c
  402a26:	2301      	movs	r3, #1
  402a28:	2500      	movs	r5, #0
  402a2a:	f7ff ba94 	b.w	401f56 <_svfprintf_r+0x1e6>
  402a2e:	681c      	ldr	r4, [r3, #0]
  402a30:	3304      	adds	r3, #4
  402a32:	930f      	str	r3, [sp, #60]	; 0x3c
  402a34:	2500      	movs	r5, #0
  402a36:	e421      	b.n	40227c <_svfprintf_r+0x50c>
  402a38:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402a3a:	460a      	mov	r2, r1
  402a3c:	3204      	adds	r2, #4
  402a3e:	680c      	ldr	r4, [r1, #0]
  402a40:	920f      	str	r2, [sp, #60]	; 0x3c
  402a42:	2500      	movs	r5, #0
  402a44:	f7ff ba87 	b.w	401f56 <_svfprintf_r+0x1e6>
  402a48:	4614      	mov	r4, r2
  402a4a:	3301      	adds	r3, #1
  402a4c:	4434      	add	r4, r6
  402a4e:	2b07      	cmp	r3, #7
  402a50:	9427      	str	r4, [sp, #156]	; 0x9c
  402a52:	9326      	str	r3, [sp, #152]	; 0x98
  402a54:	e888 0060 	stmia.w	r8, {r5, r6}
  402a58:	f77f ab68 	ble.w	40212c <_svfprintf_r+0x3bc>
  402a5c:	e6b3      	b.n	4027c6 <_svfprintf_r+0xa56>
  402a5e:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402a62:	f8cd b01c 	str.w	fp, [sp, #28]
  402a66:	ae42      	add	r6, sp, #264	; 0x108
  402a68:	3430      	adds	r4, #48	; 0x30
  402a6a:	2301      	movs	r3, #1
  402a6c:	f806 4d41 	strb.w	r4, [r6, #-65]!
  402a70:	930e      	str	r3, [sp, #56]	; 0x38
  402a72:	f7ff ba8d 	b.w	401f90 <_svfprintf_r+0x220>
  402a76:	aa25      	add	r2, sp, #148	; 0x94
  402a78:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a7a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a7c:	f002 fb6e 	bl	40515c <__ssprint_r>
  402a80:	2800      	cmp	r0, #0
  402a82:	f47f aa47 	bne.w	401f14 <_svfprintf_r+0x1a4>
  402a86:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402a88:	46c8      	mov	r8, r9
  402a8a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402a8c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402a8e:	429a      	cmp	r2, r3
  402a90:	db44      	blt.n	402b1c <_svfprintf_r+0xdac>
  402a92:	9b07      	ldr	r3, [sp, #28]
  402a94:	07d9      	lsls	r1, r3, #31
  402a96:	d441      	bmi.n	402b1c <_svfprintf_r+0xdac>
  402a98:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402a9a:	9812      	ldr	r0, [sp, #72]	; 0x48
  402a9c:	1a9a      	subs	r2, r3, r2
  402a9e:	1a1d      	subs	r5, r3, r0
  402aa0:	4295      	cmp	r5, r2
  402aa2:	bfa8      	it	ge
  402aa4:	4615      	movge	r5, r2
  402aa6:	2d00      	cmp	r5, #0
  402aa8:	dd0e      	ble.n	402ac8 <_svfprintf_r+0xd58>
  402aaa:	9926      	ldr	r1, [sp, #152]	; 0x98
  402aac:	f8c8 5004 	str.w	r5, [r8, #4]
  402ab0:	3101      	adds	r1, #1
  402ab2:	4406      	add	r6, r0
  402ab4:	442c      	add	r4, r5
  402ab6:	2907      	cmp	r1, #7
  402ab8:	f8c8 6000 	str.w	r6, [r8]
  402abc:	9427      	str	r4, [sp, #156]	; 0x9c
  402abe:	9126      	str	r1, [sp, #152]	; 0x98
  402ac0:	f300 823b 	bgt.w	402f3a <_svfprintf_r+0x11ca>
  402ac4:	f108 0808 	add.w	r8, r8, #8
  402ac8:	2d00      	cmp	r5, #0
  402aca:	bfac      	ite	ge
  402acc:	1b56      	subge	r6, r2, r5
  402ace:	4616      	movlt	r6, r2
  402ad0:	2e00      	cmp	r6, #0
  402ad2:	f77f ab2d 	ble.w	402130 <_svfprintf_r+0x3c0>
  402ad6:	2e10      	cmp	r6, #16
  402ad8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402ada:	4db0      	ldr	r5, [pc, #704]	; (402d9c <_svfprintf_r+0x102c>)
  402adc:	ddb5      	ble.n	402a4a <_svfprintf_r+0xcda>
  402ade:	4622      	mov	r2, r4
  402ae0:	2710      	movs	r7, #16
  402ae2:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402ae6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402ae8:	e004      	b.n	402af4 <_svfprintf_r+0xd84>
  402aea:	f108 0808 	add.w	r8, r8, #8
  402aee:	3e10      	subs	r6, #16
  402af0:	2e10      	cmp	r6, #16
  402af2:	dda9      	ble.n	402a48 <_svfprintf_r+0xcd8>
  402af4:	3301      	adds	r3, #1
  402af6:	3210      	adds	r2, #16
  402af8:	2b07      	cmp	r3, #7
  402afa:	9227      	str	r2, [sp, #156]	; 0x9c
  402afc:	9326      	str	r3, [sp, #152]	; 0x98
  402afe:	e888 00a0 	stmia.w	r8, {r5, r7}
  402b02:	ddf2      	ble.n	402aea <_svfprintf_r+0xd7a>
  402b04:	aa25      	add	r2, sp, #148	; 0x94
  402b06:	4621      	mov	r1, r4
  402b08:	4658      	mov	r0, fp
  402b0a:	f002 fb27 	bl	40515c <__ssprint_r>
  402b0e:	2800      	cmp	r0, #0
  402b10:	f47f aa00 	bne.w	401f14 <_svfprintf_r+0x1a4>
  402b14:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402b16:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b18:	46c8      	mov	r8, r9
  402b1a:	e7e8      	b.n	402aee <_svfprintf_r+0xd7e>
  402b1c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b1e:	9819      	ldr	r0, [sp, #100]	; 0x64
  402b20:	991a      	ldr	r1, [sp, #104]	; 0x68
  402b22:	f8c8 1000 	str.w	r1, [r8]
  402b26:	3301      	adds	r3, #1
  402b28:	4404      	add	r4, r0
  402b2a:	2b07      	cmp	r3, #7
  402b2c:	9427      	str	r4, [sp, #156]	; 0x9c
  402b2e:	f8c8 0004 	str.w	r0, [r8, #4]
  402b32:	9326      	str	r3, [sp, #152]	; 0x98
  402b34:	f300 81f5 	bgt.w	402f22 <_svfprintf_r+0x11b2>
  402b38:	f108 0808 	add.w	r8, r8, #8
  402b3c:	e7ac      	b.n	402a98 <_svfprintf_r+0xd28>
  402b3e:	9b07      	ldr	r3, [sp, #28]
  402b40:	07da      	lsls	r2, r3, #31
  402b42:	f53f adfe 	bmi.w	402742 <_svfprintf_r+0x9d2>
  402b46:	3701      	adds	r7, #1
  402b48:	3401      	adds	r4, #1
  402b4a:	2301      	movs	r3, #1
  402b4c:	2f07      	cmp	r7, #7
  402b4e:	9427      	str	r4, [sp, #156]	; 0x9c
  402b50:	9726      	str	r7, [sp, #152]	; 0x98
  402b52:	f8c8 6000 	str.w	r6, [r8]
  402b56:	f8c8 3004 	str.w	r3, [r8, #4]
  402b5a:	f77f ae25 	ble.w	4027a8 <_svfprintf_r+0xa38>
  402b5e:	e74a      	b.n	4029f6 <_svfprintf_r+0xc86>
  402b60:	aa25      	add	r2, sp, #148	; 0x94
  402b62:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402b64:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b66:	f002 faf9 	bl	40515c <__ssprint_r>
  402b6a:	2800      	cmp	r0, #0
  402b6c:	f47f a9d2 	bne.w	401f14 <_svfprintf_r+0x1a4>
  402b70:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402b72:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402b74:	46c8      	mov	r8, r9
  402b76:	e5f2      	b.n	40275e <_svfprintf_r+0x9ee>
  402b78:	aa25      	add	r2, sp, #148	; 0x94
  402b7a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402b7c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b7e:	f002 faed 	bl	40515c <__ssprint_r>
  402b82:	2800      	cmp	r0, #0
  402b84:	f47f a9c6 	bne.w	401f14 <_svfprintf_r+0x1a4>
  402b88:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402b8a:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402b8c:	46c8      	mov	r8, r9
  402b8e:	e5f5      	b.n	40277c <_svfprintf_r+0xa0c>
  402b90:	464e      	mov	r6, r9
  402b92:	f7ff b9fd 	b.w	401f90 <_svfprintf_r+0x220>
  402b96:	aa25      	add	r2, sp, #148	; 0x94
  402b98:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402b9a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b9c:	f002 fade 	bl	40515c <__ssprint_r>
  402ba0:	2800      	cmp	r0, #0
  402ba2:	f47f a9b7 	bne.w	401f14 <_svfprintf_r+0x1a4>
  402ba6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402ba8:	46c8      	mov	r8, r9
  402baa:	f7ff ba72 	b.w	402092 <_svfprintf_r+0x322>
  402bae:	9c15      	ldr	r4, [sp, #84]	; 0x54
  402bb0:	4622      	mov	r2, r4
  402bb2:	4620      	mov	r0, r4
  402bb4:	9c14      	ldr	r4, [sp, #80]	; 0x50
  402bb6:	4623      	mov	r3, r4
  402bb8:	4621      	mov	r1, r4
  402bba:	f003 fb95 	bl	4062e8 <__aeabi_dcmpun>
  402bbe:	2800      	cmp	r0, #0
  402bc0:	f040 8286 	bne.w	4030d0 <_svfprintf_r+0x1360>
  402bc4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402bc6:	3301      	adds	r3, #1
  402bc8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402bca:	f023 0320 	bic.w	r3, r3, #32
  402bce:	930e      	str	r3, [sp, #56]	; 0x38
  402bd0:	f000 81e2 	beq.w	402f98 <_svfprintf_r+0x1228>
  402bd4:	2b47      	cmp	r3, #71	; 0x47
  402bd6:	f000 811e 	beq.w	402e16 <_svfprintf_r+0x10a6>
  402bda:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  402bde:	9307      	str	r3, [sp, #28]
  402be0:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402be2:	1e1f      	subs	r7, r3, #0
  402be4:	9b15      	ldr	r3, [sp, #84]	; 0x54
  402be6:	9308      	str	r3, [sp, #32]
  402be8:	bfbb      	ittet	lt
  402bea:	463b      	movlt	r3, r7
  402bec:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  402bf0:	2300      	movge	r3, #0
  402bf2:	232d      	movlt	r3, #45	; 0x2d
  402bf4:	9310      	str	r3, [sp, #64]	; 0x40
  402bf6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402bf8:	2b66      	cmp	r3, #102	; 0x66
  402bfa:	f000 81bb 	beq.w	402f74 <_svfprintf_r+0x1204>
  402bfe:	2b46      	cmp	r3, #70	; 0x46
  402c00:	f000 80df 	beq.w	402dc2 <_svfprintf_r+0x1052>
  402c04:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402c06:	9a08      	ldr	r2, [sp, #32]
  402c08:	2b45      	cmp	r3, #69	; 0x45
  402c0a:	bf0c      	ite	eq
  402c0c:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  402c0e:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  402c10:	a823      	add	r0, sp, #140	; 0x8c
  402c12:	a920      	add	r1, sp, #128	; 0x80
  402c14:	bf08      	it	eq
  402c16:	1c5d      	addeq	r5, r3, #1
  402c18:	9004      	str	r0, [sp, #16]
  402c1a:	9103      	str	r1, [sp, #12]
  402c1c:	a81f      	add	r0, sp, #124	; 0x7c
  402c1e:	2102      	movs	r1, #2
  402c20:	463b      	mov	r3, r7
  402c22:	9002      	str	r0, [sp, #8]
  402c24:	9501      	str	r5, [sp, #4]
  402c26:	9100      	str	r1, [sp, #0]
  402c28:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c2a:	f000 fb75 	bl	403318 <_dtoa_r>
  402c2e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402c30:	2b67      	cmp	r3, #103	; 0x67
  402c32:	4606      	mov	r6, r0
  402c34:	f040 81e0 	bne.w	402ff8 <_svfprintf_r+0x1288>
  402c38:	f01b 0f01 	tst.w	fp, #1
  402c3c:	f000 8246 	beq.w	4030cc <_svfprintf_r+0x135c>
  402c40:	1974      	adds	r4, r6, r5
  402c42:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402c44:	9808      	ldr	r0, [sp, #32]
  402c46:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402c48:	4639      	mov	r1, r7
  402c4a:	f003 fb1b 	bl	406284 <__aeabi_dcmpeq>
  402c4e:	2800      	cmp	r0, #0
  402c50:	f040 8165 	bne.w	402f1e <_svfprintf_r+0x11ae>
  402c54:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402c56:	42a3      	cmp	r3, r4
  402c58:	d206      	bcs.n	402c68 <_svfprintf_r+0xef8>
  402c5a:	2130      	movs	r1, #48	; 0x30
  402c5c:	1c5a      	adds	r2, r3, #1
  402c5e:	9223      	str	r2, [sp, #140]	; 0x8c
  402c60:	7019      	strb	r1, [r3, #0]
  402c62:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402c64:	429c      	cmp	r4, r3
  402c66:	d8f9      	bhi.n	402c5c <_svfprintf_r+0xeec>
  402c68:	1b9b      	subs	r3, r3, r6
  402c6a:	9313      	str	r3, [sp, #76]	; 0x4c
  402c6c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402c6e:	2b47      	cmp	r3, #71	; 0x47
  402c70:	f000 80e9 	beq.w	402e46 <_svfprintf_r+0x10d6>
  402c74:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402c76:	2b65      	cmp	r3, #101	; 0x65
  402c78:	f340 81cd 	ble.w	403016 <_svfprintf_r+0x12a6>
  402c7c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402c7e:	2b66      	cmp	r3, #102	; 0x66
  402c80:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402c82:	9312      	str	r3, [sp, #72]	; 0x48
  402c84:	f000 819e 	beq.w	402fc4 <_svfprintf_r+0x1254>
  402c88:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402c8a:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402c8c:	4619      	mov	r1, r3
  402c8e:	4291      	cmp	r1, r2
  402c90:	f300 818a 	bgt.w	402fa8 <_svfprintf_r+0x1238>
  402c94:	f01b 0f01 	tst.w	fp, #1
  402c98:	f040 8213 	bne.w	4030c2 <_svfprintf_r+0x1352>
  402c9c:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  402ca0:	9308      	str	r3, [sp, #32]
  402ca2:	2367      	movs	r3, #103	; 0x67
  402ca4:	920e      	str	r2, [sp, #56]	; 0x38
  402ca6:	9311      	str	r3, [sp, #68]	; 0x44
  402ca8:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402caa:	2b00      	cmp	r3, #0
  402cac:	f040 80c4 	bne.w	402e38 <_svfprintf_r+0x10c8>
  402cb0:	930a      	str	r3, [sp, #40]	; 0x28
  402cb2:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402cb6:	f7ff b973 	b.w	401fa0 <_svfprintf_r+0x230>
  402cba:	4635      	mov	r5, r6
  402cbc:	460c      	mov	r4, r1
  402cbe:	4646      	mov	r6, r8
  402cc0:	4690      	mov	r8, r2
  402cc2:	3301      	adds	r3, #1
  402cc4:	443c      	add	r4, r7
  402cc6:	2b07      	cmp	r3, #7
  402cc8:	9427      	str	r4, [sp, #156]	; 0x9c
  402cca:	9326      	str	r3, [sp, #152]	; 0x98
  402ccc:	e888 00a0 	stmia.w	r8, {r5, r7}
  402cd0:	f73f aed1 	bgt.w	402a76 <_svfprintf_r+0xd06>
  402cd4:	f108 0808 	add.w	r8, r8, #8
  402cd8:	e6d7      	b.n	402a8a <_svfprintf_r+0xd1a>
  402cda:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402cdc:	6813      	ldr	r3, [r2, #0]
  402cde:	3204      	adds	r2, #4
  402ce0:	920f      	str	r2, [sp, #60]	; 0x3c
  402ce2:	9a09      	ldr	r2, [sp, #36]	; 0x24
  402ce4:	601a      	str	r2, [r3, #0]
  402ce6:	f7ff b86a 	b.w	401dbe <_svfprintf_r+0x4e>
  402cea:	aa25      	add	r2, sp, #148	; 0x94
  402cec:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402cee:	980c      	ldr	r0, [sp, #48]	; 0x30
  402cf0:	f002 fa34 	bl	40515c <__ssprint_r>
  402cf4:	2800      	cmp	r0, #0
  402cf6:	f47f a90d 	bne.w	401f14 <_svfprintf_r+0x1a4>
  402cfa:	46c8      	mov	r8, r9
  402cfc:	e48d      	b.n	40261a <_svfprintf_r+0x8aa>
  402cfe:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d00:	4a27      	ldr	r2, [pc, #156]	; (402da0 <_svfprintf_r+0x1030>)
  402d02:	f8c8 2000 	str.w	r2, [r8]
  402d06:	3301      	adds	r3, #1
  402d08:	3401      	adds	r4, #1
  402d0a:	2201      	movs	r2, #1
  402d0c:	2b07      	cmp	r3, #7
  402d0e:	9427      	str	r4, [sp, #156]	; 0x9c
  402d10:	9326      	str	r3, [sp, #152]	; 0x98
  402d12:	f8c8 2004 	str.w	r2, [r8, #4]
  402d16:	dc72      	bgt.n	402dfe <_svfprintf_r+0x108e>
  402d18:	f108 0808 	add.w	r8, r8, #8
  402d1c:	b929      	cbnz	r1, 402d2a <_svfprintf_r+0xfba>
  402d1e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402d20:	b91b      	cbnz	r3, 402d2a <_svfprintf_r+0xfba>
  402d22:	9b07      	ldr	r3, [sp, #28]
  402d24:	07d8      	lsls	r0, r3, #31
  402d26:	f57f aa03 	bpl.w	402130 <_svfprintf_r+0x3c0>
  402d2a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d2c:	9819      	ldr	r0, [sp, #100]	; 0x64
  402d2e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402d30:	f8c8 2000 	str.w	r2, [r8]
  402d34:	3301      	adds	r3, #1
  402d36:	4602      	mov	r2, r0
  402d38:	4422      	add	r2, r4
  402d3a:	2b07      	cmp	r3, #7
  402d3c:	9227      	str	r2, [sp, #156]	; 0x9c
  402d3e:	f8c8 0004 	str.w	r0, [r8, #4]
  402d42:	9326      	str	r3, [sp, #152]	; 0x98
  402d44:	f300 818d 	bgt.w	403062 <_svfprintf_r+0x12f2>
  402d48:	f108 0808 	add.w	r8, r8, #8
  402d4c:	2900      	cmp	r1, #0
  402d4e:	f2c0 8165 	blt.w	40301c <_svfprintf_r+0x12ac>
  402d52:	9913      	ldr	r1, [sp, #76]	; 0x4c
  402d54:	f8c8 6000 	str.w	r6, [r8]
  402d58:	3301      	adds	r3, #1
  402d5a:	188c      	adds	r4, r1, r2
  402d5c:	2b07      	cmp	r3, #7
  402d5e:	9427      	str	r4, [sp, #156]	; 0x9c
  402d60:	9326      	str	r3, [sp, #152]	; 0x98
  402d62:	f8c8 1004 	str.w	r1, [r8, #4]
  402d66:	f77f a9e1 	ble.w	40212c <_svfprintf_r+0x3bc>
  402d6a:	e52c      	b.n	4027c6 <_svfprintf_r+0xa56>
  402d6c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402d6e:	9909      	ldr	r1, [sp, #36]	; 0x24
  402d70:	6813      	ldr	r3, [r2, #0]
  402d72:	17cd      	asrs	r5, r1, #31
  402d74:	4608      	mov	r0, r1
  402d76:	3204      	adds	r2, #4
  402d78:	4629      	mov	r1, r5
  402d7a:	920f      	str	r2, [sp, #60]	; 0x3c
  402d7c:	e9c3 0100 	strd	r0, r1, [r3]
  402d80:	f7ff b81d 	b.w	401dbe <_svfprintf_r+0x4e>
  402d84:	aa25      	add	r2, sp, #148	; 0x94
  402d86:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d88:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d8a:	f002 f9e7 	bl	40515c <__ssprint_r>
  402d8e:	2800      	cmp	r0, #0
  402d90:	f47f a8c0 	bne.w	401f14 <_svfprintf_r+0x1a4>
  402d94:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402d96:	46c8      	mov	r8, r9
  402d98:	e458      	b.n	40264c <_svfprintf_r+0x8dc>
  402d9a:	bf00      	nop
  402d9c:	004073c4 	.word	0x004073c4
  402da0:	004073b0 	.word	0x004073b0
  402da4:	2140      	movs	r1, #64	; 0x40
  402da6:	980c      	ldr	r0, [sp, #48]	; 0x30
  402da8:	f001 fa0c 	bl	4041c4 <_malloc_r>
  402dac:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402dae:	6010      	str	r0, [r2, #0]
  402db0:	6110      	str	r0, [r2, #16]
  402db2:	2800      	cmp	r0, #0
  402db4:	f000 81f2 	beq.w	40319c <_svfprintf_r+0x142c>
  402db8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402dba:	2340      	movs	r3, #64	; 0x40
  402dbc:	6153      	str	r3, [r2, #20]
  402dbe:	f7fe bfee 	b.w	401d9e <_svfprintf_r+0x2e>
  402dc2:	a823      	add	r0, sp, #140	; 0x8c
  402dc4:	a920      	add	r1, sp, #128	; 0x80
  402dc6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  402dc8:	9004      	str	r0, [sp, #16]
  402dca:	9103      	str	r1, [sp, #12]
  402dcc:	a81f      	add	r0, sp, #124	; 0x7c
  402dce:	2103      	movs	r1, #3
  402dd0:	9002      	str	r0, [sp, #8]
  402dd2:	9a08      	ldr	r2, [sp, #32]
  402dd4:	9401      	str	r4, [sp, #4]
  402dd6:	463b      	mov	r3, r7
  402dd8:	9100      	str	r1, [sp, #0]
  402dda:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ddc:	f000 fa9c 	bl	403318 <_dtoa_r>
  402de0:	4625      	mov	r5, r4
  402de2:	4606      	mov	r6, r0
  402de4:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402de6:	2b46      	cmp	r3, #70	; 0x46
  402de8:	eb06 0405 	add.w	r4, r6, r5
  402dec:	f47f af29 	bne.w	402c42 <_svfprintf_r+0xed2>
  402df0:	7833      	ldrb	r3, [r6, #0]
  402df2:	2b30      	cmp	r3, #48	; 0x30
  402df4:	f000 8178 	beq.w	4030e8 <_svfprintf_r+0x1378>
  402df8:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  402dfa:	442c      	add	r4, r5
  402dfc:	e721      	b.n	402c42 <_svfprintf_r+0xed2>
  402dfe:	aa25      	add	r2, sp, #148	; 0x94
  402e00:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e02:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e04:	f002 f9aa 	bl	40515c <__ssprint_r>
  402e08:	2800      	cmp	r0, #0
  402e0a:	f47f a883 	bne.w	401f14 <_svfprintf_r+0x1a4>
  402e0e:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402e10:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e12:	46c8      	mov	r8, r9
  402e14:	e782      	b.n	402d1c <_svfprintf_r+0xfac>
  402e16:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402e18:	2b00      	cmp	r3, #0
  402e1a:	bf08      	it	eq
  402e1c:	2301      	moveq	r3, #1
  402e1e:	930a      	str	r3, [sp, #40]	; 0x28
  402e20:	e6db      	b.n	402bda <_svfprintf_r+0xe6a>
  402e22:	4630      	mov	r0, r6
  402e24:	940a      	str	r4, [sp, #40]	; 0x28
  402e26:	f002 f92b 	bl	405080 <strlen>
  402e2a:	950f      	str	r5, [sp, #60]	; 0x3c
  402e2c:	900e      	str	r0, [sp, #56]	; 0x38
  402e2e:	f8cd b01c 	str.w	fp, [sp, #28]
  402e32:	4603      	mov	r3, r0
  402e34:	f7ff b9f9 	b.w	40222a <_svfprintf_r+0x4ba>
  402e38:	272d      	movs	r7, #45	; 0x2d
  402e3a:	2300      	movs	r3, #0
  402e3c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402e40:	930a      	str	r3, [sp, #40]	; 0x28
  402e42:	f7ff b8ae 	b.w	401fa2 <_svfprintf_r+0x232>
  402e46:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402e48:	9312      	str	r3, [sp, #72]	; 0x48
  402e4a:	461a      	mov	r2, r3
  402e4c:	3303      	adds	r3, #3
  402e4e:	db04      	blt.n	402e5a <_svfprintf_r+0x10ea>
  402e50:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402e52:	4619      	mov	r1, r3
  402e54:	4291      	cmp	r1, r2
  402e56:	f6bf af17 	bge.w	402c88 <_svfprintf_r+0xf18>
  402e5a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402e5c:	3b02      	subs	r3, #2
  402e5e:	9311      	str	r3, [sp, #68]	; 0x44
  402e60:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  402e64:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  402e68:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402e6a:	3b01      	subs	r3, #1
  402e6c:	2b00      	cmp	r3, #0
  402e6e:	931f      	str	r3, [sp, #124]	; 0x7c
  402e70:	bfbd      	ittte	lt
  402e72:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  402e74:	f1c3 0301 	rsblt	r3, r3, #1
  402e78:	222d      	movlt	r2, #45	; 0x2d
  402e7a:	222b      	movge	r2, #43	; 0x2b
  402e7c:	2b09      	cmp	r3, #9
  402e7e:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  402e82:	f340 8116 	ble.w	4030b2 <_svfprintf_r+0x1342>
  402e86:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  402e8a:	4620      	mov	r0, r4
  402e8c:	4dab      	ldr	r5, [pc, #684]	; (40313c <_svfprintf_r+0x13cc>)
  402e8e:	e000      	b.n	402e92 <_svfprintf_r+0x1122>
  402e90:	4610      	mov	r0, r2
  402e92:	fb85 1203 	smull	r1, r2, r5, r3
  402e96:	17d9      	asrs	r1, r3, #31
  402e98:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  402e9c:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  402ea0:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  402ea4:	3230      	adds	r2, #48	; 0x30
  402ea6:	2909      	cmp	r1, #9
  402ea8:	f800 2c01 	strb.w	r2, [r0, #-1]
  402eac:	460b      	mov	r3, r1
  402eae:	f100 32ff 	add.w	r2, r0, #4294967295
  402eb2:	dced      	bgt.n	402e90 <_svfprintf_r+0x1120>
  402eb4:	3330      	adds	r3, #48	; 0x30
  402eb6:	3802      	subs	r0, #2
  402eb8:	b2d9      	uxtb	r1, r3
  402eba:	4284      	cmp	r4, r0
  402ebc:	f802 1c01 	strb.w	r1, [r2, #-1]
  402ec0:	f240 8165 	bls.w	40318e <_svfprintf_r+0x141e>
  402ec4:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  402ec8:	4613      	mov	r3, r2
  402eca:	e001      	b.n	402ed0 <_svfprintf_r+0x1160>
  402ecc:	f813 1b01 	ldrb.w	r1, [r3], #1
  402ed0:	f800 1b01 	strb.w	r1, [r0], #1
  402ed4:	42a3      	cmp	r3, r4
  402ed6:	d1f9      	bne.n	402ecc <_svfprintf_r+0x115c>
  402ed8:	3301      	adds	r3, #1
  402eda:	1a9b      	subs	r3, r3, r2
  402edc:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  402ee0:	4413      	add	r3, r2
  402ee2:	aa21      	add	r2, sp, #132	; 0x84
  402ee4:	1a9b      	subs	r3, r3, r2
  402ee6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402ee8:	931b      	str	r3, [sp, #108]	; 0x6c
  402eea:	2a01      	cmp	r2, #1
  402eec:	4413      	add	r3, r2
  402eee:	930e      	str	r3, [sp, #56]	; 0x38
  402ef0:	f340 8119 	ble.w	403126 <_svfprintf_r+0x13b6>
  402ef4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402ef6:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402ef8:	4413      	add	r3, r2
  402efa:	930e      	str	r3, [sp, #56]	; 0x38
  402efc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402f00:	9308      	str	r3, [sp, #32]
  402f02:	2300      	movs	r3, #0
  402f04:	9312      	str	r3, [sp, #72]	; 0x48
  402f06:	e6cf      	b.n	402ca8 <_svfprintf_r+0xf38>
  402f08:	aa25      	add	r2, sp, #148	; 0x94
  402f0a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f0c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f0e:	f002 f925 	bl	40515c <__ssprint_r>
  402f12:	2800      	cmp	r0, #0
  402f14:	f47e affe 	bne.w	401f14 <_svfprintf_r+0x1a4>
  402f18:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f1a:	46c8      	mov	r8, r9
  402f1c:	e4d7      	b.n	4028ce <_svfprintf_r+0xb5e>
  402f1e:	4623      	mov	r3, r4
  402f20:	e6a2      	b.n	402c68 <_svfprintf_r+0xef8>
  402f22:	aa25      	add	r2, sp, #148	; 0x94
  402f24:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f26:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f28:	f002 f918 	bl	40515c <__ssprint_r>
  402f2c:	2800      	cmp	r0, #0
  402f2e:	f47e aff1 	bne.w	401f14 <_svfprintf_r+0x1a4>
  402f32:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402f34:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f36:	46c8      	mov	r8, r9
  402f38:	e5ae      	b.n	402a98 <_svfprintf_r+0xd28>
  402f3a:	aa25      	add	r2, sp, #148	; 0x94
  402f3c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f3e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f40:	f002 f90c 	bl	40515c <__ssprint_r>
  402f44:	2800      	cmp	r0, #0
  402f46:	f47e afe5 	bne.w	401f14 <_svfprintf_r+0x1a4>
  402f4a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402f4c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402f4e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f50:	1a9a      	subs	r2, r3, r2
  402f52:	46c8      	mov	r8, r9
  402f54:	e5b8      	b.n	402ac8 <_svfprintf_r+0xd58>
  402f56:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402f58:	9612      	str	r6, [sp, #72]	; 0x48
  402f5a:	2b06      	cmp	r3, #6
  402f5c:	bf28      	it	cs
  402f5e:	2306      	movcs	r3, #6
  402f60:	960a      	str	r6, [sp, #40]	; 0x28
  402f62:	4637      	mov	r7, r6
  402f64:	9308      	str	r3, [sp, #32]
  402f66:	950f      	str	r5, [sp, #60]	; 0x3c
  402f68:	f8cd b01c 	str.w	fp, [sp, #28]
  402f6c:	930e      	str	r3, [sp, #56]	; 0x38
  402f6e:	4e74      	ldr	r6, [pc, #464]	; (403140 <_svfprintf_r+0x13d0>)
  402f70:	f7ff b816 	b.w	401fa0 <_svfprintf_r+0x230>
  402f74:	a823      	add	r0, sp, #140	; 0x8c
  402f76:	a920      	add	r1, sp, #128	; 0x80
  402f78:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  402f7a:	9004      	str	r0, [sp, #16]
  402f7c:	9103      	str	r1, [sp, #12]
  402f7e:	a81f      	add	r0, sp, #124	; 0x7c
  402f80:	2103      	movs	r1, #3
  402f82:	9002      	str	r0, [sp, #8]
  402f84:	9a08      	ldr	r2, [sp, #32]
  402f86:	9501      	str	r5, [sp, #4]
  402f88:	463b      	mov	r3, r7
  402f8a:	9100      	str	r1, [sp, #0]
  402f8c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f8e:	f000 f9c3 	bl	403318 <_dtoa_r>
  402f92:	4606      	mov	r6, r0
  402f94:	1944      	adds	r4, r0, r5
  402f96:	e72b      	b.n	402df0 <_svfprintf_r+0x1080>
  402f98:	2306      	movs	r3, #6
  402f9a:	930a      	str	r3, [sp, #40]	; 0x28
  402f9c:	e61d      	b.n	402bda <_svfprintf_r+0xe6a>
  402f9e:	272d      	movs	r7, #45	; 0x2d
  402fa0:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402fa4:	f7ff bacd 	b.w	402542 <_svfprintf_r+0x7d2>
  402fa8:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402faa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402fac:	4413      	add	r3, r2
  402fae:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402fb0:	930e      	str	r3, [sp, #56]	; 0x38
  402fb2:	2a00      	cmp	r2, #0
  402fb4:	f340 80b0 	ble.w	403118 <_svfprintf_r+0x13a8>
  402fb8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402fbc:	9308      	str	r3, [sp, #32]
  402fbe:	2367      	movs	r3, #103	; 0x67
  402fc0:	9311      	str	r3, [sp, #68]	; 0x44
  402fc2:	e671      	b.n	402ca8 <_svfprintf_r+0xf38>
  402fc4:	2b00      	cmp	r3, #0
  402fc6:	f340 80c3 	ble.w	403150 <_svfprintf_r+0x13e0>
  402fca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402fcc:	2a00      	cmp	r2, #0
  402fce:	f040 8099 	bne.w	403104 <_svfprintf_r+0x1394>
  402fd2:	f01b 0f01 	tst.w	fp, #1
  402fd6:	f040 8095 	bne.w	403104 <_svfprintf_r+0x1394>
  402fda:	9308      	str	r3, [sp, #32]
  402fdc:	930e      	str	r3, [sp, #56]	; 0x38
  402fde:	e663      	b.n	402ca8 <_svfprintf_r+0xf38>
  402fe0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402fe2:	9308      	str	r3, [sp, #32]
  402fe4:	930e      	str	r3, [sp, #56]	; 0x38
  402fe6:	900a      	str	r0, [sp, #40]	; 0x28
  402fe8:	950f      	str	r5, [sp, #60]	; 0x3c
  402fea:	f8cd b01c 	str.w	fp, [sp, #28]
  402fee:	9012      	str	r0, [sp, #72]	; 0x48
  402ff0:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402ff4:	f7fe bfd4 	b.w	401fa0 <_svfprintf_r+0x230>
  402ff8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402ffa:	2b47      	cmp	r3, #71	; 0x47
  402ffc:	f47f ae20 	bne.w	402c40 <_svfprintf_r+0xed0>
  403000:	f01b 0f01 	tst.w	fp, #1
  403004:	f47f aeee 	bne.w	402de4 <_svfprintf_r+0x1074>
  403008:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40300a:	1b9b      	subs	r3, r3, r6
  40300c:	9313      	str	r3, [sp, #76]	; 0x4c
  40300e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403010:	2b47      	cmp	r3, #71	; 0x47
  403012:	f43f af18 	beq.w	402e46 <_svfprintf_r+0x10d6>
  403016:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403018:	9312      	str	r3, [sp, #72]	; 0x48
  40301a:	e721      	b.n	402e60 <_svfprintf_r+0x10f0>
  40301c:	424f      	negs	r7, r1
  40301e:	3110      	adds	r1, #16
  403020:	4d48      	ldr	r5, [pc, #288]	; (403144 <_svfprintf_r+0x13d4>)
  403022:	da2f      	bge.n	403084 <_svfprintf_r+0x1314>
  403024:	2410      	movs	r4, #16
  403026:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40302a:	e004      	b.n	403036 <_svfprintf_r+0x12c6>
  40302c:	f108 0808 	add.w	r8, r8, #8
  403030:	3f10      	subs	r7, #16
  403032:	2f10      	cmp	r7, #16
  403034:	dd26      	ble.n	403084 <_svfprintf_r+0x1314>
  403036:	3301      	adds	r3, #1
  403038:	3210      	adds	r2, #16
  40303a:	2b07      	cmp	r3, #7
  40303c:	9227      	str	r2, [sp, #156]	; 0x9c
  40303e:	9326      	str	r3, [sp, #152]	; 0x98
  403040:	f8c8 5000 	str.w	r5, [r8]
  403044:	f8c8 4004 	str.w	r4, [r8, #4]
  403048:	ddf0      	ble.n	40302c <_svfprintf_r+0x12bc>
  40304a:	aa25      	add	r2, sp, #148	; 0x94
  40304c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40304e:	4658      	mov	r0, fp
  403050:	f002 f884 	bl	40515c <__ssprint_r>
  403054:	2800      	cmp	r0, #0
  403056:	f47e af5d 	bne.w	401f14 <_svfprintf_r+0x1a4>
  40305a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40305c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40305e:	46c8      	mov	r8, r9
  403060:	e7e6      	b.n	403030 <_svfprintf_r+0x12c0>
  403062:	aa25      	add	r2, sp, #148	; 0x94
  403064:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403066:	980c      	ldr	r0, [sp, #48]	; 0x30
  403068:	f002 f878 	bl	40515c <__ssprint_r>
  40306c:	2800      	cmp	r0, #0
  40306e:	f47e af51 	bne.w	401f14 <_svfprintf_r+0x1a4>
  403072:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403074:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403076:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403078:	46c8      	mov	r8, r9
  40307a:	e667      	b.n	402d4c <_svfprintf_r+0xfdc>
  40307c:	2000      	movs	r0, #0
  40307e:	900a      	str	r0, [sp, #40]	; 0x28
  403080:	f7fe bed0 	b.w	401e24 <_svfprintf_r+0xb4>
  403084:	3301      	adds	r3, #1
  403086:	443a      	add	r2, r7
  403088:	2b07      	cmp	r3, #7
  40308a:	e888 00a0 	stmia.w	r8, {r5, r7}
  40308e:	9227      	str	r2, [sp, #156]	; 0x9c
  403090:	9326      	str	r3, [sp, #152]	; 0x98
  403092:	f108 0808 	add.w	r8, r8, #8
  403096:	f77f ae5c 	ble.w	402d52 <_svfprintf_r+0xfe2>
  40309a:	aa25      	add	r2, sp, #148	; 0x94
  40309c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40309e:	980c      	ldr	r0, [sp, #48]	; 0x30
  4030a0:	f002 f85c 	bl	40515c <__ssprint_r>
  4030a4:	2800      	cmp	r0, #0
  4030a6:	f47e af35 	bne.w	401f14 <_svfprintf_r+0x1a4>
  4030aa:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4030ac:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4030ae:	46c8      	mov	r8, r9
  4030b0:	e64f      	b.n	402d52 <_svfprintf_r+0xfe2>
  4030b2:	3330      	adds	r3, #48	; 0x30
  4030b4:	2230      	movs	r2, #48	; 0x30
  4030b6:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  4030ba:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  4030be:	ab22      	add	r3, sp, #136	; 0x88
  4030c0:	e70f      	b.n	402ee2 <_svfprintf_r+0x1172>
  4030c2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4030c4:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4030c6:	4413      	add	r3, r2
  4030c8:	930e      	str	r3, [sp, #56]	; 0x38
  4030ca:	e775      	b.n	402fb8 <_svfprintf_r+0x1248>
  4030cc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4030ce:	e5cb      	b.n	402c68 <_svfprintf_r+0xef8>
  4030d0:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4030d2:	4e1d      	ldr	r6, [pc, #116]	; (403148 <_svfprintf_r+0x13d8>)
  4030d4:	2b00      	cmp	r3, #0
  4030d6:	bfb6      	itet	lt
  4030d8:	272d      	movlt	r7, #45	; 0x2d
  4030da:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  4030de:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  4030e2:	4b1a      	ldr	r3, [pc, #104]	; (40314c <_svfprintf_r+0x13dc>)
  4030e4:	f7ff ba2f 	b.w	402546 <_svfprintf_r+0x7d6>
  4030e8:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4030ea:	9808      	ldr	r0, [sp, #32]
  4030ec:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  4030ee:	4639      	mov	r1, r7
  4030f0:	f003 f8c8 	bl	406284 <__aeabi_dcmpeq>
  4030f4:	2800      	cmp	r0, #0
  4030f6:	f47f ae7f 	bne.w	402df8 <_svfprintf_r+0x1088>
  4030fa:	f1c5 0501 	rsb	r5, r5, #1
  4030fe:	951f      	str	r5, [sp, #124]	; 0x7c
  403100:	442c      	add	r4, r5
  403102:	e59e      	b.n	402c42 <_svfprintf_r+0xed2>
  403104:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403106:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403108:	4413      	add	r3, r2
  40310a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40310c:	441a      	add	r2, r3
  40310e:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  403112:	920e      	str	r2, [sp, #56]	; 0x38
  403114:	9308      	str	r3, [sp, #32]
  403116:	e5c7      	b.n	402ca8 <_svfprintf_r+0xf38>
  403118:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40311a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40311c:	f1c3 0301 	rsb	r3, r3, #1
  403120:	441a      	add	r2, r3
  403122:	4613      	mov	r3, r2
  403124:	e7d0      	b.n	4030c8 <_svfprintf_r+0x1358>
  403126:	f01b 0301 	ands.w	r3, fp, #1
  40312a:	9312      	str	r3, [sp, #72]	; 0x48
  40312c:	f47f aee2 	bne.w	402ef4 <_svfprintf_r+0x1184>
  403130:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403132:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403136:	9308      	str	r3, [sp, #32]
  403138:	e5b6      	b.n	402ca8 <_svfprintf_r+0xf38>
  40313a:	bf00      	nop
  40313c:	66666667 	.word	0x66666667
  403140:	004073a8 	.word	0x004073a8
  403144:	004073c4 	.word	0x004073c4
  403148:	0040737c 	.word	0x0040737c
  40314c:	00407378 	.word	0x00407378
  403150:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403152:	b913      	cbnz	r3, 40315a <_svfprintf_r+0x13ea>
  403154:	f01b 0f01 	tst.w	fp, #1
  403158:	d002      	beq.n	403160 <_svfprintf_r+0x13f0>
  40315a:	9b19      	ldr	r3, [sp, #100]	; 0x64
  40315c:	3301      	adds	r3, #1
  40315e:	e7d4      	b.n	40310a <_svfprintf_r+0x139a>
  403160:	2301      	movs	r3, #1
  403162:	e73a      	b.n	402fda <_svfprintf_r+0x126a>
  403164:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  403166:	f89a 3001 	ldrb.w	r3, [sl, #1]
  40316a:	6828      	ldr	r0, [r5, #0]
  40316c:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  403170:	900a      	str	r0, [sp, #40]	; 0x28
  403172:	4628      	mov	r0, r5
  403174:	3004      	adds	r0, #4
  403176:	46a2      	mov	sl, r4
  403178:	900f      	str	r0, [sp, #60]	; 0x3c
  40317a:	f7fe be51 	b.w	401e20 <_svfprintf_r+0xb0>
  40317e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403182:	f7ff b867 	b.w	402254 <_svfprintf_r+0x4e4>
  403186:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40318a:	f7ff ba15 	b.w	4025b8 <_svfprintf_r+0x848>
  40318e:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  403192:	e6a6      	b.n	402ee2 <_svfprintf_r+0x1172>
  403194:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403198:	f7ff b8eb 	b.w	402372 <_svfprintf_r+0x602>
  40319c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  40319e:	230c      	movs	r3, #12
  4031a0:	6013      	str	r3, [r2, #0]
  4031a2:	f04f 33ff 	mov.w	r3, #4294967295
  4031a6:	9309      	str	r3, [sp, #36]	; 0x24
  4031a8:	f7fe bebd 	b.w	401f26 <_svfprintf_r+0x1b6>
  4031ac:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4031b0:	f7ff b99a 	b.w	4024e8 <_svfprintf_r+0x778>
  4031b4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4031b8:	f7ff b976 	b.w	4024a8 <_svfprintf_r+0x738>
  4031bc:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4031c0:	f7ff b959 	b.w	402476 <_svfprintf_r+0x706>
  4031c4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4031c8:	f7ff b912 	b.w	4023f0 <_svfprintf_r+0x680>

004031cc <register_fini>:
  4031cc:	4b02      	ldr	r3, [pc, #8]	; (4031d8 <register_fini+0xc>)
  4031ce:	b113      	cbz	r3, 4031d6 <register_fini+0xa>
  4031d0:	4802      	ldr	r0, [pc, #8]	; (4031dc <register_fini+0x10>)
  4031d2:	f000 b805 	b.w	4031e0 <atexit>
  4031d6:	4770      	bx	lr
  4031d8:	00000000 	.word	0x00000000
  4031dc:	0040416d 	.word	0x0040416d

004031e0 <atexit>:
  4031e0:	2300      	movs	r3, #0
  4031e2:	4601      	mov	r1, r0
  4031e4:	461a      	mov	r2, r3
  4031e6:	4618      	mov	r0, r3
  4031e8:	f002 b836 	b.w	405258 <__register_exitproc>

004031ec <quorem>:
  4031ec:	6902      	ldr	r2, [r0, #16]
  4031ee:	690b      	ldr	r3, [r1, #16]
  4031f0:	4293      	cmp	r3, r2
  4031f2:	f300 808d 	bgt.w	403310 <quorem+0x124>
  4031f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4031fa:	f103 38ff 	add.w	r8, r3, #4294967295
  4031fe:	f101 0714 	add.w	r7, r1, #20
  403202:	f100 0b14 	add.w	fp, r0, #20
  403206:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  40320a:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  40320e:	ea4f 0488 	mov.w	r4, r8, lsl #2
  403212:	b083      	sub	sp, #12
  403214:	3201      	adds	r2, #1
  403216:	fbb3 f9f2 	udiv	r9, r3, r2
  40321a:	eb0b 0304 	add.w	r3, fp, r4
  40321e:	9400      	str	r4, [sp, #0]
  403220:	eb07 0a04 	add.w	sl, r7, r4
  403224:	9301      	str	r3, [sp, #4]
  403226:	f1b9 0f00 	cmp.w	r9, #0
  40322a:	d039      	beq.n	4032a0 <quorem+0xb4>
  40322c:	2500      	movs	r5, #0
  40322e:	462e      	mov	r6, r5
  403230:	46bc      	mov	ip, r7
  403232:	46de      	mov	lr, fp
  403234:	f85c 4b04 	ldr.w	r4, [ip], #4
  403238:	f8de 3000 	ldr.w	r3, [lr]
  40323c:	b2a2      	uxth	r2, r4
  40323e:	fb09 5502 	mla	r5, r9, r2, r5
  403242:	0c22      	lsrs	r2, r4, #16
  403244:	0c2c      	lsrs	r4, r5, #16
  403246:	fb09 4202 	mla	r2, r9, r2, r4
  40324a:	b2ad      	uxth	r5, r5
  40324c:	1b75      	subs	r5, r6, r5
  40324e:	b296      	uxth	r6, r2
  403250:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  403254:	fa15 f383 	uxtah	r3, r5, r3
  403258:	eb06 4623 	add.w	r6, r6, r3, asr #16
  40325c:	b29b      	uxth	r3, r3
  40325e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  403262:	45e2      	cmp	sl, ip
  403264:	ea4f 4512 	mov.w	r5, r2, lsr #16
  403268:	f84e 3b04 	str.w	r3, [lr], #4
  40326c:	ea4f 4626 	mov.w	r6, r6, asr #16
  403270:	d2e0      	bcs.n	403234 <quorem+0x48>
  403272:	9b00      	ldr	r3, [sp, #0]
  403274:	f85b 3003 	ldr.w	r3, [fp, r3]
  403278:	b993      	cbnz	r3, 4032a0 <quorem+0xb4>
  40327a:	9c01      	ldr	r4, [sp, #4]
  40327c:	1f23      	subs	r3, r4, #4
  40327e:	459b      	cmp	fp, r3
  403280:	d20c      	bcs.n	40329c <quorem+0xb0>
  403282:	f854 3c04 	ldr.w	r3, [r4, #-4]
  403286:	b94b      	cbnz	r3, 40329c <quorem+0xb0>
  403288:	f1a4 0308 	sub.w	r3, r4, #8
  40328c:	e002      	b.n	403294 <quorem+0xa8>
  40328e:	681a      	ldr	r2, [r3, #0]
  403290:	3b04      	subs	r3, #4
  403292:	b91a      	cbnz	r2, 40329c <quorem+0xb0>
  403294:	459b      	cmp	fp, r3
  403296:	f108 38ff 	add.w	r8, r8, #4294967295
  40329a:	d3f8      	bcc.n	40328e <quorem+0xa2>
  40329c:	f8c0 8010 	str.w	r8, [r0, #16]
  4032a0:	4604      	mov	r4, r0
  4032a2:	f001 fd69 	bl	404d78 <__mcmp>
  4032a6:	2800      	cmp	r0, #0
  4032a8:	db2e      	blt.n	403308 <quorem+0x11c>
  4032aa:	f109 0901 	add.w	r9, r9, #1
  4032ae:	465d      	mov	r5, fp
  4032b0:	2300      	movs	r3, #0
  4032b2:	f857 1b04 	ldr.w	r1, [r7], #4
  4032b6:	6828      	ldr	r0, [r5, #0]
  4032b8:	b28a      	uxth	r2, r1
  4032ba:	1a9a      	subs	r2, r3, r2
  4032bc:	0c0b      	lsrs	r3, r1, #16
  4032be:	fa12 f280 	uxtah	r2, r2, r0
  4032c2:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  4032c6:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4032ca:	b292      	uxth	r2, r2
  4032cc:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4032d0:	45ba      	cmp	sl, r7
  4032d2:	f845 2b04 	str.w	r2, [r5], #4
  4032d6:	ea4f 4323 	mov.w	r3, r3, asr #16
  4032da:	d2ea      	bcs.n	4032b2 <quorem+0xc6>
  4032dc:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  4032e0:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  4032e4:	b982      	cbnz	r2, 403308 <quorem+0x11c>
  4032e6:	1f1a      	subs	r2, r3, #4
  4032e8:	4593      	cmp	fp, r2
  4032ea:	d20b      	bcs.n	403304 <quorem+0x118>
  4032ec:	f853 2c04 	ldr.w	r2, [r3, #-4]
  4032f0:	b942      	cbnz	r2, 403304 <quorem+0x118>
  4032f2:	3b08      	subs	r3, #8
  4032f4:	e002      	b.n	4032fc <quorem+0x110>
  4032f6:	681a      	ldr	r2, [r3, #0]
  4032f8:	3b04      	subs	r3, #4
  4032fa:	b91a      	cbnz	r2, 403304 <quorem+0x118>
  4032fc:	459b      	cmp	fp, r3
  4032fe:	f108 38ff 	add.w	r8, r8, #4294967295
  403302:	d3f8      	bcc.n	4032f6 <quorem+0x10a>
  403304:	f8c4 8010 	str.w	r8, [r4, #16]
  403308:	4648      	mov	r0, r9
  40330a:	b003      	add	sp, #12
  40330c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403310:	2000      	movs	r0, #0
  403312:	4770      	bx	lr
  403314:	0000      	movs	r0, r0
	...

00403318 <_dtoa_r>:
  403318:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40331c:	6c01      	ldr	r1, [r0, #64]	; 0x40
  40331e:	b09b      	sub	sp, #108	; 0x6c
  403320:	4604      	mov	r4, r0
  403322:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  403324:	4692      	mov	sl, r2
  403326:	469b      	mov	fp, r3
  403328:	b141      	cbz	r1, 40333c <_dtoa_r+0x24>
  40332a:	6c42      	ldr	r2, [r0, #68]	; 0x44
  40332c:	604a      	str	r2, [r1, #4]
  40332e:	2301      	movs	r3, #1
  403330:	4093      	lsls	r3, r2
  403332:	608b      	str	r3, [r1, #8]
  403334:	f001 fb48 	bl	4049c8 <_Bfree>
  403338:	2300      	movs	r3, #0
  40333a:	6423      	str	r3, [r4, #64]	; 0x40
  40333c:	f1bb 0f00 	cmp.w	fp, #0
  403340:	465d      	mov	r5, fp
  403342:	db35      	blt.n	4033b0 <_dtoa_r+0x98>
  403344:	2300      	movs	r3, #0
  403346:	6033      	str	r3, [r6, #0]
  403348:	4b9d      	ldr	r3, [pc, #628]	; (4035c0 <_dtoa_r+0x2a8>)
  40334a:	43ab      	bics	r3, r5
  40334c:	d015      	beq.n	40337a <_dtoa_r+0x62>
  40334e:	4650      	mov	r0, sl
  403350:	4659      	mov	r1, fp
  403352:	2200      	movs	r2, #0
  403354:	2300      	movs	r3, #0
  403356:	f002 ff95 	bl	406284 <__aeabi_dcmpeq>
  40335a:	4680      	mov	r8, r0
  40335c:	2800      	cmp	r0, #0
  40335e:	d02d      	beq.n	4033bc <_dtoa_r+0xa4>
  403360:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403362:	2301      	movs	r3, #1
  403364:	6013      	str	r3, [r2, #0]
  403366:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403368:	2b00      	cmp	r3, #0
  40336a:	f000 80bd 	beq.w	4034e8 <_dtoa_r+0x1d0>
  40336e:	4895      	ldr	r0, [pc, #596]	; (4035c4 <_dtoa_r+0x2ac>)
  403370:	6018      	str	r0, [r3, #0]
  403372:	3801      	subs	r0, #1
  403374:	b01b      	add	sp, #108	; 0x6c
  403376:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40337a:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40337c:	f242 730f 	movw	r3, #9999	; 0x270f
  403380:	6013      	str	r3, [r2, #0]
  403382:	f1ba 0f00 	cmp.w	sl, #0
  403386:	d10d      	bne.n	4033a4 <_dtoa_r+0x8c>
  403388:	f3c5 0513 	ubfx	r5, r5, #0, #20
  40338c:	b955      	cbnz	r5, 4033a4 <_dtoa_r+0x8c>
  40338e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403390:	488d      	ldr	r0, [pc, #564]	; (4035c8 <_dtoa_r+0x2b0>)
  403392:	2b00      	cmp	r3, #0
  403394:	d0ee      	beq.n	403374 <_dtoa_r+0x5c>
  403396:	f100 0308 	add.w	r3, r0, #8
  40339a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  40339c:	6013      	str	r3, [r2, #0]
  40339e:	b01b      	add	sp, #108	; 0x6c
  4033a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4033a4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4033a6:	4889      	ldr	r0, [pc, #548]	; (4035cc <_dtoa_r+0x2b4>)
  4033a8:	2b00      	cmp	r3, #0
  4033aa:	d0e3      	beq.n	403374 <_dtoa_r+0x5c>
  4033ac:	1cc3      	adds	r3, r0, #3
  4033ae:	e7f4      	b.n	40339a <_dtoa_r+0x82>
  4033b0:	2301      	movs	r3, #1
  4033b2:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  4033b6:	6033      	str	r3, [r6, #0]
  4033b8:	46ab      	mov	fp, r5
  4033ba:	e7c5      	b.n	403348 <_dtoa_r+0x30>
  4033bc:	aa18      	add	r2, sp, #96	; 0x60
  4033be:	ab19      	add	r3, sp, #100	; 0x64
  4033c0:	9201      	str	r2, [sp, #4]
  4033c2:	9300      	str	r3, [sp, #0]
  4033c4:	4652      	mov	r2, sl
  4033c6:	465b      	mov	r3, fp
  4033c8:	4620      	mov	r0, r4
  4033ca:	f001 fd75 	bl	404eb8 <__d2b>
  4033ce:	0d2b      	lsrs	r3, r5, #20
  4033d0:	4681      	mov	r9, r0
  4033d2:	d071      	beq.n	4034b8 <_dtoa_r+0x1a0>
  4033d4:	f3cb 0213 	ubfx	r2, fp, #0, #20
  4033d8:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  4033dc:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4033de:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  4033e2:	4650      	mov	r0, sl
  4033e4:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  4033e8:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  4033ec:	2200      	movs	r2, #0
  4033ee:	4b78      	ldr	r3, [pc, #480]	; (4035d0 <_dtoa_r+0x2b8>)
  4033f0:	f002 fb2c 	bl	405a4c <__aeabi_dsub>
  4033f4:	a36c      	add	r3, pc, #432	; (adr r3, 4035a8 <_dtoa_r+0x290>)
  4033f6:	e9d3 2300 	ldrd	r2, r3, [r3]
  4033fa:	f002 fcdb 	bl	405db4 <__aeabi_dmul>
  4033fe:	a36c      	add	r3, pc, #432	; (adr r3, 4035b0 <_dtoa_r+0x298>)
  403400:	e9d3 2300 	ldrd	r2, r3, [r3]
  403404:	f002 fb24 	bl	405a50 <__adddf3>
  403408:	e9cd 0102 	strd	r0, r1, [sp, #8]
  40340c:	4630      	mov	r0, r6
  40340e:	f002 fc6b 	bl	405ce8 <__aeabi_i2d>
  403412:	a369      	add	r3, pc, #420	; (adr r3, 4035b8 <_dtoa_r+0x2a0>)
  403414:	e9d3 2300 	ldrd	r2, r3, [r3]
  403418:	f002 fccc 	bl	405db4 <__aeabi_dmul>
  40341c:	4602      	mov	r2, r0
  40341e:	460b      	mov	r3, r1
  403420:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  403424:	f002 fb14 	bl	405a50 <__adddf3>
  403428:	e9cd 0104 	strd	r0, r1, [sp, #16]
  40342c:	f002 ff72 	bl	406314 <__aeabi_d2iz>
  403430:	2200      	movs	r2, #0
  403432:	9002      	str	r0, [sp, #8]
  403434:	2300      	movs	r3, #0
  403436:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40343a:	f002 ff2d 	bl	406298 <__aeabi_dcmplt>
  40343e:	2800      	cmp	r0, #0
  403440:	f040 8173 	bne.w	40372a <_dtoa_r+0x412>
  403444:	9d02      	ldr	r5, [sp, #8]
  403446:	2d16      	cmp	r5, #22
  403448:	f200 815d 	bhi.w	403706 <_dtoa_r+0x3ee>
  40344c:	4b61      	ldr	r3, [pc, #388]	; (4035d4 <_dtoa_r+0x2bc>)
  40344e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  403452:	e9d3 0100 	ldrd	r0, r1, [r3]
  403456:	4652      	mov	r2, sl
  403458:	465b      	mov	r3, fp
  40345a:	f002 ff3b 	bl	4062d4 <__aeabi_dcmpgt>
  40345e:	2800      	cmp	r0, #0
  403460:	f000 81c5 	beq.w	4037ee <_dtoa_r+0x4d6>
  403464:	1e6b      	subs	r3, r5, #1
  403466:	9302      	str	r3, [sp, #8]
  403468:	2300      	movs	r3, #0
  40346a:	930e      	str	r3, [sp, #56]	; 0x38
  40346c:	1bbf      	subs	r7, r7, r6
  40346e:	1e7b      	subs	r3, r7, #1
  403470:	9306      	str	r3, [sp, #24]
  403472:	f100 8154 	bmi.w	40371e <_dtoa_r+0x406>
  403476:	2300      	movs	r3, #0
  403478:	9308      	str	r3, [sp, #32]
  40347a:	9b02      	ldr	r3, [sp, #8]
  40347c:	2b00      	cmp	r3, #0
  40347e:	f2c0 8145 	blt.w	40370c <_dtoa_r+0x3f4>
  403482:	9a06      	ldr	r2, [sp, #24]
  403484:	930d      	str	r3, [sp, #52]	; 0x34
  403486:	4611      	mov	r1, r2
  403488:	4419      	add	r1, r3
  40348a:	2300      	movs	r3, #0
  40348c:	9106      	str	r1, [sp, #24]
  40348e:	930c      	str	r3, [sp, #48]	; 0x30
  403490:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403492:	2b09      	cmp	r3, #9
  403494:	d82a      	bhi.n	4034ec <_dtoa_r+0x1d4>
  403496:	2b05      	cmp	r3, #5
  403498:	f340 865b 	ble.w	404152 <_dtoa_r+0xe3a>
  40349c:	3b04      	subs	r3, #4
  40349e:	9324      	str	r3, [sp, #144]	; 0x90
  4034a0:	2500      	movs	r5, #0
  4034a2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4034a4:	3b02      	subs	r3, #2
  4034a6:	2b03      	cmp	r3, #3
  4034a8:	f200 8642 	bhi.w	404130 <_dtoa_r+0xe18>
  4034ac:	e8df f013 	tbh	[pc, r3, lsl #1]
  4034b0:	02c903d4 	.word	0x02c903d4
  4034b4:	046103df 	.word	0x046103df
  4034b8:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4034ba:	9e19      	ldr	r6, [sp, #100]	; 0x64
  4034bc:	443e      	add	r6, r7
  4034be:	f206 4332 	addw	r3, r6, #1074	; 0x432
  4034c2:	2b20      	cmp	r3, #32
  4034c4:	f340 818e 	ble.w	4037e4 <_dtoa_r+0x4cc>
  4034c8:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  4034cc:	f206 4012 	addw	r0, r6, #1042	; 0x412
  4034d0:	409d      	lsls	r5, r3
  4034d2:	fa2a f000 	lsr.w	r0, sl, r0
  4034d6:	4328      	orrs	r0, r5
  4034d8:	f002 fbf6 	bl	405cc8 <__aeabi_ui2d>
  4034dc:	2301      	movs	r3, #1
  4034de:	3e01      	subs	r6, #1
  4034e0:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  4034e4:	9314      	str	r3, [sp, #80]	; 0x50
  4034e6:	e781      	b.n	4033ec <_dtoa_r+0xd4>
  4034e8:	483b      	ldr	r0, [pc, #236]	; (4035d8 <_dtoa_r+0x2c0>)
  4034ea:	e743      	b.n	403374 <_dtoa_r+0x5c>
  4034ec:	2100      	movs	r1, #0
  4034ee:	6461      	str	r1, [r4, #68]	; 0x44
  4034f0:	4620      	mov	r0, r4
  4034f2:	9125      	str	r1, [sp, #148]	; 0x94
  4034f4:	f001 fa42 	bl	40497c <_Balloc>
  4034f8:	f04f 33ff 	mov.w	r3, #4294967295
  4034fc:	930a      	str	r3, [sp, #40]	; 0x28
  4034fe:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403500:	930f      	str	r3, [sp, #60]	; 0x3c
  403502:	2301      	movs	r3, #1
  403504:	9004      	str	r0, [sp, #16]
  403506:	6420      	str	r0, [r4, #64]	; 0x40
  403508:	9224      	str	r2, [sp, #144]	; 0x90
  40350a:	930b      	str	r3, [sp, #44]	; 0x2c
  40350c:	9b19      	ldr	r3, [sp, #100]	; 0x64
  40350e:	2b00      	cmp	r3, #0
  403510:	f2c0 80d9 	blt.w	4036c6 <_dtoa_r+0x3ae>
  403514:	9a02      	ldr	r2, [sp, #8]
  403516:	2a0e      	cmp	r2, #14
  403518:	f300 80d5 	bgt.w	4036c6 <_dtoa_r+0x3ae>
  40351c:	4b2d      	ldr	r3, [pc, #180]	; (4035d4 <_dtoa_r+0x2bc>)
  40351e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403522:	e9d3 2300 	ldrd	r2, r3, [r3]
  403526:	e9cd 2308 	strd	r2, r3, [sp, #32]
  40352a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40352c:	2b00      	cmp	r3, #0
  40352e:	f2c0 83ba 	blt.w	403ca6 <_dtoa_r+0x98e>
  403532:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  403536:	4650      	mov	r0, sl
  403538:	462a      	mov	r2, r5
  40353a:	4633      	mov	r3, r6
  40353c:	4659      	mov	r1, fp
  40353e:	f002 fd63 	bl	406008 <__aeabi_ddiv>
  403542:	f002 fee7 	bl	406314 <__aeabi_d2iz>
  403546:	4680      	mov	r8, r0
  403548:	f002 fbce 	bl	405ce8 <__aeabi_i2d>
  40354c:	462a      	mov	r2, r5
  40354e:	4633      	mov	r3, r6
  403550:	f002 fc30 	bl	405db4 <__aeabi_dmul>
  403554:	460b      	mov	r3, r1
  403556:	4602      	mov	r2, r0
  403558:	4659      	mov	r1, fp
  40355a:	4650      	mov	r0, sl
  40355c:	f002 fa76 	bl	405a4c <__aeabi_dsub>
  403560:	9d04      	ldr	r5, [sp, #16]
  403562:	f108 0330 	add.w	r3, r8, #48	; 0x30
  403566:	702b      	strb	r3, [r5, #0]
  403568:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40356a:	2b01      	cmp	r3, #1
  40356c:	4606      	mov	r6, r0
  40356e:	460f      	mov	r7, r1
  403570:	f105 0501 	add.w	r5, r5, #1
  403574:	d068      	beq.n	403648 <_dtoa_r+0x330>
  403576:	2200      	movs	r2, #0
  403578:	4b18      	ldr	r3, [pc, #96]	; (4035dc <_dtoa_r+0x2c4>)
  40357a:	f002 fc1b 	bl	405db4 <__aeabi_dmul>
  40357e:	2200      	movs	r2, #0
  403580:	2300      	movs	r3, #0
  403582:	4606      	mov	r6, r0
  403584:	460f      	mov	r7, r1
  403586:	f002 fe7d 	bl	406284 <__aeabi_dcmpeq>
  40358a:	2800      	cmp	r0, #0
  40358c:	f040 8088 	bne.w	4036a0 <_dtoa_r+0x388>
  403590:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  403594:	f04f 0a00 	mov.w	sl, #0
  403598:	f8df b040 	ldr.w	fp, [pc, #64]	; 4035dc <_dtoa_r+0x2c4>
  40359c:	940c      	str	r4, [sp, #48]	; 0x30
  40359e:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  4035a2:	e028      	b.n	4035f6 <_dtoa_r+0x2de>
  4035a4:	f3af 8000 	nop.w
  4035a8:	636f4361 	.word	0x636f4361
  4035ac:	3fd287a7 	.word	0x3fd287a7
  4035b0:	8b60c8b3 	.word	0x8b60c8b3
  4035b4:	3fc68a28 	.word	0x3fc68a28
  4035b8:	509f79fb 	.word	0x509f79fb
  4035bc:	3fd34413 	.word	0x3fd34413
  4035c0:	7ff00000 	.word	0x7ff00000
  4035c4:	004073b1 	.word	0x004073b1
  4035c8:	004073d4 	.word	0x004073d4
  4035cc:	004073e0 	.word	0x004073e0
  4035d0:	3ff80000 	.word	0x3ff80000
  4035d4:	00407410 	.word	0x00407410
  4035d8:	004073b0 	.word	0x004073b0
  4035dc:	40240000 	.word	0x40240000
  4035e0:	f002 fbe8 	bl	405db4 <__aeabi_dmul>
  4035e4:	2200      	movs	r2, #0
  4035e6:	2300      	movs	r3, #0
  4035e8:	4606      	mov	r6, r0
  4035ea:	460f      	mov	r7, r1
  4035ec:	f002 fe4a 	bl	406284 <__aeabi_dcmpeq>
  4035f0:	2800      	cmp	r0, #0
  4035f2:	f040 83c1 	bne.w	403d78 <_dtoa_r+0xa60>
  4035f6:	4642      	mov	r2, r8
  4035f8:	464b      	mov	r3, r9
  4035fa:	4630      	mov	r0, r6
  4035fc:	4639      	mov	r1, r7
  4035fe:	f002 fd03 	bl	406008 <__aeabi_ddiv>
  403602:	f002 fe87 	bl	406314 <__aeabi_d2iz>
  403606:	4604      	mov	r4, r0
  403608:	f002 fb6e 	bl	405ce8 <__aeabi_i2d>
  40360c:	4642      	mov	r2, r8
  40360e:	464b      	mov	r3, r9
  403610:	f002 fbd0 	bl	405db4 <__aeabi_dmul>
  403614:	4602      	mov	r2, r0
  403616:	460b      	mov	r3, r1
  403618:	4630      	mov	r0, r6
  40361a:	4639      	mov	r1, r7
  40361c:	f002 fa16 	bl	405a4c <__aeabi_dsub>
  403620:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  403624:	9e04      	ldr	r6, [sp, #16]
  403626:	f805 eb01 	strb.w	lr, [r5], #1
  40362a:	eba5 0e06 	sub.w	lr, r5, r6
  40362e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403630:	45b6      	cmp	lr, r6
  403632:	e9cd 0106 	strd	r0, r1, [sp, #24]
  403636:	4652      	mov	r2, sl
  403638:	465b      	mov	r3, fp
  40363a:	d1d1      	bne.n	4035e0 <_dtoa_r+0x2c8>
  40363c:	46a0      	mov	r8, r4
  40363e:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403642:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403644:	4606      	mov	r6, r0
  403646:	460f      	mov	r7, r1
  403648:	4632      	mov	r2, r6
  40364a:	463b      	mov	r3, r7
  40364c:	4630      	mov	r0, r6
  40364e:	4639      	mov	r1, r7
  403650:	f002 f9fe 	bl	405a50 <__adddf3>
  403654:	4606      	mov	r6, r0
  403656:	460f      	mov	r7, r1
  403658:	4602      	mov	r2, r0
  40365a:	460b      	mov	r3, r1
  40365c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403660:	f002 fe1a 	bl	406298 <__aeabi_dcmplt>
  403664:	b948      	cbnz	r0, 40367a <_dtoa_r+0x362>
  403666:	4632      	mov	r2, r6
  403668:	463b      	mov	r3, r7
  40366a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  40366e:	f002 fe09 	bl	406284 <__aeabi_dcmpeq>
  403672:	b1a8      	cbz	r0, 4036a0 <_dtoa_r+0x388>
  403674:	f018 0f01 	tst.w	r8, #1
  403678:	d012      	beq.n	4036a0 <_dtoa_r+0x388>
  40367a:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  40367e:	9a04      	ldr	r2, [sp, #16]
  403680:	1e6b      	subs	r3, r5, #1
  403682:	e004      	b.n	40368e <_dtoa_r+0x376>
  403684:	429a      	cmp	r2, r3
  403686:	f000 8401 	beq.w	403e8c <_dtoa_r+0xb74>
  40368a:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  40368e:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  403692:	f103 0501 	add.w	r5, r3, #1
  403696:	d0f5      	beq.n	403684 <_dtoa_r+0x36c>
  403698:	f108 0801 	add.w	r8, r8, #1
  40369c:	f883 8000 	strb.w	r8, [r3]
  4036a0:	4649      	mov	r1, r9
  4036a2:	4620      	mov	r0, r4
  4036a4:	f001 f990 	bl	4049c8 <_Bfree>
  4036a8:	2200      	movs	r2, #0
  4036aa:	9b02      	ldr	r3, [sp, #8]
  4036ac:	702a      	strb	r2, [r5, #0]
  4036ae:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4036b0:	3301      	adds	r3, #1
  4036b2:	6013      	str	r3, [r2, #0]
  4036b4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4036b6:	2b00      	cmp	r3, #0
  4036b8:	f000 839e 	beq.w	403df8 <_dtoa_r+0xae0>
  4036bc:	9804      	ldr	r0, [sp, #16]
  4036be:	601d      	str	r5, [r3, #0]
  4036c0:	b01b      	add	sp, #108	; 0x6c
  4036c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4036c6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4036c8:	2a00      	cmp	r2, #0
  4036ca:	d03e      	beq.n	40374a <_dtoa_r+0x432>
  4036cc:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4036ce:	2a01      	cmp	r2, #1
  4036d0:	f340 8311 	ble.w	403cf6 <_dtoa_r+0x9de>
  4036d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4036d6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4036d8:	1e5f      	subs	r7, r3, #1
  4036da:	42ba      	cmp	r2, r7
  4036dc:	f2c0 838f 	blt.w	403dfe <_dtoa_r+0xae6>
  4036e0:	1bd7      	subs	r7, r2, r7
  4036e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4036e4:	2b00      	cmp	r3, #0
  4036e6:	f2c0 848b 	blt.w	404000 <_dtoa_r+0xce8>
  4036ea:	9d08      	ldr	r5, [sp, #32]
  4036ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4036ee:	9a08      	ldr	r2, [sp, #32]
  4036f0:	441a      	add	r2, r3
  4036f2:	9208      	str	r2, [sp, #32]
  4036f4:	9a06      	ldr	r2, [sp, #24]
  4036f6:	2101      	movs	r1, #1
  4036f8:	441a      	add	r2, r3
  4036fa:	4620      	mov	r0, r4
  4036fc:	9206      	str	r2, [sp, #24]
  4036fe:	f001 f9fd 	bl	404afc <__i2b>
  403702:	4606      	mov	r6, r0
  403704:	e024      	b.n	403750 <_dtoa_r+0x438>
  403706:	2301      	movs	r3, #1
  403708:	930e      	str	r3, [sp, #56]	; 0x38
  40370a:	e6af      	b.n	40346c <_dtoa_r+0x154>
  40370c:	9a08      	ldr	r2, [sp, #32]
  40370e:	9b02      	ldr	r3, [sp, #8]
  403710:	1ad2      	subs	r2, r2, r3
  403712:	425b      	negs	r3, r3
  403714:	930c      	str	r3, [sp, #48]	; 0x30
  403716:	2300      	movs	r3, #0
  403718:	9208      	str	r2, [sp, #32]
  40371a:	930d      	str	r3, [sp, #52]	; 0x34
  40371c:	e6b8      	b.n	403490 <_dtoa_r+0x178>
  40371e:	f1c7 0301 	rsb	r3, r7, #1
  403722:	9308      	str	r3, [sp, #32]
  403724:	2300      	movs	r3, #0
  403726:	9306      	str	r3, [sp, #24]
  403728:	e6a7      	b.n	40347a <_dtoa_r+0x162>
  40372a:	9d02      	ldr	r5, [sp, #8]
  40372c:	4628      	mov	r0, r5
  40372e:	f002 fadb 	bl	405ce8 <__aeabi_i2d>
  403732:	4602      	mov	r2, r0
  403734:	460b      	mov	r3, r1
  403736:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40373a:	f002 fda3 	bl	406284 <__aeabi_dcmpeq>
  40373e:	2800      	cmp	r0, #0
  403740:	f47f ae80 	bne.w	403444 <_dtoa_r+0x12c>
  403744:	1e6b      	subs	r3, r5, #1
  403746:	9302      	str	r3, [sp, #8]
  403748:	e67c      	b.n	403444 <_dtoa_r+0x12c>
  40374a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40374c:	9d08      	ldr	r5, [sp, #32]
  40374e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403750:	2d00      	cmp	r5, #0
  403752:	dd0c      	ble.n	40376e <_dtoa_r+0x456>
  403754:	9906      	ldr	r1, [sp, #24]
  403756:	2900      	cmp	r1, #0
  403758:	460b      	mov	r3, r1
  40375a:	dd08      	ble.n	40376e <_dtoa_r+0x456>
  40375c:	42a9      	cmp	r1, r5
  40375e:	9a08      	ldr	r2, [sp, #32]
  403760:	bfa8      	it	ge
  403762:	462b      	movge	r3, r5
  403764:	1ad2      	subs	r2, r2, r3
  403766:	1aed      	subs	r5, r5, r3
  403768:	1acb      	subs	r3, r1, r3
  40376a:	9208      	str	r2, [sp, #32]
  40376c:	9306      	str	r3, [sp, #24]
  40376e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403770:	b1d3      	cbz	r3, 4037a8 <_dtoa_r+0x490>
  403772:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403774:	2b00      	cmp	r3, #0
  403776:	f000 82b7 	beq.w	403ce8 <_dtoa_r+0x9d0>
  40377a:	2f00      	cmp	r7, #0
  40377c:	dd10      	ble.n	4037a0 <_dtoa_r+0x488>
  40377e:	4631      	mov	r1, r6
  403780:	463a      	mov	r2, r7
  403782:	4620      	mov	r0, r4
  403784:	f001 fa56 	bl	404c34 <__pow5mult>
  403788:	464a      	mov	r2, r9
  40378a:	4601      	mov	r1, r0
  40378c:	4606      	mov	r6, r0
  40378e:	4620      	mov	r0, r4
  403790:	f001 f9be 	bl	404b10 <__multiply>
  403794:	4649      	mov	r1, r9
  403796:	4680      	mov	r8, r0
  403798:	4620      	mov	r0, r4
  40379a:	f001 f915 	bl	4049c8 <_Bfree>
  40379e:	46c1      	mov	r9, r8
  4037a0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4037a2:	1bda      	subs	r2, r3, r7
  4037a4:	f040 82a1 	bne.w	403cea <_dtoa_r+0x9d2>
  4037a8:	2101      	movs	r1, #1
  4037aa:	4620      	mov	r0, r4
  4037ac:	f001 f9a6 	bl	404afc <__i2b>
  4037b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4037b2:	2b00      	cmp	r3, #0
  4037b4:	4680      	mov	r8, r0
  4037b6:	dd1c      	ble.n	4037f2 <_dtoa_r+0x4da>
  4037b8:	4601      	mov	r1, r0
  4037ba:	461a      	mov	r2, r3
  4037bc:	4620      	mov	r0, r4
  4037be:	f001 fa39 	bl	404c34 <__pow5mult>
  4037c2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4037c4:	2b01      	cmp	r3, #1
  4037c6:	4680      	mov	r8, r0
  4037c8:	f340 8254 	ble.w	403c74 <_dtoa_r+0x95c>
  4037cc:	2300      	movs	r3, #0
  4037ce:	930c      	str	r3, [sp, #48]	; 0x30
  4037d0:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4037d4:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  4037d8:	6918      	ldr	r0, [r3, #16]
  4037da:	f001 f93f 	bl	404a5c <__hi0bits>
  4037de:	f1c0 0020 	rsb	r0, r0, #32
  4037e2:	e010      	b.n	403806 <_dtoa_r+0x4ee>
  4037e4:	f1c3 0520 	rsb	r5, r3, #32
  4037e8:	fa0a f005 	lsl.w	r0, sl, r5
  4037ec:	e674      	b.n	4034d8 <_dtoa_r+0x1c0>
  4037ee:	900e      	str	r0, [sp, #56]	; 0x38
  4037f0:	e63c      	b.n	40346c <_dtoa_r+0x154>
  4037f2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4037f4:	2b01      	cmp	r3, #1
  4037f6:	f340 8287 	ble.w	403d08 <_dtoa_r+0x9f0>
  4037fa:	2300      	movs	r3, #0
  4037fc:	930c      	str	r3, [sp, #48]	; 0x30
  4037fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403800:	2001      	movs	r0, #1
  403802:	2b00      	cmp	r3, #0
  403804:	d1e4      	bne.n	4037d0 <_dtoa_r+0x4b8>
  403806:	9a06      	ldr	r2, [sp, #24]
  403808:	4410      	add	r0, r2
  40380a:	f010 001f 	ands.w	r0, r0, #31
  40380e:	f000 80a1 	beq.w	403954 <_dtoa_r+0x63c>
  403812:	f1c0 0320 	rsb	r3, r0, #32
  403816:	2b04      	cmp	r3, #4
  403818:	f340 849e 	ble.w	404158 <_dtoa_r+0xe40>
  40381c:	9b08      	ldr	r3, [sp, #32]
  40381e:	f1c0 001c 	rsb	r0, r0, #28
  403822:	4403      	add	r3, r0
  403824:	9308      	str	r3, [sp, #32]
  403826:	4613      	mov	r3, r2
  403828:	4403      	add	r3, r0
  40382a:	4405      	add	r5, r0
  40382c:	9306      	str	r3, [sp, #24]
  40382e:	9b08      	ldr	r3, [sp, #32]
  403830:	2b00      	cmp	r3, #0
  403832:	dd05      	ble.n	403840 <_dtoa_r+0x528>
  403834:	4649      	mov	r1, r9
  403836:	461a      	mov	r2, r3
  403838:	4620      	mov	r0, r4
  40383a:	f001 fa4b 	bl	404cd4 <__lshift>
  40383e:	4681      	mov	r9, r0
  403840:	9b06      	ldr	r3, [sp, #24]
  403842:	2b00      	cmp	r3, #0
  403844:	dd05      	ble.n	403852 <_dtoa_r+0x53a>
  403846:	4641      	mov	r1, r8
  403848:	461a      	mov	r2, r3
  40384a:	4620      	mov	r0, r4
  40384c:	f001 fa42 	bl	404cd4 <__lshift>
  403850:	4680      	mov	r8, r0
  403852:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403854:	2b00      	cmp	r3, #0
  403856:	f040 8086 	bne.w	403966 <_dtoa_r+0x64e>
  40385a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40385c:	2b00      	cmp	r3, #0
  40385e:	f340 8266 	ble.w	403d2e <_dtoa_r+0xa16>
  403862:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403864:	2b00      	cmp	r3, #0
  403866:	f000 8098 	beq.w	40399a <_dtoa_r+0x682>
  40386a:	2d00      	cmp	r5, #0
  40386c:	dd05      	ble.n	40387a <_dtoa_r+0x562>
  40386e:	4631      	mov	r1, r6
  403870:	462a      	mov	r2, r5
  403872:	4620      	mov	r0, r4
  403874:	f001 fa2e 	bl	404cd4 <__lshift>
  403878:	4606      	mov	r6, r0
  40387a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40387c:	2b00      	cmp	r3, #0
  40387e:	f040 8337 	bne.w	403ef0 <_dtoa_r+0xbd8>
  403882:	9606      	str	r6, [sp, #24]
  403884:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403886:	9a04      	ldr	r2, [sp, #16]
  403888:	f8dd b018 	ldr.w	fp, [sp, #24]
  40388c:	3b01      	subs	r3, #1
  40388e:	18d3      	adds	r3, r2, r3
  403890:	930b      	str	r3, [sp, #44]	; 0x2c
  403892:	f00a 0301 	and.w	r3, sl, #1
  403896:	930c      	str	r3, [sp, #48]	; 0x30
  403898:	4617      	mov	r7, r2
  40389a:	46c2      	mov	sl, r8
  40389c:	4651      	mov	r1, sl
  40389e:	4648      	mov	r0, r9
  4038a0:	f7ff fca4 	bl	4031ec <quorem>
  4038a4:	4631      	mov	r1, r6
  4038a6:	4605      	mov	r5, r0
  4038a8:	4648      	mov	r0, r9
  4038aa:	f001 fa65 	bl	404d78 <__mcmp>
  4038ae:	465a      	mov	r2, fp
  4038b0:	900a      	str	r0, [sp, #40]	; 0x28
  4038b2:	4651      	mov	r1, sl
  4038b4:	4620      	mov	r0, r4
  4038b6:	f001 fa7b 	bl	404db0 <__mdiff>
  4038ba:	68c2      	ldr	r2, [r0, #12]
  4038bc:	4680      	mov	r8, r0
  4038be:	f105 0330 	add.w	r3, r5, #48	; 0x30
  4038c2:	2a00      	cmp	r2, #0
  4038c4:	f040 822b 	bne.w	403d1e <_dtoa_r+0xa06>
  4038c8:	4601      	mov	r1, r0
  4038ca:	4648      	mov	r0, r9
  4038cc:	9308      	str	r3, [sp, #32]
  4038ce:	f001 fa53 	bl	404d78 <__mcmp>
  4038d2:	4641      	mov	r1, r8
  4038d4:	9006      	str	r0, [sp, #24]
  4038d6:	4620      	mov	r0, r4
  4038d8:	f001 f876 	bl	4049c8 <_Bfree>
  4038dc:	9a06      	ldr	r2, [sp, #24]
  4038de:	9b08      	ldr	r3, [sp, #32]
  4038e0:	b932      	cbnz	r2, 4038f0 <_dtoa_r+0x5d8>
  4038e2:	9924      	ldr	r1, [sp, #144]	; 0x90
  4038e4:	b921      	cbnz	r1, 4038f0 <_dtoa_r+0x5d8>
  4038e6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4038e8:	2a00      	cmp	r2, #0
  4038ea:	f000 83ef 	beq.w	4040cc <_dtoa_r+0xdb4>
  4038ee:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4038f0:	990a      	ldr	r1, [sp, #40]	; 0x28
  4038f2:	2900      	cmp	r1, #0
  4038f4:	f2c0 829f 	blt.w	403e36 <_dtoa_r+0xb1e>
  4038f8:	d105      	bne.n	403906 <_dtoa_r+0x5ee>
  4038fa:	9924      	ldr	r1, [sp, #144]	; 0x90
  4038fc:	b919      	cbnz	r1, 403906 <_dtoa_r+0x5ee>
  4038fe:	990c      	ldr	r1, [sp, #48]	; 0x30
  403900:	2900      	cmp	r1, #0
  403902:	f000 8298 	beq.w	403e36 <_dtoa_r+0xb1e>
  403906:	2a00      	cmp	r2, #0
  403908:	f300 8306 	bgt.w	403f18 <_dtoa_r+0xc00>
  40390c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  40390e:	703b      	strb	r3, [r7, #0]
  403910:	f107 0801 	add.w	r8, r7, #1
  403914:	4297      	cmp	r7, r2
  403916:	4645      	mov	r5, r8
  403918:	f000 830c 	beq.w	403f34 <_dtoa_r+0xc1c>
  40391c:	4649      	mov	r1, r9
  40391e:	2300      	movs	r3, #0
  403920:	220a      	movs	r2, #10
  403922:	4620      	mov	r0, r4
  403924:	f001 f85a 	bl	4049dc <__multadd>
  403928:	455e      	cmp	r6, fp
  40392a:	4681      	mov	r9, r0
  40392c:	4631      	mov	r1, r6
  40392e:	f04f 0300 	mov.w	r3, #0
  403932:	f04f 020a 	mov.w	r2, #10
  403936:	4620      	mov	r0, r4
  403938:	f000 81eb 	beq.w	403d12 <_dtoa_r+0x9fa>
  40393c:	f001 f84e 	bl	4049dc <__multadd>
  403940:	4659      	mov	r1, fp
  403942:	4606      	mov	r6, r0
  403944:	2300      	movs	r3, #0
  403946:	220a      	movs	r2, #10
  403948:	4620      	mov	r0, r4
  40394a:	f001 f847 	bl	4049dc <__multadd>
  40394e:	4647      	mov	r7, r8
  403950:	4683      	mov	fp, r0
  403952:	e7a3      	b.n	40389c <_dtoa_r+0x584>
  403954:	201c      	movs	r0, #28
  403956:	9b08      	ldr	r3, [sp, #32]
  403958:	4403      	add	r3, r0
  40395a:	9308      	str	r3, [sp, #32]
  40395c:	9b06      	ldr	r3, [sp, #24]
  40395e:	4403      	add	r3, r0
  403960:	4405      	add	r5, r0
  403962:	9306      	str	r3, [sp, #24]
  403964:	e763      	b.n	40382e <_dtoa_r+0x516>
  403966:	4641      	mov	r1, r8
  403968:	4648      	mov	r0, r9
  40396a:	f001 fa05 	bl	404d78 <__mcmp>
  40396e:	2800      	cmp	r0, #0
  403970:	f6bf af73 	bge.w	40385a <_dtoa_r+0x542>
  403974:	9f02      	ldr	r7, [sp, #8]
  403976:	4649      	mov	r1, r9
  403978:	2300      	movs	r3, #0
  40397a:	220a      	movs	r2, #10
  40397c:	4620      	mov	r0, r4
  40397e:	3f01      	subs	r7, #1
  403980:	9702      	str	r7, [sp, #8]
  403982:	f001 f82b 	bl	4049dc <__multadd>
  403986:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403988:	4681      	mov	r9, r0
  40398a:	2b00      	cmp	r3, #0
  40398c:	f040 83b6 	bne.w	4040fc <_dtoa_r+0xde4>
  403990:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403992:	2b00      	cmp	r3, #0
  403994:	f340 83bf 	ble.w	404116 <_dtoa_r+0xdfe>
  403998:	930a      	str	r3, [sp, #40]	; 0x28
  40399a:	f8dd b010 	ldr.w	fp, [sp, #16]
  40399e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  4039a0:	465d      	mov	r5, fp
  4039a2:	e002      	b.n	4039aa <_dtoa_r+0x692>
  4039a4:	f001 f81a 	bl	4049dc <__multadd>
  4039a8:	4681      	mov	r9, r0
  4039aa:	4641      	mov	r1, r8
  4039ac:	4648      	mov	r0, r9
  4039ae:	f7ff fc1d 	bl	4031ec <quorem>
  4039b2:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  4039b6:	f805 ab01 	strb.w	sl, [r5], #1
  4039ba:	eba5 030b 	sub.w	r3, r5, fp
  4039be:	42bb      	cmp	r3, r7
  4039c0:	f04f 020a 	mov.w	r2, #10
  4039c4:	f04f 0300 	mov.w	r3, #0
  4039c8:	4649      	mov	r1, r9
  4039ca:	4620      	mov	r0, r4
  4039cc:	dbea      	blt.n	4039a4 <_dtoa_r+0x68c>
  4039ce:	9b04      	ldr	r3, [sp, #16]
  4039d0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4039d2:	2a01      	cmp	r2, #1
  4039d4:	bfac      	ite	ge
  4039d6:	189b      	addge	r3, r3, r2
  4039d8:	3301      	addlt	r3, #1
  4039da:	461d      	mov	r5, r3
  4039dc:	f04f 0b00 	mov.w	fp, #0
  4039e0:	4649      	mov	r1, r9
  4039e2:	2201      	movs	r2, #1
  4039e4:	4620      	mov	r0, r4
  4039e6:	f001 f975 	bl	404cd4 <__lshift>
  4039ea:	4641      	mov	r1, r8
  4039ec:	4681      	mov	r9, r0
  4039ee:	f001 f9c3 	bl	404d78 <__mcmp>
  4039f2:	2800      	cmp	r0, #0
  4039f4:	f340 823d 	ble.w	403e72 <_dtoa_r+0xb5a>
  4039f8:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  4039fc:	9904      	ldr	r1, [sp, #16]
  4039fe:	1e6b      	subs	r3, r5, #1
  403a00:	e004      	b.n	403a0c <_dtoa_r+0x6f4>
  403a02:	428b      	cmp	r3, r1
  403a04:	f000 81ae 	beq.w	403d64 <_dtoa_r+0xa4c>
  403a08:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  403a0c:	2a39      	cmp	r2, #57	; 0x39
  403a0e:	f103 0501 	add.w	r5, r3, #1
  403a12:	d0f6      	beq.n	403a02 <_dtoa_r+0x6ea>
  403a14:	3201      	adds	r2, #1
  403a16:	701a      	strb	r2, [r3, #0]
  403a18:	4641      	mov	r1, r8
  403a1a:	4620      	mov	r0, r4
  403a1c:	f000 ffd4 	bl	4049c8 <_Bfree>
  403a20:	2e00      	cmp	r6, #0
  403a22:	f43f ae3d 	beq.w	4036a0 <_dtoa_r+0x388>
  403a26:	f1bb 0f00 	cmp.w	fp, #0
  403a2a:	d005      	beq.n	403a38 <_dtoa_r+0x720>
  403a2c:	45b3      	cmp	fp, r6
  403a2e:	d003      	beq.n	403a38 <_dtoa_r+0x720>
  403a30:	4659      	mov	r1, fp
  403a32:	4620      	mov	r0, r4
  403a34:	f000 ffc8 	bl	4049c8 <_Bfree>
  403a38:	4631      	mov	r1, r6
  403a3a:	4620      	mov	r0, r4
  403a3c:	f000 ffc4 	bl	4049c8 <_Bfree>
  403a40:	e62e      	b.n	4036a0 <_dtoa_r+0x388>
  403a42:	2300      	movs	r3, #0
  403a44:	930b      	str	r3, [sp, #44]	; 0x2c
  403a46:	9b02      	ldr	r3, [sp, #8]
  403a48:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403a4a:	4413      	add	r3, r2
  403a4c:	930f      	str	r3, [sp, #60]	; 0x3c
  403a4e:	3301      	adds	r3, #1
  403a50:	2b01      	cmp	r3, #1
  403a52:	461f      	mov	r7, r3
  403a54:	461e      	mov	r6, r3
  403a56:	930a      	str	r3, [sp, #40]	; 0x28
  403a58:	bfb8      	it	lt
  403a5a:	2701      	movlt	r7, #1
  403a5c:	2100      	movs	r1, #0
  403a5e:	2f17      	cmp	r7, #23
  403a60:	6461      	str	r1, [r4, #68]	; 0x44
  403a62:	d90a      	bls.n	403a7a <_dtoa_r+0x762>
  403a64:	2201      	movs	r2, #1
  403a66:	2304      	movs	r3, #4
  403a68:	005b      	lsls	r3, r3, #1
  403a6a:	f103 0014 	add.w	r0, r3, #20
  403a6e:	4287      	cmp	r7, r0
  403a70:	4611      	mov	r1, r2
  403a72:	f102 0201 	add.w	r2, r2, #1
  403a76:	d2f7      	bcs.n	403a68 <_dtoa_r+0x750>
  403a78:	6461      	str	r1, [r4, #68]	; 0x44
  403a7a:	4620      	mov	r0, r4
  403a7c:	f000 ff7e 	bl	40497c <_Balloc>
  403a80:	2e0e      	cmp	r6, #14
  403a82:	9004      	str	r0, [sp, #16]
  403a84:	6420      	str	r0, [r4, #64]	; 0x40
  403a86:	f63f ad41 	bhi.w	40350c <_dtoa_r+0x1f4>
  403a8a:	2d00      	cmp	r5, #0
  403a8c:	f43f ad3e 	beq.w	40350c <_dtoa_r+0x1f4>
  403a90:	9902      	ldr	r1, [sp, #8]
  403a92:	2900      	cmp	r1, #0
  403a94:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  403a98:	f340 8202 	ble.w	403ea0 <_dtoa_r+0xb88>
  403a9c:	4bb8      	ldr	r3, [pc, #736]	; (403d80 <_dtoa_r+0xa68>)
  403a9e:	f001 020f 	and.w	r2, r1, #15
  403aa2:	110d      	asrs	r5, r1, #4
  403aa4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403aa8:	06e9      	lsls	r1, r5, #27
  403aaa:	e9d3 6700 	ldrd	r6, r7, [r3]
  403aae:	f140 81ae 	bpl.w	403e0e <_dtoa_r+0xaf6>
  403ab2:	4bb4      	ldr	r3, [pc, #720]	; (403d84 <_dtoa_r+0xa6c>)
  403ab4:	4650      	mov	r0, sl
  403ab6:	4659      	mov	r1, fp
  403ab8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  403abc:	f002 faa4 	bl	406008 <__aeabi_ddiv>
  403ac0:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  403ac4:	f005 050f 	and.w	r5, r5, #15
  403ac8:	f04f 0a03 	mov.w	sl, #3
  403acc:	b18d      	cbz	r5, 403af2 <_dtoa_r+0x7da>
  403ace:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 403d84 <_dtoa_r+0xa6c>
  403ad2:	07ea      	lsls	r2, r5, #31
  403ad4:	d509      	bpl.n	403aea <_dtoa_r+0x7d2>
  403ad6:	4630      	mov	r0, r6
  403ad8:	4639      	mov	r1, r7
  403ada:	e9d8 2300 	ldrd	r2, r3, [r8]
  403ade:	f002 f969 	bl	405db4 <__aeabi_dmul>
  403ae2:	f10a 0a01 	add.w	sl, sl, #1
  403ae6:	4606      	mov	r6, r0
  403ae8:	460f      	mov	r7, r1
  403aea:	106d      	asrs	r5, r5, #1
  403aec:	f108 0808 	add.w	r8, r8, #8
  403af0:	d1ef      	bne.n	403ad2 <_dtoa_r+0x7ba>
  403af2:	463b      	mov	r3, r7
  403af4:	4632      	mov	r2, r6
  403af6:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  403afa:	f002 fa85 	bl	406008 <__aeabi_ddiv>
  403afe:	4607      	mov	r7, r0
  403b00:	4688      	mov	r8, r1
  403b02:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403b04:	b143      	cbz	r3, 403b18 <_dtoa_r+0x800>
  403b06:	2200      	movs	r2, #0
  403b08:	4b9f      	ldr	r3, [pc, #636]	; (403d88 <_dtoa_r+0xa70>)
  403b0a:	4638      	mov	r0, r7
  403b0c:	4641      	mov	r1, r8
  403b0e:	f002 fbc3 	bl	406298 <__aeabi_dcmplt>
  403b12:	2800      	cmp	r0, #0
  403b14:	f040 8286 	bne.w	404024 <_dtoa_r+0xd0c>
  403b18:	4650      	mov	r0, sl
  403b1a:	f002 f8e5 	bl	405ce8 <__aeabi_i2d>
  403b1e:	463a      	mov	r2, r7
  403b20:	4643      	mov	r3, r8
  403b22:	f002 f947 	bl	405db4 <__aeabi_dmul>
  403b26:	4b99      	ldr	r3, [pc, #612]	; (403d8c <_dtoa_r+0xa74>)
  403b28:	2200      	movs	r2, #0
  403b2a:	f001 ff91 	bl	405a50 <__adddf3>
  403b2e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403b30:	4605      	mov	r5, r0
  403b32:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403b36:	2b00      	cmp	r3, #0
  403b38:	f000 813e 	beq.w	403db8 <_dtoa_r+0xaa0>
  403b3c:	9b02      	ldr	r3, [sp, #8]
  403b3e:	9315      	str	r3, [sp, #84]	; 0x54
  403b40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403b42:	9312      	str	r3, [sp, #72]	; 0x48
  403b44:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403b46:	2b00      	cmp	r3, #0
  403b48:	f000 81fa 	beq.w	403f40 <_dtoa_r+0xc28>
  403b4c:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403b4e:	4b8c      	ldr	r3, [pc, #560]	; (403d80 <_dtoa_r+0xa68>)
  403b50:	498f      	ldr	r1, [pc, #572]	; (403d90 <_dtoa_r+0xa78>)
  403b52:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403b56:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  403b5a:	2000      	movs	r0, #0
  403b5c:	f002 fa54 	bl	406008 <__aeabi_ddiv>
  403b60:	462a      	mov	r2, r5
  403b62:	4633      	mov	r3, r6
  403b64:	f001 ff72 	bl	405a4c <__aeabi_dsub>
  403b68:	4682      	mov	sl, r0
  403b6a:	468b      	mov	fp, r1
  403b6c:	4638      	mov	r0, r7
  403b6e:	4641      	mov	r1, r8
  403b70:	f002 fbd0 	bl	406314 <__aeabi_d2iz>
  403b74:	4605      	mov	r5, r0
  403b76:	f002 f8b7 	bl	405ce8 <__aeabi_i2d>
  403b7a:	4602      	mov	r2, r0
  403b7c:	460b      	mov	r3, r1
  403b7e:	4638      	mov	r0, r7
  403b80:	4641      	mov	r1, r8
  403b82:	f001 ff63 	bl	405a4c <__aeabi_dsub>
  403b86:	3530      	adds	r5, #48	; 0x30
  403b88:	fa5f f885 	uxtb.w	r8, r5
  403b8c:	9d04      	ldr	r5, [sp, #16]
  403b8e:	4606      	mov	r6, r0
  403b90:	460f      	mov	r7, r1
  403b92:	f885 8000 	strb.w	r8, [r5]
  403b96:	4602      	mov	r2, r0
  403b98:	460b      	mov	r3, r1
  403b9a:	4650      	mov	r0, sl
  403b9c:	4659      	mov	r1, fp
  403b9e:	3501      	adds	r5, #1
  403ba0:	f002 fb98 	bl	4062d4 <__aeabi_dcmpgt>
  403ba4:	2800      	cmp	r0, #0
  403ba6:	d154      	bne.n	403c52 <_dtoa_r+0x93a>
  403ba8:	4632      	mov	r2, r6
  403baa:	463b      	mov	r3, r7
  403bac:	2000      	movs	r0, #0
  403bae:	4976      	ldr	r1, [pc, #472]	; (403d88 <_dtoa_r+0xa70>)
  403bb0:	f001 ff4c 	bl	405a4c <__aeabi_dsub>
  403bb4:	4602      	mov	r2, r0
  403bb6:	460b      	mov	r3, r1
  403bb8:	4650      	mov	r0, sl
  403bba:	4659      	mov	r1, fp
  403bbc:	f002 fb8a 	bl	4062d4 <__aeabi_dcmpgt>
  403bc0:	2800      	cmp	r0, #0
  403bc2:	f040 8270 	bne.w	4040a6 <_dtoa_r+0xd8e>
  403bc6:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403bc8:	2a01      	cmp	r2, #1
  403bca:	f000 8111 	beq.w	403df0 <_dtoa_r+0xad8>
  403bce:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403bd0:	9a04      	ldr	r2, [sp, #16]
  403bd2:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403bd6:	4413      	add	r3, r2
  403bd8:	4699      	mov	r9, r3
  403bda:	e00d      	b.n	403bf8 <_dtoa_r+0x8e0>
  403bdc:	2000      	movs	r0, #0
  403bde:	496a      	ldr	r1, [pc, #424]	; (403d88 <_dtoa_r+0xa70>)
  403be0:	f001 ff34 	bl	405a4c <__aeabi_dsub>
  403be4:	4652      	mov	r2, sl
  403be6:	465b      	mov	r3, fp
  403be8:	f002 fb56 	bl	406298 <__aeabi_dcmplt>
  403bec:	2800      	cmp	r0, #0
  403bee:	f040 8258 	bne.w	4040a2 <_dtoa_r+0xd8a>
  403bf2:	454d      	cmp	r5, r9
  403bf4:	f000 80fa 	beq.w	403dec <_dtoa_r+0xad4>
  403bf8:	4650      	mov	r0, sl
  403bfa:	4659      	mov	r1, fp
  403bfc:	2200      	movs	r2, #0
  403bfe:	4b65      	ldr	r3, [pc, #404]	; (403d94 <_dtoa_r+0xa7c>)
  403c00:	f002 f8d8 	bl	405db4 <__aeabi_dmul>
  403c04:	2200      	movs	r2, #0
  403c06:	4b63      	ldr	r3, [pc, #396]	; (403d94 <_dtoa_r+0xa7c>)
  403c08:	4682      	mov	sl, r0
  403c0a:	468b      	mov	fp, r1
  403c0c:	4630      	mov	r0, r6
  403c0e:	4639      	mov	r1, r7
  403c10:	f002 f8d0 	bl	405db4 <__aeabi_dmul>
  403c14:	460f      	mov	r7, r1
  403c16:	4606      	mov	r6, r0
  403c18:	f002 fb7c 	bl	406314 <__aeabi_d2iz>
  403c1c:	4680      	mov	r8, r0
  403c1e:	f002 f863 	bl	405ce8 <__aeabi_i2d>
  403c22:	4602      	mov	r2, r0
  403c24:	460b      	mov	r3, r1
  403c26:	4630      	mov	r0, r6
  403c28:	4639      	mov	r1, r7
  403c2a:	f001 ff0f 	bl	405a4c <__aeabi_dsub>
  403c2e:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403c32:	fa5f f888 	uxtb.w	r8, r8
  403c36:	4652      	mov	r2, sl
  403c38:	465b      	mov	r3, fp
  403c3a:	f805 8b01 	strb.w	r8, [r5], #1
  403c3e:	4606      	mov	r6, r0
  403c40:	460f      	mov	r7, r1
  403c42:	f002 fb29 	bl	406298 <__aeabi_dcmplt>
  403c46:	4632      	mov	r2, r6
  403c48:	463b      	mov	r3, r7
  403c4a:	2800      	cmp	r0, #0
  403c4c:	d0c6      	beq.n	403bdc <_dtoa_r+0x8c4>
  403c4e:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403c52:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403c54:	9302      	str	r3, [sp, #8]
  403c56:	e523      	b.n	4036a0 <_dtoa_r+0x388>
  403c58:	2300      	movs	r3, #0
  403c5a:	930b      	str	r3, [sp, #44]	; 0x2c
  403c5c:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403c5e:	2b00      	cmp	r3, #0
  403c60:	f340 80dc 	ble.w	403e1c <_dtoa_r+0xb04>
  403c64:	461f      	mov	r7, r3
  403c66:	461e      	mov	r6, r3
  403c68:	930f      	str	r3, [sp, #60]	; 0x3c
  403c6a:	930a      	str	r3, [sp, #40]	; 0x28
  403c6c:	e6f6      	b.n	403a5c <_dtoa_r+0x744>
  403c6e:	2301      	movs	r3, #1
  403c70:	930b      	str	r3, [sp, #44]	; 0x2c
  403c72:	e7f3      	b.n	403c5c <_dtoa_r+0x944>
  403c74:	f1ba 0f00 	cmp.w	sl, #0
  403c78:	f47f ada8 	bne.w	4037cc <_dtoa_r+0x4b4>
  403c7c:	f3cb 0313 	ubfx	r3, fp, #0, #20
  403c80:	2b00      	cmp	r3, #0
  403c82:	f47f adba 	bne.w	4037fa <_dtoa_r+0x4e2>
  403c86:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  403c8a:	0d3f      	lsrs	r7, r7, #20
  403c8c:	053f      	lsls	r7, r7, #20
  403c8e:	2f00      	cmp	r7, #0
  403c90:	f000 820d 	beq.w	4040ae <_dtoa_r+0xd96>
  403c94:	9b08      	ldr	r3, [sp, #32]
  403c96:	3301      	adds	r3, #1
  403c98:	9308      	str	r3, [sp, #32]
  403c9a:	9b06      	ldr	r3, [sp, #24]
  403c9c:	3301      	adds	r3, #1
  403c9e:	9306      	str	r3, [sp, #24]
  403ca0:	2301      	movs	r3, #1
  403ca2:	930c      	str	r3, [sp, #48]	; 0x30
  403ca4:	e5ab      	b.n	4037fe <_dtoa_r+0x4e6>
  403ca6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ca8:	2b00      	cmp	r3, #0
  403caa:	f73f ac42 	bgt.w	403532 <_dtoa_r+0x21a>
  403cae:	f040 8221 	bne.w	4040f4 <_dtoa_r+0xddc>
  403cb2:	2200      	movs	r2, #0
  403cb4:	4b38      	ldr	r3, [pc, #224]	; (403d98 <_dtoa_r+0xa80>)
  403cb6:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403cba:	f002 f87b 	bl	405db4 <__aeabi_dmul>
  403cbe:	4652      	mov	r2, sl
  403cc0:	465b      	mov	r3, fp
  403cc2:	f002 fafd 	bl	4062c0 <__aeabi_dcmpge>
  403cc6:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  403cca:	4646      	mov	r6, r8
  403ccc:	2800      	cmp	r0, #0
  403cce:	d041      	beq.n	403d54 <_dtoa_r+0xa3c>
  403cd0:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403cd2:	9d04      	ldr	r5, [sp, #16]
  403cd4:	43db      	mvns	r3, r3
  403cd6:	9302      	str	r3, [sp, #8]
  403cd8:	4641      	mov	r1, r8
  403cda:	4620      	mov	r0, r4
  403cdc:	f000 fe74 	bl	4049c8 <_Bfree>
  403ce0:	2e00      	cmp	r6, #0
  403ce2:	f43f acdd 	beq.w	4036a0 <_dtoa_r+0x388>
  403ce6:	e6a7      	b.n	403a38 <_dtoa_r+0x720>
  403ce8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403cea:	4649      	mov	r1, r9
  403cec:	4620      	mov	r0, r4
  403cee:	f000 ffa1 	bl	404c34 <__pow5mult>
  403cf2:	4681      	mov	r9, r0
  403cf4:	e558      	b.n	4037a8 <_dtoa_r+0x490>
  403cf6:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403cf8:	2a00      	cmp	r2, #0
  403cfa:	f000 8187 	beq.w	40400c <_dtoa_r+0xcf4>
  403cfe:	f203 4333 	addw	r3, r3, #1075	; 0x433
  403d02:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403d04:	9d08      	ldr	r5, [sp, #32]
  403d06:	e4f2      	b.n	4036ee <_dtoa_r+0x3d6>
  403d08:	f1ba 0f00 	cmp.w	sl, #0
  403d0c:	f47f ad75 	bne.w	4037fa <_dtoa_r+0x4e2>
  403d10:	e7b4      	b.n	403c7c <_dtoa_r+0x964>
  403d12:	f000 fe63 	bl	4049dc <__multadd>
  403d16:	4647      	mov	r7, r8
  403d18:	4606      	mov	r6, r0
  403d1a:	4683      	mov	fp, r0
  403d1c:	e5be      	b.n	40389c <_dtoa_r+0x584>
  403d1e:	4601      	mov	r1, r0
  403d20:	4620      	mov	r0, r4
  403d22:	9306      	str	r3, [sp, #24]
  403d24:	f000 fe50 	bl	4049c8 <_Bfree>
  403d28:	2201      	movs	r2, #1
  403d2a:	9b06      	ldr	r3, [sp, #24]
  403d2c:	e5e0      	b.n	4038f0 <_dtoa_r+0x5d8>
  403d2e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403d30:	2b02      	cmp	r3, #2
  403d32:	f77f ad96 	ble.w	403862 <_dtoa_r+0x54a>
  403d36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d38:	2b00      	cmp	r3, #0
  403d3a:	d1c9      	bne.n	403cd0 <_dtoa_r+0x9b8>
  403d3c:	4641      	mov	r1, r8
  403d3e:	2205      	movs	r2, #5
  403d40:	4620      	mov	r0, r4
  403d42:	f000 fe4b 	bl	4049dc <__multadd>
  403d46:	4601      	mov	r1, r0
  403d48:	4680      	mov	r8, r0
  403d4a:	4648      	mov	r0, r9
  403d4c:	f001 f814 	bl	404d78 <__mcmp>
  403d50:	2800      	cmp	r0, #0
  403d52:	ddbd      	ble.n	403cd0 <_dtoa_r+0x9b8>
  403d54:	9a02      	ldr	r2, [sp, #8]
  403d56:	9904      	ldr	r1, [sp, #16]
  403d58:	2331      	movs	r3, #49	; 0x31
  403d5a:	3201      	adds	r2, #1
  403d5c:	9202      	str	r2, [sp, #8]
  403d5e:	700b      	strb	r3, [r1, #0]
  403d60:	1c4d      	adds	r5, r1, #1
  403d62:	e7b9      	b.n	403cd8 <_dtoa_r+0x9c0>
  403d64:	9a02      	ldr	r2, [sp, #8]
  403d66:	3201      	adds	r2, #1
  403d68:	9202      	str	r2, [sp, #8]
  403d6a:	9a04      	ldr	r2, [sp, #16]
  403d6c:	2331      	movs	r3, #49	; 0x31
  403d6e:	7013      	strb	r3, [r2, #0]
  403d70:	e652      	b.n	403a18 <_dtoa_r+0x700>
  403d72:	2301      	movs	r3, #1
  403d74:	930b      	str	r3, [sp, #44]	; 0x2c
  403d76:	e666      	b.n	403a46 <_dtoa_r+0x72e>
  403d78:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403d7c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403d7e:	e48f      	b.n	4036a0 <_dtoa_r+0x388>
  403d80:	00407410 	.word	0x00407410
  403d84:	004073e8 	.word	0x004073e8
  403d88:	3ff00000 	.word	0x3ff00000
  403d8c:	401c0000 	.word	0x401c0000
  403d90:	3fe00000 	.word	0x3fe00000
  403d94:	40240000 	.word	0x40240000
  403d98:	40140000 	.word	0x40140000
  403d9c:	4650      	mov	r0, sl
  403d9e:	f001 ffa3 	bl	405ce8 <__aeabi_i2d>
  403da2:	463a      	mov	r2, r7
  403da4:	4643      	mov	r3, r8
  403da6:	f002 f805 	bl	405db4 <__aeabi_dmul>
  403daa:	2200      	movs	r2, #0
  403dac:	4bc1      	ldr	r3, [pc, #772]	; (4040b4 <_dtoa_r+0xd9c>)
  403dae:	f001 fe4f 	bl	405a50 <__adddf3>
  403db2:	4605      	mov	r5, r0
  403db4:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403db8:	4641      	mov	r1, r8
  403dba:	2200      	movs	r2, #0
  403dbc:	4bbe      	ldr	r3, [pc, #760]	; (4040b8 <_dtoa_r+0xda0>)
  403dbe:	4638      	mov	r0, r7
  403dc0:	f001 fe44 	bl	405a4c <__aeabi_dsub>
  403dc4:	462a      	mov	r2, r5
  403dc6:	4633      	mov	r3, r6
  403dc8:	4682      	mov	sl, r0
  403dca:	468b      	mov	fp, r1
  403dcc:	f002 fa82 	bl	4062d4 <__aeabi_dcmpgt>
  403dd0:	4680      	mov	r8, r0
  403dd2:	2800      	cmp	r0, #0
  403dd4:	f040 8110 	bne.w	403ff8 <_dtoa_r+0xce0>
  403dd8:	462a      	mov	r2, r5
  403dda:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  403dde:	4650      	mov	r0, sl
  403de0:	4659      	mov	r1, fp
  403de2:	f002 fa59 	bl	406298 <__aeabi_dcmplt>
  403de6:	b118      	cbz	r0, 403df0 <_dtoa_r+0xad8>
  403de8:	4646      	mov	r6, r8
  403dea:	e771      	b.n	403cd0 <_dtoa_r+0x9b8>
  403dec:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403df0:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  403df4:	f7ff bb8a 	b.w	40350c <_dtoa_r+0x1f4>
  403df8:	9804      	ldr	r0, [sp, #16]
  403dfa:	f7ff babb 	b.w	403374 <_dtoa_r+0x5c>
  403dfe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403e00:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  403e02:	970c      	str	r7, [sp, #48]	; 0x30
  403e04:	1afb      	subs	r3, r7, r3
  403e06:	441a      	add	r2, r3
  403e08:	920d      	str	r2, [sp, #52]	; 0x34
  403e0a:	2700      	movs	r7, #0
  403e0c:	e469      	b.n	4036e2 <_dtoa_r+0x3ca>
  403e0e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  403e12:	f04f 0a02 	mov.w	sl, #2
  403e16:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  403e1a:	e657      	b.n	403acc <_dtoa_r+0x7b4>
  403e1c:	2100      	movs	r1, #0
  403e1e:	2301      	movs	r3, #1
  403e20:	6461      	str	r1, [r4, #68]	; 0x44
  403e22:	4620      	mov	r0, r4
  403e24:	9325      	str	r3, [sp, #148]	; 0x94
  403e26:	f000 fda9 	bl	40497c <_Balloc>
  403e2a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403e2c:	9004      	str	r0, [sp, #16]
  403e2e:	6420      	str	r0, [r4, #64]	; 0x40
  403e30:	930a      	str	r3, [sp, #40]	; 0x28
  403e32:	930f      	str	r3, [sp, #60]	; 0x3c
  403e34:	e629      	b.n	403a8a <_dtoa_r+0x772>
  403e36:	2a00      	cmp	r2, #0
  403e38:	46d0      	mov	r8, sl
  403e3a:	f8cd b018 	str.w	fp, [sp, #24]
  403e3e:	469a      	mov	sl, r3
  403e40:	dd11      	ble.n	403e66 <_dtoa_r+0xb4e>
  403e42:	4649      	mov	r1, r9
  403e44:	2201      	movs	r2, #1
  403e46:	4620      	mov	r0, r4
  403e48:	f000 ff44 	bl	404cd4 <__lshift>
  403e4c:	4641      	mov	r1, r8
  403e4e:	4681      	mov	r9, r0
  403e50:	f000 ff92 	bl	404d78 <__mcmp>
  403e54:	2800      	cmp	r0, #0
  403e56:	f340 8146 	ble.w	4040e6 <_dtoa_r+0xdce>
  403e5a:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  403e5e:	f000 8106 	beq.w	40406e <_dtoa_r+0xd56>
  403e62:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  403e66:	46b3      	mov	fp, r6
  403e68:	f887 a000 	strb.w	sl, [r7]
  403e6c:	1c7d      	adds	r5, r7, #1
  403e6e:	9e06      	ldr	r6, [sp, #24]
  403e70:	e5d2      	b.n	403a18 <_dtoa_r+0x700>
  403e72:	d104      	bne.n	403e7e <_dtoa_r+0xb66>
  403e74:	f01a 0f01 	tst.w	sl, #1
  403e78:	d001      	beq.n	403e7e <_dtoa_r+0xb66>
  403e7a:	e5bd      	b.n	4039f8 <_dtoa_r+0x6e0>
  403e7c:	4615      	mov	r5, r2
  403e7e:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  403e82:	2b30      	cmp	r3, #48	; 0x30
  403e84:	f105 32ff 	add.w	r2, r5, #4294967295
  403e88:	d0f8      	beq.n	403e7c <_dtoa_r+0xb64>
  403e8a:	e5c5      	b.n	403a18 <_dtoa_r+0x700>
  403e8c:	9904      	ldr	r1, [sp, #16]
  403e8e:	2230      	movs	r2, #48	; 0x30
  403e90:	700a      	strb	r2, [r1, #0]
  403e92:	9a02      	ldr	r2, [sp, #8]
  403e94:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403e98:	3201      	adds	r2, #1
  403e9a:	9202      	str	r2, [sp, #8]
  403e9c:	f7ff bbfc 	b.w	403698 <_dtoa_r+0x380>
  403ea0:	f000 80bb 	beq.w	40401a <_dtoa_r+0xd02>
  403ea4:	9b02      	ldr	r3, [sp, #8]
  403ea6:	425d      	negs	r5, r3
  403ea8:	4b84      	ldr	r3, [pc, #528]	; (4040bc <_dtoa_r+0xda4>)
  403eaa:	f005 020f 	and.w	r2, r5, #15
  403eae:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403eb2:	e9d3 2300 	ldrd	r2, r3, [r3]
  403eb6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  403eba:	f001 ff7b 	bl	405db4 <__aeabi_dmul>
  403ebe:	112d      	asrs	r5, r5, #4
  403ec0:	4607      	mov	r7, r0
  403ec2:	4688      	mov	r8, r1
  403ec4:	f000 812c 	beq.w	404120 <_dtoa_r+0xe08>
  403ec8:	4e7d      	ldr	r6, [pc, #500]	; (4040c0 <_dtoa_r+0xda8>)
  403eca:	f04f 0a02 	mov.w	sl, #2
  403ece:	07eb      	lsls	r3, r5, #31
  403ed0:	d509      	bpl.n	403ee6 <_dtoa_r+0xbce>
  403ed2:	4638      	mov	r0, r7
  403ed4:	4641      	mov	r1, r8
  403ed6:	e9d6 2300 	ldrd	r2, r3, [r6]
  403eda:	f001 ff6b 	bl	405db4 <__aeabi_dmul>
  403ede:	f10a 0a01 	add.w	sl, sl, #1
  403ee2:	4607      	mov	r7, r0
  403ee4:	4688      	mov	r8, r1
  403ee6:	106d      	asrs	r5, r5, #1
  403ee8:	f106 0608 	add.w	r6, r6, #8
  403eec:	d1ef      	bne.n	403ece <_dtoa_r+0xbb6>
  403eee:	e608      	b.n	403b02 <_dtoa_r+0x7ea>
  403ef0:	6871      	ldr	r1, [r6, #4]
  403ef2:	4620      	mov	r0, r4
  403ef4:	f000 fd42 	bl	40497c <_Balloc>
  403ef8:	6933      	ldr	r3, [r6, #16]
  403efa:	3302      	adds	r3, #2
  403efc:	009a      	lsls	r2, r3, #2
  403efe:	4605      	mov	r5, r0
  403f00:	f106 010c 	add.w	r1, r6, #12
  403f04:	300c      	adds	r0, #12
  403f06:	f000 fc93 	bl	404830 <memcpy>
  403f0a:	4629      	mov	r1, r5
  403f0c:	2201      	movs	r2, #1
  403f0e:	4620      	mov	r0, r4
  403f10:	f000 fee0 	bl	404cd4 <__lshift>
  403f14:	9006      	str	r0, [sp, #24]
  403f16:	e4b5      	b.n	403884 <_dtoa_r+0x56c>
  403f18:	2b39      	cmp	r3, #57	; 0x39
  403f1a:	f8cd b018 	str.w	fp, [sp, #24]
  403f1e:	46d0      	mov	r8, sl
  403f20:	f000 80a5 	beq.w	40406e <_dtoa_r+0xd56>
  403f24:	f103 0a01 	add.w	sl, r3, #1
  403f28:	46b3      	mov	fp, r6
  403f2a:	f887 a000 	strb.w	sl, [r7]
  403f2e:	1c7d      	adds	r5, r7, #1
  403f30:	9e06      	ldr	r6, [sp, #24]
  403f32:	e571      	b.n	403a18 <_dtoa_r+0x700>
  403f34:	465a      	mov	r2, fp
  403f36:	46d0      	mov	r8, sl
  403f38:	46b3      	mov	fp, r6
  403f3a:	469a      	mov	sl, r3
  403f3c:	4616      	mov	r6, r2
  403f3e:	e54f      	b.n	4039e0 <_dtoa_r+0x6c8>
  403f40:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403f42:	495e      	ldr	r1, [pc, #376]	; (4040bc <_dtoa_r+0xda4>)
  403f44:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  403f48:	462a      	mov	r2, r5
  403f4a:	4633      	mov	r3, r6
  403f4c:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  403f50:	f001 ff30 	bl	405db4 <__aeabi_dmul>
  403f54:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  403f58:	4638      	mov	r0, r7
  403f5a:	4641      	mov	r1, r8
  403f5c:	f002 f9da 	bl	406314 <__aeabi_d2iz>
  403f60:	4605      	mov	r5, r0
  403f62:	f001 fec1 	bl	405ce8 <__aeabi_i2d>
  403f66:	460b      	mov	r3, r1
  403f68:	4602      	mov	r2, r0
  403f6a:	4641      	mov	r1, r8
  403f6c:	4638      	mov	r0, r7
  403f6e:	f001 fd6d 	bl	405a4c <__aeabi_dsub>
  403f72:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403f74:	460f      	mov	r7, r1
  403f76:	9904      	ldr	r1, [sp, #16]
  403f78:	3530      	adds	r5, #48	; 0x30
  403f7a:	2b01      	cmp	r3, #1
  403f7c:	700d      	strb	r5, [r1, #0]
  403f7e:	4606      	mov	r6, r0
  403f80:	f101 0501 	add.w	r5, r1, #1
  403f84:	d026      	beq.n	403fd4 <_dtoa_r+0xcbc>
  403f86:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403f88:	9a04      	ldr	r2, [sp, #16]
  403f8a:	f8df b13c 	ldr.w	fp, [pc, #316]	; 4040c8 <_dtoa_r+0xdb0>
  403f8e:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403f92:	4413      	add	r3, r2
  403f94:	f04f 0a00 	mov.w	sl, #0
  403f98:	4699      	mov	r9, r3
  403f9a:	4652      	mov	r2, sl
  403f9c:	465b      	mov	r3, fp
  403f9e:	4630      	mov	r0, r6
  403fa0:	4639      	mov	r1, r7
  403fa2:	f001 ff07 	bl	405db4 <__aeabi_dmul>
  403fa6:	460f      	mov	r7, r1
  403fa8:	4606      	mov	r6, r0
  403faa:	f002 f9b3 	bl	406314 <__aeabi_d2iz>
  403fae:	4680      	mov	r8, r0
  403fb0:	f001 fe9a 	bl	405ce8 <__aeabi_i2d>
  403fb4:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403fb8:	4602      	mov	r2, r0
  403fba:	460b      	mov	r3, r1
  403fbc:	4630      	mov	r0, r6
  403fbe:	4639      	mov	r1, r7
  403fc0:	f001 fd44 	bl	405a4c <__aeabi_dsub>
  403fc4:	f805 8b01 	strb.w	r8, [r5], #1
  403fc8:	454d      	cmp	r5, r9
  403fca:	4606      	mov	r6, r0
  403fcc:	460f      	mov	r7, r1
  403fce:	d1e4      	bne.n	403f9a <_dtoa_r+0xc82>
  403fd0:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403fd4:	4b3b      	ldr	r3, [pc, #236]	; (4040c4 <_dtoa_r+0xdac>)
  403fd6:	2200      	movs	r2, #0
  403fd8:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  403fdc:	f001 fd38 	bl	405a50 <__adddf3>
  403fe0:	4632      	mov	r2, r6
  403fe2:	463b      	mov	r3, r7
  403fe4:	f002 f958 	bl	406298 <__aeabi_dcmplt>
  403fe8:	2800      	cmp	r0, #0
  403fea:	d046      	beq.n	40407a <_dtoa_r+0xd62>
  403fec:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403fee:	9302      	str	r3, [sp, #8]
  403ff0:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403ff4:	f7ff bb43 	b.w	40367e <_dtoa_r+0x366>
  403ff8:	f04f 0800 	mov.w	r8, #0
  403ffc:	4646      	mov	r6, r8
  403ffe:	e6a9      	b.n	403d54 <_dtoa_r+0xa3c>
  404000:	9b08      	ldr	r3, [sp, #32]
  404002:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  404004:	1a9d      	subs	r5, r3, r2
  404006:	2300      	movs	r3, #0
  404008:	f7ff bb71 	b.w	4036ee <_dtoa_r+0x3d6>
  40400c:	9b18      	ldr	r3, [sp, #96]	; 0x60
  40400e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404010:	9d08      	ldr	r5, [sp, #32]
  404012:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  404016:	f7ff bb6a 	b.w	4036ee <_dtoa_r+0x3d6>
  40401a:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  40401e:	f04f 0a02 	mov.w	sl, #2
  404022:	e56e      	b.n	403b02 <_dtoa_r+0x7ea>
  404024:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404026:	2b00      	cmp	r3, #0
  404028:	f43f aeb8 	beq.w	403d9c <_dtoa_r+0xa84>
  40402c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40402e:	2b00      	cmp	r3, #0
  404030:	f77f aede 	ble.w	403df0 <_dtoa_r+0xad8>
  404034:	2200      	movs	r2, #0
  404036:	4b24      	ldr	r3, [pc, #144]	; (4040c8 <_dtoa_r+0xdb0>)
  404038:	4638      	mov	r0, r7
  40403a:	4641      	mov	r1, r8
  40403c:	f001 feba 	bl	405db4 <__aeabi_dmul>
  404040:	4607      	mov	r7, r0
  404042:	4688      	mov	r8, r1
  404044:	f10a 0001 	add.w	r0, sl, #1
  404048:	f001 fe4e 	bl	405ce8 <__aeabi_i2d>
  40404c:	463a      	mov	r2, r7
  40404e:	4643      	mov	r3, r8
  404050:	f001 feb0 	bl	405db4 <__aeabi_dmul>
  404054:	2200      	movs	r2, #0
  404056:	4b17      	ldr	r3, [pc, #92]	; (4040b4 <_dtoa_r+0xd9c>)
  404058:	f001 fcfa 	bl	405a50 <__adddf3>
  40405c:	9a02      	ldr	r2, [sp, #8]
  40405e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404060:	9312      	str	r3, [sp, #72]	; 0x48
  404062:	3a01      	subs	r2, #1
  404064:	4605      	mov	r5, r0
  404066:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  40406a:	9215      	str	r2, [sp, #84]	; 0x54
  40406c:	e56a      	b.n	403b44 <_dtoa_r+0x82c>
  40406e:	2239      	movs	r2, #57	; 0x39
  404070:	46b3      	mov	fp, r6
  404072:	703a      	strb	r2, [r7, #0]
  404074:	9e06      	ldr	r6, [sp, #24]
  404076:	1c7d      	adds	r5, r7, #1
  404078:	e4c0      	b.n	4039fc <_dtoa_r+0x6e4>
  40407a:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  40407e:	2000      	movs	r0, #0
  404080:	4910      	ldr	r1, [pc, #64]	; (4040c4 <_dtoa_r+0xdac>)
  404082:	f001 fce3 	bl	405a4c <__aeabi_dsub>
  404086:	4632      	mov	r2, r6
  404088:	463b      	mov	r3, r7
  40408a:	f002 f923 	bl	4062d4 <__aeabi_dcmpgt>
  40408e:	b908      	cbnz	r0, 404094 <_dtoa_r+0xd7c>
  404090:	e6ae      	b.n	403df0 <_dtoa_r+0xad8>
  404092:	4615      	mov	r5, r2
  404094:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404098:	2b30      	cmp	r3, #48	; 0x30
  40409a:	f105 32ff 	add.w	r2, r5, #4294967295
  40409e:	d0f8      	beq.n	404092 <_dtoa_r+0xd7a>
  4040a0:	e5d7      	b.n	403c52 <_dtoa_r+0x93a>
  4040a2:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4040a6:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4040a8:	9302      	str	r3, [sp, #8]
  4040aa:	f7ff bae8 	b.w	40367e <_dtoa_r+0x366>
  4040ae:	970c      	str	r7, [sp, #48]	; 0x30
  4040b0:	f7ff bba5 	b.w	4037fe <_dtoa_r+0x4e6>
  4040b4:	401c0000 	.word	0x401c0000
  4040b8:	40140000 	.word	0x40140000
  4040bc:	00407410 	.word	0x00407410
  4040c0:	004073e8 	.word	0x004073e8
  4040c4:	3fe00000 	.word	0x3fe00000
  4040c8:	40240000 	.word	0x40240000
  4040cc:	2b39      	cmp	r3, #57	; 0x39
  4040ce:	f8cd b018 	str.w	fp, [sp, #24]
  4040d2:	46d0      	mov	r8, sl
  4040d4:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  4040d8:	469a      	mov	sl, r3
  4040da:	d0c8      	beq.n	40406e <_dtoa_r+0xd56>
  4040dc:	f1bb 0f00 	cmp.w	fp, #0
  4040e0:	f73f aebf 	bgt.w	403e62 <_dtoa_r+0xb4a>
  4040e4:	e6bf      	b.n	403e66 <_dtoa_r+0xb4e>
  4040e6:	f47f aebe 	bne.w	403e66 <_dtoa_r+0xb4e>
  4040ea:	f01a 0f01 	tst.w	sl, #1
  4040ee:	f43f aeba 	beq.w	403e66 <_dtoa_r+0xb4e>
  4040f2:	e6b2      	b.n	403e5a <_dtoa_r+0xb42>
  4040f4:	f04f 0800 	mov.w	r8, #0
  4040f8:	4646      	mov	r6, r8
  4040fa:	e5e9      	b.n	403cd0 <_dtoa_r+0x9b8>
  4040fc:	4631      	mov	r1, r6
  4040fe:	2300      	movs	r3, #0
  404100:	220a      	movs	r2, #10
  404102:	4620      	mov	r0, r4
  404104:	f000 fc6a 	bl	4049dc <__multadd>
  404108:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40410a:	2b00      	cmp	r3, #0
  40410c:	4606      	mov	r6, r0
  40410e:	dd0a      	ble.n	404126 <_dtoa_r+0xe0e>
  404110:	930a      	str	r3, [sp, #40]	; 0x28
  404112:	f7ff bbaa 	b.w	40386a <_dtoa_r+0x552>
  404116:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404118:	2b02      	cmp	r3, #2
  40411a:	dc23      	bgt.n	404164 <_dtoa_r+0xe4c>
  40411c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40411e:	e43b      	b.n	403998 <_dtoa_r+0x680>
  404120:	f04f 0a02 	mov.w	sl, #2
  404124:	e4ed      	b.n	403b02 <_dtoa_r+0x7ea>
  404126:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404128:	2b02      	cmp	r3, #2
  40412a:	dc1b      	bgt.n	404164 <_dtoa_r+0xe4c>
  40412c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40412e:	e7ef      	b.n	404110 <_dtoa_r+0xdf8>
  404130:	2500      	movs	r5, #0
  404132:	6465      	str	r5, [r4, #68]	; 0x44
  404134:	4629      	mov	r1, r5
  404136:	4620      	mov	r0, r4
  404138:	f000 fc20 	bl	40497c <_Balloc>
  40413c:	f04f 33ff 	mov.w	r3, #4294967295
  404140:	930a      	str	r3, [sp, #40]	; 0x28
  404142:	930f      	str	r3, [sp, #60]	; 0x3c
  404144:	2301      	movs	r3, #1
  404146:	9004      	str	r0, [sp, #16]
  404148:	9525      	str	r5, [sp, #148]	; 0x94
  40414a:	6420      	str	r0, [r4, #64]	; 0x40
  40414c:	930b      	str	r3, [sp, #44]	; 0x2c
  40414e:	f7ff b9dd 	b.w	40350c <_dtoa_r+0x1f4>
  404152:	2501      	movs	r5, #1
  404154:	f7ff b9a5 	b.w	4034a2 <_dtoa_r+0x18a>
  404158:	f43f ab69 	beq.w	40382e <_dtoa_r+0x516>
  40415c:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  404160:	f7ff bbf9 	b.w	403956 <_dtoa_r+0x63e>
  404164:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404166:	930a      	str	r3, [sp, #40]	; 0x28
  404168:	e5e5      	b.n	403d36 <_dtoa_r+0xa1e>
  40416a:	bf00      	nop

0040416c <__libc_fini_array>:
  40416c:	b538      	push	{r3, r4, r5, lr}
  40416e:	4c0a      	ldr	r4, [pc, #40]	; (404198 <__libc_fini_array+0x2c>)
  404170:	4d0a      	ldr	r5, [pc, #40]	; (40419c <__libc_fini_array+0x30>)
  404172:	1b64      	subs	r4, r4, r5
  404174:	10a4      	asrs	r4, r4, #2
  404176:	d00a      	beq.n	40418e <__libc_fini_array+0x22>
  404178:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  40417c:	3b01      	subs	r3, #1
  40417e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  404182:	3c01      	subs	r4, #1
  404184:	f855 3904 	ldr.w	r3, [r5], #-4
  404188:	4798      	blx	r3
  40418a:	2c00      	cmp	r4, #0
  40418c:	d1f9      	bne.n	404182 <__libc_fini_array+0x16>
  40418e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  404192:	f003 ba3b 	b.w	40760c <_fini>
  404196:	bf00      	nop
  404198:	0040761c 	.word	0x0040761c
  40419c:	00407618 	.word	0x00407618

004041a0 <_localeconv_r>:
  4041a0:	4a04      	ldr	r2, [pc, #16]	; (4041b4 <_localeconv_r+0x14>)
  4041a2:	4b05      	ldr	r3, [pc, #20]	; (4041b8 <_localeconv_r+0x18>)
  4041a4:	6812      	ldr	r2, [r2, #0]
  4041a6:	6b50      	ldr	r0, [r2, #52]	; 0x34
  4041a8:	2800      	cmp	r0, #0
  4041aa:	bf08      	it	eq
  4041ac:	4618      	moveq	r0, r3
  4041ae:	30f0      	adds	r0, #240	; 0xf0
  4041b0:	4770      	bx	lr
  4041b2:	bf00      	nop
  4041b4:	20000010 	.word	0x20000010
  4041b8:	20000854 	.word	0x20000854

004041bc <__retarget_lock_acquire_recursive>:
  4041bc:	4770      	bx	lr
  4041be:	bf00      	nop

004041c0 <__retarget_lock_release_recursive>:
  4041c0:	4770      	bx	lr
  4041c2:	bf00      	nop

004041c4 <_malloc_r>:
  4041c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4041c8:	f101 060b 	add.w	r6, r1, #11
  4041cc:	2e16      	cmp	r6, #22
  4041ce:	b083      	sub	sp, #12
  4041d0:	4605      	mov	r5, r0
  4041d2:	f240 809e 	bls.w	404312 <_malloc_r+0x14e>
  4041d6:	f036 0607 	bics.w	r6, r6, #7
  4041da:	f100 80bd 	bmi.w	404358 <_malloc_r+0x194>
  4041de:	42b1      	cmp	r1, r6
  4041e0:	f200 80ba 	bhi.w	404358 <_malloc_r+0x194>
  4041e4:	f000 fbbe 	bl	404964 <__malloc_lock>
  4041e8:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  4041ec:	f0c0 8293 	bcc.w	404716 <_malloc_r+0x552>
  4041f0:	0a73      	lsrs	r3, r6, #9
  4041f2:	f000 80b8 	beq.w	404366 <_malloc_r+0x1a2>
  4041f6:	2b04      	cmp	r3, #4
  4041f8:	f200 8179 	bhi.w	4044ee <_malloc_r+0x32a>
  4041fc:	09b3      	lsrs	r3, r6, #6
  4041fe:	f103 0039 	add.w	r0, r3, #57	; 0x39
  404202:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  404206:	00c3      	lsls	r3, r0, #3
  404208:	4fbf      	ldr	r7, [pc, #764]	; (404508 <_malloc_r+0x344>)
  40420a:	443b      	add	r3, r7
  40420c:	f1a3 0108 	sub.w	r1, r3, #8
  404210:	685c      	ldr	r4, [r3, #4]
  404212:	42a1      	cmp	r1, r4
  404214:	d106      	bne.n	404224 <_malloc_r+0x60>
  404216:	e00c      	b.n	404232 <_malloc_r+0x6e>
  404218:	2a00      	cmp	r2, #0
  40421a:	f280 80aa 	bge.w	404372 <_malloc_r+0x1ae>
  40421e:	68e4      	ldr	r4, [r4, #12]
  404220:	42a1      	cmp	r1, r4
  404222:	d006      	beq.n	404232 <_malloc_r+0x6e>
  404224:	6863      	ldr	r3, [r4, #4]
  404226:	f023 0303 	bic.w	r3, r3, #3
  40422a:	1b9a      	subs	r2, r3, r6
  40422c:	2a0f      	cmp	r2, #15
  40422e:	ddf3      	ble.n	404218 <_malloc_r+0x54>
  404230:	4670      	mov	r0, lr
  404232:	693c      	ldr	r4, [r7, #16]
  404234:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 40451c <_malloc_r+0x358>
  404238:	4574      	cmp	r4, lr
  40423a:	f000 81ab 	beq.w	404594 <_malloc_r+0x3d0>
  40423e:	6863      	ldr	r3, [r4, #4]
  404240:	f023 0303 	bic.w	r3, r3, #3
  404244:	1b9a      	subs	r2, r3, r6
  404246:	2a0f      	cmp	r2, #15
  404248:	f300 8190 	bgt.w	40456c <_malloc_r+0x3a8>
  40424c:	2a00      	cmp	r2, #0
  40424e:	f8c7 e014 	str.w	lr, [r7, #20]
  404252:	f8c7 e010 	str.w	lr, [r7, #16]
  404256:	f280 809d 	bge.w	404394 <_malloc_r+0x1d0>
  40425a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40425e:	f080 8161 	bcs.w	404524 <_malloc_r+0x360>
  404262:	08db      	lsrs	r3, r3, #3
  404264:	f103 0c01 	add.w	ip, r3, #1
  404268:	1099      	asrs	r1, r3, #2
  40426a:	687a      	ldr	r2, [r7, #4]
  40426c:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  404270:	f8c4 8008 	str.w	r8, [r4, #8]
  404274:	2301      	movs	r3, #1
  404276:	408b      	lsls	r3, r1
  404278:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  40427c:	4313      	orrs	r3, r2
  40427e:	3908      	subs	r1, #8
  404280:	60e1      	str	r1, [r4, #12]
  404282:	607b      	str	r3, [r7, #4]
  404284:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  404288:	f8c8 400c 	str.w	r4, [r8, #12]
  40428c:	1082      	asrs	r2, r0, #2
  40428e:	2401      	movs	r4, #1
  404290:	4094      	lsls	r4, r2
  404292:	429c      	cmp	r4, r3
  404294:	f200 808b 	bhi.w	4043ae <_malloc_r+0x1ea>
  404298:	421c      	tst	r4, r3
  40429a:	d106      	bne.n	4042aa <_malloc_r+0xe6>
  40429c:	f020 0003 	bic.w	r0, r0, #3
  4042a0:	0064      	lsls	r4, r4, #1
  4042a2:	421c      	tst	r4, r3
  4042a4:	f100 0004 	add.w	r0, r0, #4
  4042a8:	d0fa      	beq.n	4042a0 <_malloc_r+0xdc>
  4042aa:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  4042ae:	46cc      	mov	ip, r9
  4042b0:	4680      	mov	r8, r0
  4042b2:	f8dc 300c 	ldr.w	r3, [ip, #12]
  4042b6:	459c      	cmp	ip, r3
  4042b8:	d107      	bne.n	4042ca <_malloc_r+0x106>
  4042ba:	e16d      	b.n	404598 <_malloc_r+0x3d4>
  4042bc:	2a00      	cmp	r2, #0
  4042be:	f280 817b 	bge.w	4045b8 <_malloc_r+0x3f4>
  4042c2:	68db      	ldr	r3, [r3, #12]
  4042c4:	459c      	cmp	ip, r3
  4042c6:	f000 8167 	beq.w	404598 <_malloc_r+0x3d4>
  4042ca:	6859      	ldr	r1, [r3, #4]
  4042cc:	f021 0103 	bic.w	r1, r1, #3
  4042d0:	1b8a      	subs	r2, r1, r6
  4042d2:	2a0f      	cmp	r2, #15
  4042d4:	ddf2      	ble.n	4042bc <_malloc_r+0xf8>
  4042d6:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  4042da:	f8d3 8008 	ldr.w	r8, [r3, #8]
  4042de:	9300      	str	r3, [sp, #0]
  4042e0:	199c      	adds	r4, r3, r6
  4042e2:	4628      	mov	r0, r5
  4042e4:	f046 0601 	orr.w	r6, r6, #1
  4042e8:	f042 0501 	orr.w	r5, r2, #1
  4042ec:	605e      	str	r6, [r3, #4]
  4042ee:	f8c8 c00c 	str.w	ip, [r8, #12]
  4042f2:	f8cc 8008 	str.w	r8, [ip, #8]
  4042f6:	617c      	str	r4, [r7, #20]
  4042f8:	613c      	str	r4, [r7, #16]
  4042fa:	f8c4 e00c 	str.w	lr, [r4, #12]
  4042fe:	f8c4 e008 	str.w	lr, [r4, #8]
  404302:	6065      	str	r5, [r4, #4]
  404304:	505a      	str	r2, [r3, r1]
  404306:	f000 fb33 	bl	404970 <__malloc_unlock>
  40430a:	9b00      	ldr	r3, [sp, #0]
  40430c:	f103 0408 	add.w	r4, r3, #8
  404310:	e01e      	b.n	404350 <_malloc_r+0x18c>
  404312:	2910      	cmp	r1, #16
  404314:	d820      	bhi.n	404358 <_malloc_r+0x194>
  404316:	f000 fb25 	bl	404964 <__malloc_lock>
  40431a:	2610      	movs	r6, #16
  40431c:	2318      	movs	r3, #24
  40431e:	2002      	movs	r0, #2
  404320:	4f79      	ldr	r7, [pc, #484]	; (404508 <_malloc_r+0x344>)
  404322:	443b      	add	r3, r7
  404324:	f1a3 0208 	sub.w	r2, r3, #8
  404328:	685c      	ldr	r4, [r3, #4]
  40432a:	4294      	cmp	r4, r2
  40432c:	f000 813d 	beq.w	4045aa <_malloc_r+0x3e6>
  404330:	6863      	ldr	r3, [r4, #4]
  404332:	68e1      	ldr	r1, [r4, #12]
  404334:	68a6      	ldr	r6, [r4, #8]
  404336:	f023 0303 	bic.w	r3, r3, #3
  40433a:	4423      	add	r3, r4
  40433c:	4628      	mov	r0, r5
  40433e:	685a      	ldr	r2, [r3, #4]
  404340:	60f1      	str	r1, [r6, #12]
  404342:	f042 0201 	orr.w	r2, r2, #1
  404346:	608e      	str	r6, [r1, #8]
  404348:	605a      	str	r2, [r3, #4]
  40434a:	f000 fb11 	bl	404970 <__malloc_unlock>
  40434e:	3408      	adds	r4, #8
  404350:	4620      	mov	r0, r4
  404352:	b003      	add	sp, #12
  404354:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404358:	2400      	movs	r4, #0
  40435a:	230c      	movs	r3, #12
  40435c:	4620      	mov	r0, r4
  40435e:	602b      	str	r3, [r5, #0]
  404360:	b003      	add	sp, #12
  404362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404366:	2040      	movs	r0, #64	; 0x40
  404368:	f44f 7300 	mov.w	r3, #512	; 0x200
  40436c:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  404370:	e74a      	b.n	404208 <_malloc_r+0x44>
  404372:	4423      	add	r3, r4
  404374:	68e1      	ldr	r1, [r4, #12]
  404376:	685a      	ldr	r2, [r3, #4]
  404378:	68a6      	ldr	r6, [r4, #8]
  40437a:	f042 0201 	orr.w	r2, r2, #1
  40437e:	60f1      	str	r1, [r6, #12]
  404380:	4628      	mov	r0, r5
  404382:	608e      	str	r6, [r1, #8]
  404384:	605a      	str	r2, [r3, #4]
  404386:	f000 faf3 	bl	404970 <__malloc_unlock>
  40438a:	3408      	adds	r4, #8
  40438c:	4620      	mov	r0, r4
  40438e:	b003      	add	sp, #12
  404390:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404394:	4423      	add	r3, r4
  404396:	4628      	mov	r0, r5
  404398:	685a      	ldr	r2, [r3, #4]
  40439a:	f042 0201 	orr.w	r2, r2, #1
  40439e:	605a      	str	r2, [r3, #4]
  4043a0:	f000 fae6 	bl	404970 <__malloc_unlock>
  4043a4:	3408      	adds	r4, #8
  4043a6:	4620      	mov	r0, r4
  4043a8:	b003      	add	sp, #12
  4043aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4043ae:	68bc      	ldr	r4, [r7, #8]
  4043b0:	6863      	ldr	r3, [r4, #4]
  4043b2:	f023 0803 	bic.w	r8, r3, #3
  4043b6:	45b0      	cmp	r8, r6
  4043b8:	d304      	bcc.n	4043c4 <_malloc_r+0x200>
  4043ba:	eba8 0306 	sub.w	r3, r8, r6
  4043be:	2b0f      	cmp	r3, #15
  4043c0:	f300 8085 	bgt.w	4044ce <_malloc_r+0x30a>
  4043c4:	f8df 9158 	ldr.w	r9, [pc, #344]	; 404520 <_malloc_r+0x35c>
  4043c8:	4b50      	ldr	r3, [pc, #320]	; (40450c <_malloc_r+0x348>)
  4043ca:	f8d9 2000 	ldr.w	r2, [r9]
  4043ce:	681b      	ldr	r3, [r3, #0]
  4043d0:	3201      	adds	r2, #1
  4043d2:	4433      	add	r3, r6
  4043d4:	eb04 0a08 	add.w	sl, r4, r8
  4043d8:	f000 8155 	beq.w	404686 <_malloc_r+0x4c2>
  4043dc:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  4043e0:	330f      	adds	r3, #15
  4043e2:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  4043e6:	f02b 0b0f 	bic.w	fp, fp, #15
  4043ea:	4659      	mov	r1, fp
  4043ec:	4628      	mov	r0, r5
  4043ee:	f000 fdbf 	bl	404f70 <_sbrk_r>
  4043f2:	1c41      	adds	r1, r0, #1
  4043f4:	4602      	mov	r2, r0
  4043f6:	f000 80fc 	beq.w	4045f2 <_malloc_r+0x42e>
  4043fa:	4582      	cmp	sl, r0
  4043fc:	f200 80f7 	bhi.w	4045ee <_malloc_r+0x42a>
  404400:	4b43      	ldr	r3, [pc, #268]	; (404510 <_malloc_r+0x34c>)
  404402:	6819      	ldr	r1, [r3, #0]
  404404:	4459      	add	r1, fp
  404406:	6019      	str	r1, [r3, #0]
  404408:	f000 814d 	beq.w	4046a6 <_malloc_r+0x4e2>
  40440c:	f8d9 0000 	ldr.w	r0, [r9]
  404410:	3001      	adds	r0, #1
  404412:	bf1b      	ittet	ne
  404414:	eba2 0a0a 	subne.w	sl, r2, sl
  404418:	4451      	addne	r1, sl
  40441a:	f8c9 2000 	streq.w	r2, [r9]
  40441e:	6019      	strne	r1, [r3, #0]
  404420:	f012 0107 	ands.w	r1, r2, #7
  404424:	f000 8115 	beq.w	404652 <_malloc_r+0x48e>
  404428:	f1c1 0008 	rsb	r0, r1, #8
  40442c:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404430:	4402      	add	r2, r0
  404432:	3108      	adds	r1, #8
  404434:	eb02 090b 	add.w	r9, r2, fp
  404438:	f3c9 090b 	ubfx	r9, r9, #0, #12
  40443c:	eba1 0909 	sub.w	r9, r1, r9
  404440:	4649      	mov	r1, r9
  404442:	4628      	mov	r0, r5
  404444:	9301      	str	r3, [sp, #4]
  404446:	9200      	str	r2, [sp, #0]
  404448:	f000 fd92 	bl	404f70 <_sbrk_r>
  40444c:	1c43      	adds	r3, r0, #1
  40444e:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404452:	f000 8143 	beq.w	4046dc <_malloc_r+0x518>
  404456:	1a80      	subs	r0, r0, r2
  404458:	4448      	add	r0, r9
  40445a:	f040 0001 	orr.w	r0, r0, #1
  40445e:	6819      	ldr	r1, [r3, #0]
  404460:	60ba      	str	r2, [r7, #8]
  404462:	4449      	add	r1, r9
  404464:	42bc      	cmp	r4, r7
  404466:	6050      	str	r0, [r2, #4]
  404468:	6019      	str	r1, [r3, #0]
  40446a:	d017      	beq.n	40449c <_malloc_r+0x2d8>
  40446c:	f1b8 0f0f 	cmp.w	r8, #15
  404470:	f240 80fb 	bls.w	40466a <_malloc_r+0x4a6>
  404474:	6860      	ldr	r0, [r4, #4]
  404476:	f1a8 020c 	sub.w	r2, r8, #12
  40447a:	f022 0207 	bic.w	r2, r2, #7
  40447e:	eb04 0e02 	add.w	lr, r4, r2
  404482:	f000 0001 	and.w	r0, r0, #1
  404486:	f04f 0c05 	mov.w	ip, #5
  40448a:	4310      	orrs	r0, r2
  40448c:	2a0f      	cmp	r2, #15
  40448e:	6060      	str	r0, [r4, #4]
  404490:	f8ce c004 	str.w	ip, [lr, #4]
  404494:	f8ce c008 	str.w	ip, [lr, #8]
  404498:	f200 8117 	bhi.w	4046ca <_malloc_r+0x506>
  40449c:	4b1d      	ldr	r3, [pc, #116]	; (404514 <_malloc_r+0x350>)
  40449e:	68bc      	ldr	r4, [r7, #8]
  4044a0:	681a      	ldr	r2, [r3, #0]
  4044a2:	4291      	cmp	r1, r2
  4044a4:	bf88      	it	hi
  4044a6:	6019      	strhi	r1, [r3, #0]
  4044a8:	4b1b      	ldr	r3, [pc, #108]	; (404518 <_malloc_r+0x354>)
  4044aa:	681a      	ldr	r2, [r3, #0]
  4044ac:	4291      	cmp	r1, r2
  4044ae:	6862      	ldr	r2, [r4, #4]
  4044b0:	bf88      	it	hi
  4044b2:	6019      	strhi	r1, [r3, #0]
  4044b4:	f022 0203 	bic.w	r2, r2, #3
  4044b8:	4296      	cmp	r6, r2
  4044ba:	eba2 0306 	sub.w	r3, r2, r6
  4044be:	d801      	bhi.n	4044c4 <_malloc_r+0x300>
  4044c0:	2b0f      	cmp	r3, #15
  4044c2:	dc04      	bgt.n	4044ce <_malloc_r+0x30a>
  4044c4:	4628      	mov	r0, r5
  4044c6:	f000 fa53 	bl	404970 <__malloc_unlock>
  4044ca:	2400      	movs	r4, #0
  4044cc:	e740      	b.n	404350 <_malloc_r+0x18c>
  4044ce:	19a2      	adds	r2, r4, r6
  4044d0:	f043 0301 	orr.w	r3, r3, #1
  4044d4:	f046 0601 	orr.w	r6, r6, #1
  4044d8:	6066      	str	r6, [r4, #4]
  4044da:	4628      	mov	r0, r5
  4044dc:	60ba      	str	r2, [r7, #8]
  4044de:	6053      	str	r3, [r2, #4]
  4044e0:	f000 fa46 	bl	404970 <__malloc_unlock>
  4044e4:	3408      	adds	r4, #8
  4044e6:	4620      	mov	r0, r4
  4044e8:	b003      	add	sp, #12
  4044ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4044ee:	2b14      	cmp	r3, #20
  4044f0:	d971      	bls.n	4045d6 <_malloc_r+0x412>
  4044f2:	2b54      	cmp	r3, #84	; 0x54
  4044f4:	f200 80a3 	bhi.w	40463e <_malloc_r+0x47a>
  4044f8:	0b33      	lsrs	r3, r6, #12
  4044fa:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  4044fe:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  404502:	00c3      	lsls	r3, r0, #3
  404504:	e680      	b.n	404208 <_malloc_r+0x44>
  404506:	bf00      	nop
  404508:	20000444 	.word	0x20000444
  40450c:	20000aa4 	.word	0x20000aa4
  404510:	20000a74 	.word	0x20000a74
  404514:	20000a9c 	.word	0x20000a9c
  404518:	20000aa0 	.word	0x20000aa0
  40451c:	2000044c 	.word	0x2000044c
  404520:	2000084c 	.word	0x2000084c
  404524:	0a5a      	lsrs	r2, r3, #9
  404526:	2a04      	cmp	r2, #4
  404528:	d95b      	bls.n	4045e2 <_malloc_r+0x41e>
  40452a:	2a14      	cmp	r2, #20
  40452c:	f200 80ae 	bhi.w	40468c <_malloc_r+0x4c8>
  404530:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  404534:	00c9      	lsls	r1, r1, #3
  404536:	325b      	adds	r2, #91	; 0x5b
  404538:	eb07 0c01 	add.w	ip, r7, r1
  40453c:	5879      	ldr	r1, [r7, r1]
  40453e:	f1ac 0c08 	sub.w	ip, ip, #8
  404542:	458c      	cmp	ip, r1
  404544:	f000 8088 	beq.w	404658 <_malloc_r+0x494>
  404548:	684a      	ldr	r2, [r1, #4]
  40454a:	f022 0203 	bic.w	r2, r2, #3
  40454e:	4293      	cmp	r3, r2
  404550:	d273      	bcs.n	40463a <_malloc_r+0x476>
  404552:	6889      	ldr	r1, [r1, #8]
  404554:	458c      	cmp	ip, r1
  404556:	d1f7      	bne.n	404548 <_malloc_r+0x384>
  404558:	f8dc 200c 	ldr.w	r2, [ip, #12]
  40455c:	687b      	ldr	r3, [r7, #4]
  40455e:	60e2      	str	r2, [r4, #12]
  404560:	f8c4 c008 	str.w	ip, [r4, #8]
  404564:	6094      	str	r4, [r2, #8]
  404566:	f8cc 400c 	str.w	r4, [ip, #12]
  40456a:	e68f      	b.n	40428c <_malloc_r+0xc8>
  40456c:	19a1      	adds	r1, r4, r6
  40456e:	f046 0c01 	orr.w	ip, r6, #1
  404572:	f042 0601 	orr.w	r6, r2, #1
  404576:	f8c4 c004 	str.w	ip, [r4, #4]
  40457a:	4628      	mov	r0, r5
  40457c:	6179      	str	r1, [r7, #20]
  40457e:	6139      	str	r1, [r7, #16]
  404580:	f8c1 e00c 	str.w	lr, [r1, #12]
  404584:	f8c1 e008 	str.w	lr, [r1, #8]
  404588:	604e      	str	r6, [r1, #4]
  40458a:	50e2      	str	r2, [r4, r3]
  40458c:	f000 f9f0 	bl	404970 <__malloc_unlock>
  404590:	3408      	adds	r4, #8
  404592:	e6dd      	b.n	404350 <_malloc_r+0x18c>
  404594:	687b      	ldr	r3, [r7, #4]
  404596:	e679      	b.n	40428c <_malloc_r+0xc8>
  404598:	f108 0801 	add.w	r8, r8, #1
  40459c:	f018 0f03 	tst.w	r8, #3
  4045a0:	f10c 0c08 	add.w	ip, ip, #8
  4045a4:	f47f ae85 	bne.w	4042b2 <_malloc_r+0xee>
  4045a8:	e02d      	b.n	404606 <_malloc_r+0x442>
  4045aa:	68dc      	ldr	r4, [r3, #12]
  4045ac:	42a3      	cmp	r3, r4
  4045ae:	bf08      	it	eq
  4045b0:	3002      	addeq	r0, #2
  4045b2:	f43f ae3e 	beq.w	404232 <_malloc_r+0x6e>
  4045b6:	e6bb      	b.n	404330 <_malloc_r+0x16c>
  4045b8:	4419      	add	r1, r3
  4045ba:	461c      	mov	r4, r3
  4045bc:	684a      	ldr	r2, [r1, #4]
  4045be:	68db      	ldr	r3, [r3, #12]
  4045c0:	f854 6f08 	ldr.w	r6, [r4, #8]!
  4045c4:	f042 0201 	orr.w	r2, r2, #1
  4045c8:	604a      	str	r2, [r1, #4]
  4045ca:	4628      	mov	r0, r5
  4045cc:	60f3      	str	r3, [r6, #12]
  4045ce:	609e      	str	r6, [r3, #8]
  4045d0:	f000 f9ce 	bl	404970 <__malloc_unlock>
  4045d4:	e6bc      	b.n	404350 <_malloc_r+0x18c>
  4045d6:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  4045da:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  4045de:	00c3      	lsls	r3, r0, #3
  4045e0:	e612      	b.n	404208 <_malloc_r+0x44>
  4045e2:	099a      	lsrs	r2, r3, #6
  4045e4:	f102 0139 	add.w	r1, r2, #57	; 0x39
  4045e8:	00c9      	lsls	r1, r1, #3
  4045ea:	3238      	adds	r2, #56	; 0x38
  4045ec:	e7a4      	b.n	404538 <_malloc_r+0x374>
  4045ee:	42bc      	cmp	r4, r7
  4045f0:	d054      	beq.n	40469c <_malloc_r+0x4d8>
  4045f2:	68bc      	ldr	r4, [r7, #8]
  4045f4:	6862      	ldr	r2, [r4, #4]
  4045f6:	f022 0203 	bic.w	r2, r2, #3
  4045fa:	e75d      	b.n	4044b8 <_malloc_r+0x2f4>
  4045fc:	f859 3908 	ldr.w	r3, [r9], #-8
  404600:	4599      	cmp	r9, r3
  404602:	f040 8086 	bne.w	404712 <_malloc_r+0x54e>
  404606:	f010 0f03 	tst.w	r0, #3
  40460a:	f100 30ff 	add.w	r0, r0, #4294967295
  40460e:	d1f5      	bne.n	4045fc <_malloc_r+0x438>
  404610:	687b      	ldr	r3, [r7, #4]
  404612:	ea23 0304 	bic.w	r3, r3, r4
  404616:	607b      	str	r3, [r7, #4]
  404618:	0064      	lsls	r4, r4, #1
  40461a:	429c      	cmp	r4, r3
  40461c:	f63f aec7 	bhi.w	4043ae <_malloc_r+0x1ea>
  404620:	2c00      	cmp	r4, #0
  404622:	f43f aec4 	beq.w	4043ae <_malloc_r+0x1ea>
  404626:	421c      	tst	r4, r3
  404628:	4640      	mov	r0, r8
  40462a:	f47f ae3e 	bne.w	4042aa <_malloc_r+0xe6>
  40462e:	0064      	lsls	r4, r4, #1
  404630:	421c      	tst	r4, r3
  404632:	f100 0004 	add.w	r0, r0, #4
  404636:	d0fa      	beq.n	40462e <_malloc_r+0x46a>
  404638:	e637      	b.n	4042aa <_malloc_r+0xe6>
  40463a:	468c      	mov	ip, r1
  40463c:	e78c      	b.n	404558 <_malloc_r+0x394>
  40463e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  404642:	d815      	bhi.n	404670 <_malloc_r+0x4ac>
  404644:	0bf3      	lsrs	r3, r6, #15
  404646:	f103 0078 	add.w	r0, r3, #120	; 0x78
  40464a:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  40464e:	00c3      	lsls	r3, r0, #3
  404650:	e5da      	b.n	404208 <_malloc_r+0x44>
  404652:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  404656:	e6ed      	b.n	404434 <_malloc_r+0x270>
  404658:	687b      	ldr	r3, [r7, #4]
  40465a:	1092      	asrs	r2, r2, #2
  40465c:	2101      	movs	r1, #1
  40465e:	fa01 f202 	lsl.w	r2, r1, r2
  404662:	4313      	orrs	r3, r2
  404664:	607b      	str	r3, [r7, #4]
  404666:	4662      	mov	r2, ip
  404668:	e779      	b.n	40455e <_malloc_r+0x39a>
  40466a:	2301      	movs	r3, #1
  40466c:	6053      	str	r3, [r2, #4]
  40466e:	e729      	b.n	4044c4 <_malloc_r+0x300>
  404670:	f240 5254 	movw	r2, #1364	; 0x554
  404674:	4293      	cmp	r3, r2
  404676:	d822      	bhi.n	4046be <_malloc_r+0x4fa>
  404678:	0cb3      	lsrs	r3, r6, #18
  40467a:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  40467e:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  404682:	00c3      	lsls	r3, r0, #3
  404684:	e5c0      	b.n	404208 <_malloc_r+0x44>
  404686:	f103 0b10 	add.w	fp, r3, #16
  40468a:	e6ae      	b.n	4043ea <_malloc_r+0x226>
  40468c:	2a54      	cmp	r2, #84	; 0x54
  40468e:	d829      	bhi.n	4046e4 <_malloc_r+0x520>
  404690:	0b1a      	lsrs	r2, r3, #12
  404692:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  404696:	00c9      	lsls	r1, r1, #3
  404698:	326e      	adds	r2, #110	; 0x6e
  40469a:	e74d      	b.n	404538 <_malloc_r+0x374>
  40469c:	4b20      	ldr	r3, [pc, #128]	; (404720 <_malloc_r+0x55c>)
  40469e:	6819      	ldr	r1, [r3, #0]
  4046a0:	4459      	add	r1, fp
  4046a2:	6019      	str	r1, [r3, #0]
  4046a4:	e6b2      	b.n	40440c <_malloc_r+0x248>
  4046a6:	f3ca 000b 	ubfx	r0, sl, #0, #12
  4046aa:	2800      	cmp	r0, #0
  4046ac:	f47f aeae 	bne.w	40440c <_malloc_r+0x248>
  4046b0:	eb08 030b 	add.w	r3, r8, fp
  4046b4:	68ba      	ldr	r2, [r7, #8]
  4046b6:	f043 0301 	orr.w	r3, r3, #1
  4046ba:	6053      	str	r3, [r2, #4]
  4046bc:	e6ee      	b.n	40449c <_malloc_r+0x2d8>
  4046be:	207f      	movs	r0, #127	; 0x7f
  4046c0:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  4046c4:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  4046c8:	e59e      	b.n	404208 <_malloc_r+0x44>
  4046ca:	f104 0108 	add.w	r1, r4, #8
  4046ce:	4628      	mov	r0, r5
  4046d0:	9300      	str	r3, [sp, #0]
  4046d2:	f000 fea3 	bl	40541c <_free_r>
  4046d6:	9b00      	ldr	r3, [sp, #0]
  4046d8:	6819      	ldr	r1, [r3, #0]
  4046da:	e6df      	b.n	40449c <_malloc_r+0x2d8>
  4046dc:	2001      	movs	r0, #1
  4046de:	f04f 0900 	mov.w	r9, #0
  4046e2:	e6bc      	b.n	40445e <_malloc_r+0x29a>
  4046e4:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4046e8:	d805      	bhi.n	4046f6 <_malloc_r+0x532>
  4046ea:	0bda      	lsrs	r2, r3, #15
  4046ec:	f102 0178 	add.w	r1, r2, #120	; 0x78
  4046f0:	00c9      	lsls	r1, r1, #3
  4046f2:	3277      	adds	r2, #119	; 0x77
  4046f4:	e720      	b.n	404538 <_malloc_r+0x374>
  4046f6:	f240 5154 	movw	r1, #1364	; 0x554
  4046fa:	428a      	cmp	r2, r1
  4046fc:	d805      	bhi.n	40470a <_malloc_r+0x546>
  4046fe:	0c9a      	lsrs	r2, r3, #18
  404700:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  404704:	00c9      	lsls	r1, r1, #3
  404706:	327c      	adds	r2, #124	; 0x7c
  404708:	e716      	b.n	404538 <_malloc_r+0x374>
  40470a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  40470e:	227e      	movs	r2, #126	; 0x7e
  404710:	e712      	b.n	404538 <_malloc_r+0x374>
  404712:	687b      	ldr	r3, [r7, #4]
  404714:	e780      	b.n	404618 <_malloc_r+0x454>
  404716:	08f0      	lsrs	r0, r6, #3
  404718:	f106 0308 	add.w	r3, r6, #8
  40471c:	e600      	b.n	404320 <_malloc_r+0x15c>
  40471e:	bf00      	nop
  404720:	20000a74 	.word	0x20000a74
	...

00404730 <memchr>:
  404730:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404734:	2a10      	cmp	r2, #16
  404736:	db2b      	blt.n	404790 <memchr+0x60>
  404738:	f010 0f07 	tst.w	r0, #7
  40473c:	d008      	beq.n	404750 <memchr+0x20>
  40473e:	f810 3b01 	ldrb.w	r3, [r0], #1
  404742:	3a01      	subs	r2, #1
  404744:	428b      	cmp	r3, r1
  404746:	d02d      	beq.n	4047a4 <memchr+0x74>
  404748:	f010 0f07 	tst.w	r0, #7
  40474c:	b342      	cbz	r2, 4047a0 <memchr+0x70>
  40474e:	d1f6      	bne.n	40473e <memchr+0xe>
  404750:	b4f0      	push	{r4, r5, r6, r7}
  404752:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404756:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40475a:	f022 0407 	bic.w	r4, r2, #7
  40475e:	f07f 0700 	mvns.w	r7, #0
  404762:	2300      	movs	r3, #0
  404764:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404768:	3c08      	subs	r4, #8
  40476a:	ea85 0501 	eor.w	r5, r5, r1
  40476e:	ea86 0601 	eor.w	r6, r6, r1
  404772:	fa85 f547 	uadd8	r5, r5, r7
  404776:	faa3 f587 	sel	r5, r3, r7
  40477a:	fa86 f647 	uadd8	r6, r6, r7
  40477e:	faa5 f687 	sel	r6, r5, r7
  404782:	b98e      	cbnz	r6, 4047a8 <memchr+0x78>
  404784:	d1ee      	bne.n	404764 <memchr+0x34>
  404786:	bcf0      	pop	{r4, r5, r6, r7}
  404788:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40478c:	f002 0207 	and.w	r2, r2, #7
  404790:	b132      	cbz	r2, 4047a0 <memchr+0x70>
  404792:	f810 3b01 	ldrb.w	r3, [r0], #1
  404796:	3a01      	subs	r2, #1
  404798:	ea83 0301 	eor.w	r3, r3, r1
  40479c:	b113      	cbz	r3, 4047a4 <memchr+0x74>
  40479e:	d1f8      	bne.n	404792 <memchr+0x62>
  4047a0:	2000      	movs	r0, #0
  4047a2:	4770      	bx	lr
  4047a4:	3801      	subs	r0, #1
  4047a6:	4770      	bx	lr
  4047a8:	2d00      	cmp	r5, #0
  4047aa:	bf06      	itte	eq
  4047ac:	4635      	moveq	r5, r6
  4047ae:	3803      	subeq	r0, #3
  4047b0:	3807      	subne	r0, #7
  4047b2:	f015 0f01 	tst.w	r5, #1
  4047b6:	d107      	bne.n	4047c8 <memchr+0x98>
  4047b8:	3001      	adds	r0, #1
  4047ba:	f415 7f80 	tst.w	r5, #256	; 0x100
  4047be:	bf02      	ittt	eq
  4047c0:	3001      	addeq	r0, #1
  4047c2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  4047c6:	3001      	addeq	r0, #1
  4047c8:	bcf0      	pop	{r4, r5, r6, r7}
  4047ca:	3801      	subs	r0, #1
  4047cc:	4770      	bx	lr
  4047ce:	bf00      	nop

004047d0 <memcmp>:
  4047d0:	2a03      	cmp	r2, #3
  4047d2:	b470      	push	{r4, r5, r6}
  4047d4:	d922      	bls.n	40481c <memcmp+0x4c>
  4047d6:	ea40 0301 	orr.w	r3, r0, r1
  4047da:	079b      	lsls	r3, r3, #30
  4047dc:	d011      	beq.n	404802 <memcmp+0x32>
  4047de:	7803      	ldrb	r3, [r0, #0]
  4047e0:	780c      	ldrb	r4, [r1, #0]
  4047e2:	42a3      	cmp	r3, r4
  4047e4:	d11d      	bne.n	404822 <memcmp+0x52>
  4047e6:	440a      	add	r2, r1
  4047e8:	3101      	adds	r1, #1
  4047ea:	e005      	b.n	4047f8 <memcmp+0x28>
  4047ec:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  4047f0:	f811 4b01 	ldrb.w	r4, [r1], #1
  4047f4:	42a3      	cmp	r3, r4
  4047f6:	d114      	bne.n	404822 <memcmp+0x52>
  4047f8:	4291      	cmp	r1, r2
  4047fa:	d1f7      	bne.n	4047ec <memcmp+0x1c>
  4047fc:	2000      	movs	r0, #0
  4047fe:	bc70      	pop	{r4, r5, r6}
  404800:	4770      	bx	lr
  404802:	680d      	ldr	r5, [r1, #0]
  404804:	6806      	ldr	r6, [r0, #0]
  404806:	42ae      	cmp	r6, r5
  404808:	460c      	mov	r4, r1
  40480a:	4603      	mov	r3, r0
  40480c:	f101 0104 	add.w	r1, r1, #4
  404810:	f100 0004 	add.w	r0, r0, #4
  404814:	d108      	bne.n	404828 <memcmp+0x58>
  404816:	3a04      	subs	r2, #4
  404818:	2a03      	cmp	r2, #3
  40481a:	d8f2      	bhi.n	404802 <memcmp+0x32>
  40481c:	2a00      	cmp	r2, #0
  40481e:	d1de      	bne.n	4047de <memcmp+0xe>
  404820:	e7ec      	b.n	4047fc <memcmp+0x2c>
  404822:	1b18      	subs	r0, r3, r4
  404824:	bc70      	pop	{r4, r5, r6}
  404826:	4770      	bx	lr
  404828:	4621      	mov	r1, r4
  40482a:	4618      	mov	r0, r3
  40482c:	e7d7      	b.n	4047de <memcmp+0xe>
  40482e:	bf00      	nop

00404830 <memcpy>:
  404830:	4684      	mov	ip, r0
  404832:	ea41 0300 	orr.w	r3, r1, r0
  404836:	f013 0303 	ands.w	r3, r3, #3
  40483a:	d16d      	bne.n	404918 <memcpy+0xe8>
  40483c:	3a40      	subs	r2, #64	; 0x40
  40483e:	d341      	bcc.n	4048c4 <memcpy+0x94>
  404840:	f851 3b04 	ldr.w	r3, [r1], #4
  404844:	f840 3b04 	str.w	r3, [r0], #4
  404848:	f851 3b04 	ldr.w	r3, [r1], #4
  40484c:	f840 3b04 	str.w	r3, [r0], #4
  404850:	f851 3b04 	ldr.w	r3, [r1], #4
  404854:	f840 3b04 	str.w	r3, [r0], #4
  404858:	f851 3b04 	ldr.w	r3, [r1], #4
  40485c:	f840 3b04 	str.w	r3, [r0], #4
  404860:	f851 3b04 	ldr.w	r3, [r1], #4
  404864:	f840 3b04 	str.w	r3, [r0], #4
  404868:	f851 3b04 	ldr.w	r3, [r1], #4
  40486c:	f840 3b04 	str.w	r3, [r0], #4
  404870:	f851 3b04 	ldr.w	r3, [r1], #4
  404874:	f840 3b04 	str.w	r3, [r0], #4
  404878:	f851 3b04 	ldr.w	r3, [r1], #4
  40487c:	f840 3b04 	str.w	r3, [r0], #4
  404880:	f851 3b04 	ldr.w	r3, [r1], #4
  404884:	f840 3b04 	str.w	r3, [r0], #4
  404888:	f851 3b04 	ldr.w	r3, [r1], #4
  40488c:	f840 3b04 	str.w	r3, [r0], #4
  404890:	f851 3b04 	ldr.w	r3, [r1], #4
  404894:	f840 3b04 	str.w	r3, [r0], #4
  404898:	f851 3b04 	ldr.w	r3, [r1], #4
  40489c:	f840 3b04 	str.w	r3, [r0], #4
  4048a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4048a4:	f840 3b04 	str.w	r3, [r0], #4
  4048a8:	f851 3b04 	ldr.w	r3, [r1], #4
  4048ac:	f840 3b04 	str.w	r3, [r0], #4
  4048b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4048b4:	f840 3b04 	str.w	r3, [r0], #4
  4048b8:	f851 3b04 	ldr.w	r3, [r1], #4
  4048bc:	f840 3b04 	str.w	r3, [r0], #4
  4048c0:	3a40      	subs	r2, #64	; 0x40
  4048c2:	d2bd      	bcs.n	404840 <memcpy+0x10>
  4048c4:	3230      	adds	r2, #48	; 0x30
  4048c6:	d311      	bcc.n	4048ec <memcpy+0xbc>
  4048c8:	f851 3b04 	ldr.w	r3, [r1], #4
  4048cc:	f840 3b04 	str.w	r3, [r0], #4
  4048d0:	f851 3b04 	ldr.w	r3, [r1], #4
  4048d4:	f840 3b04 	str.w	r3, [r0], #4
  4048d8:	f851 3b04 	ldr.w	r3, [r1], #4
  4048dc:	f840 3b04 	str.w	r3, [r0], #4
  4048e0:	f851 3b04 	ldr.w	r3, [r1], #4
  4048e4:	f840 3b04 	str.w	r3, [r0], #4
  4048e8:	3a10      	subs	r2, #16
  4048ea:	d2ed      	bcs.n	4048c8 <memcpy+0x98>
  4048ec:	320c      	adds	r2, #12
  4048ee:	d305      	bcc.n	4048fc <memcpy+0xcc>
  4048f0:	f851 3b04 	ldr.w	r3, [r1], #4
  4048f4:	f840 3b04 	str.w	r3, [r0], #4
  4048f8:	3a04      	subs	r2, #4
  4048fa:	d2f9      	bcs.n	4048f0 <memcpy+0xc0>
  4048fc:	3204      	adds	r2, #4
  4048fe:	d008      	beq.n	404912 <memcpy+0xe2>
  404900:	07d2      	lsls	r2, r2, #31
  404902:	bf1c      	itt	ne
  404904:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404908:	f800 3b01 	strbne.w	r3, [r0], #1
  40490c:	d301      	bcc.n	404912 <memcpy+0xe2>
  40490e:	880b      	ldrh	r3, [r1, #0]
  404910:	8003      	strh	r3, [r0, #0]
  404912:	4660      	mov	r0, ip
  404914:	4770      	bx	lr
  404916:	bf00      	nop
  404918:	2a08      	cmp	r2, #8
  40491a:	d313      	bcc.n	404944 <memcpy+0x114>
  40491c:	078b      	lsls	r3, r1, #30
  40491e:	d08d      	beq.n	40483c <memcpy+0xc>
  404920:	f010 0303 	ands.w	r3, r0, #3
  404924:	d08a      	beq.n	40483c <memcpy+0xc>
  404926:	f1c3 0304 	rsb	r3, r3, #4
  40492a:	1ad2      	subs	r2, r2, r3
  40492c:	07db      	lsls	r3, r3, #31
  40492e:	bf1c      	itt	ne
  404930:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404934:	f800 3b01 	strbne.w	r3, [r0], #1
  404938:	d380      	bcc.n	40483c <memcpy+0xc>
  40493a:	f831 3b02 	ldrh.w	r3, [r1], #2
  40493e:	f820 3b02 	strh.w	r3, [r0], #2
  404942:	e77b      	b.n	40483c <memcpy+0xc>
  404944:	3a04      	subs	r2, #4
  404946:	d3d9      	bcc.n	4048fc <memcpy+0xcc>
  404948:	3a01      	subs	r2, #1
  40494a:	f811 3b01 	ldrb.w	r3, [r1], #1
  40494e:	f800 3b01 	strb.w	r3, [r0], #1
  404952:	d2f9      	bcs.n	404948 <memcpy+0x118>
  404954:	780b      	ldrb	r3, [r1, #0]
  404956:	7003      	strb	r3, [r0, #0]
  404958:	784b      	ldrb	r3, [r1, #1]
  40495a:	7043      	strb	r3, [r0, #1]
  40495c:	788b      	ldrb	r3, [r1, #2]
  40495e:	7083      	strb	r3, [r0, #2]
  404960:	4660      	mov	r0, ip
  404962:	4770      	bx	lr

00404964 <__malloc_lock>:
  404964:	4801      	ldr	r0, [pc, #4]	; (40496c <__malloc_lock+0x8>)
  404966:	f7ff bc29 	b.w	4041bc <__retarget_lock_acquire_recursive>
  40496a:	bf00      	nop
  40496c:	20000eb0 	.word	0x20000eb0

00404970 <__malloc_unlock>:
  404970:	4801      	ldr	r0, [pc, #4]	; (404978 <__malloc_unlock+0x8>)
  404972:	f7ff bc25 	b.w	4041c0 <__retarget_lock_release_recursive>
  404976:	bf00      	nop
  404978:	20000eb0 	.word	0x20000eb0

0040497c <_Balloc>:
  40497c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40497e:	b570      	push	{r4, r5, r6, lr}
  404980:	4605      	mov	r5, r0
  404982:	460c      	mov	r4, r1
  404984:	b14b      	cbz	r3, 40499a <_Balloc+0x1e>
  404986:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  40498a:	b180      	cbz	r0, 4049ae <_Balloc+0x32>
  40498c:	6802      	ldr	r2, [r0, #0]
  40498e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  404992:	2300      	movs	r3, #0
  404994:	6103      	str	r3, [r0, #16]
  404996:	60c3      	str	r3, [r0, #12]
  404998:	bd70      	pop	{r4, r5, r6, pc}
  40499a:	2221      	movs	r2, #33	; 0x21
  40499c:	2104      	movs	r1, #4
  40499e:	f000 fcbd 	bl	40531c <_calloc_r>
  4049a2:	64e8      	str	r0, [r5, #76]	; 0x4c
  4049a4:	4603      	mov	r3, r0
  4049a6:	2800      	cmp	r0, #0
  4049a8:	d1ed      	bne.n	404986 <_Balloc+0xa>
  4049aa:	2000      	movs	r0, #0
  4049ac:	bd70      	pop	{r4, r5, r6, pc}
  4049ae:	2101      	movs	r1, #1
  4049b0:	fa01 f604 	lsl.w	r6, r1, r4
  4049b4:	1d72      	adds	r2, r6, #5
  4049b6:	4628      	mov	r0, r5
  4049b8:	0092      	lsls	r2, r2, #2
  4049ba:	f000 fcaf 	bl	40531c <_calloc_r>
  4049be:	2800      	cmp	r0, #0
  4049c0:	d0f3      	beq.n	4049aa <_Balloc+0x2e>
  4049c2:	6044      	str	r4, [r0, #4]
  4049c4:	6086      	str	r6, [r0, #8]
  4049c6:	e7e4      	b.n	404992 <_Balloc+0x16>

004049c8 <_Bfree>:
  4049c8:	b131      	cbz	r1, 4049d8 <_Bfree+0x10>
  4049ca:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  4049cc:	684a      	ldr	r2, [r1, #4]
  4049ce:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  4049d2:	6008      	str	r0, [r1, #0]
  4049d4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  4049d8:	4770      	bx	lr
  4049da:	bf00      	nop

004049dc <__multadd>:
  4049dc:	b5f0      	push	{r4, r5, r6, r7, lr}
  4049de:	690c      	ldr	r4, [r1, #16]
  4049e0:	b083      	sub	sp, #12
  4049e2:	460d      	mov	r5, r1
  4049e4:	4606      	mov	r6, r0
  4049e6:	f101 0e14 	add.w	lr, r1, #20
  4049ea:	2700      	movs	r7, #0
  4049ec:	f8de 0000 	ldr.w	r0, [lr]
  4049f0:	b281      	uxth	r1, r0
  4049f2:	fb02 3301 	mla	r3, r2, r1, r3
  4049f6:	0c01      	lsrs	r1, r0, #16
  4049f8:	0c18      	lsrs	r0, r3, #16
  4049fa:	fb02 0101 	mla	r1, r2, r1, r0
  4049fe:	b29b      	uxth	r3, r3
  404a00:	3701      	adds	r7, #1
  404a02:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  404a06:	42bc      	cmp	r4, r7
  404a08:	f84e 3b04 	str.w	r3, [lr], #4
  404a0c:	ea4f 4311 	mov.w	r3, r1, lsr #16
  404a10:	dcec      	bgt.n	4049ec <__multadd+0x10>
  404a12:	b13b      	cbz	r3, 404a24 <__multadd+0x48>
  404a14:	68aa      	ldr	r2, [r5, #8]
  404a16:	4294      	cmp	r4, r2
  404a18:	da07      	bge.n	404a2a <__multadd+0x4e>
  404a1a:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  404a1e:	3401      	adds	r4, #1
  404a20:	6153      	str	r3, [r2, #20]
  404a22:	612c      	str	r4, [r5, #16]
  404a24:	4628      	mov	r0, r5
  404a26:	b003      	add	sp, #12
  404a28:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404a2a:	6869      	ldr	r1, [r5, #4]
  404a2c:	9301      	str	r3, [sp, #4]
  404a2e:	3101      	adds	r1, #1
  404a30:	4630      	mov	r0, r6
  404a32:	f7ff ffa3 	bl	40497c <_Balloc>
  404a36:	692a      	ldr	r2, [r5, #16]
  404a38:	3202      	adds	r2, #2
  404a3a:	f105 010c 	add.w	r1, r5, #12
  404a3e:	4607      	mov	r7, r0
  404a40:	0092      	lsls	r2, r2, #2
  404a42:	300c      	adds	r0, #12
  404a44:	f7ff fef4 	bl	404830 <memcpy>
  404a48:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  404a4a:	6869      	ldr	r1, [r5, #4]
  404a4c:	9b01      	ldr	r3, [sp, #4]
  404a4e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  404a52:	6028      	str	r0, [r5, #0]
  404a54:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  404a58:	463d      	mov	r5, r7
  404a5a:	e7de      	b.n	404a1a <__multadd+0x3e>

00404a5c <__hi0bits>:
  404a5c:	0c02      	lsrs	r2, r0, #16
  404a5e:	0412      	lsls	r2, r2, #16
  404a60:	4603      	mov	r3, r0
  404a62:	b9b2      	cbnz	r2, 404a92 <__hi0bits+0x36>
  404a64:	0403      	lsls	r3, r0, #16
  404a66:	2010      	movs	r0, #16
  404a68:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  404a6c:	bf04      	itt	eq
  404a6e:	021b      	lsleq	r3, r3, #8
  404a70:	3008      	addeq	r0, #8
  404a72:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  404a76:	bf04      	itt	eq
  404a78:	011b      	lsleq	r3, r3, #4
  404a7a:	3004      	addeq	r0, #4
  404a7c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  404a80:	bf04      	itt	eq
  404a82:	009b      	lsleq	r3, r3, #2
  404a84:	3002      	addeq	r0, #2
  404a86:	2b00      	cmp	r3, #0
  404a88:	db02      	blt.n	404a90 <__hi0bits+0x34>
  404a8a:	005b      	lsls	r3, r3, #1
  404a8c:	d403      	bmi.n	404a96 <__hi0bits+0x3a>
  404a8e:	2020      	movs	r0, #32
  404a90:	4770      	bx	lr
  404a92:	2000      	movs	r0, #0
  404a94:	e7e8      	b.n	404a68 <__hi0bits+0xc>
  404a96:	3001      	adds	r0, #1
  404a98:	4770      	bx	lr
  404a9a:	bf00      	nop

00404a9c <__lo0bits>:
  404a9c:	6803      	ldr	r3, [r0, #0]
  404a9e:	f013 0207 	ands.w	r2, r3, #7
  404aa2:	4601      	mov	r1, r0
  404aa4:	d007      	beq.n	404ab6 <__lo0bits+0x1a>
  404aa6:	07da      	lsls	r2, r3, #31
  404aa8:	d421      	bmi.n	404aee <__lo0bits+0x52>
  404aaa:	0798      	lsls	r0, r3, #30
  404aac:	d421      	bmi.n	404af2 <__lo0bits+0x56>
  404aae:	089b      	lsrs	r3, r3, #2
  404ab0:	600b      	str	r3, [r1, #0]
  404ab2:	2002      	movs	r0, #2
  404ab4:	4770      	bx	lr
  404ab6:	b298      	uxth	r0, r3
  404ab8:	b198      	cbz	r0, 404ae2 <__lo0bits+0x46>
  404aba:	4610      	mov	r0, r2
  404abc:	f013 0fff 	tst.w	r3, #255	; 0xff
  404ac0:	bf04      	itt	eq
  404ac2:	0a1b      	lsreq	r3, r3, #8
  404ac4:	3008      	addeq	r0, #8
  404ac6:	071a      	lsls	r2, r3, #28
  404ac8:	bf04      	itt	eq
  404aca:	091b      	lsreq	r3, r3, #4
  404acc:	3004      	addeq	r0, #4
  404ace:	079a      	lsls	r2, r3, #30
  404ad0:	bf04      	itt	eq
  404ad2:	089b      	lsreq	r3, r3, #2
  404ad4:	3002      	addeq	r0, #2
  404ad6:	07da      	lsls	r2, r3, #31
  404ad8:	d407      	bmi.n	404aea <__lo0bits+0x4e>
  404ada:	085b      	lsrs	r3, r3, #1
  404adc:	d104      	bne.n	404ae8 <__lo0bits+0x4c>
  404ade:	2020      	movs	r0, #32
  404ae0:	4770      	bx	lr
  404ae2:	0c1b      	lsrs	r3, r3, #16
  404ae4:	2010      	movs	r0, #16
  404ae6:	e7e9      	b.n	404abc <__lo0bits+0x20>
  404ae8:	3001      	adds	r0, #1
  404aea:	600b      	str	r3, [r1, #0]
  404aec:	4770      	bx	lr
  404aee:	2000      	movs	r0, #0
  404af0:	4770      	bx	lr
  404af2:	085b      	lsrs	r3, r3, #1
  404af4:	600b      	str	r3, [r1, #0]
  404af6:	2001      	movs	r0, #1
  404af8:	4770      	bx	lr
  404afa:	bf00      	nop

00404afc <__i2b>:
  404afc:	b510      	push	{r4, lr}
  404afe:	460c      	mov	r4, r1
  404b00:	2101      	movs	r1, #1
  404b02:	f7ff ff3b 	bl	40497c <_Balloc>
  404b06:	2201      	movs	r2, #1
  404b08:	6144      	str	r4, [r0, #20]
  404b0a:	6102      	str	r2, [r0, #16]
  404b0c:	bd10      	pop	{r4, pc}
  404b0e:	bf00      	nop

00404b10 <__multiply>:
  404b10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404b14:	690c      	ldr	r4, [r1, #16]
  404b16:	6915      	ldr	r5, [r2, #16]
  404b18:	42ac      	cmp	r4, r5
  404b1a:	b083      	sub	sp, #12
  404b1c:	468b      	mov	fp, r1
  404b1e:	4616      	mov	r6, r2
  404b20:	da04      	bge.n	404b2c <__multiply+0x1c>
  404b22:	4622      	mov	r2, r4
  404b24:	46b3      	mov	fp, r6
  404b26:	462c      	mov	r4, r5
  404b28:	460e      	mov	r6, r1
  404b2a:	4615      	mov	r5, r2
  404b2c:	f8db 3008 	ldr.w	r3, [fp, #8]
  404b30:	f8db 1004 	ldr.w	r1, [fp, #4]
  404b34:	eb04 0805 	add.w	r8, r4, r5
  404b38:	4598      	cmp	r8, r3
  404b3a:	bfc8      	it	gt
  404b3c:	3101      	addgt	r1, #1
  404b3e:	f7ff ff1d 	bl	40497c <_Balloc>
  404b42:	f100 0914 	add.w	r9, r0, #20
  404b46:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  404b4a:	45d1      	cmp	r9, sl
  404b4c:	9000      	str	r0, [sp, #0]
  404b4e:	d205      	bcs.n	404b5c <__multiply+0x4c>
  404b50:	464b      	mov	r3, r9
  404b52:	2100      	movs	r1, #0
  404b54:	f843 1b04 	str.w	r1, [r3], #4
  404b58:	459a      	cmp	sl, r3
  404b5a:	d8fb      	bhi.n	404b54 <__multiply+0x44>
  404b5c:	f106 0c14 	add.w	ip, r6, #20
  404b60:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  404b64:	f10b 0b14 	add.w	fp, fp, #20
  404b68:	459c      	cmp	ip, r3
  404b6a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  404b6e:	d24c      	bcs.n	404c0a <__multiply+0xfa>
  404b70:	f8cd a004 	str.w	sl, [sp, #4]
  404b74:	469a      	mov	sl, r3
  404b76:	f8dc 5000 	ldr.w	r5, [ip]
  404b7a:	b2af      	uxth	r7, r5
  404b7c:	b1ef      	cbz	r7, 404bba <__multiply+0xaa>
  404b7e:	2100      	movs	r1, #0
  404b80:	464d      	mov	r5, r9
  404b82:	465e      	mov	r6, fp
  404b84:	460c      	mov	r4, r1
  404b86:	f856 2b04 	ldr.w	r2, [r6], #4
  404b8a:	6828      	ldr	r0, [r5, #0]
  404b8c:	b293      	uxth	r3, r2
  404b8e:	b281      	uxth	r1, r0
  404b90:	fb07 1303 	mla	r3, r7, r3, r1
  404b94:	0c12      	lsrs	r2, r2, #16
  404b96:	0c01      	lsrs	r1, r0, #16
  404b98:	4423      	add	r3, r4
  404b9a:	fb07 1102 	mla	r1, r7, r2, r1
  404b9e:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  404ba2:	b29b      	uxth	r3, r3
  404ba4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  404ba8:	45b6      	cmp	lr, r6
  404baa:	f845 3b04 	str.w	r3, [r5], #4
  404bae:	ea4f 4411 	mov.w	r4, r1, lsr #16
  404bb2:	d8e8      	bhi.n	404b86 <__multiply+0x76>
  404bb4:	602c      	str	r4, [r5, #0]
  404bb6:	f8dc 5000 	ldr.w	r5, [ip]
  404bba:	0c2d      	lsrs	r5, r5, #16
  404bbc:	d01d      	beq.n	404bfa <__multiply+0xea>
  404bbe:	f8d9 3000 	ldr.w	r3, [r9]
  404bc2:	4648      	mov	r0, r9
  404bc4:	461c      	mov	r4, r3
  404bc6:	4659      	mov	r1, fp
  404bc8:	2200      	movs	r2, #0
  404bca:	880e      	ldrh	r6, [r1, #0]
  404bcc:	0c24      	lsrs	r4, r4, #16
  404bce:	fb05 4406 	mla	r4, r5, r6, r4
  404bd2:	4422      	add	r2, r4
  404bd4:	b29b      	uxth	r3, r3
  404bd6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  404bda:	f840 3b04 	str.w	r3, [r0], #4
  404bde:	f851 3b04 	ldr.w	r3, [r1], #4
  404be2:	6804      	ldr	r4, [r0, #0]
  404be4:	0c1b      	lsrs	r3, r3, #16
  404be6:	b2a6      	uxth	r6, r4
  404be8:	fb05 6303 	mla	r3, r5, r3, r6
  404bec:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  404bf0:	458e      	cmp	lr, r1
  404bf2:	ea4f 4213 	mov.w	r2, r3, lsr #16
  404bf6:	d8e8      	bhi.n	404bca <__multiply+0xba>
  404bf8:	6003      	str	r3, [r0, #0]
  404bfa:	f10c 0c04 	add.w	ip, ip, #4
  404bfe:	45e2      	cmp	sl, ip
  404c00:	f109 0904 	add.w	r9, r9, #4
  404c04:	d8b7      	bhi.n	404b76 <__multiply+0x66>
  404c06:	f8dd a004 	ldr.w	sl, [sp, #4]
  404c0a:	f1b8 0f00 	cmp.w	r8, #0
  404c0e:	dd0b      	ble.n	404c28 <__multiply+0x118>
  404c10:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  404c14:	f1aa 0a04 	sub.w	sl, sl, #4
  404c18:	b11b      	cbz	r3, 404c22 <__multiply+0x112>
  404c1a:	e005      	b.n	404c28 <__multiply+0x118>
  404c1c:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  404c20:	b913      	cbnz	r3, 404c28 <__multiply+0x118>
  404c22:	f1b8 0801 	subs.w	r8, r8, #1
  404c26:	d1f9      	bne.n	404c1c <__multiply+0x10c>
  404c28:	9800      	ldr	r0, [sp, #0]
  404c2a:	f8c0 8010 	str.w	r8, [r0, #16]
  404c2e:	b003      	add	sp, #12
  404c30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404c34 <__pow5mult>:
  404c34:	f012 0303 	ands.w	r3, r2, #3
  404c38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404c3c:	4614      	mov	r4, r2
  404c3e:	4607      	mov	r7, r0
  404c40:	d12e      	bne.n	404ca0 <__pow5mult+0x6c>
  404c42:	460d      	mov	r5, r1
  404c44:	10a4      	asrs	r4, r4, #2
  404c46:	d01c      	beq.n	404c82 <__pow5mult+0x4e>
  404c48:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  404c4a:	b396      	cbz	r6, 404cb2 <__pow5mult+0x7e>
  404c4c:	07e3      	lsls	r3, r4, #31
  404c4e:	f04f 0800 	mov.w	r8, #0
  404c52:	d406      	bmi.n	404c62 <__pow5mult+0x2e>
  404c54:	1064      	asrs	r4, r4, #1
  404c56:	d014      	beq.n	404c82 <__pow5mult+0x4e>
  404c58:	6830      	ldr	r0, [r6, #0]
  404c5a:	b1a8      	cbz	r0, 404c88 <__pow5mult+0x54>
  404c5c:	4606      	mov	r6, r0
  404c5e:	07e3      	lsls	r3, r4, #31
  404c60:	d5f8      	bpl.n	404c54 <__pow5mult+0x20>
  404c62:	4632      	mov	r2, r6
  404c64:	4629      	mov	r1, r5
  404c66:	4638      	mov	r0, r7
  404c68:	f7ff ff52 	bl	404b10 <__multiply>
  404c6c:	b1b5      	cbz	r5, 404c9c <__pow5mult+0x68>
  404c6e:	686a      	ldr	r2, [r5, #4]
  404c70:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404c72:	1064      	asrs	r4, r4, #1
  404c74:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404c78:	6029      	str	r1, [r5, #0]
  404c7a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  404c7e:	4605      	mov	r5, r0
  404c80:	d1ea      	bne.n	404c58 <__pow5mult+0x24>
  404c82:	4628      	mov	r0, r5
  404c84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404c88:	4632      	mov	r2, r6
  404c8a:	4631      	mov	r1, r6
  404c8c:	4638      	mov	r0, r7
  404c8e:	f7ff ff3f 	bl	404b10 <__multiply>
  404c92:	6030      	str	r0, [r6, #0]
  404c94:	f8c0 8000 	str.w	r8, [r0]
  404c98:	4606      	mov	r6, r0
  404c9a:	e7e0      	b.n	404c5e <__pow5mult+0x2a>
  404c9c:	4605      	mov	r5, r0
  404c9e:	e7d9      	b.n	404c54 <__pow5mult+0x20>
  404ca0:	1e5a      	subs	r2, r3, #1
  404ca2:	4d0b      	ldr	r5, [pc, #44]	; (404cd0 <__pow5mult+0x9c>)
  404ca4:	2300      	movs	r3, #0
  404ca6:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  404caa:	f7ff fe97 	bl	4049dc <__multadd>
  404cae:	4605      	mov	r5, r0
  404cb0:	e7c8      	b.n	404c44 <__pow5mult+0x10>
  404cb2:	2101      	movs	r1, #1
  404cb4:	4638      	mov	r0, r7
  404cb6:	f7ff fe61 	bl	40497c <_Balloc>
  404cba:	f240 2171 	movw	r1, #625	; 0x271
  404cbe:	2201      	movs	r2, #1
  404cc0:	2300      	movs	r3, #0
  404cc2:	6141      	str	r1, [r0, #20]
  404cc4:	6102      	str	r2, [r0, #16]
  404cc6:	4606      	mov	r6, r0
  404cc8:	64b8      	str	r0, [r7, #72]	; 0x48
  404cca:	6003      	str	r3, [r0, #0]
  404ccc:	e7be      	b.n	404c4c <__pow5mult+0x18>
  404cce:	bf00      	nop
  404cd0:	004074d8 	.word	0x004074d8

00404cd4 <__lshift>:
  404cd4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404cd8:	4691      	mov	r9, r2
  404cda:	690a      	ldr	r2, [r1, #16]
  404cdc:	688b      	ldr	r3, [r1, #8]
  404cde:	ea4f 1469 	mov.w	r4, r9, asr #5
  404ce2:	eb04 0802 	add.w	r8, r4, r2
  404ce6:	f108 0501 	add.w	r5, r8, #1
  404cea:	429d      	cmp	r5, r3
  404cec:	460e      	mov	r6, r1
  404cee:	4607      	mov	r7, r0
  404cf0:	6849      	ldr	r1, [r1, #4]
  404cf2:	dd04      	ble.n	404cfe <__lshift+0x2a>
  404cf4:	005b      	lsls	r3, r3, #1
  404cf6:	429d      	cmp	r5, r3
  404cf8:	f101 0101 	add.w	r1, r1, #1
  404cfc:	dcfa      	bgt.n	404cf4 <__lshift+0x20>
  404cfe:	4638      	mov	r0, r7
  404d00:	f7ff fe3c 	bl	40497c <_Balloc>
  404d04:	2c00      	cmp	r4, #0
  404d06:	f100 0314 	add.w	r3, r0, #20
  404d0a:	dd06      	ble.n	404d1a <__lshift+0x46>
  404d0c:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  404d10:	2100      	movs	r1, #0
  404d12:	f843 1b04 	str.w	r1, [r3], #4
  404d16:	429a      	cmp	r2, r3
  404d18:	d1fb      	bne.n	404d12 <__lshift+0x3e>
  404d1a:	6934      	ldr	r4, [r6, #16]
  404d1c:	f106 0114 	add.w	r1, r6, #20
  404d20:	f019 091f 	ands.w	r9, r9, #31
  404d24:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  404d28:	d01d      	beq.n	404d66 <__lshift+0x92>
  404d2a:	f1c9 0c20 	rsb	ip, r9, #32
  404d2e:	2200      	movs	r2, #0
  404d30:	680c      	ldr	r4, [r1, #0]
  404d32:	fa04 f409 	lsl.w	r4, r4, r9
  404d36:	4314      	orrs	r4, r2
  404d38:	f843 4b04 	str.w	r4, [r3], #4
  404d3c:	f851 2b04 	ldr.w	r2, [r1], #4
  404d40:	458e      	cmp	lr, r1
  404d42:	fa22 f20c 	lsr.w	r2, r2, ip
  404d46:	d8f3      	bhi.n	404d30 <__lshift+0x5c>
  404d48:	601a      	str	r2, [r3, #0]
  404d4a:	b10a      	cbz	r2, 404d50 <__lshift+0x7c>
  404d4c:	f108 0502 	add.w	r5, r8, #2
  404d50:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404d52:	6872      	ldr	r2, [r6, #4]
  404d54:	3d01      	subs	r5, #1
  404d56:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404d5a:	6105      	str	r5, [r0, #16]
  404d5c:	6031      	str	r1, [r6, #0]
  404d5e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  404d62:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404d66:	3b04      	subs	r3, #4
  404d68:	f851 2b04 	ldr.w	r2, [r1], #4
  404d6c:	f843 2f04 	str.w	r2, [r3, #4]!
  404d70:	458e      	cmp	lr, r1
  404d72:	d8f9      	bhi.n	404d68 <__lshift+0x94>
  404d74:	e7ec      	b.n	404d50 <__lshift+0x7c>
  404d76:	bf00      	nop

00404d78 <__mcmp>:
  404d78:	b430      	push	{r4, r5}
  404d7a:	690b      	ldr	r3, [r1, #16]
  404d7c:	4605      	mov	r5, r0
  404d7e:	6900      	ldr	r0, [r0, #16]
  404d80:	1ac0      	subs	r0, r0, r3
  404d82:	d10f      	bne.n	404da4 <__mcmp+0x2c>
  404d84:	009b      	lsls	r3, r3, #2
  404d86:	3514      	adds	r5, #20
  404d88:	3114      	adds	r1, #20
  404d8a:	4419      	add	r1, r3
  404d8c:	442b      	add	r3, r5
  404d8e:	e001      	b.n	404d94 <__mcmp+0x1c>
  404d90:	429d      	cmp	r5, r3
  404d92:	d207      	bcs.n	404da4 <__mcmp+0x2c>
  404d94:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  404d98:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  404d9c:	4294      	cmp	r4, r2
  404d9e:	d0f7      	beq.n	404d90 <__mcmp+0x18>
  404da0:	d302      	bcc.n	404da8 <__mcmp+0x30>
  404da2:	2001      	movs	r0, #1
  404da4:	bc30      	pop	{r4, r5}
  404da6:	4770      	bx	lr
  404da8:	f04f 30ff 	mov.w	r0, #4294967295
  404dac:	e7fa      	b.n	404da4 <__mcmp+0x2c>
  404dae:	bf00      	nop

00404db0 <__mdiff>:
  404db0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404db4:	690f      	ldr	r7, [r1, #16]
  404db6:	460e      	mov	r6, r1
  404db8:	6911      	ldr	r1, [r2, #16]
  404dba:	1a7f      	subs	r7, r7, r1
  404dbc:	2f00      	cmp	r7, #0
  404dbe:	4690      	mov	r8, r2
  404dc0:	d117      	bne.n	404df2 <__mdiff+0x42>
  404dc2:	0089      	lsls	r1, r1, #2
  404dc4:	f106 0514 	add.w	r5, r6, #20
  404dc8:	f102 0e14 	add.w	lr, r2, #20
  404dcc:	186b      	adds	r3, r5, r1
  404dce:	4471      	add	r1, lr
  404dd0:	e001      	b.n	404dd6 <__mdiff+0x26>
  404dd2:	429d      	cmp	r5, r3
  404dd4:	d25c      	bcs.n	404e90 <__mdiff+0xe0>
  404dd6:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  404dda:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  404dde:	42a2      	cmp	r2, r4
  404de0:	d0f7      	beq.n	404dd2 <__mdiff+0x22>
  404de2:	d25e      	bcs.n	404ea2 <__mdiff+0xf2>
  404de4:	4633      	mov	r3, r6
  404de6:	462c      	mov	r4, r5
  404de8:	4646      	mov	r6, r8
  404dea:	4675      	mov	r5, lr
  404dec:	4698      	mov	r8, r3
  404dee:	2701      	movs	r7, #1
  404df0:	e005      	b.n	404dfe <__mdiff+0x4e>
  404df2:	db58      	blt.n	404ea6 <__mdiff+0xf6>
  404df4:	f106 0514 	add.w	r5, r6, #20
  404df8:	f108 0414 	add.w	r4, r8, #20
  404dfc:	2700      	movs	r7, #0
  404dfe:	6871      	ldr	r1, [r6, #4]
  404e00:	f7ff fdbc 	bl	40497c <_Balloc>
  404e04:	f8d8 3010 	ldr.w	r3, [r8, #16]
  404e08:	6936      	ldr	r6, [r6, #16]
  404e0a:	60c7      	str	r7, [r0, #12]
  404e0c:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  404e10:	46a6      	mov	lr, r4
  404e12:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  404e16:	f100 0414 	add.w	r4, r0, #20
  404e1a:	2300      	movs	r3, #0
  404e1c:	f85e 1b04 	ldr.w	r1, [lr], #4
  404e20:	f855 8b04 	ldr.w	r8, [r5], #4
  404e24:	b28a      	uxth	r2, r1
  404e26:	fa13 f388 	uxtah	r3, r3, r8
  404e2a:	0c09      	lsrs	r1, r1, #16
  404e2c:	1a9a      	subs	r2, r3, r2
  404e2e:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  404e32:	eb03 4322 	add.w	r3, r3, r2, asr #16
  404e36:	b292      	uxth	r2, r2
  404e38:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  404e3c:	45f4      	cmp	ip, lr
  404e3e:	f844 2b04 	str.w	r2, [r4], #4
  404e42:	ea4f 4323 	mov.w	r3, r3, asr #16
  404e46:	d8e9      	bhi.n	404e1c <__mdiff+0x6c>
  404e48:	42af      	cmp	r7, r5
  404e4a:	d917      	bls.n	404e7c <__mdiff+0xcc>
  404e4c:	46a4      	mov	ip, r4
  404e4e:	46ae      	mov	lr, r5
  404e50:	f85e 2b04 	ldr.w	r2, [lr], #4
  404e54:	fa13 f382 	uxtah	r3, r3, r2
  404e58:	1419      	asrs	r1, r3, #16
  404e5a:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  404e5e:	b29b      	uxth	r3, r3
  404e60:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  404e64:	4577      	cmp	r7, lr
  404e66:	f84c 2b04 	str.w	r2, [ip], #4
  404e6a:	ea4f 4321 	mov.w	r3, r1, asr #16
  404e6e:	d8ef      	bhi.n	404e50 <__mdiff+0xa0>
  404e70:	43ed      	mvns	r5, r5
  404e72:	442f      	add	r7, r5
  404e74:	f027 0703 	bic.w	r7, r7, #3
  404e78:	3704      	adds	r7, #4
  404e7a:	443c      	add	r4, r7
  404e7c:	3c04      	subs	r4, #4
  404e7e:	b922      	cbnz	r2, 404e8a <__mdiff+0xda>
  404e80:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  404e84:	3e01      	subs	r6, #1
  404e86:	2b00      	cmp	r3, #0
  404e88:	d0fa      	beq.n	404e80 <__mdiff+0xd0>
  404e8a:	6106      	str	r6, [r0, #16]
  404e8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404e90:	2100      	movs	r1, #0
  404e92:	f7ff fd73 	bl	40497c <_Balloc>
  404e96:	2201      	movs	r2, #1
  404e98:	2300      	movs	r3, #0
  404e9a:	6102      	str	r2, [r0, #16]
  404e9c:	6143      	str	r3, [r0, #20]
  404e9e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404ea2:	4674      	mov	r4, lr
  404ea4:	e7ab      	b.n	404dfe <__mdiff+0x4e>
  404ea6:	4633      	mov	r3, r6
  404ea8:	f106 0414 	add.w	r4, r6, #20
  404eac:	f102 0514 	add.w	r5, r2, #20
  404eb0:	4616      	mov	r6, r2
  404eb2:	2701      	movs	r7, #1
  404eb4:	4698      	mov	r8, r3
  404eb6:	e7a2      	b.n	404dfe <__mdiff+0x4e>

00404eb8 <__d2b>:
  404eb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404ebc:	b082      	sub	sp, #8
  404ebe:	2101      	movs	r1, #1
  404ec0:	461c      	mov	r4, r3
  404ec2:	f3c3 570a 	ubfx	r7, r3, #20, #11
  404ec6:	4615      	mov	r5, r2
  404ec8:	9e08      	ldr	r6, [sp, #32]
  404eca:	f7ff fd57 	bl	40497c <_Balloc>
  404ece:	f3c4 0413 	ubfx	r4, r4, #0, #20
  404ed2:	4680      	mov	r8, r0
  404ed4:	b10f      	cbz	r7, 404eda <__d2b+0x22>
  404ed6:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  404eda:	9401      	str	r4, [sp, #4]
  404edc:	b31d      	cbz	r5, 404f26 <__d2b+0x6e>
  404ede:	a802      	add	r0, sp, #8
  404ee0:	f840 5d08 	str.w	r5, [r0, #-8]!
  404ee4:	f7ff fdda 	bl	404a9c <__lo0bits>
  404ee8:	2800      	cmp	r0, #0
  404eea:	d134      	bne.n	404f56 <__d2b+0x9e>
  404eec:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404ef0:	f8c8 2014 	str.w	r2, [r8, #20]
  404ef4:	2b00      	cmp	r3, #0
  404ef6:	bf0c      	ite	eq
  404ef8:	2101      	moveq	r1, #1
  404efa:	2102      	movne	r1, #2
  404efc:	f8c8 3018 	str.w	r3, [r8, #24]
  404f00:	f8c8 1010 	str.w	r1, [r8, #16]
  404f04:	b9df      	cbnz	r7, 404f3e <__d2b+0x86>
  404f06:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  404f0a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  404f0e:	6030      	str	r0, [r6, #0]
  404f10:	6918      	ldr	r0, [r3, #16]
  404f12:	f7ff fda3 	bl	404a5c <__hi0bits>
  404f16:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404f18:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  404f1c:	6018      	str	r0, [r3, #0]
  404f1e:	4640      	mov	r0, r8
  404f20:	b002      	add	sp, #8
  404f22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404f26:	a801      	add	r0, sp, #4
  404f28:	f7ff fdb8 	bl	404a9c <__lo0bits>
  404f2c:	9b01      	ldr	r3, [sp, #4]
  404f2e:	f8c8 3014 	str.w	r3, [r8, #20]
  404f32:	2101      	movs	r1, #1
  404f34:	3020      	adds	r0, #32
  404f36:	f8c8 1010 	str.w	r1, [r8, #16]
  404f3a:	2f00      	cmp	r7, #0
  404f3c:	d0e3      	beq.n	404f06 <__d2b+0x4e>
  404f3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404f40:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  404f44:	4407      	add	r7, r0
  404f46:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  404f4a:	6037      	str	r7, [r6, #0]
  404f4c:	6018      	str	r0, [r3, #0]
  404f4e:	4640      	mov	r0, r8
  404f50:	b002      	add	sp, #8
  404f52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404f56:	e89d 000a 	ldmia.w	sp, {r1, r3}
  404f5a:	f1c0 0220 	rsb	r2, r0, #32
  404f5e:	fa03 f202 	lsl.w	r2, r3, r2
  404f62:	430a      	orrs	r2, r1
  404f64:	40c3      	lsrs	r3, r0
  404f66:	9301      	str	r3, [sp, #4]
  404f68:	f8c8 2014 	str.w	r2, [r8, #20]
  404f6c:	e7c2      	b.n	404ef4 <__d2b+0x3c>
  404f6e:	bf00      	nop

00404f70 <_sbrk_r>:
  404f70:	b538      	push	{r3, r4, r5, lr}
  404f72:	4c07      	ldr	r4, [pc, #28]	; (404f90 <_sbrk_r+0x20>)
  404f74:	2300      	movs	r3, #0
  404f76:	4605      	mov	r5, r0
  404f78:	4608      	mov	r0, r1
  404f7a:	6023      	str	r3, [r4, #0]
  404f7c:	f7fc fb4c 	bl	401618 <_sbrk>
  404f80:	1c43      	adds	r3, r0, #1
  404f82:	d000      	beq.n	404f86 <_sbrk_r+0x16>
  404f84:	bd38      	pop	{r3, r4, r5, pc}
  404f86:	6823      	ldr	r3, [r4, #0]
  404f88:	2b00      	cmp	r3, #0
  404f8a:	d0fb      	beq.n	404f84 <_sbrk_r+0x14>
  404f8c:	602b      	str	r3, [r5, #0]
  404f8e:	bd38      	pop	{r3, r4, r5, pc}
  404f90:	20000ec4 	.word	0x20000ec4

00404f94 <strchr>:
  404f94:	b2c9      	uxtb	r1, r1
  404f96:	2900      	cmp	r1, #0
  404f98:	d041      	beq.n	40501e <strchr+0x8a>
  404f9a:	0782      	lsls	r2, r0, #30
  404f9c:	b4f0      	push	{r4, r5, r6, r7}
  404f9e:	d067      	beq.n	405070 <strchr+0xdc>
  404fa0:	7803      	ldrb	r3, [r0, #0]
  404fa2:	2b00      	cmp	r3, #0
  404fa4:	d068      	beq.n	405078 <strchr+0xe4>
  404fa6:	4299      	cmp	r1, r3
  404fa8:	d037      	beq.n	40501a <strchr+0x86>
  404faa:	1c43      	adds	r3, r0, #1
  404fac:	e004      	b.n	404fb8 <strchr+0x24>
  404fae:	f813 0b01 	ldrb.w	r0, [r3], #1
  404fb2:	b390      	cbz	r0, 40501a <strchr+0x86>
  404fb4:	4281      	cmp	r1, r0
  404fb6:	d02f      	beq.n	405018 <strchr+0x84>
  404fb8:	079a      	lsls	r2, r3, #30
  404fba:	461c      	mov	r4, r3
  404fbc:	d1f7      	bne.n	404fae <strchr+0x1a>
  404fbe:	6825      	ldr	r5, [r4, #0]
  404fc0:	ea41 2301 	orr.w	r3, r1, r1, lsl #8
  404fc4:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
  404fc8:	ea83 0605 	eor.w	r6, r3, r5
  404fcc:	f1a6 3001 	sub.w	r0, r6, #16843009	; 0x1010101
  404fd0:	f1a5 3201 	sub.w	r2, r5, #16843009	; 0x1010101
  404fd4:	ea20 0006 	bic.w	r0, r0, r6
  404fd8:	ea22 0205 	bic.w	r2, r2, r5
  404fdc:	4302      	orrs	r2, r0
  404fde:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  404fe2:	d111      	bne.n	405008 <strchr+0x74>
  404fe4:	4620      	mov	r0, r4
  404fe6:	f850 6f04 	ldr.w	r6, [r0, #4]!
  404fea:	ea83 0706 	eor.w	r7, r3, r6
  404fee:	f1a7 3501 	sub.w	r5, r7, #16843009	; 0x1010101
  404ff2:	f1a6 3201 	sub.w	r2, r6, #16843009	; 0x1010101
  404ff6:	ea25 0507 	bic.w	r5, r5, r7
  404ffa:	ea22 0206 	bic.w	r2, r2, r6
  404ffe:	432a      	orrs	r2, r5
  405000:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  405004:	d0ef      	beq.n	404fe6 <strchr+0x52>
  405006:	4604      	mov	r4, r0
  405008:	7820      	ldrb	r0, [r4, #0]
  40500a:	b918      	cbnz	r0, 405014 <strchr+0x80>
  40500c:	e005      	b.n	40501a <strchr+0x86>
  40500e:	f814 0f01 	ldrb.w	r0, [r4, #1]!
  405012:	b110      	cbz	r0, 40501a <strchr+0x86>
  405014:	4281      	cmp	r1, r0
  405016:	d1fa      	bne.n	40500e <strchr+0x7a>
  405018:	4620      	mov	r0, r4
  40501a:	bcf0      	pop	{r4, r5, r6, r7}
  40501c:	4770      	bx	lr
  40501e:	0783      	lsls	r3, r0, #30
  405020:	d024      	beq.n	40506c <strchr+0xd8>
  405022:	7803      	ldrb	r3, [r0, #0]
  405024:	2b00      	cmp	r3, #0
  405026:	d0f9      	beq.n	40501c <strchr+0x88>
  405028:	1c43      	adds	r3, r0, #1
  40502a:	e003      	b.n	405034 <strchr+0xa0>
  40502c:	7802      	ldrb	r2, [r0, #0]
  40502e:	3301      	adds	r3, #1
  405030:	2a00      	cmp	r2, #0
  405032:	d0f3      	beq.n	40501c <strchr+0x88>
  405034:	0799      	lsls	r1, r3, #30
  405036:	4618      	mov	r0, r3
  405038:	d1f8      	bne.n	40502c <strchr+0x98>
  40503a:	6819      	ldr	r1, [r3, #0]
  40503c:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  405040:	ea22 0201 	bic.w	r2, r2, r1
  405044:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  405048:	d108      	bne.n	40505c <strchr+0xc8>
  40504a:	f853 1f04 	ldr.w	r1, [r3, #4]!
  40504e:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  405052:	ea22 0201 	bic.w	r2, r2, r1
  405056:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  40505a:	d0f6      	beq.n	40504a <strchr+0xb6>
  40505c:	781a      	ldrb	r2, [r3, #0]
  40505e:	4618      	mov	r0, r3
  405060:	b142      	cbz	r2, 405074 <strchr+0xe0>
  405062:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  405066:	2b00      	cmp	r3, #0
  405068:	d1fb      	bne.n	405062 <strchr+0xce>
  40506a:	4770      	bx	lr
  40506c:	4603      	mov	r3, r0
  40506e:	e7e4      	b.n	40503a <strchr+0xa6>
  405070:	4604      	mov	r4, r0
  405072:	e7a4      	b.n	404fbe <strchr+0x2a>
  405074:	4618      	mov	r0, r3
  405076:	4770      	bx	lr
  405078:	4618      	mov	r0, r3
  40507a:	e7ce      	b.n	40501a <strchr+0x86>
  40507c:	0000      	movs	r0, r0
	...

00405080 <strlen>:
  405080:	f890 f000 	pld	[r0]
  405084:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  405088:	f020 0107 	bic.w	r1, r0, #7
  40508c:	f06f 0c00 	mvn.w	ip, #0
  405090:	f010 0407 	ands.w	r4, r0, #7
  405094:	f891 f020 	pld	[r1, #32]
  405098:	f040 8049 	bne.w	40512e <strlen+0xae>
  40509c:	f04f 0400 	mov.w	r4, #0
  4050a0:	f06f 0007 	mvn.w	r0, #7
  4050a4:	e9d1 2300 	ldrd	r2, r3, [r1]
  4050a8:	f891 f040 	pld	[r1, #64]	; 0x40
  4050ac:	f100 0008 	add.w	r0, r0, #8
  4050b0:	fa82 f24c 	uadd8	r2, r2, ip
  4050b4:	faa4 f28c 	sel	r2, r4, ip
  4050b8:	fa83 f34c 	uadd8	r3, r3, ip
  4050bc:	faa2 f38c 	sel	r3, r2, ip
  4050c0:	bb4b      	cbnz	r3, 405116 <strlen+0x96>
  4050c2:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  4050c6:	fa82 f24c 	uadd8	r2, r2, ip
  4050ca:	f100 0008 	add.w	r0, r0, #8
  4050ce:	faa4 f28c 	sel	r2, r4, ip
  4050d2:	fa83 f34c 	uadd8	r3, r3, ip
  4050d6:	faa2 f38c 	sel	r3, r2, ip
  4050da:	b9e3      	cbnz	r3, 405116 <strlen+0x96>
  4050dc:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  4050e0:	fa82 f24c 	uadd8	r2, r2, ip
  4050e4:	f100 0008 	add.w	r0, r0, #8
  4050e8:	faa4 f28c 	sel	r2, r4, ip
  4050ec:	fa83 f34c 	uadd8	r3, r3, ip
  4050f0:	faa2 f38c 	sel	r3, r2, ip
  4050f4:	b97b      	cbnz	r3, 405116 <strlen+0x96>
  4050f6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  4050fa:	f101 0120 	add.w	r1, r1, #32
  4050fe:	fa82 f24c 	uadd8	r2, r2, ip
  405102:	f100 0008 	add.w	r0, r0, #8
  405106:	faa4 f28c 	sel	r2, r4, ip
  40510a:	fa83 f34c 	uadd8	r3, r3, ip
  40510e:	faa2 f38c 	sel	r3, r2, ip
  405112:	2b00      	cmp	r3, #0
  405114:	d0c6      	beq.n	4050a4 <strlen+0x24>
  405116:	2a00      	cmp	r2, #0
  405118:	bf04      	itt	eq
  40511a:	3004      	addeq	r0, #4
  40511c:	461a      	moveq	r2, r3
  40511e:	ba12      	rev	r2, r2
  405120:	fab2 f282 	clz	r2, r2
  405124:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  405128:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  40512c:	4770      	bx	lr
  40512e:	e9d1 2300 	ldrd	r2, r3, [r1]
  405132:	f004 0503 	and.w	r5, r4, #3
  405136:	f1c4 0000 	rsb	r0, r4, #0
  40513a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  40513e:	f014 0f04 	tst.w	r4, #4
  405142:	f891 f040 	pld	[r1, #64]	; 0x40
  405146:	fa0c f505 	lsl.w	r5, ip, r5
  40514a:	ea62 0205 	orn	r2, r2, r5
  40514e:	bf1c      	itt	ne
  405150:	ea63 0305 	ornne	r3, r3, r5
  405154:	4662      	movne	r2, ip
  405156:	f04f 0400 	mov.w	r4, #0
  40515a:	e7a9      	b.n	4050b0 <strlen+0x30>

0040515c <__ssprint_r>:
  40515c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405160:	6893      	ldr	r3, [r2, #8]
  405162:	b083      	sub	sp, #12
  405164:	4690      	mov	r8, r2
  405166:	2b00      	cmp	r3, #0
  405168:	d070      	beq.n	40524c <__ssprint_r+0xf0>
  40516a:	4682      	mov	sl, r0
  40516c:	460c      	mov	r4, r1
  40516e:	6817      	ldr	r7, [r2, #0]
  405170:	688d      	ldr	r5, [r1, #8]
  405172:	6808      	ldr	r0, [r1, #0]
  405174:	e042      	b.n	4051fc <__ssprint_r+0xa0>
  405176:	89a3      	ldrh	r3, [r4, #12]
  405178:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40517c:	d02e      	beq.n	4051dc <__ssprint_r+0x80>
  40517e:	6965      	ldr	r5, [r4, #20]
  405180:	6921      	ldr	r1, [r4, #16]
  405182:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  405186:	eba0 0b01 	sub.w	fp, r0, r1
  40518a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40518e:	f10b 0001 	add.w	r0, fp, #1
  405192:	106d      	asrs	r5, r5, #1
  405194:	4430      	add	r0, r6
  405196:	42a8      	cmp	r0, r5
  405198:	462a      	mov	r2, r5
  40519a:	bf84      	itt	hi
  40519c:	4605      	movhi	r5, r0
  40519e:	462a      	movhi	r2, r5
  4051a0:	055b      	lsls	r3, r3, #21
  4051a2:	d538      	bpl.n	405216 <__ssprint_r+0xba>
  4051a4:	4611      	mov	r1, r2
  4051a6:	4650      	mov	r0, sl
  4051a8:	f7ff f80c 	bl	4041c4 <_malloc_r>
  4051ac:	2800      	cmp	r0, #0
  4051ae:	d03c      	beq.n	40522a <__ssprint_r+0xce>
  4051b0:	465a      	mov	r2, fp
  4051b2:	6921      	ldr	r1, [r4, #16]
  4051b4:	9001      	str	r0, [sp, #4]
  4051b6:	f7ff fb3b 	bl	404830 <memcpy>
  4051ba:	89a2      	ldrh	r2, [r4, #12]
  4051bc:	9b01      	ldr	r3, [sp, #4]
  4051be:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  4051c2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  4051c6:	81a2      	strh	r2, [r4, #12]
  4051c8:	eba5 020b 	sub.w	r2, r5, fp
  4051cc:	eb03 000b 	add.w	r0, r3, fp
  4051d0:	6165      	str	r5, [r4, #20]
  4051d2:	6123      	str	r3, [r4, #16]
  4051d4:	6020      	str	r0, [r4, #0]
  4051d6:	60a2      	str	r2, [r4, #8]
  4051d8:	4635      	mov	r5, r6
  4051da:	46b3      	mov	fp, r6
  4051dc:	465a      	mov	r2, fp
  4051de:	4649      	mov	r1, r9
  4051e0:	f000 fa18 	bl	405614 <memmove>
  4051e4:	f8d8 3008 	ldr.w	r3, [r8, #8]
  4051e8:	68a2      	ldr	r2, [r4, #8]
  4051ea:	6820      	ldr	r0, [r4, #0]
  4051ec:	1b55      	subs	r5, r2, r5
  4051ee:	4458      	add	r0, fp
  4051f0:	1b9e      	subs	r6, r3, r6
  4051f2:	60a5      	str	r5, [r4, #8]
  4051f4:	6020      	str	r0, [r4, #0]
  4051f6:	f8c8 6008 	str.w	r6, [r8, #8]
  4051fa:	b33e      	cbz	r6, 40524c <__ssprint_r+0xf0>
  4051fc:	687e      	ldr	r6, [r7, #4]
  4051fe:	463b      	mov	r3, r7
  405200:	3708      	adds	r7, #8
  405202:	2e00      	cmp	r6, #0
  405204:	d0fa      	beq.n	4051fc <__ssprint_r+0xa0>
  405206:	42ae      	cmp	r6, r5
  405208:	f8d3 9000 	ldr.w	r9, [r3]
  40520c:	46ab      	mov	fp, r5
  40520e:	d2b2      	bcs.n	405176 <__ssprint_r+0x1a>
  405210:	4635      	mov	r5, r6
  405212:	46b3      	mov	fp, r6
  405214:	e7e2      	b.n	4051dc <__ssprint_r+0x80>
  405216:	4650      	mov	r0, sl
  405218:	f000 fa60 	bl	4056dc <_realloc_r>
  40521c:	4603      	mov	r3, r0
  40521e:	2800      	cmp	r0, #0
  405220:	d1d2      	bne.n	4051c8 <__ssprint_r+0x6c>
  405222:	6921      	ldr	r1, [r4, #16]
  405224:	4650      	mov	r0, sl
  405226:	f000 f8f9 	bl	40541c <_free_r>
  40522a:	230c      	movs	r3, #12
  40522c:	f8ca 3000 	str.w	r3, [sl]
  405230:	89a3      	ldrh	r3, [r4, #12]
  405232:	2200      	movs	r2, #0
  405234:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  405238:	f04f 30ff 	mov.w	r0, #4294967295
  40523c:	81a3      	strh	r3, [r4, #12]
  40523e:	f8c8 2008 	str.w	r2, [r8, #8]
  405242:	f8c8 2004 	str.w	r2, [r8, #4]
  405246:	b003      	add	sp, #12
  405248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40524c:	2000      	movs	r0, #0
  40524e:	f8c8 0004 	str.w	r0, [r8, #4]
  405252:	b003      	add	sp, #12
  405254:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405258 <__register_exitproc>:
  405258:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40525c:	4d2c      	ldr	r5, [pc, #176]	; (405310 <__register_exitproc+0xb8>)
  40525e:	4606      	mov	r6, r0
  405260:	6828      	ldr	r0, [r5, #0]
  405262:	4698      	mov	r8, r3
  405264:	460f      	mov	r7, r1
  405266:	4691      	mov	r9, r2
  405268:	f7fe ffa8 	bl	4041bc <__retarget_lock_acquire_recursive>
  40526c:	4b29      	ldr	r3, [pc, #164]	; (405314 <__register_exitproc+0xbc>)
  40526e:	681c      	ldr	r4, [r3, #0]
  405270:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  405274:	2b00      	cmp	r3, #0
  405276:	d03e      	beq.n	4052f6 <__register_exitproc+0x9e>
  405278:	685a      	ldr	r2, [r3, #4]
  40527a:	2a1f      	cmp	r2, #31
  40527c:	dc1c      	bgt.n	4052b8 <__register_exitproc+0x60>
  40527e:	f102 0e01 	add.w	lr, r2, #1
  405282:	b176      	cbz	r6, 4052a2 <__register_exitproc+0x4a>
  405284:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  405288:	2401      	movs	r4, #1
  40528a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40528e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  405292:	4094      	lsls	r4, r2
  405294:	4320      	orrs	r0, r4
  405296:	2e02      	cmp	r6, #2
  405298:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40529c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  4052a0:	d023      	beq.n	4052ea <__register_exitproc+0x92>
  4052a2:	3202      	adds	r2, #2
  4052a4:	f8c3 e004 	str.w	lr, [r3, #4]
  4052a8:	6828      	ldr	r0, [r5, #0]
  4052aa:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  4052ae:	f7fe ff87 	bl	4041c0 <__retarget_lock_release_recursive>
  4052b2:	2000      	movs	r0, #0
  4052b4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4052b8:	4b17      	ldr	r3, [pc, #92]	; (405318 <__register_exitproc+0xc0>)
  4052ba:	b30b      	cbz	r3, 405300 <__register_exitproc+0xa8>
  4052bc:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4052c0:	f3af 8000 	nop.w
  4052c4:	4603      	mov	r3, r0
  4052c6:	b1d8      	cbz	r0, 405300 <__register_exitproc+0xa8>
  4052c8:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  4052cc:	6002      	str	r2, [r0, #0]
  4052ce:	2100      	movs	r1, #0
  4052d0:	6041      	str	r1, [r0, #4]
  4052d2:	460a      	mov	r2, r1
  4052d4:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  4052d8:	f04f 0e01 	mov.w	lr, #1
  4052dc:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  4052e0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  4052e4:	2e00      	cmp	r6, #0
  4052e6:	d0dc      	beq.n	4052a2 <__register_exitproc+0x4a>
  4052e8:	e7cc      	b.n	405284 <__register_exitproc+0x2c>
  4052ea:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  4052ee:	430c      	orrs	r4, r1
  4052f0:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  4052f4:	e7d5      	b.n	4052a2 <__register_exitproc+0x4a>
  4052f6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  4052fa:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  4052fe:	e7bb      	b.n	405278 <__register_exitproc+0x20>
  405300:	6828      	ldr	r0, [r5, #0]
  405302:	f7fe ff5d 	bl	4041c0 <__retarget_lock_release_recursive>
  405306:	f04f 30ff 	mov.w	r0, #4294967295
  40530a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40530e:	bf00      	nop
  405310:	20000440 	.word	0x20000440
  405314:	0040736c 	.word	0x0040736c
  405318:	00000000 	.word	0x00000000

0040531c <_calloc_r>:
  40531c:	b510      	push	{r4, lr}
  40531e:	fb02 f101 	mul.w	r1, r2, r1
  405322:	f7fe ff4f 	bl	4041c4 <_malloc_r>
  405326:	4604      	mov	r4, r0
  405328:	b1d8      	cbz	r0, 405362 <_calloc_r+0x46>
  40532a:	f850 2c04 	ldr.w	r2, [r0, #-4]
  40532e:	f022 0203 	bic.w	r2, r2, #3
  405332:	3a04      	subs	r2, #4
  405334:	2a24      	cmp	r2, #36	; 0x24
  405336:	d818      	bhi.n	40536a <_calloc_r+0x4e>
  405338:	2a13      	cmp	r2, #19
  40533a:	d914      	bls.n	405366 <_calloc_r+0x4a>
  40533c:	2300      	movs	r3, #0
  40533e:	2a1b      	cmp	r2, #27
  405340:	6003      	str	r3, [r0, #0]
  405342:	6043      	str	r3, [r0, #4]
  405344:	d916      	bls.n	405374 <_calloc_r+0x58>
  405346:	2a24      	cmp	r2, #36	; 0x24
  405348:	6083      	str	r3, [r0, #8]
  40534a:	60c3      	str	r3, [r0, #12]
  40534c:	bf11      	iteee	ne
  40534e:	f100 0210 	addne.w	r2, r0, #16
  405352:	6103      	streq	r3, [r0, #16]
  405354:	6143      	streq	r3, [r0, #20]
  405356:	f100 0218 	addeq.w	r2, r0, #24
  40535a:	2300      	movs	r3, #0
  40535c:	6013      	str	r3, [r2, #0]
  40535e:	6053      	str	r3, [r2, #4]
  405360:	6093      	str	r3, [r2, #8]
  405362:	4620      	mov	r0, r4
  405364:	bd10      	pop	{r4, pc}
  405366:	4602      	mov	r2, r0
  405368:	e7f7      	b.n	40535a <_calloc_r+0x3e>
  40536a:	2100      	movs	r1, #0
  40536c:	f7fc fa28 	bl	4017c0 <memset>
  405370:	4620      	mov	r0, r4
  405372:	bd10      	pop	{r4, pc}
  405374:	f100 0208 	add.w	r2, r0, #8
  405378:	e7ef      	b.n	40535a <_calloc_r+0x3e>
  40537a:	bf00      	nop

0040537c <_malloc_trim_r>:
  40537c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40537e:	4f24      	ldr	r7, [pc, #144]	; (405410 <_malloc_trim_r+0x94>)
  405380:	460c      	mov	r4, r1
  405382:	4606      	mov	r6, r0
  405384:	f7ff faee 	bl	404964 <__malloc_lock>
  405388:	68bb      	ldr	r3, [r7, #8]
  40538a:	685d      	ldr	r5, [r3, #4]
  40538c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  405390:	310f      	adds	r1, #15
  405392:	f025 0503 	bic.w	r5, r5, #3
  405396:	4429      	add	r1, r5
  405398:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40539c:	f021 010f 	bic.w	r1, r1, #15
  4053a0:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  4053a4:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  4053a8:	db07      	blt.n	4053ba <_malloc_trim_r+0x3e>
  4053aa:	2100      	movs	r1, #0
  4053ac:	4630      	mov	r0, r6
  4053ae:	f7ff fddf 	bl	404f70 <_sbrk_r>
  4053b2:	68bb      	ldr	r3, [r7, #8]
  4053b4:	442b      	add	r3, r5
  4053b6:	4298      	cmp	r0, r3
  4053b8:	d004      	beq.n	4053c4 <_malloc_trim_r+0x48>
  4053ba:	4630      	mov	r0, r6
  4053bc:	f7ff fad8 	bl	404970 <__malloc_unlock>
  4053c0:	2000      	movs	r0, #0
  4053c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4053c4:	4261      	negs	r1, r4
  4053c6:	4630      	mov	r0, r6
  4053c8:	f7ff fdd2 	bl	404f70 <_sbrk_r>
  4053cc:	3001      	adds	r0, #1
  4053ce:	d00d      	beq.n	4053ec <_malloc_trim_r+0x70>
  4053d0:	4b10      	ldr	r3, [pc, #64]	; (405414 <_malloc_trim_r+0x98>)
  4053d2:	68ba      	ldr	r2, [r7, #8]
  4053d4:	6819      	ldr	r1, [r3, #0]
  4053d6:	1b2d      	subs	r5, r5, r4
  4053d8:	f045 0501 	orr.w	r5, r5, #1
  4053dc:	4630      	mov	r0, r6
  4053de:	1b09      	subs	r1, r1, r4
  4053e0:	6055      	str	r5, [r2, #4]
  4053e2:	6019      	str	r1, [r3, #0]
  4053e4:	f7ff fac4 	bl	404970 <__malloc_unlock>
  4053e8:	2001      	movs	r0, #1
  4053ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4053ec:	2100      	movs	r1, #0
  4053ee:	4630      	mov	r0, r6
  4053f0:	f7ff fdbe 	bl	404f70 <_sbrk_r>
  4053f4:	68ba      	ldr	r2, [r7, #8]
  4053f6:	1a83      	subs	r3, r0, r2
  4053f8:	2b0f      	cmp	r3, #15
  4053fa:	ddde      	ble.n	4053ba <_malloc_trim_r+0x3e>
  4053fc:	4c06      	ldr	r4, [pc, #24]	; (405418 <_malloc_trim_r+0x9c>)
  4053fe:	4905      	ldr	r1, [pc, #20]	; (405414 <_malloc_trim_r+0x98>)
  405400:	6824      	ldr	r4, [r4, #0]
  405402:	f043 0301 	orr.w	r3, r3, #1
  405406:	1b00      	subs	r0, r0, r4
  405408:	6053      	str	r3, [r2, #4]
  40540a:	6008      	str	r0, [r1, #0]
  40540c:	e7d5      	b.n	4053ba <_malloc_trim_r+0x3e>
  40540e:	bf00      	nop
  405410:	20000444 	.word	0x20000444
  405414:	20000a74 	.word	0x20000a74
  405418:	2000084c 	.word	0x2000084c

0040541c <_free_r>:
  40541c:	2900      	cmp	r1, #0
  40541e:	d044      	beq.n	4054aa <_free_r+0x8e>
  405420:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405424:	460d      	mov	r5, r1
  405426:	4680      	mov	r8, r0
  405428:	f7ff fa9c 	bl	404964 <__malloc_lock>
  40542c:	f855 7c04 	ldr.w	r7, [r5, #-4]
  405430:	4969      	ldr	r1, [pc, #420]	; (4055d8 <_free_r+0x1bc>)
  405432:	f027 0301 	bic.w	r3, r7, #1
  405436:	f1a5 0408 	sub.w	r4, r5, #8
  40543a:	18e2      	adds	r2, r4, r3
  40543c:	688e      	ldr	r6, [r1, #8]
  40543e:	6850      	ldr	r0, [r2, #4]
  405440:	42b2      	cmp	r2, r6
  405442:	f020 0003 	bic.w	r0, r0, #3
  405446:	d05e      	beq.n	405506 <_free_r+0xea>
  405448:	07fe      	lsls	r6, r7, #31
  40544a:	6050      	str	r0, [r2, #4]
  40544c:	d40b      	bmi.n	405466 <_free_r+0x4a>
  40544e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  405452:	1be4      	subs	r4, r4, r7
  405454:	f101 0e08 	add.w	lr, r1, #8
  405458:	68a5      	ldr	r5, [r4, #8]
  40545a:	4575      	cmp	r5, lr
  40545c:	443b      	add	r3, r7
  40545e:	d06d      	beq.n	40553c <_free_r+0x120>
  405460:	68e7      	ldr	r7, [r4, #12]
  405462:	60ef      	str	r7, [r5, #12]
  405464:	60bd      	str	r5, [r7, #8]
  405466:	1815      	adds	r5, r2, r0
  405468:	686d      	ldr	r5, [r5, #4]
  40546a:	07ed      	lsls	r5, r5, #31
  40546c:	d53e      	bpl.n	4054ec <_free_r+0xd0>
  40546e:	f043 0201 	orr.w	r2, r3, #1
  405472:	6062      	str	r2, [r4, #4]
  405474:	50e3      	str	r3, [r4, r3]
  405476:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40547a:	d217      	bcs.n	4054ac <_free_r+0x90>
  40547c:	08db      	lsrs	r3, r3, #3
  40547e:	1c58      	adds	r0, r3, #1
  405480:	109a      	asrs	r2, r3, #2
  405482:	684d      	ldr	r5, [r1, #4]
  405484:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  405488:	60a7      	str	r7, [r4, #8]
  40548a:	2301      	movs	r3, #1
  40548c:	4093      	lsls	r3, r2
  40548e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  405492:	432b      	orrs	r3, r5
  405494:	3a08      	subs	r2, #8
  405496:	60e2      	str	r2, [r4, #12]
  405498:	604b      	str	r3, [r1, #4]
  40549a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40549e:	60fc      	str	r4, [r7, #12]
  4054a0:	4640      	mov	r0, r8
  4054a2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4054a6:	f7ff ba63 	b.w	404970 <__malloc_unlock>
  4054aa:	4770      	bx	lr
  4054ac:	0a5a      	lsrs	r2, r3, #9
  4054ae:	2a04      	cmp	r2, #4
  4054b0:	d852      	bhi.n	405558 <_free_r+0x13c>
  4054b2:	099a      	lsrs	r2, r3, #6
  4054b4:	f102 0739 	add.w	r7, r2, #57	; 0x39
  4054b8:	00ff      	lsls	r7, r7, #3
  4054ba:	f102 0538 	add.w	r5, r2, #56	; 0x38
  4054be:	19c8      	adds	r0, r1, r7
  4054c0:	59ca      	ldr	r2, [r1, r7]
  4054c2:	3808      	subs	r0, #8
  4054c4:	4290      	cmp	r0, r2
  4054c6:	d04f      	beq.n	405568 <_free_r+0x14c>
  4054c8:	6851      	ldr	r1, [r2, #4]
  4054ca:	f021 0103 	bic.w	r1, r1, #3
  4054ce:	428b      	cmp	r3, r1
  4054d0:	d232      	bcs.n	405538 <_free_r+0x11c>
  4054d2:	6892      	ldr	r2, [r2, #8]
  4054d4:	4290      	cmp	r0, r2
  4054d6:	d1f7      	bne.n	4054c8 <_free_r+0xac>
  4054d8:	68c3      	ldr	r3, [r0, #12]
  4054da:	60a0      	str	r0, [r4, #8]
  4054dc:	60e3      	str	r3, [r4, #12]
  4054de:	609c      	str	r4, [r3, #8]
  4054e0:	60c4      	str	r4, [r0, #12]
  4054e2:	4640      	mov	r0, r8
  4054e4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4054e8:	f7ff ba42 	b.w	404970 <__malloc_unlock>
  4054ec:	6895      	ldr	r5, [r2, #8]
  4054ee:	4f3b      	ldr	r7, [pc, #236]	; (4055dc <_free_r+0x1c0>)
  4054f0:	42bd      	cmp	r5, r7
  4054f2:	4403      	add	r3, r0
  4054f4:	d040      	beq.n	405578 <_free_r+0x15c>
  4054f6:	68d0      	ldr	r0, [r2, #12]
  4054f8:	60e8      	str	r0, [r5, #12]
  4054fa:	f043 0201 	orr.w	r2, r3, #1
  4054fe:	6085      	str	r5, [r0, #8]
  405500:	6062      	str	r2, [r4, #4]
  405502:	50e3      	str	r3, [r4, r3]
  405504:	e7b7      	b.n	405476 <_free_r+0x5a>
  405506:	07ff      	lsls	r7, r7, #31
  405508:	4403      	add	r3, r0
  40550a:	d407      	bmi.n	40551c <_free_r+0x100>
  40550c:	f855 2c08 	ldr.w	r2, [r5, #-8]
  405510:	1aa4      	subs	r4, r4, r2
  405512:	4413      	add	r3, r2
  405514:	68a0      	ldr	r0, [r4, #8]
  405516:	68e2      	ldr	r2, [r4, #12]
  405518:	60c2      	str	r2, [r0, #12]
  40551a:	6090      	str	r0, [r2, #8]
  40551c:	4a30      	ldr	r2, [pc, #192]	; (4055e0 <_free_r+0x1c4>)
  40551e:	6812      	ldr	r2, [r2, #0]
  405520:	f043 0001 	orr.w	r0, r3, #1
  405524:	4293      	cmp	r3, r2
  405526:	6060      	str	r0, [r4, #4]
  405528:	608c      	str	r4, [r1, #8]
  40552a:	d3b9      	bcc.n	4054a0 <_free_r+0x84>
  40552c:	4b2d      	ldr	r3, [pc, #180]	; (4055e4 <_free_r+0x1c8>)
  40552e:	4640      	mov	r0, r8
  405530:	6819      	ldr	r1, [r3, #0]
  405532:	f7ff ff23 	bl	40537c <_malloc_trim_r>
  405536:	e7b3      	b.n	4054a0 <_free_r+0x84>
  405538:	4610      	mov	r0, r2
  40553a:	e7cd      	b.n	4054d8 <_free_r+0xbc>
  40553c:	1811      	adds	r1, r2, r0
  40553e:	6849      	ldr	r1, [r1, #4]
  405540:	07c9      	lsls	r1, r1, #31
  405542:	d444      	bmi.n	4055ce <_free_r+0x1b2>
  405544:	6891      	ldr	r1, [r2, #8]
  405546:	68d2      	ldr	r2, [r2, #12]
  405548:	60ca      	str	r2, [r1, #12]
  40554a:	4403      	add	r3, r0
  40554c:	f043 0001 	orr.w	r0, r3, #1
  405550:	6091      	str	r1, [r2, #8]
  405552:	6060      	str	r0, [r4, #4]
  405554:	50e3      	str	r3, [r4, r3]
  405556:	e7a3      	b.n	4054a0 <_free_r+0x84>
  405558:	2a14      	cmp	r2, #20
  40555a:	d816      	bhi.n	40558a <_free_r+0x16e>
  40555c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405560:	00ff      	lsls	r7, r7, #3
  405562:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  405566:	e7aa      	b.n	4054be <_free_r+0xa2>
  405568:	10aa      	asrs	r2, r5, #2
  40556a:	2301      	movs	r3, #1
  40556c:	684d      	ldr	r5, [r1, #4]
  40556e:	4093      	lsls	r3, r2
  405570:	432b      	orrs	r3, r5
  405572:	604b      	str	r3, [r1, #4]
  405574:	4603      	mov	r3, r0
  405576:	e7b0      	b.n	4054da <_free_r+0xbe>
  405578:	f043 0201 	orr.w	r2, r3, #1
  40557c:	614c      	str	r4, [r1, #20]
  40557e:	610c      	str	r4, [r1, #16]
  405580:	60e5      	str	r5, [r4, #12]
  405582:	60a5      	str	r5, [r4, #8]
  405584:	6062      	str	r2, [r4, #4]
  405586:	50e3      	str	r3, [r4, r3]
  405588:	e78a      	b.n	4054a0 <_free_r+0x84>
  40558a:	2a54      	cmp	r2, #84	; 0x54
  40558c:	d806      	bhi.n	40559c <_free_r+0x180>
  40558e:	0b1a      	lsrs	r2, r3, #12
  405590:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405594:	00ff      	lsls	r7, r7, #3
  405596:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40559a:	e790      	b.n	4054be <_free_r+0xa2>
  40559c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4055a0:	d806      	bhi.n	4055b0 <_free_r+0x194>
  4055a2:	0bda      	lsrs	r2, r3, #15
  4055a4:	f102 0778 	add.w	r7, r2, #120	; 0x78
  4055a8:	00ff      	lsls	r7, r7, #3
  4055aa:	f102 0577 	add.w	r5, r2, #119	; 0x77
  4055ae:	e786      	b.n	4054be <_free_r+0xa2>
  4055b0:	f240 5054 	movw	r0, #1364	; 0x554
  4055b4:	4282      	cmp	r2, r0
  4055b6:	d806      	bhi.n	4055c6 <_free_r+0x1aa>
  4055b8:	0c9a      	lsrs	r2, r3, #18
  4055ba:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  4055be:	00ff      	lsls	r7, r7, #3
  4055c0:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  4055c4:	e77b      	b.n	4054be <_free_r+0xa2>
  4055c6:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  4055ca:	257e      	movs	r5, #126	; 0x7e
  4055cc:	e777      	b.n	4054be <_free_r+0xa2>
  4055ce:	f043 0101 	orr.w	r1, r3, #1
  4055d2:	6061      	str	r1, [r4, #4]
  4055d4:	6013      	str	r3, [r2, #0]
  4055d6:	e763      	b.n	4054a0 <_free_r+0x84>
  4055d8:	20000444 	.word	0x20000444
  4055dc:	2000044c 	.word	0x2000044c
  4055e0:	20000850 	.word	0x20000850
  4055e4:	20000aa4 	.word	0x20000aa4

004055e8 <__ascii_mbtowc>:
  4055e8:	b082      	sub	sp, #8
  4055ea:	b149      	cbz	r1, 405600 <__ascii_mbtowc+0x18>
  4055ec:	b15a      	cbz	r2, 405606 <__ascii_mbtowc+0x1e>
  4055ee:	b16b      	cbz	r3, 40560c <__ascii_mbtowc+0x24>
  4055f0:	7813      	ldrb	r3, [r2, #0]
  4055f2:	600b      	str	r3, [r1, #0]
  4055f4:	7812      	ldrb	r2, [r2, #0]
  4055f6:	1c10      	adds	r0, r2, #0
  4055f8:	bf18      	it	ne
  4055fa:	2001      	movne	r0, #1
  4055fc:	b002      	add	sp, #8
  4055fe:	4770      	bx	lr
  405600:	a901      	add	r1, sp, #4
  405602:	2a00      	cmp	r2, #0
  405604:	d1f3      	bne.n	4055ee <__ascii_mbtowc+0x6>
  405606:	4610      	mov	r0, r2
  405608:	b002      	add	sp, #8
  40560a:	4770      	bx	lr
  40560c:	f06f 0001 	mvn.w	r0, #1
  405610:	e7f4      	b.n	4055fc <__ascii_mbtowc+0x14>
  405612:	bf00      	nop

00405614 <memmove>:
  405614:	4288      	cmp	r0, r1
  405616:	b5f0      	push	{r4, r5, r6, r7, lr}
  405618:	d90d      	bls.n	405636 <memmove+0x22>
  40561a:	188b      	adds	r3, r1, r2
  40561c:	4298      	cmp	r0, r3
  40561e:	d20a      	bcs.n	405636 <memmove+0x22>
  405620:	1884      	adds	r4, r0, r2
  405622:	2a00      	cmp	r2, #0
  405624:	d051      	beq.n	4056ca <memmove+0xb6>
  405626:	4622      	mov	r2, r4
  405628:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  40562c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  405630:	4299      	cmp	r1, r3
  405632:	d1f9      	bne.n	405628 <memmove+0x14>
  405634:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405636:	2a0f      	cmp	r2, #15
  405638:	d948      	bls.n	4056cc <memmove+0xb8>
  40563a:	ea41 0300 	orr.w	r3, r1, r0
  40563e:	079b      	lsls	r3, r3, #30
  405640:	d146      	bne.n	4056d0 <memmove+0xbc>
  405642:	f100 0410 	add.w	r4, r0, #16
  405646:	f101 0310 	add.w	r3, r1, #16
  40564a:	4615      	mov	r5, r2
  40564c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405650:	f844 6c10 	str.w	r6, [r4, #-16]
  405654:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405658:	f844 6c0c 	str.w	r6, [r4, #-12]
  40565c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405660:	f844 6c08 	str.w	r6, [r4, #-8]
  405664:	3d10      	subs	r5, #16
  405666:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40566a:	f844 6c04 	str.w	r6, [r4, #-4]
  40566e:	2d0f      	cmp	r5, #15
  405670:	f103 0310 	add.w	r3, r3, #16
  405674:	f104 0410 	add.w	r4, r4, #16
  405678:	d8e8      	bhi.n	40564c <memmove+0x38>
  40567a:	f1a2 0310 	sub.w	r3, r2, #16
  40567e:	f023 030f 	bic.w	r3, r3, #15
  405682:	f002 0e0f 	and.w	lr, r2, #15
  405686:	3310      	adds	r3, #16
  405688:	f1be 0f03 	cmp.w	lr, #3
  40568c:	4419      	add	r1, r3
  40568e:	4403      	add	r3, r0
  405690:	d921      	bls.n	4056d6 <memmove+0xc2>
  405692:	1f1e      	subs	r6, r3, #4
  405694:	460d      	mov	r5, r1
  405696:	4674      	mov	r4, lr
  405698:	3c04      	subs	r4, #4
  40569a:	f855 7b04 	ldr.w	r7, [r5], #4
  40569e:	f846 7f04 	str.w	r7, [r6, #4]!
  4056a2:	2c03      	cmp	r4, #3
  4056a4:	d8f8      	bhi.n	405698 <memmove+0x84>
  4056a6:	f1ae 0404 	sub.w	r4, lr, #4
  4056aa:	f024 0403 	bic.w	r4, r4, #3
  4056ae:	3404      	adds	r4, #4
  4056b0:	4421      	add	r1, r4
  4056b2:	4423      	add	r3, r4
  4056b4:	f002 0203 	and.w	r2, r2, #3
  4056b8:	b162      	cbz	r2, 4056d4 <memmove+0xc0>
  4056ba:	3b01      	subs	r3, #1
  4056bc:	440a      	add	r2, r1
  4056be:	f811 4b01 	ldrb.w	r4, [r1], #1
  4056c2:	f803 4f01 	strb.w	r4, [r3, #1]!
  4056c6:	428a      	cmp	r2, r1
  4056c8:	d1f9      	bne.n	4056be <memmove+0xaa>
  4056ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4056cc:	4603      	mov	r3, r0
  4056ce:	e7f3      	b.n	4056b8 <memmove+0xa4>
  4056d0:	4603      	mov	r3, r0
  4056d2:	e7f2      	b.n	4056ba <memmove+0xa6>
  4056d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4056d6:	4672      	mov	r2, lr
  4056d8:	e7ee      	b.n	4056b8 <memmove+0xa4>
  4056da:	bf00      	nop

004056dc <_realloc_r>:
  4056dc:	2900      	cmp	r1, #0
  4056de:	f000 8095 	beq.w	40580c <_realloc_r+0x130>
  4056e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4056e6:	460d      	mov	r5, r1
  4056e8:	4616      	mov	r6, r2
  4056ea:	b083      	sub	sp, #12
  4056ec:	4680      	mov	r8, r0
  4056ee:	f106 070b 	add.w	r7, r6, #11
  4056f2:	f7ff f937 	bl	404964 <__malloc_lock>
  4056f6:	f855 ec04 	ldr.w	lr, [r5, #-4]
  4056fa:	2f16      	cmp	r7, #22
  4056fc:	f02e 0403 	bic.w	r4, lr, #3
  405700:	f1a5 0908 	sub.w	r9, r5, #8
  405704:	d83c      	bhi.n	405780 <_realloc_r+0xa4>
  405706:	2210      	movs	r2, #16
  405708:	4617      	mov	r7, r2
  40570a:	42be      	cmp	r6, r7
  40570c:	d83d      	bhi.n	40578a <_realloc_r+0xae>
  40570e:	4294      	cmp	r4, r2
  405710:	da43      	bge.n	40579a <_realloc_r+0xbe>
  405712:	4bc4      	ldr	r3, [pc, #784]	; (405a24 <_realloc_r+0x348>)
  405714:	6899      	ldr	r1, [r3, #8]
  405716:	eb09 0004 	add.w	r0, r9, r4
  40571a:	4288      	cmp	r0, r1
  40571c:	f000 80b4 	beq.w	405888 <_realloc_r+0x1ac>
  405720:	6843      	ldr	r3, [r0, #4]
  405722:	f023 0101 	bic.w	r1, r3, #1
  405726:	4401      	add	r1, r0
  405728:	6849      	ldr	r1, [r1, #4]
  40572a:	07c9      	lsls	r1, r1, #31
  40572c:	d54c      	bpl.n	4057c8 <_realloc_r+0xec>
  40572e:	f01e 0f01 	tst.w	lr, #1
  405732:	f000 809b 	beq.w	40586c <_realloc_r+0x190>
  405736:	4631      	mov	r1, r6
  405738:	4640      	mov	r0, r8
  40573a:	f7fe fd43 	bl	4041c4 <_malloc_r>
  40573e:	4606      	mov	r6, r0
  405740:	2800      	cmp	r0, #0
  405742:	d03a      	beq.n	4057ba <_realloc_r+0xde>
  405744:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405748:	f023 0301 	bic.w	r3, r3, #1
  40574c:	444b      	add	r3, r9
  40574e:	f1a0 0208 	sub.w	r2, r0, #8
  405752:	429a      	cmp	r2, r3
  405754:	f000 8121 	beq.w	40599a <_realloc_r+0x2be>
  405758:	1f22      	subs	r2, r4, #4
  40575a:	2a24      	cmp	r2, #36	; 0x24
  40575c:	f200 8107 	bhi.w	40596e <_realloc_r+0x292>
  405760:	2a13      	cmp	r2, #19
  405762:	f200 80db 	bhi.w	40591c <_realloc_r+0x240>
  405766:	4603      	mov	r3, r0
  405768:	462a      	mov	r2, r5
  40576a:	6811      	ldr	r1, [r2, #0]
  40576c:	6019      	str	r1, [r3, #0]
  40576e:	6851      	ldr	r1, [r2, #4]
  405770:	6059      	str	r1, [r3, #4]
  405772:	6892      	ldr	r2, [r2, #8]
  405774:	609a      	str	r2, [r3, #8]
  405776:	4629      	mov	r1, r5
  405778:	4640      	mov	r0, r8
  40577a:	f7ff fe4f 	bl	40541c <_free_r>
  40577e:	e01c      	b.n	4057ba <_realloc_r+0xde>
  405780:	f027 0707 	bic.w	r7, r7, #7
  405784:	2f00      	cmp	r7, #0
  405786:	463a      	mov	r2, r7
  405788:	dabf      	bge.n	40570a <_realloc_r+0x2e>
  40578a:	2600      	movs	r6, #0
  40578c:	230c      	movs	r3, #12
  40578e:	4630      	mov	r0, r6
  405790:	f8c8 3000 	str.w	r3, [r8]
  405794:	b003      	add	sp, #12
  405796:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40579a:	462e      	mov	r6, r5
  40579c:	1be3      	subs	r3, r4, r7
  40579e:	2b0f      	cmp	r3, #15
  4057a0:	d81e      	bhi.n	4057e0 <_realloc_r+0x104>
  4057a2:	f8d9 3004 	ldr.w	r3, [r9, #4]
  4057a6:	f003 0301 	and.w	r3, r3, #1
  4057aa:	4323      	orrs	r3, r4
  4057ac:	444c      	add	r4, r9
  4057ae:	f8c9 3004 	str.w	r3, [r9, #4]
  4057b2:	6863      	ldr	r3, [r4, #4]
  4057b4:	f043 0301 	orr.w	r3, r3, #1
  4057b8:	6063      	str	r3, [r4, #4]
  4057ba:	4640      	mov	r0, r8
  4057bc:	f7ff f8d8 	bl	404970 <__malloc_unlock>
  4057c0:	4630      	mov	r0, r6
  4057c2:	b003      	add	sp, #12
  4057c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4057c8:	f023 0303 	bic.w	r3, r3, #3
  4057cc:	18e1      	adds	r1, r4, r3
  4057ce:	4291      	cmp	r1, r2
  4057d0:	db1f      	blt.n	405812 <_realloc_r+0x136>
  4057d2:	68c3      	ldr	r3, [r0, #12]
  4057d4:	6882      	ldr	r2, [r0, #8]
  4057d6:	462e      	mov	r6, r5
  4057d8:	60d3      	str	r3, [r2, #12]
  4057da:	460c      	mov	r4, r1
  4057dc:	609a      	str	r2, [r3, #8]
  4057de:	e7dd      	b.n	40579c <_realloc_r+0xc0>
  4057e0:	f8d9 2004 	ldr.w	r2, [r9, #4]
  4057e4:	eb09 0107 	add.w	r1, r9, r7
  4057e8:	f002 0201 	and.w	r2, r2, #1
  4057ec:	444c      	add	r4, r9
  4057ee:	f043 0301 	orr.w	r3, r3, #1
  4057f2:	4317      	orrs	r7, r2
  4057f4:	f8c9 7004 	str.w	r7, [r9, #4]
  4057f8:	604b      	str	r3, [r1, #4]
  4057fa:	6863      	ldr	r3, [r4, #4]
  4057fc:	f043 0301 	orr.w	r3, r3, #1
  405800:	3108      	adds	r1, #8
  405802:	6063      	str	r3, [r4, #4]
  405804:	4640      	mov	r0, r8
  405806:	f7ff fe09 	bl	40541c <_free_r>
  40580a:	e7d6      	b.n	4057ba <_realloc_r+0xde>
  40580c:	4611      	mov	r1, r2
  40580e:	f7fe bcd9 	b.w	4041c4 <_malloc_r>
  405812:	f01e 0f01 	tst.w	lr, #1
  405816:	d18e      	bne.n	405736 <_realloc_r+0x5a>
  405818:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40581c:	eba9 0a01 	sub.w	sl, r9, r1
  405820:	f8da 1004 	ldr.w	r1, [sl, #4]
  405824:	f021 0103 	bic.w	r1, r1, #3
  405828:	440b      	add	r3, r1
  40582a:	4423      	add	r3, r4
  40582c:	4293      	cmp	r3, r2
  40582e:	db25      	blt.n	40587c <_realloc_r+0x1a0>
  405830:	68c2      	ldr	r2, [r0, #12]
  405832:	6881      	ldr	r1, [r0, #8]
  405834:	4656      	mov	r6, sl
  405836:	60ca      	str	r2, [r1, #12]
  405838:	6091      	str	r1, [r2, #8]
  40583a:	f8da 100c 	ldr.w	r1, [sl, #12]
  40583e:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405842:	1f22      	subs	r2, r4, #4
  405844:	2a24      	cmp	r2, #36	; 0x24
  405846:	60c1      	str	r1, [r0, #12]
  405848:	6088      	str	r0, [r1, #8]
  40584a:	f200 8094 	bhi.w	405976 <_realloc_r+0x29a>
  40584e:	2a13      	cmp	r2, #19
  405850:	d96f      	bls.n	405932 <_realloc_r+0x256>
  405852:	6829      	ldr	r1, [r5, #0]
  405854:	f8ca 1008 	str.w	r1, [sl, #8]
  405858:	6869      	ldr	r1, [r5, #4]
  40585a:	f8ca 100c 	str.w	r1, [sl, #12]
  40585e:	2a1b      	cmp	r2, #27
  405860:	f200 80a2 	bhi.w	4059a8 <_realloc_r+0x2cc>
  405864:	3508      	adds	r5, #8
  405866:	f10a 0210 	add.w	r2, sl, #16
  40586a:	e063      	b.n	405934 <_realloc_r+0x258>
  40586c:	f855 3c08 	ldr.w	r3, [r5, #-8]
  405870:	eba9 0a03 	sub.w	sl, r9, r3
  405874:	f8da 1004 	ldr.w	r1, [sl, #4]
  405878:	f021 0103 	bic.w	r1, r1, #3
  40587c:	1863      	adds	r3, r4, r1
  40587e:	4293      	cmp	r3, r2
  405880:	f6ff af59 	blt.w	405736 <_realloc_r+0x5a>
  405884:	4656      	mov	r6, sl
  405886:	e7d8      	b.n	40583a <_realloc_r+0x15e>
  405888:	6841      	ldr	r1, [r0, #4]
  40588a:	f021 0b03 	bic.w	fp, r1, #3
  40588e:	44a3      	add	fp, r4
  405890:	f107 0010 	add.w	r0, r7, #16
  405894:	4583      	cmp	fp, r0
  405896:	da56      	bge.n	405946 <_realloc_r+0x26a>
  405898:	f01e 0f01 	tst.w	lr, #1
  40589c:	f47f af4b 	bne.w	405736 <_realloc_r+0x5a>
  4058a0:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4058a4:	eba9 0a01 	sub.w	sl, r9, r1
  4058a8:	f8da 1004 	ldr.w	r1, [sl, #4]
  4058ac:	f021 0103 	bic.w	r1, r1, #3
  4058b0:	448b      	add	fp, r1
  4058b2:	4558      	cmp	r0, fp
  4058b4:	dce2      	bgt.n	40587c <_realloc_r+0x1a0>
  4058b6:	4656      	mov	r6, sl
  4058b8:	f8da 100c 	ldr.w	r1, [sl, #12]
  4058bc:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4058c0:	1f22      	subs	r2, r4, #4
  4058c2:	2a24      	cmp	r2, #36	; 0x24
  4058c4:	60c1      	str	r1, [r0, #12]
  4058c6:	6088      	str	r0, [r1, #8]
  4058c8:	f200 808f 	bhi.w	4059ea <_realloc_r+0x30e>
  4058cc:	2a13      	cmp	r2, #19
  4058ce:	f240 808a 	bls.w	4059e6 <_realloc_r+0x30a>
  4058d2:	6829      	ldr	r1, [r5, #0]
  4058d4:	f8ca 1008 	str.w	r1, [sl, #8]
  4058d8:	6869      	ldr	r1, [r5, #4]
  4058da:	f8ca 100c 	str.w	r1, [sl, #12]
  4058de:	2a1b      	cmp	r2, #27
  4058e0:	f200 808a 	bhi.w	4059f8 <_realloc_r+0x31c>
  4058e4:	3508      	adds	r5, #8
  4058e6:	f10a 0210 	add.w	r2, sl, #16
  4058ea:	6829      	ldr	r1, [r5, #0]
  4058ec:	6011      	str	r1, [r2, #0]
  4058ee:	6869      	ldr	r1, [r5, #4]
  4058f0:	6051      	str	r1, [r2, #4]
  4058f2:	68a9      	ldr	r1, [r5, #8]
  4058f4:	6091      	str	r1, [r2, #8]
  4058f6:	eb0a 0107 	add.w	r1, sl, r7
  4058fa:	ebab 0207 	sub.w	r2, fp, r7
  4058fe:	f042 0201 	orr.w	r2, r2, #1
  405902:	6099      	str	r1, [r3, #8]
  405904:	604a      	str	r2, [r1, #4]
  405906:	f8da 3004 	ldr.w	r3, [sl, #4]
  40590a:	f003 0301 	and.w	r3, r3, #1
  40590e:	431f      	orrs	r7, r3
  405910:	4640      	mov	r0, r8
  405912:	f8ca 7004 	str.w	r7, [sl, #4]
  405916:	f7ff f82b 	bl	404970 <__malloc_unlock>
  40591a:	e751      	b.n	4057c0 <_realloc_r+0xe4>
  40591c:	682b      	ldr	r3, [r5, #0]
  40591e:	6003      	str	r3, [r0, #0]
  405920:	686b      	ldr	r3, [r5, #4]
  405922:	6043      	str	r3, [r0, #4]
  405924:	2a1b      	cmp	r2, #27
  405926:	d82d      	bhi.n	405984 <_realloc_r+0x2a8>
  405928:	f100 0308 	add.w	r3, r0, #8
  40592c:	f105 0208 	add.w	r2, r5, #8
  405930:	e71b      	b.n	40576a <_realloc_r+0x8e>
  405932:	4632      	mov	r2, r6
  405934:	6829      	ldr	r1, [r5, #0]
  405936:	6011      	str	r1, [r2, #0]
  405938:	6869      	ldr	r1, [r5, #4]
  40593a:	6051      	str	r1, [r2, #4]
  40593c:	68a9      	ldr	r1, [r5, #8]
  40593e:	6091      	str	r1, [r2, #8]
  405940:	461c      	mov	r4, r3
  405942:	46d1      	mov	r9, sl
  405944:	e72a      	b.n	40579c <_realloc_r+0xc0>
  405946:	eb09 0107 	add.w	r1, r9, r7
  40594a:	ebab 0b07 	sub.w	fp, fp, r7
  40594e:	f04b 0201 	orr.w	r2, fp, #1
  405952:	6099      	str	r1, [r3, #8]
  405954:	604a      	str	r2, [r1, #4]
  405956:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40595a:	f003 0301 	and.w	r3, r3, #1
  40595e:	431f      	orrs	r7, r3
  405960:	4640      	mov	r0, r8
  405962:	f845 7c04 	str.w	r7, [r5, #-4]
  405966:	f7ff f803 	bl	404970 <__malloc_unlock>
  40596a:	462e      	mov	r6, r5
  40596c:	e728      	b.n	4057c0 <_realloc_r+0xe4>
  40596e:	4629      	mov	r1, r5
  405970:	f7ff fe50 	bl	405614 <memmove>
  405974:	e6ff      	b.n	405776 <_realloc_r+0x9a>
  405976:	4629      	mov	r1, r5
  405978:	4630      	mov	r0, r6
  40597a:	461c      	mov	r4, r3
  40597c:	46d1      	mov	r9, sl
  40597e:	f7ff fe49 	bl	405614 <memmove>
  405982:	e70b      	b.n	40579c <_realloc_r+0xc0>
  405984:	68ab      	ldr	r3, [r5, #8]
  405986:	6083      	str	r3, [r0, #8]
  405988:	68eb      	ldr	r3, [r5, #12]
  40598a:	60c3      	str	r3, [r0, #12]
  40598c:	2a24      	cmp	r2, #36	; 0x24
  40598e:	d017      	beq.n	4059c0 <_realloc_r+0x2e4>
  405990:	f100 0310 	add.w	r3, r0, #16
  405994:	f105 0210 	add.w	r2, r5, #16
  405998:	e6e7      	b.n	40576a <_realloc_r+0x8e>
  40599a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  40599e:	f023 0303 	bic.w	r3, r3, #3
  4059a2:	441c      	add	r4, r3
  4059a4:	462e      	mov	r6, r5
  4059a6:	e6f9      	b.n	40579c <_realloc_r+0xc0>
  4059a8:	68a9      	ldr	r1, [r5, #8]
  4059aa:	f8ca 1010 	str.w	r1, [sl, #16]
  4059ae:	68e9      	ldr	r1, [r5, #12]
  4059b0:	f8ca 1014 	str.w	r1, [sl, #20]
  4059b4:	2a24      	cmp	r2, #36	; 0x24
  4059b6:	d00c      	beq.n	4059d2 <_realloc_r+0x2f6>
  4059b8:	3510      	adds	r5, #16
  4059ba:	f10a 0218 	add.w	r2, sl, #24
  4059be:	e7b9      	b.n	405934 <_realloc_r+0x258>
  4059c0:	692b      	ldr	r3, [r5, #16]
  4059c2:	6103      	str	r3, [r0, #16]
  4059c4:	696b      	ldr	r3, [r5, #20]
  4059c6:	6143      	str	r3, [r0, #20]
  4059c8:	f105 0218 	add.w	r2, r5, #24
  4059cc:	f100 0318 	add.w	r3, r0, #24
  4059d0:	e6cb      	b.n	40576a <_realloc_r+0x8e>
  4059d2:	692a      	ldr	r2, [r5, #16]
  4059d4:	f8ca 2018 	str.w	r2, [sl, #24]
  4059d8:	696a      	ldr	r2, [r5, #20]
  4059da:	f8ca 201c 	str.w	r2, [sl, #28]
  4059de:	3518      	adds	r5, #24
  4059e0:	f10a 0220 	add.w	r2, sl, #32
  4059e4:	e7a6      	b.n	405934 <_realloc_r+0x258>
  4059e6:	4632      	mov	r2, r6
  4059e8:	e77f      	b.n	4058ea <_realloc_r+0x20e>
  4059ea:	4629      	mov	r1, r5
  4059ec:	4630      	mov	r0, r6
  4059ee:	9301      	str	r3, [sp, #4]
  4059f0:	f7ff fe10 	bl	405614 <memmove>
  4059f4:	9b01      	ldr	r3, [sp, #4]
  4059f6:	e77e      	b.n	4058f6 <_realloc_r+0x21a>
  4059f8:	68a9      	ldr	r1, [r5, #8]
  4059fa:	f8ca 1010 	str.w	r1, [sl, #16]
  4059fe:	68e9      	ldr	r1, [r5, #12]
  405a00:	f8ca 1014 	str.w	r1, [sl, #20]
  405a04:	2a24      	cmp	r2, #36	; 0x24
  405a06:	d003      	beq.n	405a10 <_realloc_r+0x334>
  405a08:	3510      	adds	r5, #16
  405a0a:	f10a 0218 	add.w	r2, sl, #24
  405a0e:	e76c      	b.n	4058ea <_realloc_r+0x20e>
  405a10:	692a      	ldr	r2, [r5, #16]
  405a12:	f8ca 2018 	str.w	r2, [sl, #24]
  405a16:	696a      	ldr	r2, [r5, #20]
  405a18:	f8ca 201c 	str.w	r2, [sl, #28]
  405a1c:	3518      	adds	r5, #24
  405a1e:	f10a 0220 	add.w	r2, sl, #32
  405a22:	e762      	b.n	4058ea <_realloc_r+0x20e>
  405a24:	20000444 	.word	0x20000444

00405a28 <__ascii_wctomb>:
  405a28:	b121      	cbz	r1, 405a34 <__ascii_wctomb+0xc>
  405a2a:	2aff      	cmp	r2, #255	; 0xff
  405a2c:	d804      	bhi.n	405a38 <__ascii_wctomb+0x10>
  405a2e:	700a      	strb	r2, [r1, #0]
  405a30:	2001      	movs	r0, #1
  405a32:	4770      	bx	lr
  405a34:	4608      	mov	r0, r1
  405a36:	4770      	bx	lr
  405a38:	238a      	movs	r3, #138	; 0x8a
  405a3a:	6003      	str	r3, [r0, #0]
  405a3c:	f04f 30ff 	mov.w	r0, #4294967295
  405a40:	4770      	bx	lr
  405a42:	bf00      	nop

00405a44 <__aeabi_drsub>:
  405a44:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  405a48:	e002      	b.n	405a50 <__adddf3>
  405a4a:	bf00      	nop

00405a4c <__aeabi_dsub>:
  405a4c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00405a50 <__adddf3>:
  405a50:	b530      	push	{r4, r5, lr}
  405a52:	ea4f 0441 	mov.w	r4, r1, lsl #1
  405a56:	ea4f 0543 	mov.w	r5, r3, lsl #1
  405a5a:	ea94 0f05 	teq	r4, r5
  405a5e:	bf08      	it	eq
  405a60:	ea90 0f02 	teqeq	r0, r2
  405a64:	bf1f      	itttt	ne
  405a66:	ea54 0c00 	orrsne.w	ip, r4, r0
  405a6a:	ea55 0c02 	orrsne.w	ip, r5, r2
  405a6e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  405a72:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405a76:	f000 80e2 	beq.w	405c3e <__adddf3+0x1ee>
  405a7a:	ea4f 5454 	mov.w	r4, r4, lsr #21
  405a7e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  405a82:	bfb8      	it	lt
  405a84:	426d      	neglt	r5, r5
  405a86:	dd0c      	ble.n	405aa2 <__adddf3+0x52>
  405a88:	442c      	add	r4, r5
  405a8a:	ea80 0202 	eor.w	r2, r0, r2
  405a8e:	ea81 0303 	eor.w	r3, r1, r3
  405a92:	ea82 0000 	eor.w	r0, r2, r0
  405a96:	ea83 0101 	eor.w	r1, r3, r1
  405a9a:	ea80 0202 	eor.w	r2, r0, r2
  405a9e:	ea81 0303 	eor.w	r3, r1, r3
  405aa2:	2d36      	cmp	r5, #54	; 0x36
  405aa4:	bf88      	it	hi
  405aa6:	bd30      	pophi	{r4, r5, pc}
  405aa8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  405aac:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405ab0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  405ab4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  405ab8:	d002      	beq.n	405ac0 <__adddf3+0x70>
  405aba:	4240      	negs	r0, r0
  405abc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405ac0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  405ac4:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405ac8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  405acc:	d002      	beq.n	405ad4 <__adddf3+0x84>
  405ace:	4252      	negs	r2, r2
  405ad0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  405ad4:	ea94 0f05 	teq	r4, r5
  405ad8:	f000 80a7 	beq.w	405c2a <__adddf3+0x1da>
  405adc:	f1a4 0401 	sub.w	r4, r4, #1
  405ae0:	f1d5 0e20 	rsbs	lr, r5, #32
  405ae4:	db0d      	blt.n	405b02 <__adddf3+0xb2>
  405ae6:	fa02 fc0e 	lsl.w	ip, r2, lr
  405aea:	fa22 f205 	lsr.w	r2, r2, r5
  405aee:	1880      	adds	r0, r0, r2
  405af0:	f141 0100 	adc.w	r1, r1, #0
  405af4:	fa03 f20e 	lsl.w	r2, r3, lr
  405af8:	1880      	adds	r0, r0, r2
  405afa:	fa43 f305 	asr.w	r3, r3, r5
  405afe:	4159      	adcs	r1, r3
  405b00:	e00e      	b.n	405b20 <__adddf3+0xd0>
  405b02:	f1a5 0520 	sub.w	r5, r5, #32
  405b06:	f10e 0e20 	add.w	lr, lr, #32
  405b0a:	2a01      	cmp	r2, #1
  405b0c:	fa03 fc0e 	lsl.w	ip, r3, lr
  405b10:	bf28      	it	cs
  405b12:	f04c 0c02 	orrcs.w	ip, ip, #2
  405b16:	fa43 f305 	asr.w	r3, r3, r5
  405b1a:	18c0      	adds	r0, r0, r3
  405b1c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  405b20:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405b24:	d507      	bpl.n	405b36 <__adddf3+0xe6>
  405b26:	f04f 0e00 	mov.w	lr, #0
  405b2a:	f1dc 0c00 	rsbs	ip, ip, #0
  405b2e:	eb7e 0000 	sbcs.w	r0, lr, r0
  405b32:	eb6e 0101 	sbc.w	r1, lr, r1
  405b36:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  405b3a:	d31b      	bcc.n	405b74 <__adddf3+0x124>
  405b3c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  405b40:	d30c      	bcc.n	405b5c <__adddf3+0x10c>
  405b42:	0849      	lsrs	r1, r1, #1
  405b44:	ea5f 0030 	movs.w	r0, r0, rrx
  405b48:	ea4f 0c3c 	mov.w	ip, ip, rrx
  405b4c:	f104 0401 	add.w	r4, r4, #1
  405b50:	ea4f 5244 	mov.w	r2, r4, lsl #21
  405b54:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  405b58:	f080 809a 	bcs.w	405c90 <__adddf3+0x240>
  405b5c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  405b60:	bf08      	it	eq
  405b62:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405b66:	f150 0000 	adcs.w	r0, r0, #0
  405b6a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405b6e:	ea41 0105 	orr.w	r1, r1, r5
  405b72:	bd30      	pop	{r4, r5, pc}
  405b74:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  405b78:	4140      	adcs	r0, r0
  405b7a:	eb41 0101 	adc.w	r1, r1, r1
  405b7e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405b82:	f1a4 0401 	sub.w	r4, r4, #1
  405b86:	d1e9      	bne.n	405b5c <__adddf3+0x10c>
  405b88:	f091 0f00 	teq	r1, #0
  405b8c:	bf04      	itt	eq
  405b8e:	4601      	moveq	r1, r0
  405b90:	2000      	moveq	r0, #0
  405b92:	fab1 f381 	clz	r3, r1
  405b96:	bf08      	it	eq
  405b98:	3320      	addeq	r3, #32
  405b9a:	f1a3 030b 	sub.w	r3, r3, #11
  405b9e:	f1b3 0220 	subs.w	r2, r3, #32
  405ba2:	da0c      	bge.n	405bbe <__adddf3+0x16e>
  405ba4:	320c      	adds	r2, #12
  405ba6:	dd08      	ble.n	405bba <__adddf3+0x16a>
  405ba8:	f102 0c14 	add.w	ip, r2, #20
  405bac:	f1c2 020c 	rsb	r2, r2, #12
  405bb0:	fa01 f00c 	lsl.w	r0, r1, ip
  405bb4:	fa21 f102 	lsr.w	r1, r1, r2
  405bb8:	e00c      	b.n	405bd4 <__adddf3+0x184>
  405bba:	f102 0214 	add.w	r2, r2, #20
  405bbe:	bfd8      	it	le
  405bc0:	f1c2 0c20 	rsble	ip, r2, #32
  405bc4:	fa01 f102 	lsl.w	r1, r1, r2
  405bc8:	fa20 fc0c 	lsr.w	ip, r0, ip
  405bcc:	bfdc      	itt	le
  405bce:	ea41 010c 	orrle.w	r1, r1, ip
  405bd2:	4090      	lslle	r0, r2
  405bd4:	1ae4      	subs	r4, r4, r3
  405bd6:	bfa2      	ittt	ge
  405bd8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  405bdc:	4329      	orrge	r1, r5
  405bde:	bd30      	popge	{r4, r5, pc}
  405be0:	ea6f 0404 	mvn.w	r4, r4
  405be4:	3c1f      	subs	r4, #31
  405be6:	da1c      	bge.n	405c22 <__adddf3+0x1d2>
  405be8:	340c      	adds	r4, #12
  405bea:	dc0e      	bgt.n	405c0a <__adddf3+0x1ba>
  405bec:	f104 0414 	add.w	r4, r4, #20
  405bf0:	f1c4 0220 	rsb	r2, r4, #32
  405bf4:	fa20 f004 	lsr.w	r0, r0, r4
  405bf8:	fa01 f302 	lsl.w	r3, r1, r2
  405bfc:	ea40 0003 	orr.w	r0, r0, r3
  405c00:	fa21 f304 	lsr.w	r3, r1, r4
  405c04:	ea45 0103 	orr.w	r1, r5, r3
  405c08:	bd30      	pop	{r4, r5, pc}
  405c0a:	f1c4 040c 	rsb	r4, r4, #12
  405c0e:	f1c4 0220 	rsb	r2, r4, #32
  405c12:	fa20 f002 	lsr.w	r0, r0, r2
  405c16:	fa01 f304 	lsl.w	r3, r1, r4
  405c1a:	ea40 0003 	orr.w	r0, r0, r3
  405c1e:	4629      	mov	r1, r5
  405c20:	bd30      	pop	{r4, r5, pc}
  405c22:	fa21 f004 	lsr.w	r0, r1, r4
  405c26:	4629      	mov	r1, r5
  405c28:	bd30      	pop	{r4, r5, pc}
  405c2a:	f094 0f00 	teq	r4, #0
  405c2e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  405c32:	bf06      	itte	eq
  405c34:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  405c38:	3401      	addeq	r4, #1
  405c3a:	3d01      	subne	r5, #1
  405c3c:	e74e      	b.n	405adc <__adddf3+0x8c>
  405c3e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405c42:	bf18      	it	ne
  405c44:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405c48:	d029      	beq.n	405c9e <__adddf3+0x24e>
  405c4a:	ea94 0f05 	teq	r4, r5
  405c4e:	bf08      	it	eq
  405c50:	ea90 0f02 	teqeq	r0, r2
  405c54:	d005      	beq.n	405c62 <__adddf3+0x212>
  405c56:	ea54 0c00 	orrs.w	ip, r4, r0
  405c5a:	bf04      	itt	eq
  405c5c:	4619      	moveq	r1, r3
  405c5e:	4610      	moveq	r0, r2
  405c60:	bd30      	pop	{r4, r5, pc}
  405c62:	ea91 0f03 	teq	r1, r3
  405c66:	bf1e      	ittt	ne
  405c68:	2100      	movne	r1, #0
  405c6a:	2000      	movne	r0, #0
  405c6c:	bd30      	popne	{r4, r5, pc}
  405c6e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  405c72:	d105      	bne.n	405c80 <__adddf3+0x230>
  405c74:	0040      	lsls	r0, r0, #1
  405c76:	4149      	adcs	r1, r1
  405c78:	bf28      	it	cs
  405c7a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  405c7e:	bd30      	pop	{r4, r5, pc}
  405c80:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  405c84:	bf3c      	itt	cc
  405c86:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  405c8a:	bd30      	popcc	{r4, r5, pc}
  405c8c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405c90:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  405c94:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405c98:	f04f 0000 	mov.w	r0, #0
  405c9c:	bd30      	pop	{r4, r5, pc}
  405c9e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405ca2:	bf1a      	itte	ne
  405ca4:	4619      	movne	r1, r3
  405ca6:	4610      	movne	r0, r2
  405ca8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  405cac:	bf1c      	itt	ne
  405cae:	460b      	movne	r3, r1
  405cb0:	4602      	movne	r2, r0
  405cb2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405cb6:	bf06      	itte	eq
  405cb8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  405cbc:	ea91 0f03 	teqeq	r1, r3
  405cc0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  405cc4:	bd30      	pop	{r4, r5, pc}
  405cc6:	bf00      	nop

00405cc8 <__aeabi_ui2d>:
  405cc8:	f090 0f00 	teq	r0, #0
  405ccc:	bf04      	itt	eq
  405cce:	2100      	moveq	r1, #0
  405cd0:	4770      	bxeq	lr
  405cd2:	b530      	push	{r4, r5, lr}
  405cd4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405cd8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405cdc:	f04f 0500 	mov.w	r5, #0
  405ce0:	f04f 0100 	mov.w	r1, #0
  405ce4:	e750      	b.n	405b88 <__adddf3+0x138>
  405ce6:	bf00      	nop

00405ce8 <__aeabi_i2d>:
  405ce8:	f090 0f00 	teq	r0, #0
  405cec:	bf04      	itt	eq
  405cee:	2100      	moveq	r1, #0
  405cf0:	4770      	bxeq	lr
  405cf2:	b530      	push	{r4, r5, lr}
  405cf4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405cf8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405cfc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  405d00:	bf48      	it	mi
  405d02:	4240      	negmi	r0, r0
  405d04:	f04f 0100 	mov.w	r1, #0
  405d08:	e73e      	b.n	405b88 <__adddf3+0x138>
  405d0a:	bf00      	nop

00405d0c <__aeabi_f2d>:
  405d0c:	0042      	lsls	r2, r0, #1
  405d0e:	ea4f 01e2 	mov.w	r1, r2, asr #3
  405d12:	ea4f 0131 	mov.w	r1, r1, rrx
  405d16:	ea4f 7002 	mov.w	r0, r2, lsl #28
  405d1a:	bf1f      	itttt	ne
  405d1c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  405d20:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405d24:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  405d28:	4770      	bxne	lr
  405d2a:	f092 0f00 	teq	r2, #0
  405d2e:	bf14      	ite	ne
  405d30:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405d34:	4770      	bxeq	lr
  405d36:	b530      	push	{r4, r5, lr}
  405d38:	f44f 7460 	mov.w	r4, #896	; 0x380
  405d3c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405d40:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405d44:	e720      	b.n	405b88 <__adddf3+0x138>
  405d46:	bf00      	nop

00405d48 <__aeabi_ul2d>:
  405d48:	ea50 0201 	orrs.w	r2, r0, r1
  405d4c:	bf08      	it	eq
  405d4e:	4770      	bxeq	lr
  405d50:	b530      	push	{r4, r5, lr}
  405d52:	f04f 0500 	mov.w	r5, #0
  405d56:	e00a      	b.n	405d6e <__aeabi_l2d+0x16>

00405d58 <__aeabi_l2d>:
  405d58:	ea50 0201 	orrs.w	r2, r0, r1
  405d5c:	bf08      	it	eq
  405d5e:	4770      	bxeq	lr
  405d60:	b530      	push	{r4, r5, lr}
  405d62:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  405d66:	d502      	bpl.n	405d6e <__aeabi_l2d+0x16>
  405d68:	4240      	negs	r0, r0
  405d6a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405d6e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405d72:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405d76:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  405d7a:	f43f aedc 	beq.w	405b36 <__adddf3+0xe6>
  405d7e:	f04f 0203 	mov.w	r2, #3
  405d82:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405d86:	bf18      	it	ne
  405d88:	3203      	addne	r2, #3
  405d8a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405d8e:	bf18      	it	ne
  405d90:	3203      	addne	r2, #3
  405d92:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  405d96:	f1c2 0320 	rsb	r3, r2, #32
  405d9a:	fa00 fc03 	lsl.w	ip, r0, r3
  405d9e:	fa20 f002 	lsr.w	r0, r0, r2
  405da2:	fa01 fe03 	lsl.w	lr, r1, r3
  405da6:	ea40 000e 	orr.w	r0, r0, lr
  405daa:	fa21 f102 	lsr.w	r1, r1, r2
  405dae:	4414      	add	r4, r2
  405db0:	e6c1      	b.n	405b36 <__adddf3+0xe6>
  405db2:	bf00      	nop

00405db4 <__aeabi_dmul>:
  405db4:	b570      	push	{r4, r5, r6, lr}
  405db6:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405dba:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405dbe:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405dc2:	bf1d      	ittte	ne
  405dc4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405dc8:	ea94 0f0c 	teqne	r4, ip
  405dcc:	ea95 0f0c 	teqne	r5, ip
  405dd0:	f000 f8de 	bleq	405f90 <__aeabi_dmul+0x1dc>
  405dd4:	442c      	add	r4, r5
  405dd6:	ea81 0603 	eor.w	r6, r1, r3
  405dda:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  405dde:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  405de2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  405de6:	bf18      	it	ne
  405de8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  405dec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405df0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  405df4:	d038      	beq.n	405e68 <__aeabi_dmul+0xb4>
  405df6:	fba0 ce02 	umull	ip, lr, r0, r2
  405dfa:	f04f 0500 	mov.w	r5, #0
  405dfe:	fbe1 e502 	umlal	lr, r5, r1, r2
  405e02:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  405e06:	fbe0 e503 	umlal	lr, r5, r0, r3
  405e0a:	f04f 0600 	mov.w	r6, #0
  405e0e:	fbe1 5603 	umlal	r5, r6, r1, r3
  405e12:	f09c 0f00 	teq	ip, #0
  405e16:	bf18      	it	ne
  405e18:	f04e 0e01 	orrne.w	lr, lr, #1
  405e1c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  405e20:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  405e24:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  405e28:	d204      	bcs.n	405e34 <__aeabi_dmul+0x80>
  405e2a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  405e2e:	416d      	adcs	r5, r5
  405e30:	eb46 0606 	adc.w	r6, r6, r6
  405e34:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  405e38:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  405e3c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  405e40:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  405e44:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  405e48:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405e4c:	bf88      	it	hi
  405e4e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405e52:	d81e      	bhi.n	405e92 <__aeabi_dmul+0xde>
  405e54:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  405e58:	bf08      	it	eq
  405e5a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  405e5e:	f150 0000 	adcs.w	r0, r0, #0
  405e62:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405e66:	bd70      	pop	{r4, r5, r6, pc}
  405e68:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  405e6c:	ea46 0101 	orr.w	r1, r6, r1
  405e70:	ea40 0002 	orr.w	r0, r0, r2
  405e74:	ea81 0103 	eor.w	r1, r1, r3
  405e78:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  405e7c:	bfc2      	ittt	gt
  405e7e:	ebd4 050c 	rsbsgt	r5, r4, ip
  405e82:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405e86:	bd70      	popgt	{r4, r5, r6, pc}
  405e88:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405e8c:	f04f 0e00 	mov.w	lr, #0
  405e90:	3c01      	subs	r4, #1
  405e92:	f300 80ab 	bgt.w	405fec <__aeabi_dmul+0x238>
  405e96:	f114 0f36 	cmn.w	r4, #54	; 0x36
  405e9a:	bfde      	ittt	le
  405e9c:	2000      	movle	r0, #0
  405e9e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  405ea2:	bd70      	pople	{r4, r5, r6, pc}
  405ea4:	f1c4 0400 	rsb	r4, r4, #0
  405ea8:	3c20      	subs	r4, #32
  405eaa:	da35      	bge.n	405f18 <__aeabi_dmul+0x164>
  405eac:	340c      	adds	r4, #12
  405eae:	dc1b      	bgt.n	405ee8 <__aeabi_dmul+0x134>
  405eb0:	f104 0414 	add.w	r4, r4, #20
  405eb4:	f1c4 0520 	rsb	r5, r4, #32
  405eb8:	fa00 f305 	lsl.w	r3, r0, r5
  405ebc:	fa20 f004 	lsr.w	r0, r0, r4
  405ec0:	fa01 f205 	lsl.w	r2, r1, r5
  405ec4:	ea40 0002 	orr.w	r0, r0, r2
  405ec8:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  405ecc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405ed0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405ed4:	fa21 f604 	lsr.w	r6, r1, r4
  405ed8:	eb42 0106 	adc.w	r1, r2, r6
  405edc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405ee0:	bf08      	it	eq
  405ee2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405ee6:	bd70      	pop	{r4, r5, r6, pc}
  405ee8:	f1c4 040c 	rsb	r4, r4, #12
  405eec:	f1c4 0520 	rsb	r5, r4, #32
  405ef0:	fa00 f304 	lsl.w	r3, r0, r4
  405ef4:	fa20 f005 	lsr.w	r0, r0, r5
  405ef8:	fa01 f204 	lsl.w	r2, r1, r4
  405efc:	ea40 0002 	orr.w	r0, r0, r2
  405f00:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405f04:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405f08:	f141 0100 	adc.w	r1, r1, #0
  405f0c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405f10:	bf08      	it	eq
  405f12:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405f16:	bd70      	pop	{r4, r5, r6, pc}
  405f18:	f1c4 0520 	rsb	r5, r4, #32
  405f1c:	fa00 f205 	lsl.w	r2, r0, r5
  405f20:	ea4e 0e02 	orr.w	lr, lr, r2
  405f24:	fa20 f304 	lsr.w	r3, r0, r4
  405f28:	fa01 f205 	lsl.w	r2, r1, r5
  405f2c:	ea43 0302 	orr.w	r3, r3, r2
  405f30:	fa21 f004 	lsr.w	r0, r1, r4
  405f34:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405f38:	fa21 f204 	lsr.w	r2, r1, r4
  405f3c:	ea20 0002 	bic.w	r0, r0, r2
  405f40:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  405f44:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405f48:	bf08      	it	eq
  405f4a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405f4e:	bd70      	pop	{r4, r5, r6, pc}
  405f50:	f094 0f00 	teq	r4, #0
  405f54:	d10f      	bne.n	405f76 <__aeabi_dmul+0x1c2>
  405f56:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  405f5a:	0040      	lsls	r0, r0, #1
  405f5c:	eb41 0101 	adc.w	r1, r1, r1
  405f60:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405f64:	bf08      	it	eq
  405f66:	3c01      	subeq	r4, #1
  405f68:	d0f7      	beq.n	405f5a <__aeabi_dmul+0x1a6>
  405f6a:	ea41 0106 	orr.w	r1, r1, r6
  405f6e:	f095 0f00 	teq	r5, #0
  405f72:	bf18      	it	ne
  405f74:	4770      	bxne	lr
  405f76:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  405f7a:	0052      	lsls	r2, r2, #1
  405f7c:	eb43 0303 	adc.w	r3, r3, r3
  405f80:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  405f84:	bf08      	it	eq
  405f86:	3d01      	subeq	r5, #1
  405f88:	d0f7      	beq.n	405f7a <__aeabi_dmul+0x1c6>
  405f8a:	ea43 0306 	orr.w	r3, r3, r6
  405f8e:	4770      	bx	lr
  405f90:	ea94 0f0c 	teq	r4, ip
  405f94:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405f98:	bf18      	it	ne
  405f9a:	ea95 0f0c 	teqne	r5, ip
  405f9e:	d00c      	beq.n	405fba <__aeabi_dmul+0x206>
  405fa0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405fa4:	bf18      	it	ne
  405fa6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405faa:	d1d1      	bne.n	405f50 <__aeabi_dmul+0x19c>
  405fac:	ea81 0103 	eor.w	r1, r1, r3
  405fb0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405fb4:	f04f 0000 	mov.w	r0, #0
  405fb8:	bd70      	pop	{r4, r5, r6, pc}
  405fba:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405fbe:	bf06      	itte	eq
  405fc0:	4610      	moveq	r0, r2
  405fc2:	4619      	moveq	r1, r3
  405fc4:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405fc8:	d019      	beq.n	405ffe <__aeabi_dmul+0x24a>
  405fca:	ea94 0f0c 	teq	r4, ip
  405fce:	d102      	bne.n	405fd6 <__aeabi_dmul+0x222>
  405fd0:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  405fd4:	d113      	bne.n	405ffe <__aeabi_dmul+0x24a>
  405fd6:	ea95 0f0c 	teq	r5, ip
  405fda:	d105      	bne.n	405fe8 <__aeabi_dmul+0x234>
  405fdc:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  405fe0:	bf1c      	itt	ne
  405fe2:	4610      	movne	r0, r2
  405fe4:	4619      	movne	r1, r3
  405fe6:	d10a      	bne.n	405ffe <__aeabi_dmul+0x24a>
  405fe8:	ea81 0103 	eor.w	r1, r1, r3
  405fec:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405ff0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405ff4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405ff8:	f04f 0000 	mov.w	r0, #0
  405ffc:	bd70      	pop	{r4, r5, r6, pc}
  405ffe:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  406002:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  406006:	bd70      	pop	{r4, r5, r6, pc}

00406008 <__aeabi_ddiv>:
  406008:	b570      	push	{r4, r5, r6, lr}
  40600a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40600e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  406012:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  406016:	bf1d      	ittte	ne
  406018:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  40601c:	ea94 0f0c 	teqne	r4, ip
  406020:	ea95 0f0c 	teqne	r5, ip
  406024:	f000 f8a7 	bleq	406176 <__aeabi_ddiv+0x16e>
  406028:	eba4 0405 	sub.w	r4, r4, r5
  40602c:	ea81 0e03 	eor.w	lr, r1, r3
  406030:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  406034:	ea4f 3101 	mov.w	r1, r1, lsl #12
  406038:	f000 8088 	beq.w	40614c <__aeabi_ddiv+0x144>
  40603c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  406040:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  406044:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  406048:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  40604c:	ea4f 2202 	mov.w	r2, r2, lsl #8
  406050:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  406054:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  406058:	ea4f 2600 	mov.w	r6, r0, lsl #8
  40605c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  406060:	429d      	cmp	r5, r3
  406062:	bf08      	it	eq
  406064:	4296      	cmpeq	r6, r2
  406066:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  40606a:	f504 7440 	add.w	r4, r4, #768	; 0x300
  40606e:	d202      	bcs.n	406076 <__aeabi_ddiv+0x6e>
  406070:	085b      	lsrs	r3, r3, #1
  406072:	ea4f 0232 	mov.w	r2, r2, rrx
  406076:	1ab6      	subs	r6, r6, r2
  406078:	eb65 0503 	sbc.w	r5, r5, r3
  40607c:	085b      	lsrs	r3, r3, #1
  40607e:	ea4f 0232 	mov.w	r2, r2, rrx
  406082:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  406086:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  40608a:	ebb6 0e02 	subs.w	lr, r6, r2
  40608e:	eb75 0e03 	sbcs.w	lr, r5, r3
  406092:	bf22      	ittt	cs
  406094:	1ab6      	subcs	r6, r6, r2
  406096:	4675      	movcs	r5, lr
  406098:	ea40 000c 	orrcs.w	r0, r0, ip
  40609c:	085b      	lsrs	r3, r3, #1
  40609e:	ea4f 0232 	mov.w	r2, r2, rrx
  4060a2:	ebb6 0e02 	subs.w	lr, r6, r2
  4060a6:	eb75 0e03 	sbcs.w	lr, r5, r3
  4060aa:	bf22      	ittt	cs
  4060ac:	1ab6      	subcs	r6, r6, r2
  4060ae:	4675      	movcs	r5, lr
  4060b0:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  4060b4:	085b      	lsrs	r3, r3, #1
  4060b6:	ea4f 0232 	mov.w	r2, r2, rrx
  4060ba:	ebb6 0e02 	subs.w	lr, r6, r2
  4060be:	eb75 0e03 	sbcs.w	lr, r5, r3
  4060c2:	bf22      	ittt	cs
  4060c4:	1ab6      	subcs	r6, r6, r2
  4060c6:	4675      	movcs	r5, lr
  4060c8:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  4060cc:	085b      	lsrs	r3, r3, #1
  4060ce:	ea4f 0232 	mov.w	r2, r2, rrx
  4060d2:	ebb6 0e02 	subs.w	lr, r6, r2
  4060d6:	eb75 0e03 	sbcs.w	lr, r5, r3
  4060da:	bf22      	ittt	cs
  4060dc:	1ab6      	subcs	r6, r6, r2
  4060de:	4675      	movcs	r5, lr
  4060e0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  4060e4:	ea55 0e06 	orrs.w	lr, r5, r6
  4060e8:	d018      	beq.n	40611c <__aeabi_ddiv+0x114>
  4060ea:	ea4f 1505 	mov.w	r5, r5, lsl #4
  4060ee:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  4060f2:	ea4f 1606 	mov.w	r6, r6, lsl #4
  4060f6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  4060fa:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  4060fe:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  406102:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  406106:	d1c0      	bne.n	40608a <__aeabi_ddiv+0x82>
  406108:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40610c:	d10b      	bne.n	406126 <__aeabi_ddiv+0x11e>
  40610e:	ea41 0100 	orr.w	r1, r1, r0
  406112:	f04f 0000 	mov.w	r0, #0
  406116:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  40611a:	e7b6      	b.n	40608a <__aeabi_ddiv+0x82>
  40611c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  406120:	bf04      	itt	eq
  406122:	4301      	orreq	r1, r0
  406124:	2000      	moveq	r0, #0
  406126:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  40612a:	bf88      	it	hi
  40612c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  406130:	f63f aeaf 	bhi.w	405e92 <__aeabi_dmul+0xde>
  406134:	ebb5 0c03 	subs.w	ip, r5, r3
  406138:	bf04      	itt	eq
  40613a:	ebb6 0c02 	subseq.w	ip, r6, r2
  40613e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  406142:	f150 0000 	adcs.w	r0, r0, #0
  406146:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40614a:	bd70      	pop	{r4, r5, r6, pc}
  40614c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  406150:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  406154:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  406158:	bfc2      	ittt	gt
  40615a:	ebd4 050c 	rsbsgt	r5, r4, ip
  40615e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  406162:	bd70      	popgt	{r4, r5, r6, pc}
  406164:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  406168:	f04f 0e00 	mov.w	lr, #0
  40616c:	3c01      	subs	r4, #1
  40616e:	e690      	b.n	405e92 <__aeabi_dmul+0xde>
  406170:	ea45 0e06 	orr.w	lr, r5, r6
  406174:	e68d      	b.n	405e92 <__aeabi_dmul+0xde>
  406176:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  40617a:	ea94 0f0c 	teq	r4, ip
  40617e:	bf08      	it	eq
  406180:	ea95 0f0c 	teqeq	r5, ip
  406184:	f43f af3b 	beq.w	405ffe <__aeabi_dmul+0x24a>
  406188:	ea94 0f0c 	teq	r4, ip
  40618c:	d10a      	bne.n	4061a4 <__aeabi_ddiv+0x19c>
  40618e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  406192:	f47f af34 	bne.w	405ffe <__aeabi_dmul+0x24a>
  406196:	ea95 0f0c 	teq	r5, ip
  40619a:	f47f af25 	bne.w	405fe8 <__aeabi_dmul+0x234>
  40619e:	4610      	mov	r0, r2
  4061a0:	4619      	mov	r1, r3
  4061a2:	e72c      	b.n	405ffe <__aeabi_dmul+0x24a>
  4061a4:	ea95 0f0c 	teq	r5, ip
  4061a8:	d106      	bne.n	4061b8 <__aeabi_ddiv+0x1b0>
  4061aa:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4061ae:	f43f aefd 	beq.w	405fac <__aeabi_dmul+0x1f8>
  4061b2:	4610      	mov	r0, r2
  4061b4:	4619      	mov	r1, r3
  4061b6:	e722      	b.n	405ffe <__aeabi_dmul+0x24a>
  4061b8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  4061bc:	bf18      	it	ne
  4061be:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4061c2:	f47f aec5 	bne.w	405f50 <__aeabi_dmul+0x19c>
  4061c6:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  4061ca:	f47f af0d 	bne.w	405fe8 <__aeabi_dmul+0x234>
  4061ce:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  4061d2:	f47f aeeb 	bne.w	405fac <__aeabi_dmul+0x1f8>
  4061d6:	e712      	b.n	405ffe <__aeabi_dmul+0x24a>

004061d8 <__gedf2>:
  4061d8:	f04f 3cff 	mov.w	ip, #4294967295
  4061dc:	e006      	b.n	4061ec <__cmpdf2+0x4>
  4061de:	bf00      	nop

004061e0 <__ledf2>:
  4061e0:	f04f 0c01 	mov.w	ip, #1
  4061e4:	e002      	b.n	4061ec <__cmpdf2+0x4>
  4061e6:	bf00      	nop

004061e8 <__cmpdf2>:
  4061e8:	f04f 0c01 	mov.w	ip, #1
  4061ec:	f84d cd04 	str.w	ip, [sp, #-4]!
  4061f0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4061f4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4061f8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4061fc:	bf18      	it	ne
  4061fe:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  406202:	d01b      	beq.n	40623c <__cmpdf2+0x54>
  406204:	b001      	add	sp, #4
  406206:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  40620a:	bf0c      	ite	eq
  40620c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  406210:	ea91 0f03 	teqne	r1, r3
  406214:	bf02      	ittt	eq
  406216:	ea90 0f02 	teqeq	r0, r2
  40621a:	2000      	moveq	r0, #0
  40621c:	4770      	bxeq	lr
  40621e:	f110 0f00 	cmn.w	r0, #0
  406222:	ea91 0f03 	teq	r1, r3
  406226:	bf58      	it	pl
  406228:	4299      	cmppl	r1, r3
  40622a:	bf08      	it	eq
  40622c:	4290      	cmpeq	r0, r2
  40622e:	bf2c      	ite	cs
  406230:	17d8      	asrcs	r0, r3, #31
  406232:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  406236:	f040 0001 	orr.w	r0, r0, #1
  40623a:	4770      	bx	lr
  40623c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406240:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406244:	d102      	bne.n	40624c <__cmpdf2+0x64>
  406246:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  40624a:	d107      	bne.n	40625c <__cmpdf2+0x74>
  40624c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406250:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406254:	d1d6      	bne.n	406204 <__cmpdf2+0x1c>
  406256:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  40625a:	d0d3      	beq.n	406204 <__cmpdf2+0x1c>
  40625c:	f85d 0b04 	ldr.w	r0, [sp], #4
  406260:	4770      	bx	lr
  406262:	bf00      	nop

00406264 <__aeabi_cdrcmple>:
  406264:	4684      	mov	ip, r0
  406266:	4610      	mov	r0, r2
  406268:	4662      	mov	r2, ip
  40626a:	468c      	mov	ip, r1
  40626c:	4619      	mov	r1, r3
  40626e:	4663      	mov	r3, ip
  406270:	e000      	b.n	406274 <__aeabi_cdcmpeq>
  406272:	bf00      	nop

00406274 <__aeabi_cdcmpeq>:
  406274:	b501      	push	{r0, lr}
  406276:	f7ff ffb7 	bl	4061e8 <__cmpdf2>
  40627a:	2800      	cmp	r0, #0
  40627c:	bf48      	it	mi
  40627e:	f110 0f00 	cmnmi.w	r0, #0
  406282:	bd01      	pop	{r0, pc}

00406284 <__aeabi_dcmpeq>:
  406284:	f84d ed08 	str.w	lr, [sp, #-8]!
  406288:	f7ff fff4 	bl	406274 <__aeabi_cdcmpeq>
  40628c:	bf0c      	ite	eq
  40628e:	2001      	moveq	r0, #1
  406290:	2000      	movne	r0, #0
  406292:	f85d fb08 	ldr.w	pc, [sp], #8
  406296:	bf00      	nop

00406298 <__aeabi_dcmplt>:
  406298:	f84d ed08 	str.w	lr, [sp, #-8]!
  40629c:	f7ff ffea 	bl	406274 <__aeabi_cdcmpeq>
  4062a0:	bf34      	ite	cc
  4062a2:	2001      	movcc	r0, #1
  4062a4:	2000      	movcs	r0, #0
  4062a6:	f85d fb08 	ldr.w	pc, [sp], #8
  4062aa:	bf00      	nop

004062ac <__aeabi_dcmple>:
  4062ac:	f84d ed08 	str.w	lr, [sp, #-8]!
  4062b0:	f7ff ffe0 	bl	406274 <__aeabi_cdcmpeq>
  4062b4:	bf94      	ite	ls
  4062b6:	2001      	movls	r0, #1
  4062b8:	2000      	movhi	r0, #0
  4062ba:	f85d fb08 	ldr.w	pc, [sp], #8
  4062be:	bf00      	nop

004062c0 <__aeabi_dcmpge>:
  4062c0:	f84d ed08 	str.w	lr, [sp, #-8]!
  4062c4:	f7ff ffce 	bl	406264 <__aeabi_cdrcmple>
  4062c8:	bf94      	ite	ls
  4062ca:	2001      	movls	r0, #1
  4062cc:	2000      	movhi	r0, #0
  4062ce:	f85d fb08 	ldr.w	pc, [sp], #8
  4062d2:	bf00      	nop

004062d4 <__aeabi_dcmpgt>:
  4062d4:	f84d ed08 	str.w	lr, [sp, #-8]!
  4062d8:	f7ff ffc4 	bl	406264 <__aeabi_cdrcmple>
  4062dc:	bf34      	ite	cc
  4062de:	2001      	movcc	r0, #1
  4062e0:	2000      	movcs	r0, #0
  4062e2:	f85d fb08 	ldr.w	pc, [sp], #8
  4062e6:	bf00      	nop

004062e8 <__aeabi_dcmpun>:
  4062e8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4062ec:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4062f0:	d102      	bne.n	4062f8 <__aeabi_dcmpun+0x10>
  4062f2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4062f6:	d10a      	bne.n	40630e <__aeabi_dcmpun+0x26>
  4062f8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4062fc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406300:	d102      	bne.n	406308 <__aeabi_dcmpun+0x20>
  406302:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  406306:	d102      	bne.n	40630e <__aeabi_dcmpun+0x26>
  406308:	f04f 0000 	mov.w	r0, #0
  40630c:	4770      	bx	lr
  40630e:	f04f 0001 	mov.w	r0, #1
  406312:	4770      	bx	lr

00406314 <__aeabi_d2iz>:
  406314:	ea4f 0241 	mov.w	r2, r1, lsl #1
  406318:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  40631c:	d215      	bcs.n	40634a <__aeabi_d2iz+0x36>
  40631e:	d511      	bpl.n	406344 <__aeabi_d2iz+0x30>
  406320:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  406324:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  406328:	d912      	bls.n	406350 <__aeabi_d2iz+0x3c>
  40632a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  40632e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  406332:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  406336:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40633a:	fa23 f002 	lsr.w	r0, r3, r2
  40633e:	bf18      	it	ne
  406340:	4240      	negne	r0, r0
  406342:	4770      	bx	lr
  406344:	f04f 0000 	mov.w	r0, #0
  406348:	4770      	bx	lr
  40634a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  40634e:	d105      	bne.n	40635c <__aeabi_d2iz+0x48>
  406350:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  406354:	bf08      	it	eq
  406356:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  40635a:	4770      	bx	lr
  40635c:	f04f 0000 	mov.w	r0, #0
  406360:	4770      	bx	lr
  406362:	bf00      	nop

00406364 <__aeabi_uldivmod>:
  406364:	b953      	cbnz	r3, 40637c <__aeabi_uldivmod+0x18>
  406366:	b94a      	cbnz	r2, 40637c <__aeabi_uldivmod+0x18>
  406368:	2900      	cmp	r1, #0
  40636a:	bf08      	it	eq
  40636c:	2800      	cmpeq	r0, #0
  40636e:	bf1c      	itt	ne
  406370:	f04f 31ff 	movne.w	r1, #4294967295
  406374:	f04f 30ff 	movne.w	r0, #4294967295
  406378:	f000 b97a 	b.w	406670 <__aeabi_idiv0>
  40637c:	f1ad 0c08 	sub.w	ip, sp, #8
  406380:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  406384:	f000 f806 	bl	406394 <__udivmoddi4>
  406388:	f8dd e004 	ldr.w	lr, [sp, #4]
  40638c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  406390:	b004      	add	sp, #16
  406392:	4770      	bx	lr

00406394 <__udivmoddi4>:
  406394:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  406398:	468c      	mov	ip, r1
  40639a:	460d      	mov	r5, r1
  40639c:	4604      	mov	r4, r0
  40639e:	9e08      	ldr	r6, [sp, #32]
  4063a0:	2b00      	cmp	r3, #0
  4063a2:	d151      	bne.n	406448 <__udivmoddi4+0xb4>
  4063a4:	428a      	cmp	r2, r1
  4063a6:	4617      	mov	r7, r2
  4063a8:	d96d      	bls.n	406486 <__udivmoddi4+0xf2>
  4063aa:	fab2 fe82 	clz	lr, r2
  4063ae:	f1be 0f00 	cmp.w	lr, #0
  4063b2:	d00b      	beq.n	4063cc <__udivmoddi4+0x38>
  4063b4:	f1ce 0c20 	rsb	ip, lr, #32
  4063b8:	fa01 f50e 	lsl.w	r5, r1, lr
  4063bc:	fa20 fc0c 	lsr.w	ip, r0, ip
  4063c0:	fa02 f70e 	lsl.w	r7, r2, lr
  4063c4:	ea4c 0c05 	orr.w	ip, ip, r5
  4063c8:	fa00 f40e 	lsl.w	r4, r0, lr
  4063cc:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  4063d0:	0c25      	lsrs	r5, r4, #16
  4063d2:	fbbc f8fa 	udiv	r8, ip, sl
  4063d6:	fa1f f987 	uxth.w	r9, r7
  4063da:	fb0a cc18 	mls	ip, sl, r8, ip
  4063de:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  4063e2:	fb08 f309 	mul.w	r3, r8, r9
  4063e6:	42ab      	cmp	r3, r5
  4063e8:	d90a      	bls.n	406400 <__udivmoddi4+0x6c>
  4063ea:	19ed      	adds	r5, r5, r7
  4063ec:	f108 32ff 	add.w	r2, r8, #4294967295
  4063f0:	f080 8123 	bcs.w	40663a <__udivmoddi4+0x2a6>
  4063f4:	42ab      	cmp	r3, r5
  4063f6:	f240 8120 	bls.w	40663a <__udivmoddi4+0x2a6>
  4063fa:	f1a8 0802 	sub.w	r8, r8, #2
  4063fe:	443d      	add	r5, r7
  406400:	1aed      	subs	r5, r5, r3
  406402:	b2a4      	uxth	r4, r4
  406404:	fbb5 f0fa 	udiv	r0, r5, sl
  406408:	fb0a 5510 	mls	r5, sl, r0, r5
  40640c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  406410:	fb00 f909 	mul.w	r9, r0, r9
  406414:	45a1      	cmp	r9, r4
  406416:	d909      	bls.n	40642c <__udivmoddi4+0x98>
  406418:	19e4      	adds	r4, r4, r7
  40641a:	f100 33ff 	add.w	r3, r0, #4294967295
  40641e:	f080 810a 	bcs.w	406636 <__udivmoddi4+0x2a2>
  406422:	45a1      	cmp	r9, r4
  406424:	f240 8107 	bls.w	406636 <__udivmoddi4+0x2a2>
  406428:	3802      	subs	r0, #2
  40642a:	443c      	add	r4, r7
  40642c:	eba4 0409 	sub.w	r4, r4, r9
  406430:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406434:	2100      	movs	r1, #0
  406436:	2e00      	cmp	r6, #0
  406438:	d061      	beq.n	4064fe <__udivmoddi4+0x16a>
  40643a:	fa24 f40e 	lsr.w	r4, r4, lr
  40643e:	2300      	movs	r3, #0
  406440:	6034      	str	r4, [r6, #0]
  406442:	6073      	str	r3, [r6, #4]
  406444:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406448:	428b      	cmp	r3, r1
  40644a:	d907      	bls.n	40645c <__udivmoddi4+0xc8>
  40644c:	2e00      	cmp	r6, #0
  40644e:	d054      	beq.n	4064fa <__udivmoddi4+0x166>
  406450:	2100      	movs	r1, #0
  406452:	e886 0021 	stmia.w	r6, {r0, r5}
  406456:	4608      	mov	r0, r1
  406458:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40645c:	fab3 f183 	clz	r1, r3
  406460:	2900      	cmp	r1, #0
  406462:	f040 808e 	bne.w	406582 <__udivmoddi4+0x1ee>
  406466:	42ab      	cmp	r3, r5
  406468:	d302      	bcc.n	406470 <__udivmoddi4+0xdc>
  40646a:	4282      	cmp	r2, r0
  40646c:	f200 80fa 	bhi.w	406664 <__udivmoddi4+0x2d0>
  406470:	1a84      	subs	r4, r0, r2
  406472:	eb65 0503 	sbc.w	r5, r5, r3
  406476:	2001      	movs	r0, #1
  406478:	46ac      	mov	ip, r5
  40647a:	2e00      	cmp	r6, #0
  40647c:	d03f      	beq.n	4064fe <__udivmoddi4+0x16a>
  40647e:	e886 1010 	stmia.w	r6, {r4, ip}
  406482:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406486:	b912      	cbnz	r2, 40648e <__udivmoddi4+0xfa>
  406488:	2701      	movs	r7, #1
  40648a:	fbb7 f7f2 	udiv	r7, r7, r2
  40648e:	fab7 fe87 	clz	lr, r7
  406492:	f1be 0f00 	cmp.w	lr, #0
  406496:	d134      	bne.n	406502 <__udivmoddi4+0x16e>
  406498:	1beb      	subs	r3, r5, r7
  40649a:	0c3a      	lsrs	r2, r7, #16
  40649c:	fa1f fc87 	uxth.w	ip, r7
  4064a0:	2101      	movs	r1, #1
  4064a2:	fbb3 f8f2 	udiv	r8, r3, r2
  4064a6:	0c25      	lsrs	r5, r4, #16
  4064a8:	fb02 3318 	mls	r3, r2, r8, r3
  4064ac:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4064b0:	fb0c f308 	mul.w	r3, ip, r8
  4064b4:	42ab      	cmp	r3, r5
  4064b6:	d907      	bls.n	4064c8 <__udivmoddi4+0x134>
  4064b8:	19ed      	adds	r5, r5, r7
  4064ba:	f108 30ff 	add.w	r0, r8, #4294967295
  4064be:	d202      	bcs.n	4064c6 <__udivmoddi4+0x132>
  4064c0:	42ab      	cmp	r3, r5
  4064c2:	f200 80d1 	bhi.w	406668 <__udivmoddi4+0x2d4>
  4064c6:	4680      	mov	r8, r0
  4064c8:	1aed      	subs	r5, r5, r3
  4064ca:	b2a3      	uxth	r3, r4
  4064cc:	fbb5 f0f2 	udiv	r0, r5, r2
  4064d0:	fb02 5510 	mls	r5, r2, r0, r5
  4064d4:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  4064d8:	fb0c fc00 	mul.w	ip, ip, r0
  4064dc:	45a4      	cmp	ip, r4
  4064de:	d907      	bls.n	4064f0 <__udivmoddi4+0x15c>
  4064e0:	19e4      	adds	r4, r4, r7
  4064e2:	f100 33ff 	add.w	r3, r0, #4294967295
  4064e6:	d202      	bcs.n	4064ee <__udivmoddi4+0x15a>
  4064e8:	45a4      	cmp	ip, r4
  4064ea:	f200 80b8 	bhi.w	40665e <__udivmoddi4+0x2ca>
  4064ee:	4618      	mov	r0, r3
  4064f0:	eba4 040c 	sub.w	r4, r4, ip
  4064f4:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4064f8:	e79d      	b.n	406436 <__udivmoddi4+0xa2>
  4064fa:	4631      	mov	r1, r6
  4064fc:	4630      	mov	r0, r6
  4064fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406502:	f1ce 0420 	rsb	r4, lr, #32
  406506:	fa05 f30e 	lsl.w	r3, r5, lr
  40650a:	fa07 f70e 	lsl.w	r7, r7, lr
  40650e:	fa20 f804 	lsr.w	r8, r0, r4
  406512:	0c3a      	lsrs	r2, r7, #16
  406514:	fa25 f404 	lsr.w	r4, r5, r4
  406518:	ea48 0803 	orr.w	r8, r8, r3
  40651c:	fbb4 f1f2 	udiv	r1, r4, r2
  406520:	ea4f 4518 	mov.w	r5, r8, lsr #16
  406524:	fb02 4411 	mls	r4, r2, r1, r4
  406528:	fa1f fc87 	uxth.w	ip, r7
  40652c:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  406530:	fb01 f30c 	mul.w	r3, r1, ip
  406534:	42ab      	cmp	r3, r5
  406536:	fa00 f40e 	lsl.w	r4, r0, lr
  40653a:	d909      	bls.n	406550 <__udivmoddi4+0x1bc>
  40653c:	19ed      	adds	r5, r5, r7
  40653e:	f101 30ff 	add.w	r0, r1, #4294967295
  406542:	f080 808a 	bcs.w	40665a <__udivmoddi4+0x2c6>
  406546:	42ab      	cmp	r3, r5
  406548:	f240 8087 	bls.w	40665a <__udivmoddi4+0x2c6>
  40654c:	3902      	subs	r1, #2
  40654e:	443d      	add	r5, r7
  406550:	1aeb      	subs	r3, r5, r3
  406552:	fa1f f588 	uxth.w	r5, r8
  406556:	fbb3 f0f2 	udiv	r0, r3, r2
  40655a:	fb02 3310 	mls	r3, r2, r0, r3
  40655e:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406562:	fb00 f30c 	mul.w	r3, r0, ip
  406566:	42ab      	cmp	r3, r5
  406568:	d907      	bls.n	40657a <__udivmoddi4+0x1e6>
  40656a:	19ed      	adds	r5, r5, r7
  40656c:	f100 38ff 	add.w	r8, r0, #4294967295
  406570:	d26f      	bcs.n	406652 <__udivmoddi4+0x2be>
  406572:	42ab      	cmp	r3, r5
  406574:	d96d      	bls.n	406652 <__udivmoddi4+0x2be>
  406576:	3802      	subs	r0, #2
  406578:	443d      	add	r5, r7
  40657a:	1aeb      	subs	r3, r5, r3
  40657c:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  406580:	e78f      	b.n	4064a2 <__udivmoddi4+0x10e>
  406582:	f1c1 0720 	rsb	r7, r1, #32
  406586:	fa22 f807 	lsr.w	r8, r2, r7
  40658a:	408b      	lsls	r3, r1
  40658c:	fa05 f401 	lsl.w	r4, r5, r1
  406590:	ea48 0303 	orr.w	r3, r8, r3
  406594:	fa20 fe07 	lsr.w	lr, r0, r7
  406598:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  40659c:	40fd      	lsrs	r5, r7
  40659e:	ea4e 0e04 	orr.w	lr, lr, r4
  4065a2:	fbb5 f9fc 	udiv	r9, r5, ip
  4065a6:	ea4f 441e 	mov.w	r4, lr, lsr #16
  4065aa:	fb0c 5519 	mls	r5, ip, r9, r5
  4065ae:	fa1f f883 	uxth.w	r8, r3
  4065b2:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  4065b6:	fb09 f408 	mul.w	r4, r9, r8
  4065ba:	42ac      	cmp	r4, r5
  4065bc:	fa02 f201 	lsl.w	r2, r2, r1
  4065c0:	fa00 fa01 	lsl.w	sl, r0, r1
  4065c4:	d908      	bls.n	4065d8 <__udivmoddi4+0x244>
  4065c6:	18ed      	adds	r5, r5, r3
  4065c8:	f109 30ff 	add.w	r0, r9, #4294967295
  4065cc:	d243      	bcs.n	406656 <__udivmoddi4+0x2c2>
  4065ce:	42ac      	cmp	r4, r5
  4065d0:	d941      	bls.n	406656 <__udivmoddi4+0x2c2>
  4065d2:	f1a9 0902 	sub.w	r9, r9, #2
  4065d6:	441d      	add	r5, r3
  4065d8:	1b2d      	subs	r5, r5, r4
  4065da:	fa1f fe8e 	uxth.w	lr, lr
  4065de:	fbb5 f0fc 	udiv	r0, r5, ip
  4065e2:	fb0c 5510 	mls	r5, ip, r0, r5
  4065e6:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  4065ea:	fb00 f808 	mul.w	r8, r0, r8
  4065ee:	45a0      	cmp	r8, r4
  4065f0:	d907      	bls.n	406602 <__udivmoddi4+0x26e>
  4065f2:	18e4      	adds	r4, r4, r3
  4065f4:	f100 35ff 	add.w	r5, r0, #4294967295
  4065f8:	d229      	bcs.n	40664e <__udivmoddi4+0x2ba>
  4065fa:	45a0      	cmp	r8, r4
  4065fc:	d927      	bls.n	40664e <__udivmoddi4+0x2ba>
  4065fe:	3802      	subs	r0, #2
  406600:	441c      	add	r4, r3
  406602:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  406606:	eba4 0408 	sub.w	r4, r4, r8
  40660a:	fba0 8902 	umull	r8, r9, r0, r2
  40660e:	454c      	cmp	r4, r9
  406610:	46c6      	mov	lr, r8
  406612:	464d      	mov	r5, r9
  406614:	d315      	bcc.n	406642 <__udivmoddi4+0x2ae>
  406616:	d012      	beq.n	40663e <__udivmoddi4+0x2aa>
  406618:	b156      	cbz	r6, 406630 <__udivmoddi4+0x29c>
  40661a:	ebba 030e 	subs.w	r3, sl, lr
  40661e:	eb64 0405 	sbc.w	r4, r4, r5
  406622:	fa04 f707 	lsl.w	r7, r4, r7
  406626:	40cb      	lsrs	r3, r1
  406628:	431f      	orrs	r7, r3
  40662a:	40cc      	lsrs	r4, r1
  40662c:	6037      	str	r7, [r6, #0]
  40662e:	6074      	str	r4, [r6, #4]
  406630:	2100      	movs	r1, #0
  406632:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406636:	4618      	mov	r0, r3
  406638:	e6f8      	b.n	40642c <__udivmoddi4+0x98>
  40663a:	4690      	mov	r8, r2
  40663c:	e6e0      	b.n	406400 <__udivmoddi4+0x6c>
  40663e:	45c2      	cmp	sl, r8
  406640:	d2ea      	bcs.n	406618 <__udivmoddi4+0x284>
  406642:	ebb8 0e02 	subs.w	lr, r8, r2
  406646:	eb69 0503 	sbc.w	r5, r9, r3
  40664a:	3801      	subs	r0, #1
  40664c:	e7e4      	b.n	406618 <__udivmoddi4+0x284>
  40664e:	4628      	mov	r0, r5
  406650:	e7d7      	b.n	406602 <__udivmoddi4+0x26e>
  406652:	4640      	mov	r0, r8
  406654:	e791      	b.n	40657a <__udivmoddi4+0x1e6>
  406656:	4681      	mov	r9, r0
  406658:	e7be      	b.n	4065d8 <__udivmoddi4+0x244>
  40665a:	4601      	mov	r1, r0
  40665c:	e778      	b.n	406550 <__udivmoddi4+0x1bc>
  40665e:	3802      	subs	r0, #2
  406660:	443c      	add	r4, r7
  406662:	e745      	b.n	4064f0 <__udivmoddi4+0x15c>
  406664:	4608      	mov	r0, r1
  406666:	e708      	b.n	40647a <__udivmoddi4+0xe6>
  406668:	f1a8 0802 	sub.w	r8, r8, #2
  40666c:	443d      	add	r5, r7
  40666e:	e72b      	b.n	4064c8 <__udivmoddi4+0x134>

00406670 <__aeabi_idiv0>:
  406670:	4770      	bx	lr
  406672:	bf00      	nop

00406674 <OV2640_JPEG>:
  406674:	14e0 77e1 1fe5 03d7 10da 00e0 01ff 0804     ...w............
  406684:	ffff 0000                                   ....

00406688 <OV2640_JPEG_1024x768>:
  406688:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  406698:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  4066a8:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  4066b8:	c8c0 96c1 008c 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  4066c8:	0054 8855 005a c05b 015c 02d3 ffff 0000     T.U.Z.[.\.......

004066d8 <OV2640_JPEG_1280x1024>:
  4066d8:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  4066e8:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  4066f8:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406708:	04e0 c8c0 96c1 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  406718:	0054 8855 0057 405a f05b 015c 02d3 00e0     T.U.W.Z@[.\.....
  406728:	ffff 0000                                   ....

0040672c <OV2640_JPEG_1600x1200>:
  40672c:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  40673c:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  40674c:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  40675c:	04e0 c8c0 96c1 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  40676c:	0054 8855 0057 905a 2c5b 055c 02d3 00e0     T.U.W.Z.[,\.....
  40677c:	ffff 0000                                   ....

00406780 <OV2640_JPEG_320x240>:
  406780:	01ff 4012 1117 4318 0019 4b1a 0932 ca4f     ...@...C...K2.O.
  406790:	a850 235a 006d 1239 da35 1a22 c337 0023     P.Z#m.9.5.".7.#.
  4067a0:	c034 1a36 8806 c007 870d 410e 004c 00ff     4.6........AL...
  4067b0:	04e0 64c0 4bc1 3586 8950 c851 9652 0053     ...d.K.5P.Q.R.S.
  4067c0:	0054 0055 0057 505a 3c5b 005c 00e0 ffff     T.U.W.ZP[<\.....

004067d0 <OV2640_JPEG_640x480>:
  4067d0:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  4067e0:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  4067f0:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406800:	04e0 c8c0 96c1 3d86 8950 9051 2c52 0053     .......=P.Q.R,S.
  406810:	0054 8855 0057 a05a 785b 005c 04d3 00e0     T.U.W.Z.[x\.....
  406820:	ffff 0000                                   ....

00406824 <OV2640_JPEG_800x600>:
  406824:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  406834:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  406844:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406854:	04e0 c8c0 96c1 3586 8950 9051 2c52 0053     .......5P.Q.R,S.
  406864:	0054 8855 0057 c85a 965b 005c 02d3 00e0     T.U.W.Z.[.\.....
  406874:	ffff 0000                                   ....

00406878 <OV2640_JPEG_INIT>:
  406878:	00ff ff2c df2e 01ff 323c 0111 0209 2804     ..,.....<2.....(
  406888:	e513 4814 0c2c 7833 333a fb3b 003e 1143     ...H,.3x:3;.>.C.
  406898:	1016 9239 da35 1a22 c337 0023 c034 1a36     ..9.5.".7.#.4.6.
  4068a8:	8806 c007 870d 410e 004c 0048 005b 0342     .......AL.H.[.B.
  4068b8:	814a 9921 4024 3825 8226 005c 0063 7061     J.!.$@%8&.\.c.ap
  4068c8:	8062 057c 8020 3028 006c 806d 006e 0270     b.|. .(0l.m.n.p.
  4068d8:	9471 c173 4012 1117 4318 0019 4b1a 0932     q.s..@...C...K2.
  4068e8:	c037 604f a850 006d 383d 3f46 604f 3c0c     7.O`P.m.=8F?O`.<
  4068f8:	00ff 7fe5 c0f9 2441 14e0 ff76 a033 2042     ......A$..v.3.B 
  406908:	1843 004c d587 3f88 03d7 10d9 82d3 08c8     C.L....?........
  406918:	80c9 007c 007d 037c 487d 487d 087c 207d     ..|.}.|.}H}H|.} 
  406928:	107d 0e7d 0090 0e91 1a91 3191 5a91 6991     }.}........1.Z.i
  406938:	7591 7e91 8891 8f91 9691 a391 af91 c491     .u.~............
  406948:	d791 e891 2091 0092 0693 e393 0593 0593     ..... ..........
  406958:	0093 0493 0093 0093 0093 0093 0093 0093     ................
  406968:	0093 0096 0897 1997 0297 0c97 2497 3097     .............$.0
  406978:	2897 2697 0297 9897 8097 0097 0097 edc3     .(.&............
  406988:	00a4 00a8 11c5 51c6 80bf 10c7 66b6 a5b8     .......Q.....f..
  406998:	64b7 7cb9 afb3 97b4 ffb5 c5b0 94b1 0fb2     .d.|............
  4069a8:	5cc4 64c0 4bc1 008c 3d86 0050 c851 9652     .\.d.K...=P.Q.R.
  4069b8:	0053 0054 0055 c85a 965b 005c 00d3 edc3     S.T.U.Z.[.\.....
  4069c8:	007f 00da 1fe5 67e1 00e0 7fdd 0005 4012     .......g.......@
  4069d8:	04d3 16c0 12c1 008c 3d86 0050 2c51 2452     .........=P.Q,R$
  4069e8:	0053 0054 0055 2c5a 245b 005c ffff 0000     S.T.U.Z,[$\.....

004069f8 <OV2640_QQVGA_RGB888>:
  4069f8:	000e 8012 0013 0111 0012 10d5 120c 340d     ...............4
  406a08:	2517 a018 0319 f01a 891b 0322 1829 f82b     .%........".).+.
  406a18:	012c a031 f032 c433 b43a 3f36 6004 8027     ,.1.2.3.:.6?.`'.
  406a28:	0f3d 803e 403f 7f40 6a41 2942 e544 4145     =.>.?@@.AjB)D.EA
  406a38:	0247 6449 a14a 704b 1a4c 504d 134e 0064     G.IdJ.KpL.MPN.d.
  406a48:	8867 1a68 3814 3c24 3025 7226 9750 7e51     g.h..8$<%0&rP.Q~
  406a58:	0052 0053 0020 2321 1438 00e9 5556 ff57     R.S. .!#8...VUW.
  406a68:	ff58 ff59 045f 00ec ff13 7f80 3f81 3282     X.Y._........?.2
  406a78:	0183 1138 7084 0085 0386 0187 0588 3089     ..8..p.........0
  406a88:	308d 858f 3093 8595 3099 859b 089c 129d     .0...0...0......
  406a98:	239e 459f 55a0 64a1 72a2 7fa3 8ba4 95a5     .#.E.U.d.r......
  406aa8:	a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce 6ecf     .............x.n
  406ab8:	0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b 885c     ..........Z$[.\.
  406ac8:	605d 6eac ffbe 00bf 2831 3c32 3f82 0112     ]`.n....1(2<.?..
  406ad8:	2f36 0483 0053 f433 8a1b 0322 0084 0084     6/..S.3...".....
  406ae8:	0228 ffff                                   (...

00406aec <OV2640_QQVGA_YUV422>:
  406aec:	000e 8012 0013 0111 0012 10d5 540c 340d     .............T.4
  406afc:	0116 2517 a018 0319 f01a 891b 0322 1829     ...%........".).
  406b0c:	f82b 012c a031 f032 c433 b43a 3f36 6004     +.,.1.2.3.:.6?.`
  406b1c:	8027 0f3d 803e 403f 7f40 6a41 2942 e544     '.=.>.?@@.AjB)D.
  406b2c:	4145 0247 6449 a14a 704b 1a4c 504d 134e     EAG.IdJ.KpL.MPN.
  406b3c:	0064 8867 1a68 3814 3c24 3025 7226 9750     d.g.h..8$<%0&rP.
  406b4c:	7e51 0052 0053 0020 2321 1438 00e9 5556     Q~R.S. .!#8...VU
  406b5c:	ff57 ff58 ff59 045f 00ec ff13 7f80 3f81     W.X.Y._........?
  406b6c:	3282 0183 1138 7084 0085 0386 0187 0588     .2..8..p........
  406b7c:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406b8c:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406b9c:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406bac:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406bbc:	885c 605d 6eac ffbe 00bf 2831 3c32 0034     \.]`.n....1(2<4.
  406bcc:	3f82 0012 3f36 0053 0033 891b 0322 0228     .?..6?S.3...".(.
  406bdc:	00d9 ffff                                   ....

00406be0 <OV2640_QVGA_RGB888>:
  406be0:	000e 8012 0013 0111 0012 10d5 120c 340d     ...............4
  406bf0:	2517 a018 0319 f01a 891b 0322 1829 f82b     .%........".).+.
  406c00:	012c a031 f032 c433 b43a 3f36 6004 8027     ,.1.2.3.:.6?.`'.
  406c10:	0f3d 803e 403f 7f40 6a41 2942 e544 4145     =.>.?@@.AjB)D.EA
  406c20:	0247 6449 a14a 704b 1a4c 504d 134e 0064     G.IdJ.KpL.MPN.d.
  406c30:	8867 1a68 3814 3c24 3025 7226 9750 7e51     g.h..8$<%0&rP.Q~
  406c40:	0052 0053 0020 2321 1438 00e9 5556 ff57     R.S. .!#8...VUW.
  406c50:	ff58 ff59 045f 00ec ff13 7f80 3f81 3282     X.Y._........?.2
  406c60:	0183 1138 7084 0085 0386 0187 0588 3089     ..8..p.........0
  406c70:	308d 858f 3093 8595 3099 859b 089c 129d     .0...0...0......
  406c80:	239e 459f 55a0 64a1 72a2 7fa3 8ba4 95a5     .#.E.U.d.r......
  406c90:	a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce 6ecf     .............x.n
  406ca0:	0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b 885c     ..........Z$[.\.
  406cb0:	605d 6eac ffbe 00bf 5031 7832 3f82 0112     ]`.n....1P2x.?..
  406cc0:	2f36 0483 0053 f433 8a1b 0322 0084 0084     6/..S.3...".....
  406cd0:	0228 ffff                                   (...

00406cd4 <OV2640_QVGA_YUV422_10FPS>:
  406cd4:	000e 8012 05fe 0013 0511 0012 10d5 d40c     ................
  406ce4:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  406cf4:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406d04:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406d14:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406d24:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  406d34:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  406d44:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  406d54:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  406d64:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406d74:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406d84:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406d94:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406da4:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  406db4:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00406dc4 <OV2640_QVGA_YUV422_15FPS>:
  406dc4:	000e 8012 05fe 0013 0311 0012 10d5 d40c     ................
  406dd4:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  406de4:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406df4:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406e04:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406e14:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  406e24:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  406e34:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  406e44:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  406e54:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406e64:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406e74:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406e84:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406e94:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  406ea4:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00406eb4 <OV2640_QVGA_YUV422_20FPS>:
  406eb4:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  406ec4:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  406ed4:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406ee4:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406ef4:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406f04:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  406f14:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  406f24:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  406f34:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  406f44:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406f54:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406f64:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406f74:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406f84:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  406f94:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00406fa4 <OV2640_QVGA_YUV422_30FPS>:
  406fa4:	000e 8012 05fe 0013 0111 0012 10d5 d40c     ................
  406fb4:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  406fc4:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406fd4:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406fe4:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406ff4:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  407004:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  407014:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  407024:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  407034:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  407044:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  407054:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  407064:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  407074:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  407084:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00407094 <OV2640_TEST_PATTERN>:
  407094:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  4070a4:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  4070b4:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  4070c4:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  4070d4:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  4070e4:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  4070f4:	9750 7e51 0052 0053 0020 2321 0738 0284     P.Q~R.S. .!#8...
  407104:	1438 00e9 5556 ff57 ff58 ff59 045f 00ec     8...VUW.X.Y._...
  407114:	ff13 7f80 3f81 3282 0183 1138 0085 0386     .....?.2..8.....
  407124:	0187 0588 3089 308d 858f 3093 8595 3099     .....0.0...0...0
  407134:	859b 089c 129d 239e 459f 55a0 64a1 72a2     .......#.E.U.d.r
  407144:	7fa3 8ba4 95a5 a7a6 b5a7 cba8 dda9 ecaa     ................
  407154:	1aab 78ce 6ecf 0ad0 0cd1 84d2 90d3 1ed4     ...x.n..........
  407164:	245a 1f5b 885c 605d 6eac ffbe 00bf 5031     Z$[.\.]`.n....1P
  407174:	7832 3f82 0012 3f36 0053 c433 891b 0322     2x.?..6?S.3...".
  407184:	0228 ffff                                   (...

00407188 <OV2640_VGA_YUV422_20FPS>:
  407188:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  407198:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  4071a8:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  4071b8:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  4071c8:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  4071d8:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  4071e8:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  4071f8:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  407208:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  407218:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  407228:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  407238:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  407248:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  407258:	885c 605d 6eac ffbe 00bf a031 f032 3f82     \.]`.n....1.2..?
  407268:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00407278 <OV2640_YUV422>:
  407278:	00ff 0005 10da 03d7 00df 8033 403c 77e1     ..........3.<@.w
  407288:	0000 ffff c200 0001 00c0 0000 0800 0000     ................
	...
  4072a4:	5553 4343 5345 0053 6d69 6761 2065 7274     SUCCESS.image tr
  4072b4:	6e61 6673 7265 2520 0a69 0000 6576 0d72     ansfer %i...ver.
  4072c4:	000a 0000 6573 2074 6c77 6e61 675f 6970     ....set wlan_gpi
  4072d4:	206f 3532 0a0d 0000 6573 2074 6577 7362     o 25....set webs
  4072e4:	636f 656b 5f74 7067 6f69 3220 0d36 000a     ocket_gpio 26...
  4072f4:	6573 2074 7061 675f 6970 206f 3732 0a0d     set ap_gpio 27..
  407304:	0000 0000 6573 2074 6f63 6d6d 675f 6970     ....set comm_gpi
  407314:	206f 3132 0a0d 0000 6573 2074 6c63 6569     o 21....set clie
  407324:	746e 5f73 7067 6f69 3220 0d32 000a 0000     nts_gpio 22.....
  407334:	6573 2074 656e 5f74 7067 6f69 3220 0d33     set net_gpio 23.
  407344:	000a 0000 6573 2074 7073 5f69 6162 6475     ....set spi_baud
  407354:	3120 3030 3030 0d30 000a 0000 7270 766f      100000.....prov
  407364:	7369 6f69 0d6e 000a                         ision...

0040736c <_global_impure_ptr>:
  40736c:	0018 2000 4e49 0046 6e69 0066 414e 004e     ... INF.inf.NAN.
  40737c:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  40738c:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  40739c:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  4073ac:	296c 0000 0030 0000                         l)..0...

004073b4 <blanks.7223>:
  4073b4:	2020 2020 2020 2020 2020 2020 2020 2020                     

004073c4 <zeroes.7224>:
  4073c4:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  4073d4:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.
  4073e4:	0000 0000                                   ....

004073e8 <__mprec_bigtens>:
  4073e8:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  4073f8:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  407408:	bf3c 7f73 4fdd 7515                         <.s..O.u

00407410 <__mprec_tens>:
  407410:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  407420:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  407430:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  407440:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  407450:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  407460:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  407470:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  407480:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  407490:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  4074a0:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  4074b0:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  4074c0:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  4074d0:	9db4 79d9 7843 44ea                         ...yCx.D

004074d8 <p05.6055>:
  4074d8:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  4074e8:	4f50 4953 0058 0000 002e 0000               POSIX.......

004074f4 <_ctype_>:
  4074f4:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  407504:	2020 2020 2020 2020 2020 2020 2020 2020                     
  407514:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  407524:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  407534:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  407544:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  407554:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  407564:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  407574:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

004075f8 <_init>:
  4075f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4075fa:	bf00      	nop
  4075fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4075fe:	bc08      	pop	{r3}
  407600:	469e      	mov	lr, r3
  407602:	4770      	bx	lr

00407604 <__init_array_start>:
  407604:	004031cd 	.word	0x004031cd

00407608 <__frame_dummy_init_array_entry>:
  407608:	004000f1                                ..@.

0040760c <_fini>:
  40760c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40760e:	bf00      	nop
  407610:	bcf8      	pop	{r3, r4, r5, r6, r7}
  407612:	bc08      	pop	{r3}
  407614:	469e      	mov	lr, r3
  407616:	4770      	bx	lr

00407618 <__fini_array_start>:
  407618:	004000cd 	.word	0x004000cd

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
20000008:	4770      	bx	lr
	...

2000000c <SystemCoreClock>:
2000000c:	0900 003d                                   ..=.

20000010 <_impure_ptr>:
20000010:	0018 2000 0000 0000                         ... ....

20000018 <impure_data>:
20000018:	0000 0000 0304 2000 036c 2000 03d4 2000     ....... l.. ... 
	...
200000c0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
200000d0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20000440 <__atexit_recursive_mutex>:
20000440:	0ea0 2000                                   ... 

20000444 <__malloc_av_>:
	...
2000044c:	0444 2000 0444 2000 044c 2000 044c 2000     D.. D.. L.. L.. 
2000045c:	0454 2000 0454 2000 045c 2000 045c 2000     T.. T.. \.. \.. 
2000046c:	0464 2000 0464 2000 046c 2000 046c 2000     d.. d.. l.. l.. 
2000047c:	0474 2000 0474 2000 047c 2000 047c 2000     t.. t.. |.. |.. 
2000048c:	0484 2000 0484 2000 048c 2000 048c 2000     ... ... ... ... 
2000049c:	0494 2000 0494 2000 049c 2000 049c 2000     ... ... ... ... 
200004ac:	04a4 2000 04a4 2000 04ac 2000 04ac 2000     ... ... ... ... 
200004bc:	04b4 2000 04b4 2000 04bc 2000 04bc 2000     ... ... ... ... 
200004cc:	04c4 2000 04c4 2000 04cc 2000 04cc 2000     ... ... ... ... 
200004dc:	04d4 2000 04d4 2000 04dc 2000 04dc 2000     ... ... ... ... 
200004ec:	04e4 2000 04e4 2000 04ec 2000 04ec 2000     ... ... ... ... 
200004fc:	04f4 2000 04f4 2000 04fc 2000 04fc 2000     ... ... ... ... 
2000050c:	0504 2000 0504 2000 050c 2000 050c 2000     ... ... ... ... 
2000051c:	0514 2000 0514 2000 051c 2000 051c 2000     ... ... ... ... 
2000052c:	0524 2000 0524 2000 052c 2000 052c 2000     $.. $.. ,.. ,.. 
2000053c:	0534 2000 0534 2000 053c 2000 053c 2000     4.. 4.. <.. <.. 
2000054c:	0544 2000 0544 2000 054c 2000 054c 2000     D.. D.. L.. L.. 
2000055c:	0554 2000 0554 2000 055c 2000 055c 2000     T.. T.. \.. \.. 
2000056c:	0564 2000 0564 2000 056c 2000 056c 2000     d.. d.. l.. l.. 
2000057c:	0574 2000 0574 2000 057c 2000 057c 2000     t.. t.. |.. |.. 
2000058c:	0584 2000 0584 2000 058c 2000 058c 2000     ... ... ... ... 
2000059c:	0594 2000 0594 2000 059c 2000 059c 2000     ... ... ... ... 
200005ac:	05a4 2000 05a4 2000 05ac 2000 05ac 2000     ... ... ... ... 
200005bc:	05b4 2000 05b4 2000 05bc 2000 05bc 2000     ... ... ... ... 
200005cc:	05c4 2000 05c4 2000 05cc 2000 05cc 2000     ... ... ... ... 
200005dc:	05d4 2000 05d4 2000 05dc 2000 05dc 2000     ... ... ... ... 
200005ec:	05e4 2000 05e4 2000 05ec 2000 05ec 2000     ... ... ... ... 
200005fc:	05f4 2000 05f4 2000 05fc 2000 05fc 2000     ... ... ... ... 
2000060c:	0604 2000 0604 2000 060c 2000 060c 2000     ... ... ... ... 
2000061c:	0614 2000 0614 2000 061c 2000 061c 2000     ... ... ... ... 
2000062c:	0624 2000 0624 2000 062c 2000 062c 2000     $.. $.. ,.. ,.. 
2000063c:	0634 2000 0634 2000 063c 2000 063c 2000     4.. 4.. <.. <.. 
2000064c:	0644 2000 0644 2000 064c 2000 064c 2000     D.. D.. L.. L.. 
2000065c:	0654 2000 0654 2000 065c 2000 065c 2000     T.. T.. \.. \.. 
2000066c:	0664 2000 0664 2000 066c 2000 066c 2000     d.. d.. l.. l.. 
2000067c:	0674 2000 0674 2000 067c 2000 067c 2000     t.. t.. |.. |.. 
2000068c:	0684 2000 0684 2000 068c 2000 068c 2000     ... ... ... ... 
2000069c:	0694 2000 0694 2000 069c 2000 069c 2000     ... ... ... ... 
200006ac:	06a4 2000 06a4 2000 06ac 2000 06ac 2000     ... ... ... ... 
200006bc:	06b4 2000 06b4 2000 06bc 2000 06bc 2000     ... ... ... ... 
200006cc:	06c4 2000 06c4 2000 06cc 2000 06cc 2000     ... ... ... ... 
200006dc:	06d4 2000 06d4 2000 06dc 2000 06dc 2000     ... ... ... ... 
200006ec:	06e4 2000 06e4 2000 06ec 2000 06ec 2000     ... ... ... ... 
200006fc:	06f4 2000 06f4 2000 06fc 2000 06fc 2000     ... ... ... ... 
2000070c:	0704 2000 0704 2000 070c 2000 070c 2000     ... ... ... ... 
2000071c:	0714 2000 0714 2000 071c 2000 071c 2000     ... ... ... ... 
2000072c:	0724 2000 0724 2000 072c 2000 072c 2000     $.. $.. ,.. ,.. 
2000073c:	0734 2000 0734 2000 073c 2000 073c 2000     4.. 4.. <.. <.. 
2000074c:	0744 2000 0744 2000 074c 2000 074c 2000     D.. D.. L.. L.. 
2000075c:	0754 2000 0754 2000 075c 2000 075c 2000     T.. T.. \.. \.. 
2000076c:	0764 2000 0764 2000 076c 2000 076c 2000     d.. d.. l.. l.. 
2000077c:	0774 2000 0774 2000 077c 2000 077c 2000     t.. t.. |.. |.. 
2000078c:	0784 2000 0784 2000 078c 2000 078c 2000     ... ... ... ... 
2000079c:	0794 2000 0794 2000 079c 2000 079c 2000     ... ... ... ... 
200007ac:	07a4 2000 07a4 2000 07ac 2000 07ac 2000     ... ... ... ... 
200007bc:	07b4 2000 07b4 2000 07bc 2000 07bc 2000     ... ... ... ... 
200007cc:	07c4 2000 07c4 2000 07cc 2000 07cc 2000     ... ... ... ... 
200007dc:	07d4 2000 07d4 2000 07dc 2000 07dc 2000     ... ... ... ... 
200007ec:	07e4 2000 07e4 2000 07ec 2000 07ec 2000     ... ... ... ... 
200007fc:	07f4 2000 07f4 2000 07fc 2000 07fc 2000     ... ... ... ... 
2000080c:	0804 2000 0804 2000 080c 2000 080c 2000     ... ... ... ... 
2000081c:	0814 2000 0814 2000 081c 2000 081c 2000     ... ... ... ... 
2000082c:	0824 2000 0824 2000 082c 2000 082c 2000     $.. $.. ,.. ,.. 
2000083c:	0834 2000 0834 2000 083c 2000 083c 2000     4.. 4.. <.. <.. 

2000084c <__malloc_sbrk_base>:
2000084c:	ffff ffff                                   ....

20000850 <__malloc_trim_threshold>:
20000850:	0000 0002                                   ....

20000854 <__global_locale>:
20000854:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000874:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000894:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008b4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008d4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008f4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000914:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000934:	5a29 0040 55e9 0040 0000 0000 74f4 0040     )Z@..U@......t@.
20000944:	74f0 0040 7304 0040 7304 0040 7304 0040     .t@..s@..s@..s@.
20000954:	7304 0040 7304 0040 7304 0040 7304 0040     .s@..s@..s@..s@.
20000964:	7304 0040 7304 0040 ffff ffff ffff ffff     .s@..s@.........
20000974:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
2000099c:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...

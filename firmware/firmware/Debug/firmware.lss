
firmware.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00007244  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00407244  00407244  00017244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009c0  20000000  0040724c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000508  200009c0  00407c0c  000209c0  2**2
                  ALLOC
  4 .stack        00003000  20000ec8  00408114  000209c0  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  000209c0  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000209ea  2**0
                  CONTENTS, READONLY
  7 .debug_info   00016ff5  00000000  00000000  00020a43  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000338f  00000000  00000000  00037a38  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000051fd  00000000  00000000  0003adc7  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000aa0  00000000  00000000  0003ffc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000a40  00000000  00000000  00040a64  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000151b7  00000000  00000000  000414a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000e1e6  00000000  00000000  0005665b  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00051ccd  00000000  00000000  00064841  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000023ec  00000000  00000000  000b6510  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	c8 3e 00 20 95 10 40 00 93 10 40 00 93 10 40 00     .>. ..@...@...@.
  400010:	93 10 40 00 93 10 40 00 93 10 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	93 10 40 00 93 10 40 00 00 00 00 00 93 10 40 00     ..@...@.......@.
  40003c:	93 10 40 00 93 10 40 00 93 10 40 00 93 10 40 00     ..@...@...@...@.
  40004c:	93 10 40 00 93 10 40 00 93 10 40 00 93 10 40 00     ..@...@...@...@.
  40005c:	00 00 00 00 93 10 40 00 93 10 40 00 00 00 00 00     ......@...@.....
  40006c:	ed 04 40 00 01 05 40 00 00 00 00 00 93 10 40 00     ..@...@.......@.
  40007c:	93 10 40 00 00 00 00 00 00 00 00 00 93 10 40 00     ..@...........@.
  40008c:	93 10 40 00 93 10 40 00 93 10 40 00 93 10 40 00     ..@...@...@...@.
  40009c:	75 0d 40 00 93 10 40 00 93 10 40 00 00 00 00 00     u.@...@...@.....
	...
  4000b4:	93 10 40 00 93 10 40 00 93 10 40 00 93 10 40 00     ..@...@...@...@.
  4000c4:	93 10 40 00 93 10 40 00                             ..@...@.

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	200009c0 	.word	0x200009c0
  4000e8:	00000000 	.word	0x00000000
  4000ec:	0040724c 	.word	0x0040724c

004000f0 <frame_dummy>:
  4000f0:	4b0c      	ldr	r3, [pc, #48]	; (400124 <frame_dummy+0x34>)
  4000f2:	b143      	cbz	r3, 400106 <frame_dummy+0x16>
  4000f4:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x38>)
  4000f6:	490d      	ldr	r1, [pc, #52]	; (40012c <frame_dummy+0x3c>)
  4000f8:	b510      	push	{r4, lr}
  4000fa:	f3af 8000 	nop.w
  4000fe:	480c      	ldr	r0, [pc, #48]	; (400130 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b923      	cbnz	r3, 40010e <frame_dummy+0x1e>
  400104:	bd10      	pop	{r4, pc}
  400106:	480a      	ldr	r0, [pc, #40]	; (400130 <frame_dummy+0x40>)
  400108:	6803      	ldr	r3, [r0, #0]
  40010a:	b933      	cbnz	r3, 40011a <frame_dummy+0x2a>
  40010c:	4770      	bx	lr
  40010e:	4b09      	ldr	r3, [pc, #36]	; (400134 <frame_dummy+0x44>)
  400110:	2b00      	cmp	r3, #0
  400112:	d0f7      	beq.n	400104 <frame_dummy+0x14>
  400114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400118:	4718      	bx	r3
  40011a:	4b06      	ldr	r3, [pc, #24]	; (400134 <frame_dummy+0x44>)
  40011c:	2b00      	cmp	r3, #0
  40011e:	d0f5      	beq.n	40010c <frame_dummy+0x1c>
  400120:	4718      	bx	r3
  400122:	bf00      	nop
  400124:	00000000 	.word	0x00000000
  400128:	0040724c 	.word	0x0040724c
  40012c:	200009c4 	.word	0x200009c4
  400130:	0040724c 	.word	0x0040724c
  400134:	00000000 	.word	0x00000000

00400138 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400138:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40013a:	480e      	ldr	r0, [pc, #56]	; (400174 <sysclk_init+0x3c>)
  40013c:	4b0e      	ldr	r3, [pc, #56]	; (400178 <sysclk_init+0x40>)
  40013e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400140:	213e      	movs	r1, #62	; 0x3e
  400142:	2000      	movs	r0, #0
  400144:	4b0d      	ldr	r3, [pc, #52]	; (40017c <sysclk_init+0x44>)
  400146:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400148:	4c0d      	ldr	r4, [pc, #52]	; (400180 <sysclk_init+0x48>)
  40014a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  40014c:	2800      	cmp	r0, #0
  40014e:	d0fc      	beq.n	40014a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400150:	4b0c      	ldr	r3, [pc, #48]	; (400184 <sysclk_init+0x4c>)
  400152:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400154:	4a0c      	ldr	r2, [pc, #48]	; (400188 <sysclk_init+0x50>)
  400156:	4b0d      	ldr	r3, [pc, #52]	; (40018c <sysclk_init+0x54>)
  400158:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  40015a:	4c0d      	ldr	r4, [pc, #52]	; (400190 <sysclk_init+0x58>)
  40015c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  40015e:	2800      	cmp	r0, #0
  400160:	d0fc      	beq.n	40015c <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400162:	2010      	movs	r0, #16
  400164:	4b0b      	ldr	r3, [pc, #44]	; (400194 <sysclk_init+0x5c>)
  400166:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400168:	4b0b      	ldr	r3, [pc, #44]	; (400198 <sysclk_init+0x60>)
  40016a:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  40016c:	4801      	ldr	r0, [pc, #4]	; (400174 <sysclk_init+0x3c>)
  40016e:	4b02      	ldr	r3, [pc, #8]	; (400178 <sysclk_init+0x40>)
  400170:	4798      	blx	r3
  400172:	bd10      	pop	{r4, pc}
  400174:	07270e00 	.word	0x07270e00
  400178:	00401251 	.word	0x00401251
  40017c:	00400579 	.word	0x00400579
  400180:	004005cd 	.word	0x004005cd
  400184:	004005dd 	.word	0x004005dd
  400188:	20133f01 	.word	0x20133f01
  40018c:	400e0400 	.word	0x400e0400
  400190:	004005ed 	.word	0x004005ed
  400194:	00400515 	.word	0x00400515
  400198:	00401141 	.word	0x00401141

0040019c <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  40019c:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  40019e:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  4001a2:	d039      	beq.n	400218 <pio_set_peripheral+0x7c>
  4001a4:	d813      	bhi.n	4001ce <pio_set_peripheral+0x32>
  4001a6:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  4001aa:	d025      	beq.n	4001f8 <pio_set_peripheral+0x5c>
  4001ac:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  4001b0:	d10a      	bne.n	4001c8 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4001b2:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4001b4:	4313      	orrs	r3, r2
  4001b6:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4001b8:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4001ba:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4001bc:	400b      	ands	r3, r1
  4001be:	ea23 0302 	bic.w	r3, r3, r2
  4001c2:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4001c4:	6042      	str	r2, [r0, #4]
  4001c6:	4770      	bx	lr
	switch (ul_type) {
  4001c8:	2900      	cmp	r1, #0
  4001ca:	d1fb      	bne.n	4001c4 <pio_set_peripheral+0x28>
  4001cc:	4770      	bx	lr
  4001ce:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4001d2:	d020      	beq.n	400216 <pio_set_peripheral+0x7a>
  4001d4:	d809      	bhi.n	4001ea <pio_set_peripheral+0x4e>
  4001d6:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4001da:	d1f3      	bne.n	4001c4 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  4001dc:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4001de:	4313      	orrs	r3, r2
  4001e0:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  4001e2:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4001e4:	4313      	orrs	r3, r2
  4001e6:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4001e8:	e7ec      	b.n	4001c4 <pio_set_peripheral+0x28>
	switch (ul_type) {
  4001ea:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  4001ee:	d012      	beq.n	400216 <pio_set_peripheral+0x7a>
  4001f0:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  4001f4:	d00f      	beq.n	400216 <pio_set_peripheral+0x7a>
  4001f6:	e7e5      	b.n	4001c4 <pio_set_peripheral+0x28>
{
  4001f8:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  4001fa:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4001fc:	6f04      	ldr	r4, [r0, #112]	; 0x70
  4001fe:	43d3      	mvns	r3, r2
  400200:	4021      	ands	r1, r4
  400202:	461c      	mov	r4, r3
  400204:	4019      	ands	r1, r3
  400206:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400208:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  40020a:	6f41      	ldr	r1, [r0, #116]	; 0x74
  40020c:	400b      	ands	r3, r1
  40020e:	4023      	ands	r3, r4
  400210:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400212:	6042      	str	r2, [r0, #4]
}
  400214:	bc10      	pop	{r4}
  400216:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400218:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  40021a:	6f01      	ldr	r1, [r0, #112]	; 0x70
  40021c:	400b      	ands	r3, r1
  40021e:	ea23 0302 	bic.w	r3, r3, r2
  400222:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400224:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400226:	4313      	orrs	r3, r2
  400228:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  40022a:	e7cb      	b.n	4001c4 <pio_set_peripheral+0x28>

0040022c <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  40022c:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  40022e:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  400232:	bf14      	ite	ne
  400234:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400236:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400238:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  40023c:	bf14      	ite	ne
  40023e:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
  400240:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
  400242:	f012 0f02 	tst.w	r2, #2
  400246:	d107      	bne.n	400258 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400248:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  40024c:	bf18      	it	ne
  40024e:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
  400252:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400254:	6001      	str	r1, [r0, #0]
  400256:	4770      	bx	lr
		p_pio->PIO_IFSCDR = ul_mask;
  400258:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  40025c:	e7f9      	b.n	400252 <pio_set_input+0x26>

0040025e <pio_set_output>:
{
  40025e:	b410      	push	{r4}
  400260:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400262:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400264:	b944      	cbnz	r4, 400278 <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
  400266:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400268:	b143      	cbz	r3, 40027c <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
  40026a:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  40026c:	b942      	cbnz	r2, 400280 <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
  40026e:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400270:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400272:	6001      	str	r1, [r0, #0]
}
  400274:	bc10      	pop	{r4}
  400276:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400278:	6641      	str	r1, [r0, #100]	; 0x64
  40027a:	e7f5      	b.n	400268 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  40027c:	6541      	str	r1, [r0, #84]	; 0x54
  40027e:	e7f5      	b.n	40026c <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400280:	6301      	str	r1, [r0, #48]	; 0x30
  400282:	e7f5      	b.n	400270 <pio_set_output+0x12>

00400284 <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  400284:	f012 0f10 	tst.w	r2, #16
  400288:	d010      	beq.n	4002ac <pio_configure_interrupt+0x28>
		p_pio->PIO_AIMER = ul_mask;
  40028a:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  40028e:	f012 0f20 	tst.w	r2, #32
			p_pio->PIO_REHLSR = ul_mask;
  400292:	bf14      	ite	ne
  400294:	f8c0 10d4 	strne.w	r1, [r0, #212]	; 0xd4
			p_pio->PIO_FELLSR = ul_mask;
  400298:	f8c0 10d0 	streq.w	r1, [r0, #208]	; 0xd0
		if (ul_attr & PIO_IT_EDGE) {
  40029c:	f012 0f40 	tst.w	r2, #64	; 0x40
			p_pio->PIO_ESR = ul_mask;
  4002a0:	bf14      	ite	ne
  4002a2:	f8c0 10c0 	strne.w	r1, [r0, #192]	; 0xc0
			p_pio->PIO_LSR = ul_mask;
  4002a6:	f8c0 10c4 	streq.w	r1, [r0, #196]	; 0xc4
  4002aa:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  4002ac:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  4002b0:	4770      	bx	lr

004002b2 <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  4002b2:	6401      	str	r1, [r0, #64]	; 0x40
  4002b4:	4770      	bx	lr

004002b6 <pio_disable_interrupt>:
	p_pio->PIO_IDR = ul_mask;
  4002b6:	6441      	str	r1, [r0, #68]	; 0x44
  4002b8:	4770      	bx	lr

004002ba <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  4002ba:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  4002bc:	4770      	bx	lr

004002be <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  4002be:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  4002c0:	4770      	bx	lr
	...

004002c4 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
  4002c4:	b570      	push	{r4, r5, r6, lr}
  4002c6:	b082      	sub	sp, #8
  4002c8:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4002ca:	0943      	lsrs	r3, r0, #5
  4002cc:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4002d0:	f203 7307 	addw	r3, r3, #1799	; 0x707
  4002d4:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
  4002d6:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  4002da:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4002de:	d053      	beq.n	400388 <pio_configure_pin+0xc4>
  4002e0:	d80a      	bhi.n	4002f8 <pio_configure_pin+0x34>
  4002e2:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4002e6:	d02d      	beq.n	400344 <pio_configure_pin+0x80>
  4002e8:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  4002ec:	d03b      	beq.n	400366 <pio_configure_pin+0xa2>
  4002ee:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  4002f2:	d015      	beq.n	400320 <pio_configure_pin+0x5c>
		return 0;
  4002f4:	2000      	movs	r0, #0
  4002f6:	e023      	b.n	400340 <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
  4002f8:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  4002fc:	d055      	beq.n	4003aa <pio_configure_pin+0xe6>
  4002fe:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  400302:	d052      	beq.n	4003aa <pio_configure_pin+0xe6>
  400304:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400308:	d1f4      	bne.n	4002f4 <pio_configure_pin+0x30>
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  40030a:	f000 011f 	and.w	r1, r0, #31
  40030e:	2601      	movs	r6, #1
  400310:	462a      	mov	r2, r5
  400312:	fa06 f101 	lsl.w	r1, r6, r1
  400316:	4620      	mov	r0, r4
  400318:	4b2f      	ldr	r3, [pc, #188]	; (4003d8 <pio_configure_pin+0x114>)
  40031a:	4798      	blx	r3
	return 1;
  40031c:	4630      	mov	r0, r6
		break;
  40031e:	e00f      	b.n	400340 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  400320:	f000 001f 	and.w	r0, r0, #31
  400324:	2601      	movs	r6, #1
  400326:	4086      	lsls	r6, r0
  400328:	4632      	mov	r2, r6
  40032a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40032e:	4620      	mov	r0, r4
  400330:	4b2a      	ldr	r3, [pc, #168]	; (4003dc <pio_configure_pin+0x118>)
  400332:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400334:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400338:	bf14      	ite	ne
  40033a:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  40033c:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  40033e:	2001      	movs	r0, #1
}
  400340:	b002      	add	sp, #8
  400342:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  400344:	f000 001f 	and.w	r0, r0, #31
  400348:	2601      	movs	r6, #1
  40034a:	4086      	lsls	r6, r0
  40034c:	4632      	mov	r2, r6
  40034e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400352:	4620      	mov	r0, r4
  400354:	4b21      	ldr	r3, [pc, #132]	; (4003dc <pio_configure_pin+0x118>)
  400356:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400358:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  40035c:	bf14      	ite	ne
  40035e:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400360:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400362:	2001      	movs	r0, #1
  400364:	e7ec      	b.n	400340 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  400366:	f000 001f 	and.w	r0, r0, #31
  40036a:	2601      	movs	r6, #1
  40036c:	4086      	lsls	r6, r0
  40036e:	4632      	mov	r2, r6
  400370:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  400374:	4620      	mov	r0, r4
  400376:	4b19      	ldr	r3, [pc, #100]	; (4003dc <pio_configure_pin+0x118>)
  400378:	4798      	blx	r3
	if (ul_pull_up_enable) {
  40037a:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  40037e:	bf14      	ite	ne
  400380:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400382:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400384:	2001      	movs	r0, #1
  400386:	e7db      	b.n	400340 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  400388:	f000 001f 	and.w	r0, r0, #31
  40038c:	2601      	movs	r6, #1
  40038e:	4086      	lsls	r6, r0
  400390:	4632      	mov	r2, r6
  400392:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400396:	4620      	mov	r0, r4
  400398:	4b10      	ldr	r3, [pc, #64]	; (4003dc <pio_configure_pin+0x118>)
  40039a:	4798      	blx	r3
	if (ul_pull_up_enable) {
  40039c:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  4003a0:	bf14      	ite	ne
  4003a2:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  4003a4:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  4003a6:	2001      	movs	r0, #1
  4003a8:	e7ca      	b.n	400340 <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  4003aa:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4003ae:	f000 011f 	and.w	r1, r0, #31
  4003b2:	2601      	movs	r6, #1
  4003b4:	ea05 0306 	and.w	r3, r5, r6
  4003b8:	9300      	str	r3, [sp, #0]
  4003ba:	f3c5 0380 	ubfx	r3, r5, #2, #1
  4003be:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  4003c2:	bf14      	ite	ne
  4003c4:	2200      	movne	r2, #0
  4003c6:	2201      	moveq	r2, #1
  4003c8:	fa06 f101 	lsl.w	r1, r6, r1
  4003cc:	4620      	mov	r0, r4
  4003ce:	4c04      	ldr	r4, [pc, #16]	; (4003e0 <pio_configure_pin+0x11c>)
  4003d0:	47a0      	blx	r4
	return 1;
  4003d2:	4630      	mov	r0, r6
		break;
  4003d4:	e7b4      	b.n	400340 <pio_configure_pin+0x7c>
  4003d6:	bf00      	nop
  4003d8:	0040022d 	.word	0x0040022d
  4003dc:	0040019d 	.word	0x0040019d
  4003e0:	0040025f 	.word	0x0040025f

004003e4 <pio_capture_enable>:
 *
 * \param p_pio Pointer to a PIO instance.
 */
void pio_capture_enable(Pio *p_pio)
{
	p_pio->PIO_PCMR |= PIO_PCMR_PCEN;
  4003e4:	f8d0 3150 	ldr.w	r3, [r0, #336]	; 0x150
  4003e8:	f043 0301 	orr.w	r3, r3, #1
  4003ec:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
	pio_capture_enable_flag = true;
  4003f0:	2201      	movs	r2, #1
  4003f2:	4b01      	ldr	r3, [pc, #4]	; (4003f8 <pio_capture_enable+0x14>)
  4003f4:	601a      	str	r2, [r3, #0]
  4003f6:	4770      	bx	lr
  4003f8:	20000aa8 	.word	0x20000aa8

004003fc <pio_capture_disable>:
 *
 * \param p_pio Pointer to a PIO instance.
 */
void pio_capture_disable(Pio *p_pio)
{
	p_pio->PIO_PCMR &= (~PIO_PCMR_PCEN);
  4003fc:	f8d0 3150 	ldr.w	r3, [r0, #336]	; 0x150
  400400:	f023 0301 	bic.w	r3, r3, #1
  400404:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
	pio_capture_enable_flag = false;
  400408:	2200      	movs	r2, #0
  40040a:	4b01      	ldr	r3, [pc, #4]	; (400410 <pio_capture_disable+0x14>)
  40040c:	601a      	str	r2, [r3, #0]
  40040e:	4770      	bx	lr
  400410:	20000aa8 	.word	0x20000aa8

00400414 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400414:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400418:	4681      	mov	r9, r0
  40041a:	460f      	mov	r7, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  40041c:	4b12      	ldr	r3, [pc, #72]	; (400468 <pio_handler_process+0x54>)
  40041e:	4798      	blx	r3
  400420:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400422:	4648      	mov	r0, r9
  400424:	4b11      	ldr	r3, [pc, #68]	; (40046c <pio_handler_process+0x58>)
  400426:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400428:	4005      	ands	r5, r0
  40042a:	d013      	beq.n	400454 <pio_handler_process+0x40>
  40042c:	4c10      	ldr	r4, [pc, #64]	; (400470 <pio_handler_process+0x5c>)
  40042e:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400432:	e003      	b.n	40043c <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400434:	42b4      	cmp	r4, r6
  400436:	d00d      	beq.n	400454 <pio_handler_process+0x40>
  400438:	3410      	adds	r4, #16
		while (status != 0) {
  40043a:	b15d      	cbz	r5, 400454 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  40043c:	6820      	ldr	r0, [r4, #0]
  40043e:	42b8      	cmp	r0, r7
  400440:	d1f8      	bne.n	400434 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400442:	6861      	ldr	r1, [r4, #4]
  400444:	4229      	tst	r1, r5
  400446:	d0f5      	beq.n	400434 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400448:	68e3      	ldr	r3, [r4, #12]
  40044a:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  40044c:	6863      	ldr	r3, [r4, #4]
  40044e:	ea25 0503 	bic.w	r5, r5, r3
  400452:	e7ef      	b.n	400434 <pio_handler_process+0x20>
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  400454:	4b07      	ldr	r3, [pc, #28]	; (400474 <pio_handler_process+0x60>)
  400456:	681b      	ldr	r3, [r3, #0]
  400458:	b123      	cbz	r3, 400464 <pio_handler_process+0x50>
		if (pio_capture_handler) {
  40045a:	4b07      	ldr	r3, [pc, #28]	; (400478 <pio_handler_process+0x64>)
  40045c:	681b      	ldr	r3, [r3, #0]
  40045e:	b10b      	cbz	r3, 400464 <pio_handler_process+0x50>
			pio_capture_handler(p_pio);
  400460:	4648      	mov	r0, r9
  400462:	4798      	blx	r3
  400464:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400468:	004002bb 	.word	0x004002bb
  40046c:	004002bf 	.word	0x004002bf
  400470:	200009dc 	.word	0x200009dc
  400474:	20000aa8 	.word	0x20000aa8
  400478:	20000a50 	.word	0x20000a50

0040047c <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  40047c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  40047e:	4c18      	ldr	r4, [pc, #96]	; (4004e0 <pio_handler_set+0x64>)
  400480:	6826      	ldr	r6, [r4, #0]
  400482:	2e06      	cmp	r6, #6
  400484:	d829      	bhi.n	4004da <pio_handler_set+0x5e>
  400486:	f04f 0c00 	mov.w	ip, #0
  40048a:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  40048c:	4f15      	ldr	r7, [pc, #84]	; (4004e4 <pio_handler_set+0x68>)
  40048e:	e004      	b.n	40049a <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400490:	3401      	adds	r4, #1
  400492:	b2e4      	uxtb	r4, r4
  400494:	46a4      	mov	ip, r4
  400496:	42a6      	cmp	r6, r4
  400498:	d309      	bcc.n	4004ae <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  40049a:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  40049c:	0125      	lsls	r5, r4, #4
  40049e:	597d      	ldr	r5, [r7, r5]
  4004a0:	428d      	cmp	r5, r1
  4004a2:	d1f5      	bne.n	400490 <pio_handler_set+0x14>
  4004a4:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  4004a8:	686d      	ldr	r5, [r5, #4]
  4004aa:	4295      	cmp	r5, r2
  4004ac:	d1f0      	bne.n	400490 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  4004ae:	4d0d      	ldr	r5, [pc, #52]	; (4004e4 <pio_handler_set+0x68>)
  4004b0:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  4004b4:	eb05 040e 	add.w	r4, r5, lr
  4004b8:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  4004bc:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  4004be:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  4004c0:	9906      	ldr	r1, [sp, #24]
  4004c2:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  4004c4:	3601      	adds	r6, #1
  4004c6:	4566      	cmp	r6, ip
		gs_ul_nb_sources++;
  4004c8:	bf04      	itt	eq
  4004ca:	4905      	ldreq	r1, [pc, #20]	; (4004e0 <pio_handler_set+0x64>)
  4004cc:	600e      	streq	r6, [r1, #0]
  4004ce:	4611      	mov	r1, r2
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  4004d0:	461a      	mov	r2, r3
  4004d2:	4b05      	ldr	r3, [pc, #20]	; (4004e8 <pio_handler_set+0x6c>)
  4004d4:	4798      	blx	r3

	return 0;
  4004d6:	2000      	movs	r0, #0
  4004d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return 1;
  4004da:	2001      	movs	r0, #1
}
  4004dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4004de:	bf00      	nop
  4004e0:	20000a4c 	.word	0x20000a4c
  4004e4:	200009dc 	.word	0x200009dc
  4004e8:	00400285 	.word	0x00400285

004004ec <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  4004ec:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  4004ee:	210b      	movs	r1, #11
  4004f0:	4801      	ldr	r0, [pc, #4]	; (4004f8 <PIOA_Handler+0xc>)
  4004f2:	4b02      	ldr	r3, [pc, #8]	; (4004fc <PIOA_Handler+0x10>)
  4004f4:	4798      	blx	r3
  4004f6:	bd08      	pop	{r3, pc}
  4004f8:	400e0e00 	.word	0x400e0e00
  4004fc:	00400415 	.word	0x00400415

00400500 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400500:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400502:	210c      	movs	r1, #12
  400504:	4801      	ldr	r0, [pc, #4]	; (40050c <PIOB_Handler+0xc>)
  400506:	4b02      	ldr	r3, [pc, #8]	; (400510 <PIOB_Handler+0x10>)
  400508:	4798      	blx	r3
  40050a:	bd08      	pop	{r3, pc}
  40050c:	400e1000 	.word	0x400e1000
  400510:	00400415 	.word	0x00400415

00400514 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400514:	4a17      	ldr	r2, [pc, #92]	; (400574 <pmc_switch_mck_to_pllack+0x60>)
  400516:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400518:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  40051c:	4318      	orrs	r0, r3
  40051e:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400520:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400522:	f013 0f08 	tst.w	r3, #8
  400526:	d10a      	bne.n	40053e <pmc_switch_mck_to_pllack+0x2a>
  400528:	f44f 6300 	mov.w	r3, #2048	; 0x800
  40052c:	4911      	ldr	r1, [pc, #68]	; (400574 <pmc_switch_mck_to_pllack+0x60>)
  40052e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400530:	f012 0f08 	tst.w	r2, #8
  400534:	d103      	bne.n	40053e <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400536:	3b01      	subs	r3, #1
  400538:	d1f9      	bne.n	40052e <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  40053a:	2001      	movs	r0, #1
  40053c:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  40053e:	4a0d      	ldr	r2, [pc, #52]	; (400574 <pmc_switch_mck_to_pllack+0x60>)
  400540:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400542:	f023 0303 	bic.w	r3, r3, #3
  400546:	f043 0302 	orr.w	r3, r3, #2
  40054a:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  40054c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40054e:	f013 0f08 	tst.w	r3, #8
  400552:	d10a      	bne.n	40056a <pmc_switch_mck_to_pllack+0x56>
  400554:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400558:	4906      	ldr	r1, [pc, #24]	; (400574 <pmc_switch_mck_to_pllack+0x60>)
  40055a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  40055c:	f012 0f08 	tst.w	r2, #8
  400560:	d105      	bne.n	40056e <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400562:	3b01      	subs	r3, #1
  400564:	d1f9      	bne.n	40055a <pmc_switch_mck_to_pllack+0x46>
			return 1;
  400566:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400568:	4770      	bx	lr
	return 0;
  40056a:	2000      	movs	r0, #0
  40056c:	4770      	bx	lr
  40056e:	2000      	movs	r0, #0
  400570:	4770      	bx	lr
  400572:	bf00      	nop
  400574:	400e0400 	.word	0x400e0400

00400578 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400578:	b9c8      	cbnz	r0, 4005ae <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  40057a:	4a11      	ldr	r2, [pc, #68]	; (4005c0 <pmc_switch_mainck_to_xtal+0x48>)
  40057c:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  40057e:	0209      	lsls	r1, r1, #8
  400580:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400582:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  400586:	f023 0303 	bic.w	r3, r3, #3
  40058a:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  40058e:	f043 0301 	orr.w	r3, r3, #1
  400592:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400594:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400596:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400598:	f013 0f01 	tst.w	r3, #1
  40059c:	d0fb      	beq.n	400596 <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  40059e:	4a08      	ldr	r2, [pc, #32]	; (4005c0 <pmc_switch_mainck_to_xtal+0x48>)
  4005a0:	6a13      	ldr	r3, [r2, #32]
  4005a2:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  4005a6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4005aa:	6213      	str	r3, [r2, #32]
  4005ac:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4005ae:	4904      	ldr	r1, [pc, #16]	; (4005c0 <pmc_switch_mainck_to_xtal+0x48>)
  4005b0:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4005b2:	4a04      	ldr	r2, [pc, #16]	; (4005c4 <pmc_switch_mainck_to_xtal+0x4c>)
  4005b4:	401a      	ands	r2, r3
  4005b6:	4b04      	ldr	r3, [pc, #16]	; (4005c8 <pmc_switch_mainck_to_xtal+0x50>)
  4005b8:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4005ba:	620b      	str	r3, [r1, #32]
  4005bc:	4770      	bx	lr
  4005be:	bf00      	nop
  4005c0:	400e0400 	.word	0x400e0400
  4005c4:	fec8fffc 	.word	0xfec8fffc
  4005c8:	01370002 	.word	0x01370002

004005cc <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  4005cc:	4b02      	ldr	r3, [pc, #8]	; (4005d8 <pmc_osc_is_ready_mainck+0xc>)
  4005ce:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4005d0:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4005d4:	4770      	bx	lr
  4005d6:	bf00      	nop
  4005d8:	400e0400 	.word	0x400e0400

004005dc <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  4005dc:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4005e0:	4b01      	ldr	r3, [pc, #4]	; (4005e8 <pmc_disable_pllack+0xc>)
  4005e2:	629a      	str	r2, [r3, #40]	; 0x28
  4005e4:	4770      	bx	lr
  4005e6:	bf00      	nop
  4005e8:	400e0400 	.word	0x400e0400

004005ec <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  4005ec:	4b02      	ldr	r3, [pc, #8]	; (4005f8 <pmc_is_locked_pllack+0xc>)
  4005ee:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4005f0:	f000 0002 	and.w	r0, r0, #2
  4005f4:	4770      	bx	lr
  4005f6:	bf00      	nop
  4005f8:	400e0400 	.word	0x400e0400

004005fc <pmc_enable_pllbck>:
 * \param mulb PLLB multiplier.
 * \param pllbcount PLLB counter.
 * \param divb Divider.
 */
void pmc_enable_pllbck(uint32_t mulb, uint32_t pllbcount, uint32_t divb)
{
  4005fc:	b410      	push	{r4}
/**
 * \brief Disable PLLB clock.
 */
void pmc_disable_pllbck(void)
{
	PMC->CKGR_PLLBR = CKGR_PLLBR_MULB(0);
  4005fe:	4c0a      	ldr	r4, [pc, #40]	; (400628 <pmc_enable_pllbck+0x2c>)
  400600:	2300      	movs	r3, #0
  400602:	62e3      	str	r3, [r4, #44]	; 0x2c
			CKGR_PLLBR_DIVB(divb) | CKGR_PLLBR_PLLBCOUNT(pllbcount)
  400604:	0209      	lsls	r1, r1, #8
  400606:	f401 517c 	and.w	r1, r1, #16128	; 0x3f00
  40060a:	b2d2      	uxtb	r2, r2
  40060c:	4311      	orrs	r1, r2
			| CKGR_PLLBR_MULB(mulb);
  40060e:	4b07      	ldr	r3, [pc, #28]	; (40062c <pmc_enable_pllbck+0x30>)
  400610:	ea03 4000 	and.w	r0, r3, r0, lsl #16
  400614:	4301      	orrs	r1, r0
	PMC->CKGR_PLLBR =
  400616:	62e1      	str	r1, [r4, #44]	; 0x2c
	while ((PMC->PMC_SR & PMC_SR_LOCKB) == 0);
  400618:	4622      	mov	r2, r4
  40061a:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40061c:	f013 0f04 	tst.w	r3, #4
  400620:	d0fb      	beq.n	40061a <pmc_enable_pllbck+0x1e>
}
  400622:	bc10      	pop	{r4}
  400624:	4770      	bx	lr
  400626:	bf00      	nop
  400628:	400e0400 	.word	0x400e0400
  40062c:	07ff0000 	.word	0x07ff0000

00400630 <pmc_enable_periph_clk>:
	PMC->PMC_PCR = ul_id & 0x7F;
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
	PMC->PMC_PCR = pcr;
	return 0;
#else
	if (ul_id > MAX_PERIPH_ID) {
  400630:	2822      	cmp	r0, #34	; 0x22
  400632:	d81e      	bhi.n	400672 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  400634:	281f      	cmp	r0, #31
  400636:	d80c      	bhi.n	400652 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400638:	4b11      	ldr	r3, [pc, #68]	; (400680 <pmc_enable_periph_clk+0x50>)
  40063a:	699a      	ldr	r2, [r3, #24]
  40063c:	2301      	movs	r3, #1
  40063e:	4083      	lsls	r3, r0
  400640:	4393      	bics	r3, r2
  400642:	d018      	beq.n	400676 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  400644:	2301      	movs	r3, #1
  400646:	fa03 f000 	lsl.w	r0, r3, r0
  40064a:	4b0d      	ldr	r3, [pc, #52]	; (400680 <pmc_enable_periph_clk+0x50>)
  40064c:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  40064e:	2000      	movs	r0, #0
  400650:	4770      	bx	lr
		ul_id -= 32;
  400652:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  400654:	4b0a      	ldr	r3, [pc, #40]	; (400680 <pmc_enable_periph_clk+0x50>)
  400656:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  40065a:	2301      	movs	r3, #1
  40065c:	4083      	lsls	r3, r0
  40065e:	4393      	bics	r3, r2
  400660:	d00b      	beq.n	40067a <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  400662:	2301      	movs	r3, #1
  400664:	fa03 f000 	lsl.w	r0, r3, r0
  400668:	4b05      	ldr	r3, [pc, #20]	; (400680 <pmc_enable_periph_clk+0x50>)
  40066a:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  40066e:	2000      	movs	r0, #0
  400670:	4770      	bx	lr
		return 1;
  400672:	2001      	movs	r0, #1
  400674:	4770      	bx	lr
	return 0;
  400676:	2000      	movs	r0, #0
  400678:	4770      	bx	lr
  40067a:	2000      	movs	r0, #0
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
  40067c:	4770      	bx	lr
  40067e:	bf00      	nop
  400680:	400e0400 	.word	0x400e0400

00400684 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  400684:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400686:	0189      	lsls	r1, r1, #6
  400688:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  40068a:	2402      	movs	r4, #2
  40068c:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  40068e:	f04f 31ff 	mov.w	r1, #4294967295
  400692:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  400694:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  400696:	605a      	str	r2, [r3, #4]
}
  400698:	bc10      	pop	{r4}
  40069a:	4770      	bx	lr

0040069c <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  40069c:	0189      	lsls	r1, r1, #6
  40069e:	2305      	movs	r3, #5
  4006a0:	5043      	str	r3, [r0, r1]
  4006a2:	4770      	bx	lr

004006a4 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  4006a4:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  4006a8:	61ca      	str	r2, [r1, #28]
  4006aa:	4770      	bx	lr

004006ac <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4006ac:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
  4006b0:	624a      	str	r2, [r1, #36]	; 0x24
  4006b2:	4770      	bx	lr

004006b4 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4006b4:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
  4006b8:	6a08      	ldr	r0, [r1, #32]
}
  4006ba:	4770      	bx	lr

004006bc <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  4006bc:	b4f0      	push	{r4, r5, r6, r7}
  4006be:	b086      	sub	sp, #24
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  4006c0:	2402      	movs	r4, #2
  4006c2:	9401      	str	r4, [sp, #4]
  4006c4:	2408      	movs	r4, #8
  4006c6:	9402      	str	r4, [sp, #8]
  4006c8:	2420      	movs	r4, #32
  4006ca:	9403      	str	r4, [sp, #12]
  4006cc:	2480      	movs	r4, #128	; 0x80
  4006ce:	9404      	str	r4, [sp, #16]
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
  4006d0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  4006d2:	0be4      	lsrs	r4, r4, #15
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  4006d4:	9405      	str	r4, [sp, #20]
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
		if (ul_freq > ul_high) {
  4006d6:	ebb0 0f51 	cmp.w	r0, r1, lsr #1
  4006da:	d814      	bhi.n	400706 <tc_find_mck_divisor+0x4a>
  4006dc:	0c4c      	lsrs	r4, r1, #17
			return 0;
		} else if (ul_freq >= ul_low) {
  4006de:	42a0      	cmp	r0, r4
  4006e0:	d217      	bcs.n	400712 <tc_find_mck_divisor+0x56>
  4006e2:	2501      	movs	r5, #1
		ul_high = ul_mck / divisors[ul_index];
  4006e4:	af01      	add	r7, sp, #4
  4006e6:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
  4006ea:	fbb1 f4f4 	udiv	r4, r1, r4
		ul_low  = ul_high / TC_DIV_FACTOR;
  4006ee:	0c26      	lsrs	r6, r4, #16
		if (ul_freq > ul_high) {
  4006f0:	4284      	cmp	r4, r0
  4006f2:	d30a      	bcc.n	40070a <tc_find_mck_divisor+0x4e>
		} else if (ul_freq >= ul_low) {
  4006f4:	4286      	cmp	r6, r0
  4006f6:	d90d      	bls.n	400714 <tc_find_mck_divisor+0x58>
			ul_index++) {
  4006f8:	3501      	adds	r5, #1
	for (ul_index = 0;
  4006fa:	2d05      	cmp	r5, #5
  4006fc:	d1f3      	bne.n	4006e6 <tc_find_mck_divisor+0x2a>
			break;
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
		return 0;
  4006fe:	2000      	movs	r0, #0
	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
}
  400700:	b006      	add	sp, #24
  400702:	bcf0      	pop	{r4, r5, r6, r7}
  400704:	4770      	bx	lr
			return 0;
  400706:	2000      	movs	r0, #0
  400708:	e7fa      	b.n	400700 <tc_find_mck_divisor+0x44>
  40070a:	2000      	movs	r0, #0
  40070c:	e7f8      	b.n	400700 <tc_find_mck_divisor+0x44>
	return 1;
  40070e:	2001      	movs	r0, #1
  400710:	e7f6      	b.n	400700 <tc_find_mck_divisor+0x44>
	for (ul_index = 0;
  400712:	2500      	movs	r5, #0
	if (p_uldiv) {
  400714:	b12a      	cbz	r2, 400722 <tc_find_mck_divisor+0x66>
		*p_uldiv = divisors[ul_index];
  400716:	a906      	add	r1, sp, #24
  400718:	eb01 0185 	add.w	r1, r1, r5, lsl #2
  40071c:	f851 1c14 	ldr.w	r1, [r1, #-20]
  400720:	6011      	str	r1, [r2, #0]
	if (p_ultcclks) {
  400722:	2b00      	cmp	r3, #0
  400724:	d0f3      	beq.n	40070e <tc_find_mck_divisor+0x52>
		*p_ultcclks = ul_index;
  400726:	601d      	str	r5, [r3, #0]
	return 1;
  400728:	2001      	movs	r0, #1
  40072a:	e7e9      	b.n	400700 <tc_find_mck_divisor+0x44>

0040072c <twi_set_speed>:
{
	uint32_t ckdiv = 0;
	uint32_t c_lh_div;
	uint32_t cldiv, chdiv;

	if (ul_speed > I2C_FAST_MODE_SPEED) {
  40072c:	4b2a      	ldr	r3, [pc, #168]	; (4007d8 <twi_set_speed+0xac>)
  40072e:	4299      	cmp	r1, r3
  400730:	d849      	bhi.n	4007c6 <twi_set_speed+0x9a>
		return FAIL;
	}

	/* Low level time not less than 1.3us of I2C Fast Mode. */
	if (ul_speed > LOW_LEVEL_TIME_LIMIT) {
  400732:	f5a3 537a 	sub.w	r3, r3, #16000	; 0x3e80
  400736:	4299      	cmp	r1, r3
  400738:	d92b      	bls.n	400792 <twi_set_speed+0x66>
{
  40073a:	b410      	push	{r4}
		/* Low level of time fixed for 1.3us. */
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  40073c:	4c27      	ldr	r4, [pc, #156]	; (4007dc <twi_set_speed+0xb0>)
  40073e:	fba4 3402 	umull	r3, r4, r4, r2
  400742:	0ba4      	lsrs	r4, r4, #14
  400744:	3c04      	subs	r4, #4
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  400746:	4b26      	ldr	r3, [pc, #152]	; (4007e0 <twi_set_speed+0xb4>)
  400748:	440b      	add	r3, r1
  40074a:	009b      	lsls	r3, r3, #2
  40074c:	fbb2 f2f3 	udiv	r2, r2, r3
  400750:	3a04      	subs	r2, #4
		
		/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400752:	2cff      	cmp	r4, #255	; 0xff
  400754:	d939      	bls.n	4007ca <twi_set_speed+0x9e>
  400756:	2100      	movs	r1, #0
			/* Increase clock divider */
			ckdiv++;
  400758:	3101      	adds	r1, #1
			/* Divide cldiv value */
			cldiv /= TWI_CLK_DIVIDER;
  40075a:	0864      	lsrs	r4, r4, #1
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40075c:	2cff      	cmp	r4, #255	; 0xff
  40075e:	d90d      	bls.n	40077c <twi_set_speed+0x50>
  400760:	2907      	cmp	r1, #7
  400762:	d1f9      	bne.n	400758 <twi_set_speed+0x2c>
			chdiv /= TWI_CLK_DIVIDER;
		}

		/* set clock waveform generator register */
		p_twi->TWI_CWGR =
				TWI_CWGR_CLDIV(cldiv) | TWI_CWGR_CHDIV(chdiv) |
  400764:	0213      	lsls	r3, r2, #8
  400766:	b29b      	uxth	r3, r3
				TWI_CWGR_CKDIV(ckdiv);		
  400768:	0409      	lsls	r1, r1, #16
  40076a:	f401 21e0 	and.w	r1, r1, #458752	; 0x70000
				TWI_CWGR_CLDIV(cldiv) | TWI_CWGR_CHDIV(chdiv) |
  40076e:	430b      	orrs	r3, r1
  400770:	b2e4      	uxtb	r4, r4
  400772:	4323      	orrs	r3, r4
		p_twi->TWI_CWGR =
  400774:	6103      	str	r3, [r0, #16]
		p_twi->TWI_CWGR =
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
				TWI_CWGR_CKDIV(ckdiv);
	}

	return PASS;
  400776:	2000      	movs	r0, #0
}
  400778:	bc10      	pop	{r4}
  40077a:	4770      	bx	lr
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40077c:	2aff      	cmp	r2, #255	; 0xff
  40077e:	d9f1      	bls.n	400764 <twi_set_speed+0x38>
  400780:	2906      	cmp	r1, #6
  400782:	d8ef      	bhi.n	400764 <twi_set_speed+0x38>
			ckdiv++;
  400784:	3101      	adds	r1, #1
			chdiv /= TWI_CLK_DIVIDER;
  400786:	0852      	lsrs	r2, r2, #1
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400788:	2aff      	cmp	r2, #255	; 0xff
  40078a:	d9eb      	bls.n	400764 <twi_set_speed+0x38>
  40078c:	2906      	cmp	r1, #6
  40078e:	d9f9      	bls.n	400784 <twi_set_speed+0x58>
  400790:	e7e8      	b.n	400764 <twi_set_speed+0x38>
		c_lh_div = ul_mck / (ul_speed * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  400792:	0049      	lsls	r1, r1, #1
  400794:	fbb2 f2f1 	udiv	r2, r2, r1
  400798:	3a04      	subs	r2, #4
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40079a:	2aff      	cmp	r2, #255	; 0xff
  40079c:	d911      	bls.n	4007c2 <twi_set_speed+0x96>
  40079e:	2300      	movs	r3, #0
			ckdiv++;
  4007a0:	3301      	adds	r3, #1
			c_lh_div /= TWI_CLK_DIVIDER;
  4007a2:	0852      	lsrs	r2, r2, #1
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4007a4:	2aff      	cmp	r2, #255	; 0xff
  4007a6:	d901      	bls.n	4007ac <twi_set_speed+0x80>
  4007a8:	2b07      	cmp	r3, #7
  4007aa:	d1f9      	bne.n	4007a0 <twi_set_speed+0x74>
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
  4007ac:	0211      	lsls	r1, r2, #8
  4007ae:	b289      	uxth	r1, r1
				TWI_CWGR_CKDIV(ckdiv);
  4007b0:	041b      	lsls	r3, r3, #16
  4007b2:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
  4007b6:	430b      	orrs	r3, r1
  4007b8:	b2d2      	uxtb	r2, r2
  4007ba:	431a      	orrs	r2, r3
		p_twi->TWI_CWGR =
  4007bc:	6102      	str	r2, [r0, #16]
	return PASS;
  4007be:	2000      	movs	r0, #0
  4007c0:	4770      	bx	lr
	uint32_t ckdiv = 0;
  4007c2:	2300      	movs	r3, #0
  4007c4:	e7f2      	b.n	4007ac <twi_set_speed+0x80>
		return FAIL;
  4007c6:	2001      	movs	r0, #1
  4007c8:	4770      	bx	lr
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4007ca:	2aff      	cmp	r2, #255	; 0xff
	uint32_t ckdiv = 0;
  4007cc:	bf88      	it	hi
  4007ce:	2100      	movhi	r1, #0
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4007d0:	d8d8      	bhi.n	400784 <twi_set_speed+0x58>
	uint32_t ckdiv = 0;
  4007d2:	2100      	movs	r1, #0
  4007d4:	e7c6      	b.n	400764 <twi_set_speed+0x38>
  4007d6:	bf00      	nop
  4007d8:	00061a80 	.word	0x00061a80
  4007dc:	057619f1 	.word	0x057619f1
  4007e0:	3ffd1200 	.word	0x3ffd1200

004007e4 <twi_master_init>:
{
  4007e4:	b538      	push	{r3, r4, r5, lr}
  4007e6:	4604      	mov	r4, r0
  4007e8:	460d      	mov	r5, r1
	p_twi->TWI_IDR = ~0UL;
  4007ea:	f04f 33ff 	mov.w	r3, #4294967295
  4007ee:	6283      	str	r3, [r0, #40]	; 0x28
	p_twi->TWI_SR;
  4007f0:	6a03      	ldr	r3, [r0, #32]
 * \param p_twi Pointer to a TWI instance.
 */
void twi_reset(Twi *p_twi)
{
	/* Set SWRST bit to reset TWI peripheral */
	p_twi->TWI_CR = TWI_CR_SWRST;
  4007f2:	2380      	movs	r3, #128	; 0x80
  4007f4:	6003      	str	r3, [r0, #0]
	p_twi->TWI_RHR;
  4007f6:	6b03      	ldr	r3, [r0, #48]	; 0x30
	p_twi->TWI_CR = TWI_CR_MSDIS;
  4007f8:	2308      	movs	r3, #8
  4007fa:	6003      	str	r3, [r0, #0]
	p_twi->TWI_CR = TWI_CR_SVDIS;
  4007fc:	2320      	movs	r3, #32
  4007fe:	6003      	str	r3, [r0, #0]
	p_twi->TWI_CR = TWI_CR_MSEN;
  400800:	2304      	movs	r3, #4
  400802:	6003      	str	r3, [r0, #0]
	if (twi_set_speed(p_twi, p_opt->speed, p_opt->master_clk) == FAIL) {
  400804:	680a      	ldr	r2, [r1, #0]
  400806:	6849      	ldr	r1, [r1, #4]
  400808:	4b05      	ldr	r3, [pc, #20]	; (400820 <twi_master_init+0x3c>)
  40080a:	4798      	blx	r3
  40080c:	2801      	cmp	r0, #1
  40080e:	bf14      	ite	ne
  400810:	2000      	movne	r0, #0
  400812:	2001      	moveq	r0, #1
	if (p_opt->smbus == 1) {
  400814:	7a6b      	ldrb	r3, [r5, #9]
  400816:	2b01      	cmp	r3, #1
		p_twi->TWI_CR = TWI_CR_QUICK;
  400818:	bf04      	itt	eq
  40081a:	2340      	moveq	r3, #64	; 0x40
  40081c:	6023      	streq	r3, [r4, #0]
}
  40081e:	bd38      	pop	{r3, r4, r5, pc}
  400820:	0040072d 	.word	0x0040072d

00400824 <twi_mk_addr>:
	if (len == 0)
  400824:	460a      	mov	r2, r1
  400826:	b159      	cbz	r1, 400840 <twi_mk_addr+0x1c>
	val = addr[0];
  400828:	7803      	ldrb	r3, [r0, #0]
	if (len > 1) {
  40082a:	2901      	cmp	r1, #1
		val |= addr[1];
  40082c:	bfc4      	itt	gt
  40082e:	7841      	ldrbgt	r1, [r0, #1]
  400830:	ea41 2303 	orrgt.w	r3, r1, r3, lsl #8
	if (len > 2) {
  400834:	2a02      	cmp	r2, #2
  400836:	dd04      	ble.n	400842 <twi_mk_addr+0x1e>
		val |= addr[2];
  400838:	7882      	ldrb	r2, [r0, #2]
  40083a:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
  40083e:	e000      	b.n	400842 <twi_mk_addr+0x1e>
		return 0;
  400840:	2300      	movs	r3, #0
}
  400842:	4618      	mov	r0, r3
  400844:	4770      	bx	lr
	...

00400848 <twi_master_write>:
{
  400848:	b570      	push	{r4, r5, r6, lr}
	uint32_t cnt = p_packet->length;
  40084a:	68cd      	ldr	r5, [r1, #12]
	if (cnt == 0) {
  40084c:	2d00      	cmp	r5, #0
  40084e:	d035      	beq.n	4008bc <twi_master_write+0x74>
  400850:	460b      	mov	r3, r1
  400852:	4604      	mov	r4, r0
	uint8_t *buffer = p_packet->buffer;
  400854:	688e      	ldr	r6, [r1, #8]
	p_twi->TWI_MMR = 0;
  400856:	2000      	movs	r0, #0
  400858:	6060      	str	r0, [r4, #4]
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  40085a:	7c0a      	ldrb	r2, [r1, #16]
  40085c:	0412      	lsls	r2, r2, #16
  40085e:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
  400862:	6849      	ldr	r1, [r1, #4]
  400864:	0209      	lsls	r1, r1, #8
  400866:	f401 7140 	and.w	r1, r1, #768	; 0x300
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  40086a:	430a      	orrs	r2, r1
  40086c:	6062      	str	r2, [r4, #4]
	p_twi->TWI_IADR = 0;
  40086e:	60e0      	str	r0, [r4, #12]
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  400870:	6859      	ldr	r1, [r3, #4]
  400872:	4618      	mov	r0, r3
  400874:	4b15      	ldr	r3, [pc, #84]	; (4008cc <twi_master_write+0x84>)
  400876:	4798      	blx	r3
  400878:	60e0      	str	r0, [r4, #12]
		status = p_twi->TWI_SR;
  40087a:	6a23      	ldr	r3, [r4, #32]
		if (status & TWI_SR_NACK) {
  40087c:	f413 7f80 	tst.w	r3, #256	; 0x100
  400880:	d006      	beq.n	400890 <twi_master_write+0x48>
			return TWI_RECEIVE_NACK;
  400882:	2505      	movs	r5, #5
  400884:	e01b      	b.n	4008be <twi_master_write+0x76>
	while (cnt > 0) {
  400886:	b15d      	cbz	r5, 4008a0 <twi_master_write+0x58>
		status = p_twi->TWI_SR;
  400888:	6a23      	ldr	r3, [r4, #32]
		if (status & TWI_SR_NACK) {
  40088a:	f413 7f80 	tst.w	r3, #256	; 0x100
  40088e:	d118      	bne.n	4008c2 <twi_master_write+0x7a>
		if (!(status & TWI_SR_TXRDY)) {
  400890:	f013 0f04 	tst.w	r3, #4
  400894:	d0f7      	beq.n	400886 <twi_master_write+0x3e>
		p_twi->TWI_THR = *buffer++;
  400896:	7833      	ldrb	r3, [r6, #0]
  400898:	6363      	str	r3, [r4, #52]	; 0x34
		cnt--;
  40089a:	3d01      	subs	r5, #1
		p_twi->TWI_THR = *buffer++;
  40089c:	3601      	adds	r6, #1
  40089e:	e7f2      	b.n	400886 <twi_master_write+0x3e>
		status = p_twi->TWI_SR;
  4008a0:	6a23      	ldr	r3, [r4, #32]
		if (status & TWI_SR_NACK) {
  4008a2:	f413 7f80 	tst.w	r3, #256	; 0x100
  4008a6:	d10e      	bne.n	4008c6 <twi_master_write+0x7e>
		if (status & TWI_SR_TXRDY) {
  4008a8:	f013 0f04 	tst.w	r3, #4
  4008ac:	d0f8      	beq.n	4008a0 <twi_master_write+0x58>
	p_twi->TWI_CR = TWI_CR_STOP;
  4008ae:	2302      	movs	r3, #2
  4008b0:	6023      	str	r3, [r4, #0]
	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
  4008b2:	6a23      	ldr	r3, [r4, #32]
  4008b4:	f013 0f01 	tst.w	r3, #1
  4008b8:	d0fb      	beq.n	4008b2 <twi_master_write+0x6a>
  4008ba:	e000      	b.n	4008be <twi_master_write+0x76>
		return TWI_INVALID_ARGUMENT;
  4008bc:	2501      	movs	r5, #1
}
  4008be:	4628      	mov	r0, r5
  4008c0:	bd70      	pop	{r4, r5, r6, pc}
			return TWI_RECEIVE_NACK;
  4008c2:	2505      	movs	r5, #5
  4008c4:	e7fb      	b.n	4008be <twi_master_write+0x76>
			return TWI_RECEIVE_NACK;
  4008c6:	2505      	movs	r5, #5
  4008c8:	e7f9      	b.n	4008be <twi_master_write+0x76>
  4008ca:	bf00      	nop
  4008cc:	00400825 	.word	0x00400825

004008d0 <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
  4008d0:	b410      	push	{r4}
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  4008d2:	010b      	lsls	r3, r1, #4
  4008d4:	4293      	cmp	r3, r2
  4008d6:	d914      	bls.n	400902 <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  4008d8:	00c9      	lsls	r1, r1, #3
  4008da:	084b      	lsrs	r3, r1, #1
  4008dc:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  4008e0:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
  4008e4:	08d3      	lsrs	r3, r2, #3
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  4008e6:	1e5c      	subs	r4, r3, #1
  4008e8:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  4008ec:	428c      	cmp	r4, r1
  4008ee:	d901      	bls.n	4008f4 <usart_set_async_baudrate+0x24>
		return 1;
  4008f0:	2001      	movs	r0, #1
  4008f2:	e017      	b.n	400924 <usart_set_async_baudrate+0x54>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
  4008f4:	6841      	ldr	r1, [r0, #4]
  4008f6:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
  4008fa:	6041      	str	r1, [r0, #4]
  4008fc:	e00c      	b.n	400918 <usart_set_async_baudrate+0x48>
		return 1;
  4008fe:	2001      	movs	r0, #1
  400900:	e010      	b.n	400924 <usart_set_async_baudrate+0x54>
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  400902:	0859      	lsrs	r1, r3, #1
  400904:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
  400908:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
  40090c:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  40090e:	1e5c      	subs	r4, r3, #1
  400910:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  400914:	428c      	cmp	r4, r1
  400916:	d8f2      	bhi.n	4008fe <usart_set_async_baudrate+0x2e>
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  400918:	0412      	lsls	r2, r2, #16
  40091a:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  40091e:	431a      	orrs	r2, r3
  400920:	6202      	str	r2, [r0, #32]

	return 0;
  400922:	2000      	movs	r0, #0
}
  400924:	bc10      	pop	{r4}
  400926:	4770      	bx	lr

00400928 <usart_reset>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  400928:	4b0a      	ldr	r3, [pc, #40]	; (400954 <usart_reset+0x2c>)
  40092a:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
  40092e:	2300      	movs	r3, #0
  400930:	6043      	str	r3, [r0, #4]
	p_usart->US_RTOR = 0;
  400932:	6243      	str	r3, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
  400934:	6283      	str	r3, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  400936:	2388      	movs	r3, #136	; 0x88
  400938:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  40093a:	2324      	movs	r3, #36	; 0x24
  40093c:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
  40093e:	f44f 7380 	mov.w	r3, #256	; 0x100
  400942:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RTSDIS;
  400944:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  400948:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_DTRDIS;
  40094a:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  40094e:	6003      	str	r3, [r0, #0]
  400950:	4770      	bx	lr
  400952:	bf00      	nop
  400954:	55534100 	.word	0x55534100

00400958 <usart_init_rs232>:
{
  400958:	b570      	push	{r4, r5, r6, lr}
  40095a:	4605      	mov	r5, r0
  40095c:	460c      	mov	r4, r1
  40095e:	4616      	mov	r6, r2
	usart_reset(p_usart);
  400960:	4b0f      	ldr	r3, [pc, #60]	; (4009a0 <usart_init_rs232+0x48>)
  400962:	4798      	blx	r3
	ul_reg_val = 0;
  400964:	2200      	movs	r2, #0
  400966:	4b0f      	ldr	r3, [pc, #60]	; (4009a4 <usart_init_rs232+0x4c>)
  400968:	601a      	str	r2, [r3, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  40096a:	b1a4      	cbz	r4, 400996 <usart_init_rs232+0x3e>
  40096c:	4632      	mov	r2, r6
  40096e:	6821      	ldr	r1, [r4, #0]
  400970:	4628      	mov	r0, r5
  400972:	4b0d      	ldr	r3, [pc, #52]	; (4009a8 <usart_init_rs232+0x50>)
  400974:	4798      	blx	r3
  400976:	4602      	mov	r2, r0
  400978:	b978      	cbnz	r0, 40099a <usart_init_rs232+0x42>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  40097a:	6863      	ldr	r3, [r4, #4]
  40097c:	68a1      	ldr	r1, [r4, #8]
  40097e:	430b      	orrs	r3, r1
  400980:	6921      	ldr	r1, [r4, #16]
  400982:	430b      	orrs	r3, r1
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  400984:	68e1      	ldr	r1, [r4, #12]
  400986:	430b      	orrs	r3, r1
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400988:	4906      	ldr	r1, [pc, #24]	; (4009a4 <usart_init_rs232+0x4c>)
  40098a:	600b      	str	r3, [r1, #0]
	p_usart->US_MR |= ul_reg_val;
  40098c:	6869      	ldr	r1, [r5, #4]
  40098e:	430b      	orrs	r3, r1
  400990:	606b      	str	r3, [r5, #4]
}
  400992:	4610      	mov	r0, r2
  400994:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
  400996:	2201      	movs	r2, #1
  400998:	e7fb      	b.n	400992 <usart_init_rs232+0x3a>
  40099a:	2201      	movs	r2, #1
  40099c:	e7f9      	b.n	400992 <usart_init_rs232+0x3a>
  40099e:	bf00      	nop
  4009a0:	00400929 	.word	0x00400929
  4009a4:	20000a54 	.word	0x20000a54
  4009a8:	004008d1 	.word	0x004008d1

004009ac <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
  4009ac:	2340      	movs	r3, #64	; 0x40
  4009ae:	6003      	str	r3, [r0, #0]
  4009b0:	4770      	bx	lr

004009b2 <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
  4009b2:	2310      	movs	r3, #16
  4009b4:	6003      	str	r3, [r0, #0]
  4009b6:	4770      	bx	lr

004009b8 <usart_enable_interrupt>:
	p_usart->US_IER = ul_sources;
  4009b8:	6081      	str	r1, [r0, #8]
  4009ba:	4770      	bx	lr

004009bc <usart_disable_interrupt>:
	p_usart->US_IDR = ul_sources;
  4009bc:	60c1      	str	r1, [r0, #12]
  4009be:	4770      	bx	lr

004009c0 <usart_putchar>:
	while (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  4009c0:	6943      	ldr	r3, [r0, #20]
  4009c2:	f013 0f02 	tst.w	r3, #2
  4009c6:	d0fb      	beq.n	4009c0 <usart_putchar>
	p_usart->US_THR = US_THR_TXCHR(c);
  4009c8:	f3c1 0108 	ubfx	r1, r1, #0, #9
  4009cc:	61c1      	str	r1, [r0, #28]
}
  4009ce:	2000      	movs	r0, #0
  4009d0:	4770      	bx	lr
	...

004009d4 <usart_write_line>:
{
  4009d4:	b570      	push	{r4, r5, r6, lr}
  4009d6:	460c      	mov	r4, r1
	while (*string != '\0') {
  4009d8:	7809      	ldrb	r1, [r1, #0]
  4009da:	b139      	cbz	r1, 4009ec <usart_write_line+0x18>
  4009dc:	4605      	mov	r5, r0
		usart_putchar(p_usart, *string++);
  4009de:	4e04      	ldr	r6, [pc, #16]	; (4009f0 <usart_write_line+0x1c>)
  4009e0:	4628      	mov	r0, r5
  4009e2:	47b0      	blx	r6
	while (*string != '\0') {
  4009e4:	f814 1f01 	ldrb.w	r1, [r4, #1]!
  4009e8:	2900      	cmp	r1, #0
  4009ea:	d1f9      	bne.n	4009e0 <usart_write_line+0xc>
  4009ec:	bd70      	pop	{r4, r5, r6, pc}
  4009ee:	bf00      	nop
  4009f0:	004009c1 	.word	0x004009c1

004009f4 <vsync_handler>:
#define TWI_CLK     (400000UL)

void vsync_handler(uint32_t ul_id, uint32_t ul_mask) {
	unused(ul_id);
	unused(ul_mask);
	g_vsync_flag = 1;
  4009f4:	2201      	movs	r2, #1
  4009f6:	4b01      	ldr	r3, [pc, #4]	; (4009fc <vsync_handler+0x8>)
  4009f8:	701a      	strb	r2, [r3, #0]
  4009fa:	4770      	bx	lr
  4009fc:	20000aad 	.word	0x20000aad

00400a00 <init_vsync_interrupts>:
}


void init_vsync_interrupts(void) {
  400a00:	b510      	push	{r4, lr}
  400a02:	b082      	sub	sp, #8
	pio_handler_set(PIOA, ID_PIOA, CAMERA_VSYNC_PIN, PIO_IT_RISE_EDGE, vsync_handler);
  400a04:	4b07      	ldr	r3, [pc, #28]	; (400a24 <init_vsync_interrupts+0x24>)
  400a06:	9300      	str	r3, [sp, #0]
  400a08:	2370      	movs	r3, #112	; 0x70
  400a0a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400a0e:	210b      	movs	r1, #11
  400a10:	4805      	ldr	r0, [pc, #20]	; (400a28 <init_vsync_interrupts+0x28>)
  400a12:	4c06      	ldr	r4, [pc, #24]	; (400a2c <init_vsync_interrupts+0x2c>)
  400a14:	47a0      	blx	r4
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400a16:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400a1a:	4b05      	ldr	r3, [pc, #20]	; (400a30 <init_vsync_interrupts+0x30>)
  400a1c:	601a      	str	r2, [r3, #0]
	NVIC_EnableIRQ(PIOA_IRQn);
}
  400a1e:	b002      	add	sp, #8
  400a20:	bd10      	pop	{r4, pc}
  400a22:	bf00      	nop
  400a24:	004009f5 	.word	0x004009f5
  400a28:	400e0e00 	.word	0x400e0e00
  400a2c:	0040047d 	.word	0x0040047d
  400a30:	e000e100 	.word	0xe000e100

00400a34 <pio_capture_init>:
	//while (ov_init(BOARD_TWI) == 1) {
	//}

}

void pio_capture_init(Pio *p_pio, uint32_t ul_id) {
  400a34:	b510      	push	{r4, lr}
  400a36:	4604      	mov	r4, r0
	/* Enable periphral clock */
	pmc_enable_periph_clk(ul_id);
  400a38:	4608      	mov	r0, r1
  400a3a:	4b19      	ldr	r3, [pc, #100]	; (400aa0 <pio_capture_init+0x6c>)
  400a3c:	4798      	blx	r3

	/* Disable pio capture */
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_PCEN);
  400a3e:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400a42:	f023 0301 	bic.w	r3, r3, #1
  400a46:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150

	/* Disable rxbuff interrupt */
	p_pio->PIO_PCIDR |= PIO_PCIDR_RXBUFF;
  400a4a:	f8d4 3158 	ldr.w	r3, [r4, #344]	; 0x158
  400a4e:	f043 0308 	orr.w	r3, r3, #8
  400a52:	f8c4 3158 	str.w	r3, [r4, #344]	; 0x158

	/* 32bit width*/
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_DSIZE_Msk);
  400a56:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400a5a:	f023 0330 	bic.w	r3, r3, #48	; 0x30
  400a5e:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
	p_pio->PIO_PCMR |= PIO_PCMR_DSIZE_WORD;
  400a62:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400a66:	f043 0320 	orr.w	r3, r3, #32
  400a6a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150

	/* Only HSYNC and VSYNC enabled */
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_ALWYS);
  400a6e:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400a72:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  400a76:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_HALFS);
  400a7a:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400a7e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
  400a82:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150

	#if !defined(DEFAULT_MODE_COLORED)
		/* Samples only data with even index */
		p_pio->PIO_PCMR |= PIO_PCMR_HALFS;
  400a86:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400a8a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
  400a8e:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
		p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_FRSTS);
  400a92:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400a96:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  400a9a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
  400a9e:	bd10      	pop	{r4, pc}
  400aa0:	00400631 	.word	0x00400631

00400aa4 <configure_twi>:
void configure_twi(void) {
  400aa4:	b510      	push	{r4, lr}
  400aa6:	b084      	sub	sp, #16
	init_vsync_interrupts();
  400aa8:	4b16      	ldr	r3, [pc, #88]	; (400b04 <configure_twi+0x60>)
  400aaa:	4798      	blx	r3
	pio_capture_init(PIOA, ID_PIOA);
  400aac:	210b      	movs	r1, #11
  400aae:	4816      	ldr	r0, [pc, #88]	; (400b08 <configure_twi+0x64>)
  400ab0:	4b16      	ldr	r3, [pc, #88]	; (400b0c <configure_twi+0x68>)
  400ab2:	4798      	blx	r3
	PMC->PMC_PCK[0] = (PMC_PCK_PRES_CLK_4 | PMC_PCK_CSS_PLLA_CLK);
  400ab4:	4b16      	ldr	r3, [pc, #88]	; (400b10 <configure_twi+0x6c>)
  400ab6:	2222      	movs	r2, #34	; 0x22
  400ab8:	641a      	str	r2, [r3, #64]	; 0x40
	PMC->PMC_SCER = PMC_SCER_PCK0;
  400aba:	f44f 7280 	mov.w	r2, #256	; 0x100
  400abe:	601a      	str	r2, [r3, #0]
	while (!(PMC->PMC_SCSR & PMC_SCSR_PCK0)) {
  400ac0:	461a      	mov	r2, r3
  400ac2:	6893      	ldr	r3, [r2, #8]
  400ac4:	f413 7f80 	tst.w	r3, #256	; 0x100
  400ac8:	d0fb      	beq.n	400ac2 <configure_twi+0x1e>
	pmc_enable_periph_clk(BOARD_TWI);
  400aca:	4c12      	ldr	r4, [pc, #72]	; (400b14 <configure_twi+0x70>)
  400acc:	4620      	mov	r0, r4
  400ace:	4b12      	ldr	r3, [pc, #72]	; (400b18 <configure_twi+0x74>)
  400ad0:	4798      	blx	r3
	opt.master_clk = sysclk_get_cpu_hz();
  400ad2:	4b12      	ldr	r3, [pc, #72]	; (400b1c <configure_twi+0x78>)
  400ad4:	9301      	str	r3, [sp, #4]
	opt.speed      = TWI_CLK;
  400ad6:	4b12      	ldr	r3, [pc, #72]	; (400b20 <configure_twi+0x7c>)
  400ad8:	9302      	str	r3, [sp, #8]
	twi_master_init(BOARD_TWI, &opt);
  400ada:	a901      	add	r1, sp, #4
  400adc:	4620      	mov	r0, r4
  400ade:	4b11      	ldr	r3, [pc, #68]	; (400b24 <configure_twi+0x80>)
  400ae0:	4798      	blx	r3
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400ae2:	4b11      	ldr	r3, [pc, #68]	; (400b28 <configure_twi+0x84>)
  400ae4:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  400ae8:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
  400aec:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  400af0:	f3bf 8f6f 	isb	sy
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400af4:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  400af8:	2100      	movs	r1, #0
  400afa:	f883 1313 	strb.w	r1, [r3, #787]	; 0x313
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400afe:	601a      	str	r2, [r3, #0]
}
  400b00:	b004      	add	sp, #16
  400b02:	bd10      	pop	{r4, pc}
  400b04:	00400a01 	.word	0x00400a01
  400b08:	400e0e00 	.word	0x400e0e00
  400b0c:	00400a35 	.word	0x00400a35
  400b10:	400e0400 	.word	0x400e0400
  400b14:	40018000 	.word	0x40018000
  400b18:	00400631 	.word	0x00400631
  400b1c:	07270e00 	.word	0x07270e00
  400b20:	00061a80 	.word	0x00061a80
  400b24:	004007e5 	.word	0x004007e5
  400b28:	e000e100 	.word	0xe000e100

00400b2c <pio_capture_to_buffer>:
	#endif
}

uint8_t pio_capture_to_buffer(Pio *p_pio, uint8_t *uc_buf, uint32_t ul_size){
	if ((p_pio->PIO_RCR == 0) && (p_pio->PIO_RNCR == 0)) {
  400b2c:	f8d0 316c 	ldr.w	r3, [r0, #364]	; 0x16c
  400b30:	b913      	cbnz	r3, 400b38 <pio_capture_to_buffer+0xc>
  400b32:	f8d0 317c 	ldr.w	r3, [r0, #380]	; 0x17c
  400b36:	b143      	cbz	r3, 400b4a <pio_capture_to_buffer+0x1e>
		p_pio->PIO_RPR = (uint32_t)uc_buf;
		p_pio->PIO_RCR = ul_size;
		p_pio->PIO_PTCR = PIO_PTCR_RXTEN;
		return 1;
	} else if (p_pio->PIO_RNCR == 0) {
  400b38:	f8d0 317c 	ldr.w	r3, [r0, #380]	; 0x17c
  400b3c:	b973      	cbnz	r3, 400b5c <pio_capture_to_buffer+0x30>
		p_pio->PIO_RNPR = (uint32_t)uc_buf;
  400b3e:	f8c0 1178 	str.w	r1, [r0, #376]	; 0x178
		p_pio->PIO_RNCR = ul_size;
  400b42:	f8c0 217c 	str.w	r2, [r0, #380]	; 0x17c
		return 1;
  400b46:	2001      	movs	r0, #1
  400b48:	4770      	bx	lr
		p_pio->PIO_RPR = (uint32_t)uc_buf;
  400b4a:	f8c0 1168 	str.w	r1, [r0, #360]	; 0x168
		p_pio->PIO_RCR = ul_size;
  400b4e:	f8c0 216c 	str.w	r2, [r0, #364]	; 0x16c
		p_pio->PIO_PTCR = PIO_PTCR_RXTEN;
  400b52:	2301      	movs	r3, #1
  400b54:	f8c0 3188 	str.w	r3, [r0, #392]	; 0x188
		return 1;
  400b58:	4618      	mov	r0, r3
  400b5a:	4770      	bx	lr
	} else {
		return 0;
  400b5c:	2000      	movs	r0, #0
	}
}
  400b5e:	4770      	bx	lr

00400b60 <init_camera>:


void init_camera(void){
  400b60:	b508      	push	{r3, lr}
	//Configuration of camera pins, camera clock (XCLK), and
	//calling the configure_twi() function.
	configure_twi();
  400b62:	4b0c      	ldr	r3, [pc, #48]	; (400b94 <init_camera+0x34>)
  400b64:	4798      	blx	r3
	
	/* Init Vsync handler*/
	init_vsync_interrupts();
  400b66:	4b0c      	ldr	r3, [pc, #48]	; (400b98 <init_camera+0x38>)
  400b68:	4798      	blx	r3

	/* Init PIO capture*/
	pio_capture_init(PIOA, ID_PIOA);
  400b6a:	210b      	movs	r1, #11
  400b6c:	480b      	ldr	r0, [pc, #44]	; (400b9c <init_camera+0x3c>)
  400b6e:	4b0c      	ldr	r3, [pc, #48]	; (400ba0 <init_camera+0x40>)
  400b70:	4798      	blx	r3

	// Enable XCLCK
	pmc_enable_pllbck(7, 0x1, 1); /* PLLA work at 96 Mhz */ // PA17 is xclck signal
  400b72:	2201      	movs	r2, #1
  400b74:	4611      	mov	r1, r2
  400b76:	2007      	movs	r0, #7
  400b78:	4b0a      	ldr	r3, [pc, #40]	; (400ba4 <init_camera+0x44>)
  400b7a:	4798      	blx	r3
	
	/* Init PCK1 to work at 24 Mhz initialize PLLB*/
	/* 96/4=24 Mhz */
	PMC->PMC_PCK[1] = (PMC_PCK_PRES_CLK_4 | PMC_PCK_CSS_PLLB_CLK);
  400b7c:	4b0a      	ldr	r3, [pc, #40]	; (400ba8 <init_camera+0x48>)
  400b7e:	2223      	movs	r2, #35	; 0x23
  400b80:	645a      	str	r2, [r3, #68]	; 0x44
	PMC->PMC_SCER = PMC_SCER_PCK1;
  400b82:	f44f 7200 	mov.w	r2, #512	; 0x200
  400b86:	601a      	str	r2, [r3, #0]
	while (!(PMC->PMC_SCSR & PMC_SCSR_PCK1)) {
  400b88:	461a      	mov	r2, r3
  400b8a:	6893      	ldr	r3, [r2, #8]
  400b8c:	f413 7f00 	tst.w	r3, #512	; 0x200
  400b90:	d0fb      	beq.n	400b8a <init_camera+0x2a>
	
	// Initialize camera and wait to let it adjust  // ASK ILYA
	//while (ov_init(BOARD_TWI) == 1) {
	//}
	
}
  400b92:	bd08      	pop	{r3, pc}
  400b94:	00400aa5 	.word	0x00400aa5
  400b98:	00400a01 	.word	0x00400a01
  400b9c:	400e0e00 	.word	0x400e0e00
  400ba0:	00400a35 	.word	0x00400a35
  400ba4:	004005fd 	.word	0x004005fd
  400ba8:	400e0400 	.word	0x400e0400

00400bac <configure_camera>:

void configure_camera(void){
  400bac:	b538      	push	{r3, r4, r5, lr}
	ov_configure(BOARD_TWI, JPEG_INIT);
  400bae:	4d09      	ldr	r5, [pc, #36]	; (400bd4 <configure_camera+0x28>)
  400bb0:	2100      	movs	r1, #0
  400bb2:	4628      	mov	r0, r5
  400bb4:	4c08      	ldr	r4, [pc, #32]	; (400bd8 <configure_camera+0x2c>)
  400bb6:	47a0      	blx	r4
	ov_configure(BOARD_TWI, YUV422);
  400bb8:	2101      	movs	r1, #1
  400bba:	4628      	mov	r0, r5
  400bbc:	47a0      	blx	r4
	ov_configure(BOARD_TWI, JPEG);
  400bbe:	2102      	movs	r1, #2
  400bc0:	4628      	mov	r0, r5
  400bc2:	47a0      	blx	r4
	ov_configure(BOARD_TWI, JPEG_320x240);
  400bc4:	2103      	movs	r1, #3
  400bc6:	4628      	mov	r0, r5
  400bc8:	47a0      	blx	r4
	delay_ms(3000);
  400bca:	4804      	ldr	r0, [pc, #16]	; (400bdc <configure_camera+0x30>)
  400bcc:	4b04      	ldr	r3, [pc, #16]	; (400be0 <configure_camera+0x34>)
  400bce:	4798      	blx	r3
  400bd0:	bd38      	pop	{r3, r4, r5, pc}
  400bd2:	bf00      	nop
  400bd4:	40018000 	.word	0x40018000
  400bd8:	00400cb9 	.word	0x00400cb9
  400bdc:	01885e6e 	.word	0x01885e6e
  400be0:	20000001 	.word	0x20000001

00400be4 <start_capture>:
}

uint8_t start_capture(void) {
  400be4:	b510      	push	{r4, lr}

	pio_enable_interrupt(PIOA, CAMERA_VSYNC_PIN);
  400be6:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  400bea:	4811      	ldr	r0, [pc, #68]	; (400c30 <start_capture+0x4c>)
  400bec:	4b11      	ldr	r3, [pc, #68]	; (400c34 <start_capture+0x50>)
  400bee:	4798      	blx	r3
	while (!g_vsync_flag) {
  400bf0:	4a11      	ldr	r2, [pc, #68]	; (400c38 <start_capture+0x54>)
  400bf2:	7813      	ldrb	r3, [r2, #0]
  400bf4:	2b00      	cmp	r3, #0
  400bf6:	d0fc      	beq.n	400bf2 <start_capture+0xe>
		// Wait for VSYNC rising edge
	}
	
	pio_disable_interrupt(PIOA, CAMERA_VSYNC_PIN);
  400bf8:	4c0d      	ldr	r4, [pc, #52]	; (400c30 <start_capture+0x4c>)
  400bfa:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  400bfe:	4620      	mov	r0, r4
  400c00:	4b0e      	ldr	r3, [pc, #56]	; (400c3c <start_capture+0x58>)
  400c02:	4798      	blx	r3
	
	// Enable the capture function to start capture data
	pio_capture_enable(PIOA);
  400c04:	4620      	mov	r0, r4
  400c06:	4b0e      	ldr	r3, [pc, #56]	; (400c40 <start_capture+0x5c>)
  400c08:	4798      	blx	r3
	
	/* Capture data and send it to external SRAM memory thanks to PDC
	 * feature */
	pio_capture_to_buffer(PIOA, g_image_buffer, (100000) >> 2);
  400c0a:	f246 12a8 	movw	r2, #25000	; 0x61a8
  400c0e:	490d      	ldr	r1, [pc, #52]	; (400c44 <start_capture+0x60>)
  400c10:	4620      	mov	r0, r4
  400c12:	4b0d      	ldr	r3, [pc, #52]	; (400c48 <start_capture+0x64>)
  400c14:	4798      	blx	r3

	/* Wait end of capture*/
	while (!((PIOA->PIO_PCISR & PIO_PCIMR_RXBUFF) ==
  400c16:	4622      	mov	r2, r4
  400c18:	f8d2 3160 	ldr.w	r3, [r2, #352]	; 0x160
  400c1c:	f013 0f08 	tst.w	r3, #8
  400c20:	d0fa      	beq.n	400c18 <start_capture+0x34>
			PIO_PCIMR_RXBUFF)) {
	}

	/* Disable pio capture*/
	pio_capture_disable(PIOA);
  400c22:	4803      	ldr	r0, [pc, #12]	; (400c30 <start_capture+0x4c>)
  400c24:	4b09      	ldr	r3, [pc, #36]	; (400c4c <start_capture+0x68>)
  400c26:	4798      	blx	r3

	/* Reset vsync flag*/
	g_vsync_flag = 0;
  400c28:	2200      	movs	r2, #0
  400c2a:	4b03      	ldr	r3, [pc, #12]	; (400c38 <start_capture+0x54>)
  400c2c:	701a      	strb	r2, [r3, #0]
		
}
  400c2e:	bd10      	pop	{r4, pc}
  400c30:	400e0e00 	.word	0x400e0e00
  400c34:	004002b3 	.word	0x004002b3
  400c38:	20000aad 	.word	0x20000aad
  400c3c:	004002b7 	.word	0x004002b7
  400c40:	004003e5 	.word	0x004003e5
  400c44:	20000aac 	.word	0x20000aac
  400c48:	00400b2d 	.word	0x00400b2d
  400c4c:	004003fd 	.word	0x004003fd

00400c50 <ov_write_reg>:
 * \param p_twi TWI interface.
 * \param p_packet TWI packet.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_write_reg(Twi* const p_twi, twi_packet_t* const p_packet)
{
  400c50:	b508      	push	{r3, lr}
	uint32_t ul_status;

	ul_status = twi_master_write(p_twi, p_packet);
  400c52:	4b01      	ldr	r3, [pc, #4]	; (400c58 <ov_write_reg+0x8>)
  400c54:	4798      	blx	r3

	return ul_status;
}
  400c56:	bd08      	pop	{r3, pc}
  400c58:	00400849 	.word	0x00400849

00400c5c <ov_write_regs>:
 * \param p_twi TWI interface.
 * \param p_reg_list Register list to be written.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_write_regs(Twi* const p_twi, const ov_reg *p_reg_list)
{
  400c5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400c60:	b086      	sub	sp, #24
  400c62:	4607      	mov	r7, r0
  400c64:	1c4c      	adds	r4, r1, #1
			(p_next->val == OV_VAL_TERM))) {
		if (p_next->reg == 0xFE) {
			delay_ms(5);
		} else {
			twi_packet_regs.addr[0] = p_next->reg;
			twi_packet_regs.addr_length = 1;
  400c66:	2501      	movs	r5, #1
			twi_packet_regs.chip = OV_I2C_SENSOR_ADDRESS;
			twi_packet_regs.length = 1;
			twi_packet_regs.buffer = &(p_next->val);

			ul_err = ov_write_reg(p_twi, &twi_packet_regs);
  400c68:	4e11      	ldr	r6, [pc, #68]	; (400cb0 <ov_write_regs+0x54>)
			delay_ms(5);
  400c6a:	f8df 8048 	ldr.w	r8, [pc, #72]	; 400cb4 <ov_write_regs+0x58>
	while (!((p_next->reg == OV_REG_TERM) &&
  400c6e:	e010      	b.n	400c92 <ov_write_regs+0x36>
  400c70:	7821      	ldrb	r1, [r4, #0]
  400c72:	29ff      	cmp	r1, #255	; 0xff
  400c74:	d018      	beq.n	400ca8 <ov_write_regs+0x4c>
			twi_packet_regs.addr[0] = p_next->reg;
  400c76:	f88d 3004 	strb.w	r3, [sp, #4]
			twi_packet_regs.addr_length = 1;
  400c7a:	9502      	str	r5, [sp, #8]
			twi_packet_regs.chip = OV_I2C_SENSOR_ADDRESS;
  400c7c:	2330      	movs	r3, #48	; 0x30
  400c7e:	f88d 3014 	strb.w	r3, [sp, #20]
			twi_packet_regs.length = 1;
  400c82:	9504      	str	r5, [sp, #16]
			twi_packet_regs.buffer = &(p_next->val);
  400c84:	9203      	str	r2, [sp, #12]
			ul_err = ov_write_reg(p_twi, &twi_packet_regs);
  400c86:	a901      	add	r1, sp, #4
  400c88:	4638      	mov	r0, r7
  400c8a:	47b0      	blx	r6
			ul_size++;

			if (ul_err == TWI_BUSY) {
  400c8c:	2808      	cmp	r0, #8
  400c8e:	d00c      	beq.n	400caa <ov_write_regs+0x4e>
  400c90:	3402      	adds	r4, #2
  400c92:	4622      	mov	r2, r4
	while (!((p_next->reg == OV_REG_TERM) &&
  400c94:	f814 3c01 	ldrb.w	r3, [r4, #-1]
  400c98:	2bff      	cmp	r3, #255	; 0xff
  400c9a:	d0e9      	beq.n	400c70 <ov_write_regs+0x14>
		if (p_next->reg == 0xFE) {
  400c9c:	2bfe      	cmp	r3, #254	; 0xfe
  400c9e:	d1ea      	bne.n	400c76 <ov_write_regs+0x1a>
			delay_ms(5);
  400ca0:	f24a 706a 	movw	r0, #42858	; 0xa76a
  400ca4:	47c0      	blx	r8
  400ca6:	e7f3      	b.n	400c90 <ov_write_regs+0x34>
			}
		}

		p_next++;
	}
	return 0;
  400ca8:	2000      	movs	r0, #0
}
  400caa:	b006      	add	sp, #24
  400cac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400cb0:	00400c51 	.word	0x00400c51
  400cb4:	20000001 	.word	0x20000001

00400cb8 <ov_configure>:
 * \param p_twi TWI interface.
 * \param format Specific format to configure.
 * \return 0 on success, 1 otherwise.
 */
uint32_t ov_configure(Twi* const p_twi, const e_OV2640_format format)
{
  400cb8:	b508      	push	{r3, lr}
	const ov_reg *p_regs_conf = NULL;

	/* Common register initialization */
	switch (format) {
  400cba:	2911      	cmp	r1, #17
  400cbc:	d82a      	bhi.n	400d14 <ov_configure+0x5c>
  400cbe:	e8df f001 	tbb	[pc, r1]
  400cc2:	092b      	.short	0x092b
  400cc4:	0f0d0b2d 	.word	0x0f0d0b2d
  400cc8:	17151311 	.word	0x17151311
  400ccc:	1f1d1b19 	.word	0x1f1d1b19
  400cd0:	27252321 	.word	0x27252321
	case JPEG_INIT:
		p_regs_conf = OV2640_JPEG_INIT;
		break;
		
	case YUV422:
		p_regs_conf = OV2640_YUV422;
  400cd4:	4914      	ldr	r1, [pc, #80]	; (400d28 <ov_configure+0x70>)
  400cd6:	e022      	b.n	400d1e <ov_configure+0x66>
	case JPEG:
		p_regs_conf = OV2640_JPEG;
		break;
		
	case JPEG_320x240:
		p_regs_conf = OV2640_JPEG_320x240;
  400cd8:	4914      	ldr	r1, [pc, #80]	; (400d2c <ov_configure+0x74>)
		break;
  400cda:	e020      	b.n	400d1e <ov_configure+0x66>
		
	case JPEG_640x480:
		p_regs_conf = OV2640_JPEG_640x480;
  400cdc:	4914      	ldr	r1, [pc, #80]	; (400d30 <ov_configure+0x78>)
		break;
  400cde:	e01e      	b.n	400d1e <ov_configure+0x66>
		
	case JPEG_800x600:
		p_regs_conf = OV2640_JPEG_800x600;
  400ce0:	4914      	ldr	r1, [pc, #80]	; (400d34 <ov_configure+0x7c>)
		break;
  400ce2:	e01c      	b.n	400d1e <ov_configure+0x66>
		
	case JPEG_1024x768:
		p_regs_conf = OV2640_JPEG_1024x768;
  400ce4:	4914      	ldr	r1, [pc, #80]	; (400d38 <ov_configure+0x80>)
		break;
  400ce6:	e01a      	b.n	400d1e <ov_configure+0x66>
		
	case JPEG_1280x1024:
		p_regs_conf = OV2640_JPEG_1280x1024;
  400ce8:	4914      	ldr	r1, [pc, #80]	; (400d3c <ov_configure+0x84>)
		break;
  400cea:	e018      	b.n	400d1e <ov_configure+0x66>
		
	case JPEG_1600x1200:
		p_regs_conf = OV2640_JPEG_1600x1200;
  400cec:	4914      	ldr	r1, [pc, #80]	; (400d40 <ov_configure+0x88>)
		break;
  400cee:	e016      	b.n	400d1e <ov_configure+0x66>
		
	case QVGA_YUV422_10FPS:
		p_regs_conf = OV2640_QVGA_YUV422_10FPS;
  400cf0:	4914      	ldr	r1, [pc, #80]	; (400d44 <ov_configure+0x8c>)
		break;
  400cf2:	e014      	b.n	400d1e <ov_configure+0x66>

	case QVGA_YUV422_15FPS:
		p_regs_conf = OV2640_QVGA_YUV422_15FPS;
  400cf4:	4914      	ldr	r1, [pc, #80]	; (400d48 <ov_configure+0x90>)
		break;
  400cf6:	e012      	b.n	400d1e <ov_configure+0x66>

	case QVGA_YUV422_20FPS:
		p_regs_conf = OV2640_QVGA_YUV422_20FPS;
  400cf8:	4914      	ldr	r1, [pc, #80]	; (400d4c <ov_configure+0x94>)
		break;
  400cfa:	e010      	b.n	400d1e <ov_configure+0x66>

	case QVGA_YUV422_30FPS:
		p_regs_conf = OV2640_QVGA_YUV422_30FPS;
  400cfc:	4914      	ldr	r1, [pc, #80]	; (400d50 <ov_configure+0x98>)
		break;
  400cfe:	e00e      	b.n	400d1e <ov_configure+0x66>

	case QVGA_RGB888:
		p_regs_conf = OV2640_QVGA_RGB888;
  400d00:	4914      	ldr	r1, [pc, #80]	; (400d54 <ov_configure+0x9c>)
		break;
  400d02:	e00c      	b.n	400d1e <ov_configure+0x66>

	case QQVGA_YUV422:
		p_regs_conf = OV2640_QQVGA_YUV422;
  400d04:	4914      	ldr	r1, [pc, #80]	; (400d58 <ov_configure+0xa0>)
		break;
  400d06:	e00a      	b.n	400d1e <ov_configure+0x66>

	case QQVGA_RGB888:
		p_regs_conf = OV2640_QQVGA_RGB888;
  400d08:	4914      	ldr	r1, [pc, #80]	; (400d5c <ov_configure+0xa4>)
		break;
  400d0a:	e008      	b.n	400d1e <ov_configure+0x66>

	case TEST_PATTERN:
		p_regs_conf = OV2640_TEST_PATTERN;
  400d0c:	4914      	ldr	r1, [pc, #80]	; (400d60 <ov_configure+0xa8>)
		break;
  400d0e:	e006      	b.n	400d1e <ov_configure+0x66>

	case VGA_YUV422_20FPS:
		p_regs_conf = OV2640_VGA_YUV422_20FPS;
  400d10:	4914      	ldr	r1, [pc, #80]	; (400d64 <ov_configure+0xac>)
		break;
  400d12:	e004      	b.n	400d1e <ov_configure+0x66>
	if (p_regs_conf != NULL) {
		ov_write_regs( p_twi, p_regs_conf );
		return 0;
	}

	return 1;
  400d14:	2001      	movs	r0, #1
  400d16:	bd08      	pop	{r3, pc}
		p_regs_conf = OV2640_JPEG_INIT;
  400d18:	4913      	ldr	r1, [pc, #76]	; (400d68 <ov_configure+0xb0>)
  400d1a:	e000      	b.n	400d1e <ov_configure+0x66>
		p_regs_conf = OV2640_JPEG;
  400d1c:	4913      	ldr	r1, [pc, #76]	; (400d6c <ov_configure+0xb4>)
		ov_write_regs( p_twi, p_regs_conf );
  400d1e:	4b14      	ldr	r3, [pc, #80]	; (400d70 <ov_configure+0xb8>)
  400d20:	4798      	blx	r3
		return 0;
  400d22:	2000      	movs	r0, #0
}
  400d24:	bd08      	pop	{r3, pc}
  400d26:	bf00      	nop
  400d28:	00406f38 	.word	0x00406f38
  400d2c:	00406440 	.word	0x00406440
  400d30:	00406490 	.word	0x00406490
  400d34:	004064e4 	.word	0x004064e4
  400d38:	00406348 	.word	0x00406348
  400d3c:	00406398 	.word	0x00406398
  400d40:	004063ec 	.word	0x004063ec
  400d44:	00406994 	.word	0x00406994
  400d48:	00406a84 	.word	0x00406a84
  400d4c:	00406b74 	.word	0x00406b74
  400d50:	00406c64 	.word	0x00406c64
  400d54:	004068a0 	.word	0x004068a0
  400d58:	004067ac 	.word	0x004067ac
  400d5c:	004066b8 	.word	0x004066b8
  400d60:	00406d54 	.word	0x00406d54
  400d64:	00406e48 	.word	0x00406e48
  400d68:	00406538 	.word	0x00406538
  400d6c:	00406334 	.word	0x00406334
  400d70:	00400c5d 	.word	0x00400c5d

00400d74 <TC0_Handler>:
 */ 

#include "timer_interface.h"

void TC0_Handler(void)
{
  400d74:	b508      	push	{r3, lr}
	uint32_t ul_status;

	// Read TC0 status.
	ul_status = tc_get_status(TC0, 0);
  400d76:	2100      	movs	r1, #0
  400d78:	4805      	ldr	r0, [pc, #20]	; (400d90 <TC0_Handler+0x1c>)
  400d7a:	4b06      	ldr	r3, [pc, #24]	; (400d94 <TC0_Handler+0x20>)
  400d7c:	4798      	blx	r3

	// RC compare.
	if ((ul_status & TC_SR_CPCS) == TC_SR_CPCS) {
  400d7e:	f010 0f10 	tst.w	r0, #16
  400d82:	d004      	beq.n	400d8e <TC0_Handler+0x1a>
		counts++;
  400d84:	4a04      	ldr	r2, [pc, #16]	; (400d98 <TC0_Handler+0x24>)
  400d86:	7813      	ldrb	r3, [r2, #0]
  400d88:	3301      	adds	r3, #1
  400d8a:	b2db      	uxtb	r3, r3
  400d8c:	7013      	strb	r3, [r2, #0]
  400d8e:	bd08      	pop	{r3, pc}
  400d90:	40010000 	.word	0x40010000
  400d94:	004006b5 	.word	0x004006b5
  400d98:	20000ab4 	.word	0x20000ab4

00400d9c <configure_tc>:
	}
}

void configure_tc(void)
{
  400d9c:	b530      	push	{r4, r5, lr}
  400d9e:	b085      	sub	sp, #20

	// Get system clock.
	ul_sysclk = sysclk_get_cpu_hz();

	// Configure PMC.
	pmc_enable_periph_clk(ID_TC0);
  400da0:	2017      	movs	r0, #23
  400da2:	4b14      	ldr	r3, [pc, #80]	; (400df4 <configure_tc+0x58>)
  400da4:	4798      	blx	r3

	// Configure TC for a 1Hz frequency and trigger on RC compare.
	tc_find_mck_divisor(TC_FREQ, ul_sysclk, &ul_div, &ul_tcclks, ul_sysclk);
  400da6:	4d14      	ldr	r5, [pc, #80]	; (400df8 <configure_tc+0x5c>)
  400da8:	9500      	str	r5, [sp, #0]
  400daa:	ab02      	add	r3, sp, #8
  400dac:	aa03      	add	r2, sp, #12
  400dae:	4629      	mov	r1, r5
  400db0:	2001      	movs	r0, #1
  400db2:	4c12      	ldr	r4, [pc, #72]	; (400dfc <configure_tc+0x60>)
  400db4:	47a0      	blx	r4
	tc_init(TC0, 0, ul_tcclks | TC_CMR_CPCTRG);
  400db6:	4c12      	ldr	r4, [pc, #72]	; (400e00 <configure_tc+0x64>)
  400db8:	9a02      	ldr	r2, [sp, #8]
  400dba:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
  400dbe:	2100      	movs	r1, #0
  400dc0:	4620      	mov	r0, r4
  400dc2:	4b10      	ldr	r3, [pc, #64]	; (400e04 <configure_tc+0x68>)
  400dc4:	4798      	blx	r3
	tc_write_rc(TC0, 0, (ul_sysclk / ul_div) / TC_FREQ);
  400dc6:	9a03      	ldr	r2, [sp, #12]
  400dc8:	fbb5 f2f2 	udiv	r2, r5, r2
  400dcc:	2100      	movs	r1, #0
  400dce:	4620      	mov	r0, r4
  400dd0:	4b0d      	ldr	r3, [pc, #52]	; (400e08 <configure_tc+0x6c>)
  400dd2:	4798      	blx	r3
  400dd4:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
  400dd8:	4b0c      	ldr	r3, [pc, #48]	; (400e0c <configure_tc+0x70>)
  400dda:	601a      	str	r2, [r3, #0]

	// Configure and enable interrupt on RC compare.
	NVIC_EnableIRQ((IRQn_Type) ID_TC0);
	tc_enable_interrupt(TC0, 0, TC_IER_CPCS);
  400ddc:	2210      	movs	r2, #16
  400dde:	2100      	movs	r1, #0
  400de0:	4620      	mov	r0, r4
  400de2:	4b0b      	ldr	r3, [pc, #44]	; (400e10 <configure_tc+0x74>)
  400de4:	4798      	blx	r3
	
	// Start the timer
	tc_start(TC0, 0);
  400de6:	2100      	movs	r1, #0
  400de8:	4620      	mov	r0, r4
  400dea:	4b0a      	ldr	r3, [pc, #40]	; (400e14 <configure_tc+0x78>)
  400dec:	4798      	blx	r3
  400dee:	b005      	add	sp, #20
  400df0:	bd30      	pop	{r4, r5, pc}
  400df2:	bf00      	nop
  400df4:	00400631 	.word	0x00400631
  400df8:	07270e00 	.word	0x07270e00
  400dfc:	004006bd 	.word	0x004006bd
  400e00:	40010000 	.word	0x40010000
  400e04:	00400685 	.word	0x00400685
  400e08:	004006a5 	.word	0x004006a5
  400e0c:	e000e100 	.word	0xe000e100
  400e10:	004006ad 	.word	0x004006ad
  400e14:	0040069d 	.word	0x0040069d

00400e18 <process_data_wifi>:
	process_data_wifi();
	for (int jj=0;jj<MAX_INPUT_WIFI;jj++) input_line_wifi[jj] = 0;
	input_pos_wifi = 0;
}

void process_data_wifi(void) {
  400e18:	b508      	push	{r3, lr}
	// Processes the response of the ESP32, which should be stored in the buffer filled by process incoming byte wifi. This processing
	// should be looking for certain responses that the ESP32 should give, such as ?SUCCESS? when ?test? is sent to it.
	if (strstr(input_line_wifi, "SUCCESS")) {
  400e1a:	4909      	ldr	r1, [pc, #36]	; (400e40 <process_data_wifi+0x28>)
  400e1c:	4809      	ldr	r0, [pc, #36]	; (400e44 <process_data_wifi+0x2c>)
  400e1e:	4b0a      	ldr	r3, [pc, #40]	; (400e48 <process_data_wifi+0x30>)
  400e20:	4798      	blx	r3
  400e22:	b138      	cbz	r0, 400e34 <process_data_wifi+0x1c>
__always_inline static void arch_ioport_toggle_pin_level(ioport_pin_t pin)
{
	Pio *port = arch_ioport_pin_to_base(pin);
	ioport_port_mask_t mask = arch_ioport_pin_to_mask(pin);

	if (port->PIO_PDSR & arch_ioport_pin_to_mask(pin)) {
  400e24:	4b09      	ldr	r3, [pc, #36]	; (400e4c <process_data_wifi+0x34>)
  400e26:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
  400e28:	f013 0f01 	tst.w	r3, #1
  400e2c:	d103      	bne.n	400e36 <process_data_wifi+0x1e>
		port->PIO_CODR = mask;
	} else {
		port->PIO_SODR = mask;
  400e2e:	2201      	movs	r2, #1
  400e30:	4b06      	ldr	r3, [pc, #24]	; (400e4c <process_data_wifi+0x34>)
  400e32:	631a      	str	r2, [r3, #48]	; 0x30
  400e34:	bd08      	pop	{r3, pc}
		port->PIO_CODR = mask;
  400e36:	2201      	movs	r2, #1
  400e38:	4b04      	ldr	r3, [pc, #16]	; (400e4c <process_data_wifi+0x34>)
  400e3a:	635a      	str	r2, [r3, #52]	; 0x34
  400e3c:	bd08      	pop	{r3, pc}
  400e3e:	bf00      	nop
  400e40:	00406f64 	.word	0x00406f64
  400e44:	20000ab8 	.word	0x20000ab8
  400e48:	0040181d 	.word	0x0040181d
  400e4c:	600e0e00 	.word	0x600e0e00

00400e50 <wifi_command_response_handler>:
void wifi_command_response_handler(uint32_t ul_id, uint32_t ul_mask) {
  400e50:	b508      	push	{r3, lr}
	wifi_comm_success = true;
  400e52:	2201      	movs	r2, #1
  400e54:	4b07      	ldr	r3, [pc, #28]	; (400e74 <wifi_command_response_handler+0x24>)
  400e56:	701a      	strb	r2, [r3, #0]
	process_data_wifi();
  400e58:	4b07      	ldr	r3, [pc, #28]	; (400e78 <wifi_command_response_handler+0x28>)
  400e5a:	4798      	blx	r3
	for (int jj=0;jj<MAX_INPUT_WIFI;jj++) input_line_wifi[jj] = 0;
  400e5c:	2300      	movs	r3, #0
  400e5e:	4907      	ldr	r1, [pc, #28]	; (400e7c <wifi_command_response_handler+0x2c>)
  400e60:	461a      	mov	r2, r3
  400e62:	54ca      	strb	r2, [r1, r3]
  400e64:	3301      	adds	r3, #1
  400e66:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
  400e6a:	d1fa      	bne.n	400e62 <wifi_command_response_handler+0x12>
	input_pos_wifi = 0;
  400e6c:	2200      	movs	r2, #0
  400e6e:	4b04      	ldr	r3, [pc, #16]	; (400e80 <wifi_command_response_handler+0x30>)
  400e70:	601a      	str	r2, [r3, #0]
  400e72:	bd08      	pop	{r3, pc}
  400e74:	20000a6c 	.word	0x20000a6c
  400e78:	00400e19 	.word	0x00400e19
  400e7c:	20000ab8 	.word	0x20000ab8
  400e80:	20000a58 	.word	0x20000a58

00400e84 <configure_usart_wifi>:
			spi_write(SPI, transfer_index++, 0, 0);
		}
	}
}

void configure_usart_wifi(void) {
  400e84:	b530      	push	{r4, r5, lr}
  400e86:	b087      	sub	sp, #28
	// Configuration of USART port used to communicate with the ESP32.
	gpio_configure_pin(PIN_USART0_RXD_IDX, PIN_USART0_RXD_FLAGS);
  400e88:	4d18      	ldr	r5, [pc, #96]	; (400eec <configure_usart_wifi+0x68>)
  400e8a:	4629      	mov	r1, r5
  400e8c:	2005      	movs	r0, #5
  400e8e:	4c18      	ldr	r4, [pc, #96]	; (400ef0 <configure_usart_wifi+0x6c>)
  400e90:	47a0      	blx	r4
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
  400e92:	4629      	mov	r1, r5
  400e94:	2006      	movs	r0, #6
  400e96:	47a0      	blx	r4
	
	static uint32_t ul_sysclk;
	const sam_usart_opt_t wifi_usart_settings = {
  400e98:	466c      	mov	r4, sp
  400e9a:	4d16      	ldr	r5, [pc, #88]	; (400ef4 <configure_usart_wifi+0x70>)
  400e9c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  400e9e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  400ea0:	e895 0003 	ldmia.w	r5, {r0, r1}
  400ea4:	e884 0003 	stmia.w	r4, {r0, r1}
		/* This field is only used in IrDA mode. */
		0
	};
	
	/* Get system clock. */
	ul_sysclk = sysclk_get_cpu_hz();
  400ea8:	4d13      	ldr	r5, [pc, #76]	; (400ef8 <configure_usart_wifi+0x74>)
  400eaa:	4b14      	ldr	r3, [pc, #80]	; (400efc <configure_usart_wifi+0x78>)
  400eac:	602b      	str	r3, [r5, #0]
	
	pmc_enable_periph_clk(WIFI_USART_ID);
  400eae:	200e      	movs	r0, #14
  400eb0:	4b13      	ldr	r3, [pc, #76]	; (400f00 <configure_usart_wifi+0x7c>)
  400eb2:	4798      	blx	r3
	
	usart_init_rs232(WIFI_USART,&wifi_usart_settings,ul_sysclk);
  400eb4:	4c13      	ldr	r4, [pc, #76]	; (400f04 <configure_usart_wifi+0x80>)
  400eb6:	682a      	ldr	r2, [r5, #0]
  400eb8:	4669      	mov	r1, sp
  400eba:	4620      	mov	r0, r4
  400ebc:	4b12      	ldr	r3, [pc, #72]	; (400f08 <configure_usart_wifi+0x84>)
  400ebe:	4798      	blx	r3

	/* Disable all the interrupts. */
	usart_disable_interrupt(WIFI_USART, ALL_INTERRUPT_MASK);
  400ec0:	f04f 31ff 	mov.w	r1, #4294967295
  400ec4:	4620      	mov	r0, r4
  400ec6:	4b11      	ldr	r3, [pc, #68]	; (400f0c <configure_usart_wifi+0x88>)
  400ec8:	4798      	blx	r3
	
	/* Enable TX & RX function. */
	usart_enable_tx(WIFI_USART);
  400eca:	4620      	mov	r0, r4
  400ecc:	4b10      	ldr	r3, [pc, #64]	; (400f10 <configure_usart_wifi+0x8c>)
  400ece:	4798      	blx	r3
	usart_enable_rx(WIFI_USART);
  400ed0:	4620      	mov	r0, r4
  400ed2:	4b10      	ldr	r3, [pc, #64]	; (400f14 <configure_usart_wifi+0x90>)
  400ed4:	4798      	blx	r3

	usart_enable_interrupt(WIFI_USART, US_IER_RXRDY);
  400ed6:	2101      	movs	r1, #1
  400ed8:	4620      	mov	r0, r4
  400eda:	4b0f      	ldr	r3, [pc, #60]	; (400f18 <configure_usart_wifi+0x94>)
  400edc:	4798      	blx	r3
  400ede:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  400ee2:	4b0e      	ldr	r3, [pc, #56]	; (400f1c <configure_usart_wifi+0x98>)
  400ee4:	601a      	str	r2, [r3, #0]

	/* Configure and enable interrupt of USART. */
	NVIC_EnableIRQ(WIFI_USART_IRQn);
}
  400ee6:	b007      	add	sp, #28
  400ee8:	bd30      	pop	{r4, r5, pc}
  400eea:	bf00      	nop
  400eec:	08000001 	.word	0x08000001
  400ef0:	004002c5 	.word	0x004002c5
  400ef4:	00406f4c 	.word	0x00406f4c
  400ef8:	20000a68 	.word	0x20000a68
  400efc:	07270e00 	.word	0x07270e00
  400f00:	00400631 	.word	0x00400631
  400f04:	40024000 	.word	0x40024000
  400f08:	00400959 	.word	0x00400959
  400f0c:	004009bd 	.word	0x004009bd
  400f10:	004009ad 	.word	0x004009ad
  400f14:	004009b3 	.word	0x004009b3
  400f18:	004009b9 	.word	0x004009b9
  400f1c:	e000e100 	.word	0xe000e100

00400f20 <configure_wifi_comm_pin>:

void configure_wifi_comm_pin(void) {
  400f20:	b530      	push	{r4, r5, lr}
  400f22:	b083      	sub	sp, #12
	// Configuration of ?command complete? rising-edge interrupt.
	/* Configure PIO clock. */
	pmc_enable_periph_clk(WIFI_COMM_ID);
  400f24:	200c      	movs	r0, #12
  400f26:	4b0b      	ldr	r3, [pc, #44]	; (400f54 <configure_wifi_comm_pin+0x34>)
  400f28:	4798      	blx	r3

	/* Initialize PIO interrupt handler, see PIO definition in conf_board.h
	**/
	pio_handler_set(WIFI_COMM_PIO, WIFI_COMM_ID, WIFI_COMM_PIN_NUM, WIFI_COMM_ATTR, wifi_command_response_handler);
  400f2a:	4c0b      	ldr	r4, [pc, #44]	; (400f58 <configure_wifi_comm_pin+0x38>)
  400f2c:	4b0b      	ldr	r3, [pc, #44]	; (400f5c <configure_wifi_comm_pin+0x3c>)
  400f2e:	9300      	str	r3, [sp, #0]
  400f30:	2370      	movs	r3, #112	; 0x70
  400f32:	f44f 6280 	mov.w	r2, #1024	; 0x400
  400f36:	210c      	movs	r1, #12
  400f38:	4620      	mov	r0, r4
  400f3a:	4d09      	ldr	r5, [pc, #36]	; (400f60 <configure_wifi_comm_pin+0x40>)
  400f3c:	47a8      	blx	r5
  400f3e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  400f42:	4b08      	ldr	r3, [pc, #32]	; (400f64 <configure_wifi_comm_pin+0x44>)
  400f44:	601a      	str	r2, [r3, #0]

	/* Enable PIO controller IRQs. */
	NVIC_EnableIRQ((IRQn_Type)WIFI_COMM_ID);

	/* Enable PIO interrupt lines. */
	pio_enable_interrupt(WIFI_COMM_PIO, WIFI_COMM_PIN_NUM);
  400f46:	f44f 6180 	mov.w	r1, #1024	; 0x400
  400f4a:	4620      	mov	r0, r4
  400f4c:	4b06      	ldr	r3, [pc, #24]	; (400f68 <configure_wifi_comm_pin+0x48>)
  400f4e:	4798      	blx	r3
}
  400f50:	b003      	add	sp, #12
  400f52:	bd30      	pop	{r4, r5, pc}
  400f54:	00400631 	.word	0x00400631
  400f58:	400e1000 	.word	0x400e1000
  400f5c:	00400e51 	.word	0x00400e51
  400f60:	0040047d 	.word	0x0040047d
  400f64:	e000e100 	.word	0xe000e100
  400f68:	004002b3 	.word	0x004002b3

00400f6c <configure_wifi_provision_pin>:

void configure_wifi_provision_pin(void) { //
  400f6c:	b530      	push	{r4, r5, lr}
  400f6e:	b083      	sub	sp, #12
	// Configuration of button interrupt to initiate provisioning mode.
	// if flag then interrupt
	// This configures the ESP32 as an access point with SSID ?ESD1 XY?, where X is the fifth byte of the MAC address and Y is the 
	// sixth byte of the MAC address
	pmc_enable_periph_clk(WIFI_PROVIS_ID);
  400f70:	200b      	movs	r0, #11
  400f72:	4b0b      	ldr	r3, [pc, #44]	; (400fa0 <configure_wifi_provision_pin+0x34>)
  400f74:	4798      	blx	r3
	pio_handler_set(WIFI_PROVIS_PIO, WIFI_PROVIS_ID, WIFI_PROVIS_PIN_NUM, WIFI_PROVIS_ATTR, wifi_command_response_handler);
  400f76:	4c0b      	ldr	r4, [pc, #44]	; (400fa4 <configure_wifi_provision_pin+0x38>)
  400f78:	4b0b      	ldr	r3, [pc, #44]	; (400fa8 <configure_wifi_provision_pin+0x3c>)
  400f7a:	9300      	str	r3, [sp, #0]
  400f7c:	2370      	movs	r3, #112	; 0x70
  400f7e:	f44f 2280 	mov.w	r2, #262144	; 0x40000
  400f82:	210b      	movs	r1, #11
  400f84:	4620      	mov	r0, r4
  400f86:	4d09      	ldr	r5, [pc, #36]	; (400fac <configure_wifi_provision_pin+0x40>)
  400f88:	47a8      	blx	r5
  400f8a:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400f8e:	4b08      	ldr	r3, [pc, #32]	; (400fb0 <configure_wifi_provision_pin+0x44>)
  400f90:	601a      	str	r2, [r3, #0]
	NVIC_EnableIRQ((IRQn_Type)WIFI_PROVIS_ID);
	pio_enable_interrupt(WIFI_PROVIS_PIO, WIFI_PROVIS_PIN_NUM);
  400f92:	f44f 2180 	mov.w	r1, #262144	; 0x40000
  400f96:	4620      	mov	r0, r4
  400f98:	4b06      	ldr	r3, [pc, #24]	; (400fb4 <configure_wifi_provision_pin+0x48>)
  400f9a:	4798      	blx	r3
}
  400f9c:	b003      	add	sp, #12
  400f9e:	bd30      	pop	{r4, r5, pc}
  400fa0:	00400631 	.word	0x00400631
  400fa4:	400e0e00 	.word	0x400e0e00
  400fa8:	00400e51 	.word	0x00400e51
  400fac:	0040047d 	.word	0x0040047d
  400fb0:	e000e100 	.word	0xe000e100
  400fb4:	004002b3 	.word	0x004002b3

00400fb8 <configure_spi>:

void configure_spi(void) {
  400fb8:	b510      	push	{r4, lr}
	// Configuration of SPI port and interrupts used to send images to the ESP32.
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  400fba:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400fbe:	200c      	movs	r0, #12
  400fc0:	4c0e      	ldr	r4, [pc, #56]	; (400ffc <configure_spi+0x44>)
  400fc2:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  400fc4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400fc8:	200d      	movs	r0, #13
  400fca:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  400fcc:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400fd0:	200e      	movs	r0, #14
  400fd2:	47a0      	blx	r4
	gpio_configure_pin(SPI_NPCS0_GPIO, SPI_NPCS0_FLAGS);
  400fd4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400fd8:	200b      	movs	r0, #11
  400fda:	47a0      	blx	r4
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400fdc:	4b08      	ldr	r3, [pc, #32]	; (401000 <configure_spi+0x48>)
  400fde:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  400fe2:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  __ASM volatile ("dsb 0xF":::"memory");
  400fe6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  400fea:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400fee:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  400ff2:	2100      	movs	r1, #0
  400ff4:	f883 1315 	strb.w	r1, [r3, #789]	; 0x315
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400ff8:	601a      	str	r2, [r3, #0]
  400ffa:	bd10      	pop	{r4, pc}
  400ffc:	004002c5 	.word	0x004002c5
  401000:	e000e100 	.word	0xe000e100

00401004 <prepare_spi_transfer>:
	spi_enable(SPI);
}

void prepare_spi_transfer(void) {
	// Set necessary parameters to prepare for SPI transfer.
	transfer_len = 100;
  401004:	2264      	movs	r2, #100	; 0x64
  401006:	4b03      	ldr	r3, [pc, #12]	; (401014 <prepare_spi_transfer+0x10>)
  401008:	601a      	str	r2, [r3, #0]
	transfer_index = 0;
  40100a:	2200      	movs	r2, #0
  40100c:	4b02      	ldr	r3, [pc, #8]	; (401018 <prepare_spi_transfer+0x14>)
  40100e:	601a      	str	r2, [r3, #0]
  401010:	4770      	bx	lr
  401012:	bf00      	nop
  401014:	20000a64 	.word	0x20000a64
  401018:	20000a60 	.word	0x20000a60

0040101c <write_wifi_command>:
}

void write_wifi_command(char* comm, uint8_t cnt) { //
  40101c:	b510      	push	{r4, lr}
  40101e:	460c      	mov	r4, r1
	// Writes a command (comm) to the ESP32, and waits either for an acknowledgment (via the ?command complete? pin)
	// or a timeout. The timeout can be created by setting the global variable counts to zero, which will automatically increment every second, 
	// and waiting while counts < cnt.
	
	usart_write_line(WIFI_USART,comm); // write command
  401020:	4601      	mov	r1, r0
  401022:	4808      	ldr	r0, [pc, #32]	; (401044 <write_wifi_command+0x28>)
  401024:	4b08      	ldr	r3, [pc, #32]	; (401048 <write_wifi_command+0x2c>)
  401026:	4798      	blx	r3
	// wait for acknowledgment or timeout 
	counts = 0;
  401028:	2200      	movs	r2, #0
  40102a:	4b08      	ldr	r3, [pc, #32]	; (40104c <write_wifi_command+0x30>)
  40102c:	701a      	strb	r2, [r3, #0]
	while (counts < cnt) {
  40102e:	461a      	mov	r2, r3
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
  401030:	4907      	ldr	r1, [pc, #28]	; (401050 <write_wifi_command+0x34>)
  401032:	7813      	ldrb	r3, [r2, #0]
  401034:	b2db      	uxtb	r3, r3
  401036:	42a3      	cmp	r3, r4
  401038:	d203      	bcs.n	401042 <write_wifi_command+0x26>
  40103a:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
		if (ioport_get_pin_level(COMMAND_COMPLETE) == true) {
  40103c:	f013 0f01 	tst.w	r3, #1
  401040:	d0f7      	beq.n	401032 <write_wifi_command+0x16>
  401042:	bd10      	pop	{r4, pc}
  401044:	40024000 	.word	0x40024000
  401048:	004009d5 	.word	0x004009d5
  40104c:	20000ab4 	.word	0x20000ab4
  401050:	420e0e00 	.word	0x420e0e00

00401054 <write_image_to_web>:
	// follow this protocol (illustrated in Appendix C):
	// 1. Configure the SPI interface to be ready for a transfer by setting its parameters appropriately.
	// 2. Issue the command ?image transfer xxxx?, where xxxx is replaced by the length of the image you want to transfer.
	// 3. The ESP32 will then set the ?command complete? pin low and begin transferring the image over SPI.
	// 4. After the image is done sending, the ESP32 will set the ?command complete? pin high. The MCU should sense this and then move on.
	if (transfer_len == 0) {
  401054:	4b09      	ldr	r3, [pc, #36]	; (40107c <write_image_to_web+0x28>)
  401056:	681b      	ldr	r3, [r3, #0]
  401058:	b903      	cbnz	r3, 40105c <write_image_to_web+0x8>
  40105a:	4770      	bx	lr
void write_image_to_web(void) { //
  40105c:	b510      	push	{r4, lr}
		return;
	}
	else {
		prepare_spi_transfer();
  40105e:	4b08      	ldr	r3, [pc, #32]	; (401080 <write_image_to_web+0x2c>)
  401060:	4798      	blx	r3
		char transfer_message;
		sprintf(transfer_message, "image transfer %i\n", transfer_len);
  401062:	4b06      	ldr	r3, [pc, #24]	; (40107c <write_image_to_web+0x28>)
  401064:	681a      	ldr	r2, [r3, #0]
  401066:	4907      	ldr	r1, [pc, #28]	; (401084 <write_image_to_web+0x30>)
  401068:	2400      	movs	r4, #0
  40106a:	4620      	mov	r0, r4
  40106c:	4b06      	ldr	r3, [pc, #24]	; (401088 <write_image_to_web+0x34>)
  40106e:	4798      	blx	r3
		write_wifi_command(transfer_message,1);		
  401070:	2101      	movs	r1, #1
  401072:	4620      	mov	r0, r4
  401074:	4b05      	ldr	r3, [pc, #20]	; (40108c <write_image_to_web+0x38>)
  401076:	4798      	blx	r3
  401078:	bd10      	pop	{r4, pc}
  40107a:	bf00      	nop
  40107c:	20000a64 	.word	0x20000a64
  401080:	00401005 	.word	0x00401005
  401084:	00406f6c 	.word	0x00406f6c
  401088:	00401521 	.word	0x00401521
  40108c:	0040101d 	.word	0x0040101d

00401090 <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
  401090:	4770      	bx	lr

00401092 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  401092:	e7fe      	b.n	401092 <Dummy_Handler>

00401094 <Reset_Handler>:
{
  401094:	b508      	push	{r3, lr}
	if (pSrc > pDest) {
  401096:	4b21      	ldr	r3, [pc, #132]	; (40111c <Reset_Handler+0x88>)
  401098:	4a21      	ldr	r2, [pc, #132]	; (401120 <Reset_Handler+0x8c>)
  40109a:	429a      	cmp	r2, r3
  40109c:	d928      	bls.n	4010f0 <Reset_Handler+0x5c>
		for (; pDest < &_erelocate;) {
  40109e:	4b21      	ldr	r3, [pc, #132]	; (401124 <Reset_Handler+0x90>)
  4010a0:	4a1e      	ldr	r2, [pc, #120]	; (40111c <Reset_Handler+0x88>)
  4010a2:	429a      	cmp	r2, r3
  4010a4:	d20c      	bcs.n	4010c0 <Reset_Handler+0x2c>
  4010a6:	3b01      	subs	r3, #1
  4010a8:	1a9b      	subs	r3, r3, r2
  4010aa:	f023 0303 	bic.w	r3, r3, #3
  4010ae:	3304      	adds	r3, #4
  4010b0:	4413      	add	r3, r2
  4010b2:	491b      	ldr	r1, [pc, #108]	; (401120 <Reset_Handler+0x8c>)
			*pDest++ = *pSrc++;
  4010b4:	f851 0b04 	ldr.w	r0, [r1], #4
  4010b8:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
  4010bc:	429a      	cmp	r2, r3
  4010be:	d1f9      	bne.n	4010b4 <Reset_Handler+0x20>
	__NOP();
  4010c0:	bf00      	nop
	for (pDest = &_szero; pDest < &_ezero;) {
  4010c2:	4b19      	ldr	r3, [pc, #100]	; (401128 <Reset_Handler+0x94>)
  4010c4:	4a19      	ldr	r2, [pc, #100]	; (40112c <Reset_Handler+0x98>)
  4010c6:	429a      	cmp	r2, r3
  4010c8:	d20a      	bcs.n	4010e0 <Reset_Handler+0x4c>
  4010ca:	3b01      	subs	r3, #1
  4010cc:	1a9b      	subs	r3, r3, r2
  4010ce:	f023 0303 	bic.w	r3, r3, #3
  4010d2:	3304      	adds	r3, #4
  4010d4:	4413      	add	r3, r2
		*pDest++ = 0;
  4010d6:	2100      	movs	r1, #0
  4010d8:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
  4010dc:	429a      	cmp	r2, r3
  4010de:	d1fb      	bne.n	4010d8 <Reset_Handler+0x44>
	SCB->VTOR = ((uint32_t) pSrc);
  4010e0:	4b13      	ldr	r3, [pc, #76]	; (401130 <Reset_Handler+0x9c>)
  4010e2:	4a14      	ldr	r2, [pc, #80]	; (401134 <Reset_Handler+0xa0>)
  4010e4:	609a      	str	r2, [r3, #8]
	__libc_init_array();
  4010e6:	4b14      	ldr	r3, [pc, #80]	; (401138 <Reset_Handler+0xa4>)
  4010e8:	4798      	blx	r3
	main();
  4010ea:	4b14      	ldr	r3, [pc, #80]	; (40113c <Reset_Handler+0xa8>)
  4010ec:	4798      	blx	r3
  4010ee:	e7fe      	b.n	4010ee <Reset_Handler+0x5a>
	} else if (pSrc < pDest) {
  4010f0:	4b0a      	ldr	r3, [pc, #40]	; (40111c <Reset_Handler+0x88>)
  4010f2:	4a0b      	ldr	r2, [pc, #44]	; (401120 <Reset_Handler+0x8c>)
  4010f4:	429a      	cmp	r2, r3
  4010f6:	d2e3      	bcs.n	4010c0 <Reset_Handler+0x2c>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  4010f8:	4b0a      	ldr	r3, [pc, #40]	; (401124 <Reset_Handler+0x90>)
  4010fa:	4808      	ldr	r0, [pc, #32]	; (40111c <Reset_Handler+0x88>)
  4010fc:	1a18      	subs	r0, r3, r0
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  4010fe:	4611      	mov	r1, r2
  401100:	3a04      	subs	r2, #4
  401102:	4402      	add	r2, r0
		for (;nb_bytes;nb_bytes -= 4) {
  401104:	2800      	cmp	r0, #0
  401106:	d0db      	beq.n	4010c0 <Reset_Handler+0x2c>
  401108:	f1c1 0104 	rsb	r1, r1, #4
			*pDest-- = *pSrc--;
  40110c:	f852 0904 	ldr.w	r0, [r2], #-4
  401110:	f843 0d04 	str.w	r0, [r3, #-4]!
		for (;nb_bytes;nb_bytes -= 4) {
  401114:	42ca      	cmn	r2, r1
  401116:	d1f9      	bne.n	40110c <Reset_Handler+0x78>
  401118:	e7d2      	b.n	4010c0 <Reset_Handler+0x2c>
  40111a:	bf00      	nop
  40111c:	20000000 	.word	0x20000000
  401120:	0040724c 	.word	0x0040724c
  401124:	200009c0 	.word	0x200009c0
  401128:	20000ec8 	.word	0x20000ec8
  40112c:	200009c0 	.word	0x200009c0
  401130:	e000ed00 	.word	0xe000ed00
  401134:	00400000 	.word	0x00400000
  401138:	00401435 	.word	0x00401435
  40113c:	004012fd 	.word	0x004012fd

00401140 <SystemCoreClockUpdate>:
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  401140:	4b3c      	ldr	r3, [pc, #240]	; (401234 <SystemCoreClockUpdate+0xf4>)
  401142:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401144:	f003 0303 	and.w	r3, r3, #3
  401148:	2b03      	cmp	r3, #3
  40114a:	d80e      	bhi.n	40116a <SystemCoreClockUpdate+0x2a>
  40114c:	e8df f003 	tbb	[pc, r3]
  401150:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  401154:	4b38      	ldr	r3, [pc, #224]	; (401238 <SystemCoreClockUpdate+0xf8>)
  401156:	695b      	ldr	r3, [r3, #20]
  401158:	f013 0f80 	tst.w	r3, #128	; 0x80
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  40115c:	bf14      	ite	ne
  40115e:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  401162:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  401166:	4b35      	ldr	r3, [pc, #212]	; (40123c <SystemCoreClockUpdate+0xfc>)
  401168:	601a      	str	r2, [r3, #0]
		
	default:
		break;
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  40116a:	4b32      	ldr	r3, [pc, #200]	; (401234 <SystemCoreClockUpdate+0xf4>)
  40116c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40116e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401172:	2b70      	cmp	r3, #112	; 0x70
  401174:	d055      	beq.n	401222 <SystemCoreClockUpdate+0xe2>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  401176:	4b2f      	ldr	r3, [pc, #188]	; (401234 <SystemCoreClockUpdate+0xf4>)
  401178:	6b1a      	ldr	r2, [r3, #48]	; 0x30
		SystemCoreClock >>=
  40117a:	4930      	ldr	r1, [pc, #192]	; (40123c <SystemCoreClockUpdate+0xfc>)
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  40117c:	f3c2 1202 	ubfx	r2, r2, #4, #3
		SystemCoreClock >>=
  401180:	680b      	ldr	r3, [r1, #0]
  401182:	40d3      	lsrs	r3, r2
  401184:	600b      	str	r3, [r1, #0]
  401186:	4770      	bx	lr
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  401188:	4b2a      	ldr	r3, [pc, #168]	; (401234 <SystemCoreClockUpdate+0xf4>)
  40118a:	6a1b      	ldr	r3, [r3, #32]
  40118c:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401190:	d003      	beq.n	40119a <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL;
  401192:	4a2b      	ldr	r2, [pc, #172]	; (401240 <SystemCoreClockUpdate+0x100>)
  401194:	4b29      	ldr	r3, [pc, #164]	; (40123c <SystemCoreClockUpdate+0xfc>)
  401196:	601a      	str	r2, [r3, #0]
  401198:	e7e7      	b.n	40116a <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40119a:	4a2a      	ldr	r2, [pc, #168]	; (401244 <SystemCoreClockUpdate+0x104>)
  40119c:	4b27      	ldr	r3, [pc, #156]	; (40123c <SystemCoreClockUpdate+0xfc>)
  40119e:	601a      	str	r2, [r3, #0]
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  4011a0:	4b24      	ldr	r3, [pc, #144]	; (401234 <SystemCoreClockUpdate+0xf4>)
  4011a2:	6a1b      	ldr	r3, [r3, #32]
  4011a4:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4011a8:	2b10      	cmp	r3, #16
  4011aa:	d005      	beq.n	4011b8 <SystemCoreClockUpdate+0x78>
  4011ac:	2b20      	cmp	r3, #32
  4011ae:	d1dc      	bne.n	40116a <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  4011b0:	4a23      	ldr	r2, [pc, #140]	; (401240 <SystemCoreClockUpdate+0x100>)
  4011b2:	4b22      	ldr	r3, [pc, #136]	; (40123c <SystemCoreClockUpdate+0xfc>)
  4011b4:	601a      	str	r2, [r3, #0]
			break;
  4011b6:	e7d8      	b.n	40116a <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  4011b8:	4a23      	ldr	r2, [pc, #140]	; (401248 <SystemCoreClockUpdate+0x108>)
  4011ba:	4b20      	ldr	r3, [pc, #128]	; (40123c <SystemCoreClockUpdate+0xfc>)
  4011bc:	601a      	str	r2, [r3, #0]
			break;
  4011be:	e7d4      	b.n	40116a <SystemCoreClockUpdate+0x2a>
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  4011c0:	4b1c      	ldr	r3, [pc, #112]	; (401234 <SystemCoreClockUpdate+0xf4>)
  4011c2:	6a1b      	ldr	r3, [r3, #32]
  4011c4:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4011c8:	d018      	beq.n	4011fc <SystemCoreClockUpdate+0xbc>
				SystemCoreClock = CHIP_FREQ_XTAL;
  4011ca:	4a1d      	ldr	r2, [pc, #116]	; (401240 <SystemCoreClockUpdate+0x100>)
  4011cc:	4b1b      	ldr	r3, [pc, #108]	; (40123c <SystemCoreClockUpdate+0xfc>)
  4011ce:	601a      	str	r2, [r3, #0]
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  4011d0:	4b18      	ldr	r3, [pc, #96]	; (401234 <SystemCoreClockUpdate+0xf4>)
  4011d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4011d4:	f003 0303 	and.w	r3, r3, #3
  4011d8:	2b02      	cmp	r3, #2
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  4011da:	4a16      	ldr	r2, [pc, #88]	; (401234 <SystemCoreClockUpdate+0xf4>)
  4011dc:	bf07      	ittee	eq
  4011de:	6a91      	ldreq	r1, [r2, #40]	; 0x28
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  4011e0:	6a92      	ldreq	r2, [r2, #40]	; 0x28
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  4011e2:	6ad1      	ldrne	r1, [r2, #44]	; 0x2c
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  4011e4:	6ad2      	ldrne	r2, [r2, #44]	; 0x2c
  4011e6:	4815      	ldr	r0, [pc, #84]	; (40123c <SystemCoreClockUpdate+0xfc>)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  4011e8:	f3c1 410a 	ubfx	r1, r1, #16, #11
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  4011ec:	6803      	ldr	r3, [r0, #0]
  4011ee:	fb01 3303 	mla	r3, r1, r3, r3
						>> CKGR_PLLBR_DIVB_Pos));
  4011f2:	b2d2      	uxtb	r2, r2
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  4011f4:	fbb3 f3f2 	udiv	r3, r3, r2
  4011f8:	6003      	str	r3, [r0, #0]
  4011fa:	e7b6      	b.n	40116a <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4011fc:	4a11      	ldr	r2, [pc, #68]	; (401244 <SystemCoreClockUpdate+0x104>)
  4011fe:	4b0f      	ldr	r3, [pc, #60]	; (40123c <SystemCoreClockUpdate+0xfc>)
  401200:	601a      	str	r2, [r3, #0]
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  401202:	4b0c      	ldr	r3, [pc, #48]	; (401234 <SystemCoreClockUpdate+0xf4>)
  401204:	6a1b      	ldr	r3, [r3, #32]
  401206:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40120a:	2b10      	cmp	r3, #16
  40120c:	d005      	beq.n	40121a <SystemCoreClockUpdate+0xda>
  40120e:	2b20      	cmp	r3, #32
  401210:	d1de      	bne.n	4011d0 <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  401212:	4a0b      	ldr	r2, [pc, #44]	; (401240 <SystemCoreClockUpdate+0x100>)
  401214:	4b09      	ldr	r3, [pc, #36]	; (40123c <SystemCoreClockUpdate+0xfc>)
  401216:	601a      	str	r2, [r3, #0]
					break;
  401218:	e7da      	b.n	4011d0 <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  40121a:	4a0b      	ldr	r2, [pc, #44]	; (401248 <SystemCoreClockUpdate+0x108>)
  40121c:	4b07      	ldr	r3, [pc, #28]	; (40123c <SystemCoreClockUpdate+0xfc>)
  40121e:	601a      	str	r2, [r3, #0]
					break;
  401220:	e7d6      	b.n	4011d0 <SystemCoreClockUpdate+0x90>
		SystemCoreClock /= 3U;
  401222:	4a06      	ldr	r2, [pc, #24]	; (40123c <SystemCoreClockUpdate+0xfc>)
  401224:	6813      	ldr	r3, [r2, #0]
  401226:	4909      	ldr	r1, [pc, #36]	; (40124c <SystemCoreClockUpdate+0x10c>)
  401228:	fba1 1303 	umull	r1, r3, r1, r3
  40122c:	085b      	lsrs	r3, r3, #1
  40122e:	6013      	str	r3, [r2, #0]
  401230:	4770      	bx	lr
  401232:	bf00      	nop
  401234:	400e0400 	.word	0x400e0400
  401238:	400e1410 	.word	0x400e1410
  40123c:	2000000c 	.word	0x2000000c
  401240:	00b71b00 	.word	0x00b71b00
  401244:	003d0900 	.word	0x003d0900
  401248:	007a1200 	.word	0x007a1200
  40124c:	aaaaaaab 	.word	0xaaaaaaab

00401250 <system_init_flash>:
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
#if !defined(ID_EFC1)
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  401250:	4b12      	ldr	r3, [pc, #72]	; (40129c <system_init_flash+0x4c>)
  401252:	4298      	cmp	r0, r3
  401254:	d911      	bls.n	40127a <system_init_flash+0x2a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  401256:	4b12      	ldr	r3, [pc, #72]	; (4012a0 <system_init_flash+0x50>)
  401258:	4298      	cmp	r0, r3
  40125a:	d913      	bls.n	401284 <system_init_flash+0x34>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  40125c:	4b11      	ldr	r3, [pc, #68]	; (4012a4 <system_init_flash+0x54>)
  40125e:	4298      	cmp	r0, r3
  401260:	d914      	bls.n	40128c <system_init_flash+0x3c>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  401262:	4b11      	ldr	r3, [pc, #68]	; (4012a8 <system_init_flash+0x58>)
  401264:	4298      	cmp	r0, r3
  401266:	d915      	bls.n	401294 <system_init_flash+0x44>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  401268:	4b10      	ldr	r3, [pc, #64]	; (4012ac <system_init_flash+0x5c>)
  40126a:	4298      	cmp	r0, r3
					EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  40126c:	bf94      	ite	ls
  40126e:	f04f 2204 	movls.w	r2, #67109888	; 0x4000400
					} else {
					EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  401272:	4a0f      	ldrhi	r2, [pc, #60]	; (4012b0 <system_init_flash+0x60>)
  401274:	4b0f      	ldr	r3, [pc, #60]	; (4012b4 <system_init_flash+0x64>)
  401276:	601a      	str	r2, [r3, #0]
  401278:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  40127a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  40127e:	4b0d      	ldr	r3, [pc, #52]	; (4012b4 <system_init_flash+0x64>)
  401280:	601a      	str	r2, [r3, #0]
  401282:	4770      	bx	lr
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  401284:	4a0c      	ldr	r2, [pc, #48]	; (4012b8 <system_init_flash+0x68>)
  401286:	4b0b      	ldr	r3, [pc, #44]	; (4012b4 <system_init_flash+0x64>)
  401288:	601a      	str	r2, [r3, #0]
  40128a:	4770      	bx	lr
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  40128c:	4a0b      	ldr	r2, [pc, #44]	; (4012bc <system_init_flash+0x6c>)
  40128e:	4b09      	ldr	r3, [pc, #36]	; (4012b4 <system_init_flash+0x64>)
  401290:	601a      	str	r2, [r3, #0]
  401292:	4770      	bx	lr
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  401294:	4a0a      	ldr	r2, [pc, #40]	; (4012c0 <system_init_flash+0x70>)
  401296:	4b07      	ldr	r3, [pc, #28]	; (4012b4 <system_init_flash+0x64>)
  401298:	601a      	str	r2, [r3, #0]
  40129a:	4770      	bx	lr
  40129c:	01312cff 	.word	0x01312cff
  4012a0:	026259ff 	.word	0x026259ff
  4012a4:	039386ff 	.word	0x039386ff
  4012a8:	04c4b3ff 	.word	0x04c4b3ff
  4012ac:	05f5e0ff 	.word	0x05f5e0ff
  4012b0:	04000500 	.word	0x04000500
  4012b4:	400e0a00 	.word	0x400e0a00
  4012b8:	04000100 	.word	0x04000100
  4012bc:	04000200 	.word	0x04000200
  4012c0:	04000300 	.word	0x04000300

004012c4 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  4012c4:	4b0a      	ldr	r3, [pc, #40]	; (4012f0 <_sbrk+0x2c>)
  4012c6:	681b      	ldr	r3, [r3, #0]
  4012c8:	b153      	cbz	r3, 4012e0 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  4012ca:	4b09      	ldr	r3, [pc, #36]	; (4012f0 <_sbrk+0x2c>)
  4012cc:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  4012ce:	181a      	adds	r2, r3, r0
  4012d0:	4908      	ldr	r1, [pc, #32]	; (4012f4 <_sbrk+0x30>)
  4012d2:	4291      	cmp	r1, r2
  4012d4:	db08      	blt.n	4012e8 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  4012d6:	4610      	mov	r0, r2
  4012d8:	4a05      	ldr	r2, [pc, #20]	; (4012f0 <_sbrk+0x2c>)
  4012da:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  4012dc:	4618      	mov	r0, r3
  4012de:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  4012e0:	4a05      	ldr	r2, [pc, #20]	; (4012f8 <_sbrk+0x34>)
  4012e2:	4b03      	ldr	r3, [pc, #12]	; (4012f0 <_sbrk+0x2c>)
  4012e4:	601a      	str	r2, [r3, #0]
  4012e6:	e7f0      	b.n	4012ca <_sbrk+0x6>
		return (caddr_t) -1;	
  4012e8:	f04f 30ff 	mov.w	r0, #4294967295
}
  4012ec:	4770      	bx	lr
  4012ee:	bf00      	nop
  4012f0:	20000a70 	.word	0x20000a70
  4012f4:	2001fffc 	.word	0x2001fffc
  4012f8:	20003ec8 	.word	0x20003ec8

004012fc <main>:
#include "conf_clock.h"
#include "wifi.h"
#include "camera.h"
#include "timer_interface.h"

int main(void) {
  4012fc:	b580      	push	{r7, lr}
	// Initialize clock and board definitions
	sysclk_init();
  4012fe:	4b34      	ldr	r3, [pc, #208]	; (4013d0 <main+0xd4>)
  401300:	4798      	blx	r3
	board_init();
  401302:	4b34      	ldr	r3, [pc, #208]	; (4013d4 <main+0xd8>)
  401304:	4798      	blx	r3
	
	// Configure and start the Timer
	configure_tc();
  401306:	4b34      	ldr	r3, [pc, #208]	; (4013d8 <main+0xdc>)
  401308:	4798      	blx	r3
	
	// Configure WiFi USART, SPI, and pins
	configure_usart_wifi();
  40130a:	4b34      	ldr	r3, [pc, #208]	; (4013dc <main+0xe0>)
  40130c:	4798      	blx	r3
	configure_spi();
  40130e:	4b34      	ldr	r3, [pc, #208]	; (4013e0 <main+0xe4>)
  401310:	4798      	blx	r3
	configure_wifi_comm_pin();
  401312:	4b34      	ldr	r3, [pc, #208]	; (4013e4 <main+0xe8>)
  401314:	4798      	blx	r3
	configure_wifi_provision_pin();
  401316:	4b34      	ldr	r3, [pc, #208]	; (4013e8 <main+0xec>)
  401318:	4798      	blx	r3
	
	// Initialize and configure camera
	init_camera();
  40131a:	4b34      	ldr	r3, [pc, #208]	; (4013ec <main+0xf0>)
  40131c:	4798      	blx	r3
	configure_camera();
  40131e:	4b34      	ldr	r3, [pc, #208]	; (4013f0 <main+0xf4>)
  401320:	4798      	blx	r3
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  401322:	4c34      	ldr	r4, [pc, #208]	; (4013f4 <main+0xf8>)
  401324:	2501      	movs	r5, #1
  401326:	6365      	str	r5, [r4, #52]	; 0x34
	
	// Reset WiFi and wait for connection
	ioport_set_pin_level(WIFI_RESET, false);
	delay_ms(100);
  401328:	4833      	ldr	r0, [pc, #204]	; (4013f8 <main+0xfc>)
  40132a:	4b34      	ldr	r3, [pc, #208]	; (4013fc <main+0x100>)
  40132c:	4798      	blx	r3
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  40132e:	6325      	str	r5, [r4, #48]	; 0x30
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
  401330:	4b33      	ldr	r3, [pc, #204]	; (401400 <main+0x104>)
  401332:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
	ioport_set_pin_level(WIFI_RESET, true);
	
	while (!ioport_get_pin_level(WIFI_GPIO_23)) { // Choose: connection pin 23
  401334:	f013 0f01 	tst.w	r3, #1
  401338:	d114      	bne.n	401364 <main+0x68>
		if (provision_flag) {
  40133a:	4c32      	ldr	r4, [pc, #200]	; (401404 <main+0x108>)
			write_wifi_command("provision\r\n", 5); 
			provision_flag = 0;
		}
		delay_ms(1000);
  40133c:	4e32      	ldr	r6, [pc, #200]	; (401408 <main+0x10c>)
  40133e:	4d30      	ldr	r5, [pc, #192]	; (401400 <main+0x104>)
  401340:	e006      	b.n	401350 <main+0x54>
  401342:	4630      	mov	r0, r6
  401344:	4b2d      	ldr	r3, [pc, #180]	; (4013fc <main+0x100>)
  401346:	4798      	blx	r3
  401348:	6beb      	ldr	r3, [r5, #60]	; 0x3c
	while (!ioport_get_pin_level(WIFI_GPIO_23)) { // Choose: connection pin 23
  40134a:	f013 0f01 	tst.w	r3, #1
  40134e:	d109      	bne.n	401364 <main+0x68>
		if (provision_flag) {
  401350:	7823      	ldrb	r3, [r4, #0]
  401352:	2b00      	cmp	r3, #0
  401354:	d0f5      	beq.n	401342 <main+0x46>
			write_wifi_command("provision\r\n", 5); 
  401356:	2105      	movs	r1, #5
  401358:	482c      	ldr	r0, [pc, #176]	; (40140c <main+0x110>)
  40135a:	4b2d      	ldr	r3, [pc, #180]	; (401410 <main+0x114>)
  40135c:	4798      	blx	r3
			provision_flag = 0;
  40135e:	2300      	movs	r3, #0
  401360:	7023      	strb	r3, [r4, #0]
  401362:	e7ee      	b.n	401342 <main+0x46>
	}
	
	// Send test command to WiFi module
	while (1) {
		write_wifi_command("test\r\n", 10);
  401364:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 401430 <main+0x134>
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  401368:	4c22      	ldr	r4, [pc, #136]	; (4013f4 <main+0xf8>)
			break;
		}
		ioport_set_pin_level(WIFI_RESET, false);
		delay_ms(100);
		ioport_set_pin_level(WIFI_RESET, true);
		delay_ms(10000);
  40136a:	4f2a      	ldr	r7, [pc, #168]	; (401414 <main+0x118>)
		write_wifi_command("test\r\n", 10);
  40136c:	210a      	movs	r1, #10
  40136e:	4640      	mov	r0, r8
  401370:	4b27      	ldr	r3, [pc, #156]	; (401410 <main+0x114>)
  401372:	4798      	blx	r3
		if (strstr((char*)input_line_wifi, "SUCCESS")) {
  401374:	4928      	ldr	r1, [pc, #160]	; (401418 <main+0x11c>)
  401376:	4829      	ldr	r0, [pc, #164]	; (40141c <main+0x120>)
  401378:	4b29      	ldr	r3, [pc, #164]	; (401420 <main+0x124>)
  40137a:	4798      	blx	r3
  40137c:	b940      	cbnz	r0, 401390 <main+0x94>
  40137e:	2601      	movs	r6, #1
  401380:	6366      	str	r6, [r4, #52]	; 0x34
		delay_ms(100);
  401382:	481d      	ldr	r0, [pc, #116]	; (4013f8 <main+0xfc>)
  401384:	4d1d      	ldr	r5, [pc, #116]	; (4013fc <main+0x100>)
  401386:	47a8      	blx	r5
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  401388:	6326      	str	r6, [r4, #48]	; 0x30
		delay_ms(10000);
  40138a:	4638      	mov	r0, r7
  40138c:	47a8      	blx	r5
		write_wifi_command("test\r\n", 10);
  40138e:	e7ed      	b.n	40136c <main+0x70>
	}
	
	// Main loop
	while (1) {
		// Check for provisioning request
		if (provision_flag) {
  401390:	4c1c      	ldr	r4, [pc, #112]	; (401404 <main+0x108>)
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
  401392:	4d1b      	ldr	r5, [pc, #108]	; (401400 <main+0x104>)
  401394:	4e23      	ldr	r6, [pc, #140]	; (401424 <main+0x128>)
  401396:	e009      	b.n	4013ac <main+0xb0>
			write_wifi_command("provision\r\n", 5);
  401398:	2105      	movs	r1, #5
  40139a:	481c      	ldr	r0, [pc, #112]	; (40140c <main+0x110>)
  40139c:	4b1c      	ldr	r3, [pc, #112]	; (401410 <main+0x114>)
  40139e:	4798      	blx	r3
			provision_flag = 0;
  4013a0:	2300      	movs	r3, #0
  4013a2:	7023      	strb	r3, [r4, #0]
  4013a4:	e005      	b.n	4013b2 <main+0xb6>
			if (start_capture()) {
				write_image_to_web();
			}
		}
		
		delay_ms(100);
  4013a6:	4814      	ldr	r0, [pc, #80]	; (4013f8 <main+0xfc>)
  4013a8:	4b14      	ldr	r3, [pc, #80]	; (4013fc <main+0x100>)
  4013aa:	4798      	blx	r3
		if (provision_flag) {
  4013ac:	7823      	ldrb	r3, [r4, #0]
  4013ae:	2b00      	cmp	r3, #0
  4013b0:	d1f2      	bne.n	401398 <main+0x9c>
  4013b2:	6beb      	ldr	r3, [r5, #60]	; 0x3c
		if (ioport_get_pin_level(WIFI_GPIO_23) && ioport_get_pin_level(WIFI_GPIO_32)) {
  4013b4:	f013 0f01 	tst.w	r3, #1
  4013b8:	d0f5      	beq.n	4013a6 <main+0xaa>
  4013ba:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
  4013bc:	f013 0f01 	tst.w	r3, #1
  4013c0:	d0f1      	beq.n	4013a6 <main+0xaa>
			if (start_capture()) {
  4013c2:	4b19      	ldr	r3, [pc, #100]	; (401428 <main+0x12c>)
  4013c4:	4798      	blx	r3
  4013c6:	2800      	cmp	r0, #0
  4013c8:	d0ed      	beq.n	4013a6 <main+0xaa>
				write_image_to_web();
  4013ca:	4b18      	ldr	r3, [pc, #96]	; (40142c <main+0x130>)
  4013cc:	4798      	blx	r3
  4013ce:	e7ea      	b.n	4013a6 <main+0xaa>
  4013d0:	00400139 	.word	0x00400139
  4013d4:	00401091 	.word	0x00401091
  4013d8:	00400d9d 	.word	0x00400d9d
  4013dc:	00400e85 	.word	0x00400e85
  4013e0:	00400fb9 	.word	0x00400fb9
  4013e4:	00400f21 	.word	0x00400f21
  4013e8:	00400f6d 	.word	0x00400f6d
  4013ec:	00400b61 	.word	0x00400b61
  4013f0:	00400bad 	.word	0x00400bad
  4013f4:	408e0e00 	.word	0x408e0e00
  4013f8:	000d1437 	.word	0x000d1437
  4013fc:	20000001 	.word	0x20000001
  401400:	400e1e00 	.word	0x400e1e00
  401404:	20000a5c 	.word	0x20000a5c
  401408:	0082ca25 	.word	0x0082ca25
  40140c:	00406f80 	.word	0x00406f80
  401410:	0040101d 	.word	0x0040101d
  401414:	051be56e 	.word	0x051be56e
  401418:	00406f64 	.word	0x00406f64
  40141c:	20000ab8 	.word	0x20000ab8
  401420:	0040181d 	.word	0x0040181d
  401424:	400e2e00 	.word	0x400e2e00
  401428:	00400be5 	.word	0x00400be5
  40142c:	00401055 	.word	0x00401055
  401430:	00406f8c 	.word	0x00406f8c

00401434 <__libc_init_array>:
  401434:	b570      	push	{r4, r5, r6, lr}
  401436:	4e0f      	ldr	r6, [pc, #60]	; (401474 <__libc_init_array+0x40>)
  401438:	4d0f      	ldr	r5, [pc, #60]	; (401478 <__libc_init_array+0x44>)
  40143a:	1b76      	subs	r6, r6, r5
  40143c:	10b6      	asrs	r6, r6, #2
  40143e:	bf18      	it	ne
  401440:	2400      	movne	r4, #0
  401442:	d005      	beq.n	401450 <__libc_init_array+0x1c>
  401444:	3401      	adds	r4, #1
  401446:	f855 3b04 	ldr.w	r3, [r5], #4
  40144a:	4798      	blx	r3
  40144c:	42a6      	cmp	r6, r4
  40144e:	d1f9      	bne.n	401444 <__libc_init_array+0x10>
  401450:	4e0a      	ldr	r6, [pc, #40]	; (40147c <__libc_init_array+0x48>)
  401452:	4d0b      	ldr	r5, [pc, #44]	; (401480 <__libc_init_array+0x4c>)
  401454:	1b76      	subs	r6, r6, r5
  401456:	f005 fee3 	bl	407220 <_init>
  40145a:	10b6      	asrs	r6, r6, #2
  40145c:	bf18      	it	ne
  40145e:	2400      	movne	r4, #0
  401460:	d006      	beq.n	401470 <__libc_init_array+0x3c>
  401462:	3401      	adds	r4, #1
  401464:	f855 3b04 	ldr.w	r3, [r5], #4
  401468:	4798      	blx	r3
  40146a:	42a6      	cmp	r6, r4
  40146c:	d1f9      	bne.n	401462 <__libc_init_array+0x2e>
  40146e:	bd70      	pop	{r4, r5, r6, pc}
  401470:	bd70      	pop	{r4, r5, r6, pc}
  401472:	bf00      	nop
  401474:	0040722c 	.word	0x0040722c
  401478:	0040722c 	.word	0x0040722c
  40147c:	00407234 	.word	0x00407234
  401480:	0040722c 	.word	0x0040722c

00401484 <memset>:
  401484:	b470      	push	{r4, r5, r6}
  401486:	0786      	lsls	r6, r0, #30
  401488:	d046      	beq.n	401518 <memset+0x94>
  40148a:	1e54      	subs	r4, r2, #1
  40148c:	2a00      	cmp	r2, #0
  40148e:	d041      	beq.n	401514 <memset+0x90>
  401490:	b2ca      	uxtb	r2, r1
  401492:	4603      	mov	r3, r0
  401494:	e002      	b.n	40149c <memset+0x18>
  401496:	f114 34ff 	adds.w	r4, r4, #4294967295
  40149a:	d33b      	bcc.n	401514 <memset+0x90>
  40149c:	f803 2b01 	strb.w	r2, [r3], #1
  4014a0:	079d      	lsls	r5, r3, #30
  4014a2:	d1f8      	bne.n	401496 <memset+0x12>
  4014a4:	2c03      	cmp	r4, #3
  4014a6:	d92e      	bls.n	401506 <memset+0x82>
  4014a8:	b2cd      	uxtb	r5, r1
  4014aa:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  4014ae:	2c0f      	cmp	r4, #15
  4014b0:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  4014b4:	d919      	bls.n	4014ea <memset+0x66>
  4014b6:	f103 0210 	add.w	r2, r3, #16
  4014ba:	4626      	mov	r6, r4
  4014bc:	3e10      	subs	r6, #16
  4014be:	2e0f      	cmp	r6, #15
  4014c0:	f842 5c10 	str.w	r5, [r2, #-16]
  4014c4:	f842 5c0c 	str.w	r5, [r2, #-12]
  4014c8:	f842 5c08 	str.w	r5, [r2, #-8]
  4014cc:	f842 5c04 	str.w	r5, [r2, #-4]
  4014d0:	f102 0210 	add.w	r2, r2, #16
  4014d4:	d8f2      	bhi.n	4014bc <memset+0x38>
  4014d6:	f1a4 0210 	sub.w	r2, r4, #16
  4014da:	f022 020f 	bic.w	r2, r2, #15
  4014de:	f004 040f 	and.w	r4, r4, #15
  4014e2:	3210      	adds	r2, #16
  4014e4:	2c03      	cmp	r4, #3
  4014e6:	4413      	add	r3, r2
  4014e8:	d90d      	bls.n	401506 <memset+0x82>
  4014ea:	461e      	mov	r6, r3
  4014ec:	4622      	mov	r2, r4
  4014ee:	3a04      	subs	r2, #4
  4014f0:	2a03      	cmp	r2, #3
  4014f2:	f846 5b04 	str.w	r5, [r6], #4
  4014f6:	d8fa      	bhi.n	4014ee <memset+0x6a>
  4014f8:	1f22      	subs	r2, r4, #4
  4014fa:	f022 0203 	bic.w	r2, r2, #3
  4014fe:	3204      	adds	r2, #4
  401500:	4413      	add	r3, r2
  401502:	f004 0403 	and.w	r4, r4, #3
  401506:	b12c      	cbz	r4, 401514 <memset+0x90>
  401508:	b2c9      	uxtb	r1, r1
  40150a:	441c      	add	r4, r3
  40150c:	f803 1b01 	strb.w	r1, [r3], #1
  401510:	429c      	cmp	r4, r3
  401512:	d1fb      	bne.n	40150c <memset+0x88>
  401514:	bc70      	pop	{r4, r5, r6}
  401516:	4770      	bx	lr
  401518:	4614      	mov	r4, r2
  40151a:	4603      	mov	r3, r0
  40151c:	e7c2      	b.n	4014a4 <memset+0x20>
  40151e:	bf00      	nop

00401520 <sprintf>:
  401520:	b40e      	push	{r1, r2, r3}
  401522:	b5f0      	push	{r4, r5, r6, r7, lr}
  401524:	b09c      	sub	sp, #112	; 0x70
  401526:	ab21      	add	r3, sp, #132	; 0x84
  401528:	490f      	ldr	r1, [pc, #60]	; (401568 <sprintf+0x48>)
  40152a:	f853 2b04 	ldr.w	r2, [r3], #4
  40152e:	9301      	str	r3, [sp, #4]
  401530:	4605      	mov	r5, r0
  401532:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  401536:	6808      	ldr	r0, [r1, #0]
  401538:	9502      	str	r5, [sp, #8]
  40153a:	f44f 7702 	mov.w	r7, #520	; 0x208
  40153e:	f64f 76ff 	movw	r6, #65535	; 0xffff
  401542:	a902      	add	r1, sp, #8
  401544:	9506      	str	r5, [sp, #24]
  401546:	f8ad 7014 	strh.w	r7, [sp, #20]
  40154a:	9404      	str	r4, [sp, #16]
  40154c:	9407      	str	r4, [sp, #28]
  40154e:	f8ad 6016 	strh.w	r6, [sp, #22]
  401552:	f000 fa6f 	bl	401a34 <_svfprintf_r>
  401556:	9b02      	ldr	r3, [sp, #8]
  401558:	2200      	movs	r2, #0
  40155a:	701a      	strb	r2, [r3, #0]
  40155c:	b01c      	add	sp, #112	; 0x70
  40155e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  401562:	b003      	add	sp, #12
  401564:	4770      	bx	lr
  401566:	bf00      	nop
  401568:	20000010 	.word	0x20000010

0040156c <critical_factorization>:
  40156c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401570:	f04f 0e01 	mov.w	lr, #1
  401574:	4674      	mov	r4, lr
  401576:	2500      	movs	r5, #0
  401578:	f04f 36ff 	mov.w	r6, #4294967295
  40157c:	192b      	adds	r3, r5, r4
  40157e:	428b      	cmp	r3, r1
  401580:	eb00 0706 	add.w	r7, r0, r6
  401584:	d20d      	bcs.n	4015a2 <critical_factorization+0x36>
  401586:	5d3f      	ldrb	r7, [r7, r4]
  401588:	f810 c003 	ldrb.w	ip, [r0, r3]
  40158c:	45bc      	cmp	ip, r7
  40158e:	d22d      	bcs.n	4015ec <critical_factorization+0x80>
  401590:	461d      	mov	r5, r3
  401592:	2401      	movs	r4, #1
  401594:	eba3 0e06 	sub.w	lr, r3, r6
  401598:	192b      	adds	r3, r5, r4
  40159a:	428b      	cmp	r3, r1
  40159c:	eb00 0706 	add.w	r7, r0, r6
  4015a0:	d3f1      	bcc.n	401586 <critical_factorization+0x1a>
  4015a2:	f04f 0801 	mov.w	r8, #1
  4015a6:	f8c2 e000 	str.w	lr, [r2]
  4015aa:	4644      	mov	r4, r8
  4015ac:	2500      	movs	r5, #0
  4015ae:	f04f 37ff 	mov.w	r7, #4294967295
  4015b2:	192b      	adds	r3, r5, r4
  4015b4:	4299      	cmp	r1, r3
  4015b6:	eb00 0e07 	add.w	lr, r0, r7
  4015ba:	d90e      	bls.n	4015da <critical_factorization+0x6e>
  4015bc:	f81e e004 	ldrb.w	lr, [lr, r4]
  4015c0:	f810 c003 	ldrb.w	ip, [r0, r3]
  4015c4:	45f4      	cmp	ip, lr
  4015c6:	d918      	bls.n	4015fa <critical_factorization+0x8e>
  4015c8:	461d      	mov	r5, r3
  4015ca:	2401      	movs	r4, #1
  4015cc:	eba3 0807 	sub.w	r8, r3, r7
  4015d0:	192b      	adds	r3, r5, r4
  4015d2:	4299      	cmp	r1, r3
  4015d4:	eb00 0e07 	add.w	lr, r0, r7
  4015d8:	d8f0      	bhi.n	4015bc <critical_factorization+0x50>
  4015da:	3701      	adds	r7, #1
  4015dc:	1c70      	adds	r0, r6, #1
  4015de:	4287      	cmp	r7, r0
  4015e0:	bf24      	itt	cs
  4015e2:	f8c2 8000 	strcs.w	r8, [r2]
  4015e6:	4638      	movcs	r0, r7
  4015e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4015ec:	d00c      	beq.n	401608 <critical_factorization+0x9c>
  4015ee:	f04f 0e01 	mov.w	lr, #1
  4015f2:	462e      	mov	r6, r5
  4015f4:	4674      	mov	r4, lr
  4015f6:	4475      	add	r5, lr
  4015f8:	e7c0      	b.n	40157c <critical_factorization+0x10>
  4015fa:	d00b      	beq.n	401614 <critical_factorization+0xa8>
  4015fc:	f04f 0801 	mov.w	r8, #1
  401600:	462f      	mov	r7, r5
  401602:	4644      	mov	r4, r8
  401604:	4445      	add	r5, r8
  401606:	e7d4      	b.n	4015b2 <critical_factorization+0x46>
  401608:	4574      	cmp	r4, lr
  40160a:	bf12      	itee	ne
  40160c:	3401      	addne	r4, #1
  40160e:	461d      	moveq	r5, r3
  401610:	2401      	moveq	r4, #1
  401612:	e7b3      	b.n	40157c <critical_factorization+0x10>
  401614:	4544      	cmp	r4, r8
  401616:	bf12      	itee	ne
  401618:	3401      	addne	r4, #1
  40161a:	461d      	moveq	r5, r3
  40161c:	2401      	moveq	r4, #1
  40161e:	e7c8      	b.n	4015b2 <critical_factorization+0x46>

00401620 <two_way_long_needle>:
  401620:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401624:	f2ad 4d14 	subw	sp, sp, #1044	; 0x414
  401628:	4616      	mov	r6, r2
  40162a:	4605      	mov	r5, r0
  40162c:	468b      	mov	fp, r1
  40162e:	4610      	mov	r0, r2
  401630:	4619      	mov	r1, r3
  401632:	aa03      	add	r2, sp, #12
  401634:	461c      	mov	r4, r3
  401636:	f7ff ff99 	bl	40156c <critical_factorization>
  40163a:	ab03      	add	r3, sp, #12
  40163c:	4681      	mov	r9, r0
  40163e:	f20d 420c 	addw	r2, sp, #1036	; 0x40c
  401642:	f843 4f04 	str.w	r4, [r3, #4]!
  401646:	4293      	cmp	r3, r2
  401648:	d1fb      	bne.n	401642 <two_way_long_needle+0x22>
  40164a:	b14c      	cbz	r4, 401660 <two_way_long_needle+0x40>
  40164c:	1e63      	subs	r3, r4, #1
  40164e:	1e72      	subs	r2, r6, #1
  401650:	a804      	add	r0, sp, #16
  401652:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  401656:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
  40165a:	f113 33ff 	adds.w	r3, r3, #4294967295
  40165e:	d2f8      	bcs.n	401652 <two_way_long_needle+0x32>
  401660:	9903      	ldr	r1, [sp, #12]
  401662:	464a      	mov	r2, r9
  401664:	4431      	add	r1, r6
  401666:	4630      	mov	r0, r6
  401668:	f002 ff12 	bl	404490 <memcmp>
  40166c:	2800      	cmp	r0, #0
  40166e:	d16f      	bne.n	401750 <two_way_long_needle+0x130>
  401670:	f109 33ff 	add.w	r3, r9, #4294967295
  401674:	9300      	str	r3, [sp, #0]
  401676:	18f3      	adds	r3, r6, r3
  401678:	4682      	mov	sl, r0
  40167a:	9301      	str	r3, [sp, #4]
  40167c:	4623      	mov	r3, r4
  40167e:	4680      	mov	r8, r0
  401680:	4654      	mov	r4, sl
  401682:	4658      	mov	r0, fp
  401684:	469a      	mov	sl, r3
  401686:	eb08 070a 	add.w	r7, r8, sl
  40168a:	1a3a      	subs	r2, r7, r0
  40168c:	2100      	movs	r1, #0
  40168e:	4428      	add	r0, r5
  401690:	f002 feae 	bl	4043f0 <memchr>
  401694:	2800      	cmp	r0, #0
  401696:	d156      	bne.n	401746 <two_way_long_needle+0x126>
  401698:	2f00      	cmp	r7, #0
  40169a:	d054      	beq.n	401746 <two_way_long_needle+0x126>
  40169c:	19eb      	adds	r3, r5, r7
  40169e:	aa04      	add	r2, sp, #16
  4016a0:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  4016a4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  4016a8:	b14b      	cbz	r3, 4016be <two_way_long_needle+0x9e>
  4016aa:	b124      	cbz	r4, 4016b6 <two_way_long_needle+0x96>
  4016ac:	9a03      	ldr	r2, [sp, #12]
  4016ae:	4293      	cmp	r3, r2
  4016b0:	d201      	bcs.n	4016b6 <two_way_long_needle+0x96>
  4016b2:	ebaa 0302 	sub.w	r3, sl, r2
  4016b6:	4498      	add	r8, r3
  4016b8:	2400      	movs	r4, #0
  4016ba:	4638      	mov	r0, r7
  4016bc:	e7e3      	b.n	401686 <two_way_long_needle+0x66>
  4016be:	454c      	cmp	r4, r9
  4016c0:	4623      	mov	r3, r4
  4016c2:	f10a 3eff 	add.w	lr, sl, #4294967295
  4016c6:	bf38      	it	cc
  4016c8:	464b      	movcc	r3, r9
  4016ca:	4573      	cmp	r3, lr
  4016cc:	d213      	bcs.n	4016f6 <two_way_long_needle+0xd6>
  4016ce:	eb08 0203 	add.w	r2, r8, r3
  4016d2:	f816 c003 	ldrb.w	ip, [r6, r3]
  4016d6:	5ca8      	ldrb	r0, [r5, r2]
  4016d8:	4584      	cmp	ip, r0
  4016da:	442a      	add	r2, r5
  4016dc:	eb06 0103 	add.w	r1, r6, r3
  4016e0:	d006      	beq.n	4016f0 <two_way_long_needle+0xd0>
  4016e2:	e02c      	b.n	40173e <two_way_long_needle+0x11e>
  4016e4:	f811 cf01 	ldrb.w	ip, [r1, #1]!
  4016e8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  4016ec:	4584      	cmp	ip, r0
  4016ee:	d126      	bne.n	40173e <two_way_long_needle+0x11e>
  4016f0:	3301      	adds	r3, #1
  4016f2:	4573      	cmp	r3, lr
  4016f4:	d3f6      	bcc.n	4016e4 <two_way_long_needle+0xc4>
  4016f6:	454c      	cmp	r4, r9
  4016f8:	9900      	ldr	r1, [sp, #0]
  4016fa:	f080 8089 	bcs.w	401810 <two_way_long_needle+0x1f0>
  4016fe:	9b00      	ldr	r3, [sp, #0]
  401700:	eb08 0203 	add.w	r2, r8, r3
  401704:	9b01      	ldr	r3, [sp, #4]
  401706:	5ca8      	ldrb	r0, [r5, r2]
  401708:	781b      	ldrb	r3, [r3, #0]
  40170a:	4298      	cmp	r0, r3
  40170c:	442a      	add	r2, r5
  40170e:	d17f      	bne.n	401810 <two_way_long_needle+0x1f0>
  401710:	9801      	ldr	r0, [sp, #4]
  401712:	f104 3bff 	add.w	fp, r4, #4294967295
  401716:	e006      	b.n	401726 <two_way_long_needle+0x106>
  401718:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  40171c:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  401720:	45f4      	cmp	ip, lr
  401722:	d103      	bne.n	40172c <two_way_long_needle+0x10c>
  401724:	4619      	mov	r1, r3
  401726:	1e4b      	subs	r3, r1, #1
  401728:	459b      	cmp	fp, r3
  40172a:	d1f5      	bne.n	401718 <two_way_long_needle+0xf8>
  40172c:	3401      	adds	r4, #1
  40172e:	428c      	cmp	r4, r1
  401730:	d870      	bhi.n	401814 <two_way_long_needle+0x1f4>
  401732:	9c03      	ldr	r4, [sp, #12]
  401734:	4638      	mov	r0, r7
  401736:	44a0      	add	r8, r4
  401738:	ebaa 0404 	sub.w	r4, sl, r4
  40173c:	e7a3      	b.n	401686 <two_way_long_needle+0x66>
  40173e:	f1c9 0201 	rsb	r2, r9, #1
  401742:	4490      	add	r8, r2
  401744:	e7b7      	b.n	4016b6 <two_way_long_needle+0x96>
  401746:	2000      	movs	r0, #0
  401748:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  40174c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401750:	eba4 0309 	sub.w	r3, r4, r9
  401754:	454b      	cmp	r3, r9
  401756:	bf38      	it	cc
  401758:	464b      	movcc	r3, r9
  40175a:	3301      	adds	r3, #1
  40175c:	f109 38ff 	add.w	r8, r9, #4294967295
  401760:	9303      	str	r3, [sp, #12]
  401762:	eb06 0308 	add.w	r3, r6, r8
  401766:	4658      	mov	r0, fp
  401768:	f04f 0a00 	mov.w	sl, #0
  40176c:	46cb      	mov	fp, r9
  40176e:	4699      	mov	r9, r3
  401770:	eb0a 0704 	add.w	r7, sl, r4
  401774:	1a3a      	subs	r2, r7, r0
  401776:	2100      	movs	r1, #0
  401778:	4428      	add	r0, r5
  40177a:	f002 fe39 	bl	4043f0 <memchr>
  40177e:	2800      	cmp	r0, #0
  401780:	d1e1      	bne.n	401746 <two_way_long_needle+0x126>
  401782:	2f00      	cmp	r7, #0
  401784:	d0df      	beq.n	401746 <two_way_long_needle+0x126>
  401786:	19eb      	adds	r3, r5, r7
  401788:	aa04      	add	r2, sp, #16
  40178a:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  40178e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  401792:	bba3      	cbnz	r3, 4017fe <two_way_long_needle+0x1de>
  401794:	1e61      	subs	r1, r4, #1
  401796:	458b      	cmp	fp, r1
  401798:	d215      	bcs.n	4017c6 <two_way_long_needle+0x1a6>
  40179a:	eb0a 020b 	add.w	r2, sl, fp
  40179e:	f816 300b 	ldrb.w	r3, [r6, fp]
  4017a2:	f815 e002 	ldrb.w	lr, [r5, r2]
  4017a6:	459e      	cmp	lr, r3
  4017a8:	442a      	add	r2, r5
  4017aa:	eb06 000b 	add.w	r0, r6, fp
  4017ae:	465b      	mov	r3, fp
  4017b0:	d006      	beq.n	4017c0 <two_way_long_needle+0x1a0>
  4017b2:	e027      	b.n	401804 <two_way_long_needle+0x1e4>
  4017b4:	f810 cf01 	ldrb.w	ip, [r0, #1]!
  4017b8:	f812 ef01 	ldrb.w	lr, [r2, #1]!
  4017bc:	45f4      	cmp	ip, lr
  4017be:	d121      	bne.n	401804 <two_way_long_needle+0x1e4>
  4017c0:	3301      	adds	r3, #1
  4017c2:	428b      	cmp	r3, r1
  4017c4:	d3f6      	bcc.n	4017b4 <two_way_long_needle+0x194>
  4017c6:	f1b8 3fff 	cmp.w	r8, #4294967295
  4017ca:	d011      	beq.n	4017f0 <two_way_long_needle+0x1d0>
  4017cc:	eb0a 0208 	add.w	r2, sl, r8
  4017d0:	f899 1000 	ldrb.w	r1, [r9]
  4017d4:	5cab      	ldrb	r3, [r5, r2]
  4017d6:	4299      	cmp	r1, r3
  4017d8:	442a      	add	r2, r5
  4017da:	d10f      	bne.n	4017fc <two_way_long_needle+0x1dc>
  4017dc:	464b      	mov	r3, r9
  4017de:	e005      	b.n	4017ec <two_way_long_needle+0x1cc>
  4017e0:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  4017e4:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  4017e8:	4288      	cmp	r0, r1
  4017ea:	d107      	bne.n	4017fc <two_way_long_needle+0x1dc>
  4017ec:	42b3      	cmp	r3, r6
  4017ee:	d1f7      	bne.n	4017e0 <two_way_long_needle+0x1c0>
  4017f0:	eb05 000a 	add.w	r0, r5, sl
  4017f4:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  4017f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4017fc:	9b03      	ldr	r3, [sp, #12]
  4017fe:	449a      	add	sl, r3
  401800:	4638      	mov	r0, r7
  401802:	e7b5      	b.n	401770 <two_way_long_needle+0x150>
  401804:	f1cb 0201 	rsb	r2, fp, #1
  401808:	4492      	add	sl, r2
  40180a:	449a      	add	sl, r3
  40180c:	4638      	mov	r0, r7
  40180e:	e7af      	b.n	401770 <two_way_long_needle+0x150>
  401810:	4649      	mov	r1, r9
  401812:	e78b      	b.n	40172c <two_way_long_needle+0x10c>
  401814:	eb05 0008 	add.w	r0, r5, r8
  401818:	e796      	b.n	401748 <two_way_long_needle+0x128>
  40181a:	bf00      	nop

0040181c <strstr>:
  40181c:	7802      	ldrb	r2, [r0, #0]
  40181e:	2a00      	cmp	r2, #0
  401820:	f000 8101 	beq.w	401a26 <strstr+0x20a>
  401824:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401828:	f891 8000 	ldrb.w	r8, [r1]
  40182c:	b085      	sub	sp, #20
  40182e:	4644      	mov	r4, r8
  401830:	f1b8 0f00 	cmp.w	r8, #0
  401834:	d016      	beq.n	401864 <strstr+0x48>
  401836:	4686      	mov	lr, r0
  401838:	f101 0c01 	add.w	ip, r1, #1
  40183c:	2701      	movs	r7, #1
  40183e:	e003      	b.n	401848 <strstr+0x2c>
  401840:	f813 4b01 	ldrb.w	r4, [r3], #1
  401844:	b16c      	cbz	r4, 401862 <strstr+0x46>
  401846:	469c      	mov	ip, r3
  401848:	42a2      	cmp	r2, r4
  40184a:	bf14      	ite	ne
  40184c:	2700      	movne	r7, #0
  40184e:	f007 0701 	andeq.w	r7, r7, #1
  401852:	f81e 2f01 	ldrb.w	r2, [lr, #1]!
  401856:	4663      	mov	r3, ip
  401858:	2a00      	cmp	r2, #0
  40185a:	d1f1      	bne.n	401840 <strstr+0x24>
  40185c:	f89c 3000 	ldrb.w	r3, [ip]
  401860:	b9fb      	cbnz	r3, 4018a2 <strstr+0x86>
  401862:	b117      	cbz	r7, 40186a <strstr+0x4e>
  401864:	b005      	add	sp, #20
  401866:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40186a:	460e      	mov	r6, r1
  40186c:	4605      	mov	r5, r0
  40186e:	4641      	mov	r1, r8
  401870:	3001      	adds	r0, #1
  401872:	ebac 0406 	sub.w	r4, ip, r6
  401876:	f003 f9ed 	bl	404c54 <strchr>
  40187a:	4607      	mov	r7, r0
  40187c:	b188      	cbz	r0, 4018a2 <strstr+0x86>
  40187e:	2c01      	cmp	r4, #1
  401880:	d0f0      	beq.n	401864 <strstr+0x48>
  401882:	1928      	adds	r0, r5, r4
  401884:	4287      	cmp	r7, r0
  401886:	bf94      	ite	ls
  401888:	1bc1      	subls	r1, r0, r7
  40188a:	2101      	movhi	r1, #1
  40188c:	2c1f      	cmp	r4, #31
  40188e:	468b      	mov	fp, r1
  401890:	d90b      	bls.n	4018aa <strstr+0x8e>
  401892:	4623      	mov	r3, r4
  401894:	4632      	mov	r2, r6
  401896:	4638      	mov	r0, r7
  401898:	f7ff fec2 	bl	401620 <two_way_long_needle>
  40189c:	b005      	add	sp, #20
  40189e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4018a2:	2000      	movs	r0, #0
  4018a4:	b005      	add	sp, #20
  4018a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4018aa:	aa03      	add	r2, sp, #12
  4018ac:	4621      	mov	r1, r4
  4018ae:	4630      	mov	r0, r6
  4018b0:	f7ff fe5c 	bl	40156c <critical_factorization>
  4018b4:	9903      	ldr	r1, [sp, #12]
  4018b6:	4680      	mov	r8, r0
  4018b8:	4602      	mov	r2, r0
  4018ba:	4431      	add	r1, r6
  4018bc:	4630      	mov	r0, r6
  4018be:	f002 fde7 	bl	404490 <memcmp>
  4018c2:	2800      	cmp	r0, #0
  4018c4:	d157      	bne.n	401976 <strstr+0x15a>
  4018c6:	f108 33ff 	add.w	r3, r8, #4294967295
  4018ca:	9300      	str	r3, [sp, #0]
  4018cc:	18f3      	adds	r3, r6, r3
  4018ce:	4681      	mov	r9, r0
  4018d0:	4605      	mov	r5, r0
  4018d2:	9301      	str	r3, [sp, #4]
  4018d4:	4658      	mov	r0, fp
  4018d6:	46b2      	mov	sl, r6
  4018d8:	1966      	adds	r6, r4, r5
  4018da:	1a32      	subs	r2, r6, r0
  4018dc:	2100      	movs	r1, #0
  4018de:	4438      	add	r0, r7
  4018e0:	f002 fd86 	bl	4043f0 <memchr>
  4018e4:	2800      	cmp	r0, #0
  4018e6:	d1dc      	bne.n	4018a2 <strstr+0x86>
  4018e8:	2e00      	cmp	r6, #0
  4018ea:	d0da      	beq.n	4018a2 <strstr+0x86>
  4018ec:	45c8      	cmp	r8, r9
  4018ee:	4643      	mov	r3, r8
  4018f0:	bf38      	it	cc
  4018f2:	464b      	movcc	r3, r9
  4018f4:	429c      	cmp	r4, r3
  4018f6:	d912      	bls.n	40191e <strstr+0x102>
  4018f8:	195a      	adds	r2, r3, r5
  4018fa:	f81a 1003 	ldrb.w	r1, [sl, r3]
  4018fe:	5cb8      	ldrb	r0, [r7, r2]
  401900:	4281      	cmp	r1, r0
  401902:	443a      	add	r2, r7
  401904:	eb0a 0e03 	add.w	lr, sl, r3
  401908:	d006      	beq.n	401918 <strstr+0xfc>
  40190a:	e02c      	b.n	401966 <strstr+0x14a>
  40190c:	f81e 0f01 	ldrb.w	r0, [lr, #1]!
  401910:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  401914:	4288      	cmp	r0, r1
  401916:	d126      	bne.n	401966 <strstr+0x14a>
  401918:	3301      	adds	r3, #1
  40191a:	429c      	cmp	r4, r3
  40191c:	d1f6      	bne.n	40190c <strstr+0xf0>
  40191e:	45c8      	cmp	r8, r9
  401920:	9900      	ldr	r1, [sp, #0]
  401922:	f240 8083 	bls.w	401a2c <strstr+0x210>
  401926:	9b00      	ldr	r3, [sp, #0]
  401928:	18ea      	adds	r2, r5, r3
  40192a:	9b01      	ldr	r3, [sp, #4]
  40192c:	5cb8      	ldrb	r0, [r7, r2]
  40192e:	781b      	ldrb	r3, [r3, #0]
  401930:	4298      	cmp	r0, r3
  401932:	443a      	add	r2, r7
  401934:	d17a      	bne.n	401a2c <strstr+0x210>
  401936:	9801      	ldr	r0, [sp, #4]
  401938:	f109 3bff 	add.w	fp, r9, #4294967295
  40193c:	e006      	b.n	40194c <strstr+0x130>
  40193e:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  401942:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  401946:	45f4      	cmp	ip, lr
  401948:	d103      	bne.n	401952 <strstr+0x136>
  40194a:	4619      	mov	r1, r3
  40194c:	1e4b      	subs	r3, r1, #1
  40194e:	455b      	cmp	r3, fp
  401950:	d1f5      	bne.n	40193e <strstr+0x122>
  401952:	f109 0901 	add.w	r9, r9, #1
  401956:	4589      	cmp	r9, r1
  401958:	d857      	bhi.n	401a0a <strstr+0x1ee>
  40195a:	9b03      	ldr	r3, [sp, #12]
  40195c:	4630      	mov	r0, r6
  40195e:	441d      	add	r5, r3
  401960:	eba4 0903 	sub.w	r9, r4, r3
  401964:	e7b8      	b.n	4018d8 <strstr+0xbc>
  401966:	f1c8 0201 	rsb	r2, r8, #1
  40196a:	4415      	add	r5, r2
  40196c:	441d      	add	r5, r3
  40196e:	f04f 0900 	mov.w	r9, #0
  401972:	4630      	mov	r0, r6
  401974:	e7b0      	b.n	4018d8 <strstr+0xbc>
  401976:	eba4 0308 	sub.w	r3, r4, r8
  40197a:	4543      	cmp	r3, r8
  40197c:	bf38      	it	cc
  40197e:	4643      	movcc	r3, r8
  401980:	3301      	adds	r3, #1
  401982:	f108 39ff 	add.w	r9, r8, #4294967295
  401986:	9303      	str	r3, [sp, #12]
  401988:	eb06 0309 	add.w	r3, r6, r9
  40198c:	4658      	mov	r0, fp
  40198e:	2500      	movs	r5, #0
  401990:	46bb      	mov	fp, r7
  401992:	469a      	mov	sl, r3
  401994:	1967      	adds	r7, r4, r5
  401996:	1a3a      	subs	r2, r7, r0
  401998:	2100      	movs	r1, #0
  40199a:	4458      	add	r0, fp
  40199c:	f002 fd28 	bl	4043f0 <memchr>
  4019a0:	2800      	cmp	r0, #0
  4019a2:	f47f af7e 	bne.w	4018a2 <strstr+0x86>
  4019a6:	2f00      	cmp	r7, #0
  4019a8:	f43f af7b 	beq.w	4018a2 <strstr+0x86>
  4019ac:	4544      	cmp	r4, r8
  4019ae:	d915      	bls.n	4019dc <strstr+0x1c0>
  4019b0:	eb08 0205 	add.w	r2, r8, r5
  4019b4:	f816 3008 	ldrb.w	r3, [r6, r8]
  4019b8:	f81b 0002 	ldrb.w	r0, [fp, r2]
  4019bc:	4298      	cmp	r0, r3
  4019be:	445a      	add	r2, fp
  4019c0:	eb06 0108 	add.w	r1, r6, r8
  4019c4:	4643      	mov	r3, r8
  4019c6:	d006      	beq.n	4019d6 <strstr+0x1ba>
  4019c8:	e023      	b.n	401a12 <strstr+0x1f6>
  4019ca:	f811 ef01 	ldrb.w	lr, [r1, #1]!
  4019ce:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  4019d2:	4586      	cmp	lr, r0
  4019d4:	d11d      	bne.n	401a12 <strstr+0x1f6>
  4019d6:	3301      	adds	r3, #1
  4019d8:	429c      	cmp	r4, r3
  4019da:	d1f6      	bne.n	4019ca <strstr+0x1ae>
  4019dc:	f1b9 3fff 	cmp.w	r9, #4294967295
  4019e0:	d012      	beq.n	401a08 <strstr+0x1ec>
  4019e2:	eb05 0209 	add.w	r2, r5, r9
  4019e6:	f89a 3000 	ldrb.w	r3, [sl]
  4019ea:	f81b 1002 	ldrb.w	r1, [fp, r2]
  4019ee:	4299      	cmp	r1, r3
  4019f0:	445a      	add	r2, fp
  4019f2:	d114      	bne.n	401a1e <strstr+0x202>
  4019f4:	4653      	mov	r3, sl
  4019f6:	e005      	b.n	401a04 <strstr+0x1e8>
  4019f8:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  4019fc:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  401a00:	4288      	cmp	r0, r1
  401a02:	d10c      	bne.n	401a1e <strstr+0x202>
  401a04:	42b3      	cmp	r3, r6
  401a06:	d1f7      	bne.n	4019f8 <strstr+0x1dc>
  401a08:	465f      	mov	r7, fp
  401a0a:	1978      	adds	r0, r7, r5
  401a0c:	b005      	add	sp, #20
  401a0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401a12:	f1c8 0201 	rsb	r2, r8, #1
  401a16:	4415      	add	r5, r2
  401a18:	441d      	add	r5, r3
  401a1a:	4638      	mov	r0, r7
  401a1c:	e7ba      	b.n	401994 <strstr+0x178>
  401a1e:	9b03      	ldr	r3, [sp, #12]
  401a20:	4638      	mov	r0, r7
  401a22:	441d      	add	r5, r3
  401a24:	e7b6      	b.n	401994 <strstr+0x178>
  401a26:	780b      	ldrb	r3, [r1, #0]
  401a28:	b913      	cbnz	r3, 401a30 <strstr+0x214>
  401a2a:	4770      	bx	lr
  401a2c:	4641      	mov	r1, r8
  401a2e:	e790      	b.n	401952 <strstr+0x136>
  401a30:	2000      	movs	r0, #0
  401a32:	4770      	bx	lr

00401a34 <_svfprintf_r>:
  401a34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401a38:	b0c3      	sub	sp, #268	; 0x10c
  401a3a:	460c      	mov	r4, r1
  401a3c:	910b      	str	r1, [sp, #44]	; 0x2c
  401a3e:	4692      	mov	sl, r2
  401a40:	930f      	str	r3, [sp, #60]	; 0x3c
  401a42:	900c      	str	r0, [sp, #48]	; 0x30
  401a44:	f002 fa0c 	bl	403e60 <_localeconv_r>
  401a48:	6803      	ldr	r3, [r0, #0]
  401a4a:	931a      	str	r3, [sp, #104]	; 0x68
  401a4c:	4618      	mov	r0, r3
  401a4e:	f003 f977 	bl	404d40 <strlen>
  401a52:	89a3      	ldrh	r3, [r4, #12]
  401a54:	9019      	str	r0, [sp, #100]	; 0x64
  401a56:	0619      	lsls	r1, r3, #24
  401a58:	d503      	bpl.n	401a62 <_svfprintf_r+0x2e>
  401a5a:	6923      	ldr	r3, [r4, #16]
  401a5c:	2b00      	cmp	r3, #0
  401a5e:	f001 8003 	beq.w	402a68 <_svfprintf_r+0x1034>
  401a62:	2300      	movs	r3, #0
  401a64:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  401a68:	9313      	str	r3, [sp, #76]	; 0x4c
  401a6a:	9315      	str	r3, [sp, #84]	; 0x54
  401a6c:	9314      	str	r3, [sp, #80]	; 0x50
  401a6e:	9327      	str	r3, [sp, #156]	; 0x9c
  401a70:	9326      	str	r3, [sp, #152]	; 0x98
  401a72:	9318      	str	r3, [sp, #96]	; 0x60
  401a74:	931b      	str	r3, [sp, #108]	; 0x6c
  401a76:	9309      	str	r3, [sp, #36]	; 0x24
  401a78:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  401a7c:	46c8      	mov	r8, r9
  401a7e:	9316      	str	r3, [sp, #88]	; 0x58
  401a80:	9317      	str	r3, [sp, #92]	; 0x5c
  401a82:	f89a 3000 	ldrb.w	r3, [sl]
  401a86:	4654      	mov	r4, sl
  401a88:	b1e3      	cbz	r3, 401ac4 <_svfprintf_r+0x90>
  401a8a:	2b25      	cmp	r3, #37	; 0x25
  401a8c:	d102      	bne.n	401a94 <_svfprintf_r+0x60>
  401a8e:	e019      	b.n	401ac4 <_svfprintf_r+0x90>
  401a90:	2b25      	cmp	r3, #37	; 0x25
  401a92:	d003      	beq.n	401a9c <_svfprintf_r+0x68>
  401a94:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  401a98:	2b00      	cmp	r3, #0
  401a9a:	d1f9      	bne.n	401a90 <_svfprintf_r+0x5c>
  401a9c:	eba4 050a 	sub.w	r5, r4, sl
  401aa0:	b185      	cbz	r5, 401ac4 <_svfprintf_r+0x90>
  401aa2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401aa4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  401aa6:	f8c8 a000 	str.w	sl, [r8]
  401aaa:	3301      	adds	r3, #1
  401aac:	442a      	add	r2, r5
  401aae:	2b07      	cmp	r3, #7
  401ab0:	f8c8 5004 	str.w	r5, [r8, #4]
  401ab4:	9227      	str	r2, [sp, #156]	; 0x9c
  401ab6:	9326      	str	r3, [sp, #152]	; 0x98
  401ab8:	dc7f      	bgt.n	401bba <_svfprintf_r+0x186>
  401aba:	f108 0808 	add.w	r8, r8, #8
  401abe:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401ac0:	442b      	add	r3, r5
  401ac2:	9309      	str	r3, [sp, #36]	; 0x24
  401ac4:	7823      	ldrb	r3, [r4, #0]
  401ac6:	2b00      	cmp	r3, #0
  401ac8:	d07f      	beq.n	401bca <_svfprintf_r+0x196>
  401aca:	2300      	movs	r3, #0
  401acc:	461a      	mov	r2, r3
  401ace:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  401ad2:	4619      	mov	r1, r3
  401ad4:	930d      	str	r3, [sp, #52]	; 0x34
  401ad6:	469b      	mov	fp, r3
  401ad8:	f04f 30ff 	mov.w	r0, #4294967295
  401adc:	7863      	ldrb	r3, [r4, #1]
  401ade:	900a      	str	r0, [sp, #40]	; 0x28
  401ae0:	f104 0a01 	add.w	sl, r4, #1
  401ae4:	f10a 0a01 	add.w	sl, sl, #1
  401ae8:	f1a3 0020 	sub.w	r0, r3, #32
  401aec:	2858      	cmp	r0, #88	; 0x58
  401aee:	f200 83c1 	bhi.w	402274 <_svfprintf_r+0x840>
  401af2:	e8df f010 	tbh	[pc, r0, lsl #1]
  401af6:	0238      	.short	0x0238
  401af8:	03bf03bf 	.word	0x03bf03bf
  401afc:	03bf0240 	.word	0x03bf0240
  401b00:	03bf03bf 	.word	0x03bf03bf
  401b04:	03bf03bf 	.word	0x03bf03bf
  401b08:	024503bf 	.word	0x024503bf
  401b0c:	03bf0203 	.word	0x03bf0203
  401b10:	026b005d 	.word	0x026b005d
  401b14:	028603bf 	.word	0x028603bf
  401b18:	039d039d 	.word	0x039d039d
  401b1c:	039d039d 	.word	0x039d039d
  401b20:	039d039d 	.word	0x039d039d
  401b24:	039d039d 	.word	0x039d039d
  401b28:	03bf039d 	.word	0x03bf039d
  401b2c:	03bf03bf 	.word	0x03bf03bf
  401b30:	03bf03bf 	.word	0x03bf03bf
  401b34:	03bf03bf 	.word	0x03bf03bf
  401b38:	03bf03bf 	.word	0x03bf03bf
  401b3c:	033703bf 	.word	0x033703bf
  401b40:	03bf0357 	.word	0x03bf0357
  401b44:	03bf0357 	.word	0x03bf0357
  401b48:	03bf03bf 	.word	0x03bf03bf
  401b4c:	039803bf 	.word	0x039803bf
  401b50:	03bf03bf 	.word	0x03bf03bf
  401b54:	03bf03ad 	.word	0x03bf03ad
  401b58:	03bf03bf 	.word	0x03bf03bf
  401b5c:	03bf03bf 	.word	0x03bf03bf
  401b60:	03bf0259 	.word	0x03bf0259
  401b64:	031e03bf 	.word	0x031e03bf
  401b68:	03bf03bf 	.word	0x03bf03bf
  401b6c:	03bf03bf 	.word	0x03bf03bf
  401b70:	03bf03bf 	.word	0x03bf03bf
  401b74:	03bf03bf 	.word	0x03bf03bf
  401b78:	03bf03bf 	.word	0x03bf03bf
  401b7c:	02db02c6 	.word	0x02db02c6
  401b80:	03570357 	.word	0x03570357
  401b84:	028b0357 	.word	0x028b0357
  401b88:	03bf02db 	.word	0x03bf02db
  401b8c:	029003bf 	.word	0x029003bf
  401b90:	029d03bf 	.word	0x029d03bf
  401b94:	02b401cc 	.word	0x02b401cc
  401b98:	03bf0208 	.word	0x03bf0208
  401b9c:	03bf01e1 	.word	0x03bf01e1
  401ba0:	03bf007e 	.word	0x03bf007e
  401ba4:	020d03bf 	.word	0x020d03bf
  401ba8:	980d      	ldr	r0, [sp, #52]	; 0x34
  401baa:	930f      	str	r3, [sp, #60]	; 0x3c
  401bac:	4240      	negs	r0, r0
  401bae:	900d      	str	r0, [sp, #52]	; 0x34
  401bb0:	f04b 0b04 	orr.w	fp, fp, #4
  401bb4:	f89a 3000 	ldrb.w	r3, [sl]
  401bb8:	e794      	b.n	401ae4 <_svfprintf_r+0xb0>
  401bba:	aa25      	add	r2, sp, #148	; 0x94
  401bbc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401bbe:	980c      	ldr	r0, [sp, #48]	; 0x30
  401bc0:	f003 f92c 	bl	404e1c <__ssprint_r>
  401bc4:	b940      	cbnz	r0, 401bd8 <_svfprintf_r+0x1a4>
  401bc6:	46c8      	mov	r8, r9
  401bc8:	e779      	b.n	401abe <_svfprintf_r+0x8a>
  401bca:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  401bcc:	b123      	cbz	r3, 401bd8 <_svfprintf_r+0x1a4>
  401bce:	980c      	ldr	r0, [sp, #48]	; 0x30
  401bd0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401bd2:	aa25      	add	r2, sp, #148	; 0x94
  401bd4:	f003 f922 	bl	404e1c <__ssprint_r>
  401bd8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401bda:	899b      	ldrh	r3, [r3, #12]
  401bdc:	f013 0f40 	tst.w	r3, #64	; 0x40
  401be0:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401be2:	bf18      	it	ne
  401be4:	f04f 33ff 	movne.w	r3, #4294967295
  401be8:	9309      	str	r3, [sp, #36]	; 0x24
  401bea:	9809      	ldr	r0, [sp, #36]	; 0x24
  401bec:	b043      	add	sp, #268	; 0x10c
  401bee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401bf2:	f01b 0f20 	tst.w	fp, #32
  401bf6:	9311      	str	r3, [sp, #68]	; 0x44
  401bf8:	f040 81dd 	bne.w	401fb6 <_svfprintf_r+0x582>
  401bfc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401bfe:	f01b 0f10 	tst.w	fp, #16
  401c02:	4613      	mov	r3, r2
  401c04:	f040 856e 	bne.w	4026e4 <_svfprintf_r+0xcb0>
  401c08:	f01b 0f40 	tst.w	fp, #64	; 0x40
  401c0c:	f000 856a 	beq.w	4026e4 <_svfprintf_r+0xcb0>
  401c10:	8814      	ldrh	r4, [r2, #0]
  401c12:	3204      	adds	r2, #4
  401c14:	2500      	movs	r5, #0
  401c16:	2301      	movs	r3, #1
  401c18:	920f      	str	r2, [sp, #60]	; 0x3c
  401c1a:	2700      	movs	r7, #0
  401c1c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  401c20:	990a      	ldr	r1, [sp, #40]	; 0x28
  401c22:	1c4a      	adds	r2, r1, #1
  401c24:	f000 8265 	beq.w	4020f2 <_svfprintf_r+0x6be>
  401c28:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  401c2c:	9207      	str	r2, [sp, #28]
  401c2e:	ea54 0205 	orrs.w	r2, r4, r5
  401c32:	f040 8264 	bne.w	4020fe <_svfprintf_r+0x6ca>
  401c36:	2900      	cmp	r1, #0
  401c38:	f040 843c 	bne.w	4024b4 <_svfprintf_r+0xa80>
  401c3c:	2b00      	cmp	r3, #0
  401c3e:	f040 84d7 	bne.w	4025f0 <_svfprintf_r+0xbbc>
  401c42:	f01b 0301 	ands.w	r3, fp, #1
  401c46:	930e      	str	r3, [sp, #56]	; 0x38
  401c48:	f000 8604 	beq.w	402854 <_svfprintf_r+0xe20>
  401c4c:	ae42      	add	r6, sp, #264	; 0x108
  401c4e:	2330      	movs	r3, #48	; 0x30
  401c50:	f806 3d41 	strb.w	r3, [r6, #-65]!
  401c54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401c56:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  401c58:	4293      	cmp	r3, r2
  401c5a:	bfb8      	it	lt
  401c5c:	4613      	movlt	r3, r2
  401c5e:	9308      	str	r3, [sp, #32]
  401c60:	2300      	movs	r3, #0
  401c62:	9312      	str	r3, [sp, #72]	; 0x48
  401c64:	b117      	cbz	r7, 401c6c <_svfprintf_r+0x238>
  401c66:	9b08      	ldr	r3, [sp, #32]
  401c68:	3301      	adds	r3, #1
  401c6a:	9308      	str	r3, [sp, #32]
  401c6c:	9b07      	ldr	r3, [sp, #28]
  401c6e:	f013 0302 	ands.w	r3, r3, #2
  401c72:	9310      	str	r3, [sp, #64]	; 0x40
  401c74:	d002      	beq.n	401c7c <_svfprintf_r+0x248>
  401c76:	9b08      	ldr	r3, [sp, #32]
  401c78:	3302      	adds	r3, #2
  401c7a:	9308      	str	r3, [sp, #32]
  401c7c:	9b07      	ldr	r3, [sp, #28]
  401c7e:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  401c82:	f040 830e 	bne.w	4022a2 <_svfprintf_r+0x86e>
  401c86:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  401c88:	9a08      	ldr	r2, [sp, #32]
  401c8a:	eba3 0b02 	sub.w	fp, r3, r2
  401c8e:	f1bb 0f00 	cmp.w	fp, #0
  401c92:	f340 8306 	ble.w	4022a2 <_svfprintf_r+0x86e>
  401c96:	f1bb 0f10 	cmp.w	fp, #16
  401c9a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  401c9c:	9a26      	ldr	r2, [sp, #152]	; 0x98
  401c9e:	dd29      	ble.n	401cf4 <_svfprintf_r+0x2c0>
  401ca0:	4643      	mov	r3, r8
  401ca2:	4621      	mov	r1, r4
  401ca4:	46a8      	mov	r8, r5
  401ca6:	2710      	movs	r7, #16
  401ca8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  401caa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  401cac:	e006      	b.n	401cbc <_svfprintf_r+0x288>
  401cae:	f1ab 0b10 	sub.w	fp, fp, #16
  401cb2:	f1bb 0f10 	cmp.w	fp, #16
  401cb6:	f103 0308 	add.w	r3, r3, #8
  401cba:	dd18      	ble.n	401cee <_svfprintf_r+0x2ba>
  401cbc:	3201      	adds	r2, #1
  401cbe:	48b7      	ldr	r0, [pc, #732]	; (401f9c <_svfprintf_r+0x568>)
  401cc0:	9226      	str	r2, [sp, #152]	; 0x98
  401cc2:	3110      	adds	r1, #16
  401cc4:	2a07      	cmp	r2, #7
  401cc6:	9127      	str	r1, [sp, #156]	; 0x9c
  401cc8:	e883 0081 	stmia.w	r3, {r0, r7}
  401ccc:	ddef      	ble.n	401cae <_svfprintf_r+0x27a>
  401cce:	aa25      	add	r2, sp, #148	; 0x94
  401cd0:	4629      	mov	r1, r5
  401cd2:	4620      	mov	r0, r4
  401cd4:	f003 f8a2 	bl	404e1c <__ssprint_r>
  401cd8:	2800      	cmp	r0, #0
  401cda:	f47f af7d 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  401cde:	f1ab 0b10 	sub.w	fp, fp, #16
  401ce2:	f1bb 0f10 	cmp.w	fp, #16
  401ce6:	9927      	ldr	r1, [sp, #156]	; 0x9c
  401ce8:	9a26      	ldr	r2, [sp, #152]	; 0x98
  401cea:	464b      	mov	r3, r9
  401cec:	dce6      	bgt.n	401cbc <_svfprintf_r+0x288>
  401cee:	4645      	mov	r5, r8
  401cf0:	460c      	mov	r4, r1
  401cf2:	4698      	mov	r8, r3
  401cf4:	3201      	adds	r2, #1
  401cf6:	4ba9      	ldr	r3, [pc, #676]	; (401f9c <_svfprintf_r+0x568>)
  401cf8:	9226      	str	r2, [sp, #152]	; 0x98
  401cfa:	445c      	add	r4, fp
  401cfc:	2a07      	cmp	r2, #7
  401cfe:	9427      	str	r4, [sp, #156]	; 0x9c
  401d00:	e888 0808 	stmia.w	r8, {r3, fp}
  401d04:	f300 8498 	bgt.w	402638 <_svfprintf_r+0xc04>
  401d08:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  401d0c:	f108 0808 	add.w	r8, r8, #8
  401d10:	b177      	cbz	r7, 401d30 <_svfprintf_r+0x2fc>
  401d12:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401d14:	3301      	adds	r3, #1
  401d16:	3401      	adds	r4, #1
  401d18:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  401d1c:	2201      	movs	r2, #1
  401d1e:	2b07      	cmp	r3, #7
  401d20:	9427      	str	r4, [sp, #156]	; 0x9c
  401d22:	9326      	str	r3, [sp, #152]	; 0x98
  401d24:	e888 0006 	stmia.w	r8, {r1, r2}
  401d28:	f300 83db 	bgt.w	4024e2 <_svfprintf_r+0xaae>
  401d2c:	f108 0808 	add.w	r8, r8, #8
  401d30:	9b10      	ldr	r3, [sp, #64]	; 0x40
  401d32:	b16b      	cbz	r3, 401d50 <_svfprintf_r+0x31c>
  401d34:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401d36:	3301      	adds	r3, #1
  401d38:	3402      	adds	r4, #2
  401d3a:	a91e      	add	r1, sp, #120	; 0x78
  401d3c:	2202      	movs	r2, #2
  401d3e:	2b07      	cmp	r3, #7
  401d40:	9427      	str	r4, [sp, #156]	; 0x9c
  401d42:	9326      	str	r3, [sp, #152]	; 0x98
  401d44:	e888 0006 	stmia.w	r8, {r1, r2}
  401d48:	f300 83d6 	bgt.w	4024f8 <_svfprintf_r+0xac4>
  401d4c:	f108 0808 	add.w	r8, r8, #8
  401d50:	2d80      	cmp	r5, #128	; 0x80
  401d52:	f000 8315 	beq.w	402380 <_svfprintf_r+0x94c>
  401d56:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401d58:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  401d5a:	1a9f      	subs	r7, r3, r2
  401d5c:	2f00      	cmp	r7, #0
  401d5e:	dd36      	ble.n	401dce <_svfprintf_r+0x39a>
  401d60:	2f10      	cmp	r7, #16
  401d62:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401d64:	4d8e      	ldr	r5, [pc, #568]	; (401fa0 <_svfprintf_r+0x56c>)
  401d66:	dd27      	ble.n	401db8 <_svfprintf_r+0x384>
  401d68:	4642      	mov	r2, r8
  401d6a:	4621      	mov	r1, r4
  401d6c:	46b0      	mov	r8, r6
  401d6e:	f04f 0b10 	mov.w	fp, #16
  401d72:	462e      	mov	r6, r5
  401d74:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  401d76:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  401d78:	e004      	b.n	401d84 <_svfprintf_r+0x350>
  401d7a:	3f10      	subs	r7, #16
  401d7c:	2f10      	cmp	r7, #16
  401d7e:	f102 0208 	add.w	r2, r2, #8
  401d82:	dd15      	ble.n	401db0 <_svfprintf_r+0x37c>
  401d84:	3301      	adds	r3, #1
  401d86:	3110      	adds	r1, #16
  401d88:	2b07      	cmp	r3, #7
  401d8a:	9127      	str	r1, [sp, #156]	; 0x9c
  401d8c:	9326      	str	r3, [sp, #152]	; 0x98
  401d8e:	e882 0840 	stmia.w	r2, {r6, fp}
  401d92:	ddf2      	ble.n	401d7a <_svfprintf_r+0x346>
  401d94:	aa25      	add	r2, sp, #148	; 0x94
  401d96:	4629      	mov	r1, r5
  401d98:	4620      	mov	r0, r4
  401d9a:	f003 f83f 	bl	404e1c <__ssprint_r>
  401d9e:	2800      	cmp	r0, #0
  401da0:	f47f af1a 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  401da4:	3f10      	subs	r7, #16
  401da6:	2f10      	cmp	r7, #16
  401da8:	9927      	ldr	r1, [sp, #156]	; 0x9c
  401daa:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401dac:	464a      	mov	r2, r9
  401dae:	dce9      	bgt.n	401d84 <_svfprintf_r+0x350>
  401db0:	4635      	mov	r5, r6
  401db2:	460c      	mov	r4, r1
  401db4:	4646      	mov	r6, r8
  401db6:	4690      	mov	r8, r2
  401db8:	3301      	adds	r3, #1
  401dba:	443c      	add	r4, r7
  401dbc:	2b07      	cmp	r3, #7
  401dbe:	9427      	str	r4, [sp, #156]	; 0x9c
  401dc0:	9326      	str	r3, [sp, #152]	; 0x98
  401dc2:	e888 00a0 	stmia.w	r8, {r5, r7}
  401dc6:	f300 8381 	bgt.w	4024cc <_svfprintf_r+0xa98>
  401dca:	f108 0808 	add.w	r8, r8, #8
  401dce:	9b07      	ldr	r3, [sp, #28]
  401dd0:	05df      	lsls	r7, r3, #23
  401dd2:	f100 8268 	bmi.w	4022a6 <_svfprintf_r+0x872>
  401dd6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401dd8:	990e      	ldr	r1, [sp, #56]	; 0x38
  401dda:	f8c8 6000 	str.w	r6, [r8]
  401dde:	3301      	adds	r3, #1
  401de0:	440c      	add	r4, r1
  401de2:	2b07      	cmp	r3, #7
  401de4:	9427      	str	r4, [sp, #156]	; 0x9c
  401de6:	f8c8 1004 	str.w	r1, [r8, #4]
  401dea:	9326      	str	r3, [sp, #152]	; 0x98
  401dec:	f300 834d 	bgt.w	40248a <_svfprintf_r+0xa56>
  401df0:	f108 0808 	add.w	r8, r8, #8
  401df4:	9b07      	ldr	r3, [sp, #28]
  401df6:	075b      	lsls	r3, r3, #29
  401df8:	d53a      	bpl.n	401e70 <_svfprintf_r+0x43c>
  401dfa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  401dfc:	9a08      	ldr	r2, [sp, #32]
  401dfe:	1a9d      	subs	r5, r3, r2
  401e00:	2d00      	cmp	r5, #0
  401e02:	dd35      	ble.n	401e70 <_svfprintf_r+0x43c>
  401e04:	2d10      	cmp	r5, #16
  401e06:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401e08:	dd20      	ble.n	401e4c <_svfprintf_r+0x418>
  401e0a:	2610      	movs	r6, #16
  401e0c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  401e0e:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  401e12:	e004      	b.n	401e1e <_svfprintf_r+0x3ea>
  401e14:	3d10      	subs	r5, #16
  401e16:	2d10      	cmp	r5, #16
  401e18:	f108 0808 	add.w	r8, r8, #8
  401e1c:	dd16      	ble.n	401e4c <_svfprintf_r+0x418>
  401e1e:	3301      	adds	r3, #1
  401e20:	4a5e      	ldr	r2, [pc, #376]	; (401f9c <_svfprintf_r+0x568>)
  401e22:	9326      	str	r3, [sp, #152]	; 0x98
  401e24:	3410      	adds	r4, #16
  401e26:	2b07      	cmp	r3, #7
  401e28:	9427      	str	r4, [sp, #156]	; 0x9c
  401e2a:	e888 0044 	stmia.w	r8, {r2, r6}
  401e2e:	ddf1      	ble.n	401e14 <_svfprintf_r+0x3e0>
  401e30:	aa25      	add	r2, sp, #148	; 0x94
  401e32:	4659      	mov	r1, fp
  401e34:	4638      	mov	r0, r7
  401e36:	f002 fff1 	bl	404e1c <__ssprint_r>
  401e3a:	2800      	cmp	r0, #0
  401e3c:	f47f aecc 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  401e40:	3d10      	subs	r5, #16
  401e42:	2d10      	cmp	r5, #16
  401e44:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  401e46:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401e48:	46c8      	mov	r8, r9
  401e4a:	dce8      	bgt.n	401e1e <_svfprintf_r+0x3ea>
  401e4c:	3301      	adds	r3, #1
  401e4e:	4a53      	ldr	r2, [pc, #332]	; (401f9c <_svfprintf_r+0x568>)
  401e50:	9326      	str	r3, [sp, #152]	; 0x98
  401e52:	442c      	add	r4, r5
  401e54:	2b07      	cmp	r3, #7
  401e56:	9427      	str	r4, [sp, #156]	; 0x9c
  401e58:	e888 0024 	stmia.w	r8, {r2, r5}
  401e5c:	dd08      	ble.n	401e70 <_svfprintf_r+0x43c>
  401e5e:	aa25      	add	r2, sp, #148	; 0x94
  401e60:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401e62:	980c      	ldr	r0, [sp, #48]	; 0x30
  401e64:	f002 ffda 	bl	404e1c <__ssprint_r>
  401e68:	2800      	cmp	r0, #0
  401e6a:	f47f aeb5 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  401e6e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  401e70:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401e72:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  401e74:	9908      	ldr	r1, [sp, #32]
  401e76:	428a      	cmp	r2, r1
  401e78:	bfac      	ite	ge
  401e7a:	189b      	addge	r3, r3, r2
  401e7c:	185b      	addlt	r3, r3, r1
  401e7e:	9309      	str	r3, [sp, #36]	; 0x24
  401e80:	2c00      	cmp	r4, #0
  401e82:	f040 830d 	bne.w	4024a0 <_svfprintf_r+0xa6c>
  401e86:	2300      	movs	r3, #0
  401e88:	9326      	str	r3, [sp, #152]	; 0x98
  401e8a:	46c8      	mov	r8, r9
  401e8c:	e5f9      	b.n	401a82 <_svfprintf_r+0x4e>
  401e8e:	9311      	str	r3, [sp, #68]	; 0x44
  401e90:	f01b 0320 	ands.w	r3, fp, #32
  401e94:	f040 81e3 	bne.w	40225e <_svfprintf_r+0x82a>
  401e98:	f01b 0210 	ands.w	r2, fp, #16
  401e9c:	f040 842e 	bne.w	4026fc <_svfprintf_r+0xcc8>
  401ea0:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  401ea4:	f000 842a 	beq.w	4026fc <_svfprintf_r+0xcc8>
  401ea8:	990f      	ldr	r1, [sp, #60]	; 0x3c
  401eaa:	4613      	mov	r3, r2
  401eac:	460a      	mov	r2, r1
  401eae:	3204      	adds	r2, #4
  401eb0:	880c      	ldrh	r4, [r1, #0]
  401eb2:	920f      	str	r2, [sp, #60]	; 0x3c
  401eb4:	2500      	movs	r5, #0
  401eb6:	e6b0      	b.n	401c1a <_svfprintf_r+0x1e6>
  401eb8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401eba:	9311      	str	r3, [sp, #68]	; 0x44
  401ebc:	6816      	ldr	r6, [r2, #0]
  401ebe:	2400      	movs	r4, #0
  401ec0:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  401ec4:	1d15      	adds	r5, r2, #4
  401ec6:	2e00      	cmp	r6, #0
  401ec8:	f000 86a7 	beq.w	402c1a <_svfprintf_r+0x11e6>
  401ecc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  401ece:	1c53      	adds	r3, r2, #1
  401ed0:	f000 8609 	beq.w	402ae6 <_svfprintf_r+0x10b2>
  401ed4:	4621      	mov	r1, r4
  401ed6:	4630      	mov	r0, r6
  401ed8:	f002 fa8a 	bl	4043f0 <memchr>
  401edc:	2800      	cmp	r0, #0
  401ede:	f000 86e1 	beq.w	402ca4 <_svfprintf_r+0x1270>
  401ee2:	1b83      	subs	r3, r0, r6
  401ee4:	930e      	str	r3, [sp, #56]	; 0x38
  401ee6:	940a      	str	r4, [sp, #40]	; 0x28
  401ee8:	950f      	str	r5, [sp, #60]	; 0x3c
  401eea:	f8cd b01c 	str.w	fp, [sp, #28]
  401eee:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  401ef2:	9308      	str	r3, [sp, #32]
  401ef4:	9412      	str	r4, [sp, #72]	; 0x48
  401ef6:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  401efa:	e6b3      	b.n	401c64 <_svfprintf_r+0x230>
  401efc:	f89a 3000 	ldrb.w	r3, [sl]
  401f00:	2201      	movs	r2, #1
  401f02:	212b      	movs	r1, #43	; 0x2b
  401f04:	e5ee      	b.n	401ae4 <_svfprintf_r+0xb0>
  401f06:	f04b 0b20 	orr.w	fp, fp, #32
  401f0a:	f89a 3000 	ldrb.w	r3, [sl]
  401f0e:	e5e9      	b.n	401ae4 <_svfprintf_r+0xb0>
  401f10:	9311      	str	r3, [sp, #68]	; 0x44
  401f12:	2a00      	cmp	r2, #0
  401f14:	f040 8795 	bne.w	402e42 <_svfprintf_r+0x140e>
  401f18:	4b22      	ldr	r3, [pc, #136]	; (401fa4 <_svfprintf_r+0x570>)
  401f1a:	9318      	str	r3, [sp, #96]	; 0x60
  401f1c:	f01b 0f20 	tst.w	fp, #32
  401f20:	f040 8111 	bne.w	402146 <_svfprintf_r+0x712>
  401f24:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401f26:	f01b 0f10 	tst.w	fp, #16
  401f2a:	4613      	mov	r3, r2
  401f2c:	f040 83e1 	bne.w	4026f2 <_svfprintf_r+0xcbe>
  401f30:	f01b 0f40 	tst.w	fp, #64	; 0x40
  401f34:	f000 83dd 	beq.w	4026f2 <_svfprintf_r+0xcbe>
  401f38:	3304      	adds	r3, #4
  401f3a:	8814      	ldrh	r4, [r2, #0]
  401f3c:	930f      	str	r3, [sp, #60]	; 0x3c
  401f3e:	2500      	movs	r5, #0
  401f40:	f01b 0f01 	tst.w	fp, #1
  401f44:	f000 810c 	beq.w	402160 <_svfprintf_r+0x72c>
  401f48:	ea54 0305 	orrs.w	r3, r4, r5
  401f4c:	f000 8108 	beq.w	402160 <_svfprintf_r+0x72c>
  401f50:	2330      	movs	r3, #48	; 0x30
  401f52:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  401f56:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  401f5a:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  401f5e:	f04b 0b02 	orr.w	fp, fp, #2
  401f62:	2302      	movs	r3, #2
  401f64:	e659      	b.n	401c1a <_svfprintf_r+0x1e6>
  401f66:	f89a 3000 	ldrb.w	r3, [sl]
  401f6a:	2900      	cmp	r1, #0
  401f6c:	f47f adba 	bne.w	401ae4 <_svfprintf_r+0xb0>
  401f70:	2201      	movs	r2, #1
  401f72:	2120      	movs	r1, #32
  401f74:	e5b6      	b.n	401ae4 <_svfprintf_r+0xb0>
  401f76:	f04b 0b01 	orr.w	fp, fp, #1
  401f7a:	f89a 3000 	ldrb.w	r3, [sl]
  401f7e:	e5b1      	b.n	401ae4 <_svfprintf_r+0xb0>
  401f80:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  401f82:	6823      	ldr	r3, [r4, #0]
  401f84:	930d      	str	r3, [sp, #52]	; 0x34
  401f86:	4618      	mov	r0, r3
  401f88:	2800      	cmp	r0, #0
  401f8a:	4623      	mov	r3, r4
  401f8c:	f103 0304 	add.w	r3, r3, #4
  401f90:	f6ff ae0a 	blt.w	401ba8 <_svfprintf_r+0x174>
  401f94:	930f      	str	r3, [sp, #60]	; 0x3c
  401f96:	f89a 3000 	ldrb.w	r3, [sl]
  401f9a:	e5a3      	b.n	401ae4 <_svfprintf_r+0xb0>
  401f9c:	00406fdc 	.word	0x00406fdc
  401fa0:	00406fec 	.word	0x00406fec
  401fa4:	00406fbc 	.word	0x00406fbc
  401fa8:	f04b 0b10 	orr.w	fp, fp, #16
  401fac:	f01b 0f20 	tst.w	fp, #32
  401fb0:	9311      	str	r3, [sp, #68]	; 0x44
  401fb2:	f43f ae23 	beq.w	401bfc <_svfprintf_r+0x1c8>
  401fb6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  401fb8:	3507      	adds	r5, #7
  401fba:	f025 0307 	bic.w	r3, r5, #7
  401fbe:	f103 0208 	add.w	r2, r3, #8
  401fc2:	e9d3 4500 	ldrd	r4, r5, [r3]
  401fc6:	920f      	str	r2, [sp, #60]	; 0x3c
  401fc8:	2301      	movs	r3, #1
  401fca:	e626      	b.n	401c1a <_svfprintf_r+0x1e6>
  401fcc:	f89a 3000 	ldrb.w	r3, [sl]
  401fd0:	2b2a      	cmp	r3, #42	; 0x2a
  401fd2:	f10a 0401 	add.w	r4, sl, #1
  401fd6:	f000 8727 	beq.w	402e28 <_svfprintf_r+0x13f4>
  401fda:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  401fde:	2809      	cmp	r0, #9
  401fe0:	46a2      	mov	sl, r4
  401fe2:	f200 86ad 	bhi.w	402d40 <_svfprintf_r+0x130c>
  401fe6:	2300      	movs	r3, #0
  401fe8:	461c      	mov	r4, r3
  401fea:	f81a 3b01 	ldrb.w	r3, [sl], #1
  401fee:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  401ff2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  401ff6:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  401ffa:	2809      	cmp	r0, #9
  401ffc:	d9f5      	bls.n	401fea <_svfprintf_r+0x5b6>
  401ffe:	940a      	str	r4, [sp, #40]	; 0x28
  402000:	e572      	b.n	401ae8 <_svfprintf_r+0xb4>
  402002:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  402006:	f89a 3000 	ldrb.w	r3, [sl]
  40200a:	e56b      	b.n	401ae4 <_svfprintf_r+0xb0>
  40200c:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  402010:	f89a 3000 	ldrb.w	r3, [sl]
  402014:	e566      	b.n	401ae4 <_svfprintf_r+0xb0>
  402016:	f89a 3000 	ldrb.w	r3, [sl]
  40201a:	2b6c      	cmp	r3, #108	; 0x6c
  40201c:	bf03      	ittte	eq
  40201e:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  402022:	f04b 0b20 	orreq.w	fp, fp, #32
  402026:	f10a 0a01 	addeq.w	sl, sl, #1
  40202a:	f04b 0b10 	orrne.w	fp, fp, #16
  40202e:	e559      	b.n	401ae4 <_svfprintf_r+0xb0>
  402030:	2a00      	cmp	r2, #0
  402032:	f040 8711 	bne.w	402e58 <_svfprintf_r+0x1424>
  402036:	f01b 0f20 	tst.w	fp, #32
  40203a:	f040 84f9 	bne.w	402a30 <_svfprintf_r+0xffc>
  40203e:	f01b 0f10 	tst.w	fp, #16
  402042:	f040 84ac 	bne.w	40299e <_svfprintf_r+0xf6a>
  402046:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40204a:	f000 84a8 	beq.w	40299e <_svfprintf_r+0xf6a>
  40204e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402050:	6813      	ldr	r3, [r2, #0]
  402052:	3204      	adds	r2, #4
  402054:	920f      	str	r2, [sp, #60]	; 0x3c
  402056:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  40205a:	801a      	strh	r2, [r3, #0]
  40205c:	e511      	b.n	401a82 <_svfprintf_r+0x4e>
  40205e:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402060:	4bb3      	ldr	r3, [pc, #716]	; (402330 <_svfprintf_r+0x8fc>)
  402062:	680c      	ldr	r4, [r1, #0]
  402064:	9318      	str	r3, [sp, #96]	; 0x60
  402066:	2230      	movs	r2, #48	; 0x30
  402068:	2378      	movs	r3, #120	; 0x78
  40206a:	3104      	adds	r1, #4
  40206c:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  402070:	9311      	str	r3, [sp, #68]	; 0x44
  402072:	f04b 0b02 	orr.w	fp, fp, #2
  402076:	910f      	str	r1, [sp, #60]	; 0x3c
  402078:	2500      	movs	r5, #0
  40207a:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  40207e:	2302      	movs	r3, #2
  402080:	e5cb      	b.n	401c1a <_svfprintf_r+0x1e6>
  402082:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402084:	9311      	str	r3, [sp, #68]	; 0x44
  402086:	680a      	ldr	r2, [r1, #0]
  402088:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  40208c:	2300      	movs	r3, #0
  40208e:	460a      	mov	r2, r1
  402090:	461f      	mov	r7, r3
  402092:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402096:	3204      	adds	r2, #4
  402098:	2301      	movs	r3, #1
  40209a:	9308      	str	r3, [sp, #32]
  40209c:	f8cd b01c 	str.w	fp, [sp, #28]
  4020a0:	970a      	str	r7, [sp, #40]	; 0x28
  4020a2:	9712      	str	r7, [sp, #72]	; 0x48
  4020a4:	920f      	str	r2, [sp, #60]	; 0x3c
  4020a6:	930e      	str	r3, [sp, #56]	; 0x38
  4020a8:	ae28      	add	r6, sp, #160	; 0xa0
  4020aa:	e5df      	b.n	401c6c <_svfprintf_r+0x238>
  4020ac:	9311      	str	r3, [sp, #68]	; 0x44
  4020ae:	2a00      	cmp	r2, #0
  4020b0:	f040 86ea 	bne.w	402e88 <_svfprintf_r+0x1454>
  4020b4:	f01b 0f20 	tst.w	fp, #32
  4020b8:	d15d      	bne.n	402176 <_svfprintf_r+0x742>
  4020ba:	f01b 0f10 	tst.w	fp, #16
  4020be:	f040 8308 	bne.w	4026d2 <_svfprintf_r+0xc9e>
  4020c2:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4020c6:	f000 8304 	beq.w	4026d2 <_svfprintf_r+0xc9e>
  4020ca:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4020cc:	f9b1 4000 	ldrsh.w	r4, [r1]
  4020d0:	3104      	adds	r1, #4
  4020d2:	17e5      	asrs	r5, r4, #31
  4020d4:	4622      	mov	r2, r4
  4020d6:	462b      	mov	r3, r5
  4020d8:	910f      	str	r1, [sp, #60]	; 0x3c
  4020da:	2a00      	cmp	r2, #0
  4020dc:	f173 0300 	sbcs.w	r3, r3, #0
  4020e0:	db58      	blt.n	402194 <_svfprintf_r+0x760>
  4020e2:	990a      	ldr	r1, [sp, #40]	; 0x28
  4020e4:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4020e8:	1c4a      	adds	r2, r1, #1
  4020ea:	f04f 0301 	mov.w	r3, #1
  4020ee:	f47f ad9b 	bne.w	401c28 <_svfprintf_r+0x1f4>
  4020f2:	ea54 0205 	orrs.w	r2, r4, r5
  4020f6:	f000 81df 	beq.w	4024b8 <_svfprintf_r+0xa84>
  4020fa:	f8cd b01c 	str.w	fp, [sp, #28]
  4020fe:	2b01      	cmp	r3, #1
  402100:	f000 827b 	beq.w	4025fa <_svfprintf_r+0xbc6>
  402104:	2b02      	cmp	r3, #2
  402106:	f040 8206 	bne.w	402516 <_svfprintf_r+0xae2>
  40210a:	9818      	ldr	r0, [sp, #96]	; 0x60
  40210c:	464e      	mov	r6, r9
  40210e:	0923      	lsrs	r3, r4, #4
  402110:	f004 010f 	and.w	r1, r4, #15
  402114:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402118:	092a      	lsrs	r2, r5, #4
  40211a:	461c      	mov	r4, r3
  40211c:	4615      	mov	r5, r2
  40211e:	5c43      	ldrb	r3, [r0, r1]
  402120:	f806 3d01 	strb.w	r3, [r6, #-1]!
  402124:	ea54 0305 	orrs.w	r3, r4, r5
  402128:	d1f1      	bne.n	40210e <_svfprintf_r+0x6da>
  40212a:	eba9 0306 	sub.w	r3, r9, r6
  40212e:	930e      	str	r3, [sp, #56]	; 0x38
  402130:	e590      	b.n	401c54 <_svfprintf_r+0x220>
  402132:	9311      	str	r3, [sp, #68]	; 0x44
  402134:	2a00      	cmp	r2, #0
  402136:	f040 86a3 	bne.w	402e80 <_svfprintf_r+0x144c>
  40213a:	4b7e      	ldr	r3, [pc, #504]	; (402334 <_svfprintf_r+0x900>)
  40213c:	9318      	str	r3, [sp, #96]	; 0x60
  40213e:	f01b 0f20 	tst.w	fp, #32
  402142:	f43f aeef 	beq.w	401f24 <_svfprintf_r+0x4f0>
  402146:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402148:	3507      	adds	r5, #7
  40214a:	f025 0307 	bic.w	r3, r5, #7
  40214e:	f103 0208 	add.w	r2, r3, #8
  402152:	f01b 0f01 	tst.w	fp, #1
  402156:	920f      	str	r2, [sp, #60]	; 0x3c
  402158:	e9d3 4500 	ldrd	r4, r5, [r3]
  40215c:	f47f aef4 	bne.w	401f48 <_svfprintf_r+0x514>
  402160:	2302      	movs	r3, #2
  402162:	e55a      	b.n	401c1a <_svfprintf_r+0x1e6>
  402164:	9311      	str	r3, [sp, #68]	; 0x44
  402166:	2a00      	cmp	r2, #0
  402168:	f040 8686 	bne.w	402e78 <_svfprintf_r+0x1444>
  40216c:	f04b 0b10 	orr.w	fp, fp, #16
  402170:	f01b 0f20 	tst.w	fp, #32
  402174:	d0a1      	beq.n	4020ba <_svfprintf_r+0x686>
  402176:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402178:	3507      	adds	r5, #7
  40217a:	f025 0507 	bic.w	r5, r5, #7
  40217e:	e9d5 2300 	ldrd	r2, r3, [r5]
  402182:	2a00      	cmp	r2, #0
  402184:	f105 0108 	add.w	r1, r5, #8
  402188:	461d      	mov	r5, r3
  40218a:	f173 0300 	sbcs.w	r3, r3, #0
  40218e:	910f      	str	r1, [sp, #60]	; 0x3c
  402190:	4614      	mov	r4, r2
  402192:	daa6      	bge.n	4020e2 <_svfprintf_r+0x6ae>
  402194:	272d      	movs	r7, #45	; 0x2d
  402196:	4264      	negs	r4, r4
  402198:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  40219c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4021a0:	2301      	movs	r3, #1
  4021a2:	e53d      	b.n	401c20 <_svfprintf_r+0x1ec>
  4021a4:	9311      	str	r3, [sp, #68]	; 0x44
  4021a6:	2a00      	cmp	r2, #0
  4021a8:	f040 8662 	bne.w	402e70 <_svfprintf_r+0x143c>
  4021ac:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4021ae:	3507      	adds	r5, #7
  4021b0:	f025 0307 	bic.w	r3, r5, #7
  4021b4:	f103 0208 	add.w	r2, r3, #8
  4021b8:	920f      	str	r2, [sp, #60]	; 0x3c
  4021ba:	681a      	ldr	r2, [r3, #0]
  4021bc:	9215      	str	r2, [sp, #84]	; 0x54
  4021be:	685b      	ldr	r3, [r3, #4]
  4021c0:	9314      	str	r3, [sp, #80]	; 0x50
  4021c2:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4021c4:	9d15      	ldr	r5, [sp, #84]	; 0x54
  4021c6:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  4021ca:	4628      	mov	r0, r5
  4021cc:	4621      	mov	r1, r4
  4021ce:	f04f 32ff 	mov.w	r2, #4294967295
  4021d2:	4b59      	ldr	r3, [pc, #356]	; (402338 <_svfprintf_r+0x904>)
  4021d4:	f003 fee8 	bl	405fa8 <__aeabi_dcmpun>
  4021d8:	2800      	cmp	r0, #0
  4021da:	f040 834a 	bne.w	402872 <_svfprintf_r+0xe3e>
  4021de:	4628      	mov	r0, r5
  4021e0:	4621      	mov	r1, r4
  4021e2:	f04f 32ff 	mov.w	r2, #4294967295
  4021e6:	4b54      	ldr	r3, [pc, #336]	; (402338 <_svfprintf_r+0x904>)
  4021e8:	f003 fec0 	bl	405f6c <__aeabi_dcmple>
  4021ec:	2800      	cmp	r0, #0
  4021ee:	f040 8340 	bne.w	402872 <_svfprintf_r+0xe3e>
  4021f2:	a815      	add	r0, sp, #84	; 0x54
  4021f4:	c80d      	ldmia	r0, {r0, r2, r3}
  4021f6:	9914      	ldr	r1, [sp, #80]	; 0x50
  4021f8:	f003 feae 	bl	405f58 <__aeabi_dcmplt>
  4021fc:	2800      	cmp	r0, #0
  4021fe:	f040 8530 	bne.w	402c62 <_svfprintf_r+0x122e>
  402202:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402206:	4e4d      	ldr	r6, [pc, #308]	; (40233c <_svfprintf_r+0x908>)
  402208:	4b4d      	ldr	r3, [pc, #308]	; (402340 <_svfprintf_r+0x90c>)
  40220a:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  40220e:	9007      	str	r0, [sp, #28]
  402210:	9811      	ldr	r0, [sp, #68]	; 0x44
  402212:	2203      	movs	r2, #3
  402214:	2100      	movs	r1, #0
  402216:	9208      	str	r2, [sp, #32]
  402218:	910a      	str	r1, [sp, #40]	; 0x28
  40221a:	2847      	cmp	r0, #71	; 0x47
  40221c:	bfd8      	it	le
  40221e:	461e      	movle	r6, r3
  402220:	920e      	str	r2, [sp, #56]	; 0x38
  402222:	9112      	str	r1, [sp, #72]	; 0x48
  402224:	e51e      	b.n	401c64 <_svfprintf_r+0x230>
  402226:	f04b 0b08 	orr.w	fp, fp, #8
  40222a:	f89a 3000 	ldrb.w	r3, [sl]
  40222e:	e459      	b.n	401ae4 <_svfprintf_r+0xb0>
  402230:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402234:	2300      	movs	r3, #0
  402236:	461c      	mov	r4, r3
  402238:	f81a 3b01 	ldrb.w	r3, [sl], #1
  40223c:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402240:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402244:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402248:	2809      	cmp	r0, #9
  40224a:	d9f5      	bls.n	402238 <_svfprintf_r+0x804>
  40224c:	940d      	str	r4, [sp, #52]	; 0x34
  40224e:	e44b      	b.n	401ae8 <_svfprintf_r+0xb4>
  402250:	f04b 0b10 	orr.w	fp, fp, #16
  402254:	9311      	str	r3, [sp, #68]	; 0x44
  402256:	f01b 0320 	ands.w	r3, fp, #32
  40225a:	f43f ae1d 	beq.w	401e98 <_svfprintf_r+0x464>
  40225e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402260:	3507      	adds	r5, #7
  402262:	f025 0307 	bic.w	r3, r5, #7
  402266:	f103 0208 	add.w	r2, r3, #8
  40226a:	e9d3 4500 	ldrd	r4, r5, [r3]
  40226e:	920f      	str	r2, [sp, #60]	; 0x3c
  402270:	2300      	movs	r3, #0
  402272:	e4d2      	b.n	401c1a <_svfprintf_r+0x1e6>
  402274:	9311      	str	r3, [sp, #68]	; 0x44
  402276:	2a00      	cmp	r2, #0
  402278:	f040 85e7 	bne.w	402e4a <_svfprintf_r+0x1416>
  40227c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40227e:	2a00      	cmp	r2, #0
  402280:	f43f aca3 	beq.w	401bca <_svfprintf_r+0x196>
  402284:	2300      	movs	r3, #0
  402286:	2101      	movs	r1, #1
  402288:	461f      	mov	r7, r3
  40228a:	9108      	str	r1, [sp, #32]
  40228c:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402290:	f8cd b01c 	str.w	fp, [sp, #28]
  402294:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402298:	930a      	str	r3, [sp, #40]	; 0x28
  40229a:	9312      	str	r3, [sp, #72]	; 0x48
  40229c:	910e      	str	r1, [sp, #56]	; 0x38
  40229e:	ae28      	add	r6, sp, #160	; 0xa0
  4022a0:	e4e4      	b.n	401c6c <_svfprintf_r+0x238>
  4022a2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4022a4:	e534      	b.n	401d10 <_svfprintf_r+0x2dc>
  4022a6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4022a8:	2b65      	cmp	r3, #101	; 0x65
  4022aa:	f340 80a7 	ble.w	4023fc <_svfprintf_r+0x9c8>
  4022ae:	a815      	add	r0, sp, #84	; 0x54
  4022b0:	c80d      	ldmia	r0, {r0, r2, r3}
  4022b2:	9914      	ldr	r1, [sp, #80]	; 0x50
  4022b4:	f003 fe46 	bl	405f44 <__aeabi_dcmpeq>
  4022b8:	2800      	cmp	r0, #0
  4022ba:	f000 8150 	beq.w	40255e <_svfprintf_r+0xb2a>
  4022be:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4022c0:	4a20      	ldr	r2, [pc, #128]	; (402344 <_svfprintf_r+0x910>)
  4022c2:	f8c8 2000 	str.w	r2, [r8]
  4022c6:	3301      	adds	r3, #1
  4022c8:	3401      	adds	r4, #1
  4022ca:	2201      	movs	r2, #1
  4022cc:	2b07      	cmp	r3, #7
  4022ce:	9427      	str	r4, [sp, #156]	; 0x9c
  4022d0:	9326      	str	r3, [sp, #152]	; 0x98
  4022d2:	f8c8 2004 	str.w	r2, [r8, #4]
  4022d6:	f300 836a 	bgt.w	4029ae <_svfprintf_r+0xf7a>
  4022da:	f108 0808 	add.w	r8, r8, #8
  4022de:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4022e0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4022e2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4022e4:	4293      	cmp	r3, r2
  4022e6:	db03      	blt.n	4022f0 <_svfprintf_r+0x8bc>
  4022e8:	9b07      	ldr	r3, [sp, #28]
  4022ea:	07dd      	lsls	r5, r3, #31
  4022ec:	f57f ad82 	bpl.w	401df4 <_svfprintf_r+0x3c0>
  4022f0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4022f2:	9919      	ldr	r1, [sp, #100]	; 0x64
  4022f4:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  4022f6:	f8c8 2000 	str.w	r2, [r8]
  4022fa:	3301      	adds	r3, #1
  4022fc:	440c      	add	r4, r1
  4022fe:	2b07      	cmp	r3, #7
  402300:	f8c8 1004 	str.w	r1, [r8, #4]
  402304:	9427      	str	r4, [sp, #156]	; 0x9c
  402306:	9326      	str	r3, [sp, #152]	; 0x98
  402308:	f300 839e 	bgt.w	402a48 <_svfprintf_r+0x1014>
  40230c:	f108 0808 	add.w	r8, r8, #8
  402310:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402312:	1e5e      	subs	r6, r3, #1
  402314:	2e00      	cmp	r6, #0
  402316:	f77f ad6d 	ble.w	401df4 <_svfprintf_r+0x3c0>
  40231a:	2e10      	cmp	r6, #16
  40231c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40231e:	4d0a      	ldr	r5, [pc, #40]	; (402348 <_svfprintf_r+0x914>)
  402320:	f340 81f5 	ble.w	40270e <_svfprintf_r+0xcda>
  402324:	4622      	mov	r2, r4
  402326:	2710      	movs	r7, #16
  402328:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40232c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  40232e:	e013      	b.n	402358 <_svfprintf_r+0x924>
  402330:	00406fbc 	.word	0x00406fbc
  402334:	00406fa8 	.word	0x00406fa8
  402338:	7fefffff 	.word	0x7fefffff
  40233c:	00406f9c 	.word	0x00406f9c
  402340:	00406f98 	.word	0x00406f98
  402344:	00406fd8 	.word	0x00406fd8
  402348:	00406fec 	.word	0x00406fec
  40234c:	f108 0808 	add.w	r8, r8, #8
  402350:	3e10      	subs	r6, #16
  402352:	2e10      	cmp	r6, #16
  402354:	f340 81da 	ble.w	40270c <_svfprintf_r+0xcd8>
  402358:	3301      	adds	r3, #1
  40235a:	3210      	adds	r2, #16
  40235c:	2b07      	cmp	r3, #7
  40235e:	9227      	str	r2, [sp, #156]	; 0x9c
  402360:	9326      	str	r3, [sp, #152]	; 0x98
  402362:	e888 00a0 	stmia.w	r8, {r5, r7}
  402366:	ddf1      	ble.n	40234c <_svfprintf_r+0x918>
  402368:	aa25      	add	r2, sp, #148	; 0x94
  40236a:	4621      	mov	r1, r4
  40236c:	4658      	mov	r0, fp
  40236e:	f002 fd55 	bl	404e1c <__ssprint_r>
  402372:	2800      	cmp	r0, #0
  402374:	f47f ac30 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  402378:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40237a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40237c:	46c8      	mov	r8, r9
  40237e:	e7e7      	b.n	402350 <_svfprintf_r+0x91c>
  402380:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402382:	9a08      	ldr	r2, [sp, #32]
  402384:	1a9f      	subs	r7, r3, r2
  402386:	2f00      	cmp	r7, #0
  402388:	f77f ace5 	ble.w	401d56 <_svfprintf_r+0x322>
  40238c:	2f10      	cmp	r7, #16
  40238e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402390:	4db6      	ldr	r5, [pc, #728]	; (40266c <_svfprintf_r+0xc38>)
  402392:	dd27      	ble.n	4023e4 <_svfprintf_r+0x9b0>
  402394:	4642      	mov	r2, r8
  402396:	4621      	mov	r1, r4
  402398:	46b0      	mov	r8, r6
  40239a:	f04f 0b10 	mov.w	fp, #16
  40239e:	462e      	mov	r6, r5
  4023a0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4023a2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4023a4:	e004      	b.n	4023b0 <_svfprintf_r+0x97c>
  4023a6:	3f10      	subs	r7, #16
  4023a8:	2f10      	cmp	r7, #16
  4023aa:	f102 0208 	add.w	r2, r2, #8
  4023ae:	dd15      	ble.n	4023dc <_svfprintf_r+0x9a8>
  4023b0:	3301      	adds	r3, #1
  4023b2:	3110      	adds	r1, #16
  4023b4:	2b07      	cmp	r3, #7
  4023b6:	9127      	str	r1, [sp, #156]	; 0x9c
  4023b8:	9326      	str	r3, [sp, #152]	; 0x98
  4023ba:	e882 0840 	stmia.w	r2, {r6, fp}
  4023be:	ddf2      	ble.n	4023a6 <_svfprintf_r+0x972>
  4023c0:	aa25      	add	r2, sp, #148	; 0x94
  4023c2:	4629      	mov	r1, r5
  4023c4:	4620      	mov	r0, r4
  4023c6:	f002 fd29 	bl	404e1c <__ssprint_r>
  4023ca:	2800      	cmp	r0, #0
  4023cc:	f47f ac04 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  4023d0:	3f10      	subs	r7, #16
  4023d2:	2f10      	cmp	r7, #16
  4023d4:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4023d6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4023d8:	464a      	mov	r2, r9
  4023da:	dce9      	bgt.n	4023b0 <_svfprintf_r+0x97c>
  4023dc:	4635      	mov	r5, r6
  4023de:	460c      	mov	r4, r1
  4023e0:	4646      	mov	r6, r8
  4023e2:	4690      	mov	r8, r2
  4023e4:	3301      	adds	r3, #1
  4023e6:	443c      	add	r4, r7
  4023e8:	2b07      	cmp	r3, #7
  4023ea:	9427      	str	r4, [sp, #156]	; 0x9c
  4023ec:	9326      	str	r3, [sp, #152]	; 0x98
  4023ee:	e888 00a0 	stmia.w	r8, {r5, r7}
  4023f2:	f300 8232 	bgt.w	40285a <_svfprintf_r+0xe26>
  4023f6:	f108 0808 	add.w	r8, r8, #8
  4023fa:	e4ac      	b.n	401d56 <_svfprintf_r+0x322>
  4023fc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4023fe:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402400:	2b01      	cmp	r3, #1
  402402:	f340 81fe 	ble.w	402802 <_svfprintf_r+0xdce>
  402406:	3701      	adds	r7, #1
  402408:	3401      	adds	r4, #1
  40240a:	2301      	movs	r3, #1
  40240c:	2f07      	cmp	r7, #7
  40240e:	9427      	str	r4, [sp, #156]	; 0x9c
  402410:	9726      	str	r7, [sp, #152]	; 0x98
  402412:	f8c8 6000 	str.w	r6, [r8]
  402416:	f8c8 3004 	str.w	r3, [r8, #4]
  40241a:	f300 8203 	bgt.w	402824 <_svfprintf_r+0xdf0>
  40241e:	f108 0808 	add.w	r8, r8, #8
  402422:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402424:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  402426:	f8c8 3000 	str.w	r3, [r8]
  40242a:	3701      	adds	r7, #1
  40242c:	4414      	add	r4, r2
  40242e:	2f07      	cmp	r7, #7
  402430:	9427      	str	r4, [sp, #156]	; 0x9c
  402432:	9726      	str	r7, [sp, #152]	; 0x98
  402434:	f8c8 2004 	str.w	r2, [r8, #4]
  402438:	f300 8200 	bgt.w	40283c <_svfprintf_r+0xe08>
  40243c:	f108 0808 	add.w	r8, r8, #8
  402440:	a815      	add	r0, sp, #84	; 0x54
  402442:	c80d      	ldmia	r0, {r0, r2, r3}
  402444:	9914      	ldr	r1, [sp, #80]	; 0x50
  402446:	f003 fd7d 	bl	405f44 <__aeabi_dcmpeq>
  40244a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40244c:	2800      	cmp	r0, #0
  40244e:	f040 8101 	bne.w	402654 <_svfprintf_r+0xc20>
  402452:	3b01      	subs	r3, #1
  402454:	3701      	adds	r7, #1
  402456:	3601      	adds	r6, #1
  402458:	441c      	add	r4, r3
  40245a:	2f07      	cmp	r7, #7
  40245c:	9726      	str	r7, [sp, #152]	; 0x98
  40245e:	9427      	str	r4, [sp, #156]	; 0x9c
  402460:	f8c8 6000 	str.w	r6, [r8]
  402464:	f8c8 3004 	str.w	r3, [r8, #4]
  402468:	f300 8127 	bgt.w	4026ba <_svfprintf_r+0xc86>
  40246c:	f108 0808 	add.w	r8, r8, #8
  402470:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  402472:	f8c8 2004 	str.w	r2, [r8, #4]
  402476:	3701      	adds	r7, #1
  402478:	4414      	add	r4, r2
  40247a:	ab21      	add	r3, sp, #132	; 0x84
  40247c:	2f07      	cmp	r7, #7
  40247e:	9427      	str	r4, [sp, #156]	; 0x9c
  402480:	9726      	str	r7, [sp, #152]	; 0x98
  402482:	f8c8 3000 	str.w	r3, [r8]
  402486:	f77f acb3 	ble.w	401df0 <_svfprintf_r+0x3bc>
  40248a:	aa25      	add	r2, sp, #148	; 0x94
  40248c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40248e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402490:	f002 fcc4 	bl	404e1c <__ssprint_r>
  402494:	2800      	cmp	r0, #0
  402496:	f47f ab9f 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  40249a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40249c:	46c8      	mov	r8, r9
  40249e:	e4a9      	b.n	401df4 <_svfprintf_r+0x3c0>
  4024a0:	aa25      	add	r2, sp, #148	; 0x94
  4024a2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4024a4:	980c      	ldr	r0, [sp, #48]	; 0x30
  4024a6:	f002 fcb9 	bl	404e1c <__ssprint_r>
  4024aa:	2800      	cmp	r0, #0
  4024ac:	f43f aceb 	beq.w	401e86 <_svfprintf_r+0x452>
  4024b0:	f7ff bb92 	b.w	401bd8 <_svfprintf_r+0x1a4>
  4024b4:	f8dd b01c 	ldr.w	fp, [sp, #28]
  4024b8:	2b01      	cmp	r3, #1
  4024ba:	f000 8134 	beq.w	402726 <_svfprintf_r+0xcf2>
  4024be:	2b02      	cmp	r3, #2
  4024c0:	d125      	bne.n	40250e <_svfprintf_r+0xada>
  4024c2:	f8cd b01c 	str.w	fp, [sp, #28]
  4024c6:	2400      	movs	r4, #0
  4024c8:	2500      	movs	r5, #0
  4024ca:	e61e      	b.n	40210a <_svfprintf_r+0x6d6>
  4024cc:	aa25      	add	r2, sp, #148	; 0x94
  4024ce:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4024d0:	980c      	ldr	r0, [sp, #48]	; 0x30
  4024d2:	f002 fca3 	bl	404e1c <__ssprint_r>
  4024d6:	2800      	cmp	r0, #0
  4024d8:	f47f ab7e 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  4024dc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4024de:	46c8      	mov	r8, r9
  4024e0:	e475      	b.n	401dce <_svfprintf_r+0x39a>
  4024e2:	aa25      	add	r2, sp, #148	; 0x94
  4024e4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4024e6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4024e8:	f002 fc98 	bl	404e1c <__ssprint_r>
  4024ec:	2800      	cmp	r0, #0
  4024ee:	f47f ab73 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  4024f2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4024f4:	46c8      	mov	r8, r9
  4024f6:	e41b      	b.n	401d30 <_svfprintf_r+0x2fc>
  4024f8:	aa25      	add	r2, sp, #148	; 0x94
  4024fa:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4024fc:	980c      	ldr	r0, [sp, #48]	; 0x30
  4024fe:	f002 fc8d 	bl	404e1c <__ssprint_r>
  402502:	2800      	cmp	r0, #0
  402504:	f47f ab68 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  402508:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40250a:	46c8      	mov	r8, r9
  40250c:	e420      	b.n	401d50 <_svfprintf_r+0x31c>
  40250e:	f8cd b01c 	str.w	fp, [sp, #28]
  402512:	2400      	movs	r4, #0
  402514:	2500      	movs	r5, #0
  402516:	4649      	mov	r1, r9
  402518:	e000      	b.n	40251c <_svfprintf_r+0xae8>
  40251a:	4631      	mov	r1, r6
  40251c:	08e2      	lsrs	r2, r4, #3
  40251e:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402522:	08e8      	lsrs	r0, r5, #3
  402524:	f004 0307 	and.w	r3, r4, #7
  402528:	4605      	mov	r5, r0
  40252a:	4614      	mov	r4, r2
  40252c:	3330      	adds	r3, #48	; 0x30
  40252e:	ea54 0205 	orrs.w	r2, r4, r5
  402532:	f801 3c01 	strb.w	r3, [r1, #-1]
  402536:	f101 36ff 	add.w	r6, r1, #4294967295
  40253a:	d1ee      	bne.n	40251a <_svfprintf_r+0xae6>
  40253c:	9a07      	ldr	r2, [sp, #28]
  40253e:	07d2      	lsls	r2, r2, #31
  402540:	f57f adf3 	bpl.w	40212a <_svfprintf_r+0x6f6>
  402544:	2b30      	cmp	r3, #48	; 0x30
  402546:	f43f adf0 	beq.w	40212a <_svfprintf_r+0x6f6>
  40254a:	3902      	subs	r1, #2
  40254c:	2330      	movs	r3, #48	; 0x30
  40254e:	f806 3c01 	strb.w	r3, [r6, #-1]
  402552:	eba9 0301 	sub.w	r3, r9, r1
  402556:	930e      	str	r3, [sp, #56]	; 0x38
  402558:	460e      	mov	r6, r1
  40255a:	f7ff bb7b 	b.w	401c54 <_svfprintf_r+0x220>
  40255e:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402560:	2900      	cmp	r1, #0
  402562:	f340 822e 	ble.w	4029c2 <_svfprintf_r+0xf8e>
  402566:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402568:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  40256a:	4293      	cmp	r3, r2
  40256c:	bfa8      	it	ge
  40256e:	4613      	movge	r3, r2
  402570:	2b00      	cmp	r3, #0
  402572:	461f      	mov	r7, r3
  402574:	dd0d      	ble.n	402592 <_svfprintf_r+0xb5e>
  402576:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402578:	f8c8 6000 	str.w	r6, [r8]
  40257c:	3301      	adds	r3, #1
  40257e:	443c      	add	r4, r7
  402580:	2b07      	cmp	r3, #7
  402582:	9427      	str	r4, [sp, #156]	; 0x9c
  402584:	f8c8 7004 	str.w	r7, [r8, #4]
  402588:	9326      	str	r3, [sp, #152]	; 0x98
  40258a:	f300 831f 	bgt.w	402bcc <_svfprintf_r+0x1198>
  40258e:	f108 0808 	add.w	r8, r8, #8
  402592:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402594:	2f00      	cmp	r7, #0
  402596:	bfa8      	it	ge
  402598:	1bdb      	subge	r3, r3, r7
  40259a:	2b00      	cmp	r3, #0
  40259c:	461f      	mov	r7, r3
  40259e:	f340 80d6 	ble.w	40274e <_svfprintf_r+0xd1a>
  4025a2:	2f10      	cmp	r7, #16
  4025a4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4025a6:	4d31      	ldr	r5, [pc, #196]	; (40266c <_svfprintf_r+0xc38>)
  4025a8:	f340 81ed 	ble.w	402986 <_svfprintf_r+0xf52>
  4025ac:	4642      	mov	r2, r8
  4025ae:	4621      	mov	r1, r4
  4025b0:	46b0      	mov	r8, r6
  4025b2:	f04f 0b10 	mov.w	fp, #16
  4025b6:	462e      	mov	r6, r5
  4025b8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4025ba:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4025bc:	e004      	b.n	4025c8 <_svfprintf_r+0xb94>
  4025be:	3208      	adds	r2, #8
  4025c0:	3f10      	subs	r7, #16
  4025c2:	2f10      	cmp	r7, #16
  4025c4:	f340 81db 	ble.w	40297e <_svfprintf_r+0xf4a>
  4025c8:	3301      	adds	r3, #1
  4025ca:	3110      	adds	r1, #16
  4025cc:	2b07      	cmp	r3, #7
  4025ce:	9127      	str	r1, [sp, #156]	; 0x9c
  4025d0:	9326      	str	r3, [sp, #152]	; 0x98
  4025d2:	e882 0840 	stmia.w	r2, {r6, fp}
  4025d6:	ddf2      	ble.n	4025be <_svfprintf_r+0xb8a>
  4025d8:	aa25      	add	r2, sp, #148	; 0x94
  4025da:	4629      	mov	r1, r5
  4025dc:	4620      	mov	r0, r4
  4025de:	f002 fc1d 	bl	404e1c <__ssprint_r>
  4025e2:	2800      	cmp	r0, #0
  4025e4:	f47f aaf8 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  4025e8:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4025ea:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4025ec:	464a      	mov	r2, r9
  4025ee:	e7e7      	b.n	4025c0 <_svfprintf_r+0xb8c>
  4025f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4025f2:	930e      	str	r3, [sp, #56]	; 0x38
  4025f4:	464e      	mov	r6, r9
  4025f6:	f7ff bb2d 	b.w	401c54 <_svfprintf_r+0x220>
  4025fa:	2d00      	cmp	r5, #0
  4025fc:	bf08      	it	eq
  4025fe:	2c0a      	cmpeq	r4, #10
  402600:	f0c0 808f 	bcc.w	402722 <_svfprintf_r+0xcee>
  402604:	464e      	mov	r6, r9
  402606:	4620      	mov	r0, r4
  402608:	4629      	mov	r1, r5
  40260a:	220a      	movs	r2, #10
  40260c:	2300      	movs	r3, #0
  40260e:	f003 fd09 	bl	406024 <__aeabi_uldivmod>
  402612:	3230      	adds	r2, #48	; 0x30
  402614:	f806 2d01 	strb.w	r2, [r6, #-1]!
  402618:	4620      	mov	r0, r4
  40261a:	4629      	mov	r1, r5
  40261c:	2300      	movs	r3, #0
  40261e:	220a      	movs	r2, #10
  402620:	f003 fd00 	bl	406024 <__aeabi_uldivmod>
  402624:	4604      	mov	r4, r0
  402626:	460d      	mov	r5, r1
  402628:	ea54 0305 	orrs.w	r3, r4, r5
  40262c:	d1eb      	bne.n	402606 <_svfprintf_r+0xbd2>
  40262e:	eba9 0306 	sub.w	r3, r9, r6
  402632:	930e      	str	r3, [sp, #56]	; 0x38
  402634:	f7ff bb0e 	b.w	401c54 <_svfprintf_r+0x220>
  402638:	aa25      	add	r2, sp, #148	; 0x94
  40263a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40263c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40263e:	f002 fbed 	bl	404e1c <__ssprint_r>
  402642:	2800      	cmp	r0, #0
  402644:	f47f aac8 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  402648:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40264c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40264e:	46c8      	mov	r8, r9
  402650:	f7ff bb5e 	b.w	401d10 <_svfprintf_r+0x2dc>
  402654:	1e5e      	subs	r6, r3, #1
  402656:	2e00      	cmp	r6, #0
  402658:	f77f af0a 	ble.w	402470 <_svfprintf_r+0xa3c>
  40265c:	2e10      	cmp	r6, #16
  40265e:	4d03      	ldr	r5, [pc, #12]	; (40266c <_svfprintf_r+0xc38>)
  402660:	dd22      	ble.n	4026a8 <_svfprintf_r+0xc74>
  402662:	4622      	mov	r2, r4
  402664:	f04f 0b10 	mov.w	fp, #16
  402668:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40266a:	e006      	b.n	40267a <_svfprintf_r+0xc46>
  40266c:	00406fec 	.word	0x00406fec
  402670:	3e10      	subs	r6, #16
  402672:	2e10      	cmp	r6, #16
  402674:	f108 0808 	add.w	r8, r8, #8
  402678:	dd15      	ble.n	4026a6 <_svfprintf_r+0xc72>
  40267a:	3701      	adds	r7, #1
  40267c:	3210      	adds	r2, #16
  40267e:	2f07      	cmp	r7, #7
  402680:	9227      	str	r2, [sp, #156]	; 0x9c
  402682:	9726      	str	r7, [sp, #152]	; 0x98
  402684:	e888 0820 	stmia.w	r8, {r5, fp}
  402688:	ddf2      	ble.n	402670 <_svfprintf_r+0xc3c>
  40268a:	aa25      	add	r2, sp, #148	; 0x94
  40268c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40268e:	4620      	mov	r0, r4
  402690:	f002 fbc4 	bl	404e1c <__ssprint_r>
  402694:	2800      	cmp	r0, #0
  402696:	f47f aa9f 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  40269a:	3e10      	subs	r6, #16
  40269c:	2e10      	cmp	r6, #16
  40269e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4026a0:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4026a2:	46c8      	mov	r8, r9
  4026a4:	dce9      	bgt.n	40267a <_svfprintf_r+0xc46>
  4026a6:	4614      	mov	r4, r2
  4026a8:	3701      	adds	r7, #1
  4026aa:	4434      	add	r4, r6
  4026ac:	2f07      	cmp	r7, #7
  4026ae:	9427      	str	r4, [sp, #156]	; 0x9c
  4026b0:	9726      	str	r7, [sp, #152]	; 0x98
  4026b2:	e888 0060 	stmia.w	r8, {r5, r6}
  4026b6:	f77f aed9 	ble.w	40246c <_svfprintf_r+0xa38>
  4026ba:	aa25      	add	r2, sp, #148	; 0x94
  4026bc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4026be:	980c      	ldr	r0, [sp, #48]	; 0x30
  4026c0:	f002 fbac 	bl	404e1c <__ssprint_r>
  4026c4:	2800      	cmp	r0, #0
  4026c6:	f47f aa87 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  4026ca:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4026cc:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4026ce:	46c8      	mov	r8, r9
  4026d0:	e6ce      	b.n	402470 <_svfprintf_r+0xa3c>
  4026d2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4026d4:	6814      	ldr	r4, [r2, #0]
  4026d6:	4613      	mov	r3, r2
  4026d8:	3304      	adds	r3, #4
  4026da:	17e5      	asrs	r5, r4, #31
  4026dc:	930f      	str	r3, [sp, #60]	; 0x3c
  4026de:	4622      	mov	r2, r4
  4026e0:	462b      	mov	r3, r5
  4026e2:	e4fa      	b.n	4020da <_svfprintf_r+0x6a6>
  4026e4:	3204      	adds	r2, #4
  4026e6:	681c      	ldr	r4, [r3, #0]
  4026e8:	920f      	str	r2, [sp, #60]	; 0x3c
  4026ea:	2301      	movs	r3, #1
  4026ec:	2500      	movs	r5, #0
  4026ee:	f7ff ba94 	b.w	401c1a <_svfprintf_r+0x1e6>
  4026f2:	681c      	ldr	r4, [r3, #0]
  4026f4:	3304      	adds	r3, #4
  4026f6:	930f      	str	r3, [sp, #60]	; 0x3c
  4026f8:	2500      	movs	r5, #0
  4026fa:	e421      	b.n	401f40 <_svfprintf_r+0x50c>
  4026fc:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4026fe:	460a      	mov	r2, r1
  402700:	3204      	adds	r2, #4
  402702:	680c      	ldr	r4, [r1, #0]
  402704:	920f      	str	r2, [sp, #60]	; 0x3c
  402706:	2500      	movs	r5, #0
  402708:	f7ff ba87 	b.w	401c1a <_svfprintf_r+0x1e6>
  40270c:	4614      	mov	r4, r2
  40270e:	3301      	adds	r3, #1
  402710:	4434      	add	r4, r6
  402712:	2b07      	cmp	r3, #7
  402714:	9427      	str	r4, [sp, #156]	; 0x9c
  402716:	9326      	str	r3, [sp, #152]	; 0x98
  402718:	e888 0060 	stmia.w	r8, {r5, r6}
  40271c:	f77f ab68 	ble.w	401df0 <_svfprintf_r+0x3bc>
  402720:	e6b3      	b.n	40248a <_svfprintf_r+0xa56>
  402722:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402726:	f8cd b01c 	str.w	fp, [sp, #28]
  40272a:	ae42      	add	r6, sp, #264	; 0x108
  40272c:	3430      	adds	r4, #48	; 0x30
  40272e:	2301      	movs	r3, #1
  402730:	f806 4d41 	strb.w	r4, [r6, #-65]!
  402734:	930e      	str	r3, [sp, #56]	; 0x38
  402736:	f7ff ba8d 	b.w	401c54 <_svfprintf_r+0x220>
  40273a:	aa25      	add	r2, sp, #148	; 0x94
  40273c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40273e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402740:	f002 fb6c 	bl	404e1c <__ssprint_r>
  402744:	2800      	cmp	r0, #0
  402746:	f47f aa47 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  40274a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40274c:	46c8      	mov	r8, r9
  40274e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402750:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402752:	429a      	cmp	r2, r3
  402754:	db44      	blt.n	4027e0 <_svfprintf_r+0xdac>
  402756:	9b07      	ldr	r3, [sp, #28]
  402758:	07d9      	lsls	r1, r3, #31
  40275a:	d441      	bmi.n	4027e0 <_svfprintf_r+0xdac>
  40275c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40275e:	9812      	ldr	r0, [sp, #72]	; 0x48
  402760:	1a9a      	subs	r2, r3, r2
  402762:	1a1d      	subs	r5, r3, r0
  402764:	4295      	cmp	r5, r2
  402766:	bfa8      	it	ge
  402768:	4615      	movge	r5, r2
  40276a:	2d00      	cmp	r5, #0
  40276c:	dd0e      	ble.n	40278c <_svfprintf_r+0xd58>
  40276e:	9926      	ldr	r1, [sp, #152]	; 0x98
  402770:	f8c8 5004 	str.w	r5, [r8, #4]
  402774:	3101      	adds	r1, #1
  402776:	4406      	add	r6, r0
  402778:	442c      	add	r4, r5
  40277a:	2907      	cmp	r1, #7
  40277c:	f8c8 6000 	str.w	r6, [r8]
  402780:	9427      	str	r4, [sp, #156]	; 0x9c
  402782:	9126      	str	r1, [sp, #152]	; 0x98
  402784:	f300 823b 	bgt.w	402bfe <_svfprintf_r+0x11ca>
  402788:	f108 0808 	add.w	r8, r8, #8
  40278c:	2d00      	cmp	r5, #0
  40278e:	bfac      	ite	ge
  402790:	1b56      	subge	r6, r2, r5
  402792:	4616      	movlt	r6, r2
  402794:	2e00      	cmp	r6, #0
  402796:	f77f ab2d 	ble.w	401df4 <_svfprintf_r+0x3c0>
  40279a:	2e10      	cmp	r6, #16
  40279c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40279e:	4db0      	ldr	r5, [pc, #704]	; (402a60 <_svfprintf_r+0x102c>)
  4027a0:	ddb5      	ble.n	40270e <_svfprintf_r+0xcda>
  4027a2:	4622      	mov	r2, r4
  4027a4:	2710      	movs	r7, #16
  4027a6:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  4027aa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  4027ac:	e004      	b.n	4027b8 <_svfprintf_r+0xd84>
  4027ae:	f108 0808 	add.w	r8, r8, #8
  4027b2:	3e10      	subs	r6, #16
  4027b4:	2e10      	cmp	r6, #16
  4027b6:	dda9      	ble.n	40270c <_svfprintf_r+0xcd8>
  4027b8:	3301      	adds	r3, #1
  4027ba:	3210      	adds	r2, #16
  4027bc:	2b07      	cmp	r3, #7
  4027be:	9227      	str	r2, [sp, #156]	; 0x9c
  4027c0:	9326      	str	r3, [sp, #152]	; 0x98
  4027c2:	e888 00a0 	stmia.w	r8, {r5, r7}
  4027c6:	ddf2      	ble.n	4027ae <_svfprintf_r+0xd7a>
  4027c8:	aa25      	add	r2, sp, #148	; 0x94
  4027ca:	4621      	mov	r1, r4
  4027cc:	4658      	mov	r0, fp
  4027ce:	f002 fb25 	bl	404e1c <__ssprint_r>
  4027d2:	2800      	cmp	r0, #0
  4027d4:	f47f aa00 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  4027d8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4027da:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4027dc:	46c8      	mov	r8, r9
  4027de:	e7e8      	b.n	4027b2 <_svfprintf_r+0xd7e>
  4027e0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4027e2:	9819      	ldr	r0, [sp, #100]	; 0x64
  4027e4:	991a      	ldr	r1, [sp, #104]	; 0x68
  4027e6:	f8c8 1000 	str.w	r1, [r8]
  4027ea:	3301      	adds	r3, #1
  4027ec:	4404      	add	r4, r0
  4027ee:	2b07      	cmp	r3, #7
  4027f0:	9427      	str	r4, [sp, #156]	; 0x9c
  4027f2:	f8c8 0004 	str.w	r0, [r8, #4]
  4027f6:	9326      	str	r3, [sp, #152]	; 0x98
  4027f8:	f300 81f5 	bgt.w	402be6 <_svfprintf_r+0x11b2>
  4027fc:	f108 0808 	add.w	r8, r8, #8
  402800:	e7ac      	b.n	40275c <_svfprintf_r+0xd28>
  402802:	9b07      	ldr	r3, [sp, #28]
  402804:	07da      	lsls	r2, r3, #31
  402806:	f53f adfe 	bmi.w	402406 <_svfprintf_r+0x9d2>
  40280a:	3701      	adds	r7, #1
  40280c:	3401      	adds	r4, #1
  40280e:	2301      	movs	r3, #1
  402810:	2f07      	cmp	r7, #7
  402812:	9427      	str	r4, [sp, #156]	; 0x9c
  402814:	9726      	str	r7, [sp, #152]	; 0x98
  402816:	f8c8 6000 	str.w	r6, [r8]
  40281a:	f8c8 3004 	str.w	r3, [r8, #4]
  40281e:	f77f ae25 	ble.w	40246c <_svfprintf_r+0xa38>
  402822:	e74a      	b.n	4026ba <_svfprintf_r+0xc86>
  402824:	aa25      	add	r2, sp, #148	; 0x94
  402826:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402828:	980c      	ldr	r0, [sp, #48]	; 0x30
  40282a:	f002 faf7 	bl	404e1c <__ssprint_r>
  40282e:	2800      	cmp	r0, #0
  402830:	f47f a9d2 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  402834:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402836:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402838:	46c8      	mov	r8, r9
  40283a:	e5f2      	b.n	402422 <_svfprintf_r+0x9ee>
  40283c:	aa25      	add	r2, sp, #148	; 0x94
  40283e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402840:	980c      	ldr	r0, [sp, #48]	; 0x30
  402842:	f002 faeb 	bl	404e1c <__ssprint_r>
  402846:	2800      	cmp	r0, #0
  402848:	f47f a9c6 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  40284c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40284e:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402850:	46c8      	mov	r8, r9
  402852:	e5f5      	b.n	402440 <_svfprintf_r+0xa0c>
  402854:	464e      	mov	r6, r9
  402856:	f7ff b9fd 	b.w	401c54 <_svfprintf_r+0x220>
  40285a:	aa25      	add	r2, sp, #148	; 0x94
  40285c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40285e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402860:	f002 fadc 	bl	404e1c <__ssprint_r>
  402864:	2800      	cmp	r0, #0
  402866:	f47f a9b7 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  40286a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40286c:	46c8      	mov	r8, r9
  40286e:	f7ff ba72 	b.w	401d56 <_svfprintf_r+0x322>
  402872:	9c15      	ldr	r4, [sp, #84]	; 0x54
  402874:	4622      	mov	r2, r4
  402876:	4620      	mov	r0, r4
  402878:	9c14      	ldr	r4, [sp, #80]	; 0x50
  40287a:	4623      	mov	r3, r4
  40287c:	4621      	mov	r1, r4
  40287e:	f003 fb93 	bl	405fa8 <__aeabi_dcmpun>
  402882:	2800      	cmp	r0, #0
  402884:	f040 8286 	bne.w	402d94 <_svfprintf_r+0x1360>
  402888:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40288a:	3301      	adds	r3, #1
  40288c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40288e:	f023 0320 	bic.w	r3, r3, #32
  402892:	930e      	str	r3, [sp, #56]	; 0x38
  402894:	f000 81e2 	beq.w	402c5c <_svfprintf_r+0x1228>
  402898:	2b47      	cmp	r3, #71	; 0x47
  40289a:	f000 811e 	beq.w	402ada <_svfprintf_r+0x10a6>
  40289e:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  4028a2:	9307      	str	r3, [sp, #28]
  4028a4:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4028a6:	1e1f      	subs	r7, r3, #0
  4028a8:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4028aa:	9308      	str	r3, [sp, #32]
  4028ac:	bfbb      	ittet	lt
  4028ae:	463b      	movlt	r3, r7
  4028b0:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  4028b4:	2300      	movge	r3, #0
  4028b6:	232d      	movlt	r3, #45	; 0x2d
  4028b8:	9310      	str	r3, [sp, #64]	; 0x40
  4028ba:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4028bc:	2b66      	cmp	r3, #102	; 0x66
  4028be:	f000 81bb 	beq.w	402c38 <_svfprintf_r+0x1204>
  4028c2:	2b46      	cmp	r3, #70	; 0x46
  4028c4:	f000 80df 	beq.w	402a86 <_svfprintf_r+0x1052>
  4028c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4028ca:	9a08      	ldr	r2, [sp, #32]
  4028cc:	2b45      	cmp	r3, #69	; 0x45
  4028ce:	bf0c      	ite	eq
  4028d0:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  4028d2:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  4028d4:	a823      	add	r0, sp, #140	; 0x8c
  4028d6:	a920      	add	r1, sp, #128	; 0x80
  4028d8:	bf08      	it	eq
  4028da:	1c5d      	addeq	r5, r3, #1
  4028dc:	9004      	str	r0, [sp, #16]
  4028de:	9103      	str	r1, [sp, #12]
  4028e0:	a81f      	add	r0, sp, #124	; 0x7c
  4028e2:	2102      	movs	r1, #2
  4028e4:	463b      	mov	r3, r7
  4028e6:	9002      	str	r0, [sp, #8]
  4028e8:	9501      	str	r5, [sp, #4]
  4028ea:	9100      	str	r1, [sp, #0]
  4028ec:	980c      	ldr	r0, [sp, #48]	; 0x30
  4028ee:	f000 fb73 	bl	402fd8 <_dtoa_r>
  4028f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4028f4:	2b67      	cmp	r3, #103	; 0x67
  4028f6:	4606      	mov	r6, r0
  4028f8:	f040 81e0 	bne.w	402cbc <_svfprintf_r+0x1288>
  4028fc:	f01b 0f01 	tst.w	fp, #1
  402900:	f000 8246 	beq.w	402d90 <_svfprintf_r+0x135c>
  402904:	1974      	adds	r4, r6, r5
  402906:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402908:	9808      	ldr	r0, [sp, #32]
  40290a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  40290c:	4639      	mov	r1, r7
  40290e:	f003 fb19 	bl	405f44 <__aeabi_dcmpeq>
  402912:	2800      	cmp	r0, #0
  402914:	f040 8165 	bne.w	402be2 <_svfprintf_r+0x11ae>
  402918:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40291a:	42a3      	cmp	r3, r4
  40291c:	d206      	bcs.n	40292c <_svfprintf_r+0xef8>
  40291e:	2130      	movs	r1, #48	; 0x30
  402920:	1c5a      	adds	r2, r3, #1
  402922:	9223      	str	r2, [sp, #140]	; 0x8c
  402924:	7019      	strb	r1, [r3, #0]
  402926:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402928:	429c      	cmp	r4, r3
  40292a:	d8f9      	bhi.n	402920 <_svfprintf_r+0xeec>
  40292c:	1b9b      	subs	r3, r3, r6
  40292e:	9313      	str	r3, [sp, #76]	; 0x4c
  402930:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402932:	2b47      	cmp	r3, #71	; 0x47
  402934:	f000 80e9 	beq.w	402b0a <_svfprintf_r+0x10d6>
  402938:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40293a:	2b65      	cmp	r3, #101	; 0x65
  40293c:	f340 81cd 	ble.w	402cda <_svfprintf_r+0x12a6>
  402940:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402942:	2b66      	cmp	r3, #102	; 0x66
  402944:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402946:	9312      	str	r3, [sp, #72]	; 0x48
  402948:	f000 819e 	beq.w	402c88 <_svfprintf_r+0x1254>
  40294c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40294e:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402950:	4619      	mov	r1, r3
  402952:	4291      	cmp	r1, r2
  402954:	f300 818a 	bgt.w	402c6c <_svfprintf_r+0x1238>
  402958:	f01b 0f01 	tst.w	fp, #1
  40295c:	f040 8213 	bne.w	402d86 <_svfprintf_r+0x1352>
  402960:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  402964:	9308      	str	r3, [sp, #32]
  402966:	2367      	movs	r3, #103	; 0x67
  402968:	920e      	str	r2, [sp, #56]	; 0x38
  40296a:	9311      	str	r3, [sp, #68]	; 0x44
  40296c:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40296e:	2b00      	cmp	r3, #0
  402970:	f040 80c4 	bne.w	402afc <_svfprintf_r+0x10c8>
  402974:	930a      	str	r3, [sp, #40]	; 0x28
  402976:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40297a:	f7ff b973 	b.w	401c64 <_svfprintf_r+0x230>
  40297e:	4635      	mov	r5, r6
  402980:	460c      	mov	r4, r1
  402982:	4646      	mov	r6, r8
  402984:	4690      	mov	r8, r2
  402986:	3301      	adds	r3, #1
  402988:	443c      	add	r4, r7
  40298a:	2b07      	cmp	r3, #7
  40298c:	9427      	str	r4, [sp, #156]	; 0x9c
  40298e:	9326      	str	r3, [sp, #152]	; 0x98
  402990:	e888 00a0 	stmia.w	r8, {r5, r7}
  402994:	f73f aed1 	bgt.w	40273a <_svfprintf_r+0xd06>
  402998:	f108 0808 	add.w	r8, r8, #8
  40299c:	e6d7      	b.n	40274e <_svfprintf_r+0xd1a>
  40299e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4029a0:	6813      	ldr	r3, [r2, #0]
  4029a2:	3204      	adds	r2, #4
  4029a4:	920f      	str	r2, [sp, #60]	; 0x3c
  4029a6:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4029a8:	601a      	str	r2, [r3, #0]
  4029aa:	f7ff b86a 	b.w	401a82 <_svfprintf_r+0x4e>
  4029ae:	aa25      	add	r2, sp, #148	; 0x94
  4029b0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4029b2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4029b4:	f002 fa32 	bl	404e1c <__ssprint_r>
  4029b8:	2800      	cmp	r0, #0
  4029ba:	f47f a90d 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  4029be:	46c8      	mov	r8, r9
  4029c0:	e48d      	b.n	4022de <_svfprintf_r+0x8aa>
  4029c2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4029c4:	4a27      	ldr	r2, [pc, #156]	; (402a64 <_svfprintf_r+0x1030>)
  4029c6:	f8c8 2000 	str.w	r2, [r8]
  4029ca:	3301      	adds	r3, #1
  4029cc:	3401      	adds	r4, #1
  4029ce:	2201      	movs	r2, #1
  4029d0:	2b07      	cmp	r3, #7
  4029d2:	9427      	str	r4, [sp, #156]	; 0x9c
  4029d4:	9326      	str	r3, [sp, #152]	; 0x98
  4029d6:	f8c8 2004 	str.w	r2, [r8, #4]
  4029da:	dc72      	bgt.n	402ac2 <_svfprintf_r+0x108e>
  4029dc:	f108 0808 	add.w	r8, r8, #8
  4029e0:	b929      	cbnz	r1, 4029ee <_svfprintf_r+0xfba>
  4029e2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4029e4:	b91b      	cbnz	r3, 4029ee <_svfprintf_r+0xfba>
  4029e6:	9b07      	ldr	r3, [sp, #28]
  4029e8:	07d8      	lsls	r0, r3, #31
  4029ea:	f57f aa03 	bpl.w	401df4 <_svfprintf_r+0x3c0>
  4029ee:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4029f0:	9819      	ldr	r0, [sp, #100]	; 0x64
  4029f2:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  4029f4:	f8c8 2000 	str.w	r2, [r8]
  4029f8:	3301      	adds	r3, #1
  4029fa:	4602      	mov	r2, r0
  4029fc:	4422      	add	r2, r4
  4029fe:	2b07      	cmp	r3, #7
  402a00:	9227      	str	r2, [sp, #156]	; 0x9c
  402a02:	f8c8 0004 	str.w	r0, [r8, #4]
  402a06:	9326      	str	r3, [sp, #152]	; 0x98
  402a08:	f300 818d 	bgt.w	402d26 <_svfprintf_r+0x12f2>
  402a0c:	f108 0808 	add.w	r8, r8, #8
  402a10:	2900      	cmp	r1, #0
  402a12:	f2c0 8165 	blt.w	402ce0 <_svfprintf_r+0x12ac>
  402a16:	9913      	ldr	r1, [sp, #76]	; 0x4c
  402a18:	f8c8 6000 	str.w	r6, [r8]
  402a1c:	3301      	adds	r3, #1
  402a1e:	188c      	adds	r4, r1, r2
  402a20:	2b07      	cmp	r3, #7
  402a22:	9427      	str	r4, [sp, #156]	; 0x9c
  402a24:	9326      	str	r3, [sp, #152]	; 0x98
  402a26:	f8c8 1004 	str.w	r1, [r8, #4]
  402a2a:	f77f a9e1 	ble.w	401df0 <_svfprintf_r+0x3bc>
  402a2e:	e52c      	b.n	40248a <_svfprintf_r+0xa56>
  402a30:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402a32:	9909      	ldr	r1, [sp, #36]	; 0x24
  402a34:	6813      	ldr	r3, [r2, #0]
  402a36:	17cd      	asrs	r5, r1, #31
  402a38:	4608      	mov	r0, r1
  402a3a:	3204      	adds	r2, #4
  402a3c:	4629      	mov	r1, r5
  402a3e:	920f      	str	r2, [sp, #60]	; 0x3c
  402a40:	e9c3 0100 	strd	r0, r1, [r3]
  402a44:	f7ff b81d 	b.w	401a82 <_svfprintf_r+0x4e>
  402a48:	aa25      	add	r2, sp, #148	; 0x94
  402a4a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a4c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a4e:	f002 f9e5 	bl	404e1c <__ssprint_r>
  402a52:	2800      	cmp	r0, #0
  402a54:	f47f a8c0 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  402a58:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402a5a:	46c8      	mov	r8, r9
  402a5c:	e458      	b.n	402310 <_svfprintf_r+0x8dc>
  402a5e:	bf00      	nop
  402a60:	00406fec 	.word	0x00406fec
  402a64:	00406fd8 	.word	0x00406fd8
  402a68:	2140      	movs	r1, #64	; 0x40
  402a6a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a6c:	f001 fa0a 	bl	403e84 <_malloc_r>
  402a70:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402a72:	6010      	str	r0, [r2, #0]
  402a74:	6110      	str	r0, [r2, #16]
  402a76:	2800      	cmp	r0, #0
  402a78:	f000 81f2 	beq.w	402e60 <_svfprintf_r+0x142c>
  402a7c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402a7e:	2340      	movs	r3, #64	; 0x40
  402a80:	6153      	str	r3, [r2, #20]
  402a82:	f7fe bfee 	b.w	401a62 <_svfprintf_r+0x2e>
  402a86:	a823      	add	r0, sp, #140	; 0x8c
  402a88:	a920      	add	r1, sp, #128	; 0x80
  402a8a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  402a8c:	9004      	str	r0, [sp, #16]
  402a8e:	9103      	str	r1, [sp, #12]
  402a90:	a81f      	add	r0, sp, #124	; 0x7c
  402a92:	2103      	movs	r1, #3
  402a94:	9002      	str	r0, [sp, #8]
  402a96:	9a08      	ldr	r2, [sp, #32]
  402a98:	9401      	str	r4, [sp, #4]
  402a9a:	463b      	mov	r3, r7
  402a9c:	9100      	str	r1, [sp, #0]
  402a9e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402aa0:	f000 fa9a 	bl	402fd8 <_dtoa_r>
  402aa4:	4625      	mov	r5, r4
  402aa6:	4606      	mov	r6, r0
  402aa8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402aaa:	2b46      	cmp	r3, #70	; 0x46
  402aac:	eb06 0405 	add.w	r4, r6, r5
  402ab0:	f47f af29 	bne.w	402906 <_svfprintf_r+0xed2>
  402ab4:	7833      	ldrb	r3, [r6, #0]
  402ab6:	2b30      	cmp	r3, #48	; 0x30
  402ab8:	f000 8178 	beq.w	402dac <_svfprintf_r+0x1378>
  402abc:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  402abe:	442c      	add	r4, r5
  402ac0:	e721      	b.n	402906 <_svfprintf_r+0xed2>
  402ac2:	aa25      	add	r2, sp, #148	; 0x94
  402ac4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ac6:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ac8:	f002 f9a8 	bl	404e1c <__ssprint_r>
  402acc:	2800      	cmp	r0, #0
  402ace:	f47f a883 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  402ad2:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402ad4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402ad6:	46c8      	mov	r8, r9
  402ad8:	e782      	b.n	4029e0 <_svfprintf_r+0xfac>
  402ada:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402adc:	2b00      	cmp	r3, #0
  402ade:	bf08      	it	eq
  402ae0:	2301      	moveq	r3, #1
  402ae2:	930a      	str	r3, [sp, #40]	; 0x28
  402ae4:	e6db      	b.n	40289e <_svfprintf_r+0xe6a>
  402ae6:	4630      	mov	r0, r6
  402ae8:	940a      	str	r4, [sp, #40]	; 0x28
  402aea:	f002 f929 	bl	404d40 <strlen>
  402aee:	950f      	str	r5, [sp, #60]	; 0x3c
  402af0:	900e      	str	r0, [sp, #56]	; 0x38
  402af2:	f8cd b01c 	str.w	fp, [sp, #28]
  402af6:	4603      	mov	r3, r0
  402af8:	f7ff b9f9 	b.w	401eee <_svfprintf_r+0x4ba>
  402afc:	272d      	movs	r7, #45	; 0x2d
  402afe:	2300      	movs	r3, #0
  402b00:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402b04:	930a      	str	r3, [sp, #40]	; 0x28
  402b06:	f7ff b8ae 	b.w	401c66 <_svfprintf_r+0x232>
  402b0a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402b0c:	9312      	str	r3, [sp, #72]	; 0x48
  402b0e:	461a      	mov	r2, r3
  402b10:	3303      	adds	r3, #3
  402b12:	db04      	blt.n	402b1e <_svfprintf_r+0x10ea>
  402b14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402b16:	4619      	mov	r1, r3
  402b18:	4291      	cmp	r1, r2
  402b1a:	f6bf af17 	bge.w	40294c <_svfprintf_r+0xf18>
  402b1e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402b20:	3b02      	subs	r3, #2
  402b22:	9311      	str	r3, [sp, #68]	; 0x44
  402b24:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  402b28:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  402b2c:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402b2e:	3b01      	subs	r3, #1
  402b30:	2b00      	cmp	r3, #0
  402b32:	931f      	str	r3, [sp, #124]	; 0x7c
  402b34:	bfbd      	ittte	lt
  402b36:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  402b38:	f1c3 0301 	rsblt	r3, r3, #1
  402b3c:	222d      	movlt	r2, #45	; 0x2d
  402b3e:	222b      	movge	r2, #43	; 0x2b
  402b40:	2b09      	cmp	r3, #9
  402b42:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  402b46:	f340 8116 	ble.w	402d76 <_svfprintf_r+0x1342>
  402b4a:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  402b4e:	4620      	mov	r0, r4
  402b50:	4dab      	ldr	r5, [pc, #684]	; (402e00 <_svfprintf_r+0x13cc>)
  402b52:	e000      	b.n	402b56 <_svfprintf_r+0x1122>
  402b54:	4610      	mov	r0, r2
  402b56:	fb85 1203 	smull	r1, r2, r5, r3
  402b5a:	17d9      	asrs	r1, r3, #31
  402b5c:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  402b60:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  402b64:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  402b68:	3230      	adds	r2, #48	; 0x30
  402b6a:	2909      	cmp	r1, #9
  402b6c:	f800 2c01 	strb.w	r2, [r0, #-1]
  402b70:	460b      	mov	r3, r1
  402b72:	f100 32ff 	add.w	r2, r0, #4294967295
  402b76:	dced      	bgt.n	402b54 <_svfprintf_r+0x1120>
  402b78:	3330      	adds	r3, #48	; 0x30
  402b7a:	3802      	subs	r0, #2
  402b7c:	b2d9      	uxtb	r1, r3
  402b7e:	4284      	cmp	r4, r0
  402b80:	f802 1c01 	strb.w	r1, [r2, #-1]
  402b84:	f240 8165 	bls.w	402e52 <_svfprintf_r+0x141e>
  402b88:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  402b8c:	4613      	mov	r3, r2
  402b8e:	e001      	b.n	402b94 <_svfprintf_r+0x1160>
  402b90:	f813 1b01 	ldrb.w	r1, [r3], #1
  402b94:	f800 1b01 	strb.w	r1, [r0], #1
  402b98:	42a3      	cmp	r3, r4
  402b9a:	d1f9      	bne.n	402b90 <_svfprintf_r+0x115c>
  402b9c:	3301      	adds	r3, #1
  402b9e:	1a9b      	subs	r3, r3, r2
  402ba0:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  402ba4:	4413      	add	r3, r2
  402ba6:	aa21      	add	r2, sp, #132	; 0x84
  402ba8:	1a9b      	subs	r3, r3, r2
  402baa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402bac:	931b      	str	r3, [sp, #108]	; 0x6c
  402bae:	2a01      	cmp	r2, #1
  402bb0:	4413      	add	r3, r2
  402bb2:	930e      	str	r3, [sp, #56]	; 0x38
  402bb4:	f340 8119 	ble.w	402dea <_svfprintf_r+0x13b6>
  402bb8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402bba:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402bbc:	4413      	add	r3, r2
  402bbe:	930e      	str	r3, [sp, #56]	; 0x38
  402bc0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402bc4:	9308      	str	r3, [sp, #32]
  402bc6:	2300      	movs	r3, #0
  402bc8:	9312      	str	r3, [sp, #72]	; 0x48
  402bca:	e6cf      	b.n	40296c <_svfprintf_r+0xf38>
  402bcc:	aa25      	add	r2, sp, #148	; 0x94
  402bce:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402bd0:	980c      	ldr	r0, [sp, #48]	; 0x30
  402bd2:	f002 f923 	bl	404e1c <__ssprint_r>
  402bd6:	2800      	cmp	r0, #0
  402bd8:	f47e affe 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  402bdc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402bde:	46c8      	mov	r8, r9
  402be0:	e4d7      	b.n	402592 <_svfprintf_r+0xb5e>
  402be2:	4623      	mov	r3, r4
  402be4:	e6a2      	b.n	40292c <_svfprintf_r+0xef8>
  402be6:	aa25      	add	r2, sp, #148	; 0x94
  402be8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402bea:	980c      	ldr	r0, [sp, #48]	; 0x30
  402bec:	f002 f916 	bl	404e1c <__ssprint_r>
  402bf0:	2800      	cmp	r0, #0
  402bf2:	f47e aff1 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  402bf6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402bf8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402bfa:	46c8      	mov	r8, r9
  402bfc:	e5ae      	b.n	40275c <_svfprintf_r+0xd28>
  402bfe:	aa25      	add	r2, sp, #148	; 0x94
  402c00:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c02:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c04:	f002 f90a 	bl	404e1c <__ssprint_r>
  402c08:	2800      	cmp	r0, #0
  402c0a:	f47e afe5 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  402c0e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402c10:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402c12:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c14:	1a9a      	subs	r2, r3, r2
  402c16:	46c8      	mov	r8, r9
  402c18:	e5b8      	b.n	40278c <_svfprintf_r+0xd58>
  402c1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402c1c:	9612      	str	r6, [sp, #72]	; 0x48
  402c1e:	2b06      	cmp	r3, #6
  402c20:	bf28      	it	cs
  402c22:	2306      	movcs	r3, #6
  402c24:	960a      	str	r6, [sp, #40]	; 0x28
  402c26:	4637      	mov	r7, r6
  402c28:	9308      	str	r3, [sp, #32]
  402c2a:	950f      	str	r5, [sp, #60]	; 0x3c
  402c2c:	f8cd b01c 	str.w	fp, [sp, #28]
  402c30:	930e      	str	r3, [sp, #56]	; 0x38
  402c32:	4e74      	ldr	r6, [pc, #464]	; (402e04 <_svfprintf_r+0x13d0>)
  402c34:	f7ff b816 	b.w	401c64 <_svfprintf_r+0x230>
  402c38:	a823      	add	r0, sp, #140	; 0x8c
  402c3a:	a920      	add	r1, sp, #128	; 0x80
  402c3c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  402c3e:	9004      	str	r0, [sp, #16]
  402c40:	9103      	str	r1, [sp, #12]
  402c42:	a81f      	add	r0, sp, #124	; 0x7c
  402c44:	2103      	movs	r1, #3
  402c46:	9002      	str	r0, [sp, #8]
  402c48:	9a08      	ldr	r2, [sp, #32]
  402c4a:	9501      	str	r5, [sp, #4]
  402c4c:	463b      	mov	r3, r7
  402c4e:	9100      	str	r1, [sp, #0]
  402c50:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c52:	f000 f9c1 	bl	402fd8 <_dtoa_r>
  402c56:	4606      	mov	r6, r0
  402c58:	1944      	adds	r4, r0, r5
  402c5a:	e72b      	b.n	402ab4 <_svfprintf_r+0x1080>
  402c5c:	2306      	movs	r3, #6
  402c5e:	930a      	str	r3, [sp, #40]	; 0x28
  402c60:	e61d      	b.n	40289e <_svfprintf_r+0xe6a>
  402c62:	272d      	movs	r7, #45	; 0x2d
  402c64:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402c68:	f7ff bacd 	b.w	402206 <_svfprintf_r+0x7d2>
  402c6c:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402c6e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402c70:	4413      	add	r3, r2
  402c72:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402c74:	930e      	str	r3, [sp, #56]	; 0x38
  402c76:	2a00      	cmp	r2, #0
  402c78:	f340 80b0 	ble.w	402ddc <_svfprintf_r+0x13a8>
  402c7c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402c80:	9308      	str	r3, [sp, #32]
  402c82:	2367      	movs	r3, #103	; 0x67
  402c84:	9311      	str	r3, [sp, #68]	; 0x44
  402c86:	e671      	b.n	40296c <_svfprintf_r+0xf38>
  402c88:	2b00      	cmp	r3, #0
  402c8a:	f340 80c3 	ble.w	402e14 <_svfprintf_r+0x13e0>
  402c8e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402c90:	2a00      	cmp	r2, #0
  402c92:	f040 8099 	bne.w	402dc8 <_svfprintf_r+0x1394>
  402c96:	f01b 0f01 	tst.w	fp, #1
  402c9a:	f040 8095 	bne.w	402dc8 <_svfprintf_r+0x1394>
  402c9e:	9308      	str	r3, [sp, #32]
  402ca0:	930e      	str	r3, [sp, #56]	; 0x38
  402ca2:	e663      	b.n	40296c <_svfprintf_r+0xf38>
  402ca4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402ca6:	9308      	str	r3, [sp, #32]
  402ca8:	930e      	str	r3, [sp, #56]	; 0x38
  402caa:	900a      	str	r0, [sp, #40]	; 0x28
  402cac:	950f      	str	r5, [sp, #60]	; 0x3c
  402cae:	f8cd b01c 	str.w	fp, [sp, #28]
  402cb2:	9012      	str	r0, [sp, #72]	; 0x48
  402cb4:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402cb8:	f7fe bfd4 	b.w	401c64 <_svfprintf_r+0x230>
  402cbc:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402cbe:	2b47      	cmp	r3, #71	; 0x47
  402cc0:	f47f ae20 	bne.w	402904 <_svfprintf_r+0xed0>
  402cc4:	f01b 0f01 	tst.w	fp, #1
  402cc8:	f47f aeee 	bne.w	402aa8 <_svfprintf_r+0x1074>
  402ccc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402cce:	1b9b      	subs	r3, r3, r6
  402cd0:	9313      	str	r3, [sp, #76]	; 0x4c
  402cd2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402cd4:	2b47      	cmp	r3, #71	; 0x47
  402cd6:	f43f af18 	beq.w	402b0a <_svfprintf_r+0x10d6>
  402cda:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402cdc:	9312      	str	r3, [sp, #72]	; 0x48
  402cde:	e721      	b.n	402b24 <_svfprintf_r+0x10f0>
  402ce0:	424f      	negs	r7, r1
  402ce2:	3110      	adds	r1, #16
  402ce4:	4d48      	ldr	r5, [pc, #288]	; (402e08 <_svfprintf_r+0x13d4>)
  402ce6:	da2f      	bge.n	402d48 <_svfprintf_r+0x1314>
  402ce8:	2410      	movs	r4, #16
  402cea:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402cee:	e004      	b.n	402cfa <_svfprintf_r+0x12c6>
  402cf0:	f108 0808 	add.w	r8, r8, #8
  402cf4:	3f10      	subs	r7, #16
  402cf6:	2f10      	cmp	r7, #16
  402cf8:	dd26      	ble.n	402d48 <_svfprintf_r+0x1314>
  402cfa:	3301      	adds	r3, #1
  402cfc:	3210      	adds	r2, #16
  402cfe:	2b07      	cmp	r3, #7
  402d00:	9227      	str	r2, [sp, #156]	; 0x9c
  402d02:	9326      	str	r3, [sp, #152]	; 0x98
  402d04:	f8c8 5000 	str.w	r5, [r8]
  402d08:	f8c8 4004 	str.w	r4, [r8, #4]
  402d0c:	ddf0      	ble.n	402cf0 <_svfprintf_r+0x12bc>
  402d0e:	aa25      	add	r2, sp, #148	; 0x94
  402d10:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d12:	4658      	mov	r0, fp
  402d14:	f002 f882 	bl	404e1c <__ssprint_r>
  402d18:	2800      	cmp	r0, #0
  402d1a:	f47e af5d 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  402d1e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402d20:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d22:	46c8      	mov	r8, r9
  402d24:	e7e6      	b.n	402cf4 <_svfprintf_r+0x12c0>
  402d26:	aa25      	add	r2, sp, #148	; 0x94
  402d28:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d2a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d2c:	f002 f876 	bl	404e1c <__ssprint_r>
  402d30:	2800      	cmp	r0, #0
  402d32:	f47e af51 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  402d36:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402d38:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402d3a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d3c:	46c8      	mov	r8, r9
  402d3e:	e667      	b.n	402a10 <_svfprintf_r+0xfdc>
  402d40:	2000      	movs	r0, #0
  402d42:	900a      	str	r0, [sp, #40]	; 0x28
  402d44:	f7fe bed0 	b.w	401ae8 <_svfprintf_r+0xb4>
  402d48:	3301      	adds	r3, #1
  402d4a:	443a      	add	r2, r7
  402d4c:	2b07      	cmp	r3, #7
  402d4e:	e888 00a0 	stmia.w	r8, {r5, r7}
  402d52:	9227      	str	r2, [sp, #156]	; 0x9c
  402d54:	9326      	str	r3, [sp, #152]	; 0x98
  402d56:	f108 0808 	add.w	r8, r8, #8
  402d5a:	f77f ae5c 	ble.w	402a16 <_svfprintf_r+0xfe2>
  402d5e:	aa25      	add	r2, sp, #148	; 0x94
  402d60:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d62:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d64:	f002 f85a 	bl	404e1c <__ssprint_r>
  402d68:	2800      	cmp	r0, #0
  402d6a:	f47e af35 	bne.w	401bd8 <_svfprintf_r+0x1a4>
  402d6e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402d70:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d72:	46c8      	mov	r8, r9
  402d74:	e64f      	b.n	402a16 <_svfprintf_r+0xfe2>
  402d76:	3330      	adds	r3, #48	; 0x30
  402d78:	2230      	movs	r2, #48	; 0x30
  402d7a:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  402d7e:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  402d82:	ab22      	add	r3, sp, #136	; 0x88
  402d84:	e70f      	b.n	402ba6 <_svfprintf_r+0x1172>
  402d86:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402d88:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402d8a:	4413      	add	r3, r2
  402d8c:	930e      	str	r3, [sp, #56]	; 0x38
  402d8e:	e775      	b.n	402c7c <_svfprintf_r+0x1248>
  402d90:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402d92:	e5cb      	b.n	40292c <_svfprintf_r+0xef8>
  402d94:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402d96:	4e1d      	ldr	r6, [pc, #116]	; (402e0c <_svfprintf_r+0x13d8>)
  402d98:	2b00      	cmp	r3, #0
  402d9a:	bfb6      	itet	lt
  402d9c:	272d      	movlt	r7, #45	; 0x2d
  402d9e:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  402da2:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  402da6:	4b1a      	ldr	r3, [pc, #104]	; (402e10 <_svfprintf_r+0x13dc>)
  402da8:	f7ff ba2f 	b.w	40220a <_svfprintf_r+0x7d6>
  402dac:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402dae:	9808      	ldr	r0, [sp, #32]
  402db0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402db2:	4639      	mov	r1, r7
  402db4:	f003 f8c6 	bl	405f44 <__aeabi_dcmpeq>
  402db8:	2800      	cmp	r0, #0
  402dba:	f47f ae7f 	bne.w	402abc <_svfprintf_r+0x1088>
  402dbe:	f1c5 0501 	rsb	r5, r5, #1
  402dc2:	951f      	str	r5, [sp, #124]	; 0x7c
  402dc4:	442c      	add	r4, r5
  402dc6:	e59e      	b.n	402906 <_svfprintf_r+0xed2>
  402dc8:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402dca:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402dcc:	4413      	add	r3, r2
  402dce:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402dd0:	441a      	add	r2, r3
  402dd2:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  402dd6:	920e      	str	r2, [sp, #56]	; 0x38
  402dd8:	9308      	str	r3, [sp, #32]
  402dda:	e5c7      	b.n	40296c <_svfprintf_r+0xf38>
  402ddc:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402dde:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402de0:	f1c3 0301 	rsb	r3, r3, #1
  402de4:	441a      	add	r2, r3
  402de6:	4613      	mov	r3, r2
  402de8:	e7d0      	b.n	402d8c <_svfprintf_r+0x1358>
  402dea:	f01b 0301 	ands.w	r3, fp, #1
  402dee:	9312      	str	r3, [sp, #72]	; 0x48
  402df0:	f47f aee2 	bne.w	402bb8 <_svfprintf_r+0x1184>
  402df4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402df6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402dfa:	9308      	str	r3, [sp, #32]
  402dfc:	e5b6      	b.n	40296c <_svfprintf_r+0xf38>
  402dfe:	bf00      	nop
  402e00:	66666667 	.word	0x66666667
  402e04:	00406fd0 	.word	0x00406fd0
  402e08:	00406fec 	.word	0x00406fec
  402e0c:	00406fa4 	.word	0x00406fa4
  402e10:	00406fa0 	.word	0x00406fa0
  402e14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402e16:	b913      	cbnz	r3, 402e1e <_svfprintf_r+0x13ea>
  402e18:	f01b 0f01 	tst.w	fp, #1
  402e1c:	d002      	beq.n	402e24 <_svfprintf_r+0x13f0>
  402e1e:	9b19      	ldr	r3, [sp, #100]	; 0x64
  402e20:	3301      	adds	r3, #1
  402e22:	e7d4      	b.n	402dce <_svfprintf_r+0x139a>
  402e24:	2301      	movs	r3, #1
  402e26:	e73a      	b.n	402c9e <_svfprintf_r+0x126a>
  402e28:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402e2a:	f89a 3001 	ldrb.w	r3, [sl, #1]
  402e2e:	6828      	ldr	r0, [r5, #0]
  402e30:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  402e34:	900a      	str	r0, [sp, #40]	; 0x28
  402e36:	4628      	mov	r0, r5
  402e38:	3004      	adds	r0, #4
  402e3a:	46a2      	mov	sl, r4
  402e3c:	900f      	str	r0, [sp, #60]	; 0x3c
  402e3e:	f7fe be51 	b.w	401ae4 <_svfprintf_r+0xb0>
  402e42:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402e46:	f7ff b867 	b.w	401f18 <_svfprintf_r+0x4e4>
  402e4a:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402e4e:	f7ff ba15 	b.w	40227c <_svfprintf_r+0x848>
  402e52:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  402e56:	e6a6      	b.n	402ba6 <_svfprintf_r+0x1172>
  402e58:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402e5c:	f7ff b8eb 	b.w	402036 <_svfprintf_r+0x602>
  402e60:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  402e62:	230c      	movs	r3, #12
  402e64:	6013      	str	r3, [r2, #0]
  402e66:	f04f 33ff 	mov.w	r3, #4294967295
  402e6a:	9309      	str	r3, [sp, #36]	; 0x24
  402e6c:	f7fe bebd 	b.w	401bea <_svfprintf_r+0x1b6>
  402e70:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402e74:	f7ff b99a 	b.w	4021ac <_svfprintf_r+0x778>
  402e78:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402e7c:	f7ff b976 	b.w	40216c <_svfprintf_r+0x738>
  402e80:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402e84:	f7ff b959 	b.w	40213a <_svfprintf_r+0x706>
  402e88:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402e8c:	f7ff b912 	b.w	4020b4 <_svfprintf_r+0x680>

00402e90 <register_fini>:
  402e90:	4b02      	ldr	r3, [pc, #8]	; (402e9c <register_fini+0xc>)
  402e92:	b113      	cbz	r3, 402e9a <register_fini+0xa>
  402e94:	4802      	ldr	r0, [pc, #8]	; (402ea0 <register_fini+0x10>)
  402e96:	f000 b805 	b.w	402ea4 <atexit>
  402e9a:	4770      	bx	lr
  402e9c:	00000000 	.word	0x00000000
  402ea0:	00403e2d 	.word	0x00403e2d

00402ea4 <atexit>:
  402ea4:	2300      	movs	r3, #0
  402ea6:	4601      	mov	r1, r0
  402ea8:	461a      	mov	r2, r3
  402eaa:	4618      	mov	r0, r3
  402eac:	f002 b834 	b.w	404f18 <__register_exitproc>

00402eb0 <quorem>:
  402eb0:	6902      	ldr	r2, [r0, #16]
  402eb2:	690b      	ldr	r3, [r1, #16]
  402eb4:	4293      	cmp	r3, r2
  402eb6:	f300 808d 	bgt.w	402fd4 <quorem+0x124>
  402eba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402ebe:	f103 38ff 	add.w	r8, r3, #4294967295
  402ec2:	f101 0714 	add.w	r7, r1, #20
  402ec6:	f100 0b14 	add.w	fp, r0, #20
  402eca:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  402ece:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  402ed2:	ea4f 0488 	mov.w	r4, r8, lsl #2
  402ed6:	b083      	sub	sp, #12
  402ed8:	3201      	adds	r2, #1
  402eda:	fbb3 f9f2 	udiv	r9, r3, r2
  402ede:	eb0b 0304 	add.w	r3, fp, r4
  402ee2:	9400      	str	r4, [sp, #0]
  402ee4:	eb07 0a04 	add.w	sl, r7, r4
  402ee8:	9301      	str	r3, [sp, #4]
  402eea:	f1b9 0f00 	cmp.w	r9, #0
  402eee:	d039      	beq.n	402f64 <quorem+0xb4>
  402ef0:	2500      	movs	r5, #0
  402ef2:	462e      	mov	r6, r5
  402ef4:	46bc      	mov	ip, r7
  402ef6:	46de      	mov	lr, fp
  402ef8:	f85c 4b04 	ldr.w	r4, [ip], #4
  402efc:	f8de 3000 	ldr.w	r3, [lr]
  402f00:	b2a2      	uxth	r2, r4
  402f02:	fb09 5502 	mla	r5, r9, r2, r5
  402f06:	0c22      	lsrs	r2, r4, #16
  402f08:	0c2c      	lsrs	r4, r5, #16
  402f0a:	fb09 4202 	mla	r2, r9, r2, r4
  402f0e:	b2ad      	uxth	r5, r5
  402f10:	1b75      	subs	r5, r6, r5
  402f12:	b296      	uxth	r6, r2
  402f14:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  402f18:	fa15 f383 	uxtah	r3, r5, r3
  402f1c:	eb06 4623 	add.w	r6, r6, r3, asr #16
  402f20:	b29b      	uxth	r3, r3
  402f22:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  402f26:	45e2      	cmp	sl, ip
  402f28:	ea4f 4512 	mov.w	r5, r2, lsr #16
  402f2c:	f84e 3b04 	str.w	r3, [lr], #4
  402f30:	ea4f 4626 	mov.w	r6, r6, asr #16
  402f34:	d2e0      	bcs.n	402ef8 <quorem+0x48>
  402f36:	9b00      	ldr	r3, [sp, #0]
  402f38:	f85b 3003 	ldr.w	r3, [fp, r3]
  402f3c:	b993      	cbnz	r3, 402f64 <quorem+0xb4>
  402f3e:	9c01      	ldr	r4, [sp, #4]
  402f40:	1f23      	subs	r3, r4, #4
  402f42:	459b      	cmp	fp, r3
  402f44:	d20c      	bcs.n	402f60 <quorem+0xb0>
  402f46:	f854 3c04 	ldr.w	r3, [r4, #-4]
  402f4a:	b94b      	cbnz	r3, 402f60 <quorem+0xb0>
  402f4c:	f1a4 0308 	sub.w	r3, r4, #8
  402f50:	e002      	b.n	402f58 <quorem+0xa8>
  402f52:	681a      	ldr	r2, [r3, #0]
  402f54:	3b04      	subs	r3, #4
  402f56:	b91a      	cbnz	r2, 402f60 <quorem+0xb0>
  402f58:	459b      	cmp	fp, r3
  402f5a:	f108 38ff 	add.w	r8, r8, #4294967295
  402f5e:	d3f8      	bcc.n	402f52 <quorem+0xa2>
  402f60:	f8c0 8010 	str.w	r8, [r0, #16]
  402f64:	4604      	mov	r4, r0
  402f66:	f001 fd67 	bl	404a38 <__mcmp>
  402f6a:	2800      	cmp	r0, #0
  402f6c:	db2e      	blt.n	402fcc <quorem+0x11c>
  402f6e:	f109 0901 	add.w	r9, r9, #1
  402f72:	465d      	mov	r5, fp
  402f74:	2300      	movs	r3, #0
  402f76:	f857 1b04 	ldr.w	r1, [r7], #4
  402f7a:	6828      	ldr	r0, [r5, #0]
  402f7c:	b28a      	uxth	r2, r1
  402f7e:	1a9a      	subs	r2, r3, r2
  402f80:	0c0b      	lsrs	r3, r1, #16
  402f82:	fa12 f280 	uxtah	r2, r2, r0
  402f86:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  402f8a:	eb03 4322 	add.w	r3, r3, r2, asr #16
  402f8e:	b292      	uxth	r2, r2
  402f90:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  402f94:	45ba      	cmp	sl, r7
  402f96:	f845 2b04 	str.w	r2, [r5], #4
  402f9a:	ea4f 4323 	mov.w	r3, r3, asr #16
  402f9e:	d2ea      	bcs.n	402f76 <quorem+0xc6>
  402fa0:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  402fa4:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  402fa8:	b982      	cbnz	r2, 402fcc <quorem+0x11c>
  402faa:	1f1a      	subs	r2, r3, #4
  402fac:	4593      	cmp	fp, r2
  402fae:	d20b      	bcs.n	402fc8 <quorem+0x118>
  402fb0:	f853 2c04 	ldr.w	r2, [r3, #-4]
  402fb4:	b942      	cbnz	r2, 402fc8 <quorem+0x118>
  402fb6:	3b08      	subs	r3, #8
  402fb8:	e002      	b.n	402fc0 <quorem+0x110>
  402fba:	681a      	ldr	r2, [r3, #0]
  402fbc:	3b04      	subs	r3, #4
  402fbe:	b91a      	cbnz	r2, 402fc8 <quorem+0x118>
  402fc0:	459b      	cmp	fp, r3
  402fc2:	f108 38ff 	add.w	r8, r8, #4294967295
  402fc6:	d3f8      	bcc.n	402fba <quorem+0x10a>
  402fc8:	f8c4 8010 	str.w	r8, [r4, #16]
  402fcc:	4648      	mov	r0, r9
  402fce:	b003      	add	sp, #12
  402fd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402fd4:	2000      	movs	r0, #0
  402fd6:	4770      	bx	lr

00402fd8 <_dtoa_r>:
  402fd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402fdc:	6c01      	ldr	r1, [r0, #64]	; 0x40
  402fde:	b09b      	sub	sp, #108	; 0x6c
  402fe0:	4604      	mov	r4, r0
  402fe2:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  402fe4:	4692      	mov	sl, r2
  402fe6:	469b      	mov	fp, r3
  402fe8:	b141      	cbz	r1, 402ffc <_dtoa_r+0x24>
  402fea:	6c42      	ldr	r2, [r0, #68]	; 0x44
  402fec:	604a      	str	r2, [r1, #4]
  402fee:	2301      	movs	r3, #1
  402ff0:	4093      	lsls	r3, r2
  402ff2:	608b      	str	r3, [r1, #8]
  402ff4:	f001 fb48 	bl	404688 <_Bfree>
  402ff8:	2300      	movs	r3, #0
  402ffa:	6423      	str	r3, [r4, #64]	; 0x40
  402ffc:	f1bb 0f00 	cmp.w	fp, #0
  403000:	465d      	mov	r5, fp
  403002:	db35      	blt.n	403070 <_dtoa_r+0x98>
  403004:	2300      	movs	r3, #0
  403006:	6033      	str	r3, [r6, #0]
  403008:	4b9d      	ldr	r3, [pc, #628]	; (403280 <_dtoa_r+0x2a8>)
  40300a:	43ab      	bics	r3, r5
  40300c:	d015      	beq.n	40303a <_dtoa_r+0x62>
  40300e:	4650      	mov	r0, sl
  403010:	4659      	mov	r1, fp
  403012:	2200      	movs	r2, #0
  403014:	2300      	movs	r3, #0
  403016:	f002 ff95 	bl	405f44 <__aeabi_dcmpeq>
  40301a:	4680      	mov	r8, r0
  40301c:	2800      	cmp	r0, #0
  40301e:	d02d      	beq.n	40307c <_dtoa_r+0xa4>
  403020:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403022:	2301      	movs	r3, #1
  403024:	6013      	str	r3, [r2, #0]
  403026:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403028:	2b00      	cmp	r3, #0
  40302a:	f000 80bd 	beq.w	4031a8 <_dtoa_r+0x1d0>
  40302e:	4895      	ldr	r0, [pc, #596]	; (403284 <_dtoa_r+0x2ac>)
  403030:	6018      	str	r0, [r3, #0]
  403032:	3801      	subs	r0, #1
  403034:	b01b      	add	sp, #108	; 0x6c
  403036:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40303a:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40303c:	f242 730f 	movw	r3, #9999	; 0x270f
  403040:	6013      	str	r3, [r2, #0]
  403042:	f1ba 0f00 	cmp.w	sl, #0
  403046:	d10d      	bne.n	403064 <_dtoa_r+0x8c>
  403048:	f3c5 0513 	ubfx	r5, r5, #0, #20
  40304c:	b955      	cbnz	r5, 403064 <_dtoa_r+0x8c>
  40304e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403050:	488d      	ldr	r0, [pc, #564]	; (403288 <_dtoa_r+0x2b0>)
  403052:	2b00      	cmp	r3, #0
  403054:	d0ee      	beq.n	403034 <_dtoa_r+0x5c>
  403056:	f100 0308 	add.w	r3, r0, #8
  40305a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  40305c:	6013      	str	r3, [r2, #0]
  40305e:	b01b      	add	sp, #108	; 0x6c
  403060:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403064:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403066:	4889      	ldr	r0, [pc, #548]	; (40328c <_dtoa_r+0x2b4>)
  403068:	2b00      	cmp	r3, #0
  40306a:	d0e3      	beq.n	403034 <_dtoa_r+0x5c>
  40306c:	1cc3      	adds	r3, r0, #3
  40306e:	e7f4      	b.n	40305a <_dtoa_r+0x82>
  403070:	2301      	movs	r3, #1
  403072:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  403076:	6033      	str	r3, [r6, #0]
  403078:	46ab      	mov	fp, r5
  40307a:	e7c5      	b.n	403008 <_dtoa_r+0x30>
  40307c:	aa18      	add	r2, sp, #96	; 0x60
  40307e:	ab19      	add	r3, sp, #100	; 0x64
  403080:	9201      	str	r2, [sp, #4]
  403082:	9300      	str	r3, [sp, #0]
  403084:	4652      	mov	r2, sl
  403086:	465b      	mov	r3, fp
  403088:	4620      	mov	r0, r4
  40308a:	f001 fd75 	bl	404b78 <__d2b>
  40308e:	0d2b      	lsrs	r3, r5, #20
  403090:	4681      	mov	r9, r0
  403092:	d071      	beq.n	403178 <_dtoa_r+0x1a0>
  403094:	f3cb 0213 	ubfx	r2, fp, #0, #20
  403098:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  40309c:	9f18      	ldr	r7, [sp, #96]	; 0x60
  40309e:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  4030a2:	4650      	mov	r0, sl
  4030a4:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  4030a8:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  4030ac:	2200      	movs	r2, #0
  4030ae:	4b78      	ldr	r3, [pc, #480]	; (403290 <_dtoa_r+0x2b8>)
  4030b0:	f002 fb2c 	bl	40570c <__aeabi_dsub>
  4030b4:	a36c      	add	r3, pc, #432	; (adr r3, 403268 <_dtoa_r+0x290>)
  4030b6:	e9d3 2300 	ldrd	r2, r3, [r3]
  4030ba:	f002 fcdb 	bl	405a74 <__aeabi_dmul>
  4030be:	a36c      	add	r3, pc, #432	; (adr r3, 403270 <_dtoa_r+0x298>)
  4030c0:	e9d3 2300 	ldrd	r2, r3, [r3]
  4030c4:	f002 fb24 	bl	405710 <__adddf3>
  4030c8:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4030cc:	4630      	mov	r0, r6
  4030ce:	f002 fc6b 	bl	4059a8 <__aeabi_i2d>
  4030d2:	a369      	add	r3, pc, #420	; (adr r3, 403278 <_dtoa_r+0x2a0>)
  4030d4:	e9d3 2300 	ldrd	r2, r3, [r3]
  4030d8:	f002 fccc 	bl	405a74 <__aeabi_dmul>
  4030dc:	4602      	mov	r2, r0
  4030de:	460b      	mov	r3, r1
  4030e0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4030e4:	f002 fb14 	bl	405710 <__adddf3>
  4030e8:	e9cd 0104 	strd	r0, r1, [sp, #16]
  4030ec:	f002 ff72 	bl	405fd4 <__aeabi_d2iz>
  4030f0:	2200      	movs	r2, #0
  4030f2:	9002      	str	r0, [sp, #8]
  4030f4:	2300      	movs	r3, #0
  4030f6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4030fa:	f002 ff2d 	bl	405f58 <__aeabi_dcmplt>
  4030fe:	2800      	cmp	r0, #0
  403100:	f040 8173 	bne.w	4033ea <_dtoa_r+0x412>
  403104:	9d02      	ldr	r5, [sp, #8]
  403106:	2d16      	cmp	r5, #22
  403108:	f200 815d 	bhi.w	4033c6 <_dtoa_r+0x3ee>
  40310c:	4b61      	ldr	r3, [pc, #388]	; (403294 <_dtoa_r+0x2bc>)
  40310e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  403112:	e9d3 0100 	ldrd	r0, r1, [r3]
  403116:	4652      	mov	r2, sl
  403118:	465b      	mov	r3, fp
  40311a:	f002 ff3b 	bl	405f94 <__aeabi_dcmpgt>
  40311e:	2800      	cmp	r0, #0
  403120:	f000 81c5 	beq.w	4034ae <_dtoa_r+0x4d6>
  403124:	1e6b      	subs	r3, r5, #1
  403126:	9302      	str	r3, [sp, #8]
  403128:	2300      	movs	r3, #0
  40312a:	930e      	str	r3, [sp, #56]	; 0x38
  40312c:	1bbf      	subs	r7, r7, r6
  40312e:	1e7b      	subs	r3, r7, #1
  403130:	9306      	str	r3, [sp, #24]
  403132:	f100 8154 	bmi.w	4033de <_dtoa_r+0x406>
  403136:	2300      	movs	r3, #0
  403138:	9308      	str	r3, [sp, #32]
  40313a:	9b02      	ldr	r3, [sp, #8]
  40313c:	2b00      	cmp	r3, #0
  40313e:	f2c0 8145 	blt.w	4033cc <_dtoa_r+0x3f4>
  403142:	9a06      	ldr	r2, [sp, #24]
  403144:	930d      	str	r3, [sp, #52]	; 0x34
  403146:	4611      	mov	r1, r2
  403148:	4419      	add	r1, r3
  40314a:	2300      	movs	r3, #0
  40314c:	9106      	str	r1, [sp, #24]
  40314e:	930c      	str	r3, [sp, #48]	; 0x30
  403150:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403152:	2b09      	cmp	r3, #9
  403154:	d82a      	bhi.n	4031ac <_dtoa_r+0x1d4>
  403156:	2b05      	cmp	r3, #5
  403158:	f340 865b 	ble.w	403e12 <_dtoa_r+0xe3a>
  40315c:	3b04      	subs	r3, #4
  40315e:	9324      	str	r3, [sp, #144]	; 0x90
  403160:	2500      	movs	r5, #0
  403162:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403164:	3b02      	subs	r3, #2
  403166:	2b03      	cmp	r3, #3
  403168:	f200 8642 	bhi.w	403df0 <_dtoa_r+0xe18>
  40316c:	e8df f013 	tbh	[pc, r3, lsl #1]
  403170:	02c903d4 	.word	0x02c903d4
  403174:	046103df 	.word	0x046103df
  403178:	9f18      	ldr	r7, [sp, #96]	; 0x60
  40317a:	9e19      	ldr	r6, [sp, #100]	; 0x64
  40317c:	443e      	add	r6, r7
  40317e:	f206 4332 	addw	r3, r6, #1074	; 0x432
  403182:	2b20      	cmp	r3, #32
  403184:	f340 818e 	ble.w	4034a4 <_dtoa_r+0x4cc>
  403188:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  40318c:	f206 4012 	addw	r0, r6, #1042	; 0x412
  403190:	409d      	lsls	r5, r3
  403192:	fa2a f000 	lsr.w	r0, sl, r0
  403196:	4328      	orrs	r0, r5
  403198:	f002 fbf6 	bl	405988 <__aeabi_ui2d>
  40319c:	2301      	movs	r3, #1
  40319e:	3e01      	subs	r6, #1
  4031a0:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  4031a4:	9314      	str	r3, [sp, #80]	; 0x50
  4031a6:	e781      	b.n	4030ac <_dtoa_r+0xd4>
  4031a8:	483b      	ldr	r0, [pc, #236]	; (403298 <_dtoa_r+0x2c0>)
  4031aa:	e743      	b.n	403034 <_dtoa_r+0x5c>
  4031ac:	2100      	movs	r1, #0
  4031ae:	6461      	str	r1, [r4, #68]	; 0x44
  4031b0:	4620      	mov	r0, r4
  4031b2:	9125      	str	r1, [sp, #148]	; 0x94
  4031b4:	f001 fa42 	bl	40463c <_Balloc>
  4031b8:	f04f 33ff 	mov.w	r3, #4294967295
  4031bc:	930a      	str	r3, [sp, #40]	; 0x28
  4031be:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4031c0:	930f      	str	r3, [sp, #60]	; 0x3c
  4031c2:	2301      	movs	r3, #1
  4031c4:	9004      	str	r0, [sp, #16]
  4031c6:	6420      	str	r0, [r4, #64]	; 0x40
  4031c8:	9224      	str	r2, [sp, #144]	; 0x90
  4031ca:	930b      	str	r3, [sp, #44]	; 0x2c
  4031cc:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4031ce:	2b00      	cmp	r3, #0
  4031d0:	f2c0 80d9 	blt.w	403386 <_dtoa_r+0x3ae>
  4031d4:	9a02      	ldr	r2, [sp, #8]
  4031d6:	2a0e      	cmp	r2, #14
  4031d8:	f300 80d5 	bgt.w	403386 <_dtoa_r+0x3ae>
  4031dc:	4b2d      	ldr	r3, [pc, #180]	; (403294 <_dtoa_r+0x2bc>)
  4031de:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4031e2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4031e6:	e9cd 2308 	strd	r2, r3, [sp, #32]
  4031ea:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4031ec:	2b00      	cmp	r3, #0
  4031ee:	f2c0 83ba 	blt.w	403966 <_dtoa_r+0x98e>
  4031f2:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  4031f6:	4650      	mov	r0, sl
  4031f8:	462a      	mov	r2, r5
  4031fa:	4633      	mov	r3, r6
  4031fc:	4659      	mov	r1, fp
  4031fe:	f002 fd63 	bl	405cc8 <__aeabi_ddiv>
  403202:	f002 fee7 	bl	405fd4 <__aeabi_d2iz>
  403206:	4680      	mov	r8, r0
  403208:	f002 fbce 	bl	4059a8 <__aeabi_i2d>
  40320c:	462a      	mov	r2, r5
  40320e:	4633      	mov	r3, r6
  403210:	f002 fc30 	bl	405a74 <__aeabi_dmul>
  403214:	460b      	mov	r3, r1
  403216:	4602      	mov	r2, r0
  403218:	4659      	mov	r1, fp
  40321a:	4650      	mov	r0, sl
  40321c:	f002 fa76 	bl	40570c <__aeabi_dsub>
  403220:	9d04      	ldr	r5, [sp, #16]
  403222:	f108 0330 	add.w	r3, r8, #48	; 0x30
  403226:	702b      	strb	r3, [r5, #0]
  403228:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40322a:	2b01      	cmp	r3, #1
  40322c:	4606      	mov	r6, r0
  40322e:	460f      	mov	r7, r1
  403230:	f105 0501 	add.w	r5, r5, #1
  403234:	d068      	beq.n	403308 <_dtoa_r+0x330>
  403236:	2200      	movs	r2, #0
  403238:	4b18      	ldr	r3, [pc, #96]	; (40329c <_dtoa_r+0x2c4>)
  40323a:	f002 fc1b 	bl	405a74 <__aeabi_dmul>
  40323e:	2200      	movs	r2, #0
  403240:	2300      	movs	r3, #0
  403242:	4606      	mov	r6, r0
  403244:	460f      	mov	r7, r1
  403246:	f002 fe7d 	bl	405f44 <__aeabi_dcmpeq>
  40324a:	2800      	cmp	r0, #0
  40324c:	f040 8088 	bne.w	403360 <_dtoa_r+0x388>
  403250:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  403254:	f04f 0a00 	mov.w	sl, #0
  403258:	f8df b040 	ldr.w	fp, [pc, #64]	; 40329c <_dtoa_r+0x2c4>
  40325c:	940c      	str	r4, [sp, #48]	; 0x30
  40325e:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  403262:	e028      	b.n	4032b6 <_dtoa_r+0x2de>
  403264:	f3af 8000 	nop.w
  403268:	636f4361 	.word	0x636f4361
  40326c:	3fd287a7 	.word	0x3fd287a7
  403270:	8b60c8b3 	.word	0x8b60c8b3
  403274:	3fc68a28 	.word	0x3fc68a28
  403278:	509f79fb 	.word	0x509f79fb
  40327c:	3fd34413 	.word	0x3fd34413
  403280:	7ff00000 	.word	0x7ff00000
  403284:	00406fd9 	.word	0x00406fd9
  403288:	00406ffc 	.word	0x00406ffc
  40328c:	00407008 	.word	0x00407008
  403290:	3ff80000 	.word	0x3ff80000
  403294:	00407038 	.word	0x00407038
  403298:	00406fd8 	.word	0x00406fd8
  40329c:	40240000 	.word	0x40240000
  4032a0:	f002 fbe8 	bl	405a74 <__aeabi_dmul>
  4032a4:	2200      	movs	r2, #0
  4032a6:	2300      	movs	r3, #0
  4032a8:	4606      	mov	r6, r0
  4032aa:	460f      	mov	r7, r1
  4032ac:	f002 fe4a 	bl	405f44 <__aeabi_dcmpeq>
  4032b0:	2800      	cmp	r0, #0
  4032b2:	f040 83c1 	bne.w	403a38 <_dtoa_r+0xa60>
  4032b6:	4642      	mov	r2, r8
  4032b8:	464b      	mov	r3, r9
  4032ba:	4630      	mov	r0, r6
  4032bc:	4639      	mov	r1, r7
  4032be:	f002 fd03 	bl	405cc8 <__aeabi_ddiv>
  4032c2:	f002 fe87 	bl	405fd4 <__aeabi_d2iz>
  4032c6:	4604      	mov	r4, r0
  4032c8:	f002 fb6e 	bl	4059a8 <__aeabi_i2d>
  4032cc:	4642      	mov	r2, r8
  4032ce:	464b      	mov	r3, r9
  4032d0:	f002 fbd0 	bl	405a74 <__aeabi_dmul>
  4032d4:	4602      	mov	r2, r0
  4032d6:	460b      	mov	r3, r1
  4032d8:	4630      	mov	r0, r6
  4032da:	4639      	mov	r1, r7
  4032dc:	f002 fa16 	bl	40570c <__aeabi_dsub>
  4032e0:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  4032e4:	9e04      	ldr	r6, [sp, #16]
  4032e6:	f805 eb01 	strb.w	lr, [r5], #1
  4032ea:	eba5 0e06 	sub.w	lr, r5, r6
  4032ee:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  4032f0:	45b6      	cmp	lr, r6
  4032f2:	e9cd 0106 	strd	r0, r1, [sp, #24]
  4032f6:	4652      	mov	r2, sl
  4032f8:	465b      	mov	r3, fp
  4032fa:	d1d1      	bne.n	4032a0 <_dtoa_r+0x2c8>
  4032fc:	46a0      	mov	r8, r4
  4032fe:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403302:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403304:	4606      	mov	r6, r0
  403306:	460f      	mov	r7, r1
  403308:	4632      	mov	r2, r6
  40330a:	463b      	mov	r3, r7
  40330c:	4630      	mov	r0, r6
  40330e:	4639      	mov	r1, r7
  403310:	f002 f9fe 	bl	405710 <__adddf3>
  403314:	4606      	mov	r6, r0
  403316:	460f      	mov	r7, r1
  403318:	4602      	mov	r2, r0
  40331a:	460b      	mov	r3, r1
  40331c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403320:	f002 fe1a 	bl	405f58 <__aeabi_dcmplt>
  403324:	b948      	cbnz	r0, 40333a <_dtoa_r+0x362>
  403326:	4632      	mov	r2, r6
  403328:	463b      	mov	r3, r7
  40332a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  40332e:	f002 fe09 	bl	405f44 <__aeabi_dcmpeq>
  403332:	b1a8      	cbz	r0, 403360 <_dtoa_r+0x388>
  403334:	f018 0f01 	tst.w	r8, #1
  403338:	d012      	beq.n	403360 <_dtoa_r+0x388>
  40333a:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  40333e:	9a04      	ldr	r2, [sp, #16]
  403340:	1e6b      	subs	r3, r5, #1
  403342:	e004      	b.n	40334e <_dtoa_r+0x376>
  403344:	429a      	cmp	r2, r3
  403346:	f000 8401 	beq.w	403b4c <_dtoa_r+0xb74>
  40334a:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  40334e:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  403352:	f103 0501 	add.w	r5, r3, #1
  403356:	d0f5      	beq.n	403344 <_dtoa_r+0x36c>
  403358:	f108 0801 	add.w	r8, r8, #1
  40335c:	f883 8000 	strb.w	r8, [r3]
  403360:	4649      	mov	r1, r9
  403362:	4620      	mov	r0, r4
  403364:	f001 f990 	bl	404688 <_Bfree>
  403368:	2200      	movs	r2, #0
  40336a:	9b02      	ldr	r3, [sp, #8]
  40336c:	702a      	strb	r2, [r5, #0]
  40336e:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403370:	3301      	adds	r3, #1
  403372:	6013      	str	r3, [r2, #0]
  403374:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403376:	2b00      	cmp	r3, #0
  403378:	f000 839e 	beq.w	403ab8 <_dtoa_r+0xae0>
  40337c:	9804      	ldr	r0, [sp, #16]
  40337e:	601d      	str	r5, [r3, #0]
  403380:	b01b      	add	sp, #108	; 0x6c
  403382:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403386:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403388:	2a00      	cmp	r2, #0
  40338a:	d03e      	beq.n	40340a <_dtoa_r+0x432>
  40338c:	9a24      	ldr	r2, [sp, #144]	; 0x90
  40338e:	2a01      	cmp	r2, #1
  403390:	f340 8311 	ble.w	4039b6 <_dtoa_r+0x9de>
  403394:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403396:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403398:	1e5f      	subs	r7, r3, #1
  40339a:	42ba      	cmp	r2, r7
  40339c:	f2c0 838f 	blt.w	403abe <_dtoa_r+0xae6>
  4033a0:	1bd7      	subs	r7, r2, r7
  4033a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4033a4:	2b00      	cmp	r3, #0
  4033a6:	f2c0 848b 	blt.w	403cc0 <_dtoa_r+0xce8>
  4033aa:	9d08      	ldr	r5, [sp, #32]
  4033ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4033ae:	9a08      	ldr	r2, [sp, #32]
  4033b0:	441a      	add	r2, r3
  4033b2:	9208      	str	r2, [sp, #32]
  4033b4:	9a06      	ldr	r2, [sp, #24]
  4033b6:	2101      	movs	r1, #1
  4033b8:	441a      	add	r2, r3
  4033ba:	4620      	mov	r0, r4
  4033bc:	9206      	str	r2, [sp, #24]
  4033be:	f001 f9fd 	bl	4047bc <__i2b>
  4033c2:	4606      	mov	r6, r0
  4033c4:	e024      	b.n	403410 <_dtoa_r+0x438>
  4033c6:	2301      	movs	r3, #1
  4033c8:	930e      	str	r3, [sp, #56]	; 0x38
  4033ca:	e6af      	b.n	40312c <_dtoa_r+0x154>
  4033cc:	9a08      	ldr	r2, [sp, #32]
  4033ce:	9b02      	ldr	r3, [sp, #8]
  4033d0:	1ad2      	subs	r2, r2, r3
  4033d2:	425b      	negs	r3, r3
  4033d4:	930c      	str	r3, [sp, #48]	; 0x30
  4033d6:	2300      	movs	r3, #0
  4033d8:	9208      	str	r2, [sp, #32]
  4033da:	930d      	str	r3, [sp, #52]	; 0x34
  4033dc:	e6b8      	b.n	403150 <_dtoa_r+0x178>
  4033de:	f1c7 0301 	rsb	r3, r7, #1
  4033e2:	9308      	str	r3, [sp, #32]
  4033e4:	2300      	movs	r3, #0
  4033e6:	9306      	str	r3, [sp, #24]
  4033e8:	e6a7      	b.n	40313a <_dtoa_r+0x162>
  4033ea:	9d02      	ldr	r5, [sp, #8]
  4033ec:	4628      	mov	r0, r5
  4033ee:	f002 fadb 	bl	4059a8 <__aeabi_i2d>
  4033f2:	4602      	mov	r2, r0
  4033f4:	460b      	mov	r3, r1
  4033f6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4033fa:	f002 fda3 	bl	405f44 <__aeabi_dcmpeq>
  4033fe:	2800      	cmp	r0, #0
  403400:	f47f ae80 	bne.w	403104 <_dtoa_r+0x12c>
  403404:	1e6b      	subs	r3, r5, #1
  403406:	9302      	str	r3, [sp, #8]
  403408:	e67c      	b.n	403104 <_dtoa_r+0x12c>
  40340a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40340c:	9d08      	ldr	r5, [sp, #32]
  40340e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403410:	2d00      	cmp	r5, #0
  403412:	dd0c      	ble.n	40342e <_dtoa_r+0x456>
  403414:	9906      	ldr	r1, [sp, #24]
  403416:	2900      	cmp	r1, #0
  403418:	460b      	mov	r3, r1
  40341a:	dd08      	ble.n	40342e <_dtoa_r+0x456>
  40341c:	42a9      	cmp	r1, r5
  40341e:	9a08      	ldr	r2, [sp, #32]
  403420:	bfa8      	it	ge
  403422:	462b      	movge	r3, r5
  403424:	1ad2      	subs	r2, r2, r3
  403426:	1aed      	subs	r5, r5, r3
  403428:	1acb      	subs	r3, r1, r3
  40342a:	9208      	str	r2, [sp, #32]
  40342c:	9306      	str	r3, [sp, #24]
  40342e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403430:	b1d3      	cbz	r3, 403468 <_dtoa_r+0x490>
  403432:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403434:	2b00      	cmp	r3, #0
  403436:	f000 82b7 	beq.w	4039a8 <_dtoa_r+0x9d0>
  40343a:	2f00      	cmp	r7, #0
  40343c:	dd10      	ble.n	403460 <_dtoa_r+0x488>
  40343e:	4631      	mov	r1, r6
  403440:	463a      	mov	r2, r7
  403442:	4620      	mov	r0, r4
  403444:	f001 fa56 	bl	4048f4 <__pow5mult>
  403448:	464a      	mov	r2, r9
  40344a:	4601      	mov	r1, r0
  40344c:	4606      	mov	r6, r0
  40344e:	4620      	mov	r0, r4
  403450:	f001 f9be 	bl	4047d0 <__multiply>
  403454:	4649      	mov	r1, r9
  403456:	4680      	mov	r8, r0
  403458:	4620      	mov	r0, r4
  40345a:	f001 f915 	bl	404688 <_Bfree>
  40345e:	46c1      	mov	r9, r8
  403460:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403462:	1bda      	subs	r2, r3, r7
  403464:	f040 82a1 	bne.w	4039aa <_dtoa_r+0x9d2>
  403468:	2101      	movs	r1, #1
  40346a:	4620      	mov	r0, r4
  40346c:	f001 f9a6 	bl	4047bc <__i2b>
  403470:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403472:	2b00      	cmp	r3, #0
  403474:	4680      	mov	r8, r0
  403476:	dd1c      	ble.n	4034b2 <_dtoa_r+0x4da>
  403478:	4601      	mov	r1, r0
  40347a:	461a      	mov	r2, r3
  40347c:	4620      	mov	r0, r4
  40347e:	f001 fa39 	bl	4048f4 <__pow5mult>
  403482:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403484:	2b01      	cmp	r3, #1
  403486:	4680      	mov	r8, r0
  403488:	f340 8254 	ble.w	403934 <_dtoa_r+0x95c>
  40348c:	2300      	movs	r3, #0
  40348e:	930c      	str	r3, [sp, #48]	; 0x30
  403490:	f8d8 3010 	ldr.w	r3, [r8, #16]
  403494:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403498:	6918      	ldr	r0, [r3, #16]
  40349a:	f001 f93f 	bl	40471c <__hi0bits>
  40349e:	f1c0 0020 	rsb	r0, r0, #32
  4034a2:	e010      	b.n	4034c6 <_dtoa_r+0x4ee>
  4034a4:	f1c3 0520 	rsb	r5, r3, #32
  4034a8:	fa0a f005 	lsl.w	r0, sl, r5
  4034ac:	e674      	b.n	403198 <_dtoa_r+0x1c0>
  4034ae:	900e      	str	r0, [sp, #56]	; 0x38
  4034b0:	e63c      	b.n	40312c <_dtoa_r+0x154>
  4034b2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4034b4:	2b01      	cmp	r3, #1
  4034b6:	f340 8287 	ble.w	4039c8 <_dtoa_r+0x9f0>
  4034ba:	2300      	movs	r3, #0
  4034bc:	930c      	str	r3, [sp, #48]	; 0x30
  4034be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4034c0:	2001      	movs	r0, #1
  4034c2:	2b00      	cmp	r3, #0
  4034c4:	d1e4      	bne.n	403490 <_dtoa_r+0x4b8>
  4034c6:	9a06      	ldr	r2, [sp, #24]
  4034c8:	4410      	add	r0, r2
  4034ca:	f010 001f 	ands.w	r0, r0, #31
  4034ce:	f000 80a1 	beq.w	403614 <_dtoa_r+0x63c>
  4034d2:	f1c0 0320 	rsb	r3, r0, #32
  4034d6:	2b04      	cmp	r3, #4
  4034d8:	f340 849e 	ble.w	403e18 <_dtoa_r+0xe40>
  4034dc:	9b08      	ldr	r3, [sp, #32]
  4034de:	f1c0 001c 	rsb	r0, r0, #28
  4034e2:	4403      	add	r3, r0
  4034e4:	9308      	str	r3, [sp, #32]
  4034e6:	4613      	mov	r3, r2
  4034e8:	4403      	add	r3, r0
  4034ea:	4405      	add	r5, r0
  4034ec:	9306      	str	r3, [sp, #24]
  4034ee:	9b08      	ldr	r3, [sp, #32]
  4034f0:	2b00      	cmp	r3, #0
  4034f2:	dd05      	ble.n	403500 <_dtoa_r+0x528>
  4034f4:	4649      	mov	r1, r9
  4034f6:	461a      	mov	r2, r3
  4034f8:	4620      	mov	r0, r4
  4034fa:	f001 fa4b 	bl	404994 <__lshift>
  4034fe:	4681      	mov	r9, r0
  403500:	9b06      	ldr	r3, [sp, #24]
  403502:	2b00      	cmp	r3, #0
  403504:	dd05      	ble.n	403512 <_dtoa_r+0x53a>
  403506:	4641      	mov	r1, r8
  403508:	461a      	mov	r2, r3
  40350a:	4620      	mov	r0, r4
  40350c:	f001 fa42 	bl	404994 <__lshift>
  403510:	4680      	mov	r8, r0
  403512:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403514:	2b00      	cmp	r3, #0
  403516:	f040 8086 	bne.w	403626 <_dtoa_r+0x64e>
  40351a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40351c:	2b00      	cmp	r3, #0
  40351e:	f340 8266 	ble.w	4039ee <_dtoa_r+0xa16>
  403522:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403524:	2b00      	cmp	r3, #0
  403526:	f000 8098 	beq.w	40365a <_dtoa_r+0x682>
  40352a:	2d00      	cmp	r5, #0
  40352c:	dd05      	ble.n	40353a <_dtoa_r+0x562>
  40352e:	4631      	mov	r1, r6
  403530:	462a      	mov	r2, r5
  403532:	4620      	mov	r0, r4
  403534:	f001 fa2e 	bl	404994 <__lshift>
  403538:	4606      	mov	r6, r0
  40353a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40353c:	2b00      	cmp	r3, #0
  40353e:	f040 8337 	bne.w	403bb0 <_dtoa_r+0xbd8>
  403542:	9606      	str	r6, [sp, #24]
  403544:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403546:	9a04      	ldr	r2, [sp, #16]
  403548:	f8dd b018 	ldr.w	fp, [sp, #24]
  40354c:	3b01      	subs	r3, #1
  40354e:	18d3      	adds	r3, r2, r3
  403550:	930b      	str	r3, [sp, #44]	; 0x2c
  403552:	f00a 0301 	and.w	r3, sl, #1
  403556:	930c      	str	r3, [sp, #48]	; 0x30
  403558:	4617      	mov	r7, r2
  40355a:	46c2      	mov	sl, r8
  40355c:	4651      	mov	r1, sl
  40355e:	4648      	mov	r0, r9
  403560:	f7ff fca6 	bl	402eb0 <quorem>
  403564:	4631      	mov	r1, r6
  403566:	4605      	mov	r5, r0
  403568:	4648      	mov	r0, r9
  40356a:	f001 fa65 	bl	404a38 <__mcmp>
  40356e:	465a      	mov	r2, fp
  403570:	900a      	str	r0, [sp, #40]	; 0x28
  403572:	4651      	mov	r1, sl
  403574:	4620      	mov	r0, r4
  403576:	f001 fa7b 	bl	404a70 <__mdiff>
  40357a:	68c2      	ldr	r2, [r0, #12]
  40357c:	4680      	mov	r8, r0
  40357e:	f105 0330 	add.w	r3, r5, #48	; 0x30
  403582:	2a00      	cmp	r2, #0
  403584:	f040 822b 	bne.w	4039de <_dtoa_r+0xa06>
  403588:	4601      	mov	r1, r0
  40358a:	4648      	mov	r0, r9
  40358c:	9308      	str	r3, [sp, #32]
  40358e:	f001 fa53 	bl	404a38 <__mcmp>
  403592:	4641      	mov	r1, r8
  403594:	9006      	str	r0, [sp, #24]
  403596:	4620      	mov	r0, r4
  403598:	f001 f876 	bl	404688 <_Bfree>
  40359c:	9a06      	ldr	r2, [sp, #24]
  40359e:	9b08      	ldr	r3, [sp, #32]
  4035a0:	b932      	cbnz	r2, 4035b0 <_dtoa_r+0x5d8>
  4035a2:	9924      	ldr	r1, [sp, #144]	; 0x90
  4035a4:	b921      	cbnz	r1, 4035b0 <_dtoa_r+0x5d8>
  4035a6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4035a8:	2a00      	cmp	r2, #0
  4035aa:	f000 83ef 	beq.w	403d8c <_dtoa_r+0xdb4>
  4035ae:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4035b0:	990a      	ldr	r1, [sp, #40]	; 0x28
  4035b2:	2900      	cmp	r1, #0
  4035b4:	f2c0 829f 	blt.w	403af6 <_dtoa_r+0xb1e>
  4035b8:	d105      	bne.n	4035c6 <_dtoa_r+0x5ee>
  4035ba:	9924      	ldr	r1, [sp, #144]	; 0x90
  4035bc:	b919      	cbnz	r1, 4035c6 <_dtoa_r+0x5ee>
  4035be:	990c      	ldr	r1, [sp, #48]	; 0x30
  4035c0:	2900      	cmp	r1, #0
  4035c2:	f000 8298 	beq.w	403af6 <_dtoa_r+0xb1e>
  4035c6:	2a00      	cmp	r2, #0
  4035c8:	f300 8306 	bgt.w	403bd8 <_dtoa_r+0xc00>
  4035cc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4035ce:	703b      	strb	r3, [r7, #0]
  4035d0:	f107 0801 	add.w	r8, r7, #1
  4035d4:	4297      	cmp	r7, r2
  4035d6:	4645      	mov	r5, r8
  4035d8:	f000 830c 	beq.w	403bf4 <_dtoa_r+0xc1c>
  4035dc:	4649      	mov	r1, r9
  4035de:	2300      	movs	r3, #0
  4035e0:	220a      	movs	r2, #10
  4035e2:	4620      	mov	r0, r4
  4035e4:	f001 f85a 	bl	40469c <__multadd>
  4035e8:	455e      	cmp	r6, fp
  4035ea:	4681      	mov	r9, r0
  4035ec:	4631      	mov	r1, r6
  4035ee:	f04f 0300 	mov.w	r3, #0
  4035f2:	f04f 020a 	mov.w	r2, #10
  4035f6:	4620      	mov	r0, r4
  4035f8:	f000 81eb 	beq.w	4039d2 <_dtoa_r+0x9fa>
  4035fc:	f001 f84e 	bl	40469c <__multadd>
  403600:	4659      	mov	r1, fp
  403602:	4606      	mov	r6, r0
  403604:	2300      	movs	r3, #0
  403606:	220a      	movs	r2, #10
  403608:	4620      	mov	r0, r4
  40360a:	f001 f847 	bl	40469c <__multadd>
  40360e:	4647      	mov	r7, r8
  403610:	4683      	mov	fp, r0
  403612:	e7a3      	b.n	40355c <_dtoa_r+0x584>
  403614:	201c      	movs	r0, #28
  403616:	9b08      	ldr	r3, [sp, #32]
  403618:	4403      	add	r3, r0
  40361a:	9308      	str	r3, [sp, #32]
  40361c:	9b06      	ldr	r3, [sp, #24]
  40361e:	4403      	add	r3, r0
  403620:	4405      	add	r5, r0
  403622:	9306      	str	r3, [sp, #24]
  403624:	e763      	b.n	4034ee <_dtoa_r+0x516>
  403626:	4641      	mov	r1, r8
  403628:	4648      	mov	r0, r9
  40362a:	f001 fa05 	bl	404a38 <__mcmp>
  40362e:	2800      	cmp	r0, #0
  403630:	f6bf af73 	bge.w	40351a <_dtoa_r+0x542>
  403634:	9f02      	ldr	r7, [sp, #8]
  403636:	4649      	mov	r1, r9
  403638:	2300      	movs	r3, #0
  40363a:	220a      	movs	r2, #10
  40363c:	4620      	mov	r0, r4
  40363e:	3f01      	subs	r7, #1
  403640:	9702      	str	r7, [sp, #8]
  403642:	f001 f82b 	bl	40469c <__multadd>
  403646:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403648:	4681      	mov	r9, r0
  40364a:	2b00      	cmp	r3, #0
  40364c:	f040 83b6 	bne.w	403dbc <_dtoa_r+0xde4>
  403650:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403652:	2b00      	cmp	r3, #0
  403654:	f340 83bf 	ble.w	403dd6 <_dtoa_r+0xdfe>
  403658:	930a      	str	r3, [sp, #40]	; 0x28
  40365a:	f8dd b010 	ldr.w	fp, [sp, #16]
  40365e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  403660:	465d      	mov	r5, fp
  403662:	e002      	b.n	40366a <_dtoa_r+0x692>
  403664:	f001 f81a 	bl	40469c <__multadd>
  403668:	4681      	mov	r9, r0
  40366a:	4641      	mov	r1, r8
  40366c:	4648      	mov	r0, r9
  40366e:	f7ff fc1f 	bl	402eb0 <quorem>
  403672:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  403676:	f805 ab01 	strb.w	sl, [r5], #1
  40367a:	eba5 030b 	sub.w	r3, r5, fp
  40367e:	42bb      	cmp	r3, r7
  403680:	f04f 020a 	mov.w	r2, #10
  403684:	f04f 0300 	mov.w	r3, #0
  403688:	4649      	mov	r1, r9
  40368a:	4620      	mov	r0, r4
  40368c:	dbea      	blt.n	403664 <_dtoa_r+0x68c>
  40368e:	9b04      	ldr	r3, [sp, #16]
  403690:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403692:	2a01      	cmp	r2, #1
  403694:	bfac      	ite	ge
  403696:	189b      	addge	r3, r3, r2
  403698:	3301      	addlt	r3, #1
  40369a:	461d      	mov	r5, r3
  40369c:	f04f 0b00 	mov.w	fp, #0
  4036a0:	4649      	mov	r1, r9
  4036a2:	2201      	movs	r2, #1
  4036a4:	4620      	mov	r0, r4
  4036a6:	f001 f975 	bl	404994 <__lshift>
  4036aa:	4641      	mov	r1, r8
  4036ac:	4681      	mov	r9, r0
  4036ae:	f001 f9c3 	bl	404a38 <__mcmp>
  4036b2:	2800      	cmp	r0, #0
  4036b4:	f340 823d 	ble.w	403b32 <_dtoa_r+0xb5a>
  4036b8:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  4036bc:	9904      	ldr	r1, [sp, #16]
  4036be:	1e6b      	subs	r3, r5, #1
  4036c0:	e004      	b.n	4036cc <_dtoa_r+0x6f4>
  4036c2:	428b      	cmp	r3, r1
  4036c4:	f000 81ae 	beq.w	403a24 <_dtoa_r+0xa4c>
  4036c8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  4036cc:	2a39      	cmp	r2, #57	; 0x39
  4036ce:	f103 0501 	add.w	r5, r3, #1
  4036d2:	d0f6      	beq.n	4036c2 <_dtoa_r+0x6ea>
  4036d4:	3201      	adds	r2, #1
  4036d6:	701a      	strb	r2, [r3, #0]
  4036d8:	4641      	mov	r1, r8
  4036da:	4620      	mov	r0, r4
  4036dc:	f000 ffd4 	bl	404688 <_Bfree>
  4036e0:	2e00      	cmp	r6, #0
  4036e2:	f43f ae3d 	beq.w	403360 <_dtoa_r+0x388>
  4036e6:	f1bb 0f00 	cmp.w	fp, #0
  4036ea:	d005      	beq.n	4036f8 <_dtoa_r+0x720>
  4036ec:	45b3      	cmp	fp, r6
  4036ee:	d003      	beq.n	4036f8 <_dtoa_r+0x720>
  4036f0:	4659      	mov	r1, fp
  4036f2:	4620      	mov	r0, r4
  4036f4:	f000 ffc8 	bl	404688 <_Bfree>
  4036f8:	4631      	mov	r1, r6
  4036fa:	4620      	mov	r0, r4
  4036fc:	f000 ffc4 	bl	404688 <_Bfree>
  403700:	e62e      	b.n	403360 <_dtoa_r+0x388>
  403702:	2300      	movs	r3, #0
  403704:	930b      	str	r3, [sp, #44]	; 0x2c
  403706:	9b02      	ldr	r3, [sp, #8]
  403708:	9a25      	ldr	r2, [sp, #148]	; 0x94
  40370a:	4413      	add	r3, r2
  40370c:	930f      	str	r3, [sp, #60]	; 0x3c
  40370e:	3301      	adds	r3, #1
  403710:	2b01      	cmp	r3, #1
  403712:	461f      	mov	r7, r3
  403714:	461e      	mov	r6, r3
  403716:	930a      	str	r3, [sp, #40]	; 0x28
  403718:	bfb8      	it	lt
  40371a:	2701      	movlt	r7, #1
  40371c:	2100      	movs	r1, #0
  40371e:	2f17      	cmp	r7, #23
  403720:	6461      	str	r1, [r4, #68]	; 0x44
  403722:	d90a      	bls.n	40373a <_dtoa_r+0x762>
  403724:	2201      	movs	r2, #1
  403726:	2304      	movs	r3, #4
  403728:	005b      	lsls	r3, r3, #1
  40372a:	f103 0014 	add.w	r0, r3, #20
  40372e:	4287      	cmp	r7, r0
  403730:	4611      	mov	r1, r2
  403732:	f102 0201 	add.w	r2, r2, #1
  403736:	d2f7      	bcs.n	403728 <_dtoa_r+0x750>
  403738:	6461      	str	r1, [r4, #68]	; 0x44
  40373a:	4620      	mov	r0, r4
  40373c:	f000 ff7e 	bl	40463c <_Balloc>
  403740:	2e0e      	cmp	r6, #14
  403742:	9004      	str	r0, [sp, #16]
  403744:	6420      	str	r0, [r4, #64]	; 0x40
  403746:	f63f ad41 	bhi.w	4031cc <_dtoa_r+0x1f4>
  40374a:	2d00      	cmp	r5, #0
  40374c:	f43f ad3e 	beq.w	4031cc <_dtoa_r+0x1f4>
  403750:	9902      	ldr	r1, [sp, #8]
  403752:	2900      	cmp	r1, #0
  403754:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  403758:	f340 8202 	ble.w	403b60 <_dtoa_r+0xb88>
  40375c:	4bb8      	ldr	r3, [pc, #736]	; (403a40 <_dtoa_r+0xa68>)
  40375e:	f001 020f 	and.w	r2, r1, #15
  403762:	110d      	asrs	r5, r1, #4
  403764:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403768:	06e9      	lsls	r1, r5, #27
  40376a:	e9d3 6700 	ldrd	r6, r7, [r3]
  40376e:	f140 81ae 	bpl.w	403ace <_dtoa_r+0xaf6>
  403772:	4bb4      	ldr	r3, [pc, #720]	; (403a44 <_dtoa_r+0xa6c>)
  403774:	4650      	mov	r0, sl
  403776:	4659      	mov	r1, fp
  403778:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  40377c:	f002 faa4 	bl	405cc8 <__aeabi_ddiv>
  403780:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  403784:	f005 050f 	and.w	r5, r5, #15
  403788:	f04f 0a03 	mov.w	sl, #3
  40378c:	b18d      	cbz	r5, 4037b2 <_dtoa_r+0x7da>
  40378e:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 403a44 <_dtoa_r+0xa6c>
  403792:	07ea      	lsls	r2, r5, #31
  403794:	d509      	bpl.n	4037aa <_dtoa_r+0x7d2>
  403796:	4630      	mov	r0, r6
  403798:	4639      	mov	r1, r7
  40379a:	e9d8 2300 	ldrd	r2, r3, [r8]
  40379e:	f002 f969 	bl	405a74 <__aeabi_dmul>
  4037a2:	f10a 0a01 	add.w	sl, sl, #1
  4037a6:	4606      	mov	r6, r0
  4037a8:	460f      	mov	r7, r1
  4037aa:	106d      	asrs	r5, r5, #1
  4037ac:	f108 0808 	add.w	r8, r8, #8
  4037b0:	d1ef      	bne.n	403792 <_dtoa_r+0x7ba>
  4037b2:	463b      	mov	r3, r7
  4037b4:	4632      	mov	r2, r6
  4037b6:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  4037ba:	f002 fa85 	bl	405cc8 <__aeabi_ddiv>
  4037be:	4607      	mov	r7, r0
  4037c0:	4688      	mov	r8, r1
  4037c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4037c4:	b143      	cbz	r3, 4037d8 <_dtoa_r+0x800>
  4037c6:	2200      	movs	r2, #0
  4037c8:	4b9f      	ldr	r3, [pc, #636]	; (403a48 <_dtoa_r+0xa70>)
  4037ca:	4638      	mov	r0, r7
  4037cc:	4641      	mov	r1, r8
  4037ce:	f002 fbc3 	bl	405f58 <__aeabi_dcmplt>
  4037d2:	2800      	cmp	r0, #0
  4037d4:	f040 8286 	bne.w	403ce4 <_dtoa_r+0xd0c>
  4037d8:	4650      	mov	r0, sl
  4037da:	f002 f8e5 	bl	4059a8 <__aeabi_i2d>
  4037de:	463a      	mov	r2, r7
  4037e0:	4643      	mov	r3, r8
  4037e2:	f002 f947 	bl	405a74 <__aeabi_dmul>
  4037e6:	4b99      	ldr	r3, [pc, #612]	; (403a4c <_dtoa_r+0xa74>)
  4037e8:	2200      	movs	r2, #0
  4037ea:	f001 ff91 	bl	405710 <__adddf3>
  4037ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4037f0:	4605      	mov	r5, r0
  4037f2:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4037f6:	2b00      	cmp	r3, #0
  4037f8:	f000 813e 	beq.w	403a78 <_dtoa_r+0xaa0>
  4037fc:	9b02      	ldr	r3, [sp, #8]
  4037fe:	9315      	str	r3, [sp, #84]	; 0x54
  403800:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403802:	9312      	str	r3, [sp, #72]	; 0x48
  403804:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403806:	2b00      	cmp	r3, #0
  403808:	f000 81fa 	beq.w	403c00 <_dtoa_r+0xc28>
  40380c:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40380e:	4b8c      	ldr	r3, [pc, #560]	; (403a40 <_dtoa_r+0xa68>)
  403810:	498f      	ldr	r1, [pc, #572]	; (403a50 <_dtoa_r+0xa78>)
  403812:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403816:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  40381a:	2000      	movs	r0, #0
  40381c:	f002 fa54 	bl	405cc8 <__aeabi_ddiv>
  403820:	462a      	mov	r2, r5
  403822:	4633      	mov	r3, r6
  403824:	f001 ff72 	bl	40570c <__aeabi_dsub>
  403828:	4682      	mov	sl, r0
  40382a:	468b      	mov	fp, r1
  40382c:	4638      	mov	r0, r7
  40382e:	4641      	mov	r1, r8
  403830:	f002 fbd0 	bl	405fd4 <__aeabi_d2iz>
  403834:	4605      	mov	r5, r0
  403836:	f002 f8b7 	bl	4059a8 <__aeabi_i2d>
  40383a:	4602      	mov	r2, r0
  40383c:	460b      	mov	r3, r1
  40383e:	4638      	mov	r0, r7
  403840:	4641      	mov	r1, r8
  403842:	f001 ff63 	bl	40570c <__aeabi_dsub>
  403846:	3530      	adds	r5, #48	; 0x30
  403848:	fa5f f885 	uxtb.w	r8, r5
  40384c:	9d04      	ldr	r5, [sp, #16]
  40384e:	4606      	mov	r6, r0
  403850:	460f      	mov	r7, r1
  403852:	f885 8000 	strb.w	r8, [r5]
  403856:	4602      	mov	r2, r0
  403858:	460b      	mov	r3, r1
  40385a:	4650      	mov	r0, sl
  40385c:	4659      	mov	r1, fp
  40385e:	3501      	adds	r5, #1
  403860:	f002 fb98 	bl	405f94 <__aeabi_dcmpgt>
  403864:	2800      	cmp	r0, #0
  403866:	d154      	bne.n	403912 <_dtoa_r+0x93a>
  403868:	4632      	mov	r2, r6
  40386a:	463b      	mov	r3, r7
  40386c:	2000      	movs	r0, #0
  40386e:	4976      	ldr	r1, [pc, #472]	; (403a48 <_dtoa_r+0xa70>)
  403870:	f001 ff4c 	bl	40570c <__aeabi_dsub>
  403874:	4602      	mov	r2, r0
  403876:	460b      	mov	r3, r1
  403878:	4650      	mov	r0, sl
  40387a:	4659      	mov	r1, fp
  40387c:	f002 fb8a 	bl	405f94 <__aeabi_dcmpgt>
  403880:	2800      	cmp	r0, #0
  403882:	f040 8270 	bne.w	403d66 <_dtoa_r+0xd8e>
  403886:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403888:	2a01      	cmp	r2, #1
  40388a:	f000 8111 	beq.w	403ab0 <_dtoa_r+0xad8>
  40388e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403890:	9a04      	ldr	r2, [sp, #16]
  403892:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403896:	4413      	add	r3, r2
  403898:	4699      	mov	r9, r3
  40389a:	e00d      	b.n	4038b8 <_dtoa_r+0x8e0>
  40389c:	2000      	movs	r0, #0
  40389e:	496a      	ldr	r1, [pc, #424]	; (403a48 <_dtoa_r+0xa70>)
  4038a0:	f001 ff34 	bl	40570c <__aeabi_dsub>
  4038a4:	4652      	mov	r2, sl
  4038a6:	465b      	mov	r3, fp
  4038a8:	f002 fb56 	bl	405f58 <__aeabi_dcmplt>
  4038ac:	2800      	cmp	r0, #0
  4038ae:	f040 8258 	bne.w	403d62 <_dtoa_r+0xd8a>
  4038b2:	454d      	cmp	r5, r9
  4038b4:	f000 80fa 	beq.w	403aac <_dtoa_r+0xad4>
  4038b8:	4650      	mov	r0, sl
  4038ba:	4659      	mov	r1, fp
  4038bc:	2200      	movs	r2, #0
  4038be:	4b65      	ldr	r3, [pc, #404]	; (403a54 <_dtoa_r+0xa7c>)
  4038c0:	f002 f8d8 	bl	405a74 <__aeabi_dmul>
  4038c4:	2200      	movs	r2, #0
  4038c6:	4b63      	ldr	r3, [pc, #396]	; (403a54 <_dtoa_r+0xa7c>)
  4038c8:	4682      	mov	sl, r0
  4038ca:	468b      	mov	fp, r1
  4038cc:	4630      	mov	r0, r6
  4038ce:	4639      	mov	r1, r7
  4038d0:	f002 f8d0 	bl	405a74 <__aeabi_dmul>
  4038d4:	460f      	mov	r7, r1
  4038d6:	4606      	mov	r6, r0
  4038d8:	f002 fb7c 	bl	405fd4 <__aeabi_d2iz>
  4038dc:	4680      	mov	r8, r0
  4038de:	f002 f863 	bl	4059a8 <__aeabi_i2d>
  4038e2:	4602      	mov	r2, r0
  4038e4:	460b      	mov	r3, r1
  4038e6:	4630      	mov	r0, r6
  4038e8:	4639      	mov	r1, r7
  4038ea:	f001 ff0f 	bl	40570c <__aeabi_dsub>
  4038ee:	f108 0830 	add.w	r8, r8, #48	; 0x30
  4038f2:	fa5f f888 	uxtb.w	r8, r8
  4038f6:	4652      	mov	r2, sl
  4038f8:	465b      	mov	r3, fp
  4038fa:	f805 8b01 	strb.w	r8, [r5], #1
  4038fe:	4606      	mov	r6, r0
  403900:	460f      	mov	r7, r1
  403902:	f002 fb29 	bl	405f58 <__aeabi_dcmplt>
  403906:	4632      	mov	r2, r6
  403908:	463b      	mov	r3, r7
  40390a:	2800      	cmp	r0, #0
  40390c:	d0c6      	beq.n	40389c <_dtoa_r+0x8c4>
  40390e:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403912:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403914:	9302      	str	r3, [sp, #8]
  403916:	e523      	b.n	403360 <_dtoa_r+0x388>
  403918:	2300      	movs	r3, #0
  40391a:	930b      	str	r3, [sp, #44]	; 0x2c
  40391c:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40391e:	2b00      	cmp	r3, #0
  403920:	f340 80dc 	ble.w	403adc <_dtoa_r+0xb04>
  403924:	461f      	mov	r7, r3
  403926:	461e      	mov	r6, r3
  403928:	930f      	str	r3, [sp, #60]	; 0x3c
  40392a:	930a      	str	r3, [sp, #40]	; 0x28
  40392c:	e6f6      	b.n	40371c <_dtoa_r+0x744>
  40392e:	2301      	movs	r3, #1
  403930:	930b      	str	r3, [sp, #44]	; 0x2c
  403932:	e7f3      	b.n	40391c <_dtoa_r+0x944>
  403934:	f1ba 0f00 	cmp.w	sl, #0
  403938:	f47f ada8 	bne.w	40348c <_dtoa_r+0x4b4>
  40393c:	f3cb 0313 	ubfx	r3, fp, #0, #20
  403940:	2b00      	cmp	r3, #0
  403942:	f47f adba 	bne.w	4034ba <_dtoa_r+0x4e2>
  403946:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  40394a:	0d3f      	lsrs	r7, r7, #20
  40394c:	053f      	lsls	r7, r7, #20
  40394e:	2f00      	cmp	r7, #0
  403950:	f000 820d 	beq.w	403d6e <_dtoa_r+0xd96>
  403954:	9b08      	ldr	r3, [sp, #32]
  403956:	3301      	adds	r3, #1
  403958:	9308      	str	r3, [sp, #32]
  40395a:	9b06      	ldr	r3, [sp, #24]
  40395c:	3301      	adds	r3, #1
  40395e:	9306      	str	r3, [sp, #24]
  403960:	2301      	movs	r3, #1
  403962:	930c      	str	r3, [sp, #48]	; 0x30
  403964:	e5ab      	b.n	4034be <_dtoa_r+0x4e6>
  403966:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403968:	2b00      	cmp	r3, #0
  40396a:	f73f ac42 	bgt.w	4031f2 <_dtoa_r+0x21a>
  40396e:	f040 8221 	bne.w	403db4 <_dtoa_r+0xddc>
  403972:	2200      	movs	r2, #0
  403974:	4b38      	ldr	r3, [pc, #224]	; (403a58 <_dtoa_r+0xa80>)
  403976:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  40397a:	f002 f87b 	bl	405a74 <__aeabi_dmul>
  40397e:	4652      	mov	r2, sl
  403980:	465b      	mov	r3, fp
  403982:	f002 fafd 	bl	405f80 <__aeabi_dcmpge>
  403986:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  40398a:	4646      	mov	r6, r8
  40398c:	2800      	cmp	r0, #0
  40398e:	d041      	beq.n	403a14 <_dtoa_r+0xa3c>
  403990:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403992:	9d04      	ldr	r5, [sp, #16]
  403994:	43db      	mvns	r3, r3
  403996:	9302      	str	r3, [sp, #8]
  403998:	4641      	mov	r1, r8
  40399a:	4620      	mov	r0, r4
  40399c:	f000 fe74 	bl	404688 <_Bfree>
  4039a0:	2e00      	cmp	r6, #0
  4039a2:	f43f acdd 	beq.w	403360 <_dtoa_r+0x388>
  4039a6:	e6a7      	b.n	4036f8 <_dtoa_r+0x720>
  4039a8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4039aa:	4649      	mov	r1, r9
  4039ac:	4620      	mov	r0, r4
  4039ae:	f000 ffa1 	bl	4048f4 <__pow5mult>
  4039b2:	4681      	mov	r9, r0
  4039b4:	e558      	b.n	403468 <_dtoa_r+0x490>
  4039b6:	9a14      	ldr	r2, [sp, #80]	; 0x50
  4039b8:	2a00      	cmp	r2, #0
  4039ba:	f000 8187 	beq.w	403ccc <_dtoa_r+0xcf4>
  4039be:	f203 4333 	addw	r3, r3, #1075	; 0x433
  4039c2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4039c4:	9d08      	ldr	r5, [sp, #32]
  4039c6:	e4f2      	b.n	4033ae <_dtoa_r+0x3d6>
  4039c8:	f1ba 0f00 	cmp.w	sl, #0
  4039cc:	f47f ad75 	bne.w	4034ba <_dtoa_r+0x4e2>
  4039d0:	e7b4      	b.n	40393c <_dtoa_r+0x964>
  4039d2:	f000 fe63 	bl	40469c <__multadd>
  4039d6:	4647      	mov	r7, r8
  4039d8:	4606      	mov	r6, r0
  4039da:	4683      	mov	fp, r0
  4039dc:	e5be      	b.n	40355c <_dtoa_r+0x584>
  4039de:	4601      	mov	r1, r0
  4039e0:	4620      	mov	r0, r4
  4039e2:	9306      	str	r3, [sp, #24]
  4039e4:	f000 fe50 	bl	404688 <_Bfree>
  4039e8:	2201      	movs	r2, #1
  4039ea:	9b06      	ldr	r3, [sp, #24]
  4039ec:	e5e0      	b.n	4035b0 <_dtoa_r+0x5d8>
  4039ee:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4039f0:	2b02      	cmp	r3, #2
  4039f2:	f77f ad96 	ble.w	403522 <_dtoa_r+0x54a>
  4039f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4039f8:	2b00      	cmp	r3, #0
  4039fa:	d1c9      	bne.n	403990 <_dtoa_r+0x9b8>
  4039fc:	4641      	mov	r1, r8
  4039fe:	2205      	movs	r2, #5
  403a00:	4620      	mov	r0, r4
  403a02:	f000 fe4b 	bl	40469c <__multadd>
  403a06:	4601      	mov	r1, r0
  403a08:	4680      	mov	r8, r0
  403a0a:	4648      	mov	r0, r9
  403a0c:	f001 f814 	bl	404a38 <__mcmp>
  403a10:	2800      	cmp	r0, #0
  403a12:	ddbd      	ble.n	403990 <_dtoa_r+0x9b8>
  403a14:	9a02      	ldr	r2, [sp, #8]
  403a16:	9904      	ldr	r1, [sp, #16]
  403a18:	2331      	movs	r3, #49	; 0x31
  403a1a:	3201      	adds	r2, #1
  403a1c:	9202      	str	r2, [sp, #8]
  403a1e:	700b      	strb	r3, [r1, #0]
  403a20:	1c4d      	adds	r5, r1, #1
  403a22:	e7b9      	b.n	403998 <_dtoa_r+0x9c0>
  403a24:	9a02      	ldr	r2, [sp, #8]
  403a26:	3201      	adds	r2, #1
  403a28:	9202      	str	r2, [sp, #8]
  403a2a:	9a04      	ldr	r2, [sp, #16]
  403a2c:	2331      	movs	r3, #49	; 0x31
  403a2e:	7013      	strb	r3, [r2, #0]
  403a30:	e652      	b.n	4036d8 <_dtoa_r+0x700>
  403a32:	2301      	movs	r3, #1
  403a34:	930b      	str	r3, [sp, #44]	; 0x2c
  403a36:	e666      	b.n	403706 <_dtoa_r+0x72e>
  403a38:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403a3c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403a3e:	e48f      	b.n	403360 <_dtoa_r+0x388>
  403a40:	00407038 	.word	0x00407038
  403a44:	00407010 	.word	0x00407010
  403a48:	3ff00000 	.word	0x3ff00000
  403a4c:	401c0000 	.word	0x401c0000
  403a50:	3fe00000 	.word	0x3fe00000
  403a54:	40240000 	.word	0x40240000
  403a58:	40140000 	.word	0x40140000
  403a5c:	4650      	mov	r0, sl
  403a5e:	f001 ffa3 	bl	4059a8 <__aeabi_i2d>
  403a62:	463a      	mov	r2, r7
  403a64:	4643      	mov	r3, r8
  403a66:	f002 f805 	bl	405a74 <__aeabi_dmul>
  403a6a:	2200      	movs	r2, #0
  403a6c:	4bc1      	ldr	r3, [pc, #772]	; (403d74 <_dtoa_r+0xd9c>)
  403a6e:	f001 fe4f 	bl	405710 <__adddf3>
  403a72:	4605      	mov	r5, r0
  403a74:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403a78:	4641      	mov	r1, r8
  403a7a:	2200      	movs	r2, #0
  403a7c:	4bbe      	ldr	r3, [pc, #760]	; (403d78 <_dtoa_r+0xda0>)
  403a7e:	4638      	mov	r0, r7
  403a80:	f001 fe44 	bl	40570c <__aeabi_dsub>
  403a84:	462a      	mov	r2, r5
  403a86:	4633      	mov	r3, r6
  403a88:	4682      	mov	sl, r0
  403a8a:	468b      	mov	fp, r1
  403a8c:	f002 fa82 	bl	405f94 <__aeabi_dcmpgt>
  403a90:	4680      	mov	r8, r0
  403a92:	2800      	cmp	r0, #0
  403a94:	f040 8110 	bne.w	403cb8 <_dtoa_r+0xce0>
  403a98:	462a      	mov	r2, r5
  403a9a:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  403a9e:	4650      	mov	r0, sl
  403aa0:	4659      	mov	r1, fp
  403aa2:	f002 fa59 	bl	405f58 <__aeabi_dcmplt>
  403aa6:	b118      	cbz	r0, 403ab0 <_dtoa_r+0xad8>
  403aa8:	4646      	mov	r6, r8
  403aaa:	e771      	b.n	403990 <_dtoa_r+0x9b8>
  403aac:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403ab0:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  403ab4:	f7ff bb8a 	b.w	4031cc <_dtoa_r+0x1f4>
  403ab8:	9804      	ldr	r0, [sp, #16]
  403aba:	f7ff babb 	b.w	403034 <_dtoa_r+0x5c>
  403abe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403ac0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  403ac2:	970c      	str	r7, [sp, #48]	; 0x30
  403ac4:	1afb      	subs	r3, r7, r3
  403ac6:	441a      	add	r2, r3
  403ac8:	920d      	str	r2, [sp, #52]	; 0x34
  403aca:	2700      	movs	r7, #0
  403acc:	e469      	b.n	4033a2 <_dtoa_r+0x3ca>
  403ace:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  403ad2:	f04f 0a02 	mov.w	sl, #2
  403ad6:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  403ada:	e657      	b.n	40378c <_dtoa_r+0x7b4>
  403adc:	2100      	movs	r1, #0
  403ade:	2301      	movs	r3, #1
  403ae0:	6461      	str	r1, [r4, #68]	; 0x44
  403ae2:	4620      	mov	r0, r4
  403ae4:	9325      	str	r3, [sp, #148]	; 0x94
  403ae6:	f000 fda9 	bl	40463c <_Balloc>
  403aea:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403aec:	9004      	str	r0, [sp, #16]
  403aee:	6420      	str	r0, [r4, #64]	; 0x40
  403af0:	930a      	str	r3, [sp, #40]	; 0x28
  403af2:	930f      	str	r3, [sp, #60]	; 0x3c
  403af4:	e629      	b.n	40374a <_dtoa_r+0x772>
  403af6:	2a00      	cmp	r2, #0
  403af8:	46d0      	mov	r8, sl
  403afa:	f8cd b018 	str.w	fp, [sp, #24]
  403afe:	469a      	mov	sl, r3
  403b00:	dd11      	ble.n	403b26 <_dtoa_r+0xb4e>
  403b02:	4649      	mov	r1, r9
  403b04:	2201      	movs	r2, #1
  403b06:	4620      	mov	r0, r4
  403b08:	f000 ff44 	bl	404994 <__lshift>
  403b0c:	4641      	mov	r1, r8
  403b0e:	4681      	mov	r9, r0
  403b10:	f000 ff92 	bl	404a38 <__mcmp>
  403b14:	2800      	cmp	r0, #0
  403b16:	f340 8146 	ble.w	403da6 <_dtoa_r+0xdce>
  403b1a:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  403b1e:	f000 8106 	beq.w	403d2e <_dtoa_r+0xd56>
  403b22:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  403b26:	46b3      	mov	fp, r6
  403b28:	f887 a000 	strb.w	sl, [r7]
  403b2c:	1c7d      	adds	r5, r7, #1
  403b2e:	9e06      	ldr	r6, [sp, #24]
  403b30:	e5d2      	b.n	4036d8 <_dtoa_r+0x700>
  403b32:	d104      	bne.n	403b3e <_dtoa_r+0xb66>
  403b34:	f01a 0f01 	tst.w	sl, #1
  403b38:	d001      	beq.n	403b3e <_dtoa_r+0xb66>
  403b3a:	e5bd      	b.n	4036b8 <_dtoa_r+0x6e0>
  403b3c:	4615      	mov	r5, r2
  403b3e:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  403b42:	2b30      	cmp	r3, #48	; 0x30
  403b44:	f105 32ff 	add.w	r2, r5, #4294967295
  403b48:	d0f8      	beq.n	403b3c <_dtoa_r+0xb64>
  403b4a:	e5c5      	b.n	4036d8 <_dtoa_r+0x700>
  403b4c:	9904      	ldr	r1, [sp, #16]
  403b4e:	2230      	movs	r2, #48	; 0x30
  403b50:	700a      	strb	r2, [r1, #0]
  403b52:	9a02      	ldr	r2, [sp, #8]
  403b54:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403b58:	3201      	adds	r2, #1
  403b5a:	9202      	str	r2, [sp, #8]
  403b5c:	f7ff bbfc 	b.w	403358 <_dtoa_r+0x380>
  403b60:	f000 80bb 	beq.w	403cda <_dtoa_r+0xd02>
  403b64:	9b02      	ldr	r3, [sp, #8]
  403b66:	425d      	negs	r5, r3
  403b68:	4b84      	ldr	r3, [pc, #528]	; (403d7c <_dtoa_r+0xda4>)
  403b6a:	f005 020f 	and.w	r2, r5, #15
  403b6e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403b72:	e9d3 2300 	ldrd	r2, r3, [r3]
  403b76:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  403b7a:	f001 ff7b 	bl	405a74 <__aeabi_dmul>
  403b7e:	112d      	asrs	r5, r5, #4
  403b80:	4607      	mov	r7, r0
  403b82:	4688      	mov	r8, r1
  403b84:	f000 812c 	beq.w	403de0 <_dtoa_r+0xe08>
  403b88:	4e7d      	ldr	r6, [pc, #500]	; (403d80 <_dtoa_r+0xda8>)
  403b8a:	f04f 0a02 	mov.w	sl, #2
  403b8e:	07eb      	lsls	r3, r5, #31
  403b90:	d509      	bpl.n	403ba6 <_dtoa_r+0xbce>
  403b92:	4638      	mov	r0, r7
  403b94:	4641      	mov	r1, r8
  403b96:	e9d6 2300 	ldrd	r2, r3, [r6]
  403b9a:	f001 ff6b 	bl	405a74 <__aeabi_dmul>
  403b9e:	f10a 0a01 	add.w	sl, sl, #1
  403ba2:	4607      	mov	r7, r0
  403ba4:	4688      	mov	r8, r1
  403ba6:	106d      	asrs	r5, r5, #1
  403ba8:	f106 0608 	add.w	r6, r6, #8
  403bac:	d1ef      	bne.n	403b8e <_dtoa_r+0xbb6>
  403bae:	e608      	b.n	4037c2 <_dtoa_r+0x7ea>
  403bb0:	6871      	ldr	r1, [r6, #4]
  403bb2:	4620      	mov	r0, r4
  403bb4:	f000 fd42 	bl	40463c <_Balloc>
  403bb8:	6933      	ldr	r3, [r6, #16]
  403bba:	3302      	adds	r3, #2
  403bbc:	009a      	lsls	r2, r3, #2
  403bbe:	4605      	mov	r5, r0
  403bc0:	f106 010c 	add.w	r1, r6, #12
  403bc4:	300c      	adds	r0, #12
  403bc6:	f000 fc93 	bl	4044f0 <memcpy>
  403bca:	4629      	mov	r1, r5
  403bcc:	2201      	movs	r2, #1
  403bce:	4620      	mov	r0, r4
  403bd0:	f000 fee0 	bl	404994 <__lshift>
  403bd4:	9006      	str	r0, [sp, #24]
  403bd6:	e4b5      	b.n	403544 <_dtoa_r+0x56c>
  403bd8:	2b39      	cmp	r3, #57	; 0x39
  403bda:	f8cd b018 	str.w	fp, [sp, #24]
  403bde:	46d0      	mov	r8, sl
  403be0:	f000 80a5 	beq.w	403d2e <_dtoa_r+0xd56>
  403be4:	f103 0a01 	add.w	sl, r3, #1
  403be8:	46b3      	mov	fp, r6
  403bea:	f887 a000 	strb.w	sl, [r7]
  403bee:	1c7d      	adds	r5, r7, #1
  403bf0:	9e06      	ldr	r6, [sp, #24]
  403bf2:	e571      	b.n	4036d8 <_dtoa_r+0x700>
  403bf4:	465a      	mov	r2, fp
  403bf6:	46d0      	mov	r8, sl
  403bf8:	46b3      	mov	fp, r6
  403bfa:	469a      	mov	sl, r3
  403bfc:	4616      	mov	r6, r2
  403bfe:	e54f      	b.n	4036a0 <_dtoa_r+0x6c8>
  403c00:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403c02:	495e      	ldr	r1, [pc, #376]	; (403d7c <_dtoa_r+0xda4>)
  403c04:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  403c08:	462a      	mov	r2, r5
  403c0a:	4633      	mov	r3, r6
  403c0c:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  403c10:	f001 ff30 	bl	405a74 <__aeabi_dmul>
  403c14:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  403c18:	4638      	mov	r0, r7
  403c1a:	4641      	mov	r1, r8
  403c1c:	f002 f9da 	bl	405fd4 <__aeabi_d2iz>
  403c20:	4605      	mov	r5, r0
  403c22:	f001 fec1 	bl	4059a8 <__aeabi_i2d>
  403c26:	460b      	mov	r3, r1
  403c28:	4602      	mov	r2, r0
  403c2a:	4641      	mov	r1, r8
  403c2c:	4638      	mov	r0, r7
  403c2e:	f001 fd6d 	bl	40570c <__aeabi_dsub>
  403c32:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403c34:	460f      	mov	r7, r1
  403c36:	9904      	ldr	r1, [sp, #16]
  403c38:	3530      	adds	r5, #48	; 0x30
  403c3a:	2b01      	cmp	r3, #1
  403c3c:	700d      	strb	r5, [r1, #0]
  403c3e:	4606      	mov	r6, r0
  403c40:	f101 0501 	add.w	r5, r1, #1
  403c44:	d026      	beq.n	403c94 <_dtoa_r+0xcbc>
  403c46:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403c48:	9a04      	ldr	r2, [sp, #16]
  403c4a:	f8df b13c 	ldr.w	fp, [pc, #316]	; 403d88 <_dtoa_r+0xdb0>
  403c4e:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403c52:	4413      	add	r3, r2
  403c54:	f04f 0a00 	mov.w	sl, #0
  403c58:	4699      	mov	r9, r3
  403c5a:	4652      	mov	r2, sl
  403c5c:	465b      	mov	r3, fp
  403c5e:	4630      	mov	r0, r6
  403c60:	4639      	mov	r1, r7
  403c62:	f001 ff07 	bl	405a74 <__aeabi_dmul>
  403c66:	460f      	mov	r7, r1
  403c68:	4606      	mov	r6, r0
  403c6a:	f002 f9b3 	bl	405fd4 <__aeabi_d2iz>
  403c6e:	4680      	mov	r8, r0
  403c70:	f001 fe9a 	bl	4059a8 <__aeabi_i2d>
  403c74:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403c78:	4602      	mov	r2, r0
  403c7a:	460b      	mov	r3, r1
  403c7c:	4630      	mov	r0, r6
  403c7e:	4639      	mov	r1, r7
  403c80:	f001 fd44 	bl	40570c <__aeabi_dsub>
  403c84:	f805 8b01 	strb.w	r8, [r5], #1
  403c88:	454d      	cmp	r5, r9
  403c8a:	4606      	mov	r6, r0
  403c8c:	460f      	mov	r7, r1
  403c8e:	d1e4      	bne.n	403c5a <_dtoa_r+0xc82>
  403c90:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403c94:	4b3b      	ldr	r3, [pc, #236]	; (403d84 <_dtoa_r+0xdac>)
  403c96:	2200      	movs	r2, #0
  403c98:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  403c9c:	f001 fd38 	bl	405710 <__adddf3>
  403ca0:	4632      	mov	r2, r6
  403ca2:	463b      	mov	r3, r7
  403ca4:	f002 f958 	bl	405f58 <__aeabi_dcmplt>
  403ca8:	2800      	cmp	r0, #0
  403caa:	d046      	beq.n	403d3a <_dtoa_r+0xd62>
  403cac:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403cae:	9302      	str	r3, [sp, #8]
  403cb0:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403cb4:	f7ff bb43 	b.w	40333e <_dtoa_r+0x366>
  403cb8:	f04f 0800 	mov.w	r8, #0
  403cbc:	4646      	mov	r6, r8
  403cbe:	e6a9      	b.n	403a14 <_dtoa_r+0xa3c>
  403cc0:	9b08      	ldr	r3, [sp, #32]
  403cc2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403cc4:	1a9d      	subs	r5, r3, r2
  403cc6:	2300      	movs	r3, #0
  403cc8:	f7ff bb71 	b.w	4033ae <_dtoa_r+0x3d6>
  403ccc:	9b18      	ldr	r3, [sp, #96]	; 0x60
  403cce:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403cd0:	9d08      	ldr	r5, [sp, #32]
  403cd2:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  403cd6:	f7ff bb6a 	b.w	4033ae <_dtoa_r+0x3d6>
  403cda:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  403cde:	f04f 0a02 	mov.w	sl, #2
  403ce2:	e56e      	b.n	4037c2 <_dtoa_r+0x7ea>
  403ce4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ce6:	2b00      	cmp	r3, #0
  403ce8:	f43f aeb8 	beq.w	403a5c <_dtoa_r+0xa84>
  403cec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403cee:	2b00      	cmp	r3, #0
  403cf0:	f77f aede 	ble.w	403ab0 <_dtoa_r+0xad8>
  403cf4:	2200      	movs	r2, #0
  403cf6:	4b24      	ldr	r3, [pc, #144]	; (403d88 <_dtoa_r+0xdb0>)
  403cf8:	4638      	mov	r0, r7
  403cfa:	4641      	mov	r1, r8
  403cfc:	f001 feba 	bl	405a74 <__aeabi_dmul>
  403d00:	4607      	mov	r7, r0
  403d02:	4688      	mov	r8, r1
  403d04:	f10a 0001 	add.w	r0, sl, #1
  403d08:	f001 fe4e 	bl	4059a8 <__aeabi_i2d>
  403d0c:	463a      	mov	r2, r7
  403d0e:	4643      	mov	r3, r8
  403d10:	f001 feb0 	bl	405a74 <__aeabi_dmul>
  403d14:	2200      	movs	r2, #0
  403d16:	4b17      	ldr	r3, [pc, #92]	; (403d74 <_dtoa_r+0xd9c>)
  403d18:	f001 fcfa 	bl	405710 <__adddf3>
  403d1c:	9a02      	ldr	r2, [sp, #8]
  403d1e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403d20:	9312      	str	r3, [sp, #72]	; 0x48
  403d22:	3a01      	subs	r2, #1
  403d24:	4605      	mov	r5, r0
  403d26:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403d2a:	9215      	str	r2, [sp, #84]	; 0x54
  403d2c:	e56a      	b.n	403804 <_dtoa_r+0x82c>
  403d2e:	2239      	movs	r2, #57	; 0x39
  403d30:	46b3      	mov	fp, r6
  403d32:	703a      	strb	r2, [r7, #0]
  403d34:	9e06      	ldr	r6, [sp, #24]
  403d36:	1c7d      	adds	r5, r7, #1
  403d38:	e4c0      	b.n	4036bc <_dtoa_r+0x6e4>
  403d3a:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  403d3e:	2000      	movs	r0, #0
  403d40:	4910      	ldr	r1, [pc, #64]	; (403d84 <_dtoa_r+0xdac>)
  403d42:	f001 fce3 	bl	40570c <__aeabi_dsub>
  403d46:	4632      	mov	r2, r6
  403d48:	463b      	mov	r3, r7
  403d4a:	f002 f923 	bl	405f94 <__aeabi_dcmpgt>
  403d4e:	b908      	cbnz	r0, 403d54 <_dtoa_r+0xd7c>
  403d50:	e6ae      	b.n	403ab0 <_dtoa_r+0xad8>
  403d52:	4615      	mov	r5, r2
  403d54:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  403d58:	2b30      	cmp	r3, #48	; 0x30
  403d5a:	f105 32ff 	add.w	r2, r5, #4294967295
  403d5e:	d0f8      	beq.n	403d52 <_dtoa_r+0xd7a>
  403d60:	e5d7      	b.n	403912 <_dtoa_r+0x93a>
  403d62:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403d66:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403d68:	9302      	str	r3, [sp, #8]
  403d6a:	f7ff bae8 	b.w	40333e <_dtoa_r+0x366>
  403d6e:	970c      	str	r7, [sp, #48]	; 0x30
  403d70:	f7ff bba5 	b.w	4034be <_dtoa_r+0x4e6>
  403d74:	401c0000 	.word	0x401c0000
  403d78:	40140000 	.word	0x40140000
  403d7c:	00407038 	.word	0x00407038
  403d80:	00407010 	.word	0x00407010
  403d84:	3fe00000 	.word	0x3fe00000
  403d88:	40240000 	.word	0x40240000
  403d8c:	2b39      	cmp	r3, #57	; 0x39
  403d8e:	f8cd b018 	str.w	fp, [sp, #24]
  403d92:	46d0      	mov	r8, sl
  403d94:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  403d98:	469a      	mov	sl, r3
  403d9a:	d0c8      	beq.n	403d2e <_dtoa_r+0xd56>
  403d9c:	f1bb 0f00 	cmp.w	fp, #0
  403da0:	f73f aebf 	bgt.w	403b22 <_dtoa_r+0xb4a>
  403da4:	e6bf      	b.n	403b26 <_dtoa_r+0xb4e>
  403da6:	f47f aebe 	bne.w	403b26 <_dtoa_r+0xb4e>
  403daa:	f01a 0f01 	tst.w	sl, #1
  403dae:	f43f aeba 	beq.w	403b26 <_dtoa_r+0xb4e>
  403db2:	e6b2      	b.n	403b1a <_dtoa_r+0xb42>
  403db4:	f04f 0800 	mov.w	r8, #0
  403db8:	4646      	mov	r6, r8
  403dba:	e5e9      	b.n	403990 <_dtoa_r+0x9b8>
  403dbc:	4631      	mov	r1, r6
  403dbe:	2300      	movs	r3, #0
  403dc0:	220a      	movs	r2, #10
  403dc2:	4620      	mov	r0, r4
  403dc4:	f000 fc6a 	bl	40469c <__multadd>
  403dc8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403dca:	2b00      	cmp	r3, #0
  403dcc:	4606      	mov	r6, r0
  403dce:	dd0a      	ble.n	403de6 <_dtoa_r+0xe0e>
  403dd0:	930a      	str	r3, [sp, #40]	; 0x28
  403dd2:	f7ff bbaa 	b.w	40352a <_dtoa_r+0x552>
  403dd6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403dd8:	2b02      	cmp	r3, #2
  403dda:	dc23      	bgt.n	403e24 <_dtoa_r+0xe4c>
  403ddc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403dde:	e43b      	b.n	403658 <_dtoa_r+0x680>
  403de0:	f04f 0a02 	mov.w	sl, #2
  403de4:	e4ed      	b.n	4037c2 <_dtoa_r+0x7ea>
  403de6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403de8:	2b02      	cmp	r3, #2
  403dea:	dc1b      	bgt.n	403e24 <_dtoa_r+0xe4c>
  403dec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403dee:	e7ef      	b.n	403dd0 <_dtoa_r+0xdf8>
  403df0:	2500      	movs	r5, #0
  403df2:	6465      	str	r5, [r4, #68]	; 0x44
  403df4:	4629      	mov	r1, r5
  403df6:	4620      	mov	r0, r4
  403df8:	f000 fc20 	bl	40463c <_Balloc>
  403dfc:	f04f 33ff 	mov.w	r3, #4294967295
  403e00:	930a      	str	r3, [sp, #40]	; 0x28
  403e02:	930f      	str	r3, [sp, #60]	; 0x3c
  403e04:	2301      	movs	r3, #1
  403e06:	9004      	str	r0, [sp, #16]
  403e08:	9525      	str	r5, [sp, #148]	; 0x94
  403e0a:	6420      	str	r0, [r4, #64]	; 0x40
  403e0c:	930b      	str	r3, [sp, #44]	; 0x2c
  403e0e:	f7ff b9dd 	b.w	4031cc <_dtoa_r+0x1f4>
  403e12:	2501      	movs	r5, #1
  403e14:	f7ff b9a5 	b.w	403162 <_dtoa_r+0x18a>
  403e18:	f43f ab69 	beq.w	4034ee <_dtoa_r+0x516>
  403e1c:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  403e20:	f7ff bbf9 	b.w	403616 <_dtoa_r+0x63e>
  403e24:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403e26:	930a      	str	r3, [sp, #40]	; 0x28
  403e28:	e5e5      	b.n	4039f6 <_dtoa_r+0xa1e>
  403e2a:	bf00      	nop

00403e2c <__libc_fini_array>:
  403e2c:	b538      	push	{r3, r4, r5, lr}
  403e2e:	4c0a      	ldr	r4, [pc, #40]	; (403e58 <__libc_fini_array+0x2c>)
  403e30:	4d0a      	ldr	r5, [pc, #40]	; (403e5c <__libc_fini_array+0x30>)
  403e32:	1b64      	subs	r4, r4, r5
  403e34:	10a4      	asrs	r4, r4, #2
  403e36:	d00a      	beq.n	403e4e <__libc_fini_array+0x22>
  403e38:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  403e3c:	3b01      	subs	r3, #1
  403e3e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  403e42:	3c01      	subs	r4, #1
  403e44:	f855 3904 	ldr.w	r3, [r5], #-4
  403e48:	4798      	blx	r3
  403e4a:	2c00      	cmp	r4, #0
  403e4c:	d1f9      	bne.n	403e42 <__libc_fini_array+0x16>
  403e4e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  403e52:	f003 b9ef 	b.w	407234 <_fini>
  403e56:	bf00      	nop
  403e58:	00407244 	.word	0x00407244
  403e5c:	00407240 	.word	0x00407240

00403e60 <_localeconv_r>:
  403e60:	4a04      	ldr	r2, [pc, #16]	; (403e74 <_localeconv_r+0x14>)
  403e62:	4b05      	ldr	r3, [pc, #20]	; (403e78 <_localeconv_r+0x18>)
  403e64:	6812      	ldr	r2, [r2, #0]
  403e66:	6b50      	ldr	r0, [r2, #52]	; 0x34
  403e68:	2800      	cmp	r0, #0
  403e6a:	bf08      	it	eq
  403e6c:	4618      	moveq	r0, r3
  403e6e:	30f0      	adds	r0, #240	; 0xf0
  403e70:	4770      	bx	lr
  403e72:	bf00      	nop
  403e74:	20000010 	.word	0x20000010
  403e78:	20000854 	.word	0x20000854

00403e7c <__retarget_lock_acquire_recursive>:
  403e7c:	4770      	bx	lr
  403e7e:	bf00      	nop

00403e80 <__retarget_lock_release_recursive>:
  403e80:	4770      	bx	lr
  403e82:	bf00      	nop

00403e84 <_malloc_r>:
  403e84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403e88:	f101 060b 	add.w	r6, r1, #11
  403e8c:	2e16      	cmp	r6, #22
  403e8e:	b083      	sub	sp, #12
  403e90:	4605      	mov	r5, r0
  403e92:	f240 809e 	bls.w	403fd2 <_malloc_r+0x14e>
  403e96:	f036 0607 	bics.w	r6, r6, #7
  403e9a:	f100 80bd 	bmi.w	404018 <_malloc_r+0x194>
  403e9e:	42b1      	cmp	r1, r6
  403ea0:	f200 80ba 	bhi.w	404018 <_malloc_r+0x194>
  403ea4:	f000 fbbe 	bl	404624 <__malloc_lock>
  403ea8:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  403eac:	f0c0 8293 	bcc.w	4043d6 <_malloc_r+0x552>
  403eb0:	0a73      	lsrs	r3, r6, #9
  403eb2:	f000 80b8 	beq.w	404026 <_malloc_r+0x1a2>
  403eb6:	2b04      	cmp	r3, #4
  403eb8:	f200 8179 	bhi.w	4041ae <_malloc_r+0x32a>
  403ebc:	09b3      	lsrs	r3, r6, #6
  403ebe:	f103 0039 	add.w	r0, r3, #57	; 0x39
  403ec2:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  403ec6:	00c3      	lsls	r3, r0, #3
  403ec8:	4fbf      	ldr	r7, [pc, #764]	; (4041c8 <_malloc_r+0x344>)
  403eca:	443b      	add	r3, r7
  403ecc:	f1a3 0108 	sub.w	r1, r3, #8
  403ed0:	685c      	ldr	r4, [r3, #4]
  403ed2:	42a1      	cmp	r1, r4
  403ed4:	d106      	bne.n	403ee4 <_malloc_r+0x60>
  403ed6:	e00c      	b.n	403ef2 <_malloc_r+0x6e>
  403ed8:	2a00      	cmp	r2, #0
  403eda:	f280 80aa 	bge.w	404032 <_malloc_r+0x1ae>
  403ede:	68e4      	ldr	r4, [r4, #12]
  403ee0:	42a1      	cmp	r1, r4
  403ee2:	d006      	beq.n	403ef2 <_malloc_r+0x6e>
  403ee4:	6863      	ldr	r3, [r4, #4]
  403ee6:	f023 0303 	bic.w	r3, r3, #3
  403eea:	1b9a      	subs	r2, r3, r6
  403eec:	2a0f      	cmp	r2, #15
  403eee:	ddf3      	ble.n	403ed8 <_malloc_r+0x54>
  403ef0:	4670      	mov	r0, lr
  403ef2:	693c      	ldr	r4, [r7, #16]
  403ef4:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 4041dc <_malloc_r+0x358>
  403ef8:	4574      	cmp	r4, lr
  403efa:	f000 81ab 	beq.w	404254 <_malloc_r+0x3d0>
  403efe:	6863      	ldr	r3, [r4, #4]
  403f00:	f023 0303 	bic.w	r3, r3, #3
  403f04:	1b9a      	subs	r2, r3, r6
  403f06:	2a0f      	cmp	r2, #15
  403f08:	f300 8190 	bgt.w	40422c <_malloc_r+0x3a8>
  403f0c:	2a00      	cmp	r2, #0
  403f0e:	f8c7 e014 	str.w	lr, [r7, #20]
  403f12:	f8c7 e010 	str.w	lr, [r7, #16]
  403f16:	f280 809d 	bge.w	404054 <_malloc_r+0x1d0>
  403f1a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  403f1e:	f080 8161 	bcs.w	4041e4 <_malloc_r+0x360>
  403f22:	08db      	lsrs	r3, r3, #3
  403f24:	f103 0c01 	add.w	ip, r3, #1
  403f28:	1099      	asrs	r1, r3, #2
  403f2a:	687a      	ldr	r2, [r7, #4]
  403f2c:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  403f30:	f8c4 8008 	str.w	r8, [r4, #8]
  403f34:	2301      	movs	r3, #1
  403f36:	408b      	lsls	r3, r1
  403f38:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  403f3c:	4313      	orrs	r3, r2
  403f3e:	3908      	subs	r1, #8
  403f40:	60e1      	str	r1, [r4, #12]
  403f42:	607b      	str	r3, [r7, #4]
  403f44:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  403f48:	f8c8 400c 	str.w	r4, [r8, #12]
  403f4c:	1082      	asrs	r2, r0, #2
  403f4e:	2401      	movs	r4, #1
  403f50:	4094      	lsls	r4, r2
  403f52:	429c      	cmp	r4, r3
  403f54:	f200 808b 	bhi.w	40406e <_malloc_r+0x1ea>
  403f58:	421c      	tst	r4, r3
  403f5a:	d106      	bne.n	403f6a <_malloc_r+0xe6>
  403f5c:	f020 0003 	bic.w	r0, r0, #3
  403f60:	0064      	lsls	r4, r4, #1
  403f62:	421c      	tst	r4, r3
  403f64:	f100 0004 	add.w	r0, r0, #4
  403f68:	d0fa      	beq.n	403f60 <_malloc_r+0xdc>
  403f6a:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  403f6e:	46cc      	mov	ip, r9
  403f70:	4680      	mov	r8, r0
  403f72:	f8dc 300c 	ldr.w	r3, [ip, #12]
  403f76:	459c      	cmp	ip, r3
  403f78:	d107      	bne.n	403f8a <_malloc_r+0x106>
  403f7a:	e16d      	b.n	404258 <_malloc_r+0x3d4>
  403f7c:	2a00      	cmp	r2, #0
  403f7e:	f280 817b 	bge.w	404278 <_malloc_r+0x3f4>
  403f82:	68db      	ldr	r3, [r3, #12]
  403f84:	459c      	cmp	ip, r3
  403f86:	f000 8167 	beq.w	404258 <_malloc_r+0x3d4>
  403f8a:	6859      	ldr	r1, [r3, #4]
  403f8c:	f021 0103 	bic.w	r1, r1, #3
  403f90:	1b8a      	subs	r2, r1, r6
  403f92:	2a0f      	cmp	r2, #15
  403f94:	ddf2      	ble.n	403f7c <_malloc_r+0xf8>
  403f96:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  403f9a:	f8d3 8008 	ldr.w	r8, [r3, #8]
  403f9e:	9300      	str	r3, [sp, #0]
  403fa0:	199c      	adds	r4, r3, r6
  403fa2:	4628      	mov	r0, r5
  403fa4:	f046 0601 	orr.w	r6, r6, #1
  403fa8:	f042 0501 	orr.w	r5, r2, #1
  403fac:	605e      	str	r6, [r3, #4]
  403fae:	f8c8 c00c 	str.w	ip, [r8, #12]
  403fb2:	f8cc 8008 	str.w	r8, [ip, #8]
  403fb6:	617c      	str	r4, [r7, #20]
  403fb8:	613c      	str	r4, [r7, #16]
  403fba:	f8c4 e00c 	str.w	lr, [r4, #12]
  403fbe:	f8c4 e008 	str.w	lr, [r4, #8]
  403fc2:	6065      	str	r5, [r4, #4]
  403fc4:	505a      	str	r2, [r3, r1]
  403fc6:	f000 fb33 	bl	404630 <__malloc_unlock>
  403fca:	9b00      	ldr	r3, [sp, #0]
  403fcc:	f103 0408 	add.w	r4, r3, #8
  403fd0:	e01e      	b.n	404010 <_malloc_r+0x18c>
  403fd2:	2910      	cmp	r1, #16
  403fd4:	d820      	bhi.n	404018 <_malloc_r+0x194>
  403fd6:	f000 fb25 	bl	404624 <__malloc_lock>
  403fda:	2610      	movs	r6, #16
  403fdc:	2318      	movs	r3, #24
  403fde:	2002      	movs	r0, #2
  403fe0:	4f79      	ldr	r7, [pc, #484]	; (4041c8 <_malloc_r+0x344>)
  403fe2:	443b      	add	r3, r7
  403fe4:	f1a3 0208 	sub.w	r2, r3, #8
  403fe8:	685c      	ldr	r4, [r3, #4]
  403fea:	4294      	cmp	r4, r2
  403fec:	f000 813d 	beq.w	40426a <_malloc_r+0x3e6>
  403ff0:	6863      	ldr	r3, [r4, #4]
  403ff2:	68e1      	ldr	r1, [r4, #12]
  403ff4:	68a6      	ldr	r6, [r4, #8]
  403ff6:	f023 0303 	bic.w	r3, r3, #3
  403ffa:	4423      	add	r3, r4
  403ffc:	4628      	mov	r0, r5
  403ffe:	685a      	ldr	r2, [r3, #4]
  404000:	60f1      	str	r1, [r6, #12]
  404002:	f042 0201 	orr.w	r2, r2, #1
  404006:	608e      	str	r6, [r1, #8]
  404008:	605a      	str	r2, [r3, #4]
  40400a:	f000 fb11 	bl	404630 <__malloc_unlock>
  40400e:	3408      	adds	r4, #8
  404010:	4620      	mov	r0, r4
  404012:	b003      	add	sp, #12
  404014:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404018:	2400      	movs	r4, #0
  40401a:	230c      	movs	r3, #12
  40401c:	4620      	mov	r0, r4
  40401e:	602b      	str	r3, [r5, #0]
  404020:	b003      	add	sp, #12
  404022:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404026:	2040      	movs	r0, #64	; 0x40
  404028:	f44f 7300 	mov.w	r3, #512	; 0x200
  40402c:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  404030:	e74a      	b.n	403ec8 <_malloc_r+0x44>
  404032:	4423      	add	r3, r4
  404034:	68e1      	ldr	r1, [r4, #12]
  404036:	685a      	ldr	r2, [r3, #4]
  404038:	68a6      	ldr	r6, [r4, #8]
  40403a:	f042 0201 	orr.w	r2, r2, #1
  40403e:	60f1      	str	r1, [r6, #12]
  404040:	4628      	mov	r0, r5
  404042:	608e      	str	r6, [r1, #8]
  404044:	605a      	str	r2, [r3, #4]
  404046:	f000 faf3 	bl	404630 <__malloc_unlock>
  40404a:	3408      	adds	r4, #8
  40404c:	4620      	mov	r0, r4
  40404e:	b003      	add	sp, #12
  404050:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404054:	4423      	add	r3, r4
  404056:	4628      	mov	r0, r5
  404058:	685a      	ldr	r2, [r3, #4]
  40405a:	f042 0201 	orr.w	r2, r2, #1
  40405e:	605a      	str	r2, [r3, #4]
  404060:	f000 fae6 	bl	404630 <__malloc_unlock>
  404064:	3408      	adds	r4, #8
  404066:	4620      	mov	r0, r4
  404068:	b003      	add	sp, #12
  40406a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40406e:	68bc      	ldr	r4, [r7, #8]
  404070:	6863      	ldr	r3, [r4, #4]
  404072:	f023 0803 	bic.w	r8, r3, #3
  404076:	45b0      	cmp	r8, r6
  404078:	d304      	bcc.n	404084 <_malloc_r+0x200>
  40407a:	eba8 0306 	sub.w	r3, r8, r6
  40407e:	2b0f      	cmp	r3, #15
  404080:	f300 8085 	bgt.w	40418e <_malloc_r+0x30a>
  404084:	f8df 9158 	ldr.w	r9, [pc, #344]	; 4041e0 <_malloc_r+0x35c>
  404088:	4b50      	ldr	r3, [pc, #320]	; (4041cc <_malloc_r+0x348>)
  40408a:	f8d9 2000 	ldr.w	r2, [r9]
  40408e:	681b      	ldr	r3, [r3, #0]
  404090:	3201      	adds	r2, #1
  404092:	4433      	add	r3, r6
  404094:	eb04 0a08 	add.w	sl, r4, r8
  404098:	f000 8155 	beq.w	404346 <_malloc_r+0x4c2>
  40409c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  4040a0:	330f      	adds	r3, #15
  4040a2:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  4040a6:	f02b 0b0f 	bic.w	fp, fp, #15
  4040aa:	4659      	mov	r1, fp
  4040ac:	4628      	mov	r0, r5
  4040ae:	f000 fdbf 	bl	404c30 <_sbrk_r>
  4040b2:	1c41      	adds	r1, r0, #1
  4040b4:	4602      	mov	r2, r0
  4040b6:	f000 80fc 	beq.w	4042b2 <_malloc_r+0x42e>
  4040ba:	4582      	cmp	sl, r0
  4040bc:	f200 80f7 	bhi.w	4042ae <_malloc_r+0x42a>
  4040c0:	4b43      	ldr	r3, [pc, #268]	; (4041d0 <_malloc_r+0x34c>)
  4040c2:	6819      	ldr	r1, [r3, #0]
  4040c4:	4459      	add	r1, fp
  4040c6:	6019      	str	r1, [r3, #0]
  4040c8:	f000 814d 	beq.w	404366 <_malloc_r+0x4e2>
  4040cc:	f8d9 0000 	ldr.w	r0, [r9]
  4040d0:	3001      	adds	r0, #1
  4040d2:	bf1b      	ittet	ne
  4040d4:	eba2 0a0a 	subne.w	sl, r2, sl
  4040d8:	4451      	addne	r1, sl
  4040da:	f8c9 2000 	streq.w	r2, [r9]
  4040de:	6019      	strne	r1, [r3, #0]
  4040e0:	f012 0107 	ands.w	r1, r2, #7
  4040e4:	f000 8115 	beq.w	404312 <_malloc_r+0x48e>
  4040e8:	f1c1 0008 	rsb	r0, r1, #8
  4040ec:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  4040f0:	4402      	add	r2, r0
  4040f2:	3108      	adds	r1, #8
  4040f4:	eb02 090b 	add.w	r9, r2, fp
  4040f8:	f3c9 090b 	ubfx	r9, r9, #0, #12
  4040fc:	eba1 0909 	sub.w	r9, r1, r9
  404100:	4649      	mov	r1, r9
  404102:	4628      	mov	r0, r5
  404104:	9301      	str	r3, [sp, #4]
  404106:	9200      	str	r2, [sp, #0]
  404108:	f000 fd92 	bl	404c30 <_sbrk_r>
  40410c:	1c43      	adds	r3, r0, #1
  40410e:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404112:	f000 8143 	beq.w	40439c <_malloc_r+0x518>
  404116:	1a80      	subs	r0, r0, r2
  404118:	4448      	add	r0, r9
  40411a:	f040 0001 	orr.w	r0, r0, #1
  40411e:	6819      	ldr	r1, [r3, #0]
  404120:	60ba      	str	r2, [r7, #8]
  404122:	4449      	add	r1, r9
  404124:	42bc      	cmp	r4, r7
  404126:	6050      	str	r0, [r2, #4]
  404128:	6019      	str	r1, [r3, #0]
  40412a:	d017      	beq.n	40415c <_malloc_r+0x2d8>
  40412c:	f1b8 0f0f 	cmp.w	r8, #15
  404130:	f240 80fb 	bls.w	40432a <_malloc_r+0x4a6>
  404134:	6860      	ldr	r0, [r4, #4]
  404136:	f1a8 020c 	sub.w	r2, r8, #12
  40413a:	f022 0207 	bic.w	r2, r2, #7
  40413e:	eb04 0e02 	add.w	lr, r4, r2
  404142:	f000 0001 	and.w	r0, r0, #1
  404146:	f04f 0c05 	mov.w	ip, #5
  40414a:	4310      	orrs	r0, r2
  40414c:	2a0f      	cmp	r2, #15
  40414e:	6060      	str	r0, [r4, #4]
  404150:	f8ce c004 	str.w	ip, [lr, #4]
  404154:	f8ce c008 	str.w	ip, [lr, #8]
  404158:	f200 8117 	bhi.w	40438a <_malloc_r+0x506>
  40415c:	4b1d      	ldr	r3, [pc, #116]	; (4041d4 <_malloc_r+0x350>)
  40415e:	68bc      	ldr	r4, [r7, #8]
  404160:	681a      	ldr	r2, [r3, #0]
  404162:	4291      	cmp	r1, r2
  404164:	bf88      	it	hi
  404166:	6019      	strhi	r1, [r3, #0]
  404168:	4b1b      	ldr	r3, [pc, #108]	; (4041d8 <_malloc_r+0x354>)
  40416a:	681a      	ldr	r2, [r3, #0]
  40416c:	4291      	cmp	r1, r2
  40416e:	6862      	ldr	r2, [r4, #4]
  404170:	bf88      	it	hi
  404172:	6019      	strhi	r1, [r3, #0]
  404174:	f022 0203 	bic.w	r2, r2, #3
  404178:	4296      	cmp	r6, r2
  40417a:	eba2 0306 	sub.w	r3, r2, r6
  40417e:	d801      	bhi.n	404184 <_malloc_r+0x300>
  404180:	2b0f      	cmp	r3, #15
  404182:	dc04      	bgt.n	40418e <_malloc_r+0x30a>
  404184:	4628      	mov	r0, r5
  404186:	f000 fa53 	bl	404630 <__malloc_unlock>
  40418a:	2400      	movs	r4, #0
  40418c:	e740      	b.n	404010 <_malloc_r+0x18c>
  40418e:	19a2      	adds	r2, r4, r6
  404190:	f043 0301 	orr.w	r3, r3, #1
  404194:	f046 0601 	orr.w	r6, r6, #1
  404198:	6066      	str	r6, [r4, #4]
  40419a:	4628      	mov	r0, r5
  40419c:	60ba      	str	r2, [r7, #8]
  40419e:	6053      	str	r3, [r2, #4]
  4041a0:	f000 fa46 	bl	404630 <__malloc_unlock>
  4041a4:	3408      	adds	r4, #8
  4041a6:	4620      	mov	r0, r4
  4041a8:	b003      	add	sp, #12
  4041aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4041ae:	2b14      	cmp	r3, #20
  4041b0:	d971      	bls.n	404296 <_malloc_r+0x412>
  4041b2:	2b54      	cmp	r3, #84	; 0x54
  4041b4:	f200 80a3 	bhi.w	4042fe <_malloc_r+0x47a>
  4041b8:	0b33      	lsrs	r3, r6, #12
  4041ba:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  4041be:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  4041c2:	00c3      	lsls	r3, r0, #3
  4041c4:	e680      	b.n	403ec8 <_malloc_r+0x44>
  4041c6:	bf00      	nop
  4041c8:	20000444 	.word	0x20000444
  4041cc:	20000aa4 	.word	0x20000aa4
  4041d0:	20000a74 	.word	0x20000a74
  4041d4:	20000a9c 	.word	0x20000a9c
  4041d8:	20000aa0 	.word	0x20000aa0
  4041dc:	2000044c 	.word	0x2000044c
  4041e0:	2000084c 	.word	0x2000084c
  4041e4:	0a5a      	lsrs	r2, r3, #9
  4041e6:	2a04      	cmp	r2, #4
  4041e8:	d95b      	bls.n	4042a2 <_malloc_r+0x41e>
  4041ea:	2a14      	cmp	r2, #20
  4041ec:	f200 80ae 	bhi.w	40434c <_malloc_r+0x4c8>
  4041f0:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  4041f4:	00c9      	lsls	r1, r1, #3
  4041f6:	325b      	adds	r2, #91	; 0x5b
  4041f8:	eb07 0c01 	add.w	ip, r7, r1
  4041fc:	5879      	ldr	r1, [r7, r1]
  4041fe:	f1ac 0c08 	sub.w	ip, ip, #8
  404202:	458c      	cmp	ip, r1
  404204:	f000 8088 	beq.w	404318 <_malloc_r+0x494>
  404208:	684a      	ldr	r2, [r1, #4]
  40420a:	f022 0203 	bic.w	r2, r2, #3
  40420e:	4293      	cmp	r3, r2
  404210:	d273      	bcs.n	4042fa <_malloc_r+0x476>
  404212:	6889      	ldr	r1, [r1, #8]
  404214:	458c      	cmp	ip, r1
  404216:	d1f7      	bne.n	404208 <_malloc_r+0x384>
  404218:	f8dc 200c 	ldr.w	r2, [ip, #12]
  40421c:	687b      	ldr	r3, [r7, #4]
  40421e:	60e2      	str	r2, [r4, #12]
  404220:	f8c4 c008 	str.w	ip, [r4, #8]
  404224:	6094      	str	r4, [r2, #8]
  404226:	f8cc 400c 	str.w	r4, [ip, #12]
  40422a:	e68f      	b.n	403f4c <_malloc_r+0xc8>
  40422c:	19a1      	adds	r1, r4, r6
  40422e:	f046 0c01 	orr.w	ip, r6, #1
  404232:	f042 0601 	orr.w	r6, r2, #1
  404236:	f8c4 c004 	str.w	ip, [r4, #4]
  40423a:	4628      	mov	r0, r5
  40423c:	6179      	str	r1, [r7, #20]
  40423e:	6139      	str	r1, [r7, #16]
  404240:	f8c1 e00c 	str.w	lr, [r1, #12]
  404244:	f8c1 e008 	str.w	lr, [r1, #8]
  404248:	604e      	str	r6, [r1, #4]
  40424a:	50e2      	str	r2, [r4, r3]
  40424c:	f000 f9f0 	bl	404630 <__malloc_unlock>
  404250:	3408      	adds	r4, #8
  404252:	e6dd      	b.n	404010 <_malloc_r+0x18c>
  404254:	687b      	ldr	r3, [r7, #4]
  404256:	e679      	b.n	403f4c <_malloc_r+0xc8>
  404258:	f108 0801 	add.w	r8, r8, #1
  40425c:	f018 0f03 	tst.w	r8, #3
  404260:	f10c 0c08 	add.w	ip, ip, #8
  404264:	f47f ae85 	bne.w	403f72 <_malloc_r+0xee>
  404268:	e02d      	b.n	4042c6 <_malloc_r+0x442>
  40426a:	68dc      	ldr	r4, [r3, #12]
  40426c:	42a3      	cmp	r3, r4
  40426e:	bf08      	it	eq
  404270:	3002      	addeq	r0, #2
  404272:	f43f ae3e 	beq.w	403ef2 <_malloc_r+0x6e>
  404276:	e6bb      	b.n	403ff0 <_malloc_r+0x16c>
  404278:	4419      	add	r1, r3
  40427a:	461c      	mov	r4, r3
  40427c:	684a      	ldr	r2, [r1, #4]
  40427e:	68db      	ldr	r3, [r3, #12]
  404280:	f854 6f08 	ldr.w	r6, [r4, #8]!
  404284:	f042 0201 	orr.w	r2, r2, #1
  404288:	604a      	str	r2, [r1, #4]
  40428a:	4628      	mov	r0, r5
  40428c:	60f3      	str	r3, [r6, #12]
  40428e:	609e      	str	r6, [r3, #8]
  404290:	f000 f9ce 	bl	404630 <__malloc_unlock>
  404294:	e6bc      	b.n	404010 <_malloc_r+0x18c>
  404296:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  40429a:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  40429e:	00c3      	lsls	r3, r0, #3
  4042a0:	e612      	b.n	403ec8 <_malloc_r+0x44>
  4042a2:	099a      	lsrs	r2, r3, #6
  4042a4:	f102 0139 	add.w	r1, r2, #57	; 0x39
  4042a8:	00c9      	lsls	r1, r1, #3
  4042aa:	3238      	adds	r2, #56	; 0x38
  4042ac:	e7a4      	b.n	4041f8 <_malloc_r+0x374>
  4042ae:	42bc      	cmp	r4, r7
  4042b0:	d054      	beq.n	40435c <_malloc_r+0x4d8>
  4042b2:	68bc      	ldr	r4, [r7, #8]
  4042b4:	6862      	ldr	r2, [r4, #4]
  4042b6:	f022 0203 	bic.w	r2, r2, #3
  4042ba:	e75d      	b.n	404178 <_malloc_r+0x2f4>
  4042bc:	f859 3908 	ldr.w	r3, [r9], #-8
  4042c0:	4599      	cmp	r9, r3
  4042c2:	f040 8086 	bne.w	4043d2 <_malloc_r+0x54e>
  4042c6:	f010 0f03 	tst.w	r0, #3
  4042ca:	f100 30ff 	add.w	r0, r0, #4294967295
  4042ce:	d1f5      	bne.n	4042bc <_malloc_r+0x438>
  4042d0:	687b      	ldr	r3, [r7, #4]
  4042d2:	ea23 0304 	bic.w	r3, r3, r4
  4042d6:	607b      	str	r3, [r7, #4]
  4042d8:	0064      	lsls	r4, r4, #1
  4042da:	429c      	cmp	r4, r3
  4042dc:	f63f aec7 	bhi.w	40406e <_malloc_r+0x1ea>
  4042e0:	2c00      	cmp	r4, #0
  4042e2:	f43f aec4 	beq.w	40406e <_malloc_r+0x1ea>
  4042e6:	421c      	tst	r4, r3
  4042e8:	4640      	mov	r0, r8
  4042ea:	f47f ae3e 	bne.w	403f6a <_malloc_r+0xe6>
  4042ee:	0064      	lsls	r4, r4, #1
  4042f0:	421c      	tst	r4, r3
  4042f2:	f100 0004 	add.w	r0, r0, #4
  4042f6:	d0fa      	beq.n	4042ee <_malloc_r+0x46a>
  4042f8:	e637      	b.n	403f6a <_malloc_r+0xe6>
  4042fa:	468c      	mov	ip, r1
  4042fc:	e78c      	b.n	404218 <_malloc_r+0x394>
  4042fe:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  404302:	d815      	bhi.n	404330 <_malloc_r+0x4ac>
  404304:	0bf3      	lsrs	r3, r6, #15
  404306:	f103 0078 	add.w	r0, r3, #120	; 0x78
  40430a:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  40430e:	00c3      	lsls	r3, r0, #3
  404310:	e5da      	b.n	403ec8 <_malloc_r+0x44>
  404312:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  404316:	e6ed      	b.n	4040f4 <_malloc_r+0x270>
  404318:	687b      	ldr	r3, [r7, #4]
  40431a:	1092      	asrs	r2, r2, #2
  40431c:	2101      	movs	r1, #1
  40431e:	fa01 f202 	lsl.w	r2, r1, r2
  404322:	4313      	orrs	r3, r2
  404324:	607b      	str	r3, [r7, #4]
  404326:	4662      	mov	r2, ip
  404328:	e779      	b.n	40421e <_malloc_r+0x39a>
  40432a:	2301      	movs	r3, #1
  40432c:	6053      	str	r3, [r2, #4]
  40432e:	e729      	b.n	404184 <_malloc_r+0x300>
  404330:	f240 5254 	movw	r2, #1364	; 0x554
  404334:	4293      	cmp	r3, r2
  404336:	d822      	bhi.n	40437e <_malloc_r+0x4fa>
  404338:	0cb3      	lsrs	r3, r6, #18
  40433a:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  40433e:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  404342:	00c3      	lsls	r3, r0, #3
  404344:	e5c0      	b.n	403ec8 <_malloc_r+0x44>
  404346:	f103 0b10 	add.w	fp, r3, #16
  40434a:	e6ae      	b.n	4040aa <_malloc_r+0x226>
  40434c:	2a54      	cmp	r2, #84	; 0x54
  40434e:	d829      	bhi.n	4043a4 <_malloc_r+0x520>
  404350:	0b1a      	lsrs	r2, r3, #12
  404352:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  404356:	00c9      	lsls	r1, r1, #3
  404358:	326e      	adds	r2, #110	; 0x6e
  40435a:	e74d      	b.n	4041f8 <_malloc_r+0x374>
  40435c:	4b20      	ldr	r3, [pc, #128]	; (4043e0 <_malloc_r+0x55c>)
  40435e:	6819      	ldr	r1, [r3, #0]
  404360:	4459      	add	r1, fp
  404362:	6019      	str	r1, [r3, #0]
  404364:	e6b2      	b.n	4040cc <_malloc_r+0x248>
  404366:	f3ca 000b 	ubfx	r0, sl, #0, #12
  40436a:	2800      	cmp	r0, #0
  40436c:	f47f aeae 	bne.w	4040cc <_malloc_r+0x248>
  404370:	eb08 030b 	add.w	r3, r8, fp
  404374:	68ba      	ldr	r2, [r7, #8]
  404376:	f043 0301 	orr.w	r3, r3, #1
  40437a:	6053      	str	r3, [r2, #4]
  40437c:	e6ee      	b.n	40415c <_malloc_r+0x2d8>
  40437e:	207f      	movs	r0, #127	; 0x7f
  404380:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  404384:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  404388:	e59e      	b.n	403ec8 <_malloc_r+0x44>
  40438a:	f104 0108 	add.w	r1, r4, #8
  40438e:	4628      	mov	r0, r5
  404390:	9300      	str	r3, [sp, #0]
  404392:	f000 fea3 	bl	4050dc <_free_r>
  404396:	9b00      	ldr	r3, [sp, #0]
  404398:	6819      	ldr	r1, [r3, #0]
  40439a:	e6df      	b.n	40415c <_malloc_r+0x2d8>
  40439c:	2001      	movs	r0, #1
  40439e:	f04f 0900 	mov.w	r9, #0
  4043a2:	e6bc      	b.n	40411e <_malloc_r+0x29a>
  4043a4:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4043a8:	d805      	bhi.n	4043b6 <_malloc_r+0x532>
  4043aa:	0bda      	lsrs	r2, r3, #15
  4043ac:	f102 0178 	add.w	r1, r2, #120	; 0x78
  4043b0:	00c9      	lsls	r1, r1, #3
  4043b2:	3277      	adds	r2, #119	; 0x77
  4043b4:	e720      	b.n	4041f8 <_malloc_r+0x374>
  4043b6:	f240 5154 	movw	r1, #1364	; 0x554
  4043ba:	428a      	cmp	r2, r1
  4043bc:	d805      	bhi.n	4043ca <_malloc_r+0x546>
  4043be:	0c9a      	lsrs	r2, r3, #18
  4043c0:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  4043c4:	00c9      	lsls	r1, r1, #3
  4043c6:	327c      	adds	r2, #124	; 0x7c
  4043c8:	e716      	b.n	4041f8 <_malloc_r+0x374>
  4043ca:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  4043ce:	227e      	movs	r2, #126	; 0x7e
  4043d0:	e712      	b.n	4041f8 <_malloc_r+0x374>
  4043d2:	687b      	ldr	r3, [r7, #4]
  4043d4:	e780      	b.n	4042d8 <_malloc_r+0x454>
  4043d6:	08f0      	lsrs	r0, r6, #3
  4043d8:	f106 0308 	add.w	r3, r6, #8
  4043dc:	e600      	b.n	403fe0 <_malloc_r+0x15c>
  4043de:	bf00      	nop
  4043e0:	20000a74 	.word	0x20000a74
	...

004043f0 <memchr>:
  4043f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4043f4:	2a10      	cmp	r2, #16
  4043f6:	db2b      	blt.n	404450 <memchr+0x60>
  4043f8:	f010 0f07 	tst.w	r0, #7
  4043fc:	d008      	beq.n	404410 <memchr+0x20>
  4043fe:	f810 3b01 	ldrb.w	r3, [r0], #1
  404402:	3a01      	subs	r2, #1
  404404:	428b      	cmp	r3, r1
  404406:	d02d      	beq.n	404464 <memchr+0x74>
  404408:	f010 0f07 	tst.w	r0, #7
  40440c:	b342      	cbz	r2, 404460 <memchr+0x70>
  40440e:	d1f6      	bne.n	4043fe <memchr+0xe>
  404410:	b4f0      	push	{r4, r5, r6, r7}
  404412:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404416:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40441a:	f022 0407 	bic.w	r4, r2, #7
  40441e:	f07f 0700 	mvns.w	r7, #0
  404422:	2300      	movs	r3, #0
  404424:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404428:	3c08      	subs	r4, #8
  40442a:	ea85 0501 	eor.w	r5, r5, r1
  40442e:	ea86 0601 	eor.w	r6, r6, r1
  404432:	fa85 f547 	uadd8	r5, r5, r7
  404436:	faa3 f587 	sel	r5, r3, r7
  40443a:	fa86 f647 	uadd8	r6, r6, r7
  40443e:	faa5 f687 	sel	r6, r5, r7
  404442:	b98e      	cbnz	r6, 404468 <memchr+0x78>
  404444:	d1ee      	bne.n	404424 <memchr+0x34>
  404446:	bcf0      	pop	{r4, r5, r6, r7}
  404448:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40444c:	f002 0207 	and.w	r2, r2, #7
  404450:	b132      	cbz	r2, 404460 <memchr+0x70>
  404452:	f810 3b01 	ldrb.w	r3, [r0], #1
  404456:	3a01      	subs	r2, #1
  404458:	ea83 0301 	eor.w	r3, r3, r1
  40445c:	b113      	cbz	r3, 404464 <memchr+0x74>
  40445e:	d1f8      	bne.n	404452 <memchr+0x62>
  404460:	2000      	movs	r0, #0
  404462:	4770      	bx	lr
  404464:	3801      	subs	r0, #1
  404466:	4770      	bx	lr
  404468:	2d00      	cmp	r5, #0
  40446a:	bf06      	itte	eq
  40446c:	4635      	moveq	r5, r6
  40446e:	3803      	subeq	r0, #3
  404470:	3807      	subne	r0, #7
  404472:	f015 0f01 	tst.w	r5, #1
  404476:	d107      	bne.n	404488 <memchr+0x98>
  404478:	3001      	adds	r0, #1
  40447a:	f415 7f80 	tst.w	r5, #256	; 0x100
  40447e:	bf02      	ittt	eq
  404480:	3001      	addeq	r0, #1
  404482:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404486:	3001      	addeq	r0, #1
  404488:	bcf0      	pop	{r4, r5, r6, r7}
  40448a:	3801      	subs	r0, #1
  40448c:	4770      	bx	lr
  40448e:	bf00      	nop

00404490 <memcmp>:
  404490:	2a03      	cmp	r2, #3
  404492:	b470      	push	{r4, r5, r6}
  404494:	d922      	bls.n	4044dc <memcmp+0x4c>
  404496:	ea40 0301 	orr.w	r3, r0, r1
  40449a:	079b      	lsls	r3, r3, #30
  40449c:	d011      	beq.n	4044c2 <memcmp+0x32>
  40449e:	7803      	ldrb	r3, [r0, #0]
  4044a0:	780c      	ldrb	r4, [r1, #0]
  4044a2:	42a3      	cmp	r3, r4
  4044a4:	d11d      	bne.n	4044e2 <memcmp+0x52>
  4044a6:	440a      	add	r2, r1
  4044a8:	3101      	adds	r1, #1
  4044aa:	e005      	b.n	4044b8 <memcmp+0x28>
  4044ac:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  4044b0:	f811 4b01 	ldrb.w	r4, [r1], #1
  4044b4:	42a3      	cmp	r3, r4
  4044b6:	d114      	bne.n	4044e2 <memcmp+0x52>
  4044b8:	4291      	cmp	r1, r2
  4044ba:	d1f7      	bne.n	4044ac <memcmp+0x1c>
  4044bc:	2000      	movs	r0, #0
  4044be:	bc70      	pop	{r4, r5, r6}
  4044c0:	4770      	bx	lr
  4044c2:	680d      	ldr	r5, [r1, #0]
  4044c4:	6806      	ldr	r6, [r0, #0]
  4044c6:	42ae      	cmp	r6, r5
  4044c8:	460c      	mov	r4, r1
  4044ca:	4603      	mov	r3, r0
  4044cc:	f101 0104 	add.w	r1, r1, #4
  4044d0:	f100 0004 	add.w	r0, r0, #4
  4044d4:	d108      	bne.n	4044e8 <memcmp+0x58>
  4044d6:	3a04      	subs	r2, #4
  4044d8:	2a03      	cmp	r2, #3
  4044da:	d8f2      	bhi.n	4044c2 <memcmp+0x32>
  4044dc:	2a00      	cmp	r2, #0
  4044de:	d1de      	bne.n	40449e <memcmp+0xe>
  4044e0:	e7ec      	b.n	4044bc <memcmp+0x2c>
  4044e2:	1b18      	subs	r0, r3, r4
  4044e4:	bc70      	pop	{r4, r5, r6}
  4044e6:	4770      	bx	lr
  4044e8:	4621      	mov	r1, r4
  4044ea:	4618      	mov	r0, r3
  4044ec:	e7d7      	b.n	40449e <memcmp+0xe>
  4044ee:	bf00      	nop

004044f0 <memcpy>:
  4044f0:	4684      	mov	ip, r0
  4044f2:	ea41 0300 	orr.w	r3, r1, r0
  4044f6:	f013 0303 	ands.w	r3, r3, #3
  4044fa:	d16d      	bne.n	4045d8 <memcpy+0xe8>
  4044fc:	3a40      	subs	r2, #64	; 0x40
  4044fe:	d341      	bcc.n	404584 <memcpy+0x94>
  404500:	f851 3b04 	ldr.w	r3, [r1], #4
  404504:	f840 3b04 	str.w	r3, [r0], #4
  404508:	f851 3b04 	ldr.w	r3, [r1], #4
  40450c:	f840 3b04 	str.w	r3, [r0], #4
  404510:	f851 3b04 	ldr.w	r3, [r1], #4
  404514:	f840 3b04 	str.w	r3, [r0], #4
  404518:	f851 3b04 	ldr.w	r3, [r1], #4
  40451c:	f840 3b04 	str.w	r3, [r0], #4
  404520:	f851 3b04 	ldr.w	r3, [r1], #4
  404524:	f840 3b04 	str.w	r3, [r0], #4
  404528:	f851 3b04 	ldr.w	r3, [r1], #4
  40452c:	f840 3b04 	str.w	r3, [r0], #4
  404530:	f851 3b04 	ldr.w	r3, [r1], #4
  404534:	f840 3b04 	str.w	r3, [r0], #4
  404538:	f851 3b04 	ldr.w	r3, [r1], #4
  40453c:	f840 3b04 	str.w	r3, [r0], #4
  404540:	f851 3b04 	ldr.w	r3, [r1], #4
  404544:	f840 3b04 	str.w	r3, [r0], #4
  404548:	f851 3b04 	ldr.w	r3, [r1], #4
  40454c:	f840 3b04 	str.w	r3, [r0], #4
  404550:	f851 3b04 	ldr.w	r3, [r1], #4
  404554:	f840 3b04 	str.w	r3, [r0], #4
  404558:	f851 3b04 	ldr.w	r3, [r1], #4
  40455c:	f840 3b04 	str.w	r3, [r0], #4
  404560:	f851 3b04 	ldr.w	r3, [r1], #4
  404564:	f840 3b04 	str.w	r3, [r0], #4
  404568:	f851 3b04 	ldr.w	r3, [r1], #4
  40456c:	f840 3b04 	str.w	r3, [r0], #4
  404570:	f851 3b04 	ldr.w	r3, [r1], #4
  404574:	f840 3b04 	str.w	r3, [r0], #4
  404578:	f851 3b04 	ldr.w	r3, [r1], #4
  40457c:	f840 3b04 	str.w	r3, [r0], #4
  404580:	3a40      	subs	r2, #64	; 0x40
  404582:	d2bd      	bcs.n	404500 <memcpy+0x10>
  404584:	3230      	adds	r2, #48	; 0x30
  404586:	d311      	bcc.n	4045ac <memcpy+0xbc>
  404588:	f851 3b04 	ldr.w	r3, [r1], #4
  40458c:	f840 3b04 	str.w	r3, [r0], #4
  404590:	f851 3b04 	ldr.w	r3, [r1], #4
  404594:	f840 3b04 	str.w	r3, [r0], #4
  404598:	f851 3b04 	ldr.w	r3, [r1], #4
  40459c:	f840 3b04 	str.w	r3, [r0], #4
  4045a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4045a4:	f840 3b04 	str.w	r3, [r0], #4
  4045a8:	3a10      	subs	r2, #16
  4045aa:	d2ed      	bcs.n	404588 <memcpy+0x98>
  4045ac:	320c      	adds	r2, #12
  4045ae:	d305      	bcc.n	4045bc <memcpy+0xcc>
  4045b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4045b4:	f840 3b04 	str.w	r3, [r0], #4
  4045b8:	3a04      	subs	r2, #4
  4045ba:	d2f9      	bcs.n	4045b0 <memcpy+0xc0>
  4045bc:	3204      	adds	r2, #4
  4045be:	d008      	beq.n	4045d2 <memcpy+0xe2>
  4045c0:	07d2      	lsls	r2, r2, #31
  4045c2:	bf1c      	itt	ne
  4045c4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4045c8:	f800 3b01 	strbne.w	r3, [r0], #1
  4045cc:	d301      	bcc.n	4045d2 <memcpy+0xe2>
  4045ce:	880b      	ldrh	r3, [r1, #0]
  4045d0:	8003      	strh	r3, [r0, #0]
  4045d2:	4660      	mov	r0, ip
  4045d4:	4770      	bx	lr
  4045d6:	bf00      	nop
  4045d8:	2a08      	cmp	r2, #8
  4045da:	d313      	bcc.n	404604 <memcpy+0x114>
  4045dc:	078b      	lsls	r3, r1, #30
  4045de:	d08d      	beq.n	4044fc <memcpy+0xc>
  4045e0:	f010 0303 	ands.w	r3, r0, #3
  4045e4:	d08a      	beq.n	4044fc <memcpy+0xc>
  4045e6:	f1c3 0304 	rsb	r3, r3, #4
  4045ea:	1ad2      	subs	r2, r2, r3
  4045ec:	07db      	lsls	r3, r3, #31
  4045ee:	bf1c      	itt	ne
  4045f0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4045f4:	f800 3b01 	strbne.w	r3, [r0], #1
  4045f8:	d380      	bcc.n	4044fc <memcpy+0xc>
  4045fa:	f831 3b02 	ldrh.w	r3, [r1], #2
  4045fe:	f820 3b02 	strh.w	r3, [r0], #2
  404602:	e77b      	b.n	4044fc <memcpy+0xc>
  404604:	3a04      	subs	r2, #4
  404606:	d3d9      	bcc.n	4045bc <memcpy+0xcc>
  404608:	3a01      	subs	r2, #1
  40460a:	f811 3b01 	ldrb.w	r3, [r1], #1
  40460e:	f800 3b01 	strb.w	r3, [r0], #1
  404612:	d2f9      	bcs.n	404608 <memcpy+0x118>
  404614:	780b      	ldrb	r3, [r1, #0]
  404616:	7003      	strb	r3, [r0, #0]
  404618:	784b      	ldrb	r3, [r1, #1]
  40461a:	7043      	strb	r3, [r0, #1]
  40461c:	788b      	ldrb	r3, [r1, #2]
  40461e:	7083      	strb	r3, [r0, #2]
  404620:	4660      	mov	r0, ip
  404622:	4770      	bx	lr

00404624 <__malloc_lock>:
  404624:	4801      	ldr	r0, [pc, #4]	; (40462c <__malloc_lock+0x8>)
  404626:	f7ff bc29 	b.w	403e7c <__retarget_lock_acquire_recursive>
  40462a:	bf00      	nop
  40462c:	20000eb0 	.word	0x20000eb0

00404630 <__malloc_unlock>:
  404630:	4801      	ldr	r0, [pc, #4]	; (404638 <__malloc_unlock+0x8>)
  404632:	f7ff bc25 	b.w	403e80 <__retarget_lock_release_recursive>
  404636:	bf00      	nop
  404638:	20000eb0 	.word	0x20000eb0

0040463c <_Balloc>:
  40463c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40463e:	b570      	push	{r4, r5, r6, lr}
  404640:	4605      	mov	r5, r0
  404642:	460c      	mov	r4, r1
  404644:	b14b      	cbz	r3, 40465a <_Balloc+0x1e>
  404646:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  40464a:	b180      	cbz	r0, 40466e <_Balloc+0x32>
  40464c:	6802      	ldr	r2, [r0, #0]
  40464e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  404652:	2300      	movs	r3, #0
  404654:	6103      	str	r3, [r0, #16]
  404656:	60c3      	str	r3, [r0, #12]
  404658:	bd70      	pop	{r4, r5, r6, pc}
  40465a:	2221      	movs	r2, #33	; 0x21
  40465c:	2104      	movs	r1, #4
  40465e:	f000 fcbd 	bl	404fdc <_calloc_r>
  404662:	64e8      	str	r0, [r5, #76]	; 0x4c
  404664:	4603      	mov	r3, r0
  404666:	2800      	cmp	r0, #0
  404668:	d1ed      	bne.n	404646 <_Balloc+0xa>
  40466a:	2000      	movs	r0, #0
  40466c:	bd70      	pop	{r4, r5, r6, pc}
  40466e:	2101      	movs	r1, #1
  404670:	fa01 f604 	lsl.w	r6, r1, r4
  404674:	1d72      	adds	r2, r6, #5
  404676:	4628      	mov	r0, r5
  404678:	0092      	lsls	r2, r2, #2
  40467a:	f000 fcaf 	bl	404fdc <_calloc_r>
  40467e:	2800      	cmp	r0, #0
  404680:	d0f3      	beq.n	40466a <_Balloc+0x2e>
  404682:	6044      	str	r4, [r0, #4]
  404684:	6086      	str	r6, [r0, #8]
  404686:	e7e4      	b.n	404652 <_Balloc+0x16>

00404688 <_Bfree>:
  404688:	b131      	cbz	r1, 404698 <_Bfree+0x10>
  40468a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40468c:	684a      	ldr	r2, [r1, #4]
  40468e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  404692:	6008      	str	r0, [r1, #0]
  404694:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  404698:	4770      	bx	lr
  40469a:	bf00      	nop

0040469c <__multadd>:
  40469c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40469e:	690c      	ldr	r4, [r1, #16]
  4046a0:	b083      	sub	sp, #12
  4046a2:	460d      	mov	r5, r1
  4046a4:	4606      	mov	r6, r0
  4046a6:	f101 0e14 	add.w	lr, r1, #20
  4046aa:	2700      	movs	r7, #0
  4046ac:	f8de 0000 	ldr.w	r0, [lr]
  4046b0:	b281      	uxth	r1, r0
  4046b2:	fb02 3301 	mla	r3, r2, r1, r3
  4046b6:	0c01      	lsrs	r1, r0, #16
  4046b8:	0c18      	lsrs	r0, r3, #16
  4046ba:	fb02 0101 	mla	r1, r2, r1, r0
  4046be:	b29b      	uxth	r3, r3
  4046c0:	3701      	adds	r7, #1
  4046c2:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  4046c6:	42bc      	cmp	r4, r7
  4046c8:	f84e 3b04 	str.w	r3, [lr], #4
  4046cc:	ea4f 4311 	mov.w	r3, r1, lsr #16
  4046d0:	dcec      	bgt.n	4046ac <__multadd+0x10>
  4046d2:	b13b      	cbz	r3, 4046e4 <__multadd+0x48>
  4046d4:	68aa      	ldr	r2, [r5, #8]
  4046d6:	4294      	cmp	r4, r2
  4046d8:	da07      	bge.n	4046ea <__multadd+0x4e>
  4046da:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  4046de:	3401      	adds	r4, #1
  4046e0:	6153      	str	r3, [r2, #20]
  4046e2:	612c      	str	r4, [r5, #16]
  4046e4:	4628      	mov	r0, r5
  4046e6:	b003      	add	sp, #12
  4046e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4046ea:	6869      	ldr	r1, [r5, #4]
  4046ec:	9301      	str	r3, [sp, #4]
  4046ee:	3101      	adds	r1, #1
  4046f0:	4630      	mov	r0, r6
  4046f2:	f7ff ffa3 	bl	40463c <_Balloc>
  4046f6:	692a      	ldr	r2, [r5, #16]
  4046f8:	3202      	adds	r2, #2
  4046fa:	f105 010c 	add.w	r1, r5, #12
  4046fe:	4607      	mov	r7, r0
  404700:	0092      	lsls	r2, r2, #2
  404702:	300c      	adds	r0, #12
  404704:	f7ff fef4 	bl	4044f0 <memcpy>
  404708:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  40470a:	6869      	ldr	r1, [r5, #4]
  40470c:	9b01      	ldr	r3, [sp, #4]
  40470e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  404712:	6028      	str	r0, [r5, #0]
  404714:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  404718:	463d      	mov	r5, r7
  40471a:	e7de      	b.n	4046da <__multadd+0x3e>

0040471c <__hi0bits>:
  40471c:	0c02      	lsrs	r2, r0, #16
  40471e:	0412      	lsls	r2, r2, #16
  404720:	4603      	mov	r3, r0
  404722:	b9b2      	cbnz	r2, 404752 <__hi0bits+0x36>
  404724:	0403      	lsls	r3, r0, #16
  404726:	2010      	movs	r0, #16
  404728:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  40472c:	bf04      	itt	eq
  40472e:	021b      	lsleq	r3, r3, #8
  404730:	3008      	addeq	r0, #8
  404732:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  404736:	bf04      	itt	eq
  404738:	011b      	lsleq	r3, r3, #4
  40473a:	3004      	addeq	r0, #4
  40473c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  404740:	bf04      	itt	eq
  404742:	009b      	lsleq	r3, r3, #2
  404744:	3002      	addeq	r0, #2
  404746:	2b00      	cmp	r3, #0
  404748:	db02      	blt.n	404750 <__hi0bits+0x34>
  40474a:	005b      	lsls	r3, r3, #1
  40474c:	d403      	bmi.n	404756 <__hi0bits+0x3a>
  40474e:	2020      	movs	r0, #32
  404750:	4770      	bx	lr
  404752:	2000      	movs	r0, #0
  404754:	e7e8      	b.n	404728 <__hi0bits+0xc>
  404756:	3001      	adds	r0, #1
  404758:	4770      	bx	lr
  40475a:	bf00      	nop

0040475c <__lo0bits>:
  40475c:	6803      	ldr	r3, [r0, #0]
  40475e:	f013 0207 	ands.w	r2, r3, #7
  404762:	4601      	mov	r1, r0
  404764:	d007      	beq.n	404776 <__lo0bits+0x1a>
  404766:	07da      	lsls	r2, r3, #31
  404768:	d421      	bmi.n	4047ae <__lo0bits+0x52>
  40476a:	0798      	lsls	r0, r3, #30
  40476c:	d421      	bmi.n	4047b2 <__lo0bits+0x56>
  40476e:	089b      	lsrs	r3, r3, #2
  404770:	600b      	str	r3, [r1, #0]
  404772:	2002      	movs	r0, #2
  404774:	4770      	bx	lr
  404776:	b298      	uxth	r0, r3
  404778:	b198      	cbz	r0, 4047a2 <__lo0bits+0x46>
  40477a:	4610      	mov	r0, r2
  40477c:	f013 0fff 	tst.w	r3, #255	; 0xff
  404780:	bf04      	itt	eq
  404782:	0a1b      	lsreq	r3, r3, #8
  404784:	3008      	addeq	r0, #8
  404786:	071a      	lsls	r2, r3, #28
  404788:	bf04      	itt	eq
  40478a:	091b      	lsreq	r3, r3, #4
  40478c:	3004      	addeq	r0, #4
  40478e:	079a      	lsls	r2, r3, #30
  404790:	bf04      	itt	eq
  404792:	089b      	lsreq	r3, r3, #2
  404794:	3002      	addeq	r0, #2
  404796:	07da      	lsls	r2, r3, #31
  404798:	d407      	bmi.n	4047aa <__lo0bits+0x4e>
  40479a:	085b      	lsrs	r3, r3, #1
  40479c:	d104      	bne.n	4047a8 <__lo0bits+0x4c>
  40479e:	2020      	movs	r0, #32
  4047a0:	4770      	bx	lr
  4047a2:	0c1b      	lsrs	r3, r3, #16
  4047a4:	2010      	movs	r0, #16
  4047a6:	e7e9      	b.n	40477c <__lo0bits+0x20>
  4047a8:	3001      	adds	r0, #1
  4047aa:	600b      	str	r3, [r1, #0]
  4047ac:	4770      	bx	lr
  4047ae:	2000      	movs	r0, #0
  4047b0:	4770      	bx	lr
  4047b2:	085b      	lsrs	r3, r3, #1
  4047b4:	600b      	str	r3, [r1, #0]
  4047b6:	2001      	movs	r0, #1
  4047b8:	4770      	bx	lr
  4047ba:	bf00      	nop

004047bc <__i2b>:
  4047bc:	b510      	push	{r4, lr}
  4047be:	460c      	mov	r4, r1
  4047c0:	2101      	movs	r1, #1
  4047c2:	f7ff ff3b 	bl	40463c <_Balloc>
  4047c6:	2201      	movs	r2, #1
  4047c8:	6144      	str	r4, [r0, #20]
  4047ca:	6102      	str	r2, [r0, #16]
  4047cc:	bd10      	pop	{r4, pc}
  4047ce:	bf00      	nop

004047d0 <__multiply>:
  4047d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4047d4:	690c      	ldr	r4, [r1, #16]
  4047d6:	6915      	ldr	r5, [r2, #16]
  4047d8:	42ac      	cmp	r4, r5
  4047da:	b083      	sub	sp, #12
  4047dc:	468b      	mov	fp, r1
  4047de:	4616      	mov	r6, r2
  4047e0:	da04      	bge.n	4047ec <__multiply+0x1c>
  4047e2:	4622      	mov	r2, r4
  4047e4:	46b3      	mov	fp, r6
  4047e6:	462c      	mov	r4, r5
  4047e8:	460e      	mov	r6, r1
  4047ea:	4615      	mov	r5, r2
  4047ec:	f8db 3008 	ldr.w	r3, [fp, #8]
  4047f0:	f8db 1004 	ldr.w	r1, [fp, #4]
  4047f4:	eb04 0805 	add.w	r8, r4, r5
  4047f8:	4598      	cmp	r8, r3
  4047fa:	bfc8      	it	gt
  4047fc:	3101      	addgt	r1, #1
  4047fe:	f7ff ff1d 	bl	40463c <_Balloc>
  404802:	f100 0914 	add.w	r9, r0, #20
  404806:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  40480a:	45d1      	cmp	r9, sl
  40480c:	9000      	str	r0, [sp, #0]
  40480e:	d205      	bcs.n	40481c <__multiply+0x4c>
  404810:	464b      	mov	r3, r9
  404812:	2100      	movs	r1, #0
  404814:	f843 1b04 	str.w	r1, [r3], #4
  404818:	459a      	cmp	sl, r3
  40481a:	d8fb      	bhi.n	404814 <__multiply+0x44>
  40481c:	f106 0c14 	add.w	ip, r6, #20
  404820:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  404824:	f10b 0b14 	add.w	fp, fp, #20
  404828:	459c      	cmp	ip, r3
  40482a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  40482e:	d24c      	bcs.n	4048ca <__multiply+0xfa>
  404830:	f8cd a004 	str.w	sl, [sp, #4]
  404834:	469a      	mov	sl, r3
  404836:	f8dc 5000 	ldr.w	r5, [ip]
  40483a:	b2af      	uxth	r7, r5
  40483c:	b1ef      	cbz	r7, 40487a <__multiply+0xaa>
  40483e:	2100      	movs	r1, #0
  404840:	464d      	mov	r5, r9
  404842:	465e      	mov	r6, fp
  404844:	460c      	mov	r4, r1
  404846:	f856 2b04 	ldr.w	r2, [r6], #4
  40484a:	6828      	ldr	r0, [r5, #0]
  40484c:	b293      	uxth	r3, r2
  40484e:	b281      	uxth	r1, r0
  404850:	fb07 1303 	mla	r3, r7, r3, r1
  404854:	0c12      	lsrs	r2, r2, #16
  404856:	0c01      	lsrs	r1, r0, #16
  404858:	4423      	add	r3, r4
  40485a:	fb07 1102 	mla	r1, r7, r2, r1
  40485e:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  404862:	b29b      	uxth	r3, r3
  404864:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  404868:	45b6      	cmp	lr, r6
  40486a:	f845 3b04 	str.w	r3, [r5], #4
  40486e:	ea4f 4411 	mov.w	r4, r1, lsr #16
  404872:	d8e8      	bhi.n	404846 <__multiply+0x76>
  404874:	602c      	str	r4, [r5, #0]
  404876:	f8dc 5000 	ldr.w	r5, [ip]
  40487a:	0c2d      	lsrs	r5, r5, #16
  40487c:	d01d      	beq.n	4048ba <__multiply+0xea>
  40487e:	f8d9 3000 	ldr.w	r3, [r9]
  404882:	4648      	mov	r0, r9
  404884:	461c      	mov	r4, r3
  404886:	4659      	mov	r1, fp
  404888:	2200      	movs	r2, #0
  40488a:	880e      	ldrh	r6, [r1, #0]
  40488c:	0c24      	lsrs	r4, r4, #16
  40488e:	fb05 4406 	mla	r4, r5, r6, r4
  404892:	4422      	add	r2, r4
  404894:	b29b      	uxth	r3, r3
  404896:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  40489a:	f840 3b04 	str.w	r3, [r0], #4
  40489e:	f851 3b04 	ldr.w	r3, [r1], #4
  4048a2:	6804      	ldr	r4, [r0, #0]
  4048a4:	0c1b      	lsrs	r3, r3, #16
  4048a6:	b2a6      	uxth	r6, r4
  4048a8:	fb05 6303 	mla	r3, r5, r3, r6
  4048ac:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  4048b0:	458e      	cmp	lr, r1
  4048b2:	ea4f 4213 	mov.w	r2, r3, lsr #16
  4048b6:	d8e8      	bhi.n	40488a <__multiply+0xba>
  4048b8:	6003      	str	r3, [r0, #0]
  4048ba:	f10c 0c04 	add.w	ip, ip, #4
  4048be:	45e2      	cmp	sl, ip
  4048c0:	f109 0904 	add.w	r9, r9, #4
  4048c4:	d8b7      	bhi.n	404836 <__multiply+0x66>
  4048c6:	f8dd a004 	ldr.w	sl, [sp, #4]
  4048ca:	f1b8 0f00 	cmp.w	r8, #0
  4048ce:	dd0b      	ble.n	4048e8 <__multiply+0x118>
  4048d0:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  4048d4:	f1aa 0a04 	sub.w	sl, sl, #4
  4048d8:	b11b      	cbz	r3, 4048e2 <__multiply+0x112>
  4048da:	e005      	b.n	4048e8 <__multiply+0x118>
  4048dc:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  4048e0:	b913      	cbnz	r3, 4048e8 <__multiply+0x118>
  4048e2:	f1b8 0801 	subs.w	r8, r8, #1
  4048e6:	d1f9      	bne.n	4048dc <__multiply+0x10c>
  4048e8:	9800      	ldr	r0, [sp, #0]
  4048ea:	f8c0 8010 	str.w	r8, [r0, #16]
  4048ee:	b003      	add	sp, #12
  4048f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

004048f4 <__pow5mult>:
  4048f4:	f012 0303 	ands.w	r3, r2, #3
  4048f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4048fc:	4614      	mov	r4, r2
  4048fe:	4607      	mov	r7, r0
  404900:	d12e      	bne.n	404960 <__pow5mult+0x6c>
  404902:	460d      	mov	r5, r1
  404904:	10a4      	asrs	r4, r4, #2
  404906:	d01c      	beq.n	404942 <__pow5mult+0x4e>
  404908:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  40490a:	b396      	cbz	r6, 404972 <__pow5mult+0x7e>
  40490c:	07e3      	lsls	r3, r4, #31
  40490e:	f04f 0800 	mov.w	r8, #0
  404912:	d406      	bmi.n	404922 <__pow5mult+0x2e>
  404914:	1064      	asrs	r4, r4, #1
  404916:	d014      	beq.n	404942 <__pow5mult+0x4e>
  404918:	6830      	ldr	r0, [r6, #0]
  40491a:	b1a8      	cbz	r0, 404948 <__pow5mult+0x54>
  40491c:	4606      	mov	r6, r0
  40491e:	07e3      	lsls	r3, r4, #31
  404920:	d5f8      	bpl.n	404914 <__pow5mult+0x20>
  404922:	4632      	mov	r2, r6
  404924:	4629      	mov	r1, r5
  404926:	4638      	mov	r0, r7
  404928:	f7ff ff52 	bl	4047d0 <__multiply>
  40492c:	b1b5      	cbz	r5, 40495c <__pow5mult+0x68>
  40492e:	686a      	ldr	r2, [r5, #4]
  404930:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404932:	1064      	asrs	r4, r4, #1
  404934:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404938:	6029      	str	r1, [r5, #0]
  40493a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  40493e:	4605      	mov	r5, r0
  404940:	d1ea      	bne.n	404918 <__pow5mult+0x24>
  404942:	4628      	mov	r0, r5
  404944:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404948:	4632      	mov	r2, r6
  40494a:	4631      	mov	r1, r6
  40494c:	4638      	mov	r0, r7
  40494e:	f7ff ff3f 	bl	4047d0 <__multiply>
  404952:	6030      	str	r0, [r6, #0]
  404954:	f8c0 8000 	str.w	r8, [r0]
  404958:	4606      	mov	r6, r0
  40495a:	e7e0      	b.n	40491e <__pow5mult+0x2a>
  40495c:	4605      	mov	r5, r0
  40495e:	e7d9      	b.n	404914 <__pow5mult+0x20>
  404960:	1e5a      	subs	r2, r3, #1
  404962:	4d0b      	ldr	r5, [pc, #44]	; (404990 <__pow5mult+0x9c>)
  404964:	2300      	movs	r3, #0
  404966:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  40496a:	f7ff fe97 	bl	40469c <__multadd>
  40496e:	4605      	mov	r5, r0
  404970:	e7c8      	b.n	404904 <__pow5mult+0x10>
  404972:	2101      	movs	r1, #1
  404974:	4638      	mov	r0, r7
  404976:	f7ff fe61 	bl	40463c <_Balloc>
  40497a:	f240 2171 	movw	r1, #625	; 0x271
  40497e:	2201      	movs	r2, #1
  404980:	2300      	movs	r3, #0
  404982:	6141      	str	r1, [r0, #20]
  404984:	6102      	str	r2, [r0, #16]
  404986:	4606      	mov	r6, r0
  404988:	64b8      	str	r0, [r7, #72]	; 0x48
  40498a:	6003      	str	r3, [r0, #0]
  40498c:	e7be      	b.n	40490c <__pow5mult+0x18>
  40498e:	bf00      	nop
  404990:	00407100 	.word	0x00407100

00404994 <__lshift>:
  404994:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404998:	4691      	mov	r9, r2
  40499a:	690a      	ldr	r2, [r1, #16]
  40499c:	688b      	ldr	r3, [r1, #8]
  40499e:	ea4f 1469 	mov.w	r4, r9, asr #5
  4049a2:	eb04 0802 	add.w	r8, r4, r2
  4049a6:	f108 0501 	add.w	r5, r8, #1
  4049aa:	429d      	cmp	r5, r3
  4049ac:	460e      	mov	r6, r1
  4049ae:	4607      	mov	r7, r0
  4049b0:	6849      	ldr	r1, [r1, #4]
  4049b2:	dd04      	ble.n	4049be <__lshift+0x2a>
  4049b4:	005b      	lsls	r3, r3, #1
  4049b6:	429d      	cmp	r5, r3
  4049b8:	f101 0101 	add.w	r1, r1, #1
  4049bc:	dcfa      	bgt.n	4049b4 <__lshift+0x20>
  4049be:	4638      	mov	r0, r7
  4049c0:	f7ff fe3c 	bl	40463c <_Balloc>
  4049c4:	2c00      	cmp	r4, #0
  4049c6:	f100 0314 	add.w	r3, r0, #20
  4049ca:	dd06      	ble.n	4049da <__lshift+0x46>
  4049cc:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  4049d0:	2100      	movs	r1, #0
  4049d2:	f843 1b04 	str.w	r1, [r3], #4
  4049d6:	429a      	cmp	r2, r3
  4049d8:	d1fb      	bne.n	4049d2 <__lshift+0x3e>
  4049da:	6934      	ldr	r4, [r6, #16]
  4049dc:	f106 0114 	add.w	r1, r6, #20
  4049e0:	f019 091f 	ands.w	r9, r9, #31
  4049e4:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  4049e8:	d01d      	beq.n	404a26 <__lshift+0x92>
  4049ea:	f1c9 0c20 	rsb	ip, r9, #32
  4049ee:	2200      	movs	r2, #0
  4049f0:	680c      	ldr	r4, [r1, #0]
  4049f2:	fa04 f409 	lsl.w	r4, r4, r9
  4049f6:	4314      	orrs	r4, r2
  4049f8:	f843 4b04 	str.w	r4, [r3], #4
  4049fc:	f851 2b04 	ldr.w	r2, [r1], #4
  404a00:	458e      	cmp	lr, r1
  404a02:	fa22 f20c 	lsr.w	r2, r2, ip
  404a06:	d8f3      	bhi.n	4049f0 <__lshift+0x5c>
  404a08:	601a      	str	r2, [r3, #0]
  404a0a:	b10a      	cbz	r2, 404a10 <__lshift+0x7c>
  404a0c:	f108 0502 	add.w	r5, r8, #2
  404a10:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404a12:	6872      	ldr	r2, [r6, #4]
  404a14:	3d01      	subs	r5, #1
  404a16:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404a1a:	6105      	str	r5, [r0, #16]
  404a1c:	6031      	str	r1, [r6, #0]
  404a1e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  404a22:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404a26:	3b04      	subs	r3, #4
  404a28:	f851 2b04 	ldr.w	r2, [r1], #4
  404a2c:	f843 2f04 	str.w	r2, [r3, #4]!
  404a30:	458e      	cmp	lr, r1
  404a32:	d8f9      	bhi.n	404a28 <__lshift+0x94>
  404a34:	e7ec      	b.n	404a10 <__lshift+0x7c>
  404a36:	bf00      	nop

00404a38 <__mcmp>:
  404a38:	b430      	push	{r4, r5}
  404a3a:	690b      	ldr	r3, [r1, #16]
  404a3c:	4605      	mov	r5, r0
  404a3e:	6900      	ldr	r0, [r0, #16]
  404a40:	1ac0      	subs	r0, r0, r3
  404a42:	d10f      	bne.n	404a64 <__mcmp+0x2c>
  404a44:	009b      	lsls	r3, r3, #2
  404a46:	3514      	adds	r5, #20
  404a48:	3114      	adds	r1, #20
  404a4a:	4419      	add	r1, r3
  404a4c:	442b      	add	r3, r5
  404a4e:	e001      	b.n	404a54 <__mcmp+0x1c>
  404a50:	429d      	cmp	r5, r3
  404a52:	d207      	bcs.n	404a64 <__mcmp+0x2c>
  404a54:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  404a58:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  404a5c:	4294      	cmp	r4, r2
  404a5e:	d0f7      	beq.n	404a50 <__mcmp+0x18>
  404a60:	d302      	bcc.n	404a68 <__mcmp+0x30>
  404a62:	2001      	movs	r0, #1
  404a64:	bc30      	pop	{r4, r5}
  404a66:	4770      	bx	lr
  404a68:	f04f 30ff 	mov.w	r0, #4294967295
  404a6c:	e7fa      	b.n	404a64 <__mcmp+0x2c>
  404a6e:	bf00      	nop

00404a70 <__mdiff>:
  404a70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404a74:	690f      	ldr	r7, [r1, #16]
  404a76:	460e      	mov	r6, r1
  404a78:	6911      	ldr	r1, [r2, #16]
  404a7a:	1a7f      	subs	r7, r7, r1
  404a7c:	2f00      	cmp	r7, #0
  404a7e:	4690      	mov	r8, r2
  404a80:	d117      	bne.n	404ab2 <__mdiff+0x42>
  404a82:	0089      	lsls	r1, r1, #2
  404a84:	f106 0514 	add.w	r5, r6, #20
  404a88:	f102 0e14 	add.w	lr, r2, #20
  404a8c:	186b      	adds	r3, r5, r1
  404a8e:	4471      	add	r1, lr
  404a90:	e001      	b.n	404a96 <__mdiff+0x26>
  404a92:	429d      	cmp	r5, r3
  404a94:	d25c      	bcs.n	404b50 <__mdiff+0xe0>
  404a96:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  404a9a:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  404a9e:	42a2      	cmp	r2, r4
  404aa0:	d0f7      	beq.n	404a92 <__mdiff+0x22>
  404aa2:	d25e      	bcs.n	404b62 <__mdiff+0xf2>
  404aa4:	4633      	mov	r3, r6
  404aa6:	462c      	mov	r4, r5
  404aa8:	4646      	mov	r6, r8
  404aaa:	4675      	mov	r5, lr
  404aac:	4698      	mov	r8, r3
  404aae:	2701      	movs	r7, #1
  404ab0:	e005      	b.n	404abe <__mdiff+0x4e>
  404ab2:	db58      	blt.n	404b66 <__mdiff+0xf6>
  404ab4:	f106 0514 	add.w	r5, r6, #20
  404ab8:	f108 0414 	add.w	r4, r8, #20
  404abc:	2700      	movs	r7, #0
  404abe:	6871      	ldr	r1, [r6, #4]
  404ac0:	f7ff fdbc 	bl	40463c <_Balloc>
  404ac4:	f8d8 3010 	ldr.w	r3, [r8, #16]
  404ac8:	6936      	ldr	r6, [r6, #16]
  404aca:	60c7      	str	r7, [r0, #12]
  404acc:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  404ad0:	46a6      	mov	lr, r4
  404ad2:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  404ad6:	f100 0414 	add.w	r4, r0, #20
  404ada:	2300      	movs	r3, #0
  404adc:	f85e 1b04 	ldr.w	r1, [lr], #4
  404ae0:	f855 8b04 	ldr.w	r8, [r5], #4
  404ae4:	b28a      	uxth	r2, r1
  404ae6:	fa13 f388 	uxtah	r3, r3, r8
  404aea:	0c09      	lsrs	r1, r1, #16
  404aec:	1a9a      	subs	r2, r3, r2
  404aee:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  404af2:	eb03 4322 	add.w	r3, r3, r2, asr #16
  404af6:	b292      	uxth	r2, r2
  404af8:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  404afc:	45f4      	cmp	ip, lr
  404afe:	f844 2b04 	str.w	r2, [r4], #4
  404b02:	ea4f 4323 	mov.w	r3, r3, asr #16
  404b06:	d8e9      	bhi.n	404adc <__mdiff+0x6c>
  404b08:	42af      	cmp	r7, r5
  404b0a:	d917      	bls.n	404b3c <__mdiff+0xcc>
  404b0c:	46a4      	mov	ip, r4
  404b0e:	46ae      	mov	lr, r5
  404b10:	f85e 2b04 	ldr.w	r2, [lr], #4
  404b14:	fa13 f382 	uxtah	r3, r3, r2
  404b18:	1419      	asrs	r1, r3, #16
  404b1a:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  404b1e:	b29b      	uxth	r3, r3
  404b20:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  404b24:	4577      	cmp	r7, lr
  404b26:	f84c 2b04 	str.w	r2, [ip], #4
  404b2a:	ea4f 4321 	mov.w	r3, r1, asr #16
  404b2e:	d8ef      	bhi.n	404b10 <__mdiff+0xa0>
  404b30:	43ed      	mvns	r5, r5
  404b32:	442f      	add	r7, r5
  404b34:	f027 0703 	bic.w	r7, r7, #3
  404b38:	3704      	adds	r7, #4
  404b3a:	443c      	add	r4, r7
  404b3c:	3c04      	subs	r4, #4
  404b3e:	b922      	cbnz	r2, 404b4a <__mdiff+0xda>
  404b40:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  404b44:	3e01      	subs	r6, #1
  404b46:	2b00      	cmp	r3, #0
  404b48:	d0fa      	beq.n	404b40 <__mdiff+0xd0>
  404b4a:	6106      	str	r6, [r0, #16]
  404b4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404b50:	2100      	movs	r1, #0
  404b52:	f7ff fd73 	bl	40463c <_Balloc>
  404b56:	2201      	movs	r2, #1
  404b58:	2300      	movs	r3, #0
  404b5a:	6102      	str	r2, [r0, #16]
  404b5c:	6143      	str	r3, [r0, #20]
  404b5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404b62:	4674      	mov	r4, lr
  404b64:	e7ab      	b.n	404abe <__mdiff+0x4e>
  404b66:	4633      	mov	r3, r6
  404b68:	f106 0414 	add.w	r4, r6, #20
  404b6c:	f102 0514 	add.w	r5, r2, #20
  404b70:	4616      	mov	r6, r2
  404b72:	2701      	movs	r7, #1
  404b74:	4698      	mov	r8, r3
  404b76:	e7a2      	b.n	404abe <__mdiff+0x4e>

00404b78 <__d2b>:
  404b78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404b7c:	b082      	sub	sp, #8
  404b7e:	2101      	movs	r1, #1
  404b80:	461c      	mov	r4, r3
  404b82:	f3c3 570a 	ubfx	r7, r3, #20, #11
  404b86:	4615      	mov	r5, r2
  404b88:	9e08      	ldr	r6, [sp, #32]
  404b8a:	f7ff fd57 	bl	40463c <_Balloc>
  404b8e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  404b92:	4680      	mov	r8, r0
  404b94:	b10f      	cbz	r7, 404b9a <__d2b+0x22>
  404b96:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  404b9a:	9401      	str	r4, [sp, #4]
  404b9c:	b31d      	cbz	r5, 404be6 <__d2b+0x6e>
  404b9e:	a802      	add	r0, sp, #8
  404ba0:	f840 5d08 	str.w	r5, [r0, #-8]!
  404ba4:	f7ff fdda 	bl	40475c <__lo0bits>
  404ba8:	2800      	cmp	r0, #0
  404baa:	d134      	bne.n	404c16 <__d2b+0x9e>
  404bac:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404bb0:	f8c8 2014 	str.w	r2, [r8, #20]
  404bb4:	2b00      	cmp	r3, #0
  404bb6:	bf0c      	ite	eq
  404bb8:	2101      	moveq	r1, #1
  404bba:	2102      	movne	r1, #2
  404bbc:	f8c8 3018 	str.w	r3, [r8, #24]
  404bc0:	f8c8 1010 	str.w	r1, [r8, #16]
  404bc4:	b9df      	cbnz	r7, 404bfe <__d2b+0x86>
  404bc6:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  404bca:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  404bce:	6030      	str	r0, [r6, #0]
  404bd0:	6918      	ldr	r0, [r3, #16]
  404bd2:	f7ff fda3 	bl	40471c <__hi0bits>
  404bd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404bd8:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  404bdc:	6018      	str	r0, [r3, #0]
  404bde:	4640      	mov	r0, r8
  404be0:	b002      	add	sp, #8
  404be2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404be6:	a801      	add	r0, sp, #4
  404be8:	f7ff fdb8 	bl	40475c <__lo0bits>
  404bec:	9b01      	ldr	r3, [sp, #4]
  404bee:	f8c8 3014 	str.w	r3, [r8, #20]
  404bf2:	2101      	movs	r1, #1
  404bf4:	3020      	adds	r0, #32
  404bf6:	f8c8 1010 	str.w	r1, [r8, #16]
  404bfa:	2f00      	cmp	r7, #0
  404bfc:	d0e3      	beq.n	404bc6 <__d2b+0x4e>
  404bfe:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404c00:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  404c04:	4407      	add	r7, r0
  404c06:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  404c0a:	6037      	str	r7, [r6, #0]
  404c0c:	6018      	str	r0, [r3, #0]
  404c0e:	4640      	mov	r0, r8
  404c10:	b002      	add	sp, #8
  404c12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404c16:	e89d 000a 	ldmia.w	sp, {r1, r3}
  404c1a:	f1c0 0220 	rsb	r2, r0, #32
  404c1e:	fa03 f202 	lsl.w	r2, r3, r2
  404c22:	430a      	orrs	r2, r1
  404c24:	40c3      	lsrs	r3, r0
  404c26:	9301      	str	r3, [sp, #4]
  404c28:	f8c8 2014 	str.w	r2, [r8, #20]
  404c2c:	e7c2      	b.n	404bb4 <__d2b+0x3c>
  404c2e:	bf00      	nop

00404c30 <_sbrk_r>:
  404c30:	b538      	push	{r3, r4, r5, lr}
  404c32:	4c07      	ldr	r4, [pc, #28]	; (404c50 <_sbrk_r+0x20>)
  404c34:	2300      	movs	r3, #0
  404c36:	4605      	mov	r5, r0
  404c38:	4608      	mov	r0, r1
  404c3a:	6023      	str	r3, [r4, #0]
  404c3c:	f7fc fb42 	bl	4012c4 <_sbrk>
  404c40:	1c43      	adds	r3, r0, #1
  404c42:	d000      	beq.n	404c46 <_sbrk_r+0x16>
  404c44:	bd38      	pop	{r3, r4, r5, pc}
  404c46:	6823      	ldr	r3, [r4, #0]
  404c48:	2b00      	cmp	r3, #0
  404c4a:	d0fb      	beq.n	404c44 <_sbrk_r+0x14>
  404c4c:	602b      	str	r3, [r5, #0]
  404c4e:	bd38      	pop	{r3, r4, r5, pc}
  404c50:	20000ec4 	.word	0x20000ec4

00404c54 <strchr>:
  404c54:	b2c9      	uxtb	r1, r1
  404c56:	2900      	cmp	r1, #0
  404c58:	d041      	beq.n	404cde <strchr+0x8a>
  404c5a:	0782      	lsls	r2, r0, #30
  404c5c:	b4f0      	push	{r4, r5, r6, r7}
  404c5e:	d067      	beq.n	404d30 <strchr+0xdc>
  404c60:	7803      	ldrb	r3, [r0, #0]
  404c62:	2b00      	cmp	r3, #0
  404c64:	d068      	beq.n	404d38 <strchr+0xe4>
  404c66:	4299      	cmp	r1, r3
  404c68:	d037      	beq.n	404cda <strchr+0x86>
  404c6a:	1c43      	adds	r3, r0, #1
  404c6c:	e004      	b.n	404c78 <strchr+0x24>
  404c6e:	f813 0b01 	ldrb.w	r0, [r3], #1
  404c72:	b390      	cbz	r0, 404cda <strchr+0x86>
  404c74:	4281      	cmp	r1, r0
  404c76:	d02f      	beq.n	404cd8 <strchr+0x84>
  404c78:	079a      	lsls	r2, r3, #30
  404c7a:	461c      	mov	r4, r3
  404c7c:	d1f7      	bne.n	404c6e <strchr+0x1a>
  404c7e:	6825      	ldr	r5, [r4, #0]
  404c80:	ea41 2301 	orr.w	r3, r1, r1, lsl #8
  404c84:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
  404c88:	ea83 0605 	eor.w	r6, r3, r5
  404c8c:	f1a6 3001 	sub.w	r0, r6, #16843009	; 0x1010101
  404c90:	f1a5 3201 	sub.w	r2, r5, #16843009	; 0x1010101
  404c94:	ea20 0006 	bic.w	r0, r0, r6
  404c98:	ea22 0205 	bic.w	r2, r2, r5
  404c9c:	4302      	orrs	r2, r0
  404c9e:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  404ca2:	d111      	bne.n	404cc8 <strchr+0x74>
  404ca4:	4620      	mov	r0, r4
  404ca6:	f850 6f04 	ldr.w	r6, [r0, #4]!
  404caa:	ea83 0706 	eor.w	r7, r3, r6
  404cae:	f1a7 3501 	sub.w	r5, r7, #16843009	; 0x1010101
  404cb2:	f1a6 3201 	sub.w	r2, r6, #16843009	; 0x1010101
  404cb6:	ea25 0507 	bic.w	r5, r5, r7
  404cba:	ea22 0206 	bic.w	r2, r2, r6
  404cbe:	432a      	orrs	r2, r5
  404cc0:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  404cc4:	d0ef      	beq.n	404ca6 <strchr+0x52>
  404cc6:	4604      	mov	r4, r0
  404cc8:	7820      	ldrb	r0, [r4, #0]
  404cca:	b918      	cbnz	r0, 404cd4 <strchr+0x80>
  404ccc:	e005      	b.n	404cda <strchr+0x86>
  404cce:	f814 0f01 	ldrb.w	r0, [r4, #1]!
  404cd2:	b110      	cbz	r0, 404cda <strchr+0x86>
  404cd4:	4281      	cmp	r1, r0
  404cd6:	d1fa      	bne.n	404cce <strchr+0x7a>
  404cd8:	4620      	mov	r0, r4
  404cda:	bcf0      	pop	{r4, r5, r6, r7}
  404cdc:	4770      	bx	lr
  404cde:	0783      	lsls	r3, r0, #30
  404ce0:	d024      	beq.n	404d2c <strchr+0xd8>
  404ce2:	7803      	ldrb	r3, [r0, #0]
  404ce4:	2b00      	cmp	r3, #0
  404ce6:	d0f9      	beq.n	404cdc <strchr+0x88>
  404ce8:	1c43      	adds	r3, r0, #1
  404cea:	e003      	b.n	404cf4 <strchr+0xa0>
  404cec:	7802      	ldrb	r2, [r0, #0]
  404cee:	3301      	adds	r3, #1
  404cf0:	2a00      	cmp	r2, #0
  404cf2:	d0f3      	beq.n	404cdc <strchr+0x88>
  404cf4:	0799      	lsls	r1, r3, #30
  404cf6:	4618      	mov	r0, r3
  404cf8:	d1f8      	bne.n	404cec <strchr+0x98>
  404cfa:	6819      	ldr	r1, [r3, #0]
  404cfc:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  404d00:	ea22 0201 	bic.w	r2, r2, r1
  404d04:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  404d08:	d108      	bne.n	404d1c <strchr+0xc8>
  404d0a:	f853 1f04 	ldr.w	r1, [r3, #4]!
  404d0e:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  404d12:	ea22 0201 	bic.w	r2, r2, r1
  404d16:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  404d1a:	d0f6      	beq.n	404d0a <strchr+0xb6>
  404d1c:	781a      	ldrb	r2, [r3, #0]
  404d1e:	4618      	mov	r0, r3
  404d20:	b142      	cbz	r2, 404d34 <strchr+0xe0>
  404d22:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  404d26:	2b00      	cmp	r3, #0
  404d28:	d1fb      	bne.n	404d22 <strchr+0xce>
  404d2a:	4770      	bx	lr
  404d2c:	4603      	mov	r3, r0
  404d2e:	e7e4      	b.n	404cfa <strchr+0xa6>
  404d30:	4604      	mov	r4, r0
  404d32:	e7a4      	b.n	404c7e <strchr+0x2a>
  404d34:	4618      	mov	r0, r3
  404d36:	4770      	bx	lr
  404d38:	4618      	mov	r0, r3
  404d3a:	e7ce      	b.n	404cda <strchr+0x86>
  404d3c:	0000      	movs	r0, r0
	...

00404d40 <strlen>:
  404d40:	f890 f000 	pld	[r0]
  404d44:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  404d48:	f020 0107 	bic.w	r1, r0, #7
  404d4c:	f06f 0c00 	mvn.w	ip, #0
  404d50:	f010 0407 	ands.w	r4, r0, #7
  404d54:	f891 f020 	pld	[r1, #32]
  404d58:	f040 8049 	bne.w	404dee <strlen+0xae>
  404d5c:	f04f 0400 	mov.w	r4, #0
  404d60:	f06f 0007 	mvn.w	r0, #7
  404d64:	e9d1 2300 	ldrd	r2, r3, [r1]
  404d68:	f891 f040 	pld	[r1, #64]	; 0x40
  404d6c:	f100 0008 	add.w	r0, r0, #8
  404d70:	fa82 f24c 	uadd8	r2, r2, ip
  404d74:	faa4 f28c 	sel	r2, r4, ip
  404d78:	fa83 f34c 	uadd8	r3, r3, ip
  404d7c:	faa2 f38c 	sel	r3, r2, ip
  404d80:	bb4b      	cbnz	r3, 404dd6 <strlen+0x96>
  404d82:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  404d86:	fa82 f24c 	uadd8	r2, r2, ip
  404d8a:	f100 0008 	add.w	r0, r0, #8
  404d8e:	faa4 f28c 	sel	r2, r4, ip
  404d92:	fa83 f34c 	uadd8	r3, r3, ip
  404d96:	faa2 f38c 	sel	r3, r2, ip
  404d9a:	b9e3      	cbnz	r3, 404dd6 <strlen+0x96>
  404d9c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  404da0:	fa82 f24c 	uadd8	r2, r2, ip
  404da4:	f100 0008 	add.w	r0, r0, #8
  404da8:	faa4 f28c 	sel	r2, r4, ip
  404dac:	fa83 f34c 	uadd8	r3, r3, ip
  404db0:	faa2 f38c 	sel	r3, r2, ip
  404db4:	b97b      	cbnz	r3, 404dd6 <strlen+0x96>
  404db6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  404dba:	f101 0120 	add.w	r1, r1, #32
  404dbe:	fa82 f24c 	uadd8	r2, r2, ip
  404dc2:	f100 0008 	add.w	r0, r0, #8
  404dc6:	faa4 f28c 	sel	r2, r4, ip
  404dca:	fa83 f34c 	uadd8	r3, r3, ip
  404dce:	faa2 f38c 	sel	r3, r2, ip
  404dd2:	2b00      	cmp	r3, #0
  404dd4:	d0c6      	beq.n	404d64 <strlen+0x24>
  404dd6:	2a00      	cmp	r2, #0
  404dd8:	bf04      	itt	eq
  404dda:	3004      	addeq	r0, #4
  404ddc:	461a      	moveq	r2, r3
  404dde:	ba12      	rev	r2, r2
  404de0:	fab2 f282 	clz	r2, r2
  404de4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  404de8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  404dec:	4770      	bx	lr
  404dee:	e9d1 2300 	ldrd	r2, r3, [r1]
  404df2:	f004 0503 	and.w	r5, r4, #3
  404df6:	f1c4 0000 	rsb	r0, r4, #0
  404dfa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  404dfe:	f014 0f04 	tst.w	r4, #4
  404e02:	f891 f040 	pld	[r1, #64]	; 0x40
  404e06:	fa0c f505 	lsl.w	r5, ip, r5
  404e0a:	ea62 0205 	orn	r2, r2, r5
  404e0e:	bf1c      	itt	ne
  404e10:	ea63 0305 	ornne	r3, r3, r5
  404e14:	4662      	movne	r2, ip
  404e16:	f04f 0400 	mov.w	r4, #0
  404e1a:	e7a9      	b.n	404d70 <strlen+0x30>

00404e1c <__ssprint_r>:
  404e1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404e20:	6893      	ldr	r3, [r2, #8]
  404e22:	b083      	sub	sp, #12
  404e24:	4690      	mov	r8, r2
  404e26:	2b00      	cmp	r3, #0
  404e28:	d070      	beq.n	404f0c <__ssprint_r+0xf0>
  404e2a:	4682      	mov	sl, r0
  404e2c:	460c      	mov	r4, r1
  404e2e:	6817      	ldr	r7, [r2, #0]
  404e30:	688d      	ldr	r5, [r1, #8]
  404e32:	6808      	ldr	r0, [r1, #0]
  404e34:	e042      	b.n	404ebc <__ssprint_r+0xa0>
  404e36:	89a3      	ldrh	r3, [r4, #12]
  404e38:	f413 6f90 	tst.w	r3, #1152	; 0x480
  404e3c:	d02e      	beq.n	404e9c <__ssprint_r+0x80>
  404e3e:	6965      	ldr	r5, [r4, #20]
  404e40:	6921      	ldr	r1, [r4, #16]
  404e42:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  404e46:	eba0 0b01 	sub.w	fp, r0, r1
  404e4a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  404e4e:	f10b 0001 	add.w	r0, fp, #1
  404e52:	106d      	asrs	r5, r5, #1
  404e54:	4430      	add	r0, r6
  404e56:	42a8      	cmp	r0, r5
  404e58:	462a      	mov	r2, r5
  404e5a:	bf84      	itt	hi
  404e5c:	4605      	movhi	r5, r0
  404e5e:	462a      	movhi	r2, r5
  404e60:	055b      	lsls	r3, r3, #21
  404e62:	d538      	bpl.n	404ed6 <__ssprint_r+0xba>
  404e64:	4611      	mov	r1, r2
  404e66:	4650      	mov	r0, sl
  404e68:	f7ff f80c 	bl	403e84 <_malloc_r>
  404e6c:	2800      	cmp	r0, #0
  404e6e:	d03c      	beq.n	404eea <__ssprint_r+0xce>
  404e70:	465a      	mov	r2, fp
  404e72:	6921      	ldr	r1, [r4, #16]
  404e74:	9001      	str	r0, [sp, #4]
  404e76:	f7ff fb3b 	bl	4044f0 <memcpy>
  404e7a:	89a2      	ldrh	r2, [r4, #12]
  404e7c:	9b01      	ldr	r3, [sp, #4]
  404e7e:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  404e82:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  404e86:	81a2      	strh	r2, [r4, #12]
  404e88:	eba5 020b 	sub.w	r2, r5, fp
  404e8c:	eb03 000b 	add.w	r0, r3, fp
  404e90:	6165      	str	r5, [r4, #20]
  404e92:	6123      	str	r3, [r4, #16]
  404e94:	6020      	str	r0, [r4, #0]
  404e96:	60a2      	str	r2, [r4, #8]
  404e98:	4635      	mov	r5, r6
  404e9a:	46b3      	mov	fp, r6
  404e9c:	465a      	mov	r2, fp
  404e9e:	4649      	mov	r1, r9
  404ea0:	f000 fa18 	bl	4052d4 <memmove>
  404ea4:	f8d8 3008 	ldr.w	r3, [r8, #8]
  404ea8:	68a2      	ldr	r2, [r4, #8]
  404eaa:	6820      	ldr	r0, [r4, #0]
  404eac:	1b55      	subs	r5, r2, r5
  404eae:	4458      	add	r0, fp
  404eb0:	1b9e      	subs	r6, r3, r6
  404eb2:	60a5      	str	r5, [r4, #8]
  404eb4:	6020      	str	r0, [r4, #0]
  404eb6:	f8c8 6008 	str.w	r6, [r8, #8]
  404eba:	b33e      	cbz	r6, 404f0c <__ssprint_r+0xf0>
  404ebc:	687e      	ldr	r6, [r7, #4]
  404ebe:	463b      	mov	r3, r7
  404ec0:	3708      	adds	r7, #8
  404ec2:	2e00      	cmp	r6, #0
  404ec4:	d0fa      	beq.n	404ebc <__ssprint_r+0xa0>
  404ec6:	42ae      	cmp	r6, r5
  404ec8:	f8d3 9000 	ldr.w	r9, [r3]
  404ecc:	46ab      	mov	fp, r5
  404ece:	d2b2      	bcs.n	404e36 <__ssprint_r+0x1a>
  404ed0:	4635      	mov	r5, r6
  404ed2:	46b3      	mov	fp, r6
  404ed4:	e7e2      	b.n	404e9c <__ssprint_r+0x80>
  404ed6:	4650      	mov	r0, sl
  404ed8:	f000 fa60 	bl	40539c <_realloc_r>
  404edc:	4603      	mov	r3, r0
  404ede:	2800      	cmp	r0, #0
  404ee0:	d1d2      	bne.n	404e88 <__ssprint_r+0x6c>
  404ee2:	6921      	ldr	r1, [r4, #16]
  404ee4:	4650      	mov	r0, sl
  404ee6:	f000 f8f9 	bl	4050dc <_free_r>
  404eea:	230c      	movs	r3, #12
  404eec:	f8ca 3000 	str.w	r3, [sl]
  404ef0:	89a3      	ldrh	r3, [r4, #12]
  404ef2:	2200      	movs	r2, #0
  404ef4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404ef8:	f04f 30ff 	mov.w	r0, #4294967295
  404efc:	81a3      	strh	r3, [r4, #12]
  404efe:	f8c8 2008 	str.w	r2, [r8, #8]
  404f02:	f8c8 2004 	str.w	r2, [r8, #4]
  404f06:	b003      	add	sp, #12
  404f08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404f0c:	2000      	movs	r0, #0
  404f0e:	f8c8 0004 	str.w	r0, [r8, #4]
  404f12:	b003      	add	sp, #12
  404f14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404f18 <__register_exitproc>:
  404f18:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404f1c:	4d2c      	ldr	r5, [pc, #176]	; (404fd0 <__register_exitproc+0xb8>)
  404f1e:	4606      	mov	r6, r0
  404f20:	6828      	ldr	r0, [r5, #0]
  404f22:	4698      	mov	r8, r3
  404f24:	460f      	mov	r7, r1
  404f26:	4691      	mov	r9, r2
  404f28:	f7fe ffa8 	bl	403e7c <__retarget_lock_acquire_recursive>
  404f2c:	4b29      	ldr	r3, [pc, #164]	; (404fd4 <__register_exitproc+0xbc>)
  404f2e:	681c      	ldr	r4, [r3, #0]
  404f30:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  404f34:	2b00      	cmp	r3, #0
  404f36:	d03e      	beq.n	404fb6 <__register_exitproc+0x9e>
  404f38:	685a      	ldr	r2, [r3, #4]
  404f3a:	2a1f      	cmp	r2, #31
  404f3c:	dc1c      	bgt.n	404f78 <__register_exitproc+0x60>
  404f3e:	f102 0e01 	add.w	lr, r2, #1
  404f42:	b176      	cbz	r6, 404f62 <__register_exitproc+0x4a>
  404f44:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  404f48:	2401      	movs	r4, #1
  404f4a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  404f4e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  404f52:	4094      	lsls	r4, r2
  404f54:	4320      	orrs	r0, r4
  404f56:	2e02      	cmp	r6, #2
  404f58:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  404f5c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  404f60:	d023      	beq.n	404faa <__register_exitproc+0x92>
  404f62:	3202      	adds	r2, #2
  404f64:	f8c3 e004 	str.w	lr, [r3, #4]
  404f68:	6828      	ldr	r0, [r5, #0]
  404f6a:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  404f6e:	f7fe ff87 	bl	403e80 <__retarget_lock_release_recursive>
  404f72:	2000      	movs	r0, #0
  404f74:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404f78:	4b17      	ldr	r3, [pc, #92]	; (404fd8 <__register_exitproc+0xc0>)
  404f7a:	b30b      	cbz	r3, 404fc0 <__register_exitproc+0xa8>
  404f7c:	f44f 70c8 	mov.w	r0, #400	; 0x190
  404f80:	f3af 8000 	nop.w
  404f84:	4603      	mov	r3, r0
  404f86:	b1d8      	cbz	r0, 404fc0 <__register_exitproc+0xa8>
  404f88:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  404f8c:	6002      	str	r2, [r0, #0]
  404f8e:	2100      	movs	r1, #0
  404f90:	6041      	str	r1, [r0, #4]
  404f92:	460a      	mov	r2, r1
  404f94:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  404f98:	f04f 0e01 	mov.w	lr, #1
  404f9c:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  404fa0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  404fa4:	2e00      	cmp	r6, #0
  404fa6:	d0dc      	beq.n	404f62 <__register_exitproc+0x4a>
  404fa8:	e7cc      	b.n	404f44 <__register_exitproc+0x2c>
  404faa:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  404fae:	430c      	orrs	r4, r1
  404fb0:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  404fb4:	e7d5      	b.n	404f62 <__register_exitproc+0x4a>
  404fb6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  404fba:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  404fbe:	e7bb      	b.n	404f38 <__register_exitproc+0x20>
  404fc0:	6828      	ldr	r0, [r5, #0]
  404fc2:	f7fe ff5d 	bl	403e80 <__retarget_lock_release_recursive>
  404fc6:	f04f 30ff 	mov.w	r0, #4294967295
  404fca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404fce:	bf00      	nop
  404fd0:	20000440 	.word	0x20000440
  404fd4:	00406f94 	.word	0x00406f94
  404fd8:	00000000 	.word	0x00000000

00404fdc <_calloc_r>:
  404fdc:	b510      	push	{r4, lr}
  404fde:	fb02 f101 	mul.w	r1, r2, r1
  404fe2:	f7fe ff4f 	bl	403e84 <_malloc_r>
  404fe6:	4604      	mov	r4, r0
  404fe8:	b1d8      	cbz	r0, 405022 <_calloc_r+0x46>
  404fea:	f850 2c04 	ldr.w	r2, [r0, #-4]
  404fee:	f022 0203 	bic.w	r2, r2, #3
  404ff2:	3a04      	subs	r2, #4
  404ff4:	2a24      	cmp	r2, #36	; 0x24
  404ff6:	d818      	bhi.n	40502a <_calloc_r+0x4e>
  404ff8:	2a13      	cmp	r2, #19
  404ffa:	d914      	bls.n	405026 <_calloc_r+0x4a>
  404ffc:	2300      	movs	r3, #0
  404ffe:	2a1b      	cmp	r2, #27
  405000:	6003      	str	r3, [r0, #0]
  405002:	6043      	str	r3, [r0, #4]
  405004:	d916      	bls.n	405034 <_calloc_r+0x58>
  405006:	2a24      	cmp	r2, #36	; 0x24
  405008:	6083      	str	r3, [r0, #8]
  40500a:	60c3      	str	r3, [r0, #12]
  40500c:	bf11      	iteee	ne
  40500e:	f100 0210 	addne.w	r2, r0, #16
  405012:	6103      	streq	r3, [r0, #16]
  405014:	6143      	streq	r3, [r0, #20]
  405016:	f100 0218 	addeq.w	r2, r0, #24
  40501a:	2300      	movs	r3, #0
  40501c:	6013      	str	r3, [r2, #0]
  40501e:	6053      	str	r3, [r2, #4]
  405020:	6093      	str	r3, [r2, #8]
  405022:	4620      	mov	r0, r4
  405024:	bd10      	pop	{r4, pc}
  405026:	4602      	mov	r2, r0
  405028:	e7f7      	b.n	40501a <_calloc_r+0x3e>
  40502a:	2100      	movs	r1, #0
  40502c:	f7fc fa2a 	bl	401484 <memset>
  405030:	4620      	mov	r0, r4
  405032:	bd10      	pop	{r4, pc}
  405034:	f100 0208 	add.w	r2, r0, #8
  405038:	e7ef      	b.n	40501a <_calloc_r+0x3e>
  40503a:	bf00      	nop

0040503c <_malloc_trim_r>:
  40503c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40503e:	4f24      	ldr	r7, [pc, #144]	; (4050d0 <_malloc_trim_r+0x94>)
  405040:	460c      	mov	r4, r1
  405042:	4606      	mov	r6, r0
  405044:	f7ff faee 	bl	404624 <__malloc_lock>
  405048:	68bb      	ldr	r3, [r7, #8]
  40504a:	685d      	ldr	r5, [r3, #4]
  40504c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  405050:	310f      	adds	r1, #15
  405052:	f025 0503 	bic.w	r5, r5, #3
  405056:	4429      	add	r1, r5
  405058:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40505c:	f021 010f 	bic.w	r1, r1, #15
  405060:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  405064:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  405068:	db07      	blt.n	40507a <_malloc_trim_r+0x3e>
  40506a:	2100      	movs	r1, #0
  40506c:	4630      	mov	r0, r6
  40506e:	f7ff fddf 	bl	404c30 <_sbrk_r>
  405072:	68bb      	ldr	r3, [r7, #8]
  405074:	442b      	add	r3, r5
  405076:	4298      	cmp	r0, r3
  405078:	d004      	beq.n	405084 <_malloc_trim_r+0x48>
  40507a:	4630      	mov	r0, r6
  40507c:	f7ff fad8 	bl	404630 <__malloc_unlock>
  405080:	2000      	movs	r0, #0
  405082:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405084:	4261      	negs	r1, r4
  405086:	4630      	mov	r0, r6
  405088:	f7ff fdd2 	bl	404c30 <_sbrk_r>
  40508c:	3001      	adds	r0, #1
  40508e:	d00d      	beq.n	4050ac <_malloc_trim_r+0x70>
  405090:	4b10      	ldr	r3, [pc, #64]	; (4050d4 <_malloc_trim_r+0x98>)
  405092:	68ba      	ldr	r2, [r7, #8]
  405094:	6819      	ldr	r1, [r3, #0]
  405096:	1b2d      	subs	r5, r5, r4
  405098:	f045 0501 	orr.w	r5, r5, #1
  40509c:	4630      	mov	r0, r6
  40509e:	1b09      	subs	r1, r1, r4
  4050a0:	6055      	str	r5, [r2, #4]
  4050a2:	6019      	str	r1, [r3, #0]
  4050a4:	f7ff fac4 	bl	404630 <__malloc_unlock>
  4050a8:	2001      	movs	r0, #1
  4050aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4050ac:	2100      	movs	r1, #0
  4050ae:	4630      	mov	r0, r6
  4050b0:	f7ff fdbe 	bl	404c30 <_sbrk_r>
  4050b4:	68ba      	ldr	r2, [r7, #8]
  4050b6:	1a83      	subs	r3, r0, r2
  4050b8:	2b0f      	cmp	r3, #15
  4050ba:	ddde      	ble.n	40507a <_malloc_trim_r+0x3e>
  4050bc:	4c06      	ldr	r4, [pc, #24]	; (4050d8 <_malloc_trim_r+0x9c>)
  4050be:	4905      	ldr	r1, [pc, #20]	; (4050d4 <_malloc_trim_r+0x98>)
  4050c0:	6824      	ldr	r4, [r4, #0]
  4050c2:	f043 0301 	orr.w	r3, r3, #1
  4050c6:	1b00      	subs	r0, r0, r4
  4050c8:	6053      	str	r3, [r2, #4]
  4050ca:	6008      	str	r0, [r1, #0]
  4050cc:	e7d5      	b.n	40507a <_malloc_trim_r+0x3e>
  4050ce:	bf00      	nop
  4050d0:	20000444 	.word	0x20000444
  4050d4:	20000a74 	.word	0x20000a74
  4050d8:	2000084c 	.word	0x2000084c

004050dc <_free_r>:
  4050dc:	2900      	cmp	r1, #0
  4050de:	d044      	beq.n	40516a <_free_r+0x8e>
  4050e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4050e4:	460d      	mov	r5, r1
  4050e6:	4680      	mov	r8, r0
  4050e8:	f7ff fa9c 	bl	404624 <__malloc_lock>
  4050ec:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4050f0:	4969      	ldr	r1, [pc, #420]	; (405298 <_free_r+0x1bc>)
  4050f2:	f027 0301 	bic.w	r3, r7, #1
  4050f6:	f1a5 0408 	sub.w	r4, r5, #8
  4050fa:	18e2      	adds	r2, r4, r3
  4050fc:	688e      	ldr	r6, [r1, #8]
  4050fe:	6850      	ldr	r0, [r2, #4]
  405100:	42b2      	cmp	r2, r6
  405102:	f020 0003 	bic.w	r0, r0, #3
  405106:	d05e      	beq.n	4051c6 <_free_r+0xea>
  405108:	07fe      	lsls	r6, r7, #31
  40510a:	6050      	str	r0, [r2, #4]
  40510c:	d40b      	bmi.n	405126 <_free_r+0x4a>
  40510e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  405112:	1be4      	subs	r4, r4, r7
  405114:	f101 0e08 	add.w	lr, r1, #8
  405118:	68a5      	ldr	r5, [r4, #8]
  40511a:	4575      	cmp	r5, lr
  40511c:	443b      	add	r3, r7
  40511e:	d06d      	beq.n	4051fc <_free_r+0x120>
  405120:	68e7      	ldr	r7, [r4, #12]
  405122:	60ef      	str	r7, [r5, #12]
  405124:	60bd      	str	r5, [r7, #8]
  405126:	1815      	adds	r5, r2, r0
  405128:	686d      	ldr	r5, [r5, #4]
  40512a:	07ed      	lsls	r5, r5, #31
  40512c:	d53e      	bpl.n	4051ac <_free_r+0xd0>
  40512e:	f043 0201 	orr.w	r2, r3, #1
  405132:	6062      	str	r2, [r4, #4]
  405134:	50e3      	str	r3, [r4, r3]
  405136:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40513a:	d217      	bcs.n	40516c <_free_r+0x90>
  40513c:	08db      	lsrs	r3, r3, #3
  40513e:	1c58      	adds	r0, r3, #1
  405140:	109a      	asrs	r2, r3, #2
  405142:	684d      	ldr	r5, [r1, #4]
  405144:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  405148:	60a7      	str	r7, [r4, #8]
  40514a:	2301      	movs	r3, #1
  40514c:	4093      	lsls	r3, r2
  40514e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  405152:	432b      	orrs	r3, r5
  405154:	3a08      	subs	r2, #8
  405156:	60e2      	str	r2, [r4, #12]
  405158:	604b      	str	r3, [r1, #4]
  40515a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40515e:	60fc      	str	r4, [r7, #12]
  405160:	4640      	mov	r0, r8
  405162:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405166:	f7ff ba63 	b.w	404630 <__malloc_unlock>
  40516a:	4770      	bx	lr
  40516c:	0a5a      	lsrs	r2, r3, #9
  40516e:	2a04      	cmp	r2, #4
  405170:	d852      	bhi.n	405218 <_free_r+0x13c>
  405172:	099a      	lsrs	r2, r3, #6
  405174:	f102 0739 	add.w	r7, r2, #57	; 0x39
  405178:	00ff      	lsls	r7, r7, #3
  40517a:	f102 0538 	add.w	r5, r2, #56	; 0x38
  40517e:	19c8      	adds	r0, r1, r7
  405180:	59ca      	ldr	r2, [r1, r7]
  405182:	3808      	subs	r0, #8
  405184:	4290      	cmp	r0, r2
  405186:	d04f      	beq.n	405228 <_free_r+0x14c>
  405188:	6851      	ldr	r1, [r2, #4]
  40518a:	f021 0103 	bic.w	r1, r1, #3
  40518e:	428b      	cmp	r3, r1
  405190:	d232      	bcs.n	4051f8 <_free_r+0x11c>
  405192:	6892      	ldr	r2, [r2, #8]
  405194:	4290      	cmp	r0, r2
  405196:	d1f7      	bne.n	405188 <_free_r+0xac>
  405198:	68c3      	ldr	r3, [r0, #12]
  40519a:	60a0      	str	r0, [r4, #8]
  40519c:	60e3      	str	r3, [r4, #12]
  40519e:	609c      	str	r4, [r3, #8]
  4051a0:	60c4      	str	r4, [r0, #12]
  4051a2:	4640      	mov	r0, r8
  4051a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4051a8:	f7ff ba42 	b.w	404630 <__malloc_unlock>
  4051ac:	6895      	ldr	r5, [r2, #8]
  4051ae:	4f3b      	ldr	r7, [pc, #236]	; (40529c <_free_r+0x1c0>)
  4051b0:	42bd      	cmp	r5, r7
  4051b2:	4403      	add	r3, r0
  4051b4:	d040      	beq.n	405238 <_free_r+0x15c>
  4051b6:	68d0      	ldr	r0, [r2, #12]
  4051b8:	60e8      	str	r0, [r5, #12]
  4051ba:	f043 0201 	orr.w	r2, r3, #1
  4051be:	6085      	str	r5, [r0, #8]
  4051c0:	6062      	str	r2, [r4, #4]
  4051c2:	50e3      	str	r3, [r4, r3]
  4051c4:	e7b7      	b.n	405136 <_free_r+0x5a>
  4051c6:	07ff      	lsls	r7, r7, #31
  4051c8:	4403      	add	r3, r0
  4051ca:	d407      	bmi.n	4051dc <_free_r+0x100>
  4051cc:	f855 2c08 	ldr.w	r2, [r5, #-8]
  4051d0:	1aa4      	subs	r4, r4, r2
  4051d2:	4413      	add	r3, r2
  4051d4:	68a0      	ldr	r0, [r4, #8]
  4051d6:	68e2      	ldr	r2, [r4, #12]
  4051d8:	60c2      	str	r2, [r0, #12]
  4051da:	6090      	str	r0, [r2, #8]
  4051dc:	4a30      	ldr	r2, [pc, #192]	; (4052a0 <_free_r+0x1c4>)
  4051de:	6812      	ldr	r2, [r2, #0]
  4051e0:	f043 0001 	orr.w	r0, r3, #1
  4051e4:	4293      	cmp	r3, r2
  4051e6:	6060      	str	r0, [r4, #4]
  4051e8:	608c      	str	r4, [r1, #8]
  4051ea:	d3b9      	bcc.n	405160 <_free_r+0x84>
  4051ec:	4b2d      	ldr	r3, [pc, #180]	; (4052a4 <_free_r+0x1c8>)
  4051ee:	4640      	mov	r0, r8
  4051f0:	6819      	ldr	r1, [r3, #0]
  4051f2:	f7ff ff23 	bl	40503c <_malloc_trim_r>
  4051f6:	e7b3      	b.n	405160 <_free_r+0x84>
  4051f8:	4610      	mov	r0, r2
  4051fa:	e7cd      	b.n	405198 <_free_r+0xbc>
  4051fc:	1811      	adds	r1, r2, r0
  4051fe:	6849      	ldr	r1, [r1, #4]
  405200:	07c9      	lsls	r1, r1, #31
  405202:	d444      	bmi.n	40528e <_free_r+0x1b2>
  405204:	6891      	ldr	r1, [r2, #8]
  405206:	68d2      	ldr	r2, [r2, #12]
  405208:	60ca      	str	r2, [r1, #12]
  40520a:	4403      	add	r3, r0
  40520c:	f043 0001 	orr.w	r0, r3, #1
  405210:	6091      	str	r1, [r2, #8]
  405212:	6060      	str	r0, [r4, #4]
  405214:	50e3      	str	r3, [r4, r3]
  405216:	e7a3      	b.n	405160 <_free_r+0x84>
  405218:	2a14      	cmp	r2, #20
  40521a:	d816      	bhi.n	40524a <_free_r+0x16e>
  40521c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405220:	00ff      	lsls	r7, r7, #3
  405222:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  405226:	e7aa      	b.n	40517e <_free_r+0xa2>
  405228:	10aa      	asrs	r2, r5, #2
  40522a:	2301      	movs	r3, #1
  40522c:	684d      	ldr	r5, [r1, #4]
  40522e:	4093      	lsls	r3, r2
  405230:	432b      	orrs	r3, r5
  405232:	604b      	str	r3, [r1, #4]
  405234:	4603      	mov	r3, r0
  405236:	e7b0      	b.n	40519a <_free_r+0xbe>
  405238:	f043 0201 	orr.w	r2, r3, #1
  40523c:	614c      	str	r4, [r1, #20]
  40523e:	610c      	str	r4, [r1, #16]
  405240:	60e5      	str	r5, [r4, #12]
  405242:	60a5      	str	r5, [r4, #8]
  405244:	6062      	str	r2, [r4, #4]
  405246:	50e3      	str	r3, [r4, r3]
  405248:	e78a      	b.n	405160 <_free_r+0x84>
  40524a:	2a54      	cmp	r2, #84	; 0x54
  40524c:	d806      	bhi.n	40525c <_free_r+0x180>
  40524e:	0b1a      	lsrs	r2, r3, #12
  405250:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405254:	00ff      	lsls	r7, r7, #3
  405256:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40525a:	e790      	b.n	40517e <_free_r+0xa2>
  40525c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405260:	d806      	bhi.n	405270 <_free_r+0x194>
  405262:	0bda      	lsrs	r2, r3, #15
  405264:	f102 0778 	add.w	r7, r2, #120	; 0x78
  405268:	00ff      	lsls	r7, r7, #3
  40526a:	f102 0577 	add.w	r5, r2, #119	; 0x77
  40526e:	e786      	b.n	40517e <_free_r+0xa2>
  405270:	f240 5054 	movw	r0, #1364	; 0x554
  405274:	4282      	cmp	r2, r0
  405276:	d806      	bhi.n	405286 <_free_r+0x1aa>
  405278:	0c9a      	lsrs	r2, r3, #18
  40527a:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40527e:	00ff      	lsls	r7, r7, #3
  405280:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  405284:	e77b      	b.n	40517e <_free_r+0xa2>
  405286:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  40528a:	257e      	movs	r5, #126	; 0x7e
  40528c:	e777      	b.n	40517e <_free_r+0xa2>
  40528e:	f043 0101 	orr.w	r1, r3, #1
  405292:	6061      	str	r1, [r4, #4]
  405294:	6013      	str	r3, [r2, #0]
  405296:	e763      	b.n	405160 <_free_r+0x84>
  405298:	20000444 	.word	0x20000444
  40529c:	2000044c 	.word	0x2000044c
  4052a0:	20000850 	.word	0x20000850
  4052a4:	20000aa4 	.word	0x20000aa4

004052a8 <__ascii_mbtowc>:
  4052a8:	b082      	sub	sp, #8
  4052aa:	b149      	cbz	r1, 4052c0 <__ascii_mbtowc+0x18>
  4052ac:	b15a      	cbz	r2, 4052c6 <__ascii_mbtowc+0x1e>
  4052ae:	b16b      	cbz	r3, 4052cc <__ascii_mbtowc+0x24>
  4052b0:	7813      	ldrb	r3, [r2, #0]
  4052b2:	600b      	str	r3, [r1, #0]
  4052b4:	7812      	ldrb	r2, [r2, #0]
  4052b6:	1c10      	adds	r0, r2, #0
  4052b8:	bf18      	it	ne
  4052ba:	2001      	movne	r0, #1
  4052bc:	b002      	add	sp, #8
  4052be:	4770      	bx	lr
  4052c0:	a901      	add	r1, sp, #4
  4052c2:	2a00      	cmp	r2, #0
  4052c4:	d1f3      	bne.n	4052ae <__ascii_mbtowc+0x6>
  4052c6:	4610      	mov	r0, r2
  4052c8:	b002      	add	sp, #8
  4052ca:	4770      	bx	lr
  4052cc:	f06f 0001 	mvn.w	r0, #1
  4052d0:	e7f4      	b.n	4052bc <__ascii_mbtowc+0x14>
  4052d2:	bf00      	nop

004052d4 <memmove>:
  4052d4:	4288      	cmp	r0, r1
  4052d6:	b5f0      	push	{r4, r5, r6, r7, lr}
  4052d8:	d90d      	bls.n	4052f6 <memmove+0x22>
  4052da:	188b      	adds	r3, r1, r2
  4052dc:	4298      	cmp	r0, r3
  4052de:	d20a      	bcs.n	4052f6 <memmove+0x22>
  4052e0:	1884      	adds	r4, r0, r2
  4052e2:	2a00      	cmp	r2, #0
  4052e4:	d051      	beq.n	40538a <memmove+0xb6>
  4052e6:	4622      	mov	r2, r4
  4052e8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  4052ec:	f802 4d01 	strb.w	r4, [r2, #-1]!
  4052f0:	4299      	cmp	r1, r3
  4052f2:	d1f9      	bne.n	4052e8 <memmove+0x14>
  4052f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4052f6:	2a0f      	cmp	r2, #15
  4052f8:	d948      	bls.n	40538c <memmove+0xb8>
  4052fa:	ea41 0300 	orr.w	r3, r1, r0
  4052fe:	079b      	lsls	r3, r3, #30
  405300:	d146      	bne.n	405390 <memmove+0xbc>
  405302:	f100 0410 	add.w	r4, r0, #16
  405306:	f101 0310 	add.w	r3, r1, #16
  40530a:	4615      	mov	r5, r2
  40530c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405310:	f844 6c10 	str.w	r6, [r4, #-16]
  405314:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405318:	f844 6c0c 	str.w	r6, [r4, #-12]
  40531c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405320:	f844 6c08 	str.w	r6, [r4, #-8]
  405324:	3d10      	subs	r5, #16
  405326:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40532a:	f844 6c04 	str.w	r6, [r4, #-4]
  40532e:	2d0f      	cmp	r5, #15
  405330:	f103 0310 	add.w	r3, r3, #16
  405334:	f104 0410 	add.w	r4, r4, #16
  405338:	d8e8      	bhi.n	40530c <memmove+0x38>
  40533a:	f1a2 0310 	sub.w	r3, r2, #16
  40533e:	f023 030f 	bic.w	r3, r3, #15
  405342:	f002 0e0f 	and.w	lr, r2, #15
  405346:	3310      	adds	r3, #16
  405348:	f1be 0f03 	cmp.w	lr, #3
  40534c:	4419      	add	r1, r3
  40534e:	4403      	add	r3, r0
  405350:	d921      	bls.n	405396 <memmove+0xc2>
  405352:	1f1e      	subs	r6, r3, #4
  405354:	460d      	mov	r5, r1
  405356:	4674      	mov	r4, lr
  405358:	3c04      	subs	r4, #4
  40535a:	f855 7b04 	ldr.w	r7, [r5], #4
  40535e:	f846 7f04 	str.w	r7, [r6, #4]!
  405362:	2c03      	cmp	r4, #3
  405364:	d8f8      	bhi.n	405358 <memmove+0x84>
  405366:	f1ae 0404 	sub.w	r4, lr, #4
  40536a:	f024 0403 	bic.w	r4, r4, #3
  40536e:	3404      	adds	r4, #4
  405370:	4421      	add	r1, r4
  405372:	4423      	add	r3, r4
  405374:	f002 0203 	and.w	r2, r2, #3
  405378:	b162      	cbz	r2, 405394 <memmove+0xc0>
  40537a:	3b01      	subs	r3, #1
  40537c:	440a      	add	r2, r1
  40537e:	f811 4b01 	ldrb.w	r4, [r1], #1
  405382:	f803 4f01 	strb.w	r4, [r3, #1]!
  405386:	428a      	cmp	r2, r1
  405388:	d1f9      	bne.n	40537e <memmove+0xaa>
  40538a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40538c:	4603      	mov	r3, r0
  40538e:	e7f3      	b.n	405378 <memmove+0xa4>
  405390:	4603      	mov	r3, r0
  405392:	e7f2      	b.n	40537a <memmove+0xa6>
  405394:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405396:	4672      	mov	r2, lr
  405398:	e7ee      	b.n	405378 <memmove+0xa4>
  40539a:	bf00      	nop

0040539c <_realloc_r>:
  40539c:	2900      	cmp	r1, #0
  40539e:	f000 8095 	beq.w	4054cc <_realloc_r+0x130>
  4053a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4053a6:	460d      	mov	r5, r1
  4053a8:	4616      	mov	r6, r2
  4053aa:	b083      	sub	sp, #12
  4053ac:	4680      	mov	r8, r0
  4053ae:	f106 070b 	add.w	r7, r6, #11
  4053b2:	f7ff f937 	bl	404624 <__malloc_lock>
  4053b6:	f855 ec04 	ldr.w	lr, [r5, #-4]
  4053ba:	2f16      	cmp	r7, #22
  4053bc:	f02e 0403 	bic.w	r4, lr, #3
  4053c0:	f1a5 0908 	sub.w	r9, r5, #8
  4053c4:	d83c      	bhi.n	405440 <_realloc_r+0xa4>
  4053c6:	2210      	movs	r2, #16
  4053c8:	4617      	mov	r7, r2
  4053ca:	42be      	cmp	r6, r7
  4053cc:	d83d      	bhi.n	40544a <_realloc_r+0xae>
  4053ce:	4294      	cmp	r4, r2
  4053d0:	da43      	bge.n	40545a <_realloc_r+0xbe>
  4053d2:	4bc4      	ldr	r3, [pc, #784]	; (4056e4 <_realloc_r+0x348>)
  4053d4:	6899      	ldr	r1, [r3, #8]
  4053d6:	eb09 0004 	add.w	r0, r9, r4
  4053da:	4288      	cmp	r0, r1
  4053dc:	f000 80b4 	beq.w	405548 <_realloc_r+0x1ac>
  4053e0:	6843      	ldr	r3, [r0, #4]
  4053e2:	f023 0101 	bic.w	r1, r3, #1
  4053e6:	4401      	add	r1, r0
  4053e8:	6849      	ldr	r1, [r1, #4]
  4053ea:	07c9      	lsls	r1, r1, #31
  4053ec:	d54c      	bpl.n	405488 <_realloc_r+0xec>
  4053ee:	f01e 0f01 	tst.w	lr, #1
  4053f2:	f000 809b 	beq.w	40552c <_realloc_r+0x190>
  4053f6:	4631      	mov	r1, r6
  4053f8:	4640      	mov	r0, r8
  4053fa:	f7fe fd43 	bl	403e84 <_malloc_r>
  4053fe:	4606      	mov	r6, r0
  405400:	2800      	cmp	r0, #0
  405402:	d03a      	beq.n	40547a <_realloc_r+0xde>
  405404:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405408:	f023 0301 	bic.w	r3, r3, #1
  40540c:	444b      	add	r3, r9
  40540e:	f1a0 0208 	sub.w	r2, r0, #8
  405412:	429a      	cmp	r2, r3
  405414:	f000 8121 	beq.w	40565a <_realloc_r+0x2be>
  405418:	1f22      	subs	r2, r4, #4
  40541a:	2a24      	cmp	r2, #36	; 0x24
  40541c:	f200 8107 	bhi.w	40562e <_realloc_r+0x292>
  405420:	2a13      	cmp	r2, #19
  405422:	f200 80db 	bhi.w	4055dc <_realloc_r+0x240>
  405426:	4603      	mov	r3, r0
  405428:	462a      	mov	r2, r5
  40542a:	6811      	ldr	r1, [r2, #0]
  40542c:	6019      	str	r1, [r3, #0]
  40542e:	6851      	ldr	r1, [r2, #4]
  405430:	6059      	str	r1, [r3, #4]
  405432:	6892      	ldr	r2, [r2, #8]
  405434:	609a      	str	r2, [r3, #8]
  405436:	4629      	mov	r1, r5
  405438:	4640      	mov	r0, r8
  40543a:	f7ff fe4f 	bl	4050dc <_free_r>
  40543e:	e01c      	b.n	40547a <_realloc_r+0xde>
  405440:	f027 0707 	bic.w	r7, r7, #7
  405444:	2f00      	cmp	r7, #0
  405446:	463a      	mov	r2, r7
  405448:	dabf      	bge.n	4053ca <_realloc_r+0x2e>
  40544a:	2600      	movs	r6, #0
  40544c:	230c      	movs	r3, #12
  40544e:	4630      	mov	r0, r6
  405450:	f8c8 3000 	str.w	r3, [r8]
  405454:	b003      	add	sp, #12
  405456:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40545a:	462e      	mov	r6, r5
  40545c:	1be3      	subs	r3, r4, r7
  40545e:	2b0f      	cmp	r3, #15
  405460:	d81e      	bhi.n	4054a0 <_realloc_r+0x104>
  405462:	f8d9 3004 	ldr.w	r3, [r9, #4]
  405466:	f003 0301 	and.w	r3, r3, #1
  40546a:	4323      	orrs	r3, r4
  40546c:	444c      	add	r4, r9
  40546e:	f8c9 3004 	str.w	r3, [r9, #4]
  405472:	6863      	ldr	r3, [r4, #4]
  405474:	f043 0301 	orr.w	r3, r3, #1
  405478:	6063      	str	r3, [r4, #4]
  40547a:	4640      	mov	r0, r8
  40547c:	f7ff f8d8 	bl	404630 <__malloc_unlock>
  405480:	4630      	mov	r0, r6
  405482:	b003      	add	sp, #12
  405484:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405488:	f023 0303 	bic.w	r3, r3, #3
  40548c:	18e1      	adds	r1, r4, r3
  40548e:	4291      	cmp	r1, r2
  405490:	db1f      	blt.n	4054d2 <_realloc_r+0x136>
  405492:	68c3      	ldr	r3, [r0, #12]
  405494:	6882      	ldr	r2, [r0, #8]
  405496:	462e      	mov	r6, r5
  405498:	60d3      	str	r3, [r2, #12]
  40549a:	460c      	mov	r4, r1
  40549c:	609a      	str	r2, [r3, #8]
  40549e:	e7dd      	b.n	40545c <_realloc_r+0xc0>
  4054a0:	f8d9 2004 	ldr.w	r2, [r9, #4]
  4054a4:	eb09 0107 	add.w	r1, r9, r7
  4054a8:	f002 0201 	and.w	r2, r2, #1
  4054ac:	444c      	add	r4, r9
  4054ae:	f043 0301 	orr.w	r3, r3, #1
  4054b2:	4317      	orrs	r7, r2
  4054b4:	f8c9 7004 	str.w	r7, [r9, #4]
  4054b8:	604b      	str	r3, [r1, #4]
  4054ba:	6863      	ldr	r3, [r4, #4]
  4054bc:	f043 0301 	orr.w	r3, r3, #1
  4054c0:	3108      	adds	r1, #8
  4054c2:	6063      	str	r3, [r4, #4]
  4054c4:	4640      	mov	r0, r8
  4054c6:	f7ff fe09 	bl	4050dc <_free_r>
  4054ca:	e7d6      	b.n	40547a <_realloc_r+0xde>
  4054cc:	4611      	mov	r1, r2
  4054ce:	f7fe bcd9 	b.w	403e84 <_malloc_r>
  4054d2:	f01e 0f01 	tst.w	lr, #1
  4054d6:	d18e      	bne.n	4053f6 <_realloc_r+0x5a>
  4054d8:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4054dc:	eba9 0a01 	sub.w	sl, r9, r1
  4054e0:	f8da 1004 	ldr.w	r1, [sl, #4]
  4054e4:	f021 0103 	bic.w	r1, r1, #3
  4054e8:	440b      	add	r3, r1
  4054ea:	4423      	add	r3, r4
  4054ec:	4293      	cmp	r3, r2
  4054ee:	db25      	blt.n	40553c <_realloc_r+0x1a0>
  4054f0:	68c2      	ldr	r2, [r0, #12]
  4054f2:	6881      	ldr	r1, [r0, #8]
  4054f4:	4656      	mov	r6, sl
  4054f6:	60ca      	str	r2, [r1, #12]
  4054f8:	6091      	str	r1, [r2, #8]
  4054fa:	f8da 100c 	ldr.w	r1, [sl, #12]
  4054fe:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405502:	1f22      	subs	r2, r4, #4
  405504:	2a24      	cmp	r2, #36	; 0x24
  405506:	60c1      	str	r1, [r0, #12]
  405508:	6088      	str	r0, [r1, #8]
  40550a:	f200 8094 	bhi.w	405636 <_realloc_r+0x29a>
  40550e:	2a13      	cmp	r2, #19
  405510:	d96f      	bls.n	4055f2 <_realloc_r+0x256>
  405512:	6829      	ldr	r1, [r5, #0]
  405514:	f8ca 1008 	str.w	r1, [sl, #8]
  405518:	6869      	ldr	r1, [r5, #4]
  40551a:	f8ca 100c 	str.w	r1, [sl, #12]
  40551e:	2a1b      	cmp	r2, #27
  405520:	f200 80a2 	bhi.w	405668 <_realloc_r+0x2cc>
  405524:	3508      	adds	r5, #8
  405526:	f10a 0210 	add.w	r2, sl, #16
  40552a:	e063      	b.n	4055f4 <_realloc_r+0x258>
  40552c:	f855 3c08 	ldr.w	r3, [r5, #-8]
  405530:	eba9 0a03 	sub.w	sl, r9, r3
  405534:	f8da 1004 	ldr.w	r1, [sl, #4]
  405538:	f021 0103 	bic.w	r1, r1, #3
  40553c:	1863      	adds	r3, r4, r1
  40553e:	4293      	cmp	r3, r2
  405540:	f6ff af59 	blt.w	4053f6 <_realloc_r+0x5a>
  405544:	4656      	mov	r6, sl
  405546:	e7d8      	b.n	4054fa <_realloc_r+0x15e>
  405548:	6841      	ldr	r1, [r0, #4]
  40554a:	f021 0b03 	bic.w	fp, r1, #3
  40554e:	44a3      	add	fp, r4
  405550:	f107 0010 	add.w	r0, r7, #16
  405554:	4583      	cmp	fp, r0
  405556:	da56      	bge.n	405606 <_realloc_r+0x26a>
  405558:	f01e 0f01 	tst.w	lr, #1
  40555c:	f47f af4b 	bne.w	4053f6 <_realloc_r+0x5a>
  405560:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405564:	eba9 0a01 	sub.w	sl, r9, r1
  405568:	f8da 1004 	ldr.w	r1, [sl, #4]
  40556c:	f021 0103 	bic.w	r1, r1, #3
  405570:	448b      	add	fp, r1
  405572:	4558      	cmp	r0, fp
  405574:	dce2      	bgt.n	40553c <_realloc_r+0x1a0>
  405576:	4656      	mov	r6, sl
  405578:	f8da 100c 	ldr.w	r1, [sl, #12]
  40557c:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405580:	1f22      	subs	r2, r4, #4
  405582:	2a24      	cmp	r2, #36	; 0x24
  405584:	60c1      	str	r1, [r0, #12]
  405586:	6088      	str	r0, [r1, #8]
  405588:	f200 808f 	bhi.w	4056aa <_realloc_r+0x30e>
  40558c:	2a13      	cmp	r2, #19
  40558e:	f240 808a 	bls.w	4056a6 <_realloc_r+0x30a>
  405592:	6829      	ldr	r1, [r5, #0]
  405594:	f8ca 1008 	str.w	r1, [sl, #8]
  405598:	6869      	ldr	r1, [r5, #4]
  40559a:	f8ca 100c 	str.w	r1, [sl, #12]
  40559e:	2a1b      	cmp	r2, #27
  4055a0:	f200 808a 	bhi.w	4056b8 <_realloc_r+0x31c>
  4055a4:	3508      	adds	r5, #8
  4055a6:	f10a 0210 	add.w	r2, sl, #16
  4055aa:	6829      	ldr	r1, [r5, #0]
  4055ac:	6011      	str	r1, [r2, #0]
  4055ae:	6869      	ldr	r1, [r5, #4]
  4055b0:	6051      	str	r1, [r2, #4]
  4055b2:	68a9      	ldr	r1, [r5, #8]
  4055b4:	6091      	str	r1, [r2, #8]
  4055b6:	eb0a 0107 	add.w	r1, sl, r7
  4055ba:	ebab 0207 	sub.w	r2, fp, r7
  4055be:	f042 0201 	orr.w	r2, r2, #1
  4055c2:	6099      	str	r1, [r3, #8]
  4055c4:	604a      	str	r2, [r1, #4]
  4055c6:	f8da 3004 	ldr.w	r3, [sl, #4]
  4055ca:	f003 0301 	and.w	r3, r3, #1
  4055ce:	431f      	orrs	r7, r3
  4055d0:	4640      	mov	r0, r8
  4055d2:	f8ca 7004 	str.w	r7, [sl, #4]
  4055d6:	f7ff f82b 	bl	404630 <__malloc_unlock>
  4055da:	e751      	b.n	405480 <_realloc_r+0xe4>
  4055dc:	682b      	ldr	r3, [r5, #0]
  4055de:	6003      	str	r3, [r0, #0]
  4055e0:	686b      	ldr	r3, [r5, #4]
  4055e2:	6043      	str	r3, [r0, #4]
  4055e4:	2a1b      	cmp	r2, #27
  4055e6:	d82d      	bhi.n	405644 <_realloc_r+0x2a8>
  4055e8:	f100 0308 	add.w	r3, r0, #8
  4055ec:	f105 0208 	add.w	r2, r5, #8
  4055f0:	e71b      	b.n	40542a <_realloc_r+0x8e>
  4055f2:	4632      	mov	r2, r6
  4055f4:	6829      	ldr	r1, [r5, #0]
  4055f6:	6011      	str	r1, [r2, #0]
  4055f8:	6869      	ldr	r1, [r5, #4]
  4055fa:	6051      	str	r1, [r2, #4]
  4055fc:	68a9      	ldr	r1, [r5, #8]
  4055fe:	6091      	str	r1, [r2, #8]
  405600:	461c      	mov	r4, r3
  405602:	46d1      	mov	r9, sl
  405604:	e72a      	b.n	40545c <_realloc_r+0xc0>
  405606:	eb09 0107 	add.w	r1, r9, r7
  40560a:	ebab 0b07 	sub.w	fp, fp, r7
  40560e:	f04b 0201 	orr.w	r2, fp, #1
  405612:	6099      	str	r1, [r3, #8]
  405614:	604a      	str	r2, [r1, #4]
  405616:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40561a:	f003 0301 	and.w	r3, r3, #1
  40561e:	431f      	orrs	r7, r3
  405620:	4640      	mov	r0, r8
  405622:	f845 7c04 	str.w	r7, [r5, #-4]
  405626:	f7ff f803 	bl	404630 <__malloc_unlock>
  40562a:	462e      	mov	r6, r5
  40562c:	e728      	b.n	405480 <_realloc_r+0xe4>
  40562e:	4629      	mov	r1, r5
  405630:	f7ff fe50 	bl	4052d4 <memmove>
  405634:	e6ff      	b.n	405436 <_realloc_r+0x9a>
  405636:	4629      	mov	r1, r5
  405638:	4630      	mov	r0, r6
  40563a:	461c      	mov	r4, r3
  40563c:	46d1      	mov	r9, sl
  40563e:	f7ff fe49 	bl	4052d4 <memmove>
  405642:	e70b      	b.n	40545c <_realloc_r+0xc0>
  405644:	68ab      	ldr	r3, [r5, #8]
  405646:	6083      	str	r3, [r0, #8]
  405648:	68eb      	ldr	r3, [r5, #12]
  40564a:	60c3      	str	r3, [r0, #12]
  40564c:	2a24      	cmp	r2, #36	; 0x24
  40564e:	d017      	beq.n	405680 <_realloc_r+0x2e4>
  405650:	f100 0310 	add.w	r3, r0, #16
  405654:	f105 0210 	add.w	r2, r5, #16
  405658:	e6e7      	b.n	40542a <_realloc_r+0x8e>
  40565a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  40565e:	f023 0303 	bic.w	r3, r3, #3
  405662:	441c      	add	r4, r3
  405664:	462e      	mov	r6, r5
  405666:	e6f9      	b.n	40545c <_realloc_r+0xc0>
  405668:	68a9      	ldr	r1, [r5, #8]
  40566a:	f8ca 1010 	str.w	r1, [sl, #16]
  40566e:	68e9      	ldr	r1, [r5, #12]
  405670:	f8ca 1014 	str.w	r1, [sl, #20]
  405674:	2a24      	cmp	r2, #36	; 0x24
  405676:	d00c      	beq.n	405692 <_realloc_r+0x2f6>
  405678:	3510      	adds	r5, #16
  40567a:	f10a 0218 	add.w	r2, sl, #24
  40567e:	e7b9      	b.n	4055f4 <_realloc_r+0x258>
  405680:	692b      	ldr	r3, [r5, #16]
  405682:	6103      	str	r3, [r0, #16]
  405684:	696b      	ldr	r3, [r5, #20]
  405686:	6143      	str	r3, [r0, #20]
  405688:	f105 0218 	add.w	r2, r5, #24
  40568c:	f100 0318 	add.w	r3, r0, #24
  405690:	e6cb      	b.n	40542a <_realloc_r+0x8e>
  405692:	692a      	ldr	r2, [r5, #16]
  405694:	f8ca 2018 	str.w	r2, [sl, #24]
  405698:	696a      	ldr	r2, [r5, #20]
  40569a:	f8ca 201c 	str.w	r2, [sl, #28]
  40569e:	3518      	adds	r5, #24
  4056a0:	f10a 0220 	add.w	r2, sl, #32
  4056a4:	e7a6      	b.n	4055f4 <_realloc_r+0x258>
  4056a6:	4632      	mov	r2, r6
  4056a8:	e77f      	b.n	4055aa <_realloc_r+0x20e>
  4056aa:	4629      	mov	r1, r5
  4056ac:	4630      	mov	r0, r6
  4056ae:	9301      	str	r3, [sp, #4]
  4056b0:	f7ff fe10 	bl	4052d4 <memmove>
  4056b4:	9b01      	ldr	r3, [sp, #4]
  4056b6:	e77e      	b.n	4055b6 <_realloc_r+0x21a>
  4056b8:	68a9      	ldr	r1, [r5, #8]
  4056ba:	f8ca 1010 	str.w	r1, [sl, #16]
  4056be:	68e9      	ldr	r1, [r5, #12]
  4056c0:	f8ca 1014 	str.w	r1, [sl, #20]
  4056c4:	2a24      	cmp	r2, #36	; 0x24
  4056c6:	d003      	beq.n	4056d0 <_realloc_r+0x334>
  4056c8:	3510      	adds	r5, #16
  4056ca:	f10a 0218 	add.w	r2, sl, #24
  4056ce:	e76c      	b.n	4055aa <_realloc_r+0x20e>
  4056d0:	692a      	ldr	r2, [r5, #16]
  4056d2:	f8ca 2018 	str.w	r2, [sl, #24]
  4056d6:	696a      	ldr	r2, [r5, #20]
  4056d8:	f8ca 201c 	str.w	r2, [sl, #28]
  4056dc:	3518      	adds	r5, #24
  4056de:	f10a 0220 	add.w	r2, sl, #32
  4056e2:	e762      	b.n	4055aa <_realloc_r+0x20e>
  4056e4:	20000444 	.word	0x20000444

004056e8 <__ascii_wctomb>:
  4056e8:	b121      	cbz	r1, 4056f4 <__ascii_wctomb+0xc>
  4056ea:	2aff      	cmp	r2, #255	; 0xff
  4056ec:	d804      	bhi.n	4056f8 <__ascii_wctomb+0x10>
  4056ee:	700a      	strb	r2, [r1, #0]
  4056f0:	2001      	movs	r0, #1
  4056f2:	4770      	bx	lr
  4056f4:	4608      	mov	r0, r1
  4056f6:	4770      	bx	lr
  4056f8:	238a      	movs	r3, #138	; 0x8a
  4056fa:	6003      	str	r3, [r0, #0]
  4056fc:	f04f 30ff 	mov.w	r0, #4294967295
  405700:	4770      	bx	lr
  405702:	bf00      	nop

00405704 <__aeabi_drsub>:
  405704:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  405708:	e002      	b.n	405710 <__adddf3>
  40570a:	bf00      	nop

0040570c <__aeabi_dsub>:
  40570c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00405710 <__adddf3>:
  405710:	b530      	push	{r4, r5, lr}
  405712:	ea4f 0441 	mov.w	r4, r1, lsl #1
  405716:	ea4f 0543 	mov.w	r5, r3, lsl #1
  40571a:	ea94 0f05 	teq	r4, r5
  40571e:	bf08      	it	eq
  405720:	ea90 0f02 	teqeq	r0, r2
  405724:	bf1f      	itttt	ne
  405726:	ea54 0c00 	orrsne.w	ip, r4, r0
  40572a:	ea55 0c02 	orrsne.w	ip, r5, r2
  40572e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  405732:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405736:	f000 80e2 	beq.w	4058fe <__adddf3+0x1ee>
  40573a:	ea4f 5454 	mov.w	r4, r4, lsr #21
  40573e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  405742:	bfb8      	it	lt
  405744:	426d      	neglt	r5, r5
  405746:	dd0c      	ble.n	405762 <__adddf3+0x52>
  405748:	442c      	add	r4, r5
  40574a:	ea80 0202 	eor.w	r2, r0, r2
  40574e:	ea81 0303 	eor.w	r3, r1, r3
  405752:	ea82 0000 	eor.w	r0, r2, r0
  405756:	ea83 0101 	eor.w	r1, r3, r1
  40575a:	ea80 0202 	eor.w	r2, r0, r2
  40575e:	ea81 0303 	eor.w	r3, r1, r3
  405762:	2d36      	cmp	r5, #54	; 0x36
  405764:	bf88      	it	hi
  405766:	bd30      	pophi	{r4, r5, pc}
  405768:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40576c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405770:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  405774:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  405778:	d002      	beq.n	405780 <__adddf3+0x70>
  40577a:	4240      	negs	r0, r0
  40577c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405780:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  405784:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405788:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  40578c:	d002      	beq.n	405794 <__adddf3+0x84>
  40578e:	4252      	negs	r2, r2
  405790:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  405794:	ea94 0f05 	teq	r4, r5
  405798:	f000 80a7 	beq.w	4058ea <__adddf3+0x1da>
  40579c:	f1a4 0401 	sub.w	r4, r4, #1
  4057a0:	f1d5 0e20 	rsbs	lr, r5, #32
  4057a4:	db0d      	blt.n	4057c2 <__adddf3+0xb2>
  4057a6:	fa02 fc0e 	lsl.w	ip, r2, lr
  4057aa:	fa22 f205 	lsr.w	r2, r2, r5
  4057ae:	1880      	adds	r0, r0, r2
  4057b0:	f141 0100 	adc.w	r1, r1, #0
  4057b4:	fa03 f20e 	lsl.w	r2, r3, lr
  4057b8:	1880      	adds	r0, r0, r2
  4057ba:	fa43 f305 	asr.w	r3, r3, r5
  4057be:	4159      	adcs	r1, r3
  4057c0:	e00e      	b.n	4057e0 <__adddf3+0xd0>
  4057c2:	f1a5 0520 	sub.w	r5, r5, #32
  4057c6:	f10e 0e20 	add.w	lr, lr, #32
  4057ca:	2a01      	cmp	r2, #1
  4057cc:	fa03 fc0e 	lsl.w	ip, r3, lr
  4057d0:	bf28      	it	cs
  4057d2:	f04c 0c02 	orrcs.w	ip, ip, #2
  4057d6:	fa43 f305 	asr.w	r3, r3, r5
  4057da:	18c0      	adds	r0, r0, r3
  4057dc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  4057e0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4057e4:	d507      	bpl.n	4057f6 <__adddf3+0xe6>
  4057e6:	f04f 0e00 	mov.w	lr, #0
  4057ea:	f1dc 0c00 	rsbs	ip, ip, #0
  4057ee:	eb7e 0000 	sbcs.w	r0, lr, r0
  4057f2:	eb6e 0101 	sbc.w	r1, lr, r1
  4057f6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  4057fa:	d31b      	bcc.n	405834 <__adddf3+0x124>
  4057fc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  405800:	d30c      	bcc.n	40581c <__adddf3+0x10c>
  405802:	0849      	lsrs	r1, r1, #1
  405804:	ea5f 0030 	movs.w	r0, r0, rrx
  405808:	ea4f 0c3c 	mov.w	ip, ip, rrx
  40580c:	f104 0401 	add.w	r4, r4, #1
  405810:	ea4f 5244 	mov.w	r2, r4, lsl #21
  405814:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  405818:	f080 809a 	bcs.w	405950 <__adddf3+0x240>
  40581c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  405820:	bf08      	it	eq
  405822:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405826:	f150 0000 	adcs.w	r0, r0, #0
  40582a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40582e:	ea41 0105 	orr.w	r1, r1, r5
  405832:	bd30      	pop	{r4, r5, pc}
  405834:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  405838:	4140      	adcs	r0, r0
  40583a:	eb41 0101 	adc.w	r1, r1, r1
  40583e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405842:	f1a4 0401 	sub.w	r4, r4, #1
  405846:	d1e9      	bne.n	40581c <__adddf3+0x10c>
  405848:	f091 0f00 	teq	r1, #0
  40584c:	bf04      	itt	eq
  40584e:	4601      	moveq	r1, r0
  405850:	2000      	moveq	r0, #0
  405852:	fab1 f381 	clz	r3, r1
  405856:	bf08      	it	eq
  405858:	3320      	addeq	r3, #32
  40585a:	f1a3 030b 	sub.w	r3, r3, #11
  40585e:	f1b3 0220 	subs.w	r2, r3, #32
  405862:	da0c      	bge.n	40587e <__adddf3+0x16e>
  405864:	320c      	adds	r2, #12
  405866:	dd08      	ble.n	40587a <__adddf3+0x16a>
  405868:	f102 0c14 	add.w	ip, r2, #20
  40586c:	f1c2 020c 	rsb	r2, r2, #12
  405870:	fa01 f00c 	lsl.w	r0, r1, ip
  405874:	fa21 f102 	lsr.w	r1, r1, r2
  405878:	e00c      	b.n	405894 <__adddf3+0x184>
  40587a:	f102 0214 	add.w	r2, r2, #20
  40587e:	bfd8      	it	le
  405880:	f1c2 0c20 	rsble	ip, r2, #32
  405884:	fa01 f102 	lsl.w	r1, r1, r2
  405888:	fa20 fc0c 	lsr.w	ip, r0, ip
  40588c:	bfdc      	itt	le
  40588e:	ea41 010c 	orrle.w	r1, r1, ip
  405892:	4090      	lslle	r0, r2
  405894:	1ae4      	subs	r4, r4, r3
  405896:	bfa2      	ittt	ge
  405898:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  40589c:	4329      	orrge	r1, r5
  40589e:	bd30      	popge	{r4, r5, pc}
  4058a0:	ea6f 0404 	mvn.w	r4, r4
  4058a4:	3c1f      	subs	r4, #31
  4058a6:	da1c      	bge.n	4058e2 <__adddf3+0x1d2>
  4058a8:	340c      	adds	r4, #12
  4058aa:	dc0e      	bgt.n	4058ca <__adddf3+0x1ba>
  4058ac:	f104 0414 	add.w	r4, r4, #20
  4058b0:	f1c4 0220 	rsb	r2, r4, #32
  4058b4:	fa20 f004 	lsr.w	r0, r0, r4
  4058b8:	fa01 f302 	lsl.w	r3, r1, r2
  4058bc:	ea40 0003 	orr.w	r0, r0, r3
  4058c0:	fa21 f304 	lsr.w	r3, r1, r4
  4058c4:	ea45 0103 	orr.w	r1, r5, r3
  4058c8:	bd30      	pop	{r4, r5, pc}
  4058ca:	f1c4 040c 	rsb	r4, r4, #12
  4058ce:	f1c4 0220 	rsb	r2, r4, #32
  4058d2:	fa20 f002 	lsr.w	r0, r0, r2
  4058d6:	fa01 f304 	lsl.w	r3, r1, r4
  4058da:	ea40 0003 	orr.w	r0, r0, r3
  4058de:	4629      	mov	r1, r5
  4058e0:	bd30      	pop	{r4, r5, pc}
  4058e2:	fa21 f004 	lsr.w	r0, r1, r4
  4058e6:	4629      	mov	r1, r5
  4058e8:	bd30      	pop	{r4, r5, pc}
  4058ea:	f094 0f00 	teq	r4, #0
  4058ee:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  4058f2:	bf06      	itte	eq
  4058f4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  4058f8:	3401      	addeq	r4, #1
  4058fa:	3d01      	subne	r5, #1
  4058fc:	e74e      	b.n	40579c <__adddf3+0x8c>
  4058fe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405902:	bf18      	it	ne
  405904:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405908:	d029      	beq.n	40595e <__adddf3+0x24e>
  40590a:	ea94 0f05 	teq	r4, r5
  40590e:	bf08      	it	eq
  405910:	ea90 0f02 	teqeq	r0, r2
  405914:	d005      	beq.n	405922 <__adddf3+0x212>
  405916:	ea54 0c00 	orrs.w	ip, r4, r0
  40591a:	bf04      	itt	eq
  40591c:	4619      	moveq	r1, r3
  40591e:	4610      	moveq	r0, r2
  405920:	bd30      	pop	{r4, r5, pc}
  405922:	ea91 0f03 	teq	r1, r3
  405926:	bf1e      	ittt	ne
  405928:	2100      	movne	r1, #0
  40592a:	2000      	movne	r0, #0
  40592c:	bd30      	popne	{r4, r5, pc}
  40592e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  405932:	d105      	bne.n	405940 <__adddf3+0x230>
  405934:	0040      	lsls	r0, r0, #1
  405936:	4149      	adcs	r1, r1
  405938:	bf28      	it	cs
  40593a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  40593e:	bd30      	pop	{r4, r5, pc}
  405940:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  405944:	bf3c      	itt	cc
  405946:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  40594a:	bd30      	popcc	{r4, r5, pc}
  40594c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405950:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  405954:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405958:	f04f 0000 	mov.w	r0, #0
  40595c:	bd30      	pop	{r4, r5, pc}
  40595e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405962:	bf1a      	itte	ne
  405964:	4619      	movne	r1, r3
  405966:	4610      	movne	r0, r2
  405968:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  40596c:	bf1c      	itt	ne
  40596e:	460b      	movne	r3, r1
  405970:	4602      	movne	r2, r0
  405972:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405976:	bf06      	itte	eq
  405978:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  40597c:	ea91 0f03 	teqeq	r1, r3
  405980:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  405984:	bd30      	pop	{r4, r5, pc}
  405986:	bf00      	nop

00405988 <__aeabi_ui2d>:
  405988:	f090 0f00 	teq	r0, #0
  40598c:	bf04      	itt	eq
  40598e:	2100      	moveq	r1, #0
  405990:	4770      	bxeq	lr
  405992:	b530      	push	{r4, r5, lr}
  405994:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405998:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40599c:	f04f 0500 	mov.w	r5, #0
  4059a0:	f04f 0100 	mov.w	r1, #0
  4059a4:	e750      	b.n	405848 <__adddf3+0x138>
  4059a6:	bf00      	nop

004059a8 <__aeabi_i2d>:
  4059a8:	f090 0f00 	teq	r0, #0
  4059ac:	bf04      	itt	eq
  4059ae:	2100      	moveq	r1, #0
  4059b0:	4770      	bxeq	lr
  4059b2:	b530      	push	{r4, r5, lr}
  4059b4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4059b8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4059bc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  4059c0:	bf48      	it	mi
  4059c2:	4240      	negmi	r0, r0
  4059c4:	f04f 0100 	mov.w	r1, #0
  4059c8:	e73e      	b.n	405848 <__adddf3+0x138>
  4059ca:	bf00      	nop

004059cc <__aeabi_f2d>:
  4059cc:	0042      	lsls	r2, r0, #1
  4059ce:	ea4f 01e2 	mov.w	r1, r2, asr #3
  4059d2:	ea4f 0131 	mov.w	r1, r1, rrx
  4059d6:	ea4f 7002 	mov.w	r0, r2, lsl #28
  4059da:	bf1f      	itttt	ne
  4059dc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  4059e0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4059e4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  4059e8:	4770      	bxne	lr
  4059ea:	f092 0f00 	teq	r2, #0
  4059ee:	bf14      	ite	ne
  4059f0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4059f4:	4770      	bxeq	lr
  4059f6:	b530      	push	{r4, r5, lr}
  4059f8:	f44f 7460 	mov.w	r4, #896	; 0x380
  4059fc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405a00:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405a04:	e720      	b.n	405848 <__adddf3+0x138>
  405a06:	bf00      	nop

00405a08 <__aeabi_ul2d>:
  405a08:	ea50 0201 	orrs.w	r2, r0, r1
  405a0c:	bf08      	it	eq
  405a0e:	4770      	bxeq	lr
  405a10:	b530      	push	{r4, r5, lr}
  405a12:	f04f 0500 	mov.w	r5, #0
  405a16:	e00a      	b.n	405a2e <__aeabi_l2d+0x16>

00405a18 <__aeabi_l2d>:
  405a18:	ea50 0201 	orrs.w	r2, r0, r1
  405a1c:	bf08      	it	eq
  405a1e:	4770      	bxeq	lr
  405a20:	b530      	push	{r4, r5, lr}
  405a22:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  405a26:	d502      	bpl.n	405a2e <__aeabi_l2d+0x16>
  405a28:	4240      	negs	r0, r0
  405a2a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405a2e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405a32:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405a36:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  405a3a:	f43f aedc 	beq.w	4057f6 <__adddf3+0xe6>
  405a3e:	f04f 0203 	mov.w	r2, #3
  405a42:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405a46:	bf18      	it	ne
  405a48:	3203      	addne	r2, #3
  405a4a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405a4e:	bf18      	it	ne
  405a50:	3203      	addne	r2, #3
  405a52:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  405a56:	f1c2 0320 	rsb	r3, r2, #32
  405a5a:	fa00 fc03 	lsl.w	ip, r0, r3
  405a5e:	fa20 f002 	lsr.w	r0, r0, r2
  405a62:	fa01 fe03 	lsl.w	lr, r1, r3
  405a66:	ea40 000e 	orr.w	r0, r0, lr
  405a6a:	fa21 f102 	lsr.w	r1, r1, r2
  405a6e:	4414      	add	r4, r2
  405a70:	e6c1      	b.n	4057f6 <__adddf3+0xe6>
  405a72:	bf00      	nop

00405a74 <__aeabi_dmul>:
  405a74:	b570      	push	{r4, r5, r6, lr}
  405a76:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405a7a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405a7e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405a82:	bf1d      	ittte	ne
  405a84:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405a88:	ea94 0f0c 	teqne	r4, ip
  405a8c:	ea95 0f0c 	teqne	r5, ip
  405a90:	f000 f8de 	bleq	405c50 <__aeabi_dmul+0x1dc>
  405a94:	442c      	add	r4, r5
  405a96:	ea81 0603 	eor.w	r6, r1, r3
  405a9a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  405a9e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  405aa2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  405aa6:	bf18      	it	ne
  405aa8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  405aac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405ab0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  405ab4:	d038      	beq.n	405b28 <__aeabi_dmul+0xb4>
  405ab6:	fba0 ce02 	umull	ip, lr, r0, r2
  405aba:	f04f 0500 	mov.w	r5, #0
  405abe:	fbe1 e502 	umlal	lr, r5, r1, r2
  405ac2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  405ac6:	fbe0 e503 	umlal	lr, r5, r0, r3
  405aca:	f04f 0600 	mov.w	r6, #0
  405ace:	fbe1 5603 	umlal	r5, r6, r1, r3
  405ad2:	f09c 0f00 	teq	ip, #0
  405ad6:	bf18      	it	ne
  405ad8:	f04e 0e01 	orrne.w	lr, lr, #1
  405adc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  405ae0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  405ae4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  405ae8:	d204      	bcs.n	405af4 <__aeabi_dmul+0x80>
  405aea:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  405aee:	416d      	adcs	r5, r5
  405af0:	eb46 0606 	adc.w	r6, r6, r6
  405af4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  405af8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  405afc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  405b00:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  405b04:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  405b08:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405b0c:	bf88      	it	hi
  405b0e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405b12:	d81e      	bhi.n	405b52 <__aeabi_dmul+0xde>
  405b14:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  405b18:	bf08      	it	eq
  405b1a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  405b1e:	f150 0000 	adcs.w	r0, r0, #0
  405b22:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405b26:	bd70      	pop	{r4, r5, r6, pc}
  405b28:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  405b2c:	ea46 0101 	orr.w	r1, r6, r1
  405b30:	ea40 0002 	orr.w	r0, r0, r2
  405b34:	ea81 0103 	eor.w	r1, r1, r3
  405b38:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  405b3c:	bfc2      	ittt	gt
  405b3e:	ebd4 050c 	rsbsgt	r5, r4, ip
  405b42:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405b46:	bd70      	popgt	{r4, r5, r6, pc}
  405b48:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405b4c:	f04f 0e00 	mov.w	lr, #0
  405b50:	3c01      	subs	r4, #1
  405b52:	f300 80ab 	bgt.w	405cac <__aeabi_dmul+0x238>
  405b56:	f114 0f36 	cmn.w	r4, #54	; 0x36
  405b5a:	bfde      	ittt	le
  405b5c:	2000      	movle	r0, #0
  405b5e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  405b62:	bd70      	pople	{r4, r5, r6, pc}
  405b64:	f1c4 0400 	rsb	r4, r4, #0
  405b68:	3c20      	subs	r4, #32
  405b6a:	da35      	bge.n	405bd8 <__aeabi_dmul+0x164>
  405b6c:	340c      	adds	r4, #12
  405b6e:	dc1b      	bgt.n	405ba8 <__aeabi_dmul+0x134>
  405b70:	f104 0414 	add.w	r4, r4, #20
  405b74:	f1c4 0520 	rsb	r5, r4, #32
  405b78:	fa00 f305 	lsl.w	r3, r0, r5
  405b7c:	fa20 f004 	lsr.w	r0, r0, r4
  405b80:	fa01 f205 	lsl.w	r2, r1, r5
  405b84:	ea40 0002 	orr.w	r0, r0, r2
  405b88:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  405b8c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405b90:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405b94:	fa21 f604 	lsr.w	r6, r1, r4
  405b98:	eb42 0106 	adc.w	r1, r2, r6
  405b9c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405ba0:	bf08      	it	eq
  405ba2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405ba6:	bd70      	pop	{r4, r5, r6, pc}
  405ba8:	f1c4 040c 	rsb	r4, r4, #12
  405bac:	f1c4 0520 	rsb	r5, r4, #32
  405bb0:	fa00 f304 	lsl.w	r3, r0, r4
  405bb4:	fa20 f005 	lsr.w	r0, r0, r5
  405bb8:	fa01 f204 	lsl.w	r2, r1, r4
  405bbc:	ea40 0002 	orr.w	r0, r0, r2
  405bc0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405bc4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405bc8:	f141 0100 	adc.w	r1, r1, #0
  405bcc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405bd0:	bf08      	it	eq
  405bd2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405bd6:	bd70      	pop	{r4, r5, r6, pc}
  405bd8:	f1c4 0520 	rsb	r5, r4, #32
  405bdc:	fa00 f205 	lsl.w	r2, r0, r5
  405be0:	ea4e 0e02 	orr.w	lr, lr, r2
  405be4:	fa20 f304 	lsr.w	r3, r0, r4
  405be8:	fa01 f205 	lsl.w	r2, r1, r5
  405bec:	ea43 0302 	orr.w	r3, r3, r2
  405bf0:	fa21 f004 	lsr.w	r0, r1, r4
  405bf4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405bf8:	fa21 f204 	lsr.w	r2, r1, r4
  405bfc:	ea20 0002 	bic.w	r0, r0, r2
  405c00:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  405c04:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405c08:	bf08      	it	eq
  405c0a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405c0e:	bd70      	pop	{r4, r5, r6, pc}
  405c10:	f094 0f00 	teq	r4, #0
  405c14:	d10f      	bne.n	405c36 <__aeabi_dmul+0x1c2>
  405c16:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  405c1a:	0040      	lsls	r0, r0, #1
  405c1c:	eb41 0101 	adc.w	r1, r1, r1
  405c20:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405c24:	bf08      	it	eq
  405c26:	3c01      	subeq	r4, #1
  405c28:	d0f7      	beq.n	405c1a <__aeabi_dmul+0x1a6>
  405c2a:	ea41 0106 	orr.w	r1, r1, r6
  405c2e:	f095 0f00 	teq	r5, #0
  405c32:	bf18      	it	ne
  405c34:	4770      	bxne	lr
  405c36:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  405c3a:	0052      	lsls	r2, r2, #1
  405c3c:	eb43 0303 	adc.w	r3, r3, r3
  405c40:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  405c44:	bf08      	it	eq
  405c46:	3d01      	subeq	r5, #1
  405c48:	d0f7      	beq.n	405c3a <__aeabi_dmul+0x1c6>
  405c4a:	ea43 0306 	orr.w	r3, r3, r6
  405c4e:	4770      	bx	lr
  405c50:	ea94 0f0c 	teq	r4, ip
  405c54:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405c58:	bf18      	it	ne
  405c5a:	ea95 0f0c 	teqne	r5, ip
  405c5e:	d00c      	beq.n	405c7a <__aeabi_dmul+0x206>
  405c60:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405c64:	bf18      	it	ne
  405c66:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405c6a:	d1d1      	bne.n	405c10 <__aeabi_dmul+0x19c>
  405c6c:	ea81 0103 	eor.w	r1, r1, r3
  405c70:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405c74:	f04f 0000 	mov.w	r0, #0
  405c78:	bd70      	pop	{r4, r5, r6, pc}
  405c7a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405c7e:	bf06      	itte	eq
  405c80:	4610      	moveq	r0, r2
  405c82:	4619      	moveq	r1, r3
  405c84:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405c88:	d019      	beq.n	405cbe <__aeabi_dmul+0x24a>
  405c8a:	ea94 0f0c 	teq	r4, ip
  405c8e:	d102      	bne.n	405c96 <__aeabi_dmul+0x222>
  405c90:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  405c94:	d113      	bne.n	405cbe <__aeabi_dmul+0x24a>
  405c96:	ea95 0f0c 	teq	r5, ip
  405c9a:	d105      	bne.n	405ca8 <__aeabi_dmul+0x234>
  405c9c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  405ca0:	bf1c      	itt	ne
  405ca2:	4610      	movne	r0, r2
  405ca4:	4619      	movne	r1, r3
  405ca6:	d10a      	bne.n	405cbe <__aeabi_dmul+0x24a>
  405ca8:	ea81 0103 	eor.w	r1, r1, r3
  405cac:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405cb0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405cb4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405cb8:	f04f 0000 	mov.w	r0, #0
  405cbc:	bd70      	pop	{r4, r5, r6, pc}
  405cbe:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405cc2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  405cc6:	bd70      	pop	{r4, r5, r6, pc}

00405cc8 <__aeabi_ddiv>:
  405cc8:	b570      	push	{r4, r5, r6, lr}
  405cca:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405cce:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405cd2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405cd6:	bf1d      	ittte	ne
  405cd8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405cdc:	ea94 0f0c 	teqne	r4, ip
  405ce0:	ea95 0f0c 	teqne	r5, ip
  405ce4:	f000 f8a7 	bleq	405e36 <__aeabi_ddiv+0x16e>
  405ce8:	eba4 0405 	sub.w	r4, r4, r5
  405cec:	ea81 0e03 	eor.w	lr, r1, r3
  405cf0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  405cf4:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405cf8:	f000 8088 	beq.w	405e0c <__aeabi_ddiv+0x144>
  405cfc:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405d00:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  405d04:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  405d08:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  405d0c:	ea4f 2202 	mov.w	r2, r2, lsl #8
  405d10:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  405d14:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  405d18:	ea4f 2600 	mov.w	r6, r0, lsl #8
  405d1c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  405d20:	429d      	cmp	r5, r3
  405d22:	bf08      	it	eq
  405d24:	4296      	cmpeq	r6, r2
  405d26:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  405d2a:	f504 7440 	add.w	r4, r4, #768	; 0x300
  405d2e:	d202      	bcs.n	405d36 <__aeabi_ddiv+0x6e>
  405d30:	085b      	lsrs	r3, r3, #1
  405d32:	ea4f 0232 	mov.w	r2, r2, rrx
  405d36:	1ab6      	subs	r6, r6, r2
  405d38:	eb65 0503 	sbc.w	r5, r5, r3
  405d3c:	085b      	lsrs	r3, r3, #1
  405d3e:	ea4f 0232 	mov.w	r2, r2, rrx
  405d42:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  405d46:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  405d4a:	ebb6 0e02 	subs.w	lr, r6, r2
  405d4e:	eb75 0e03 	sbcs.w	lr, r5, r3
  405d52:	bf22      	ittt	cs
  405d54:	1ab6      	subcs	r6, r6, r2
  405d56:	4675      	movcs	r5, lr
  405d58:	ea40 000c 	orrcs.w	r0, r0, ip
  405d5c:	085b      	lsrs	r3, r3, #1
  405d5e:	ea4f 0232 	mov.w	r2, r2, rrx
  405d62:	ebb6 0e02 	subs.w	lr, r6, r2
  405d66:	eb75 0e03 	sbcs.w	lr, r5, r3
  405d6a:	bf22      	ittt	cs
  405d6c:	1ab6      	subcs	r6, r6, r2
  405d6e:	4675      	movcs	r5, lr
  405d70:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  405d74:	085b      	lsrs	r3, r3, #1
  405d76:	ea4f 0232 	mov.w	r2, r2, rrx
  405d7a:	ebb6 0e02 	subs.w	lr, r6, r2
  405d7e:	eb75 0e03 	sbcs.w	lr, r5, r3
  405d82:	bf22      	ittt	cs
  405d84:	1ab6      	subcs	r6, r6, r2
  405d86:	4675      	movcs	r5, lr
  405d88:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  405d8c:	085b      	lsrs	r3, r3, #1
  405d8e:	ea4f 0232 	mov.w	r2, r2, rrx
  405d92:	ebb6 0e02 	subs.w	lr, r6, r2
  405d96:	eb75 0e03 	sbcs.w	lr, r5, r3
  405d9a:	bf22      	ittt	cs
  405d9c:	1ab6      	subcs	r6, r6, r2
  405d9e:	4675      	movcs	r5, lr
  405da0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  405da4:	ea55 0e06 	orrs.w	lr, r5, r6
  405da8:	d018      	beq.n	405ddc <__aeabi_ddiv+0x114>
  405daa:	ea4f 1505 	mov.w	r5, r5, lsl #4
  405dae:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  405db2:	ea4f 1606 	mov.w	r6, r6, lsl #4
  405db6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  405dba:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  405dbe:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  405dc2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  405dc6:	d1c0      	bne.n	405d4a <__aeabi_ddiv+0x82>
  405dc8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405dcc:	d10b      	bne.n	405de6 <__aeabi_ddiv+0x11e>
  405dce:	ea41 0100 	orr.w	r1, r1, r0
  405dd2:	f04f 0000 	mov.w	r0, #0
  405dd6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  405dda:	e7b6      	b.n	405d4a <__aeabi_ddiv+0x82>
  405ddc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405de0:	bf04      	itt	eq
  405de2:	4301      	orreq	r1, r0
  405de4:	2000      	moveq	r0, #0
  405de6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405dea:	bf88      	it	hi
  405dec:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405df0:	f63f aeaf 	bhi.w	405b52 <__aeabi_dmul+0xde>
  405df4:	ebb5 0c03 	subs.w	ip, r5, r3
  405df8:	bf04      	itt	eq
  405dfa:	ebb6 0c02 	subseq.w	ip, r6, r2
  405dfe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405e02:	f150 0000 	adcs.w	r0, r0, #0
  405e06:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405e0a:	bd70      	pop	{r4, r5, r6, pc}
  405e0c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  405e10:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  405e14:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  405e18:	bfc2      	ittt	gt
  405e1a:	ebd4 050c 	rsbsgt	r5, r4, ip
  405e1e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405e22:	bd70      	popgt	{r4, r5, r6, pc}
  405e24:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405e28:	f04f 0e00 	mov.w	lr, #0
  405e2c:	3c01      	subs	r4, #1
  405e2e:	e690      	b.n	405b52 <__aeabi_dmul+0xde>
  405e30:	ea45 0e06 	orr.w	lr, r5, r6
  405e34:	e68d      	b.n	405b52 <__aeabi_dmul+0xde>
  405e36:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405e3a:	ea94 0f0c 	teq	r4, ip
  405e3e:	bf08      	it	eq
  405e40:	ea95 0f0c 	teqeq	r5, ip
  405e44:	f43f af3b 	beq.w	405cbe <__aeabi_dmul+0x24a>
  405e48:	ea94 0f0c 	teq	r4, ip
  405e4c:	d10a      	bne.n	405e64 <__aeabi_ddiv+0x19c>
  405e4e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405e52:	f47f af34 	bne.w	405cbe <__aeabi_dmul+0x24a>
  405e56:	ea95 0f0c 	teq	r5, ip
  405e5a:	f47f af25 	bne.w	405ca8 <__aeabi_dmul+0x234>
  405e5e:	4610      	mov	r0, r2
  405e60:	4619      	mov	r1, r3
  405e62:	e72c      	b.n	405cbe <__aeabi_dmul+0x24a>
  405e64:	ea95 0f0c 	teq	r5, ip
  405e68:	d106      	bne.n	405e78 <__aeabi_ddiv+0x1b0>
  405e6a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  405e6e:	f43f aefd 	beq.w	405c6c <__aeabi_dmul+0x1f8>
  405e72:	4610      	mov	r0, r2
  405e74:	4619      	mov	r1, r3
  405e76:	e722      	b.n	405cbe <__aeabi_dmul+0x24a>
  405e78:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405e7c:	bf18      	it	ne
  405e7e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405e82:	f47f aec5 	bne.w	405c10 <__aeabi_dmul+0x19c>
  405e86:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  405e8a:	f47f af0d 	bne.w	405ca8 <__aeabi_dmul+0x234>
  405e8e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  405e92:	f47f aeeb 	bne.w	405c6c <__aeabi_dmul+0x1f8>
  405e96:	e712      	b.n	405cbe <__aeabi_dmul+0x24a>

00405e98 <__gedf2>:
  405e98:	f04f 3cff 	mov.w	ip, #4294967295
  405e9c:	e006      	b.n	405eac <__cmpdf2+0x4>
  405e9e:	bf00      	nop

00405ea0 <__ledf2>:
  405ea0:	f04f 0c01 	mov.w	ip, #1
  405ea4:	e002      	b.n	405eac <__cmpdf2+0x4>
  405ea6:	bf00      	nop

00405ea8 <__cmpdf2>:
  405ea8:	f04f 0c01 	mov.w	ip, #1
  405eac:	f84d cd04 	str.w	ip, [sp, #-4]!
  405eb0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405eb4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405eb8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405ebc:	bf18      	it	ne
  405ebe:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  405ec2:	d01b      	beq.n	405efc <__cmpdf2+0x54>
  405ec4:	b001      	add	sp, #4
  405ec6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  405eca:	bf0c      	ite	eq
  405ecc:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  405ed0:	ea91 0f03 	teqne	r1, r3
  405ed4:	bf02      	ittt	eq
  405ed6:	ea90 0f02 	teqeq	r0, r2
  405eda:	2000      	moveq	r0, #0
  405edc:	4770      	bxeq	lr
  405ede:	f110 0f00 	cmn.w	r0, #0
  405ee2:	ea91 0f03 	teq	r1, r3
  405ee6:	bf58      	it	pl
  405ee8:	4299      	cmppl	r1, r3
  405eea:	bf08      	it	eq
  405eec:	4290      	cmpeq	r0, r2
  405eee:	bf2c      	ite	cs
  405ef0:	17d8      	asrcs	r0, r3, #31
  405ef2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  405ef6:	f040 0001 	orr.w	r0, r0, #1
  405efa:	4770      	bx	lr
  405efc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405f00:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405f04:	d102      	bne.n	405f0c <__cmpdf2+0x64>
  405f06:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405f0a:	d107      	bne.n	405f1c <__cmpdf2+0x74>
  405f0c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405f10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405f14:	d1d6      	bne.n	405ec4 <__cmpdf2+0x1c>
  405f16:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405f1a:	d0d3      	beq.n	405ec4 <__cmpdf2+0x1c>
  405f1c:	f85d 0b04 	ldr.w	r0, [sp], #4
  405f20:	4770      	bx	lr
  405f22:	bf00      	nop

00405f24 <__aeabi_cdrcmple>:
  405f24:	4684      	mov	ip, r0
  405f26:	4610      	mov	r0, r2
  405f28:	4662      	mov	r2, ip
  405f2a:	468c      	mov	ip, r1
  405f2c:	4619      	mov	r1, r3
  405f2e:	4663      	mov	r3, ip
  405f30:	e000      	b.n	405f34 <__aeabi_cdcmpeq>
  405f32:	bf00      	nop

00405f34 <__aeabi_cdcmpeq>:
  405f34:	b501      	push	{r0, lr}
  405f36:	f7ff ffb7 	bl	405ea8 <__cmpdf2>
  405f3a:	2800      	cmp	r0, #0
  405f3c:	bf48      	it	mi
  405f3e:	f110 0f00 	cmnmi.w	r0, #0
  405f42:	bd01      	pop	{r0, pc}

00405f44 <__aeabi_dcmpeq>:
  405f44:	f84d ed08 	str.w	lr, [sp, #-8]!
  405f48:	f7ff fff4 	bl	405f34 <__aeabi_cdcmpeq>
  405f4c:	bf0c      	ite	eq
  405f4e:	2001      	moveq	r0, #1
  405f50:	2000      	movne	r0, #0
  405f52:	f85d fb08 	ldr.w	pc, [sp], #8
  405f56:	bf00      	nop

00405f58 <__aeabi_dcmplt>:
  405f58:	f84d ed08 	str.w	lr, [sp, #-8]!
  405f5c:	f7ff ffea 	bl	405f34 <__aeabi_cdcmpeq>
  405f60:	bf34      	ite	cc
  405f62:	2001      	movcc	r0, #1
  405f64:	2000      	movcs	r0, #0
  405f66:	f85d fb08 	ldr.w	pc, [sp], #8
  405f6a:	bf00      	nop

00405f6c <__aeabi_dcmple>:
  405f6c:	f84d ed08 	str.w	lr, [sp, #-8]!
  405f70:	f7ff ffe0 	bl	405f34 <__aeabi_cdcmpeq>
  405f74:	bf94      	ite	ls
  405f76:	2001      	movls	r0, #1
  405f78:	2000      	movhi	r0, #0
  405f7a:	f85d fb08 	ldr.w	pc, [sp], #8
  405f7e:	bf00      	nop

00405f80 <__aeabi_dcmpge>:
  405f80:	f84d ed08 	str.w	lr, [sp, #-8]!
  405f84:	f7ff ffce 	bl	405f24 <__aeabi_cdrcmple>
  405f88:	bf94      	ite	ls
  405f8a:	2001      	movls	r0, #1
  405f8c:	2000      	movhi	r0, #0
  405f8e:	f85d fb08 	ldr.w	pc, [sp], #8
  405f92:	bf00      	nop

00405f94 <__aeabi_dcmpgt>:
  405f94:	f84d ed08 	str.w	lr, [sp, #-8]!
  405f98:	f7ff ffc4 	bl	405f24 <__aeabi_cdrcmple>
  405f9c:	bf34      	ite	cc
  405f9e:	2001      	movcc	r0, #1
  405fa0:	2000      	movcs	r0, #0
  405fa2:	f85d fb08 	ldr.w	pc, [sp], #8
  405fa6:	bf00      	nop

00405fa8 <__aeabi_dcmpun>:
  405fa8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405fac:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405fb0:	d102      	bne.n	405fb8 <__aeabi_dcmpun+0x10>
  405fb2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405fb6:	d10a      	bne.n	405fce <__aeabi_dcmpun+0x26>
  405fb8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405fbc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405fc0:	d102      	bne.n	405fc8 <__aeabi_dcmpun+0x20>
  405fc2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405fc6:	d102      	bne.n	405fce <__aeabi_dcmpun+0x26>
  405fc8:	f04f 0000 	mov.w	r0, #0
  405fcc:	4770      	bx	lr
  405fce:	f04f 0001 	mov.w	r0, #1
  405fd2:	4770      	bx	lr

00405fd4 <__aeabi_d2iz>:
  405fd4:	ea4f 0241 	mov.w	r2, r1, lsl #1
  405fd8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  405fdc:	d215      	bcs.n	40600a <__aeabi_d2iz+0x36>
  405fde:	d511      	bpl.n	406004 <__aeabi_d2iz+0x30>
  405fe0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  405fe4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  405fe8:	d912      	bls.n	406010 <__aeabi_d2iz+0x3c>
  405fea:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  405fee:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  405ff2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  405ff6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  405ffa:	fa23 f002 	lsr.w	r0, r3, r2
  405ffe:	bf18      	it	ne
  406000:	4240      	negne	r0, r0
  406002:	4770      	bx	lr
  406004:	f04f 0000 	mov.w	r0, #0
  406008:	4770      	bx	lr
  40600a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  40600e:	d105      	bne.n	40601c <__aeabi_d2iz+0x48>
  406010:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  406014:	bf08      	it	eq
  406016:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  40601a:	4770      	bx	lr
  40601c:	f04f 0000 	mov.w	r0, #0
  406020:	4770      	bx	lr
  406022:	bf00      	nop

00406024 <__aeabi_uldivmod>:
  406024:	b953      	cbnz	r3, 40603c <__aeabi_uldivmod+0x18>
  406026:	b94a      	cbnz	r2, 40603c <__aeabi_uldivmod+0x18>
  406028:	2900      	cmp	r1, #0
  40602a:	bf08      	it	eq
  40602c:	2800      	cmpeq	r0, #0
  40602e:	bf1c      	itt	ne
  406030:	f04f 31ff 	movne.w	r1, #4294967295
  406034:	f04f 30ff 	movne.w	r0, #4294967295
  406038:	f000 b97a 	b.w	406330 <__aeabi_idiv0>
  40603c:	f1ad 0c08 	sub.w	ip, sp, #8
  406040:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  406044:	f000 f806 	bl	406054 <__udivmoddi4>
  406048:	f8dd e004 	ldr.w	lr, [sp, #4]
  40604c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  406050:	b004      	add	sp, #16
  406052:	4770      	bx	lr

00406054 <__udivmoddi4>:
  406054:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  406058:	468c      	mov	ip, r1
  40605a:	460d      	mov	r5, r1
  40605c:	4604      	mov	r4, r0
  40605e:	9e08      	ldr	r6, [sp, #32]
  406060:	2b00      	cmp	r3, #0
  406062:	d151      	bne.n	406108 <__udivmoddi4+0xb4>
  406064:	428a      	cmp	r2, r1
  406066:	4617      	mov	r7, r2
  406068:	d96d      	bls.n	406146 <__udivmoddi4+0xf2>
  40606a:	fab2 fe82 	clz	lr, r2
  40606e:	f1be 0f00 	cmp.w	lr, #0
  406072:	d00b      	beq.n	40608c <__udivmoddi4+0x38>
  406074:	f1ce 0c20 	rsb	ip, lr, #32
  406078:	fa01 f50e 	lsl.w	r5, r1, lr
  40607c:	fa20 fc0c 	lsr.w	ip, r0, ip
  406080:	fa02 f70e 	lsl.w	r7, r2, lr
  406084:	ea4c 0c05 	orr.w	ip, ip, r5
  406088:	fa00 f40e 	lsl.w	r4, r0, lr
  40608c:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  406090:	0c25      	lsrs	r5, r4, #16
  406092:	fbbc f8fa 	udiv	r8, ip, sl
  406096:	fa1f f987 	uxth.w	r9, r7
  40609a:	fb0a cc18 	mls	ip, sl, r8, ip
  40609e:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  4060a2:	fb08 f309 	mul.w	r3, r8, r9
  4060a6:	42ab      	cmp	r3, r5
  4060a8:	d90a      	bls.n	4060c0 <__udivmoddi4+0x6c>
  4060aa:	19ed      	adds	r5, r5, r7
  4060ac:	f108 32ff 	add.w	r2, r8, #4294967295
  4060b0:	f080 8123 	bcs.w	4062fa <__udivmoddi4+0x2a6>
  4060b4:	42ab      	cmp	r3, r5
  4060b6:	f240 8120 	bls.w	4062fa <__udivmoddi4+0x2a6>
  4060ba:	f1a8 0802 	sub.w	r8, r8, #2
  4060be:	443d      	add	r5, r7
  4060c0:	1aed      	subs	r5, r5, r3
  4060c2:	b2a4      	uxth	r4, r4
  4060c4:	fbb5 f0fa 	udiv	r0, r5, sl
  4060c8:	fb0a 5510 	mls	r5, sl, r0, r5
  4060cc:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  4060d0:	fb00 f909 	mul.w	r9, r0, r9
  4060d4:	45a1      	cmp	r9, r4
  4060d6:	d909      	bls.n	4060ec <__udivmoddi4+0x98>
  4060d8:	19e4      	adds	r4, r4, r7
  4060da:	f100 33ff 	add.w	r3, r0, #4294967295
  4060de:	f080 810a 	bcs.w	4062f6 <__udivmoddi4+0x2a2>
  4060e2:	45a1      	cmp	r9, r4
  4060e4:	f240 8107 	bls.w	4062f6 <__udivmoddi4+0x2a2>
  4060e8:	3802      	subs	r0, #2
  4060ea:	443c      	add	r4, r7
  4060ec:	eba4 0409 	sub.w	r4, r4, r9
  4060f0:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4060f4:	2100      	movs	r1, #0
  4060f6:	2e00      	cmp	r6, #0
  4060f8:	d061      	beq.n	4061be <__udivmoddi4+0x16a>
  4060fa:	fa24 f40e 	lsr.w	r4, r4, lr
  4060fe:	2300      	movs	r3, #0
  406100:	6034      	str	r4, [r6, #0]
  406102:	6073      	str	r3, [r6, #4]
  406104:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406108:	428b      	cmp	r3, r1
  40610a:	d907      	bls.n	40611c <__udivmoddi4+0xc8>
  40610c:	2e00      	cmp	r6, #0
  40610e:	d054      	beq.n	4061ba <__udivmoddi4+0x166>
  406110:	2100      	movs	r1, #0
  406112:	e886 0021 	stmia.w	r6, {r0, r5}
  406116:	4608      	mov	r0, r1
  406118:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40611c:	fab3 f183 	clz	r1, r3
  406120:	2900      	cmp	r1, #0
  406122:	f040 808e 	bne.w	406242 <__udivmoddi4+0x1ee>
  406126:	42ab      	cmp	r3, r5
  406128:	d302      	bcc.n	406130 <__udivmoddi4+0xdc>
  40612a:	4282      	cmp	r2, r0
  40612c:	f200 80fa 	bhi.w	406324 <__udivmoddi4+0x2d0>
  406130:	1a84      	subs	r4, r0, r2
  406132:	eb65 0503 	sbc.w	r5, r5, r3
  406136:	2001      	movs	r0, #1
  406138:	46ac      	mov	ip, r5
  40613a:	2e00      	cmp	r6, #0
  40613c:	d03f      	beq.n	4061be <__udivmoddi4+0x16a>
  40613e:	e886 1010 	stmia.w	r6, {r4, ip}
  406142:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406146:	b912      	cbnz	r2, 40614e <__udivmoddi4+0xfa>
  406148:	2701      	movs	r7, #1
  40614a:	fbb7 f7f2 	udiv	r7, r7, r2
  40614e:	fab7 fe87 	clz	lr, r7
  406152:	f1be 0f00 	cmp.w	lr, #0
  406156:	d134      	bne.n	4061c2 <__udivmoddi4+0x16e>
  406158:	1beb      	subs	r3, r5, r7
  40615a:	0c3a      	lsrs	r2, r7, #16
  40615c:	fa1f fc87 	uxth.w	ip, r7
  406160:	2101      	movs	r1, #1
  406162:	fbb3 f8f2 	udiv	r8, r3, r2
  406166:	0c25      	lsrs	r5, r4, #16
  406168:	fb02 3318 	mls	r3, r2, r8, r3
  40616c:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406170:	fb0c f308 	mul.w	r3, ip, r8
  406174:	42ab      	cmp	r3, r5
  406176:	d907      	bls.n	406188 <__udivmoddi4+0x134>
  406178:	19ed      	adds	r5, r5, r7
  40617a:	f108 30ff 	add.w	r0, r8, #4294967295
  40617e:	d202      	bcs.n	406186 <__udivmoddi4+0x132>
  406180:	42ab      	cmp	r3, r5
  406182:	f200 80d1 	bhi.w	406328 <__udivmoddi4+0x2d4>
  406186:	4680      	mov	r8, r0
  406188:	1aed      	subs	r5, r5, r3
  40618a:	b2a3      	uxth	r3, r4
  40618c:	fbb5 f0f2 	udiv	r0, r5, r2
  406190:	fb02 5510 	mls	r5, r2, r0, r5
  406194:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  406198:	fb0c fc00 	mul.w	ip, ip, r0
  40619c:	45a4      	cmp	ip, r4
  40619e:	d907      	bls.n	4061b0 <__udivmoddi4+0x15c>
  4061a0:	19e4      	adds	r4, r4, r7
  4061a2:	f100 33ff 	add.w	r3, r0, #4294967295
  4061a6:	d202      	bcs.n	4061ae <__udivmoddi4+0x15a>
  4061a8:	45a4      	cmp	ip, r4
  4061aa:	f200 80b8 	bhi.w	40631e <__udivmoddi4+0x2ca>
  4061ae:	4618      	mov	r0, r3
  4061b0:	eba4 040c 	sub.w	r4, r4, ip
  4061b4:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4061b8:	e79d      	b.n	4060f6 <__udivmoddi4+0xa2>
  4061ba:	4631      	mov	r1, r6
  4061bc:	4630      	mov	r0, r6
  4061be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4061c2:	f1ce 0420 	rsb	r4, lr, #32
  4061c6:	fa05 f30e 	lsl.w	r3, r5, lr
  4061ca:	fa07 f70e 	lsl.w	r7, r7, lr
  4061ce:	fa20 f804 	lsr.w	r8, r0, r4
  4061d2:	0c3a      	lsrs	r2, r7, #16
  4061d4:	fa25 f404 	lsr.w	r4, r5, r4
  4061d8:	ea48 0803 	orr.w	r8, r8, r3
  4061dc:	fbb4 f1f2 	udiv	r1, r4, r2
  4061e0:	ea4f 4518 	mov.w	r5, r8, lsr #16
  4061e4:	fb02 4411 	mls	r4, r2, r1, r4
  4061e8:	fa1f fc87 	uxth.w	ip, r7
  4061ec:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  4061f0:	fb01 f30c 	mul.w	r3, r1, ip
  4061f4:	42ab      	cmp	r3, r5
  4061f6:	fa00 f40e 	lsl.w	r4, r0, lr
  4061fa:	d909      	bls.n	406210 <__udivmoddi4+0x1bc>
  4061fc:	19ed      	adds	r5, r5, r7
  4061fe:	f101 30ff 	add.w	r0, r1, #4294967295
  406202:	f080 808a 	bcs.w	40631a <__udivmoddi4+0x2c6>
  406206:	42ab      	cmp	r3, r5
  406208:	f240 8087 	bls.w	40631a <__udivmoddi4+0x2c6>
  40620c:	3902      	subs	r1, #2
  40620e:	443d      	add	r5, r7
  406210:	1aeb      	subs	r3, r5, r3
  406212:	fa1f f588 	uxth.w	r5, r8
  406216:	fbb3 f0f2 	udiv	r0, r3, r2
  40621a:	fb02 3310 	mls	r3, r2, r0, r3
  40621e:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406222:	fb00 f30c 	mul.w	r3, r0, ip
  406226:	42ab      	cmp	r3, r5
  406228:	d907      	bls.n	40623a <__udivmoddi4+0x1e6>
  40622a:	19ed      	adds	r5, r5, r7
  40622c:	f100 38ff 	add.w	r8, r0, #4294967295
  406230:	d26f      	bcs.n	406312 <__udivmoddi4+0x2be>
  406232:	42ab      	cmp	r3, r5
  406234:	d96d      	bls.n	406312 <__udivmoddi4+0x2be>
  406236:	3802      	subs	r0, #2
  406238:	443d      	add	r5, r7
  40623a:	1aeb      	subs	r3, r5, r3
  40623c:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  406240:	e78f      	b.n	406162 <__udivmoddi4+0x10e>
  406242:	f1c1 0720 	rsb	r7, r1, #32
  406246:	fa22 f807 	lsr.w	r8, r2, r7
  40624a:	408b      	lsls	r3, r1
  40624c:	fa05 f401 	lsl.w	r4, r5, r1
  406250:	ea48 0303 	orr.w	r3, r8, r3
  406254:	fa20 fe07 	lsr.w	lr, r0, r7
  406258:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  40625c:	40fd      	lsrs	r5, r7
  40625e:	ea4e 0e04 	orr.w	lr, lr, r4
  406262:	fbb5 f9fc 	udiv	r9, r5, ip
  406266:	ea4f 441e 	mov.w	r4, lr, lsr #16
  40626a:	fb0c 5519 	mls	r5, ip, r9, r5
  40626e:	fa1f f883 	uxth.w	r8, r3
  406272:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  406276:	fb09 f408 	mul.w	r4, r9, r8
  40627a:	42ac      	cmp	r4, r5
  40627c:	fa02 f201 	lsl.w	r2, r2, r1
  406280:	fa00 fa01 	lsl.w	sl, r0, r1
  406284:	d908      	bls.n	406298 <__udivmoddi4+0x244>
  406286:	18ed      	adds	r5, r5, r3
  406288:	f109 30ff 	add.w	r0, r9, #4294967295
  40628c:	d243      	bcs.n	406316 <__udivmoddi4+0x2c2>
  40628e:	42ac      	cmp	r4, r5
  406290:	d941      	bls.n	406316 <__udivmoddi4+0x2c2>
  406292:	f1a9 0902 	sub.w	r9, r9, #2
  406296:	441d      	add	r5, r3
  406298:	1b2d      	subs	r5, r5, r4
  40629a:	fa1f fe8e 	uxth.w	lr, lr
  40629e:	fbb5 f0fc 	udiv	r0, r5, ip
  4062a2:	fb0c 5510 	mls	r5, ip, r0, r5
  4062a6:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  4062aa:	fb00 f808 	mul.w	r8, r0, r8
  4062ae:	45a0      	cmp	r8, r4
  4062b0:	d907      	bls.n	4062c2 <__udivmoddi4+0x26e>
  4062b2:	18e4      	adds	r4, r4, r3
  4062b4:	f100 35ff 	add.w	r5, r0, #4294967295
  4062b8:	d229      	bcs.n	40630e <__udivmoddi4+0x2ba>
  4062ba:	45a0      	cmp	r8, r4
  4062bc:	d927      	bls.n	40630e <__udivmoddi4+0x2ba>
  4062be:	3802      	subs	r0, #2
  4062c0:	441c      	add	r4, r3
  4062c2:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  4062c6:	eba4 0408 	sub.w	r4, r4, r8
  4062ca:	fba0 8902 	umull	r8, r9, r0, r2
  4062ce:	454c      	cmp	r4, r9
  4062d0:	46c6      	mov	lr, r8
  4062d2:	464d      	mov	r5, r9
  4062d4:	d315      	bcc.n	406302 <__udivmoddi4+0x2ae>
  4062d6:	d012      	beq.n	4062fe <__udivmoddi4+0x2aa>
  4062d8:	b156      	cbz	r6, 4062f0 <__udivmoddi4+0x29c>
  4062da:	ebba 030e 	subs.w	r3, sl, lr
  4062de:	eb64 0405 	sbc.w	r4, r4, r5
  4062e2:	fa04 f707 	lsl.w	r7, r4, r7
  4062e6:	40cb      	lsrs	r3, r1
  4062e8:	431f      	orrs	r7, r3
  4062ea:	40cc      	lsrs	r4, r1
  4062ec:	6037      	str	r7, [r6, #0]
  4062ee:	6074      	str	r4, [r6, #4]
  4062f0:	2100      	movs	r1, #0
  4062f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4062f6:	4618      	mov	r0, r3
  4062f8:	e6f8      	b.n	4060ec <__udivmoddi4+0x98>
  4062fa:	4690      	mov	r8, r2
  4062fc:	e6e0      	b.n	4060c0 <__udivmoddi4+0x6c>
  4062fe:	45c2      	cmp	sl, r8
  406300:	d2ea      	bcs.n	4062d8 <__udivmoddi4+0x284>
  406302:	ebb8 0e02 	subs.w	lr, r8, r2
  406306:	eb69 0503 	sbc.w	r5, r9, r3
  40630a:	3801      	subs	r0, #1
  40630c:	e7e4      	b.n	4062d8 <__udivmoddi4+0x284>
  40630e:	4628      	mov	r0, r5
  406310:	e7d7      	b.n	4062c2 <__udivmoddi4+0x26e>
  406312:	4640      	mov	r0, r8
  406314:	e791      	b.n	40623a <__udivmoddi4+0x1e6>
  406316:	4681      	mov	r9, r0
  406318:	e7be      	b.n	406298 <__udivmoddi4+0x244>
  40631a:	4601      	mov	r1, r0
  40631c:	e778      	b.n	406210 <__udivmoddi4+0x1bc>
  40631e:	3802      	subs	r0, #2
  406320:	443c      	add	r4, r7
  406322:	e745      	b.n	4061b0 <__udivmoddi4+0x15c>
  406324:	4608      	mov	r0, r1
  406326:	e708      	b.n	40613a <__udivmoddi4+0xe6>
  406328:	f1a8 0802 	sub.w	r8, r8, #2
  40632c:	443d      	add	r5, r7
  40632e:	e72b      	b.n	406188 <__udivmoddi4+0x134>

00406330 <__aeabi_idiv0>:
  406330:	4770      	bx	lr
  406332:	bf00      	nop

00406334 <OV2640_JPEG>:
  406334:	14e0 77e1 1fe5 03d7 10da 00e0 01ff 0804     ...w............
  406344:	ffff 0000                                   ....

00406348 <OV2640_JPEG_1024x768>:
  406348:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  406358:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  406368:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406378:	c8c0 96c1 008c 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  406388:	0054 8855 005a c05b 015c 02d3 ffff 0000     T.U.Z.[.\.......

00406398 <OV2640_JPEG_1280x1024>:
  406398:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  4063a8:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  4063b8:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  4063c8:	04e0 c8c0 96c1 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  4063d8:	0054 8855 0057 405a f05b 015c 02d3 00e0     T.U.W.Z@[.\.....
  4063e8:	ffff 0000                                   ....

004063ec <OV2640_JPEG_1600x1200>:
  4063ec:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  4063fc:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  40640c:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  40641c:	04e0 c8c0 96c1 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  40642c:	0054 8855 0057 905a 2c5b 055c 02d3 00e0     T.U.W.Z.[,\.....
  40643c:	ffff 0000                                   ....

00406440 <OV2640_JPEG_320x240>:
  406440:	01ff 4012 1117 4318 0019 4b1a 0932 ca4f     ...@...C...K2.O.
  406450:	a850 235a 006d 1239 da35 1a22 c337 0023     P.Z#m.9.5.".7.#.
  406460:	c034 1a36 8806 c007 870d 410e 004c 00ff     4.6........AL...
  406470:	04e0 64c0 4bc1 3586 8950 c851 9652 0053     ...d.K.5P.Q.R.S.
  406480:	0054 0055 0057 505a 3c5b 005c 00e0 ffff     T.U.W.ZP[<\.....

00406490 <OV2640_JPEG_640x480>:
  406490:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  4064a0:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  4064b0:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  4064c0:	04e0 c8c0 96c1 3d86 8950 9051 2c52 0053     .......=P.Q.R,S.
  4064d0:	0054 8855 0057 a05a 785b 005c 04d3 00e0     T.U.W.Z.[x\.....
  4064e0:	ffff 0000                                   ....

004064e4 <OV2640_JPEG_800x600>:
  4064e4:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  4064f4:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  406504:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406514:	04e0 c8c0 96c1 3586 8950 9051 2c52 0053     .......5P.Q.R,S.
  406524:	0054 8855 0057 c85a 965b 005c 02d3 00e0     T.U.W.Z.[.\.....
  406534:	ffff 0000                                   ....

00406538 <OV2640_JPEG_INIT>:
  406538:	00ff ff2c df2e 01ff 323c 0111 0209 2804     ..,.....<2.....(
  406548:	e513 4814 0c2c 7833 333a fb3b 003e 1143     ...H,.3x:3;.>.C.
  406558:	1016 9239 da35 1a22 c337 0023 c034 1a36     ..9.5.".7.#.4.6.
  406568:	8806 c007 870d 410e 004c 0048 005b 0342     .......AL.H.[.B.
  406578:	814a 9921 4024 3825 8226 005c 0063 7061     J.!.$@%8&.\.c.ap
  406588:	8062 057c 8020 3028 006c 806d 006e 0270     b.|. .(0l.m.n.p.
  406598:	9471 c173 4012 1117 4318 0019 4b1a 0932     q.s..@...C...K2.
  4065a8:	c037 604f a850 006d 383d 3f46 604f 3c0c     7.O`P.m.=8F?O`.<
  4065b8:	00ff 7fe5 c0f9 2441 14e0 ff76 a033 2042     ......A$..v.3.B 
  4065c8:	1843 004c d587 3f88 03d7 10d9 82d3 08c8     C.L....?........
  4065d8:	80c9 007c 007d 037c 487d 487d 087c 207d     ..|.}.|.}H}H|.} 
  4065e8:	107d 0e7d 0090 0e91 1a91 3191 5a91 6991     }.}........1.Z.i
  4065f8:	7591 7e91 8891 8f91 9691 a391 af91 c491     .u.~............
  406608:	d791 e891 2091 0092 0693 e393 0593 0593     ..... ..........
  406618:	0093 0493 0093 0093 0093 0093 0093 0093     ................
  406628:	0093 0096 0897 1997 0297 0c97 2497 3097     .............$.0
  406638:	2897 2697 0297 9897 8097 0097 0097 edc3     .(.&............
  406648:	00a4 00a8 11c5 51c6 80bf 10c7 66b6 a5b8     .......Q.....f..
  406658:	64b7 7cb9 afb3 97b4 ffb5 c5b0 94b1 0fb2     .d.|............
  406668:	5cc4 64c0 4bc1 008c 3d86 0050 c851 9652     .\.d.K...=P.Q.R.
  406678:	0053 0054 0055 c85a 965b 005c 00d3 edc3     S.T.U.Z.[.\.....
  406688:	007f 00da 1fe5 67e1 00e0 7fdd 0005 4012     .......g.......@
  406698:	04d3 16c0 12c1 008c 3d86 0050 2c51 2452     .........=P.Q,R$
  4066a8:	0053 0054 0055 2c5a 245b 005c ffff 0000     S.T.U.Z,[$\.....

004066b8 <OV2640_QQVGA_RGB888>:
  4066b8:	000e 8012 0013 0111 0012 10d5 120c 340d     ...............4
  4066c8:	2517 a018 0319 f01a 891b 0322 1829 f82b     .%........".).+.
  4066d8:	012c a031 f032 c433 b43a 3f36 6004 8027     ,.1.2.3.:.6?.`'.
  4066e8:	0f3d 803e 403f 7f40 6a41 2942 e544 4145     =.>.?@@.AjB)D.EA
  4066f8:	0247 6449 a14a 704b 1a4c 504d 134e 0064     G.IdJ.KpL.MPN.d.
  406708:	8867 1a68 3814 3c24 3025 7226 9750 7e51     g.h..8$<%0&rP.Q~
  406718:	0052 0053 0020 2321 1438 00e9 5556 ff57     R.S. .!#8...VUW.
  406728:	ff58 ff59 045f 00ec ff13 7f80 3f81 3282     X.Y._........?.2
  406738:	0183 1138 7084 0085 0386 0187 0588 3089     ..8..p.........0
  406748:	308d 858f 3093 8595 3099 859b 089c 129d     .0...0...0......
  406758:	239e 459f 55a0 64a1 72a2 7fa3 8ba4 95a5     .#.E.U.d.r......
  406768:	a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce 6ecf     .............x.n
  406778:	0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b 885c     ..........Z$[.\.
  406788:	605d 6eac ffbe 00bf 2831 3c32 3f82 0112     ]`.n....1(2<.?..
  406798:	2f36 0483 0053 f433 8a1b 0322 0084 0084     6/..S.3...".....
  4067a8:	0228 ffff                                   (...

004067ac <OV2640_QQVGA_YUV422>:
  4067ac:	000e 8012 0013 0111 0012 10d5 540c 340d     .............T.4
  4067bc:	0116 2517 a018 0319 f01a 891b 0322 1829     ...%........".).
  4067cc:	f82b 012c a031 f032 c433 b43a 3f36 6004     +.,.1.2.3.:.6?.`
  4067dc:	8027 0f3d 803e 403f 7f40 6a41 2942 e544     '.=.>.?@@.AjB)D.
  4067ec:	4145 0247 6449 a14a 704b 1a4c 504d 134e     EAG.IdJ.KpL.MPN.
  4067fc:	0064 8867 1a68 3814 3c24 3025 7226 9750     d.g.h..8$<%0&rP.
  40680c:	7e51 0052 0053 0020 2321 1438 00e9 5556     Q~R.S. .!#8...VU
  40681c:	ff57 ff58 ff59 045f 00ec ff13 7f80 3f81     W.X.Y._........?
  40682c:	3282 0183 1138 7084 0085 0386 0187 0588     .2..8..p........
  40683c:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  40684c:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  40685c:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  40686c:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  40687c:	885c 605d 6eac ffbe 00bf 2831 3c32 0034     \.]`.n....1(2<4.
  40688c:	3f82 0012 3f36 0053 0033 891b 0322 0228     .?..6?S.3...".(.
  40689c:	00d9 ffff                                   ....

004068a0 <OV2640_QVGA_RGB888>:
  4068a0:	000e 8012 0013 0111 0012 10d5 120c 340d     ...............4
  4068b0:	2517 a018 0319 f01a 891b 0322 1829 f82b     .%........".).+.
  4068c0:	012c a031 f032 c433 b43a 3f36 6004 8027     ,.1.2.3.:.6?.`'.
  4068d0:	0f3d 803e 403f 7f40 6a41 2942 e544 4145     =.>.?@@.AjB)D.EA
  4068e0:	0247 6449 a14a 704b 1a4c 504d 134e 0064     G.IdJ.KpL.MPN.d.
  4068f0:	8867 1a68 3814 3c24 3025 7226 9750 7e51     g.h..8$<%0&rP.Q~
  406900:	0052 0053 0020 2321 1438 00e9 5556 ff57     R.S. .!#8...VUW.
  406910:	ff58 ff59 045f 00ec ff13 7f80 3f81 3282     X.Y._........?.2
  406920:	0183 1138 7084 0085 0386 0187 0588 3089     ..8..p.........0
  406930:	308d 858f 3093 8595 3099 859b 089c 129d     .0...0...0......
  406940:	239e 459f 55a0 64a1 72a2 7fa3 8ba4 95a5     .#.E.U.d.r......
  406950:	a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce 6ecf     .............x.n
  406960:	0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b 885c     ..........Z$[.\.
  406970:	605d 6eac ffbe 00bf 5031 7832 3f82 0112     ]`.n....1P2x.?..
  406980:	2f36 0483 0053 f433 8a1b 0322 0084 0084     6/..S.3...".....
  406990:	0228 ffff                                   (...

00406994 <OV2640_QVGA_YUV422_10FPS>:
  406994:	000e 8012 05fe 0013 0511 0012 10d5 d40c     ................
  4069a4:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  4069b4:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  4069c4:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  4069d4:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  4069e4:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  4069f4:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  406a04:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  406a14:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  406a24:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406a34:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406a44:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406a54:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406a64:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  406a74:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00406a84 <OV2640_QVGA_YUV422_15FPS>:
  406a84:	000e 8012 05fe 0013 0311 0012 10d5 d40c     ................
  406a94:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  406aa4:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406ab4:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406ac4:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406ad4:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  406ae4:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  406af4:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  406b04:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  406b14:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406b24:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406b34:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406b44:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406b54:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  406b64:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00406b74 <OV2640_QVGA_YUV422_20FPS>:
  406b74:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  406b84:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  406b94:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406ba4:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406bb4:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406bc4:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  406bd4:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  406be4:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  406bf4:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  406c04:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406c14:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406c24:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406c34:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406c44:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  406c54:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00406c64 <OV2640_QVGA_YUV422_30FPS>:
  406c64:	000e 8012 05fe 0013 0111 0012 10d5 d40c     ................
  406c74:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  406c84:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406c94:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406ca4:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406cb4:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  406cc4:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  406cd4:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  406ce4:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  406cf4:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406d04:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406d14:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406d24:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406d34:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  406d44:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00406d54 <OV2640_TEST_PATTERN>:
  406d54:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  406d64:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  406d74:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406d84:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406d94:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406da4:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  406db4:	9750 7e51 0052 0053 0020 2321 0738 0284     P.Q~R.S. .!#8...
  406dc4:	1438 00e9 5556 ff57 ff58 ff59 045f 00ec     8...VUW.X.Y._...
  406dd4:	ff13 7f80 3f81 3282 0183 1138 0085 0386     .....?.2..8.....
  406de4:	0187 0588 3089 308d 858f 3093 8595 3099     .....0.0...0...0
  406df4:	859b 089c 129d 239e 459f 55a0 64a1 72a2     .......#.E.U.d.r
  406e04:	7fa3 8ba4 95a5 a7a6 b5a7 cba8 dda9 ecaa     ................
  406e14:	1aab 78ce 6ecf 0ad0 0cd1 84d2 90d3 1ed4     ...x.n..........
  406e24:	245a 1f5b 885c 605d 6eac ffbe 00bf 5031     Z$[.\.]`.n....1P
  406e34:	7832 3f82 0012 3f36 0053 c433 891b 0322     2x.?..6?S.3...".
  406e44:	0228 ffff                                   (...

00406e48 <OV2640_VGA_YUV422_20FPS>:
  406e48:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  406e58:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  406e68:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406e78:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406e88:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406e98:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  406ea8:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  406eb8:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  406ec8:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  406ed8:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406ee8:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406ef8:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406f08:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406f18:	885c 605d 6eac ffbe 00bf a031 f032 3f82     \.]`.n....1.2..?
  406f28:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00406f38 <OV2640_YUV422>:
  406f38:	00ff 0005 10da 03d7 00df 8033 403c 77e1     ..........3.<@.w
  406f48:	0000 ffff c200 0001 00c0 0000 0800 0000     ................
	...
  406f64:	5553 4343 5345 0053 6d69 6761 2065 7274     SUCCESS.image tr
  406f74:	6e61 6673 7265 2520 0a69 0000 7270 766f     ansfer %i...prov
  406f84:	7369 6f69 0d6e 000a 6574 7473 0a0d 0000     ision...test....

00406f94 <_global_impure_ptr>:
  406f94:	0018 2000 4e49 0046 6e69 0066 414e 004e     ... INF.inf.NAN.
  406fa4:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  406fb4:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  406fc4:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  406fd4:	296c 0000 0030 0000                         l)..0...

00406fdc <blanks.7223>:
  406fdc:	2020 2020 2020 2020 2020 2020 2020 2020                     

00406fec <zeroes.7224>:
  406fec:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  406ffc:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.
  40700c:	0000 0000                                   ....

00407010 <__mprec_bigtens>:
  407010:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  407020:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  407030:	bf3c 7f73 4fdd 7515                         <.s..O.u

00407038 <__mprec_tens>:
  407038:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  407048:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  407058:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  407068:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  407078:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  407088:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  407098:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  4070a8:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  4070b8:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  4070c8:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  4070d8:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  4070e8:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  4070f8:	9db4 79d9 7843 44ea                         ...yCx.D

00407100 <p05.6055>:
  407100:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  407110:	4f50 4953 0058 0000 002e 0000               POSIX.......

0040711c <_ctype_>:
  40711c:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  40712c:	2020 2020 2020 2020 2020 2020 2020 2020                     
  40713c:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  40714c:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  40715c:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  40716c:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  40717c:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  40718c:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  40719c:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00407220 <_init>:
  407220:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407222:	bf00      	nop
  407224:	bcf8      	pop	{r3, r4, r5, r6, r7}
  407226:	bc08      	pop	{r3}
  407228:	469e      	mov	lr, r3
  40722a:	4770      	bx	lr

0040722c <__init_array_start>:
  40722c:	00402e91 	.word	0x00402e91

00407230 <__frame_dummy_init_array_entry>:
  407230:	004000f1                                ..@.

00407234 <_fini>:
  407234:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407236:	bf00      	nop
  407238:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40723a:	bc08      	pop	{r3}
  40723c:	469e      	mov	lr, r3
  40723e:	4770      	bx	lr

00407240 <__fini_array_start>:
  407240:	004000cd 	.word	0x004000cd

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
20000008:	4770      	bx	lr
	...

2000000c <SystemCoreClock>:
2000000c:	0900 003d                                   ..=.

20000010 <_impure_ptr>:
20000010:	0018 2000 0000 0000                         ... ....

20000018 <impure_data>:
20000018:	0000 0000 0304 2000 036c 2000 03d4 2000     ....... l.. ... 
	...
200000c0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
200000d0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20000440 <__atexit_recursive_mutex>:
20000440:	0ea0 2000                                   ... 

20000444 <__malloc_av_>:
	...
2000044c:	0444 2000 0444 2000 044c 2000 044c 2000     D.. D.. L.. L.. 
2000045c:	0454 2000 0454 2000 045c 2000 045c 2000     T.. T.. \.. \.. 
2000046c:	0464 2000 0464 2000 046c 2000 046c 2000     d.. d.. l.. l.. 
2000047c:	0474 2000 0474 2000 047c 2000 047c 2000     t.. t.. |.. |.. 
2000048c:	0484 2000 0484 2000 048c 2000 048c 2000     ... ... ... ... 
2000049c:	0494 2000 0494 2000 049c 2000 049c 2000     ... ... ... ... 
200004ac:	04a4 2000 04a4 2000 04ac 2000 04ac 2000     ... ... ... ... 
200004bc:	04b4 2000 04b4 2000 04bc 2000 04bc 2000     ... ... ... ... 
200004cc:	04c4 2000 04c4 2000 04cc 2000 04cc 2000     ... ... ... ... 
200004dc:	04d4 2000 04d4 2000 04dc 2000 04dc 2000     ... ... ... ... 
200004ec:	04e4 2000 04e4 2000 04ec 2000 04ec 2000     ... ... ... ... 
200004fc:	04f4 2000 04f4 2000 04fc 2000 04fc 2000     ... ... ... ... 
2000050c:	0504 2000 0504 2000 050c 2000 050c 2000     ... ... ... ... 
2000051c:	0514 2000 0514 2000 051c 2000 051c 2000     ... ... ... ... 
2000052c:	0524 2000 0524 2000 052c 2000 052c 2000     $.. $.. ,.. ,.. 
2000053c:	0534 2000 0534 2000 053c 2000 053c 2000     4.. 4.. <.. <.. 
2000054c:	0544 2000 0544 2000 054c 2000 054c 2000     D.. D.. L.. L.. 
2000055c:	0554 2000 0554 2000 055c 2000 055c 2000     T.. T.. \.. \.. 
2000056c:	0564 2000 0564 2000 056c 2000 056c 2000     d.. d.. l.. l.. 
2000057c:	0574 2000 0574 2000 057c 2000 057c 2000     t.. t.. |.. |.. 
2000058c:	0584 2000 0584 2000 058c 2000 058c 2000     ... ... ... ... 
2000059c:	0594 2000 0594 2000 059c 2000 059c 2000     ... ... ... ... 
200005ac:	05a4 2000 05a4 2000 05ac 2000 05ac 2000     ... ... ... ... 
200005bc:	05b4 2000 05b4 2000 05bc 2000 05bc 2000     ... ... ... ... 
200005cc:	05c4 2000 05c4 2000 05cc 2000 05cc 2000     ... ... ... ... 
200005dc:	05d4 2000 05d4 2000 05dc 2000 05dc 2000     ... ... ... ... 
200005ec:	05e4 2000 05e4 2000 05ec 2000 05ec 2000     ... ... ... ... 
200005fc:	05f4 2000 05f4 2000 05fc 2000 05fc 2000     ... ... ... ... 
2000060c:	0604 2000 0604 2000 060c 2000 060c 2000     ... ... ... ... 
2000061c:	0614 2000 0614 2000 061c 2000 061c 2000     ... ... ... ... 
2000062c:	0624 2000 0624 2000 062c 2000 062c 2000     $.. $.. ,.. ,.. 
2000063c:	0634 2000 0634 2000 063c 2000 063c 2000     4.. 4.. <.. <.. 
2000064c:	0644 2000 0644 2000 064c 2000 064c 2000     D.. D.. L.. L.. 
2000065c:	0654 2000 0654 2000 065c 2000 065c 2000     T.. T.. \.. \.. 
2000066c:	0664 2000 0664 2000 066c 2000 066c 2000     d.. d.. l.. l.. 
2000067c:	0674 2000 0674 2000 067c 2000 067c 2000     t.. t.. |.. |.. 
2000068c:	0684 2000 0684 2000 068c 2000 068c 2000     ... ... ... ... 
2000069c:	0694 2000 0694 2000 069c 2000 069c 2000     ... ... ... ... 
200006ac:	06a4 2000 06a4 2000 06ac 2000 06ac 2000     ... ... ... ... 
200006bc:	06b4 2000 06b4 2000 06bc 2000 06bc 2000     ... ... ... ... 
200006cc:	06c4 2000 06c4 2000 06cc 2000 06cc 2000     ... ... ... ... 
200006dc:	06d4 2000 06d4 2000 06dc 2000 06dc 2000     ... ... ... ... 
200006ec:	06e4 2000 06e4 2000 06ec 2000 06ec 2000     ... ... ... ... 
200006fc:	06f4 2000 06f4 2000 06fc 2000 06fc 2000     ... ... ... ... 
2000070c:	0704 2000 0704 2000 070c 2000 070c 2000     ... ... ... ... 
2000071c:	0714 2000 0714 2000 071c 2000 071c 2000     ... ... ... ... 
2000072c:	0724 2000 0724 2000 072c 2000 072c 2000     $.. $.. ,.. ,.. 
2000073c:	0734 2000 0734 2000 073c 2000 073c 2000     4.. 4.. <.. <.. 
2000074c:	0744 2000 0744 2000 074c 2000 074c 2000     D.. D.. L.. L.. 
2000075c:	0754 2000 0754 2000 075c 2000 075c 2000     T.. T.. \.. \.. 
2000076c:	0764 2000 0764 2000 076c 2000 076c 2000     d.. d.. l.. l.. 
2000077c:	0774 2000 0774 2000 077c 2000 077c 2000     t.. t.. |.. |.. 
2000078c:	0784 2000 0784 2000 078c 2000 078c 2000     ... ... ... ... 
2000079c:	0794 2000 0794 2000 079c 2000 079c 2000     ... ... ... ... 
200007ac:	07a4 2000 07a4 2000 07ac 2000 07ac 2000     ... ... ... ... 
200007bc:	07b4 2000 07b4 2000 07bc 2000 07bc 2000     ... ... ... ... 
200007cc:	07c4 2000 07c4 2000 07cc 2000 07cc 2000     ... ... ... ... 
200007dc:	07d4 2000 07d4 2000 07dc 2000 07dc 2000     ... ... ... ... 
200007ec:	07e4 2000 07e4 2000 07ec 2000 07ec 2000     ... ... ... ... 
200007fc:	07f4 2000 07f4 2000 07fc 2000 07fc 2000     ... ... ... ... 
2000080c:	0804 2000 0804 2000 080c 2000 080c 2000     ... ... ... ... 
2000081c:	0814 2000 0814 2000 081c 2000 081c 2000     ... ... ... ... 
2000082c:	0824 2000 0824 2000 082c 2000 082c 2000     $.. $.. ,.. ,.. 
2000083c:	0834 2000 0834 2000 083c 2000 083c 2000     4.. 4.. <.. <.. 

2000084c <__malloc_sbrk_base>:
2000084c:	ffff ffff                                   ....

20000850 <__malloc_trim_threshold>:
20000850:	0000 0002                                   ....

20000854 <__global_locale>:
20000854:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000874:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000894:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008b4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008d4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008f4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000914:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000934:	56e9 0040 52a9 0040 0000 0000 711c 0040     .V@..R@......q@.
20000944:	7118 0040 6fb8 0040 6fb8 0040 6fb8 0040     .q@..o@..o@..o@.
20000954:	6fb8 0040 6fb8 0040 6fb8 0040 6fb8 0040     .o@..o@..o@..o@.
20000964:	6fb8 0040 6fb8 0040 ffff ffff ffff ffff     .o@..o@.........
20000974:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
2000099c:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...

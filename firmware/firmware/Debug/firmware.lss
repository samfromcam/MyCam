
firmware.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000077e4  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  004077e4  004077e4  000177e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009c0  20000000  004077ec  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00018bb8  200009c0  004081ac  000209c0  2**2
                  ALLOC
  4 .stack        00003000  20019578  00420d64  000209c0  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  000209c0  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000209ea  2**0
                  CONTENTS, READONLY
  7 .debug_info   0001982b  00000000  00000000  00020a43  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000039ff  00000000  00000000  0003a26e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000591a  00000000  00000000  0003dc6d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000b78  00000000  00000000  00043587  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000aa8  00000000  00000000  000440ff  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00015de6  00000000  00000000  00044ba7  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000f920  00000000  00000000  0005a98d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00052486  00000000  00000000  0006a2ad  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000025c0  00000000  00000000  000bc734  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	78 c5 01 20 61 15 40 00 5d 15 40 00 5d 15 40 00     x.. a.@.].@.].@.
  400010:	5d 15 40 00 5d 15 40 00 5d 15 40 00 00 00 00 00     ].@.].@.].@.....
	...
  40002c:	5d 15 40 00 5d 15 40 00 00 00 00 00 5d 15 40 00     ].@.].@.....].@.
  40003c:	5d 15 40 00 5d 15 40 00 5d 15 40 00 5d 15 40 00     ].@.].@.].@.].@.
  40004c:	5d 15 40 00 5d 15 40 00 5d 15 40 00 5d 15 40 00     ].@.].@.].@.].@.
  40005c:	00 00 00 00 5d 15 40 00 5d 15 40 00 00 00 00 00     ....].@.].@.....
  40006c:	05 05 40 00 19 05 40 00 00 00 00 00 f1 11 40 00     ..@...@.......@.
  40007c:	5d 15 40 00 00 00 00 00 00 00 00 00 5d 15 40 00     ].@.........].@.
  40008c:	5d 15 40 00 5d 15 40 00 5d 15 40 00 5d 15 40 00     ].@.].@.].@.].@.
  40009c:	29 11 40 00 5d 15 40 00 5d 15 40 00 00 00 00 00     ).@.].@.].@.....
	...
  4000b4:	5d 15 40 00 5d 15 40 00 5d 15 40 00 5d 15 40 00     ].@.].@.].@.].@.
  4000c4:	5d 15 40 00 5d 15 40 00                             ].@.].@.

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	200009c0 	.word	0x200009c0
  4000e8:	00000000 	.word	0x00000000
  4000ec:	004077ec 	.word	0x004077ec

004000f0 <frame_dummy>:
  4000f0:	4b0c      	ldr	r3, [pc, #48]	; (400124 <frame_dummy+0x34>)
  4000f2:	b143      	cbz	r3, 400106 <frame_dummy+0x16>
  4000f4:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x38>)
  4000f6:	490d      	ldr	r1, [pc, #52]	; (40012c <frame_dummy+0x3c>)
  4000f8:	b510      	push	{r4, lr}
  4000fa:	f3af 8000 	nop.w
  4000fe:	480c      	ldr	r0, [pc, #48]	; (400130 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b923      	cbnz	r3, 40010e <frame_dummy+0x1e>
  400104:	bd10      	pop	{r4, pc}
  400106:	480a      	ldr	r0, [pc, #40]	; (400130 <frame_dummy+0x40>)
  400108:	6803      	ldr	r3, [r0, #0]
  40010a:	b933      	cbnz	r3, 40011a <frame_dummy+0x2a>
  40010c:	4770      	bx	lr
  40010e:	4b09      	ldr	r3, [pc, #36]	; (400134 <frame_dummy+0x44>)
  400110:	2b00      	cmp	r3, #0
  400112:	d0f7      	beq.n	400104 <frame_dummy+0x14>
  400114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400118:	4718      	bx	r3
  40011a:	4b06      	ldr	r3, [pc, #24]	; (400134 <frame_dummy+0x44>)
  40011c:	2b00      	cmp	r3, #0
  40011e:	d0f5      	beq.n	40010c <frame_dummy+0x1c>
  400120:	4718      	bx	r3
  400122:	bf00      	nop
  400124:	00000000 	.word	0x00000000
  400128:	004077ec 	.word	0x004077ec
  40012c:	200009c4 	.word	0x200009c4
  400130:	004077ec 	.word	0x004077ec
  400134:	00000000 	.word	0x00000000

00400138 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400138:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40013a:	480e      	ldr	r0, [pc, #56]	; (400174 <sysclk_init+0x3c>)
  40013c:	4b0e      	ldr	r3, [pc, #56]	; (400178 <sysclk_init+0x40>)
  40013e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400140:	213e      	movs	r1, #62	; 0x3e
  400142:	2000      	movs	r0, #0
  400144:	4b0d      	ldr	r3, [pc, #52]	; (40017c <sysclk_init+0x44>)
  400146:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400148:	4c0d      	ldr	r4, [pc, #52]	; (400180 <sysclk_init+0x48>)
  40014a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  40014c:	2800      	cmp	r0, #0
  40014e:	d0fc      	beq.n	40014a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400150:	4b0c      	ldr	r3, [pc, #48]	; (400184 <sysclk_init+0x4c>)
  400152:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400154:	4a0c      	ldr	r2, [pc, #48]	; (400188 <sysclk_init+0x50>)
  400156:	4b0d      	ldr	r3, [pc, #52]	; (40018c <sysclk_init+0x54>)
  400158:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  40015a:	4c0d      	ldr	r4, [pc, #52]	; (400190 <sysclk_init+0x58>)
  40015c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  40015e:	2800      	cmp	r0, #0
  400160:	d0fc      	beq.n	40015c <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400162:	2010      	movs	r0, #16
  400164:	4b0b      	ldr	r3, [pc, #44]	; (400194 <sysclk_init+0x5c>)
  400166:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400168:	4b0b      	ldr	r3, [pc, #44]	; (400198 <sysclk_init+0x60>)
  40016a:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  40016c:	4801      	ldr	r0, [pc, #4]	; (400174 <sysclk_init+0x3c>)
  40016e:	4b02      	ldr	r3, [pc, #8]	; (400178 <sysclk_init+0x40>)
  400170:	4798      	blx	r3
  400172:	bd10      	pop	{r4, pc}
  400174:	07270e00 	.word	0x07270e00
  400178:	0040171d 	.word	0x0040171d
  40017c:	00400591 	.word	0x00400591
  400180:	004005e5 	.word	0x004005e5
  400184:	004005f5 	.word	0x004005f5
  400188:	20133f01 	.word	0x20133f01
  40018c:	400e0400 	.word	0x400e0400
  400190:	00400605 	.word	0x00400605
  400194:	0040052d 	.word	0x0040052d
  400198:	0040160d 	.word	0x0040160d

0040019c <pio_set_debounce_filter>:
void pio_set_debounce_filter(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_cut_off)
{
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Set Debouncing, 0 bit field no effect */
	p_pio->PIO_IFSCER = ul_mask;
  40019c:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
	/*
	 * The debouncing filter can filter a pulse of less than 1/2 Period of a
	 * programmable Divided Slow Clock:
	 * Tdiv_slclk = ((DIV+1)*2).Tslow_clock
	 */
	p_pio->PIO_SCDR = PIO_SCDR_DIV((FREQ_SLOW_CLOCK_EXT /
  4001a0:	0053      	lsls	r3, r2, #1
  4001a2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4001a6:	fbb2 f2f3 	udiv	r2, r2, r3
  4001aa:	3a01      	subs	r2, #1
  4001ac:	f3c2 020d 	ubfx	r2, r2, #0, #14
  4001b0:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
  4001b4:	4770      	bx	lr

004001b6 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  4001b6:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  4001b8:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  4001bc:	d039      	beq.n	400232 <pio_set_peripheral+0x7c>
  4001be:	d813      	bhi.n	4001e8 <pio_set_peripheral+0x32>
  4001c0:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  4001c4:	d025      	beq.n	400212 <pio_set_peripheral+0x5c>
  4001c6:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  4001ca:	d10a      	bne.n	4001e2 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4001cc:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4001ce:	4313      	orrs	r3, r2
  4001d0:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4001d2:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4001d4:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4001d6:	400b      	ands	r3, r1
  4001d8:	ea23 0302 	bic.w	r3, r3, r2
  4001dc:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4001de:	6042      	str	r2, [r0, #4]
  4001e0:	4770      	bx	lr
	switch (ul_type) {
  4001e2:	2900      	cmp	r1, #0
  4001e4:	d1fb      	bne.n	4001de <pio_set_peripheral+0x28>
  4001e6:	4770      	bx	lr
  4001e8:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4001ec:	d020      	beq.n	400230 <pio_set_peripheral+0x7a>
  4001ee:	d809      	bhi.n	400204 <pio_set_peripheral+0x4e>
  4001f0:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4001f4:	d1f3      	bne.n	4001de <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  4001f6:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4001f8:	4313      	orrs	r3, r2
  4001fa:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  4001fc:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4001fe:	4313      	orrs	r3, r2
  400200:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400202:	e7ec      	b.n	4001de <pio_set_peripheral+0x28>
	switch (ul_type) {
  400204:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400208:	d012      	beq.n	400230 <pio_set_peripheral+0x7a>
  40020a:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  40020e:	d00f      	beq.n	400230 <pio_set_peripheral+0x7a>
  400210:	e7e5      	b.n	4001de <pio_set_peripheral+0x28>
{
  400212:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400214:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400216:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400218:	43d3      	mvns	r3, r2
  40021a:	4021      	ands	r1, r4
  40021c:	461c      	mov	r4, r3
  40021e:	4019      	ands	r1, r3
  400220:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400222:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400224:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400226:	400b      	ands	r3, r1
  400228:	4023      	ands	r3, r4
  40022a:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  40022c:	6042      	str	r2, [r0, #4]
}
  40022e:	bc10      	pop	{r4}
  400230:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400232:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400234:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400236:	400b      	ands	r3, r1
  400238:	ea23 0302 	bic.w	r3, r3, r2
  40023c:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  40023e:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400240:	4313      	orrs	r3, r2
  400242:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400244:	e7cb      	b.n	4001de <pio_set_peripheral+0x28>

00400246 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400246:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400248:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  40024c:	bf14      	ite	ne
  40024e:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400250:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400252:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  400256:	bf14      	ite	ne
  400258:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
  40025a:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
  40025c:	f012 0f02 	tst.w	r2, #2
  400260:	d107      	bne.n	400272 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400262:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  400266:	bf18      	it	ne
  400268:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
  40026c:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  40026e:	6001      	str	r1, [r0, #0]
  400270:	4770      	bx	lr
		p_pio->PIO_IFSCDR = ul_mask;
  400272:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  400276:	e7f9      	b.n	40026c <pio_set_input+0x26>

00400278 <pio_set_output>:
{
  400278:	b410      	push	{r4}
  40027a:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  40027c:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  40027e:	b944      	cbnz	r4, 400292 <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
  400280:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400282:	b143      	cbz	r3, 400296 <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
  400284:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400286:	b942      	cbnz	r2, 40029a <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
  400288:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  40028a:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  40028c:	6001      	str	r1, [r0, #0]
}
  40028e:	bc10      	pop	{r4}
  400290:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400292:	6641      	str	r1, [r0, #100]	; 0x64
  400294:	e7f5      	b.n	400282 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400296:	6541      	str	r1, [r0, #84]	; 0x54
  400298:	e7f5      	b.n	400286 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  40029a:	6301      	str	r1, [r0, #48]	; 0x30
  40029c:	e7f5      	b.n	40028a <pio_set_output+0x12>

0040029e <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  40029e:	f012 0f10 	tst.w	r2, #16
  4002a2:	d010      	beq.n	4002c6 <pio_configure_interrupt+0x28>
		p_pio->PIO_AIMER = ul_mask;
  4002a4:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  4002a8:	f012 0f20 	tst.w	r2, #32
			p_pio->PIO_REHLSR = ul_mask;
  4002ac:	bf14      	ite	ne
  4002ae:	f8c0 10d4 	strne.w	r1, [r0, #212]	; 0xd4
			p_pio->PIO_FELLSR = ul_mask;
  4002b2:	f8c0 10d0 	streq.w	r1, [r0, #208]	; 0xd0
		if (ul_attr & PIO_IT_EDGE) {
  4002b6:	f012 0f40 	tst.w	r2, #64	; 0x40
			p_pio->PIO_ESR = ul_mask;
  4002ba:	bf14      	ite	ne
  4002bc:	f8c0 10c0 	strne.w	r1, [r0, #192]	; 0xc0
			p_pio->PIO_LSR = ul_mask;
  4002c0:	f8c0 10c4 	streq.w	r1, [r0, #196]	; 0xc4
  4002c4:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  4002c6:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  4002ca:	4770      	bx	lr

004002cc <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  4002cc:	6401      	str	r1, [r0, #64]	; 0x40
  4002ce:	4770      	bx	lr

004002d0 <pio_disable_interrupt>:
	p_pio->PIO_IDR = ul_mask;
  4002d0:	6441      	str	r1, [r0, #68]	; 0x44
  4002d2:	4770      	bx	lr

004002d4 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  4002d4:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  4002d6:	4770      	bx	lr

004002d8 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  4002d8:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  4002da:	4770      	bx	lr

004002dc <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
  4002dc:	b570      	push	{r4, r5, r6, lr}
  4002de:	b082      	sub	sp, #8
  4002e0:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4002e2:	0943      	lsrs	r3, r0, #5
  4002e4:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4002e8:	f203 7307 	addw	r3, r3, #1799	; 0x707
  4002ec:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
  4002ee:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  4002f2:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4002f6:	d053      	beq.n	4003a0 <pio_configure_pin+0xc4>
  4002f8:	d80a      	bhi.n	400310 <pio_configure_pin+0x34>
  4002fa:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4002fe:	d02d      	beq.n	40035c <pio_configure_pin+0x80>
  400300:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  400304:	d03b      	beq.n	40037e <pio_configure_pin+0xa2>
  400306:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  40030a:	d015      	beq.n	400338 <pio_configure_pin+0x5c>
		return 0;
  40030c:	2000      	movs	r0, #0
  40030e:	e023      	b.n	400358 <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
  400310:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  400314:	d055      	beq.n	4003c2 <pio_configure_pin+0xe6>
  400316:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  40031a:	d052      	beq.n	4003c2 <pio_configure_pin+0xe6>
  40031c:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400320:	d1f4      	bne.n	40030c <pio_configure_pin+0x30>
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  400322:	f000 011f 	and.w	r1, r0, #31
  400326:	2601      	movs	r6, #1
  400328:	462a      	mov	r2, r5
  40032a:	fa06 f101 	lsl.w	r1, r6, r1
  40032e:	4620      	mov	r0, r4
  400330:	4b2f      	ldr	r3, [pc, #188]	; (4003f0 <pio_configure_pin+0x114>)
  400332:	4798      	blx	r3
	return 1;
  400334:	4630      	mov	r0, r6
		break;
  400336:	e00f      	b.n	400358 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  400338:	f000 001f 	and.w	r0, r0, #31
  40033c:	2601      	movs	r6, #1
  40033e:	4086      	lsls	r6, r0
  400340:	4632      	mov	r2, r6
  400342:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400346:	4620      	mov	r0, r4
  400348:	4b2a      	ldr	r3, [pc, #168]	; (4003f4 <pio_configure_pin+0x118>)
  40034a:	4798      	blx	r3
	if (ul_pull_up_enable) {
  40034c:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400350:	bf14      	ite	ne
  400352:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400354:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400356:	2001      	movs	r0, #1
}
  400358:	b002      	add	sp, #8
  40035a:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  40035c:	f000 001f 	and.w	r0, r0, #31
  400360:	2601      	movs	r6, #1
  400362:	4086      	lsls	r6, r0
  400364:	4632      	mov	r2, r6
  400366:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40036a:	4620      	mov	r0, r4
  40036c:	4b21      	ldr	r3, [pc, #132]	; (4003f4 <pio_configure_pin+0x118>)
  40036e:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400370:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400374:	bf14      	ite	ne
  400376:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400378:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  40037a:	2001      	movs	r0, #1
  40037c:	e7ec      	b.n	400358 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  40037e:	f000 001f 	and.w	r0, r0, #31
  400382:	2601      	movs	r6, #1
  400384:	4086      	lsls	r6, r0
  400386:	4632      	mov	r2, r6
  400388:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  40038c:	4620      	mov	r0, r4
  40038e:	4b19      	ldr	r3, [pc, #100]	; (4003f4 <pio_configure_pin+0x118>)
  400390:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400392:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400396:	bf14      	ite	ne
  400398:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  40039a:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  40039c:	2001      	movs	r0, #1
  40039e:	e7db      	b.n	400358 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  4003a0:	f000 001f 	and.w	r0, r0, #31
  4003a4:	2601      	movs	r6, #1
  4003a6:	4086      	lsls	r6, r0
  4003a8:	4632      	mov	r2, r6
  4003aa:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  4003ae:	4620      	mov	r0, r4
  4003b0:	4b10      	ldr	r3, [pc, #64]	; (4003f4 <pio_configure_pin+0x118>)
  4003b2:	4798      	blx	r3
	if (ul_pull_up_enable) {
  4003b4:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  4003b8:	bf14      	ite	ne
  4003ba:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  4003bc:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  4003be:	2001      	movs	r0, #1
  4003c0:	e7ca      	b.n	400358 <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  4003c2:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4003c6:	f000 011f 	and.w	r1, r0, #31
  4003ca:	2601      	movs	r6, #1
  4003cc:	ea05 0306 	and.w	r3, r5, r6
  4003d0:	9300      	str	r3, [sp, #0]
  4003d2:	f3c5 0380 	ubfx	r3, r5, #2, #1
  4003d6:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  4003da:	bf14      	ite	ne
  4003dc:	2200      	movne	r2, #0
  4003de:	2201      	moveq	r2, #1
  4003e0:	fa06 f101 	lsl.w	r1, r6, r1
  4003e4:	4620      	mov	r0, r4
  4003e6:	4c04      	ldr	r4, [pc, #16]	; (4003f8 <pio_configure_pin+0x11c>)
  4003e8:	47a0      	blx	r4
	return 1;
  4003ea:	4630      	mov	r0, r6
		break;
  4003ec:	e7b4      	b.n	400358 <pio_configure_pin+0x7c>
  4003ee:	bf00      	nop
  4003f0:	00400247 	.word	0x00400247
  4003f4:	004001b7 	.word	0x004001b7
  4003f8:	00400279 	.word	0x00400279

004003fc <pio_capture_enable>:
 *
 * \param p_pio Pointer to a PIO instance.
 */
void pio_capture_enable(Pio *p_pio)
{
	p_pio->PIO_PCMR |= PIO_PCMR_PCEN;
  4003fc:	f8d0 3150 	ldr.w	r3, [r0, #336]	; 0x150
  400400:	f043 0301 	orr.w	r3, r3, #1
  400404:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
	pio_capture_enable_flag = true;
  400408:	2201      	movs	r2, #1
  40040a:	4b01      	ldr	r3, [pc, #4]	; (400410 <pio_capture_enable+0x14>)
  40040c:	601a      	str	r2, [r3, #0]
  40040e:	4770      	bx	lr
  400410:	20000ac0 	.word	0x20000ac0

00400414 <pio_capture_disable>:
 *
 * \param p_pio Pointer to a PIO instance.
 */
void pio_capture_disable(Pio *p_pio)
{
	p_pio->PIO_PCMR &= (~PIO_PCMR_PCEN);
  400414:	f8d0 3150 	ldr.w	r3, [r0, #336]	; 0x150
  400418:	f023 0301 	bic.w	r3, r3, #1
  40041c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
	pio_capture_enable_flag = false;
  400420:	2200      	movs	r2, #0
  400422:	4b01      	ldr	r3, [pc, #4]	; (400428 <pio_capture_disable+0x14>)
  400424:	601a      	str	r2, [r3, #0]
  400426:	4770      	bx	lr
  400428:	20000ac0 	.word	0x20000ac0

0040042c <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  40042c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400430:	4681      	mov	r9, r0
  400432:	460f      	mov	r7, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400434:	4b12      	ldr	r3, [pc, #72]	; (400480 <pio_handler_process+0x54>)
  400436:	4798      	blx	r3
  400438:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  40043a:	4648      	mov	r0, r9
  40043c:	4b11      	ldr	r3, [pc, #68]	; (400484 <pio_handler_process+0x58>)
  40043e:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400440:	4005      	ands	r5, r0
  400442:	d013      	beq.n	40046c <pio_handler_process+0x40>
  400444:	4c10      	ldr	r4, [pc, #64]	; (400488 <pio_handler_process+0x5c>)
  400446:	f104 0660 	add.w	r6, r4, #96	; 0x60
  40044a:	e003      	b.n	400454 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  40044c:	42b4      	cmp	r4, r6
  40044e:	d00d      	beq.n	40046c <pio_handler_process+0x40>
  400450:	3410      	adds	r4, #16
		while (status != 0) {
  400452:	b15d      	cbz	r5, 40046c <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400454:	6820      	ldr	r0, [r4, #0]
  400456:	42b8      	cmp	r0, r7
  400458:	d1f8      	bne.n	40044c <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  40045a:	6861      	ldr	r1, [r4, #4]
  40045c:	4229      	tst	r1, r5
  40045e:	d0f5      	beq.n	40044c <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400460:	68e3      	ldr	r3, [r4, #12]
  400462:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400464:	6863      	ldr	r3, [r4, #4]
  400466:	ea25 0503 	bic.w	r5, r5, r3
  40046a:	e7ef      	b.n	40044c <pio_handler_process+0x20>
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  40046c:	4b07      	ldr	r3, [pc, #28]	; (40048c <pio_handler_process+0x60>)
  40046e:	681b      	ldr	r3, [r3, #0]
  400470:	b123      	cbz	r3, 40047c <pio_handler_process+0x50>
		if (pio_capture_handler) {
  400472:	4b07      	ldr	r3, [pc, #28]	; (400490 <pio_handler_process+0x64>)
  400474:	681b      	ldr	r3, [r3, #0]
  400476:	b10b      	cbz	r3, 40047c <pio_handler_process+0x50>
			pio_capture_handler(p_pio);
  400478:	4648      	mov	r0, r9
  40047a:	4798      	blx	r3
  40047c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400480:	004002d5 	.word	0x004002d5
  400484:	004002d9 	.word	0x004002d9
  400488:	200009dc 	.word	0x200009dc
  40048c:	20000ac0 	.word	0x20000ac0
  400490:	20000a50 	.word	0x20000a50

00400494 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400494:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400496:	4c18      	ldr	r4, [pc, #96]	; (4004f8 <pio_handler_set+0x64>)
  400498:	6826      	ldr	r6, [r4, #0]
  40049a:	2e06      	cmp	r6, #6
  40049c:	d829      	bhi.n	4004f2 <pio_handler_set+0x5e>
  40049e:	f04f 0c00 	mov.w	ip, #0
  4004a2:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  4004a4:	4f15      	ldr	r7, [pc, #84]	; (4004fc <pio_handler_set+0x68>)
  4004a6:	e004      	b.n	4004b2 <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  4004a8:	3401      	adds	r4, #1
  4004aa:	b2e4      	uxtb	r4, r4
  4004ac:	46a4      	mov	ip, r4
  4004ae:	42a6      	cmp	r6, r4
  4004b0:	d309      	bcc.n	4004c6 <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  4004b2:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  4004b4:	0125      	lsls	r5, r4, #4
  4004b6:	597d      	ldr	r5, [r7, r5]
  4004b8:	428d      	cmp	r5, r1
  4004ba:	d1f5      	bne.n	4004a8 <pio_handler_set+0x14>
  4004bc:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  4004c0:	686d      	ldr	r5, [r5, #4]
  4004c2:	4295      	cmp	r5, r2
  4004c4:	d1f0      	bne.n	4004a8 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  4004c6:	4d0d      	ldr	r5, [pc, #52]	; (4004fc <pio_handler_set+0x68>)
  4004c8:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  4004cc:	eb05 040e 	add.w	r4, r5, lr
  4004d0:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  4004d4:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  4004d6:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  4004d8:	9906      	ldr	r1, [sp, #24]
  4004da:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  4004dc:	3601      	adds	r6, #1
  4004de:	4566      	cmp	r6, ip
		gs_ul_nb_sources++;
  4004e0:	bf04      	itt	eq
  4004e2:	4905      	ldreq	r1, [pc, #20]	; (4004f8 <pio_handler_set+0x64>)
  4004e4:	600e      	streq	r6, [r1, #0]
  4004e6:	4611      	mov	r1, r2
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  4004e8:	461a      	mov	r2, r3
  4004ea:	4b05      	ldr	r3, [pc, #20]	; (400500 <pio_handler_set+0x6c>)
  4004ec:	4798      	blx	r3

	return 0;
  4004ee:	2000      	movs	r0, #0
  4004f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return 1;
  4004f2:	2001      	movs	r0, #1
}
  4004f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4004f6:	bf00      	nop
  4004f8:	20000a4c 	.word	0x20000a4c
  4004fc:	200009dc 	.word	0x200009dc
  400500:	0040029f 	.word	0x0040029f

00400504 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400504:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400506:	210b      	movs	r1, #11
  400508:	4801      	ldr	r0, [pc, #4]	; (400510 <PIOA_Handler+0xc>)
  40050a:	4b02      	ldr	r3, [pc, #8]	; (400514 <PIOA_Handler+0x10>)
  40050c:	4798      	blx	r3
  40050e:	bd08      	pop	{r3, pc}
  400510:	400e0e00 	.word	0x400e0e00
  400514:	0040042d 	.word	0x0040042d

00400518 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400518:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  40051a:	210c      	movs	r1, #12
  40051c:	4801      	ldr	r0, [pc, #4]	; (400524 <PIOB_Handler+0xc>)
  40051e:	4b02      	ldr	r3, [pc, #8]	; (400528 <PIOB_Handler+0x10>)
  400520:	4798      	blx	r3
  400522:	bd08      	pop	{r3, pc}
  400524:	400e1000 	.word	0x400e1000
  400528:	0040042d 	.word	0x0040042d

0040052c <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  40052c:	4a17      	ldr	r2, [pc, #92]	; (40058c <pmc_switch_mck_to_pllack+0x60>)
  40052e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400530:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400534:	4318      	orrs	r0, r3
  400536:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400538:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40053a:	f013 0f08 	tst.w	r3, #8
  40053e:	d10a      	bne.n	400556 <pmc_switch_mck_to_pllack+0x2a>
  400540:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400544:	4911      	ldr	r1, [pc, #68]	; (40058c <pmc_switch_mck_to_pllack+0x60>)
  400546:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400548:	f012 0f08 	tst.w	r2, #8
  40054c:	d103      	bne.n	400556 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40054e:	3b01      	subs	r3, #1
  400550:	d1f9      	bne.n	400546 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400552:	2001      	movs	r0, #1
  400554:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400556:	4a0d      	ldr	r2, [pc, #52]	; (40058c <pmc_switch_mck_to_pllack+0x60>)
  400558:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40055a:	f023 0303 	bic.w	r3, r3, #3
  40055e:	f043 0302 	orr.w	r3, r3, #2
  400562:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400564:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400566:	f013 0f08 	tst.w	r3, #8
  40056a:	d10a      	bne.n	400582 <pmc_switch_mck_to_pllack+0x56>
  40056c:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400570:	4906      	ldr	r1, [pc, #24]	; (40058c <pmc_switch_mck_to_pllack+0x60>)
  400572:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400574:	f012 0f08 	tst.w	r2, #8
  400578:	d105      	bne.n	400586 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40057a:	3b01      	subs	r3, #1
  40057c:	d1f9      	bne.n	400572 <pmc_switch_mck_to_pllack+0x46>
			return 1;
  40057e:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400580:	4770      	bx	lr
	return 0;
  400582:	2000      	movs	r0, #0
  400584:	4770      	bx	lr
  400586:	2000      	movs	r0, #0
  400588:	4770      	bx	lr
  40058a:	bf00      	nop
  40058c:	400e0400 	.word	0x400e0400

00400590 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400590:	b9c8      	cbnz	r0, 4005c6 <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400592:	4a11      	ldr	r2, [pc, #68]	; (4005d8 <pmc_switch_mainck_to_xtal+0x48>)
  400594:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400596:	0209      	lsls	r1, r1, #8
  400598:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  40059a:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  40059e:	f023 0303 	bic.w	r3, r3, #3
  4005a2:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4005a6:	f043 0301 	orr.w	r3, r3, #1
  4005aa:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4005ac:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4005ae:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4005b0:	f013 0f01 	tst.w	r3, #1
  4005b4:	d0fb      	beq.n	4005ae <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  4005b6:	4a08      	ldr	r2, [pc, #32]	; (4005d8 <pmc_switch_mainck_to_xtal+0x48>)
  4005b8:	6a13      	ldr	r3, [r2, #32]
  4005ba:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  4005be:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4005c2:	6213      	str	r3, [r2, #32]
  4005c4:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4005c6:	4904      	ldr	r1, [pc, #16]	; (4005d8 <pmc_switch_mainck_to_xtal+0x48>)
  4005c8:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4005ca:	4a04      	ldr	r2, [pc, #16]	; (4005dc <pmc_switch_mainck_to_xtal+0x4c>)
  4005cc:	401a      	ands	r2, r3
  4005ce:	4b04      	ldr	r3, [pc, #16]	; (4005e0 <pmc_switch_mainck_to_xtal+0x50>)
  4005d0:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4005d2:	620b      	str	r3, [r1, #32]
  4005d4:	4770      	bx	lr
  4005d6:	bf00      	nop
  4005d8:	400e0400 	.word	0x400e0400
  4005dc:	fec8fffc 	.word	0xfec8fffc
  4005e0:	01370002 	.word	0x01370002

004005e4 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  4005e4:	4b02      	ldr	r3, [pc, #8]	; (4005f0 <pmc_osc_is_ready_mainck+0xc>)
  4005e6:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4005e8:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4005ec:	4770      	bx	lr
  4005ee:	bf00      	nop
  4005f0:	400e0400 	.word	0x400e0400

004005f4 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  4005f4:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4005f8:	4b01      	ldr	r3, [pc, #4]	; (400600 <pmc_disable_pllack+0xc>)
  4005fa:	629a      	str	r2, [r3, #40]	; 0x28
  4005fc:	4770      	bx	lr
  4005fe:	bf00      	nop
  400600:	400e0400 	.word	0x400e0400

00400604 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400604:	4b02      	ldr	r3, [pc, #8]	; (400610 <pmc_is_locked_pllack+0xc>)
  400606:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400608:	f000 0002 	and.w	r0, r0, #2
  40060c:	4770      	bx	lr
  40060e:	bf00      	nop
  400610:	400e0400 	.word	0x400e0400

00400614 <pmc_enable_pllbck>:
 * \param mulb PLLB multiplier.
 * \param pllbcount PLLB counter.
 * \param divb Divider.
 */
void pmc_enable_pllbck(uint32_t mulb, uint32_t pllbcount, uint32_t divb)
{
  400614:	b410      	push	{r4}
/**
 * \brief Disable PLLB clock.
 */
void pmc_disable_pllbck(void)
{
	PMC->CKGR_PLLBR = CKGR_PLLBR_MULB(0);
  400616:	4c0a      	ldr	r4, [pc, #40]	; (400640 <pmc_enable_pllbck+0x2c>)
  400618:	2300      	movs	r3, #0
  40061a:	62e3      	str	r3, [r4, #44]	; 0x2c
			CKGR_PLLBR_DIVB(divb) | CKGR_PLLBR_PLLBCOUNT(pllbcount)
  40061c:	0209      	lsls	r1, r1, #8
  40061e:	f401 517c 	and.w	r1, r1, #16128	; 0x3f00
  400622:	b2d2      	uxtb	r2, r2
  400624:	4311      	orrs	r1, r2
			| CKGR_PLLBR_MULB(mulb);
  400626:	4b07      	ldr	r3, [pc, #28]	; (400644 <pmc_enable_pllbck+0x30>)
  400628:	ea03 4000 	and.w	r0, r3, r0, lsl #16
  40062c:	4301      	orrs	r1, r0
	PMC->CKGR_PLLBR =
  40062e:	62e1      	str	r1, [r4, #44]	; 0x2c
	while ((PMC->PMC_SR & PMC_SR_LOCKB) == 0);
  400630:	4622      	mov	r2, r4
  400632:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400634:	f013 0f04 	tst.w	r3, #4
  400638:	d0fb      	beq.n	400632 <pmc_enable_pllbck+0x1e>
}
  40063a:	bc10      	pop	{r4}
  40063c:	4770      	bx	lr
  40063e:	bf00      	nop
  400640:	400e0400 	.word	0x400e0400
  400644:	07ff0000 	.word	0x07ff0000

00400648 <pmc_enable_periph_clk>:
	PMC->PMC_PCR = ul_id & 0x7F;
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
	PMC->PMC_PCR = pcr;
	return 0;
#else
	if (ul_id > MAX_PERIPH_ID) {
  400648:	2822      	cmp	r0, #34	; 0x22
  40064a:	d81e      	bhi.n	40068a <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  40064c:	281f      	cmp	r0, #31
  40064e:	d80c      	bhi.n	40066a <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400650:	4b11      	ldr	r3, [pc, #68]	; (400698 <pmc_enable_periph_clk+0x50>)
  400652:	699a      	ldr	r2, [r3, #24]
  400654:	2301      	movs	r3, #1
  400656:	4083      	lsls	r3, r0
  400658:	4393      	bics	r3, r2
  40065a:	d018      	beq.n	40068e <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  40065c:	2301      	movs	r3, #1
  40065e:	fa03 f000 	lsl.w	r0, r3, r0
  400662:	4b0d      	ldr	r3, [pc, #52]	; (400698 <pmc_enable_periph_clk+0x50>)
  400664:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400666:	2000      	movs	r0, #0
  400668:	4770      	bx	lr
		ul_id -= 32;
  40066a:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  40066c:	4b0a      	ldr	r3, [pc, #40]	; (400698 <pmc_enable_periph_clk+0x50>)
  40066e:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  400672:	2301      	movs	r3, #1
  400674:	4083      	lsls	r3, r0
  400676:	4393      	bics	r3, r2
  400678:	d00b      	beq.n	400692 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  40067a:	2301      	movs	r3, #1
  40067c:	fa03 f000 	lsl.w	r0, r3, r0
  400680:	4b05      	ldr	r3, [pc, #20]	; (400698 <pmc_enable_periph_clk+0x50>)
  400682:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  400686:	2000      	movs	r0, #0
  400688:	4770      	bx	lr
		return 1;
  40068a:	2001      	movs	r0, #1
  40068c:	4770      	bx	lr
	return 0;
  40068e:	2000      	movs	r0, #0
  400690:	4770      	bx	lr
  400692:	2000      	movs	r0, #0
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
  400694:	4770      	bx	lr
  400696:	bf00      	nop
  400698:	400e0400 	.word	0x400e0400

0040069c <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  40069c:	b508      	push	{r3, lr}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  40069e:	2015      	movs	r0, #21
  4006a0:	4b01      	ldr	r3, [pc, #4]	; (4006a8 <spi_enable_clock+0xc>)
  4006a2:	4798      	blx	r3
  4006a4:	bd08      	pop	{r3, pc}
  4006a6:	bf00      	nop
  4006a8:	00400649 	.word	0x00400649

004006ac <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  4006ac:	6843      	ldr	r3, [r0, #4]
  4006ae:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  4006b2:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  4006b4:	6843      	ldr	r3, [r0, #4]
  4006b6:	0409      	lsls	r1, r1, #16
  4006b8:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  4006bc:	4319      	orrs	r1, r3
  4006be:	6041      	str	r1, [r0, #4]
  4006c0:	4770      	bx	lr

004006c2 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  4006c2:	b932      	cbnz	r2, 4006d2 <spi_set_clock_polarity+0x10>
  4006c4:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  4006c8:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4006ca:	f023 0301 	bic.w	r3, r3, #1
  4006ce:	6303      	str	r3, [r0, #48]	; 0x30
  4006d0:	4770      	bx	lr
  4006d2:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  4006d6:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4006d8:	f043 0301 	orr.w	r3, r3, #1
  4006dc:	6303      	str	r3, [r0, #48]	; 0x30
  4006de:	4770      	bx	lr

004006e0 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  4006e0:	b932      	cbnz	r2, 4006f0 <spi_set_clock_phase+0x10>
  4006e2:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  4006e6:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4006e8:	f023 0302 	bic.w	r3, r3, #2
  4006ec:	6303      	str	r3, [r0, #48]	; 0x30
  4006ee:	4770      	bx	lr
  4006f0:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  4006f4:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4006f6:	f043 0302 	orr.w	r3, r3, #2
  4006fa:	6303      	str	r3, [r0, #48]	; 0x30
  4006fc:	4770      	bx	lr

004006fe <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  4006fe:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  400702:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400704:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  400708:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  40070a:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40070c:	431a      	orrs	r2, r3
  40070e:	630a      	str	r2, [r1, #48]	; 0x30
  400710:	4770      	bx	lr

00400712 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  400712:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400714:	0189      	lsls	r1, r1, #6
  400716:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  400718:	2402      	movs	r4, #2
  40071a:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  40071c:	f04f 31ff 	mov.w	r1, #4294967295
  400720:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  400722:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  400724:	605a      	str	r2, [r3, #4]
}
  400726:	bc10      	pop	{r4}
  400728:	4770      	bx	lr

0040072a <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  40072a:	0189      	lsls	r1, r1, #6
  40072c:	2305      	movs	r3, #5
  40072e:	5043      	str	r3, [r0, r1]
  400730:	4770      	bx	lr

00400732 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  400732:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  400736:	61ca      	str	r2, [r1, #28]
  400738:	4770      	bx	lr

0040073a <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  40073a:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
  40073e:	624a      	str	r2, [r1, #36]	; 0x24
  400740:	4770      	bx	lr

00400742 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400742:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
  400746:	6a08      	ldr	r0, [r1, #32]
}
  400748:	4770      	bx	lr

0040074a <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  40074a:	b4f0      	push	{r4, r5, r6, r7}
  40074c:	b086      	sub	sp, #24
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  40074e:	2402      	movs	r4, #2
  400750:	9401      	str	r4, [sp, #4]
  400752:	2408      	movs	r4, #8
  400754:	9402      	str	r4, [sp, #8]
  400756:	2420      	movs	r4, #32
  400758:	9403      	str	r4, [sp, #12]
  40075a:	2480      	movs	r4, #128	; 0x80
  40075c:	9404      	str	r4, [sp, #16]
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
  40075e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  400760:	0be4      	lsrs	r4, r4, #15
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  400762:	9405      	str	r4, [sp, #20]
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
		if (ul_freq > ul_high) {
  400764:	ebb0 0f51 	cmp.w	r0, r1, lsr #1
  400768:	d814      	bhi.n	400794 <tc_find_mck_divisor+0x4a>
  40076a:	0c4c      	lsrs	r4, r1, #17
			return 0;
		} else if (ul_freq >= ul_low) {
  40076c:	42a0      	cmp	r0, r4
  40076e:	d217      	bcs.n	4007a0 <tc_find_mck_divisor+0x56>
  400770:	2501      	movs	r5, #1
		ul_high = ul_mck / divisors[ul_index];
  400772:	af01      	add	r7, sp, #4
  400774:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
  400778:	fbb1 f4f4 	udiv	r4, r1, r4
		ul_low  = ul_high / TC_DIV_FACTOR;
  40077c:	0c26      	lsrs	r6, r4, #16
		if (ul_freq > ul_high) {
  40077e:	4284      	cmp	r4, r0
  400780:	d30a      	bcc.n	400798 <tc_find_mck_divisor+0x4e>
		} else if (ul_freq >= ul_low) {
  400782:	4286      	cmp	r6, r0
  400784:	d90d      	bls.n	4007a2 <tc_find_mck_divisor+0x58>
			ul_index++) {
  400786:	3501      	adds	r5, #1
	for (ul_index = 0;
  400788:	2d05      	cmp	r5, #5
  40078a:	d1f3      	bne.n	400774 <tc_find_mck_divisor+0x2a>
			break;
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
		return 0;
  40078c:	2000      	movs	r0, #0
	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
}
  40078e:	b006      	add	sp, #24
  400790:	bcf0      	pop	{r4, r5, r6, r7}
  400792:	4770      	bx	lr
			return 0;
  400794:	2000      	movs	r0, #0
  400796:	e7fa      	b.n	40078e <tc_find_mck_divisor+0x44>
  400798:	2000      	movs	r0, #0
  40079a:	e7f8      	b.n	40078e <tc_find_mck_divisor+0x44>
	return 1;
  40079c:	2001      	movs	r0, #1
  40079e:	e7f6      	b.n	40078e <tc_find_mck_divisor+0x44>
	for (ul_index = 0;
  4007a0:	2500      	movs	r5, #0
	if (p_uldiv) {
  4007a2:	b12a      	cbz	r2, 4007b0 <tc_find_mck_divisor+0x66>
		*p_uldiv = divisors[ul_index];
  4007a4:	a906      	add	r1, sp, #24
  4007a6:	eb01 0185 	add.w	r1, r1, r5, lsl #2
  4007aa:	f851 1c14 	ldr.w	r1, [r1, #-20]
  4007ae:	6011      	str	r1, [r2, #0]
	if (p_ultcclks) {
  4007b0:	2b00      	cmp	r3, #0
  4007b2:	d0f3      	beq.n	40079c <tc_find_mck_divisor+0x52>
		*p_ultcclks = ul_index;
  4007b4:	601d      	str	r5, [r3, #0]
	return 1;
  4007b6:	2001      	movs	r0, #1
  4007b8:	e7e9      	b.n	40078e <tc_find_mck_divisor+0x44>
	...

004007bc <twi_set_speed>:
{
	uint32_t ckdiv = 0;
	uint32_t c_lh_div;
	uint32_t cldiv, chdiv;

	if (ul_speed > I2C_FAST_MODE_SPEED) {
  4007bc:	4b2a      	ldr	r3, [pc, #168]	; (400868 <twi_set_speed+0xac>)
  4007be:	4299      	cmp	r1, r3
  4007c0:	d849      	bhi.n	400856 <twi_set_speed+0x9a>
		return FAIL;
	}

	/* Low level time not less than 1.3us of I2C Fast Mode. */
	if (ul_speed > LOW_LEVEL_TIME_LIMIT) {
  4007c2:	f5a3 537a 	sub.w	r3, r3, #16000	; 0x3e80
  4007c6:	4299      	cmp	r1, r3
  4007c8:	d92b      	bls.n	400822 <twi_set_speed+0x66>
{
  4007ca:	b410      	push	{r4}
		/* Low level of time fixed for 1.3us. */
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  4007cc:	4c27      	ldr	r4, [pc, #156]	; (40086c <twi_set_speed+0xb0>)
  4007ce:	fba4 3402 	umull	r3, r4, r4, r2
  4007d2:	0ba4      	lsrs	r4, r4, #14
  4007d4:	3c04      	subs	r4, #4
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  4007d6:	4b26      	ldr	r3, [pc, #152]	; (400870 <twi_set_speed+0xb4>)
  4007d8:	440b      	add	r3, r1
  4007da:	009b      	lsls	r3, r3, #2
  4007dc:	fbb2 f2f3 	udiv	r2, r2, r3
  4007e0:	3a04      	subs	r2, #4
		
		/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4007e2:	2cff      	cmp	r4, #255	; 0xff
  4007e4:	d939      	bls.n	40085a <twi_set_speed+0x9e>
  4007e6:	2100      	movs	r1, #0
			/* Increase clock divider */
			ckdiv++;
  4007e8:	3101      	adds	r1, #1
			/* Divide cldiv value */
			cldiv /= TWI_CLK_DIVIDER;
  4007ea:	0864      	lsrs	r4, r4, #1
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4007ec:	2cff      	cmp	r4, #255	; 0xff
  4007ee:	d90d      	bls.n	40080c <twi_set_speed+0x50>
  4007f0:	2907      	cmp	r1, #7
  4007f2:	d1f9      	bne.n	4007e8 <twi_set_speed+0x2c>
			chdiv /= TWI_CLK_DIVIDER;
		}

		/* set clock waveform generator register */
		p_twi->TWI_CWGR =
				TWI_CWGR_CLDIV(cldiv) | TWI_CWGR_CHDIV(chdiv) |
  4007f4:	0213      	lsls	r3, r2, #8
  4007f6:	b29b      	uxth	r3, r3
				TWI_CWGR_CKDIV(ckdiv);		
  4007f8:	0409      	lsls	r1, r1, #16
  4007fa:	f401 21e0 	and.w	r1, r1, #458752	; 0x70000
				TWI_CWGR_CLDIV(cldiv) | TWI_CWGR_CHDIV(chdiv) |
  4007fe:	430b      	orrs	r3, r1
  400800:	b2e4      	uxtb	r4, r4
  400802:	4323      	orrs	r3, r4
		p_twi->TWI_CWGR =
  400804:	6103      	str	r3, [r0, #16]
		p_twi->TWI_CWGR =
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
				TWI_CWGR_CKDIV(ckdiv);
	}

	return PASS;
  400806:	2000      	movs	r0, #0
}
  400808:	bc10      	pop	{r4}
  40080a:	4770      	bx	lr
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40080c:	2aff      	cmp	r2, #255	; 0xff
  40080e:	d9f1      	bls.n	4007f4 <twi_set_speed+0x38>
  400810:	2906      	cmp	r1, #6
  400812:	d8ef      	bhi.n	4007f4 <twi_set_speed+0x38>
			ckdiv++;
  400814:	3101      	adds	r1, #1
			chdiv /= TWI_CLK_DIVIDER;
  400816:	0852      	lsrs	r2, r2, #1
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400818:	2aff      	cmp	r2, #255	; 0xff
  40081a:	d9eb      	bls.n	4007f4 <twi_set_speed+0x38>
  40081c:	2906      	cmp	r1, #6
  40081e:	d9f9      	bls.n	400814 <twi_set_speed+0x58>
  400820:	e7e8      	b.n	4007f4 <twi_set_speed+0x38>
		c_lh_div = ul_mck / (ul_speed * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  400822:	0049      	lsls	r1, r1, #1
  400824:	fbb2 f2f1 	udiv	r2, r2, r1
  400828:	3a04      	subs	r2, #4
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40082a:	2aff      	cmp	r2, #255	; 0xff
  40082c:	d911      	bls.n	400852 <twi_set_speed+0x96>
  40082e:	2300      	movs	r3, #0
			ckdiv++;
  400830:	3301      	adds	r3, #1
			c_lh_div /= TWI_CLK_DIVIDER;
  400832:	0852      	lsrs	r2, r2, #1
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400834:	2aff      	cmp	r2, #255	; 0xff
  400836:	d901      	bls.n	40083c <twi_set_speed+0x80>
  400838:	2b07      	cmp	r3, #7
  40083a:	d1f9      	bne.n	400830 <twi_set_speed+0x74>
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
  40083c:	0211      	lsls	r1, r2, #8
  40083e:	b289      	uxth	r1, r1
				TWI_CWGR_CKDIV(ckdiv);
  400840:	041b      	lsls	r3, r3, #16
  400842:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
  400846:	430b      	orrs	r3, r1
  400848:	b2d2      	uxtb	r2, r2
  40084a:	431a      	orrs	r2, r3
		p_twi->TWI_CWGR =
  40084c:	6102      	str	r2, [r0, #16]
	return PASS;
  40084e:	2000      	movs	r0, #0
  400850:	4770      	bx	lr
	uint32_t ckdiv = 0;
  400852:	2300      	movs	r3, #0
  400854:	e7f2      	b.n	40083c <twi_set_speed+0x80>
		return FAIL;
  400856:	2001      	movs	r0, #1
  400858:	4770      	bx	lr
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40085a:	2aff      	cmp	r2, #255	; 0xff
	uint32_t ckdiv = 0;
  40085c:	bf88      	it	hi
  40085e:	2100      	movhi	r1, #0
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400860:	d8d8      	bhi.n	400814 <twi_set_speed+0x58>
	uint32_t ckdiv = 0;
  400862:	2100      	movs	r1, #0
  400864:	e7c6      	b.n	4007f4 <twi_set_speed+0x38>
  400866:	bf00      	nop
  400868:	00061a80 	.word	0x00061a80
  40086c:	057619f1 	.word	0x057619f1
  400870:	3ffd1200 	.word	0x3ffd1200

00400874 <twi_master_init>:
{
  400874:	b538      	push	{r3, r4, r5, lr}
  400876:	4604      	mov	r4, r0
  400878:	460d      	mov	r5, r1
	p_twi->TWI_IDR = ~0UL;
  40087a:	f04f 33ff 	mov.w	r3, #4294967295
  40087e:	6283      	str	r3, [r0, #40]	; 0x28
	p_twi->TWI_SR;
  400880:	6a03      	ldr	r3, [r0, #32]
 * \param p_twi Pointer to a TWI instance.
 */
void twi_reset(Twi *p_twi)
{
	/* Set SWRST bit to reset TWI peripheral */
	p_twi->TWI_CR = TWI_CR_SWRST;
  400882:	2380      	movs	r3, #128	; 0x80
  400884:	6003      	str	r3, [r0, #0]
	p_twi->TWI_RHR;
  400886:	6b03      	ldr	r3, [r0, #48]	; 0x30
	p_twi->TWI_CR = TWI_CR_MSDIS;
  400888:	2308      	movs	r3, #8
  40088a:	6003      	str	r3, [r0, #0]
	p_twi->TWI_CR = TWI_CR_SVDIS;
  40088c:	2320      	movs	r3, #32
  40088e:	6003      	str	r3, [r0, #0]
	p_twi->TWI_CR = TWI_CR_MSEN;
  400890:	2304      	movs	r3, #4
  400892:	6003      	str	r3, [r0, #0]
	if (twi_set_speed(p_twi, p_opt->speed, p_opt->master_clk) == FAIL) {
  400894:	680a      	ldr	r2, [r1, #0]
  400896:	6849      	ldr	r1, [r1, #4]
  400898:	4b05      	ldr	r3, [pc, #20]	; (4008b0 <twi_master_init+0x3c>)
  40089a:	4798      	blx	r3
  40089c:	2801      	cmp	r0, #1
  40089e:	bf14      	ite	ne
  4008a0:	2000      	movne	r0, #0
  4008a2:	2001      	moveq	r0, #1
	if (p_opt->smbus == 1) {
  4008a4:	7a6b      	ldrb	r3, [r5, #9]
  4008a6:	2b01      	cmp	r3, #1
		p_twi->TWI_CR = TWI_CR_QUICK;
  4008a8:	bf04      	itt	eq
  4008aa:	2340      	moveq	r3, #64	; 0x40
  4008ac:	6023      	streq	r3, [r4, #0]
}
  4008ae:	bd38      	pop	{r3, r4, r5, pc}
  4008b0:	004007bd 	.word	0x004007bd

004008b4 <twi_mk_addr>:
	if (len == 0)
  4008b4:	460a      	mov	r2, r1
  4008b6:	b159      	cbz	r1, 4008d0 <twi_mk_addr+0x1c>
	val = addr[0];
  4008b8:	7803      	ldrb	r3, [r0, #0]
	if (len > 1) {
  4008ba:	2901      	cmp	r1, #1
		val |= addr[1];
  4008bc:	bfc4      	itt	gt
  4008be:	7841      	ldrbgt	r1, [r0, #1]
  4008c0:	ea41 2303 	orrgt.w	r3, r1, r3, lsl #8
	if (len > 2) {
  4008c4:	2a02      	cmp	r2, #2
  4008c6:	dd04      	ble.n	4008d2 <twi_mk_addr+0x1e>
		val |= addr[2];
  4008c8:	7882      	ldrb	r2, [r0, #2]
  4008ca:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
  4008ce:	e000      	b.n	4008d2 <twi_mk_addr+0x1e>
		return 0;
  4008d0:	2300      	movs	r3, #0
}
  4008d2:	4618      	mov	r0, r3
  4008d4:	4770      	bx	lr
	...

004008d8 <twi_master_read>:
{
  4008d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	uint32_t cnt = p_packet->length;
  4008da:	68cc      	ldr	r4, [r1, #12]
	if (cnt == 0) {
  4008dc:	2c00      	cmp	r4, #0
  4008de:	d04f      	beq.n	400980 <twi_master_read+0xa8>
  4008e0:	460b      	mov	r3, r1
  4008e2:	4605      	mov	r5, r0
	uint8_t *buffer = p_packet->buffer;
  4008e4:	688e      	ldr	r6, [r1, #8]
	p_twi->TWI_MMR = 0;
  4008e6:	2000      	movs	r0, #0
  4008e8:	6068      	str	r0, [r5, #4]
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
  4008ea:	684a      	ldr	r2, [r1, #4]
  4008ec:	0212      	lsls	r2, r2, #8
  4008ee:	f402 7240 	and.w	r2, r2, #768	; 0x300
	p_twi->TWI_MMR = TWI_MMR_MREAD | TWI_MMR_DADR(p_packet->chip) |
  4008f2:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
  4008f6:	7c09      	ldrb	r1, [r1, #16]
  4008f8:	0409      	lsls	r1, r1, #16
  4008fa:	f401 01fe 	and.w	r1, r1, #8323072	; 0x7f0000
  4008fe:	430a      	orrs	r2, r1
  400900:	606a      	str	r2, [r5, #4]
	p_twi->TWI_IADR = 0;
  400902:	60e8      	str	r0, [r5, #12]
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  400904:	6859      	ldr	r1, [r3, #4]
  400906:	4618      	mov	r0, r3
  400908:	4b22      	ldr	r3, [pc, #136]	; (400994 <twi_master_read+0xbc>)
  40090a:	4798      	blx	r3
  40090c:	60e8      	str	r0, [r5, #12]
	if (cnt == 1) {
  40090e:	2c01      	cmp	r4, #1
  400910:	d00f      	beq.n	400932 <twi_master_read+0x5a>
		p_twi->TWI_CR = TWI_CR_START;
  400912:	2301      	movs	r3, #1
  400914:	602b      	str	r3, [r5, #0]
		stop_sent = 0;
  400916:	2000      	movs	r0, #0
		status = p_twi->TWI_SR;
  400918:	6a2b      	ldr	r3, [r5, #32]
		if (status & TWI_SR_NACK) {
  40091a:	f413 7f80 	tst.w	r3, #256	; 0x100
  40091e:	d136      	bne.n	40098e <twi_master_read+0xb6>
  400920:	f247 512f 	movw	r1, #29999	; 0x752f
		timeout = TWI_TIMEOUT;
  400924:	f247 5730 	movw	r7, #30000	; 0x7530
		if (!(status & TWI_SR_RXRDY)) {
  400928:	f04f 0e01 	mov.w	lr, #1
			p_twi->TWI_CR = TWI_CR_STOP;
  40092c:	f04f 0c02 	mov.w	ip, #2
  400930:	e019      	b.n	400966 <twi_master_read+0x8e>
		p_twi->TWI_CR = TWI_CR_START | TWI_CR_STOP;
  400932:	2303      	movs	r3, #3
  400934:	602b      	str	r3, [r5, #0]
		stop_sent = 1;
  400936:	2001      	movs	r0, #1
  400938:	e7ee      	b.n	400918 <twi_master_read+0x40>
		if (!(status & TWI_SR_RXRDY)) {
  40093a:	460a      	mov	r2, r1
  40093c:	4670      	mov	r0, lr
  40093e:	e00c      	b.n	40095a <twi_master_read+0x82>
		if (cnt == 1  && !stop_sent) {
  400940:	b908      	cbnz	r0, 400946 <twi_master_read+0x6e>
			p_twi->TWI_CR = TWI_CR_STOP;
  400942:	f8c5 c000 	str.w	ip, [r5]
		if (!(status & TWI_SR_RXRDY)) {
  400946:	f013 0f02 	tst.w	r3, #2
  40094a:	d0f6      	beq.n	40093a <twi_master_read+0x62>
  40094c:	4670      	mov	r0, lr
		*buffer++ = p_twi->TWI_RHR;
  40094e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  400950:	7033      	strb	r3, [r6, #0]
		cnt--;
  400952:	3c01      	subs	r4, #1
		*buffer++ = p_twi->TWI_RHR;
  400954:	3601      	adds	r6, #1
		timeout = TWI_TIMEOUT;
  400956:	463a      	mov	r2, r7
	while (cnt > 0) {
  400958:	b164      	cbz	r4, 400974 <twi_master_read+0x9c>
		status = p_twi->TWI_SR;
  40095a:	6a2b      	ldr	r3, [r5, #32]
		if (status & TWI_SR_NACK) {
  40095c:	f413 7f80 	tst.w	r3, #256	; 0x100
  400960:	d111      	bne.n	400986 <twi_master_read+0xae>
		if (!timeout--) {
  400962:	1e51      	subs	r1, r2, #1
  400964:	b18a      	cbz	r2, 40098a <twi_master_read+0xb2>
		if (cnt == 1  && !stop_sent) {
  400966:	2c01      	cmp	r4, #1
  400968:	d0ea      	beq.n	400940 <twi_master_read+0x68>
		if (!(status & TWI_SR_RXRDY)) {
  40096a:	f013 0f02 	tst.w	r3, #2
  40096e:	d1ee      	bne.n	40094e <twi_master_read+0x76>
  400970:	460a      	mov	r2, r1
  400972:	e7f1      	b.n	400958 <twi_master_read+0x80>
	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
  400974:	6a2b      	ldr	r3, [r5, #32]
  400976:	f013 0f01 	tst.w	r3, #1
  40097a:	d0fb      	beq.n	400974 <twi_master_read+0x9c>
	p_twi->TWI_SR;
  40097c:	6a2b      	ldr	r3, [r5, #32]
	return TWI_SUCCESS;
  40097e:	e000      	b.n	400982 <twi_master_read+0xaa>
		return TWI_INVALID_ARGUMENT;
  400980:	2401      	movs	r4, #1
}
  400982:	4620      	mov	r0, r4
  400984:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			return TWI_RECEIVE_NACK;
  400986:	2405      	movs	r4, #5
  400988:	e7fb      	b.n	400982 <twi_master_read+0xaa>
			return TWI_ERROR_TIMEOUT;
  40098a:	2409      	movs	r4, #9
  40098c:	e7f9      	b.n	400982 <twi_master_read+0xaa>
			return TWI_RECEIVE_NACK;
  40098e:	2405      	movs	r4, #5
  400990:	e7f7      	b.n	400982 <twi_master_read+0xaa>
  400992:	bf00      	nop
  400994:	004008b5 	.word	0x004008b5

00400998 <twi_master_write>:
{
  400998:	b570      	push	{r4, r5, r6, lr}
	uint32_t cnt = p_packet->length;
  40099a:	68cd      	ldr	r5, [r1, #12]
	if (cnt == 0) {
  40099c:	2d00      	cmp	r5, #0
  40099e:	d035      	beq.n	400a0c <twi_master_write+0x74>
  4009a0:	460b      	mov	r3, r1
  4009a2:	4604      	mov	r4, r0
	uint8_t *buffer = p_packet->buffer;
  4009a4:	688e      	ldr	r6, [r1, #8]
	p_twi->TWI_MMR = 0;
  4009a6:	2000      	movs	r0, #0
  4009a8:	6060      	str	r0, [r4, #4]
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  4009aa:	7c0a      	ldrb	r2, [r1, #16]
  4009ac:	0412      	lsls	r2, r2, #16
  4009ae:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
  4009b2:	6849      	ldr	r1, [r1, #4]
  4009b4:	0209      	lsls	r1, r1, #8
  4009b6:	f401 7140 	and.w	r1, r1, #768	; 0x300
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  4009ba:	430a      	orrs	r2, r1
  4009bc:	6062      	str	r2, [r4, #4]
	p_twi->TWI_IADR = 0;
  4009be:	60e0      	str	r0, [r4, #12]
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  4009c0:	6859      	ldr	r1, [r3, #4]
  4009c2:	4618      	mov	r0, r3
  4009c4:	4b15      	ldr	r3, [pc, #84]	; (400a1c <twi_master_write+0x84>)
  4009c6:	4798      	blx	r3
  4009c8:	60e0      	str	r0, [r4, #12]
		status = p_twi->TWI_SR;
  4009ca:	6a23      	ldr	r3, [r4, #32]
		if (status & TWI_SR_NACK) {
  4009cc:	f413 7f80 	tst.w	r3, #256	; 0x100
  4009d0:	d006      	beq.n	4009e0 <twi_master_write+0x48>
			return TWI_RECEIVE_NACK;
  4009d2:	2505      	movs	r5, #5
  4009d4:	e01b      	b.n	400a0e <twi_master_write+0x76>
	while (cnt > 0) {
  4009d6:	b15d      	cbz	r5, 4009f0 <twi_master_write+0x58>
		status = p_twi->TWI_SR;
  4009d8:	6a23      	ldr	r3, [r4, #32]
		if (status & TWI_SR_NACK) {
  4009da:	f413 7f80 	tst.w	r3, #256	; 0x100
  4009de:	d118      	bne.n	400a12 <twi_master_write+0x7a>
		if (!(status & TWI_SR_TXRDY)) {
  4009e0:	f013 0f04 	tst.w	r3, #4
  4009e4:	d0f7      	beq.n	4009d6 <twi_master_write+0x3e>
		p_twi->TWI_THR = *buffer++;
  4009e6:	7833      	ldrb	r3, [r6, #0]
  4009e8:	6363      	str	r3, [r4, #52]	; 0x34
		cnt--;
  4009ea:	3d01      	subs	r5, #1
		p_twi->TWI_THR = *buffer++;
  4009ec:	3601      	adds	r6, #1
  4009ee:	e7f2      	b.n	4009d6 <twi_master_write+0x3e>
		status = p_twi->TWI_SR;
  4009f0:	6a23      	ldr	r3, [r4, #32]
		if (status & TWI_SR_NACK) {
  4009f2:	f413 7f80 	tst.w	r3, #256	; 0x100
  4009f6:	d10e      	bne.n	400a16 <twi_master_write+0x7e>
		if (status & TWI_SR_TXRDY) {
  4009f8:	f013 0f04 	tst.w	r3, #4
  4009fc:	d0f8      	beq.n	4009f0 <twi_master_write+0x58>
	p_twi->TWI_CR = TWI_CR_STOP;
  4009fe:	2302      	movs	r3, #2
  400a00:	6023      	str	r3, [r4, #0]
	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
  400a02:	6a23      	ldr	r3, [r4, #32]
  400a04:	f013 0f01 	tst.w	r3, #1
  400a08:	d0fb      	beq.n	400a02 <twi_master_write+0x6a>
  400a0a:	e000      	b.n	400a0e <twi_master_write+0x76>
		return TWI_INVALID_ARGUMENT;
  400a0c:	2501      	movs	r5, #1
}
  400a0e:	4628      	mov	r0, r5
  400a10:	bd70      	pop	{r4, r5, r6, pc}
			return TWI_RECEIVE_NACK;
  400a12:	2505      	movs	r5, #5
  400a14:	e7fb      	b.n	400a0e <twi_master_write+0x76>
			return TWI_RECEIVE_NACK;
  400a16:	2505      	movs	r5, #5
  400a18:	e7f9      	b.n	400a0e <twi_master_write+0x76>
  400a1a:	bf00      	nop
  400a1c:	004008b5 	.word	0x004008b5

00400a20 <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
  400a20:	b410      	push	{r4}
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  400a22:	010b      	lsls	r3, r1, #4
  400a24:	4293      	cmp	r3, r2
  400a26:	d914      	bls.n	400a52 <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  400a28:	00c9      	lsls	r1, r1, #3
  400a2a:	084b      	lsrs	r3, r1, #1
  400a2c:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  400a30:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
  400a34:	08d3      	lsrs	r3, r2, #3
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  400a36:	1e5c      	subs	r4, r3, #1
  400a38:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  400a3c:	428c      	cmp	r4, r1
  400a3e:	d901      	bls.n	400a44 <usart_set_async_baudrate+0x24>
		return 1;
  400a40:	2001      	movs	r0, #1
  400a42:	e017      	b.n	400a74 <usart_set_async_baudrate+0x54>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
  400a44:	6841      	ldr	r1, [r0, #4]
  400a46:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
  400a4a:	6041      	str	r1, [r0, #4]
  400a4c:	e00c      	b.n	400a68 <usart_set_async_baudrate+0x48>
		return 1;
  400a4e:	2001      	movs	r0, #1
  400a50:	e010      	b.n	400a74 <usart_set_async_baudrate+0x54>
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  400a52:	0859      	lsrs	r1, r3, #1
  400a54:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
  400a58:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
  400a5c:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  400a5e:	1e5c      	subs	r4, r3, #1
  400a60:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  400a64:	428c      	cmp	r4, r1
  400a66:	d8f2      	bhi.n	400a4e <usart_set_async_baudrate+0x2e>
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  400a68:	0412      	lsls	r2, r2, #16
  400a6a:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  400a6e:	431a      	orrs	r2, r3
  400a70:	6202      	str	r2, [r0, #32]

	return 0;
  400a72:	2000      	movs	r0, #0
}
  400a74:	bc10      	pop	{r4}
  400a76:	4770      	bx	lr

00400a78 <usart_reset>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  400a78:	4b0a      	ldr	r3, [pc, #40]	; (400aa4 <usart_reset+0x2c>)
  400a7a:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
  400a7e:	2300      	movs	r3, #0
  400a80:	6043      	str	r3, [r0, #4]
	p_usart->US_RTOR = 0;
  400a82:	6243      	str	r3, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
  400a84:	6283      	str	r3, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  400a86:	2388      	movs	r3, #136	; 0x88
  400a88:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  400a8a:	2324      	movs	r3, #36	; 0x24
  400a8c:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
  400a8e:	f44f 7380 	mov.w	r3, #256	; 0x100
  400a92:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RTSDIS;
  400a94:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  400a98:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_DTRDIS;
  400a9a:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  400a9e:	6003      	str	r3, [r0, #0]
  400aa0:	4770      	bx	lr
  400aa2:	bf00      	nop
  400aa4:	55534100 	.word	0x55534100

00400aa8 <usart_init_rs232>:
{
  400aa8:	b570      	push	{r4, r5, r6, lr}
  400aaa:	4605      	mov	r5, r0
  400aac:	460c      	mov	r4, r1
  400aae:	4616      	mov	r6, r2
	usart_reset(p_usart);
  400ab0:	4b0f      	ldr	r3, [pc, #60]	; (400af0 <usart_init_rs232+0x48>)
  400ab2:	4798      	blx	r3
	ul_reg_val = 0;
  400ab4:	2200      	movs	r2, #0
  400ab6:	4b0f      	ldr	r3, [pc, #60]	; (400af4 <usart_init_rs232+0x4c>)
  400ab8:	601a      	str	r2, [r3, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  400aba:	b1a4      	cbz	r4, 400ae6 <usart_init_rs232+0x3e>
  400abc:	4632      	mov	r2, r6
  400abe:	6821      	ldr	r1, [r4, #0]
  400ac0:	4628      	mov	r0, r5
  400ac2:	4b0d      	ldr	r3, [pc, #52]	; (400af8 <usart_init_rs232+0x50>)
  400ac4:	4798      	blx	r3
  400ac6:	4602      	mov	r2, r0
  400ac8:	b978      	cbnz	r0, 400aea <usart_init_rs232+0x42>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400aca:	6863      	ldr	r3, [r4, #4]
  400acc:	68a1      	ldr	r1, [r4, #8]
  400ace:	430b      	orrs	r3, r1
  400ad0:	6921      	ldr	r1, [r4, #16]
  400ad2:	430b      	orrs	r3, r1
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  400ad4:	68e1      	ldr	r1, [r4, #12]
  400ad6:	430b      	orrs	r3, r1
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400ad8:	4906      	ldr	r1, [pc, #24]	; (400af4 <usart_init_rs232+0x4c>)
  400ada:	600b      	str	r3, [r1, #0]
	p_usart->US_MR |= ul_reg_val;
  400adc:	6869      	ldr	r1, [r5, #4]
  400ade:	430b      	orrs	r3, r1
  400ae0:	606b      	str	r3, [r5, #4]
}
  400ae2:	4610      	mov	r0, r2
  400ae4:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
  400ae6:	2201      	movs	r2, #1
  400ae8:	e7fb      	b.n	400ae2 <usart_init_rs232+0x3a>
  400aea:	2201      	movs	r2, #1
  400aec:	e7f9      	b.n	400ae2 <usart_init_rs232+0x3a>
  400aee:	bf00      	nop
  400af0:	00400a79 	.word	0x00400a79
  400af4:	20000a54 	.word	0x20000a54
  400af8:	00400a21 	.word	0x00400a21

00400afc <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
  400afc:	2340      	movs	r3, #64	; 0x40
  400afe:	6003      	str	r3, [r0, #0]
  400b00:	4770      	bx	lr

00400b02 <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
  400b02:	2310      	movs	r3, #16
  400b04:	6003      	str	r3, [r0, #0]
  400b06:	4770      	bx	lr

00400b08 <usart_enable_interrupt>:
	p_usart->US_IER = ul_sources;
  400b08:	6081      	str	r1, [r0, #8]
  400b0a:	4770      	bx	lr

00400b0c <usart_disable_interrupt>:
	p_usart->US_IDR = ul_sources;
  400b0c:	60c1      	str	r1, [r0, #12]
  400b0e:	4770      	bx	lr

00400b10 <usart_get_status>:
	return p_usart->US_CSR;
  400b10:	6940      	ldr	r0, [r0, #20]
}
  400b12:	4770      	bx	lr

00400b14 <usart_putchar>:
	while (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  400b14:	6943      	ldr	r3, [r0, #20]
  400b16:	f013 0f02 	tst.w	r3, #2
  400b1a:	d0fb      	beq.n	400b14 <usart_putchar>
	p_usart->US_THR = US_THR_TXCHR(c);
  400b1c:	f3c1 0108 	ubfx	r1, r1, #0, #9
  400b20:	61c1      	str	r1, [r0, #28]
}
  400b22:	2000      	movs	r0, #0
  400b24:	4770      	bx	lr
	...

00400b28 <usart_write_line>:
{
  400b28:	b570      	push	{r4, r5, r6, lr}
  400b2a:	460c      	mov	r4, r1
	while (*string != '\0') {
  400b2c:	7809      	ldrb	r1, [r1, #0]
  400b2e:	b139      	cbz	r1, 400b40 <usart_write_line+0x18>
  400b30:	4605      	mov	r5, r0
		usart_putchar(p_usart, *string++);
  400b32:	4e04      	ldr	r6, [pc, #16]	; (400b44 <usart_write_line+0x1c>)
  400b34:	4628      	mov	r0, r5
  400b36:	47b0      	blx	r6
	while (*string != '\0') {
  400b38:	f814 1f01 	ldrb.w	r1, [r4, #1]!
  400b3c:	2900      	cmp	r1, #0
  400b3e:	d1f9      	bne.n	400b34 <usart_write_line+0xc>
  400b40:	bd70      	pop	{r4, r5, r6, pc}
  400b42:	bf00      	nop
  400b44:	00400b15 	.word	0x00400b15

00400b48 <usart_read>:
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  400b48:	6943      	ldr	r3, [r0, #20]
  400b4a:	f013 0f01 	tst.w	r3, #1
  400b4e:	d005      	beq.n	400b5c <usart_read+0x14>
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  400b50:	6983      	ldr	r3, [r0, #24]
  400b52:	f3c3 0308 	ubfx	r3, r3, #0, #9
  400b56:	600b      	str	r3, [r1, #0]
	return 0;
  400b58:	2000      	movs	r0, #0
  400b5a:	4770      	bx	lr
		return 1;
  400b5c:	2001      	movs	r0, #1
}
  400b5e:	4770      	bx	lr

00400b60 <wdt_disable>:
/**
 * \brief Disable the watchdog timer.
 */
void wdt_disable(Wdt *p_wdt)
{
	p_wdt->WDT_MR = WDT_MR_WDDIS;
  400b60:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  400b64:	6043      	str	r3, [r0, #4]
  400b66:	4770      	bx	lr

00400b68 <vsync_handler>:
volatile uint32_t eoi_pos = 0; 

void vsync_handler(uint32_t ul_id, uint32_t ul_mask) {
	unused(ul_id);
	unused(ul_mask);
	g_vsync_flag = 1;
  400b68:	2201      	movs	r2, #1
  400b6a:	4b01      	ldr	r3, [pc, #4]	; (400b70 <vsync_handler+0x8>)
  400b6c:	601a      	str	r2, [r3, #0]
  400b6e:	4770      	bx	lr
  400b70:	20000a60 	.word	0x20000a60

00400b74 <init_vsync_interrupts>:
}


void init_vsync_interrupts(void) {
  400b74:	b510      	push	{r4, lr}
  400b76:	b082      	sub	sp, #8
	pio_handler_set(PIOA, ID_PIOA, CAMERA_VSYNC_PIN, PIO_IT_RISE_EDGE, vsync_handler);
  400b78:	4b07      	ldr	r3, [pc, #28]	; (400b98 <init_vsync_interrupts+0x24>)
  400b7a:	9300      	str	r3, [sp, #0]
  400b7c:	2370      	movs	r3, #112	; 0x70
  400b7e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400b82:	210b      	movs	r1, #11
  400b84:	4805      	ldr	r0, [pc, #20]	; (400b9c <init_vsync_interrupts+0x28>)
  400b86:	4c06      	ldr	r4, [pc, #24]	; (400ba0 <init_vsync_interrupts+0x2c>)
  400b88:	47a0      	blx	r4
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400b8a:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400b8e:	4b05      	ldr	r3, [pc, #20]	; (400ba4 <init_vsync_interrupts+0x30>)
  400b90:	601a      	str	r2, [r3, #0]
	NVIC_EnableIRQ(PIOA_IRQn);
}
  400b92:	b002      	add	sp, #8
  400b94:	bd10      	pop	{r4, pc}
  400b96:	bf00      	nop
  400b98:	00400b69 	.word	0x00400b69
  400b9c:	400e0e00 	.word	0x400e0e00
  400ba0:	00400495 	.word	0x00400495
  400ba4:	e000e100 	.word	0xe000e100

00400ba8 <configure_twi>:


void configure_twi(void) {
  400ba8:	b530      	push	{r4, r5, lr}
  400baa:	b085      	sub	sp, #20
	twi_options_t opt;

	/* Enable TWI peripheral */
	pmc_enable_periph_clk(BOARD_TWI_ID);
  400bac:	2013      	movs	r0, #19
  400bae:	4b11      	ldr	r3, [pc, #68]	; (400bf4 <configure_twi+0x4c>)
  400bb0:	4798      	blx	r3

	/* Init TWI peripheral */
	opt.master_clk = sysclk_get_cpu_hz();
  400bb2:	4b11      	ldr	r3, [pc, #68]	; (400bf8 <configure_twi+0x50>)
  400bb4:	9301      	str	r3, [sp, #4]
	opt.speed      = TWI_CLK;
  400bb6:	4b11      	ldr	r3, [pc, #68]	; (400bfc <configure_twi+0x54>)
  400bb8:	9302      	str	r3, [sp, #8]
	twi_master_init(BOARD_TWI, &opt);
  400bba:	a901      	add	r1, sp, #4
  400bbc:	4810      	ldr	r0, [pc, #64]	; (400c00 <configure_twi+0x58>)
  400bbe:	4b11      	ldr	r3, [pc, #68]	; (400c04 <configure_twi+0x5c>)
  400bc0:	4798      	blx	r3

	/* Configure TWI pins */
	#ifdef BOARD_TWI0
		gpio_configure_pin(TWI_DATA_GPIO, TWI_DATA_FLAG);
  400bc2:	4d11      	ldr	r5, [pc, #68]	; (400c08 <configure_twi+0x60>)
  400bc4:	4629      	mov	r1, r5
  400bc6:	2003      	movs	r0, #3
  400bc8:	4c10      	ldr	r4, [pc, #64]	; (400c0c <configure_twi+0x64>)
  400bca:	47a0      	blx	r4
		gpio_configure_pin(TWI_CLK_GPIO, TWI_CLK_FLAGS);
  400bcc:	4629      	mov	r1, r5
  400bce:	2004      	movs	r0, #4
  400bd0:	47a0      	blx	r4
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400bd2:	4b0f      	ldr	r3, [pc, #60]	; (400c10 <configure_twi+0x68>)
  400bd4:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  400bd8:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
  400bdc:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  400be0:	f3bf 8f6f 	isb	sy
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400be4:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  400be8:	2100      	movs	r1, #0
  400bea:	f883 1313 	strb.w	r1, [r3, #787]	; 0x313
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400bee:	601a      	str	r2, [r3, #0]
	/* Configure TWI interrupts */
	NVIC_DisableIRQ(BOARD_TWI_IRQn);
	NVIC_ClearPendingIRQ(BOARD_TWI_IRQn);
	NVIC_SetPriority(BOARD_TWI_IRQn, 0);
	NVIC_EnableIRQ(BOARD_TWI_IRQn);
}
  400bf0:	b005      	add	sp, #20
  400bf2:	bd30      	pop	{r4, r5, pc}
  400bf4:	00400649 	.word	0x00400649
  400bf8:	07270e00 	.word	0x07270e00
  400bfc:	00061a80 	.word	0x00061a80
  400c00:	40018000 	.word	0x40018000
  400c04:	00400875 	.word	0x00400875
  400c08:	08000001 	.word	0x08000001
  400c0c:	004002dd 	.word	0x004002dd
  400c10:	e000e100 	.word	0xe000e100

00400c14 <pio_capture_init>:

void pio_capture_init(Pio *p_pio, uint32_t ul_id) {
  400c14:	b510      	push	{r4, lr}
  400c16:	4604      	mov	r4, r0
	/* Enable periphral clock */
	pmc_enable_periph_clk(ul_id);
  400c18:	4608      	mov	r0, r1
  400c1a:	4b19      	ldr	r3, [pc, #100]	; (400c80 <pio_capture_init+0x6c>)
  400c1c:	4798      	blx	r3

	/* Disable pio capture */
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_PCEN);
  400c1e:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400c22:	f023 0301 	bic.w	r3, r3, #1
  400c26:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150

	/* Disable rxbuff interrupt */
	p_pio->PIO_PCIDR |= PIO_PCIDR_RXBUFF;
  400c2a:	f8d4 3158 	ldr.w	r3, [r4, #344]	; 0x158
  400c2e:	f043 0308 	orr.w	r3, r3, #8
  400c32:	f8c4 3158 	str.w	r3, [r4, #344]	; 0x158

	/* 32bit width*/
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_DSIZE_Msk);
  400c36:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400c3a:	f023 0330 	bic.w	r3, r3, #48	; 0x30
  400c3e:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
	p_pio->PIO_PCMR |= PIO_PCMR_DSIZE_WORD;
  400c42:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400c46:	f043 0320 	orr.w	r3, r3, #32
  400c4a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150

	/* Only HSYNC and VSYNC enabled */
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_ALWYS);
  400c4e:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400c52:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  400c56:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_HALFS);
  400c5a:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400c5e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
  400c62:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150

	#if !defined(DEFAULT_MODE_COLORED)
		/* Samples only data with even index */
		p_pio->PIO_PCMR |= PIO_PCMR_HALFS;
  400c66:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400c6a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
  400c6e:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
		p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_FRSTS);
  400c72:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400c76:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  400c7a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
  400c7e:	bd10      	pop	{r4, pc}
  400c80:	00400649 	.word	0x00400649

00400c84 <pio_capture_to_buffer>:
	#endif
}

uint8_t pio_capture_to_buffer(Pio *p_pio, uint8_t *uc_buf, uint32_t ul_size){
	if ((p_pio->PIO_RCR == 0) && (p_pio->PIO_RNCR == 0)) {
  400c84:	f8d0 316c 	ldr.w	r3, [r0, #364]	; 0x16c
  400c88:	b913      	cbnz	r3, 400c90 <pio_capture_to_buffer+0xc>
  400c8a:	f8d0 317c 	ldr.w	r3, [r0, #380]	; 0x17c
  400c8e:	b143      	cbz	r3, 400ca2 <pio_capture_to_buffer+0x1e>
		p_pio->PIO_RPR = (uint32_t)uc_buf;
		p_pio->PIO_RCR = ul_size;
		p_pio->PIO_PTCR = PIO_PTCR_RXTEN;
		return 1;
	} else if (p_pio->PIO_RNCR == 0) {
  400c90:	f8d0 317c 	ldr.w	r3, [r0, #380]	; 0x17c
  400c94:	b973      	cbnz	r3, 400cb4 <pio_capture_to_buffer+0x30>
		p_pio->PIO_RNPR = (uint32_t)uc_buf;
  400c96:	f8c0 1178 	str.w	r1, [r0, #376]	; 0x178
		p_pio->PIO_RNCR = ul_size;
  400c9a:	f8c0 217c 	str.w	r2, [r0, #380]	; 0x17c
		return 1;
  400c9e:	2001      	movs	r0, #1
  400ca0:	4770      	bx	lr
		p_pio->PIO_RPR = (uint32_t)uc_buf;
  400ca2:	f8c0 1168 	str.w	r1, [r0, #360]	; 0x168
		p_pio->PIO_RCR = ul_size;
  400ca6:	f8c0 216c 	str.w	r2, [r0, #364]	; 0x16c
		p_pio->PIO_PTCR = PIO_PTCR_RXTEN;
  400caa:	2301      	movs	r3, #1
  400cac:	f8c0 3188 	str.w	r3, [r0, #392]	; 0x188
		return 1;
  400cb0:	4618      	mov	r0, r3
  400cb2:	4770      	bx	lr
	} else {
		return 0;
  400cb4:	2000      	movs	r0, #0
	}
}
  400cb6:	4770      	bx	lr

00400cb8 <configure_camera>:
	configure_camera();
	delay_ms(3000);

}

void configure_camera(void){
  400cb8:	b538      	push	{r3, r4, r5, lr}
	ov_configure(BOARD_TWI, JPEG_INIT);
  400cba:	4d07      	ldr	r5, [pc, #28]	; (400cd8 <configure_camera+0x20>)
  400cbc:	2100      	movs	r1, #0
  400cbe:	4628      	mov	r0, r5
  400cc0:	4c06      	ldr	r4, [pc, #24]	; (400cdc <configure_camera+0x24>)
  400cc2:	47a0      	blx	r4
	ov_configure(BOARD_TWI, YUV422);
  400cc4:	2101      	movs	r1, #1
  400cc6:	4628      	mov	r0, r5
  400cc8:	47a0      	blx	r4
	ov_configure(BOARD_TWI, JPEG);
  400cca:	2102      	movs	r1, #2
  400ccc:	4628      	mov	r0, r5
  400cce:	47a0      	blx	r4
	ov_configure(BOARD_TWI, JPEG_320x240);
  400cd0:	2103      	movs	r1, #3
  400cd2:	4628      	mov	r0, r5
  400cd4:	47a0      	blx	r4
  400cd6:	bd38      	pop	{r3, r4, r5, pc}
  400cd8:	40018000 	.word	0x40018000
  400cdc:	0040106d 	.word	0x0040106d

00400ce0 <init_camera>:
void init_camera(void){
  400ce0:	b538      	push	{r3, r4, r5, lr}
	configure_twi();
  400ce2:	4b26      	ldr	r3, [pc, #152]	; (400d7c <init_camera+0x9c>)
  400ce4:	4798      	blx	r3
	init_vsync_interrupts();
  400ce6:	4b26      	ldr	r3, [pc, #152]	; (400d80 <init_camera+0xa0>)
  400ce8:	4798      	blx	r3
	pio_capture_init(PIOA, ID_PIOA);
  400cea:	210b      	movs	r1, #11
  400cec:	4825      	ldr	r0, [pc, #148]	; (400d84 <init_camera+0xa4>)
  400cee:	4b26      	ldr	r3, [pc, #152]	; (400d88 <init_camera+0xa8>)
  400cf0:	4798      	blx	r3
	gpio_configure_pin(PIN_PCK1, PIN_PCK1_FLAGS);
  400cf2:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400cf6:	2011      	movs	r0, #17
  400cf8:	4c24      	ldr	r4, [pc, #144]	; (400d8c <init_camera+0xac>)
  400cfa:	47a0      	blx	r4
	pmc_enable_pllbck(7, 0x1, 1); /* PLLA work at 96 Mhz */ // PA17 is xclck signal
  400cfc:	2201      	movs	r2, #1
  400cfe:	4611      	mov	r1, r2
  400d00:	2007      	movs	r0, #7
  400d02:	4b23      	ldr	r3, [pc, #140]	; (400d90 <init_camera+0xb0>)
  400d04:	4798      	blx	r3
	gpio_configure_pin(CAMERA_RST_GPIO, CAMERA_RST_FLAGS);
  400d06:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400d0a:	2014      	movs	r0, #20
  400d0c:	47a0      	blx	r4
	gpio_configure_pin(CAMERA_HSYNC_GPIO, CAMERA_HSYNC_FLAGS);  // e.g., input or output flag as needed
  400d0e:	2171      	movs	r1, #113	; 0x71
  400d10:	2010      	movs	r0, #16
  400d12:	47a0      	blx	r4
	gpio_configure_pin(CAMERA_VSYNC_GPIO,  CAMERA_VSYNC_FLAGS);   // e.g., output for clock signal  // e.g., input for pixel clock
  400d14:	2171      	movs	r1, #113	; 0x71
  400d16:	200f      	movs	r0, #15
  400d18:	47a0      	blx	r4
	gpio_configure_pin(CAMERA_DATA_BUS_D0, CAMERA_DATA_FLAGS);
  400d1a:	4d1e      	ldr	r5, [pc, #120]	; (400d94 <init_camera+0xb4>)
  400d1c:	4629      	mov	r1, r5
  400d1e:	2018      	movs	r0, #24
  400d20:	47a0      	blx	r4
	gpio_configure_pin(CAMERA_DATA_BUS_D1, CAMERA_DATA_FLAGS);
  400d22:	4629      	mov	r1, r5
  400d24:	2019      	movs	r0, #25
  400d26:	47a0      	blx	r4
	gpio_configure_pin(CAMERA_DATA_BUS_D2, CAMERA_DATA_FLAGS);
  400d28:	4629      	mov	r1, r5
  400d2a:	201a      	movs	r0, #26
  400d2c:	47a0      	blx	r4
	gpio_configure_pin(CAMERA_DATA_BUS_D3, CAMERA_DATA_FLAGS);
  400d2e:	4629      	mov	r1, r5
  400d30:	201b      	movs	r0, #27
  400d32:	47a0      	blx	r4
	gpio_configure_pin(CAMERA_DATA_BUS_D4, CAMERA_DATA_FLAGS);
  400d34:	4629      	mov	r1, r5
  400d36:	201c      	movs	r0, #28
  400d38:	47a0      	blx	r4
	gpio_configure_pin(CAMERA_DATA_BUS_D5, CAMERA_DATA_FLAGS);
  400d3a:	4629      	mov	r1, r5
  400d3c:	201d      	movs	r0, #29
  400d3e:	47a0      	blx	r4
	gpio_configure_pin(CAMERA_DATA_BUS_D6, CAMERA_DATA_FLAGS);
  400d40:	4629      	mov	r1, r5
  400d42:	201e      	movs	r0, #30
  400d44:	47a0      	blx	r4
	gpio_configure_pin(CAMERA_DATA_BUS_D7, CAMERA_DATA_FLAGS);
  400d46:	4629      	mov	r1, r5
  400d48:	201f      	movs	r0, #31
  400d4a:	47a0      	blx	r4
	PMC->PMC_PCK[1] = (PMC_PCK_PRES_CLK_4 | PMC_PCK_CSS_PLLB_CLK);
  400d4c:	4b12      	ldr	r3, [pc, #72]	; (400d98 <init_camera+0xb8>)
  400d4e:	2223      	movs	r2, #35	; 0x23
  400d50:	645a      	str	r2, [r3, #68]	; 0x44
	PMC->PMC_SCER = PMC_SCER_PCK1;
  400d52:	f44f 7200 	mov.w	r2, #512	; 0x200
  400d56:	601a      	str	r2, [r3, #0]
	while (!(PMC->PMC_SCSR & PMC_SCSR_PCK1)) {
  400d58:	461a      	mov	r2, r3
  400d5a:	6893      	ldr	r3, [r2, #8]
  400d5c:	f413 7f00 	tst.w	r3, #512	; 0x200
  400d60:	d0fb      	beq.n	400d5a <init_camera+0x7a>
	while (ov_init(BOARD_TWI) == 1){}
  400d62:	4d0e      	ldr	r5, [pc, #56]	; (400d9c <init_camera+0xbc>)
  400d64:	4c0e      	ldr	r4, [pc, #56]	; (400da0 <init_camera+0xc0>)
  400d66:	4628      	mov	r0, r5
  400d68:	47a0      	blx	r4
  400d6a:	2801      	cmp	r0, #1
  400d6c:	d0fb      	beq.n	400d66 <init_camera+0x86>
	configure_camera();
  400d6e:	4b0d      	ldr	r3, [pc, #52]	; (400da4 <init_camera+0xc4>)
  400d70:	4798      	blx	r3
	delay_ms(3000);
  400d72:	480d      	ldr	r0, [pc, #52]	; (400da8 <init_camera+0xc8>)
  400d74:	4b0d      	ldr	r3, [pc, #52]	; (400dac <init_camera+0xcc>)
  400d76:	4798      	blx	r3
  400d78:	bd38      	pop	{r3, r4, r5, pc}
  400d7a:	bf00      	nop
  400d7c:	00400ba9 	.word	0x00400ba9
  400d80:	00400b75 	.word	0x00400b75
  400d84:	400e0e00 	.word	0x400e0e00
  400d88:	00400c15 	.word	0x00400c15
  400d8c:	004002dd 	.word	0x004002dd
  400d90:	00400615 	.word	0x00400615
  400d94:	28000001 	.word	0x28000001
  400d98:	400e0400 	.word	0x400e0400
  400d9c:	40018000 	.word	0x40018000
  400da0:	00400f31 	.word	0x00400f31
  400da4:	00400cb9 	.word	0x00400cb9
  400da8:	01885e6e 	.word	0x01885e6e
  400dac:	20000001 	.word	0x20000001

00400db0 <find_image_len>:

}


uint8_t find_image_len(void) {
	uint32_t i = 0;
  400db0:	2300      	movs	r3, #0
	
	// Find SOI marker
	while (i < 100000) {
		if ((g_image_buffer[i] == 0xFF) && (g_image_buffer[i+1] == 0xD8)) {
  400db2:	491d      	ldr	r1, [pc, #116]	; (400e28 <find_image_len+0x78>)
	while (i < 100000) {
  400db4:	481d      	ldr	r0, [pc, #116]	; (400e2c <find_image_len+0x7c>)
  400db6:	e004      	b.n	400dc2 <find_image_len+0x12>
		}
		i += 1;
	}

	if (i >= 100000){
		return 0;
  400db8:	2000      	movs	r0, #0
  400dba:	4770      	bx	lr
		i += 1;
  400dbc:	3301      	adds	r3, #1
	while (i < 100000) {
  400dbe:	4283      	cmp	r3, r0
  400dc0:	d010      	beq.n	400de4 <find_image_len+0x34>
		if ((g_image_buffer[i] == 0xFF) && (g_image_buffer[i+1] == 0xD8)) {
  400dc2:	5cca      	ldrb	r2, [r1, r3]
  400dc4:	b2d2      	uxtb	r2, r2
  400dc6:	2aff      	cmp	r2, #255	; 0xff
  400dc8:	d1f8      	bne.n	400dbc <find_image_len+0xc>
  400dca:	1c5a      	adds	r2, r3, #1
  400dcc:	5c8a      	ldrb	r2, [r1, r2]
  400dce:	b2d2      	uxtb	r2, r2
  400dd0:	2ad8      	cmp	r2, #216	; 0xd8
  400dd2:	d1f3      	bne.n	400dbc <find_image_len+0xc>
			soi_pos = i;
  400dd4:	4a16      	ldr	r2, [pc, #88]	; (400e30 <find_image_len+0x80>)
  400dd6:	6013      	str	r3, [r2, #0]
	while (i < 100000) {
  400dd8:	4a16      	ldr	r2, [pc, #88]	; (400e34 <find_image_len+0x84>)
  400dda:	4293      	cmp	r3, r2
  400ddc:	d8ec      	bhi.n	400db8 <find_image_len+0x8>
		if ((g_image_buffer[i-1] == 0xFF) && (g_image_buffer[i] == 0xD9)) {
  400dde:	4912      	ldr	r1, [pc, #72]	; (400e28 <find_image_len+0x78>)
	while (i < 100000) {
  400de0:	4812      	ldr	r0, [pc, #72]	; (400e2c <find_image_len+0x7c>)
  400de2:	e004      	b.n	400dee <find_image_len+0x3e>
		return 0;
  400de4:	2000      	movs	r0, #0
  400de6:	4770      	bx	lr
		i += 1;
  400de8:	3301      	adds	r3, #1
	while (i < 100000) {
  400dea:	4283      	cmp	r3, r0
  400dec:	d017      	beq.n	400e1e <find_image_len+0x6e>
  400dee:	1e5a      	subs	r2, r3, #1
		if ((g_image_buffer[i-1] == 0xFF) && (g_image_buffer[i] == 0xD9)) {
  400df0:	5c8a      	ldrb	r2, [r1, r2]
  400df2:	b2d2      	uxtb	r2, r2
  400df4:	2aff      	cmp	r2, #255	; 0xff
  400df6:	d1f7      	bne.n	400de8 <find_image_len+0x38>
  400df8:	5cca      	ldrb	r2, [r1, r3]
  400dfa:	b2d2      	uxtb	r2, r2
  400dfc:	2ad9      	cmp	r2, #217	; 0xd9
  400dfe:	d1f3      	bne.n	400de8 <find_image_len+0x38>
			eoi_pos = i;
  400e00:	4a0d      	ldr	r2, [pc, #52]	; (400e38 <find_image_len+0x88>)
  400e02:	6013      	str	r3, [r2, #0]
	if (i >= 100000){
  400e04:	4a0b      	ldr	r2, [pc, #44]	; (400e34 <find_image_len+0x84>)
  400e06:	4293      	cmp	r3, r2
  400e08:	d80b      	bhi.n	400e22 <find_image_len+0x72>
	}
	
	g_image_length = eoi_pos - soi_pos + 1;
  400e0a:	4b0b      	ldr	r3, [pc, #44]	; (400e38 <find_image_len+0x88>)
  400e0c:	681b      	ldr	r3, [r3, #0]
  400e0e:	4a08      	ldr	r2, [pc, #32]	; (400e30 <find_image_len+0x80>)
  400e10:	6812      	ldr	r2, [r2, #0]
  400e12:	3301      	adds	r3, #1
  400e14:	1a9b      	subs	r3, r3, r2
  400e16:	4a09      	ldr	r2, [pc, #36]	; (400e3c <find_image_len+0x8c>)
  400e18:	6013      	str	r3, [r2, #0]
	
	return 1;
  400e1a:	2001      	movs	r0, #1
  400e1c:	4770      	bx	lr
		return 0;
  400e1e:	2000      	movs	r0, #0
  400e20:	4770      	bx	lr
  400e22:	2000      	movs	r0, #0
}
  400e24:	4770      	bx	lr
  400e26:	bf00      	nop
  400e28:	20000ac4 	.word	0x20000ac4
  400e2c:	000186a0 	.word	0x000186a0
  400e30:	20000a64 	.word	0x20000a64
  400e34:	0001869f 	.word	0x0001869f
  400e38:	20000a58 	.word	0x20000a58
  400e3c:	20000a5c 	.word	0x20000a5c

00400e40 <start_capture>:
uint8_t start_capture(void) {
  400e40:	b510      	push	{r4, lr}
	pio_enable_interrupt(PIOA, CAMERA_VSYNC_PIN);
  400e42:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  400e46:	4814      	ldr	r0, [pc, #80]	; (400e98 <start_capture+0x58>)
  400e48:	4b14      	ldr	r3, [pc, #80]	; (400e9c <start_capture+0x5c>)
  400e4a:	4798      	blx	r3
	while (!g_vsync_flag) {
  400e4c:	4a14      	ldr	r2, [pc, #80]	; (400ea0 <start_capture+0x60>)
  400e4e:	6813      	ldr	r3, [r2, #0]
  400e50:	2b00      	cmp	r3, #0
  400e52:	d0fc      	beq.n	400e4e <start_capture+0xe>
	pio_disable_interrupt(PIOA, CAMERA_VSYNC_PIN);
  400e54:	4c10      	ldr	r4, [pc, #64]	; (400e98 <start_capture+0x58>)
  400e56:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  400e5a:	4620      	mov	r0, r4
  400e5c:	4b11      	ldr	r3, [pc, #68]	; (400ea4 <start_capture+0x64>)
  400e5e:	4798      	blx	r3
	pio_capture_enable(PIOA);
  400e60:	4620      	mov	r0, r4
  400e62:	4b11      	ldr	r3, [pc, #68]	; (400ea8 <start_capture+0x68>)
  400e64:	4798      	blx	r3
	pio_capture_to_buffer(PIOA, g_image_buffer, (100000) >> 2);
  400e66:	f246 12a8 	movw	r2, #25000	; 0x61a8
  400e6a:	4910      	ldr	r1, [pc, #64]	; (400eac <start_capture+0x6c>)
  400e6c:	4620      	mov	r0, r4
  400e6e:	4b10      	ldr	r3, [pc, #64]	; (400eb0 <start_capture+0x70>)
  400e70:	4798      	blx	r3
	while (!((PIOA->PIO_PCISR & PIO_PCIMR_RXBUFF) == PIO_PCIMR_RXBUFF)) {
  400e72:	4622      	mov	r2, r4
  400e74:	f8d2 3160 	ldr.w	r3, [r2, #352]	; 0x160
  400e78:	f013 0f08 	tst.w	r3, #8
  400e7c:	d0fa      	beq.n	400e74 <start_capture+0x34>
	pio_capture_disable(PIOA);
  400e7e:	4806      	ldr	r0, [pc, #24]	; (400e98 <start_capture+0x58>)
  400e80:	4b0c      	ldr	r3, [pc, #48]	; (400eb4 <start_capture+0x74>)
  400e82:	4798      	blx	r3
	g_vsync_flag = false;
  400e84:	2200      	movs	r2, #0
  400e86:	4b06      	ldr	r3, [pc, #24]	; (400ea0 <start_capture+0x60>)
  400e88:	601a      	str	r2, [r3, #0]
	if (find_image_len() == 1){
  400e8a:	4b0b      	ldr	r3, [pc, #44]	; (400eb8 <start_capture+0x78>)
  400e8c:	4798      	blx	r3
}
  400e8e:	2801      	cmp	r0, #1
  400e90:	bf14      	ite	ne
  400e92:	2000      	movne	r0, #0
  400e94:	2001      	moveq	r0, #1
  400e96:	bd10      	pop	{r4, pc}
  400e98:	400e0e00 	.word	0x400e0e00
  400e9c:	004002cd 	.word	0x004002cd
  400ea0:	20000a60 	.word	0x20000a60
  400ea4:	004002d1 	.word	0x004002d1
  400ea8:	004003fd 	.word	0x004003fd
  400eac:	20000ac4 	.word	0x20000ac4
  400eb0:	00400c85 	.word	0x00400c85
  400eb4:	00400415 	.word	0x00400415
  400eb8:	00400db1 	.word	0x00400db1

00400ebc <ov_read_reg>:
 * \param p_twi TWI interface.
 * \param p_packet TWI packet.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_read_reg(Twi* const p_twi, twi_packet_t* const p_packet)
{
  400ebc:	b508      	push	{r3, lr}
	uint32_t ul_status;

	ul_status = twi_master_read(p_twi, p_packet);
  400ebe:	4b01      	ldr	r3, [pc, #4]	; (400ec4 <ov_read_reg+0x8>)
  400ec0:	4798      	blx	r3

	return ul_status;
}
  400ec2:	bd08      	pop	{r3, pc}
  400ec4:	004008d9 	.word	0x004008d9

00400ec8 <ov_write_reg>:
 * \param p_twi TWI interface.
 * \param p_packet TWI packet.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_write_reg(Twi* const p_twi, twi_packet_t* const p_packet)
{
  400ec8:	b508      	push	{r3, lr}
	uint32_t ul_status;

	ul_status = twi_master_write(p_twi, p_packet);
  400eca:	4b01      	ldr	r3, [pc, #4]	; (400ed0 <ov_write_reg+0x8>)
  400ecc:	4798      	blx	r3

	return ul_status;
}
  400ece:	bd08      	pop	{r3, pc}
  400ed0:	00400999 	.word	0x00400999

00400ed4 <ov_write_regs>:
 * \param p_twi TWI interface.
 * \param p_reg_list Register list to be written.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_write_regs(Twi* const p_twi, const ov_reg *p_reg_list)
{
  400ed4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400ed8:	b086      	sub	sp, #24
  400eda:	4607      	mov	r7, r0
  400edc:	1c4c      	adds	r4, r1, #1
			(p_next->val == OV_VAL_TERM))) {
		if (p_next->reg == 0xFE) {
			delay_ms(5);
		} else {
			twi_packet_regs.addr[0] = p_next->reg;
			twi_packet_regs.addr_length = 1;
  400ede:	2501      	movs	r5, #1
			twi_packet_regs.chip = OV_I2C_SENSOR_ADDRESS;
			twi_packet_regs.length = 1;
			twi_packet_regs.buffer = &(p_next->val);

			ul_err = ov_write_reg(p_twi, &twi_packet_regs);
  400ee0:	4e11      	ldr	r6, [pc, #68]	; (400f28 <ov_write_regs+0x54>)
			delay_ms(5);
  400ee2:	f8df 8048 	ldr.w	r8, [pc, #72]	; 400f2c <ov_write_regs+0x58>
	while (!((p_next->reg == OV_REG_TERM) &&
  400ee6:	e010      	b.n	400f0a <ov_write_regs+0x36>
  400ee8:	7821      	ldrb	r1, [r4, #0]
  400eea:	29ff      	cmp	r1, #255	; 0xff
  400eec:	d018      	beq.n	400f20 <ov_write_regs+0x4c>
			twi_packet_regs.addr[0] = p_next->reg;
  400eee:	f88d 3004 	strb.w	r3, [sp, #4]
			twi_packet_regs.addr_length = 1;
  400ef2:	9502      	str	r5, [sp, #8]
			twi_packet_regs.chip = OV_I2C_SENSOR_ADDRESS;
  400ef4:	2330      	movs	r3, #48	; 0x30
  400ef6:	f88d 3014 	strb.w	r3, [sp, #20]
			twi_packet_regs.length = 1;
  400efa:	9504      	str	r5, [sp, #16]
			twi_packet_regs.buffer = &(p_next->val);
  400efc:	9203      	str	r2, [sp, #12]
			ul_err = ov_write_reg(p_twi, &twi_packet_regs);
  400efe:	a901      	add	r1, sp, #4
  400f00:	4638      	mov	r0, r7
  400f02:	47b0      	blx	r6
			ul_size++;

			if (ul_err == TWI_BUSY) {
  400f04:	2808      	cmp	r0, #8
  400f06:	d00c      	beq.n	400f22 <ov_write_regs+0x4e>
  400f08:	3402      	adds	r4, #2
  400f0a:	4622      	mov	r2, r4
	while (!((p_next->reg == OV_REG_TERM) &&
  400f0c:	f814 3c01 	ldrb.w	r3, [r4, #-1]
  400f10:	2bff      	cmp	r3, #255	; 0xff
  400f12:	d0e9      	beq.n	400ee8 <ov_write_regs+0x14>
		if (p_next->reg == 0xFE) {
  400f14:	2bfe      	cmp	r3, #254	; 0xfe
  400f16:	d1ea      	bne.n	400eee <ov_write_regs+0x1a>
			delay_ms(5);
  400f18:	f24a 706a 	movw	r0, #42858	; 0xa76a
  400f1c:	47c0      	blx	r8
  400f1e:	e7f3      	b.n	400f08 <ov_write_regs+0x34>
			}
		}

		p_next++;
	}
	return 0;
  400f20:	2000      	movs	r0, #0
}
  400f22:	b006      	add	sp, #24
  400f24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400f28:	00400ec9 	.word	0x00400ec9
  400f2c:	20000001 	.word	0x20000001

00400f30 <ov_init>:
 *
 * \param p_twi TWI interface.
 * \return 0 on success, 1 otherwise.
 */
uint32_t ov_init(Twi* const p_twi)
{
  400f30:	b5f0      	push	{r4, r5, r6, r7, lr}
  400f32:	b093      	sub	sp, #76	; 0x4c
  400f34:	4607      	mov	r7, r0
	const uint8_t cont_reg_val = 1;
  400f36:	2401      	movs	r4, #1
  400f38:	f88d 4047 	strb.w	r4, [sp, #71]	; 0x47
	twi_packet_t init_packet = {
  400f3c:	2500      	movs	r5, #0
  400f3e:	950c      	str	r5, [sp, #48]	; 0x30
  400f40:	9510      	str	r5, [sp, #64]	; 0x40
  400f42:	23ff      	movs	r3, #255	; 0xff
  400f44:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
  400f48:	940d      	str	r4, [sp, #52]	; 0x34
  400f4a:	f10d 0347 	add.w	r3, sp, #71	; 0x47
  400f4e:	930e      	str	r3, [sp, #56]	; 0x38
  400f50:	940f      	str	r4, [sp, #60]	; 0x3c
  400f52:	2630      	movs	r6, #48	; 0x30
  400f54:	f88d 6040 	strb.w	r6, [sp, #64]	; 0x40
		.addr_length  = 1, //sizeof (uint16_t),    // TWI slave memory address data size
		.chip         = OV_I2C_SENSOR_ADDRESS,      // TWI slave bus address
		.buffer       = &cont_reg_val,        // transfer data destination buffer
		.length       = 1                    // transfer data size (bytes)
	};
	ov_write_reg(p_twi, &init_packet);
  400f58:	eb0d 0106 	add.w	r1, sp, r6
  400f5c:	4b41      	ldr	r3, [pc, #260]	; (401064 <ov_init+0x134>)
  400f5e:	4798      	blx	r3
	uint32_t ul_id = 0;
  400f60:	9500      	str	r5, [sp, #0]
	uint32_t ul_ver = 0;
  400f62:	9501      	str	r5, [sp, #4]
	packet_pid.chip = OV_I2C_SENSOR_ADDRESS;
  400f64:	f88d 6018 	strb.w	r6, [sp, #24]
	packet_pid.addr[0] = OV2640_PIDH;
  400f68:	230a      	movs	r3, #10
  400f6a:	f88d 3008 	strb.w	r3, [sp, #8]
	packet_pid.addr_length = 1;
  400f6e:	9403      	str	r4, [sp, #12]
	packet_pid.buffer = &ul_id;
  400f70:	f8cd d010 	str.w	sp, [sp, #16]
	packet_pid.length = 1;
  400f74:	9405      	str	r4, [sp, #20]
	ov_read_reg(p_twi, &packet_pid);
  400f76:	a902      	add	r1, sp, #8
  400f78:	4638      	mov	r0, r7
  400f7a:	4d3b      	ldr	r5, [pc, #236]	; (401068 <ov_init+0x138>)
  400f7c:	47a8      	blx	r5
	packet_ver.chip = OV_I2C_SENSOR_ADDRESS;
  400f7e:	f88d 602c 	strb.w	r6, [sp, #44]	; 0x2c
	packet_ver.addr[0] = OV2640_PIDL;
  400f82:	230b      	movs	r3, #11
  400f84:	f88d 301c 	strb.w	r3, [sp, #28]
	packet_ver.addr_length = 1;
  400f88:	9408      	str	r4, [sp, #32]
	packet_ver.buffer = &ul_ver;
  400f8a:	ab01      	add	r3, sp, #4
  400f8c:	9309      	str	r3, [sp, #36]	; 0x24
	packet_ver.length = 1;
  400f8e:	940a      	str	r4, [sp, #40]	; 0x28
	ov_read_reg(p_twi, &packet_ver);
  400f90:	a907      	add	r1, sp, #28
  400f92:	4638      	mov	r0, r7
  400f94:	47a8      	blx	r5
	return ((uint32_t)(ul_id << 8) | ul_ver);
  400f96:	9b01      	ldr	r3, [sp, #4]
  400f98:	9a00      	ldr	r2, [sp, #0]
  400f9a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
	
	uint32_t ul_id = 0;

	ul_id = ov_id( p_twi );

	if (((ul_id >> 8)&0xff)  == OV2640_PIDH_DEFAULT) {
  400f9e:	f3c3 2307 	ubfx	r3, r3, #8, #8
  400fa2:	2b26      	cmp	r3, #38	; 0x26
  400fa4:	d002      	beq.n	400fac <ov_init+0x7c>
				return 0;
			}
		}
	}

	return 1;
  400fa6:	2001      	movs	r0, #1
}
  400fa8:	b013      	add	sp, #76	; 0x4c
  400faa:	bdf0      	pop	{r4, r5, r6, r7, pc}
	uint32_t ul_midh = 0;
  400fac:	2300      	movs	r3, #0
  400fae:	9301      	str	r3, [sp, #4]
	uint32_t ul_midl = 0;
  400fb0:	9302      	str	r3, [sp, #8]
	twi_packet.addr[0] = OV2640_MIDH;
  400fb2:	231c      	movs	r3, #28
  400fb4:	f88d 301c 	strb.w	r3, [sp, #28]
	twi_packet.addr_length = 1;
  400fb8:	9408      	str	r4, [sp, #32]
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  400fba:	f88d 602c 	strb.w	r6, [sp, #44]	; 0x2c
	twi_packet.buffer = &ul_midh;
  400fbe:	ab01      	add	r3, sp, #4
  400fc0:	9309      	str	r3, [sp, #36]	; 0x24
	twi_packet.length = 1;
  400fc2:	940a      	str	r4, [sp, #40]	; 0x28
	ov_read_reg(p_twi, &twi_packet);
  400fc4:	a907      	add	r1, sp, #28
  400fc6:	4638      	mov	r0, r7
  400fc8:	47a8      	blx	r5
	twi_packet.addr[0] = OV2640_MIDL;
  400fca:	231d      	movs	r3, #29
  400fcc:	f88d 301c 	strb.w	r3, [sp, #28]
	twi_packet.addr_length = 1;
  400fd0:	9408      	str	r4, [sp, #32]
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  400fd2:	f88d 602c 	strb.w	r6, [sp, #44]	; 0x2c
	twi_packet.buffer = &ul_midl;
  400fd6:	ab02      	add	r3, sp, #8
  400fd8:	9309      	str	r3, [sp, #36]	; 0x24
	twi_packet.length = 1;
  400fda:	940a      	str	r4, [sp, #40]	; 0x28
	ov_read_reg(p_twi, &twi_packet);
  400fdc:	a907      	add	r1, sp, #28
  400fde:	4638      	mov	r0, r7
  400fe0:	47a8      	blx	r5
	if ((ul_midh == OV2640_MIDH_DEFAULT) && (ul_midl == OV2640_MIDL_DEFAULT)) {
  400fe2:	9b01      	ldr	r3, [sp, #4]
  400fe4:	2b7f      	cmp	r3, #127	; 0x7f
  400fe6:	d001      	beq.n	400fec <ov_init+0xbc>
	return 1;
  400fe8:	2001      	movs	r0, #1
  400fea:	e7dd      	b.n	400fa8 <ov_init+0x78>
	if ((ul_midh == OV2640_MIDH_DEFAULT) && (ul_midl == OV2640_MIDL_DEFAULT)) {
  400fec:	9b02      	ldr	r3, [sp, #8]
  400fee:	2ba2      	cmp	r3, #162	; 0xa2
  400ff0:	d1fa      	bne.n	400fe8 <ov_init+0xb8>
	uint32_t ul_value = 0;
  400ff2:	2300      	movs	r3, #0
  400ff4:	9300      	str	r3, [sp, #0]
	uint32_t ul_oldvalue = 0;
  400ff6:	9301      	str	r3, [sp, #4]
	uint32_t ul_entervalue = 0;
  400ff8:	9302      	str	r3, [sp, #8]
	twi_packet.addr[0] = 0x01;
  400ffa:	2301      	movs	r3, #1
  400ffc:	f88d 301c 	strb.w	r3, [sp, #28]
	twi_packet.addr_length = 1;
  401000:	9308      	str	r3, [sp, #32]
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  401002:	2230      	movs	r2, #48	; 0x30
  401004:	f88d 202c 	strb.w	r2, [sp, #44]	; 0x2c
	twi_packet.length = 1;
  401008:	930a      	str	r3, [sp, #40]	; 0x28
	twi_packet.buffer = &ul_oldvalue;
  40100a:	ab01      	add	r3, sp, #4
  40100c:	9309      	str	r3, [sp, #36]	; 0x24
	ov_read_reg(p_twi, &twi_packet);
  40100e:	a907      	add	r1, sp, #28
  401010:	4638      	mov	r0, r7
  401012:	4c15      	ldr	r4, [pc, #84]	; (401068 <ov_init+0x138>)
  401014:	47a0      	blx	r4
	ul_entervalue = 0xAD;
  401016:	ab12      	add	r3, sp, #72	; 0x48
  401018:	22ad      	movs	r2, #173	; 0xad
  40101a:	f843 2d40 	str.w	r2, [r3, #-64]!
	twi_packet.buffer = &ul_entervalue;
  40101e:	9309      	str	r3, [sp, #36]	; 0x24
	ov_write_reg(p_twi, &twi_packet);
  401020:	a907      	add	r1, sp, #28
  401022:	4638      	mov	r0, r7
  401024:	4b0f      	ldr	r3, [pc, #60]	; (401064 <ov_init+0x134>)
  401026:	4798      	blx	r3
	twi_packet.buffer = &ul_value;
  401028:	f8cd d024 	str.w	sp, [sp, #36]	; 0x24
	ov_read_reg(p_twi, &twi_packet);
  40102c:	a907      	add	r1, sp, #28
  40102e:	4638      	mov	r0, r7
  401030:	47a0      	blx	r4
	if (ul_value != ul_entervalue) {
  401032:	9b02      	ldr	r3, [sp, #8]
  401034:	9a00      	ldr	r2, [sp, #0]
  401036:	429a      	cmp	r2, r3
  401038:	d001      	beq.n	40103e <ov_init+0x10e>
		return 1;
  40103a:	2001      	movs	r0, #1
  40103c:	e7b4      	b.n	400fa8 <ov_init+0x78>
	twi_packet.buffer = &ul_oldvalue;
  40103e:	ab01      	add	r3, sp, #4
  401040:	9309      	str	r3, [sp, #36]	; 0x24
	ov_write_reg(p_twi, &twi_packet);
  401042:	a907      	add	r1, sp, #28
  401044:	4638      	mov	r0, r7
  401046:	4b07      	ldr	r3, [pc, #28]	; (401064 <ov_init+0x134>)
  401048:	4798      	blx	r3
	twi_packet.buffer = &ul_value;
  40104a:	f8cd d024 	str.w	sp, [sp, #36]	; 0x24
	ov_read_reg(p_twi, &twi_packet);
  40104e:	a907      	add	r1, sp, #28
  401050:	4638      	mov	r0, r7
  401052:	4b05      	ldr	r3, [pc, #20]	; (401068 <ov_init+0x138>)
  401054:	4798      	blx	r3
	if (ul_value != ul_oldvalue) {
  401056:	9b01      	ldr	r3, [sp, #4]
  401058:	9800      	ldr	r0, [sp, #0]
  40105a:	1ac0      	subs	r0, r0, r3
  40105c:	bf18      	it	ne
  40105e:	2001      	movne	r0, #1
  401060:	e7a2      	b.n	400fa8 <ov_init+0x78>
  401062:	bf00      	nop
  401064:	00400ec9 	.word	0x00400ec9
  401068:	00400ebd 	.word	0x00400ebd

0040106c <ov_configure>:
 * \param p_twi TWI interface.
 * \param format Specific format to configure.
 * \return 0 on success, 1 otherwise.
 */
uint32_t ov_configure(Twi* const p_twi, const e_OV2640_format format)
{
  40106c:	b508      	push	{r3, lr}
	const ov_reg *p_regs_conf = NULL;

	/* Common register initialization */
	switch (format) {
  40106e:	2911      	cmp	r1, #17
  401070:	d82a      	bhi.n	4010c8 <ov_configure+0x5c>
  401072:	e8df f001 	tbb	[pc, r1]
  401076:	092b      	.short	0x092b
  401078:	0f0d0b2d 	.word	0x0f0d0b2d
  40107c:	17151311 	.word	0x17151311
  401080:	1f1d1b19 	.word	0x1f1d1b19
  401084:	27252321 	.word	0x27252321
	case JPEG_INIT:
		p_regs_conf = OV2640_JPEG_INIT;
		break;
		
	case YUV422:
		p_regs_conf = OV2640_YUV422;
  401088:	4914      	ldr	r1, [pc, #80]	; (4010dc <ov_configure+0x70>)
  40108a:	e022      	b.n	4010d2 <ov_configure+0x66>
	case JPEG:
		p_regs_conf = OV2640_JPEG;
		break;
		
	case JPEG_320x240:
		p_regs_conf = OV2640_JPEG_320x240;
  40108c:	4914      	ldr	r1, [pc, #80]	; (4010e0 <ov_configure+0x74>)
		break;
  40108e:	e020      	b.n	4010d2 <ov_configure+0x66>
		
	case JPEG_640x480:
		p_regs_conf = OV2640_JPEG_640x480;
  401090:	4914      	ldr	r1, [pc, #80]	; (4010e4 <ov_configure+0x78>)
		break;
  401092:	e01e      	b.n	4010d2 <ov_configure+0x66>
		
	case JPEG_800x600:
		p_regs_conf = OV2640_JPEG_800x600;
  401094:	4914      	ldr	r1, [pc, #80]	; (4010e8 <ov_configure+0x7c>)
		break;
  401096:	e01c      	b.n	4010d2 <ov_configure+0x66>
		
	case JPEG_1024x768:
		p_regs_conf = OV2640_JPEG_1024x768;
  401098:	4914      	ldr	r1, [pc, #80]	; (4010ec <ov_configure+0x80>)
		break;
  40109a:	e01a      	b.n	4010d2 <ov_configure+0x66>
		
	case JPEG_1280x1024:
		p_regs_conf = OV2640_JPEG_1280x1024;
  40109c:	4914      	ldr	r1, [pc, #80]	; (4010f0 <ov_configure+0x84>)
		break;
  40109e:	e018      	b.n	4010d2 <ov_configure+0x66>
		
	case JPEG_1600x1200:
		p_regs_conf = OV2640_JPEG_1600x1200;
  4010a0:	4914      	ldr	r1, [pc, #80]	; (4010f4 <ov_configure+0x88>)
		break;
  4010a2:	e016      	b.n	4010d2 <ov_configure+0x66>
		
	case QVGA_YUV422_10FPS:
		p_regs_conf = OV2640_QVGA_YUV422_10FPS;
  4010a4:	4914      	ldr	r1, [pc, #80]	; (4010f8 <ov_configure+0x8c>)
		break;
  4010a6:	e014      	b.n	4010d2 <ov_configure+0x66>

	case QVGA_YUV422_15FPS:
		p_regs_conf = OV2640_QVGA_YUV422_15FPS;
  4010a8:	4914      	ldr	r1, [pc, #80]	; (4010fc <ov_configure+0x90>)
		break;
  4010aa:	e012      	b.n	4010d2 <ov_configure+0x66>

	case QVGA_YUV422_20FPS:
		p_regs_conf = OV2640_QVGA_YUV422_20FPS;
  4010ac:	4914      	ldr	r1, [pc, #80]	; (401100 <ov_configure+0x94>)
		break;
  4010ae:	e010      	b.n	4010d2 <ov_configure+0x66>

	case QVGA_YUV422_30FPS:
		p_regs_conf = OV2640_QVGA_YUV422_30FPS;
  4010b0:	4914      	ldr	r1, [pc, #80]	; (401104 <ov_configure+0x98>)
		break;
  4010b2:	e00e      	b.n	4010d2 <ov_configure+0x66>

	case QVGA_RGB888:
		p_regs_conf = OV2640_QVGA_RGB888;
  4010b4:	4914      	ldr	r1, [pc, #80]	; (401108 <ov_configure+0x9c>)
		break;
  4010b6:	e00c      	b.n	4010d2 <ov_configure+0x66>

	case QQVGA_YUV422:
		p_regs_conf = OV2640_QQVGA_YUV422;
  4010b8:	4914      	ldr	r1, [pc, #80]	; (40110c <ov_configure+0xa0>)
		break;
  4010ba:	e00a      	b.n	4010d2 <ov_configure+0x66>

	case QQVGA_RGB888:
		p_regs_conf = OV2640_QQVGA_RGB888;
  4010bc:	4914      	ldr	r1, [pc, #80]	; (401110 <ov_configure+0xa4>)
		break;
  4010be:	e008      	b.n	4010d2 <ov_configure+0x66>

	case TEST_PATTERN:
		p_regs_conf = OV2640_TEST_PATTERN;
  4010c0:	4914      	ldr	r1, [pc, #80]	; (401114 <ov_configure+0xa8>)
		break;
  4010c2:	e006      	b.n	4010d2 <ov_configure+0x66>

	case VGA_YUV422_20FPS:
		p_regs_conf = OV2640_VGA_YUV422_20FPS;
  4010c4:	4914      	ldr	r1, [pc, #80]	; (401118 <ov_configure+0xac>)
		break;
  4010c6:	e004      	b.n	4010d2 <ov_configure+0x66>
	if (p_regs_conf != NULL) {
		ov_write_regs( p_twi, p_regs_conf );
		return 0;
	}

	return 1;
  4010c8:	2001      	movs	r0, #1
  4010ca:	bd08      	pop	{r3, pc}
		p_regs_conf = OV2640_JPEG_INIT;
  4010cc:	4913      	ldr	r1, [pc, #76]	; (40111c <ov_configure+0xb0>)
  4010ce:	e000      	b.n	4010d2 <ov_configure+0x66>
		p_regs_conf = OV2640_JPEG;
  4010d0:	4913      	ldr	r1, [pc, #76]	; (401120 <ov_configure+0xb4>)
		ov_write_regs( p_twi, p_regs_conf );
  4010d2:	4b14      	ldr	r3, [pc, #80]	; (401124 <ov_configure+0xb8>)
  4010d4:	4798      	blx	r3
		return 0;
  4010d6:	2000      	movs	r0, #0
}
  4010d8:	bd08      	pop	{r3, pc}
  4010da:	bf00      	nop
  4010dc:	00407438 	.word	0x00407438
  4010e0:	00406940 	.word	0x00406940
  4010e4:	00406990 	.word	0x00406990
  4010e8:	004069e4 	.word	0x004069e4
  4010ec:	00406848 	.word	0x00406848
  4010f0:	00406898 	.word	0x00406898
  4010f4:	004068ec 	.word	0x004068ec
  4010f8:	00406e94 	.word	0x00406e94
  4010fc:	00406f84 	.word	0x00406f84
  401100:	00407074 	.word	0x00407074
  401104:	00407164 	.word	0x00407164
  401108:	00406da0 	.word	0x00406da0
  40110c:	00406cac 	.word	0x00406cac
  401110:	00406bb8 	.word	0x00406bb8
  401114:	00407254 	.word	0x00407254
  401118:	00407348 	.word	0x00407348
  40111c:	00406a38 	.word	0x00406a38
  401120:	00406834 	.word	0x00406834
  401124:	00400ed5 	.word	0x00400ed5

00401128 <TC0_Handler>:
 */ 

#include "timer_interface.h"

void TC0_Handler(void)
{
  401128:	b508      	push	{r3, lr}
	uint32_t ul_status;

	// Read TC0 status.
	ul_status = tc_get_status(TC0, 0);
  40112a:	2100      	movs	r1, #0
  40112c:	4805      	ldr	r0, [pc, #20]	; (401144 <TC0_Handler+0x1c>)
  40112e:	4b06      	ldr	r3, [pc, #24]	; (401148 <TC0_Handler+0x20>)
  401130:	4798      	blx	r3

	// RC compare.
	if ((ul_status & TC_SR_CPCS) == TC_SR_CPCS) {
  401132:	f010 0f10 	tst.w	r0, #16
  401136:	d004      	beq.n	401142 <TC0_Handler+0x1a>
		counts++;
  401138:	4a04      	ldr	r2, [pc, #16]	; (40114c <TC0_Handler+0x24>)
  40113a:	7813      	ldrb	r3, [r2, #0]
  40113c:	3301      	adds	r3, #1
  40113e:	b2db      	uxtb	r3, r3
  401140:	7013      	strb	r3, [r2, #0]
  401142:	bd08      	pop	{r3, pc}
  401144:	40010000 	.word	0x40010000
  401148:	00400743 	.word	0x00400743
  40114c:	20019164 	.word	0x20019164

00401150 <configure_tc>:
	}
}

void configure_tc(void)
{
  401150:	b530      	push	{r4, r5, lr}
  401152:	b085      	sub	sp, #20

	// Get system clock.
	ul_sysclk = sysclk_get_cpu_hz();

	// Configure PMC.
	pmc_enable_periph_clk(ID_TC0);
  401154:	2017      	movs	r0, #23
  401156:	4b14      	ldr	r3, [pc, #80]	; (4011a8 <configure_tc+0x58>)
  401158:	4798      	blx	r3

	// Configure TC for a 1Hz frequency and trigger on RC compare.
	tc_find_mck_divisor(TC_FREQ, ul_sysclk, &ul_div, &ul_tcclks, ul_sysclk);
  40115a:	4d14      	ldr	r5, [pc, #80]	; (4011ac <configure_tc+0x5c>)
  40115c:	9500      	str	r5, [sp, #0]
  40115e:	ab02      	add	r3, sp, #8
  401160:	aa03      	add	r2, sp, #12
  401162:	4629      	mov	r1, r5
  401164:	2001      	movs	r0, #1
  401166:	4c12      	ldr	r4, [pc, #72]	; (4011b0 <configure_tc+0x60>)
  401168:	47a0      	blx	r4
	tc_init(TC0, 0, ul_tcclks | TC_CMR_CPCTRG);
  40116a:	4c12      	ldr	r4, [pc, #72]	; (4011b4 <configure_tc+0x64>)
  40116c:	9a02      	ldr	r2, [sp, #8]
  40116e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
  401172:	2100      	movs	r1, #0
  401174:	4620      	mov	r0, r4
  401176:	4b10      	ldr	r3, [pc, #64]	; (4011b8 <configure_tc+0x68>)
  401178:	4798      	blx	r3
	tc_write_rc(TC0, 0, (ul_sysclk / ul_div) / TC_FREQ);
  40117a:	9a03      	ldr	r2, [sp, #12]
  40117c:	fbb5 f2f2 	udiv	r2, r5, r2
  401180:	2100      	movs	r1, #0
  401182:	4620      	mov	r0, r4
  401184:	4b0d      	ldr	r3, [pc, #52]	; (4011bc <configure_tc+0x6c>)
  401186:	4798      	blx	r3
  401188:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
  40118c:	4b0c      	ldr	r3, [pc, #48]	; (4011c0 <configure_tc+0x70>)
  40118e:	601a      	str	r2, [r3, #0]

	// Configure and enable interrupt on RC compare.
	NVIC_EnableIRQ((IRQn_Type) ID_TC0);
	tc_enable_interrupt(TC0, 0, TC_IER_CPCS);
  401190:	2210      	movs	r2, #16
  401192:	2100      	movs	r1, #0
  401194:	4620      	mov	r0, r4
  401196:	4b0b      	ldr	r3, [pc, #44]	; (4011c4 <configure_tc+0x74>)
  401198:	4798      	blx	r3
	
	// Start the timer
	tc_start(TC0, 0);
  40119a:	2100      	movs	r1, #0
  40119c:	4620      	mov	r0, r4
  40119e:	4b0a      	ldr	r3, [pc, #40]	; (4011c8 <configure_tc+0x78>)
  4011a0:	4798      	blx	r3
  4011a2:	b005      	add	sp, #20
  4011a4:	bd30      	pop	{r4, r5, pc}
  4011a6:	bf00      	nop
  4011a8:	00400649 	.word	0x00400649
  4011ac:	07270e00 	.word	0x07270e00
  4011b0:	0040074b 	.word	0x0040074b
  4011b4:	40010000 	.word	0x40010000
  4011b8:	00400713 	.word	0x00400713
  4011bc:	00400733 	.word	0x00400733
  4011c0:	e000e100 	.word	0xe000e100
  4011c4:	0040073b 	.word	0x0040073b
  4011c8:	0040072b 	.word	0x0040072b

004011cc <wifi_provision_handler>:
	// WIFI_PROVISIONING pin is button
	// when low set flag as true 
	unused(ul_id);
	unused(ul_mask);
	
	provision_flag = 1;
  4011cc:	2201      	movs	r2, #1
  4011ce:	4b01      	ldr	r3, [pc, #4]	; (4011d4 <wifi_provision_handler+0x8>)
  4011d0:	701a      	strb	r2, [r3, #0]
  4011d2:	4770      	bx	lr
  4011d4:	20000a6d 	.word	0x20000a6d

004011d8 <process_incoming_byte_wifi>:
	input_line_wifi[input_pos_wifi++] = in_byte;
  4011d8:	4a03      	ldr	r2, [pc, #12]	; (4011e8 <process_incoming_byte_wifi+0x10>)
  4011da:	6813      	ldr	r3, [r2, #0]
  4011dc:	1c59      	adds	r1, r3, #1
  4011de:	6011      	str	r1, [r2, #0]
  4011e0:	4a02      	ldr	r2, [pc, #8]	; (4011ec <process_incoming_byte_wifi+0x14>)
  4011e2:	54d0      	strb	r0, [r2, r3]
  4011e4:	4770      	bx	lr
  4011e6:	bf00      	nop
  4011e8:	20000a68 	.word	0x20000a68
  4011ec:	20019168 	.word	0x20019168

004011f0 <USART0_Handler>:
void WIFI_USART_HANDLER(void) {
  4011f0:	b510      	push	{r4, lr}
	ul_status = usart_get_status(WIFI_USART);
  4011f2:	480a      	ldr	r0, [pc, #40]	; (40121c <USART0_Handler+0x2c>)
  4011f4:	4b0a      	ldr	r3, [pc, #40]	; (401220 <USART0_Handler+0x30>)
  4011f6:	4798      	blx	r3
	if (ul_status & US_CSR_RXBUFF) {
  4011f8:	f410 5f80 	tst.w	r0, #4096	; 0x1000
  4011fc:	d100      	bne.n	401200 <USART0_Handler+0x10>
  4011fe:	bd10      	pop	{r4, pc}
		usart_read(WIFI_USART, &received_byte_wifi);
  401200:	4c08      	ldr	r4, [pc, #32]	; (401224 <USART0_Handler+0x34>)
  401202:	4621      	mov	r1, r4
  401204:	4805      	ldr	r0, [pc, #20]	; (40121c <USART0_Handler+0x2c>)
  401206:	4b08      	ldr	r3, [pc, #32]	; (401228 <USART0_Handler+0x38>)
  401208:	4798      	blx	r3
		new_rx_wifi = 1;
  40120a:	2201      	movs	r2, #1
  40120c:	4b07      	ldr	r3, [pc, #28]	; (40122c <USART0_Handler+0x3c>)
  40120e:	701a      	strb	r2, [r3, #0]
		process_incoming_byte_wifi((uint8_t)received_byte_wifi);
  401210:	6820      	ldr	r0, [r4, #0]
  401212:	b2c0      	uxtb	r0, r0
  401214:	4b06      	ldr	r3, [pc, #24]	; (401230 <USART0_Handler+0x40>)
  401216:	4798      	blx	r3
}
  401218:	e7f1      	b.n	4011fe <USART0_Handler+0xe>
  40121a:	bf00      	nop
  40121c:	40024000 	.word	0x40024000
  401220:	00400b11 	.word	0x00400b11
  401224:	20000a70 	.word	0x20000a70
  401228:	00400b49 	.word	0x00400b49
  40122c:	20000a6c 	.word	0x20000a6c
  401230:	004011d9 	.word	0x004011d9

00401234 <process_data_wifi>:
void process_data_wifi(void) {
  401234:	b508      	push	{r3, lr}
	if (strstr(input_line_wifi, "SUCCESS")) {
  401236:	4904      	ldr	r1, [pc, #16]	; (401248 <process_data_wifi+0x14>)
  401238:	4804      	ldr	r0, [pc, #16]	; (40124c <process_data_wifi+0x18>)
  40123a:	4b05      	ldr	r3, [pc, #20]	; (401250 <process_data_wifi+0x1c>)
  40123c:	4798      	blx	r3
  40123e:	b110      	cbz	r0, 401246 <process_data_wifi+0x12>
		success_flag = 1;
  401240:	2201      	movs	r2, #1
  401242:	4b04      	ldr	r3, [pc, #16]	; (401254 <process_data_wifi+0x20>)
  401244:	701a      	strb	r2, [r3, #0]
  401246:	bd08      	pop	{r3, pc}
  401248:	00407464 	.word	0x00407464
  40124c:	20019168 	.word	0x20019168
  401250:	00401d15 	.word	0x00401d15
  401254:	20000a74 	.word	0x20000a74

00401258 <wifi_command_response_handler>:
void wifi_command_response_handler(uint32_t ul_id, uint32_t ul_mask) {
  401258:	b508      	push	{r3, lr}
	wifi_comm_success = 1;
  40125a:	2201      	movs	r2, #1
  40125c:	4b07      	ldr	r3, [pc, #28]	; (40127c <wifi_command_response_handler+0x24>)
  40125e:	701a      	strb	r2, [r3, #0]
	process_data_wifi();
  401260:	4b07      	ldr	r3, [pc, #28]	; (401280 <wifi_command_response_handler+0x28>)
  401262:	4798      	blx	r3
	for (int jj=0;jj<MAX_INPUT_WIFI;jj++) input_line_wifi[jj] = 0;
  401264:	2300      	movs	r3, #0
  401266:	4907      	ldr	r1, [pc, #28]	; (401284 <wifi_command_response_handler+0x2c>)
  401268:	461a      	mov	r2, r3
  40126a:	54ca      	strb	r2, [r1, r3]
  40126c:	3301      	adds	r3, #1
  40126e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
  401272:	d1fa      	bne.n	40126a <wifi_command_response_handler+0x12>
	input_pos_wifi = 0;
  401274:	2200      	movs	r2, #0
  401276:	4b04      	ldr	r3, [pc, #16]	; (401288 <wifi_command_response_handler+0x30>)
  401278:	601a      	str	r2, [r3, #0]
  40127a:	bd08      	pop	{r3, pc}
  40127c:	20000a84 	.word	0x20000a84
  401280:	00401235 	.word	0x00401235
  401284:	20019168 	.word	0x20019168
  401288:	20000a68 	.word	0x20000a68

0040128c <configure_usart_wifi>:
			spi_write(SPI, g_image_buffer[transfer_index++], 0, 0);
		}
	}
}

void configure_usart_wifi(void) {
  40128c:	b530      	push	{r4, r5, lr}
  40128e:	b087      	sub	sp, #28
	// Configuration of USART port used to communicate with the ESP32.
	gpio_configure_pin(PIN_USART0_RXD_IDX, PIN_USART0_RXD_FLAGS);
  401290:	4d18      	ldr	r5, [pc, #96]	; (4012f4 <configure_usart_wifi+0x68>)
  401292:	4629      	mov	r1, r5
  401294:	2005      	movs	r0, #5
  401296:	4c18      	ldr	r4, [pc, #96]	; (4012f8 <configure_usart_wifi+0x6c>)
  401298:	47a0      	blx	r4
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
  40129a:	4629      	mov	r1, r5
  40129c:	2006      	movs	r0, #6
  40129e:	47a0      	blx	r4
	
	static uint32_t ul_sysclk;
	const sam_usart_opt_t wifi_usart_settings = {
  4012a0:	466c      	mov	r4, sp
  4012a2:	4d16      	ldr	r5, [pc, #88]	; (4012fc <configure_usart_wifi+0x70>)
  4012a4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  4012a6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  4012a8:	e895 0003 	ldmia.w	r5, {r0, r1}
  4012ac:	e884 0003 	stmia.w	r4, {r0, r1}
		/* This field is only used in IrDA mode. */
		0
	};
	
	/* Get system clock. */
	ul_sysclk = sysclk_get_cpu_hz();
  4012b0:	4d13      	ldr	r5, [pc, #76]	; (401300 <configure_usart_wifi+0x74>)
  4012b2:	4b14      	ldr	r3, [pc, #80]	; (401304 <configure_usart_wifi+0x78>)
  4012b4:	602b      	str	r3, [r5, #0]
	
	pmc_enable_periph_clk(WIFI_USART_ID);
  4012b6:	200e      	movs	r0, #14
  4012b8:	4b13      	ldr	r3, [pc, #76]	; (401308 <configure_usart_wifi+0x7c>)
  4012ba:	4798      	blx	r3
	
	usart_init_rs232(WIFI_USART,&wifi_usart_settings,ul_sysclk);
  4012bc:	4c13      	ldr	r4, [pc, #76]	; (40130c <configure_usart_wifi+0x80>)
  4012be:	682a      	ldr	r2, [r5, #0]
  4012c0:	4669      	mov	r1, sp
  4012c2:	4620      	mov	r0, r4
  4012c4:	4b12      	ldr	r3, [pc, #72]	; (401310 <configure_usart_wifi+0x84>)
  4012c6:	4798      	blx	r3

	/* Disable all the interrupts. */
	usart_disable_interrupt(WIFI_USART, ALL_INTERRUPT_MASK);
  4012c8:	f04f 31ff 	mov.w	r1, #4294967295
  4012cc:	4620      	mov	r0, r4
  4012ce:	4b11      	ldr	r3, [pc, #68]	; (401314 <configure_usart_wifi+0x88>)
  4012d0:	4798      	blx	r3
	
	/* Enable TX & RX function. */
	usart_enable_tx(WIFI_USART);
  4012d2:	4620      	mov	r0, r4
  4012d4:	4b10      	ldr	r3, [pc, #64]	; (401318 <configure_usart_wifi+0x8c>)
  4012d6:	4798      	blx	r3
	usart_enable_rx(WIFI_USART);
  4012d8:	4620      	mov	r0, r4
  4012da:	4b10      	ldr	r3, [pc, #64]	; (40131c <configure_usart_wifi+0x90>)
  4012dc:	4798      	blx	r3

	usart_enable_interrupt(WIFI_USART, US_IER_RXRDY);
  4012de:	2101      	movs	r1, #1
  4012e0:	4620      	mov	r0, r4
  4012e2:	4b0f      	ldr	r3, [pc, #60]	; (401320 <configure_usart_wifi+0x94>)
  4012e4:	4798      	blx	r3
  4012e6:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  4012ea:	4b0e      	ldr	r3, [pc, #56]	; (401324 <configure_usart_wifi+0x98>)
  4012ec:	601a      	str	r2, [r3, #0]

	/* Configure and enable interrupt of USART. */
	NVIC_EnableIRQ(WIFI_USART_IRQn);
}
  4012ee:	b007      	add	sp, #28
  4012f0:	bd30      	pop	{r4, r5, pc}
  4012f2:	bf00      	nop
  4012f4:	08000001 	.word	0x08000001
  4012f8:	004002dd 	.word	0x004002dd
  4012fc:	0040744c 	.word	0x0040744c
  401300:	20000a80 	.word	0x20000a80
  401304:	07270e00 	.word	0x07270e00
  401308:	00400649 	.word	0x00400649
  40130c:	40024000 	.word	0x40024000
  401310:	00400aa9 	.word	0x00400aa9
  401314:	00400b0d 	.word	0x00400b0d
  401318:	00400afd 	.word	0x00400afd
  40131c:	00400b03 	.word	0x00400b03
  401320:	00400b09 	.word	0x00400b09
  401324:	e000e100 	.word	0xe000e100

00401328 <configure_wifi_comm_pin>:

void configure_wifi_comm_pin(void) {
  401328:	b530      	push	{r4, r5, lr}
  40132a:	b083      	sub	sp, #12
	// Configuration of ?command complete? rising-edge interrupt.
	/* Configure PIO clock. */
	pmc_enable_periph_clk(WIFI_COMM_ID);
  40132c:	200b      	movs	r0, #11
  40132e:	4b0b      	ldr	r3, [pc, #44]	; (40135c <configure_wifi_comm_pin+0x34>)
  401330:	4798      	blx	r3

	/* Initialize PIO interrupt handler, see PIO definition in conf_board.h
	**/
	pio_handler_set(WIFI_COMM_PIO, WIFI_COMM_ID, WIFI_COMM_PIN_NUM, WIFI_COMM_ATTR, wifi_command_response_handler);
  401332:	4c0b      	ldr	r4, [pc, #44]	; (401360 <configure_wifi_comm_pin+0x38>)
  401334:	4b0b      	ldr	r3, [pc, #44]	; (401364 <configure_wifi_comm_pin+0x3c>)
  401336:	9300      	str	r3, [sp, #0]
  401338:	2370      	movs	r3, #112	; 0x70
  40133a:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  40133e:	210b      	movs	r1, #11
  401340:	4620      	mov	r0, r4
  401342:	4d09      	ldr	r5, [pc, #36]	; (401368 <configure_wifi_comm_pin+0x40>)
  401344:	47a8      	blx	r5
  401346:	f44f 6200 	mov.w	r2, #2048	; 0x800
  40134a:	4b08      	ldr	r3, [pc, #32]	; (40136c <configure_wifi_comm_pin+0x44>)
  40134c:	601a      	str	r2, [r3, #0]

	/* Enable PIO controller IRQs. */
	NVIC_EnableIRQ((IRQn_Type)WIFI_COMM_ID);

	/* Enable PIO interrupt lines. */
	pio_enable_interrupt(WIFI_COMM_PIO, WIFI_COMM_PIN_NUM);
  40134e:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
  401352:	4620      	mov	r0, r4
  401354:	4b06      	ldr	r3, [pc, #24]	; (401370 <configure_wifi_comm_pin+0x48>)
  401356:	4798      	blx	r3
}
  401358:	b003      	add	sp, #12
  40135a:	bd30      	pop	{r4, r5, pc}
  40135c:	00400649 	.word	0x00400649
  401360:	400e0e00 	.word	0x400e0e00
  401364:	00401259 	.word	0x00401259
  401368:	00400495 	.word	0x00400495
  40136c:	e000e100 	.word	0xe000e100
  401370:	004002cd 	.word	0x004002cd

00401374 <configure_wifi_provision_pin>:

void configure_wifi_provision_pin(void) { //
  401374:	b530      	push	{r4, r5, lr}
  401376:	b083      	sub	sp, #12
	// Configuration of button interrupt to initiate provisioning mode.
	// if flag then interrupt
	// This configures the ESP32 as an access point with SSID ?ESD1 XY?, where X is the fifth byte of the MAC address and Y is the 
	// sixth byte of the MAC address
	pmc_enable_periph_clk(WIFI_PROVIS_ID);
  401378:	200b      	movs	r0, #11
  40137a:	4b0e      	ldr	r3, [pc, #56]	; (4013b4 <configure_wifi_provision_pin+0x40>)
  40137c:	4798      	blx	r3
	pio_set_debounce_filter(WIFI_PROVIS_PIO, WIFI_PROVIS_PIN_NUM, 10);
  40137e:	4c0e      	ldr	r4, [pc, #56]	; (4013b8 <configure_wifi_provision_pin+0x44>)
  401380:	220a      	movs	r2, #10
  401382:	f44f 2180 	mov.w	r1, #262144	; 0x40000
  401386:	4620      	mov	r0, r4
  401388:	4b0c      	ldr	r3, [pc, #48]	; (4013bc <configure_wifi_provision_pin+0x48>)
  40138a:	4798      	blx	r3
	pio_handler_set(WIFI_PROVIS_PIO, WIFI_PROVIS_ID, WIFI_PROVIS_PIN_NUM, WIFI_PROVIS_ATTR, wifi_provision_handler);
  40138c:	4b0c      	ldr	r3, [pc, #48]	; (4013c0 <configure_wifi_provision_pin+0x4c>)
  40138e:	9300      	str	r3, [sp, #0]
  401390:	2349      	movs	r3, #73	; 0x49
  401392:	f44f 2280 	mov.w	r2, #262144	; 0x40000
  401396:	210b      	movs	r1, #11
  401398:	4620      	mov	r0, r4
  40139a:	4d0a      	ldr	r5, [pc, #40]	; (4013c4 <configure_wifi_provision_pin+0x50>)
  40139c:	47a8      	blx	r5
  40139e:	f44f 6200 	mov.w	r2, #2048	; 0x800
  4013a2:	4b09      	ldr	r3, [pc, #36]	; (4013c8 <configure_wifi_provision_pin+0x54>)
  4013a4:	601a      	str	r2, [r3, #0]
	NVIC_EnableIRQ((IRQn_Type)WIFI_PROVIS_ID);
	pio_enable_interrupt(WIFI_PROVIS_PIO, WIFI_PROVIS_PIN_NUM);
  4013a6:	f44f 2180 	mov.w	r1, #262144	; 0x40000
  4013aa:	4620      	mov	r0, r4
  4013ac:	4b07      	ldr	r3, [pc, #28]	; (4013cc <configure_wifi_provision_pin+0x58>)
  4013ae:	4798      	blx	r3
}
  4013b0:	b003      	add	sp, #12
  4013b2:	bd30      	pop	{r4, r5, pc}
  4013b4:	00400649 	.word	0x00400649
  4013b8:	400e0e00 	.word	0x400e0e00
  4013bc:	0040019d 	.word	0x0040019d
  4013c0:	004011cd 	.word	0x004011cd
  4013c4:	00400495 	.word	0x00400495
  4013c8:	e000e100 	.word	0xe000e100
  4013cc:	004002cd 	.word	0x004002cd

004013d0 <configure_spi>:

void configure_spi(void) {
  4013d0:	b510      	push	{r4, lr}
	// Configuration of SPI port and interrupts used to send images to the ESP32.
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  4013d2:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4013d6:	200c      	movs	r0, #12
  4013d8:	4c0e      	ldr	r4, [pc, #56]	; (401414 <configure_spi+0x44>)
  4013da:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  4013dc:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4013e0:	200d      	movs	r0, #13
  4013e2:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  4013e4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4013e8:	200e      	movs	r0, #14
  4013ea:	47a0      	blx	r4
	gpio_configure_pin(SPI_NPCS0_GPIO, SPI_NPCS0_FLAGS);
  4013ec:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4013f0:	200b      	movs	r0, #11
  4013f2:	47a0      	blx	r4
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  4013f4:	4b08      	ldr	r3, [pc, #32]	; (401418 <configure_spi+0x48>)
  4013f6:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4013fa:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  __ASM volatile ("dsb 0xF":::"memory");
  4013fe:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  401402:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  401406:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  40140a:	2100      	movs	r1, #0
  40140c:	f883 1315 	strb.w	r1, [r3, #789]	; 0x315
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  401410:	601a      	str	r2, [r3, #0]
  401412:	bd10      	pop	{r4, pc}
  401414:	004002dd 	.word	0x004002dd
  401418:	e000e100 	.word	0xe000e100

0040141c <spi_peripheral_initialize>:
	NVIC_ClearPendingIRQ(SPI_IRQn);
	NVIC_SetPriority(SPI_IRQn, 0);
	NVIC_EnableIRQ(SPI_IRQn);
}

void spi_peripheral_initialize(void) {
  40141c:	b510      	push	{r4, lr}
	// Initialize the SPI port as a peripheral (slave) device.
	spi_enable_clock(SPI);
  40141e:	4c13      	ldr	r4, [pc, #76]	; (40146c <spi_peripheral_initialize+0x50>)
  401420:	4620      	mov	r0, r4
  401422:	4b13      	ldr	r3, [pc, #76]	; (401470 <spi_peripheral_initialize+0x54>)
  401424:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  401426:	2302      	movs	r3, #2
  401428:	6023      	str	r3, [r4, #0]
	p_spi->SPI_CR = SPI_CR_SWRST;
  40142a:	2380      	movs	r3, #128	; 0x80
  40142c:	6023      	str	r3, [r4, #0]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_set_slave_mode(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_MSTR);
  40142e:	6863      	ldr	r3, [r4, #4]
  401430:	f023 0301 	bic.w	r3, r3, #1
  401434:	6063      	str	r3, [r4, #4]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_mode_fault_detect(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  401436:	6863      	ldr	r3, [r4, #4]
  401438:	f043 0310 	orr.w	r3, r3, #16
  40143c:	6063      	str	r3, [r4, #4]
	spi_disable(SPI);
	spi_reset(SPI);
	spi_set_slave_mode(SPI);
	spi_disable_mode_fault_detect(SPI);
	spi_set_peripheral_chip_select_value(SPI, SPI_CHIP_PCS);
  40143e:	210e      	movs	r1, #14
  401440:	4620      	mov	r0, r4
  401442:	4b0c      	ldr	r3, [pc, #48]	; (401474 <spi_peripheral_initialize+0x58>)
  401444:	4798      	blx	r3
	spi_set_clock_polarity(SPI, SPI_CHIP_SEL, SPI_CLK_POLARITY);
  401446:	2200      	movs	r2, #0
  401448:	4611      	mov	r1, r2
  40144a:	4620      	mov	r0, r4
  40144c:	4b0a      	ldr	r3, [pc, #40]	; (401478 <spi_peripheral_initialize+0x5c>)
  40144e:	4798      	blx	r3
	spi_set_clock_phase(SPI, SPI_CHIP_SEL, SPI_CLK_PHASE);
  401450:	2200      	movs	r2, #0
  401452:	4611      	mov	r1, r2
  401454:	4620      	mov	r0, r4
  401456:	4b09      	ldr	r3, [pc, #36]	; (40147c <spi_peripheral_initialize+0x60>)
  401458:	4798      	blx	r3
	spi_set_bits_per_transfer(SPI, SPI_CHIP_SEL, SPI_CSR_BITS_8_BIT);
  40145a:	2200      	movs	r2, #0
  40145c:	4611      	mov	r1, r2
  40145e:	4620      	mov	r0, r4
  401460:	4b07      	ldr	r3, [pc, #28]	; (401480 <spi_peripheral_initialize+0x64>)
  401462:	4798      	blx	r3
 * \param p_spi Pointer to an SPI instance.
 * \param ul_sources Interrupts to be enabled.
 */
static inline void spi_enable_interrupt(Spi *p_spi, uint32_t ul_sources)
{
	p_spi->SPI_IER = ul_sources;
  401464:	2301      	movs	r3, #1
  401466:	6163      	str	r3, [r4, #20]
	p_spi->SPI_CR = SPI_CR_SPIEN;
  401468:	6023      	str	r3, [r4, #0]
  40146a:	bd10      	pop	{r4, pc}
  40146c:	40008000 	.word	0x40008000
  401470:	0040069d 	.word	0x0040069d
  401474:	004006ad 	.word	0x004006ad
  401478:	004006c3 	.word	0x004006c3
  40147c:	004006e1 	.word	0x004006e1
  401480:	004006ff 	.word	0x004006ff

00401484 <prepare_spi_transfer>:
	spi_enable(SPI);
}

void prepare_spi_transfer(void) {
	// Set necessary parameters to prepare for SPI transfer.
	transfer_len = g_image_length;
  401484:	4b04      	ldr	r3, [pc, #16]	; (401498 <prepare_spi_transfer+0x14>)
  401486:	681a      	ldr	r2, [r3, #0]
  401488:	4b04      	ldr	r3, [pc, #16]	; (40149c <prepare_spi_transfer+0x18>)
  40148a:	601a      	str	r2, [r3, #0]
	transfer_index = soi_pos;
  40148c:	4b04      	ldr	r3, [pc, #16]	; (4014a0 <prepare_spi_transfer+0x1c>)
  40148e:	681a      	ldr	r2, [r3, #0]
  401490:	4b04      	ldr	r3, [pc, #16]	; (4014a4 <prepare_spi_transfer+0x20>)
  401492:	601a      	str	r2, [r3, #0]
  401494:	4770      	bx	lr
  401496:	bf00      	nop
  401498:	20000a5c 	.word	0x20000a5c
  40149c:	20000a7c 	.word	0x20000a7c
  4014a0:	20000a64 	.word	0x20000a64
  4014a4:	20000a78 	.word	0x20000a78

004014a8 <write_wifi_command>:
}

void write_wifi_command(char* comm, uint8_t cnt) { //
  4014a8:	b510      	push	{r4, lr}
  4014aa:	460c      	mov	r4, r1
	// Writes a command (comm) to the ESP32, and waits either for an acknowledgment (via the ?command complete? pin)
	// or a timeout. The timeout can be created by setting the global variable counts to zero, which will automatically increment every second, 
	// and waiting while counts < cnt.
	
	wifi_comm_success = false;
  4014ac:	2300      	movs	r3, #0
  4014ae:	4a09      	ldr	r2, [pc, #36]	; (4014d4 <write_wifi_command+0x2c>)
  4014b0:	7013      	strb	r3, [r2, #0]

	// wait for acknowledgment or timeout 
	counts = 0;
  4014b2:	4a09      	ldr	r2, [pc, #36]	; (4014d8 <write_wifi_command+0x30>)
  4014b4:	7013      	strb	r3, [r2, #0]
	usart_write_line(WIFI_USART,comm); // write command
  4014b6:	4601      	mov	r1, r0
  4014b8:	4808      	ldr	r0, [pc, #32]	; (4014dc <write_wifi_command+0x34>)
  4014ba:	4b09      	ldr	r3, [pc, #36]	; (4014e0 <write_wifi_command+0x38>)
  4014bc:	4798      	blx	r3
	while ((counts < cnt) && (!wifi_comm_success)) {
  4014be:	4a06      	ldr	r2, [pc, #24]	; (4014d8 <write_wifi_command+0x30>)
  4014c0:	4904      	ldr	r1, [pc, #16]	; (4014d4 <write_wifi_command+0x2c>)
  4014c2:	7813      	ldrb	r3, [r2, #0]
  4014c4:	b2db      	uxtb	r3, r3
  4014c6:	42a3      	cmp	r3, r4
  4014c8:	d202      	bcs.n	4014d0 <write_wifi_command+0x28>
  4014ca:	780b      	ldrb	r3, [r1, #0]
  4014cc:	2b00      	cmp	r3, #0
  4014ce:	d0f8      	beq.n	4014c2 <write_wifi_command+0x1a>
  4014d0:	bd10      	pop	{r4, pc}
  4014d2:	bf00      	nop
  4014d4:	20000a84 	.word	0x20000a84
  4014d8:	20019164 	.word	0x20019164
  4014dc:	40024000 	.word	0x40024000
  4014e0:	00400b29 	.word	0x00400b29

004014e4 <write_image_to_web>:
	// follow this protocol (illustrated in Appendix C):
	// 1. Configure the SPI interface to be ready for a transfer by setting its parameters appropriately.
	// 2. Issue the command ?image transfer xxxx?, where xxxx is replaced by the length of the image you want to transfer.
	// 3. The ESP32 will then set the ?command complete? pin low and begin transferring the image over SPI.
	// 4. After the image is done sending, the ESP32 will set the ?command complete? pin high. The MCU should sense this and then move on.
	if (g_image_length == 0) {
  4014e4:	4b0a      	ldr	r3, [pc, #40]	; (401510 <write_image_to_web+0x2c>)
  4014e6:	681b      	ldr	r3, [r3, #0]
  4014e8:	b903      	cbnz	r3, 4014ec <write_image_to_web+0x8>
  4014ea:	4770      	bx	lr
void write_image_to_web(void) { //
  4014ec:	b500      	push	{lr}
  4014ee:	b09b      	sub	sp, #108	; 0x6c
		return;
	}
	
	prepare_spi_transfer();
  4014f0:	4b08      	ldr	r3, [pc, #32]	; (401514 <write_image_to_web+0x30>)
  4014f2:	4798      	blx	r3
	uint8_t transfer_message[100];
	sprintf(transfer_message, "image_test %i\r\n", g_image_length); // image_transfer, replaced for testing
  4014f4:	4b06      	ldr	r3, [pc, #24]	; (401510 <write_image_to_web+0x2c>)
  4014f6:	681a      	ldr	r2, [r3, #0]
  4014f8:	4907      	ldr	r1, [pc, #28]	; (401518 <write_image_to_web+0x34>)
  4014fa:	a801      	add	r0, sp, #4
  4014fc:	4b07      	ldr	r3, [pc, #28]	; (40151c <write_image_to_web+0x38>)
  4014fe:	4798      	blx	r3
	write_wifi_command(transfer_message,5);		
  401500:	2105      	movs	r1, #5
  401502:	a801      	add	r0, sp, #4
  401504:	4b06      	ldr	r3, [pc, #24]	; (401520 <write_image_to_web+0x3c>)
  401506:	4798      	blx	r3
	
  401508:	b01b      	add	sp, #108	; 0x6c
  40150a:	f85d fb04 	ldr.w	pc, [sp], #4
  40150e:	bf00      	nop
  401510:	20000a5c 	.word	0x20000a5c
  401514:	00401485 	.word	0x00401485
  401518:	0040746c 	.word	0x0040746c
  40151c:	00401a19 	.word	0x00401a19
  401520:	004014a9 	.word	0x004014a9

00401524 <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
  401524:	b510      	push	{r4, lr}
  401526:	200b      	movs	r0, #11
  401528:	4c0a      	ldr	r4, [pc, #40]	; (401554 <board_init+0x30>)
  40152a:	47a0      	blx	r4
  40152c:	200c      	movs	r0, #12
  40152e:	47a0      	blx	r4
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  401530:	4b09      	ldr	r3, [pc, #36]	; (401558 <board_init+0x34>)
  401532:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  401536:	615a      	str	r2, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  401538:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  40153c:	f44f 7200 	mov.w	r2, #512	; 0x200
  401540:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  401542:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  401546:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  40154a:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40154c:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  401550:	bd10      	pop	{r4, pc}
  401552:	bf00      	nop
  401554:	00400649 	.word	0x00400649
  401558:	400e0e00 	.word	0x400e0e00

0040155c <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  40155c:	e7fe      	b.n	40155c <Dummy_Handler>
	...

00401560 <Reset_Handler>:
{
  401560:	b508      	push	{r3, lr}
	if (pSrc > pDest) {
  401562:	4b21      	ldr	r3, [pc, #132]	; (4015e8 <Reset_Handler+0x88>)
  401564:	4a21      	ldr	r2, [pc, #132]	; (4015ec <Reset_Handler+0x8c>)
  401566:	429a      	cmp	r2, r3
  401568:	d928      	bls.n	4015bc <Reset_Handler+0x5c>
		for (; pDest < &_erelocate;) {
  40156a:	4b21      	ldr	r3, [pc, #132]	; (4015f0 <Reset_Handler+0x90>)
  40156c:	4a1e      	ldr	r2, [pc, #120]	; (4015e8 <Reset_Handler+0x88>)
  40156e:	429a      	cmp	r2, r3
  401570:	d20c      	bcs.n	40158c <Reset_Handler+0x2c>
  401572:	3b01      	subs	r3, #1
  401574:	1a9b      	subs	r3, r3, r2
  401576:	f023 0303 	bic.w	r3, r3, #3
  40157a:	3304      	adds	r3, #4
  40157c:	4413      	add	r3, r2
  40157e:	491b      	ldr	r1, [pc, #108]	; (4015ec <Reset_Handler+0x8c>)
			*pDest++ = *pSrc++;
  401580:	f851 0b04 	ldr.w	r0, [r1], #4
  401584:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
  401588:	429a      	cmp	r2, r3
  40158a:	d1f9      	bne.n	401580 <Reset_Handler+0x20>
	__NOP();
  40158c:	bf00      	nop
	for (pDest = &_szero; pDest < &_ezero;) {
  40158e:	4b19      	ldr	r3, [pc, #100]	; (4015f4 <Reset_Handler+0x94>)
  401590:	4a19      	ldr	r2, [pc, #100]	; (4015f8 <Reset_Handler+0x98>)
  401592:	429a      	cmp	r2, r3
  401594:	d20a      	bcs.n	4015ac <Reset_Handler+0x4c>
  401596:	3b01      	subs	r3, #1
  401598:	1a9b      	subs	r3, r3, r2
  40159a:	f023 0303 	bic.w	r3, r3, #3
  40159e:	3304      	adds	r3, #4
  4015a0:	4413      	add	r3, r2
		*pDest++ = 0;
  4015a2:	2100      	movs	r1, #0
  4015a4:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
  4015a8:	429a      	cmp	r2, r3
  4015aa:	d1fb      	bne.n	4015a4 <Reset_Handler+0x44>
	SCB->VTOR = ((uint32_t) pSrc);
  4015ac:	4b13      	ldr	r3, [pc, #76]	; (4015fc <Reset_Handler+0x9c>)
  4015ae:	4a14      	ldr	r2, [pc, #80]	; (401600 <Reset_Handler+0xa0>)
  4015b0:	609a      	str	r2, [r3, #8]
	__libc_init_array();
  4015b2:	4b14      	ldr	r3, [pc, #80]	; (401604 <Reset_Handler+0xa4>)
  4015b4:	4798      	blx	r3
	main();
  4015b6:	4b14      	ldr	r3, [pc, #80]	; (401608 <Reset_Handler+0xa8>)
  4015b8:	4798      	blx	r3
  4015ba:	e7fe      	b.n	4015ba <Reset_Handler+0x5a>
	} else if (pSrc < pDest) {
  4015bc:	4b0a      	ldr	r3, [pc, #40]	; (4015e8 <Reset_Handler+0x88>)
  4015be:	4a0b      	ldr	r2, [pc, #44]	; (4015ec <Reset_Handler+0x8c>)
  4015c0:	429a      	cmp	r2, r3
  4015c2:	d2e3      	bcs.n	40158c <Reset_Handler+0x2c>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  4015c4:	4b0a      	ldr	r3, [pc, #40]	; (4015f0 <Reset_Handler+0x90>)
  4015c6:	4808      	ldr	r0, [pc, #32]	; (4015e8 <Reset_Handler+0x88>)
  4015c8:	1a18      	subs	r0, r3, r0
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  4015ca:	4611      	mov	r1, r2
  4015cc:	3a04      	subs	r2, #4
  4015ce:	4402      	add	r2, r0
		for (;nb_bytes;nb_bytes -= 4) {
  4015d0:	2800      	cmp	r0, #0
  4015d2:	d0db      	beq.n	40158c <Reset_Handler+0x2c>
  4015d4:	f1c1 0104 	rsb	r1, r1, #4
			*pDest-- = *pSrc--;
  4015d8:	f852 0904 	ldr.w	r0, [r2], #-4
  4015dc:	f843 0d04 	str.w	r0, [r3, #-4]!
		for (;nb_bytes;nb_bytes -= 4) {
  4015e0:	42ca      	cmn	r2, r1
  4015e2:	d1f9      	bne.n	4015d8 <Reset_Handler+0x78>
  4015e4:	e7d2      	b.n	40158c <Reset_Handler+0x2c>
  4015e6:	bf00      	nop
  4015e8:	20000000 	.word	0x20000000
  4015ec:	004077ec 	.word	0x004077ec
  4015f0:	200009c0 	.word	0x200009c0
  4015f4:	20019578 	.word	0x20019578
  4015f8:	200009c0 	.word	0x200009c0
  4015fc:	e000ed00 	.word	0xe000ed00
  401600:	00400000 	.word	0x00400000
  401604:	0040192d 	.word	0x0040192d
  401608:	004017c9 	.word	0x004017c9

0040160c <SystemCoreClockUpdate>:
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  40160c:	4b3c      	ldr	r3, [pc, #240]	; (401700 <SystemCoreClockUpdate+0xf4>)
  40160e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401610:	f003 0303 	and.w	r3, r3, #3
  401614:	2b03      	cmp	r3, #3
  401616:	d80e      	bhi.n	401636 <SystemCoreClockUpdate+0x2a>
  401618:	e8df f003 	tbb	[pc, r3]
  40161c:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  401620:	4b38      	ldr	r3, [pc, #224]	; (401704 <SystemCoreClockUpdate+0xf8>)
  401622:	695b      	ldr	r3, [r3, #20]
  401624:	f013 0f80 	tst.w	r3, #128	; 0x80
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  401628:	bf14      	ite	ne
  40162a:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  40162e:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  401632:	4b35      	ldr	r3, [pc, #212]	; (401708 <SystemCoreClockUpdate+0xfc>)
  401634:	601a      	str	r2, [r3, #0]
		
	default:
		break;
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  401636:	4b32      	ldr	r3, [pc, #200]	; (401700 <SystemCoreClockUpdate+0xf4>)
  401638:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40163a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40163e:	2b70      	cmp	r3, #112	; 0x70
  401640:	d055      	beq.n	4016ee <SystemCoreClockUpdate+0xe2>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  401642:	4b2f      	ldr	r3, [pc, #188]	; (401700 <SystemCoreClockUpdate+0xf4>)
  401644:	6b1a      	ldr	r2, [r3, #48]	; 0x30
		SystemCoreClock >>=
  401646:	4930      	ldr	r1, [pc, #192]	; (401708 <SystemCoreClockUpdate+0xfc>)
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  401648:	f3c2 1202 	ubfx	r2, r2, #4, #3
		SystemCoreClock >>=
  40164c:	680b      	ldr	r3, [r1, #0]
  40164e:	40d3      	lsrs	r3, r2
  401650:	600b      	str	r3, [r1, #0]
  401652:	4770      	bx	lr
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  401654:	4b2a      	ldr	r3, [pc, #168]	; (401700 <SystemCoreClockUpdate+0xf4>)
  401656:	6a1b      	ldr	r3, [r3, #32]
  401658:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  40165c:	d003      	beq.n	401666 <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL;
  40165e:	4a2b      	ldr	r2, [pc, #172]	; (40170c <SystemCoreClockUpdate+0x100>)
  401660:	4b29      	ldr	r3, [pc, #164]	; (401708 <SystemCoreClockUpdate+0xfc>)
  401662:	601a      	str	r2, [r3, #0]
  401664:	e7e7      	b.n	401636 <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401666:	4a2a      	ldr	r2, [pc, #168]	; (401710 <SystemCoreClockUpdate+0x104>)
  401668:	4b27      	ldr	r3, [pc, #156]	; (401708 <SystemCoreClockUpdate+0xfc>)
  40166a:	601a      	str	r2, [r3, #0]
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  40166c:	4b24      	ldr	r3, [pc, #144]	; (401700 <SystemCoreClockUpdate+0xf4>)
  40166e:	6a1b      	ldr	r3, [r3, #32]
  401670:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401674:	2b10      	cmp	r3, #16
  401676:	d005      	beq.n	401684 <SystemCoreClockUpdate+0x78>
  401678:	2b20      	cmp	r3, #32
  40167a:	d1dc      	bne.n	401636 <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  40167c:	4a23      	ldr	r2, [pc, #140]	; (40170c <SystemCoreClockUpdate+0x100>)
  40167e:	4b22      	ldr	r3, [pc, #136]	; (401708 <SystemCoreClockUpdate+0xfc>)
  401680:	601a      	str	r2, [r3, #0]
			break;
  401682:	e7d8      	b.n	401636 <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  401684:	4a23      	ldr	r2, [pc, #140]	; (401714 <SystemCoreClockUpdate+0x108>)
  401686:	4b20      	ldr	r3, [pc, #128]	; (401708 <SystemCoreClockUpdate+0xfc>)
  401688:	601a      	str	r2, [r3, #0]
			break;
  40168a:	e7d4      	b.n	401636 <SystemCoreClockUpdate+0x2a>
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  40168c:	4b1c      	ldr	r3, [pc, #112]	; (401700 <SystemCoreClockUpdate+0xf4>)
  40168e:	6a1b      	ldr	r3, [r3, #32]
  401690:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401694:	d018      	beq.n	4016c8 <SystemCoreClockUpdate+0xbc>
				SystemCoreClock = CHIP_FREQ_XTAL;
  401696:	4a1d      	ldr	r2, [pc, #116]	; (40170c <SystemCoreClockUpdate+0x100>)
  401698:	4b1b      	ldr	r3, [pc, #108]	; (401708 <SystemCoreClockUpdate+0xfc>)
  40169a:	601a      	str	r2, [r3, #0]
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  40169c:	4b18      	ldr	r3, [pc, #96]	; (401700 <SystemCoreClockUpdate+0xf4>)
  40169e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4016a0:	f003 0303 	and.w	r3, r3, #3
  4016a4:	2b02      	cmp	r3, #2
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  4016a6:	4a16      	ldr	r2, [pc, #88]	; (401700 <SystemCoreClockUpdate+0xf4>)
  4016a8:	bf07      	ittee	eq
  4016aa:	6a91      	ldreq	r1, [r2, #40]	; 0x28
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  4016ac:	6a92      	ldreq	r2, [r2, #40]	; 0x28
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  4016ae:	6ad1      	ldrne	r1, [r2, #44]	; 0x2c
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  4016b0:	6ad2      	ldrne	r2, [r2, #44]	; 0x2c
  4016b2:	4815      	ldr	r0, [pc, #84]	; (401708 <SystemCoreClockUpdate+0xfc>)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  4016b4:	f3c1 410a 	ubfx	r1, r1, #16, #11
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  4016b8:	6803      	ldr	r3, [r0, #0]
  4016ba:	fb01 3303 	mla	r3, r1, r3, r3
						>> CKGR_PLLBR_DIVB_Pos));
  4016be:	b2d2      	uxtb	r2, r2
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  4016c0:	fbb3 f3f2 	udiv	r3, r3, r2
  4016c4:	6003      	str	r3, [r0, #0]
  4016c6:	e7b6      	b.n	401636 <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4016c8:	4a11      	ldr	r2, [pc, #68]	; (401710 <SystemCoreClockUpdate+0x104>)
  4016ca:	4b0f      	ldr	r3, [pc, #60]	; (401708 <SystemCoreClockUpdate+0xfc>)
  4016cc:	601a      	str	r2, [r3, #0]
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  4016ce:	4b0c      	ldr	r3, [pc, #48]	; (401700 <SystemCoreClockUpdate+0xf4>)
  4016d0:	6a1b      	ldr	r3, [r3, #32]
  4016d2:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4016d6:	2b10      	cmp	r3, #16
  4016d8:	d005      	beq.n	4016e6 <SystemCoreClockUpdate+0xda>
  4016da:	2b20      	cmp	r3, #32
  4016dc:	d1de      	bne.n	40169c <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  4016de:	4a0b      	ldr	r2, [pc, #44]	; (40170c <SystemCoreClockUpdate+0x100>)
  4016e0:	4b09      	ldr	r3, [pc, #36]	; (401708 <SystemCoreClockUpdate+0xfc>)
  4016e2:	601a      	str	r2, [r3, #0]
					break;
  4016e4:	e7da      	b.n	40169c <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  4016e6:	4a0b      	ldr	r2, [pc, #44]	; (401714 <SystemCoreClockUpdate+0x108>)
  4016e8:	4b07      	ldr	r3, [pc, #28]	; (401708 <SystemCoreClockUpdate+0xfc>)
  4016ea:	601a      	str	r2, [r3, #0]
					break;
  4016ec:	e7d6      	b.n	40169c <SystemCoreClockUpdate+0x90>
		SystemCoreClock /= 3U;
  4016ee:	4a06      	ldr	r2, [pc, #24]	; (401708 <SystemCoreClockUpdate+0xfc>)
  4016f0:	6813      	ldr	r3, [r2, #0]
  4016f2:	4909      	ldr	r1, [pc, #36]	; (401718 <SystemCoreClockUpdate+0x10c>)
  4016f4:	fba1 1303 	umull	r1, r3, r1, r3
  4016f8:	085b      	lsrs	r3, r3, #1
  4016fa:	6013      	str	r3, [r2, #0]
  4016fc:	4770      	bx	lr
  4016fe:	bf00      	nop
  401700:	400e0400 	.word	0x400e0400
  401704:	400e1410 	.word	0x400e1410
  401708:	2000000c 	.word	0x2000000c
  40170c:	00b71b00 	.word	0x00b71b00
  401710:	003d0900 	.word	0x003d0900
  401714:	007a1200 	.word	0x007a1200
  401718:	aaaaaaab 	.word	0xaaaaaaab

0040171c <system_init_flash>:
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
#if !defined(ID_EFC1)
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  40171c:	4b12      	ldr	r3, [pc, #72]	; (401768 <system_init_flash+0x4c>)
  40171e:	4298      	cmp	r0, r3
  401720:	d911      	bls.n	401746 <system_init_flash+0x2a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  401722:	4b12      	ldr	r3, [pc, #72]	; (40176c <system_init_flash+0x50>)
  401724:	4298      	cmp	r0, r3
  401726:	d913      	bls.n	401750 <system_init_flash+0x34>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  401728:	4b11      	ldr	r3, [pc, #68]	; (401770 <system_init_flash+0x54>)
  40172a:	4298      	cmp	r0, r3
  40172c:	d914      	bls.n	401758 <system_init_flash+0x3c>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  40172e:	4b11      	ldr	r3, [pc, #68]	; (401774 <system_init_flash+0x58>)
  401730:	4298      	cmp	r0, r3
  401732:	d915      	bls.n	401760 <system_init_flash+0x44>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  401734:	4b10      	ldr	r3, [pc, #64]	; (401778 <system_init_flash+0x5c>)
  401736:	4298      	cmp	r0, r3
					EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  401738:	bf94      	ite	ls
  40173a:	f04f 2204 	movls.w	r2, #67109888	; 0x4000400
					} else {
					EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  40173e:	4a0f      	ldrhi	r2, [pc, #60]	; (40177c <system_init_flash+0x60>)
  401740:	4b0f      	ldr	r3, [pc, #60]	; (401780 <system_init_flash+0x64>)
  401742:	601a      	str	r2, [r3, #0]
  401744:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  401746:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  40174a:	4b0d      	ldr	r3, [pc, #52]	; (401780 <system_init_flash+0x64>)
  40174c:	601a      	str	r2, [r3, #0]
  40174e:	4770      	bx	lr
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  401750:	4a0c      	ldr	r2, [pc, #48]	; (401784 <system_init_flash+0x68>)
  401752:	4b0b      	ldr	r3, [pc, #44]	; (401780 <system_init_flash+0x64>)
  401754:	601a      	str	r2, [r3, #0]
  401756:	4770      	bx	lr
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  401758:	4a0b      	ldr	r2, [pc, #44]	; (401788 <system_init_flash+0x6c>)
  40175a:	4b09      	ldr	r3, [pc, #36]	; (401780 <system_init_flash+0x64>)
  40175c:	601a      	str	r2, [r3, #0]
  40175e:	4770      	bx	lr
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  401760:	4a0a      	ldr	r2, [pc, #40]	; (40178c <system_init_flash+0x70>)
  401762:	4b07      	ldr	r3, [pc, #28]	; (401780 <system_init_flash+0x64>)
  401764:	601a      	str	r2, [r3, #0]
  401766:	4770      	bx	lr
  401768:	01312cff 	.word	0x01312cff
  40176c:	026259ff 	.word	0x026259ff
  401770:	039386ff 	.word	0x039386ff
  401774:	04c4b3ff 	.word	0x04c4b3ff
  401778:	05f5e0ff 	.word	0x05f5e0ff
  40177c:	04000500 	.word	0x04000500
  401780:	400e0a00 	.word	0x400e0a00
  401784:	04000100 	.word	0x04000100
  401788:	04000200 	.word	0x04000200
  40178c:	04000300 	.word	0x04000300

00401790 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  401790:	4b0a      	ldr	r3, [pc, #40]	; (4017bc <_sbrk+0x2c>)
  401792:	681b      	ldr	r3, [r3, #0]
  401794:	b153      	cbz	r3, 4017ac <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  401796:	4b09      	ldr	r3, [pc, #36]	; (4017bc <_sbrk+0x2c>)
  401798:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  40179a:	181a      	adds	r2, r3, r0
  40179c:	4908      	ldr	r1, [pc, #32]	; (4017c0 <_sbrk+0x30>)
  40179e:	4291      	cmp	r1, r2
  4017a0:	db08      	blt.n	4017b4 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  4017a2:	4610      	mov	r0, r2
  4017a4:	4a05      	ldr	r2, [pc, #20]	; (4017bc <_sbrk+0x2c>)
  4017a6:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  4017a8:	4618      	mov	r0, r3
  4017aa:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  4017ac:	4a05      	ldr	r2, [pc, #20]	; (4017c4 <_sbrk+0x34>)
  4017ae:	4b03      	ldr	r3, [pc, #12]	; (4017bc <_sbrk+0x2c>)
  4017b0:	601a      	str	r2, [r3, #0]
  4017b2:	e7f0      	b.n	401796 <_sbrk+0x6>
		return (caddr_t) -1;	
  4017b4:	f04f 30ff 	mov.w	r0, #4294967295
}
  4017b8:	4770      	bx	lr
  4017ba:	bf00      	nop
  4017bc:	20000a88 	.word	0x20000a88
  4017c0:	2001fffc 	.word	0x2001fffc
  4017c4:	2001c578 	.word	0x2001c578

004017c8 <main>:
#include "camera.h"
#include "timer_interface.h"
#include "camera_helper/ov2640.h"
#include <asf.h>

int main(void) {
  4017c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	// Initialize clock and board definitions
	sysclk_init();
  4017cc:	4b38      	ldr	r3, [pc, #224]	; (4018b0 <main+0xe8>)
  4017ce:	4798      	blx	r3
	board_init();
  4017d0:	4b38      	ldr	r3, [pc, #224]	; (4018b4 <main+0xec>)
  4017d2:	4798      	blx	r3
	wdt_disable(WDT);
  4017d4:	4838      	ldr	r0, [pc, #224]	; (4018b8 <main+0xf0>)
  4017d6:	4b39      	ldr	r3, [pc, #228]	; (4018bc <main+0xf4>)
  4017d8:	4798      	blx	r3
	
	// Configure and start the Timer
	configure_tc();
  4017da:	4b39      	ldr	r3, [pc, #228]	; (4018c0 <main+0xf8>)
  4017dc:	4798      	blx	r3
	
	// Configure WiFi USART, SPI, and pins
	configure_usart_wifi();
  4017de:	4b39      	ldr	r3, [pc, #228]	; (4018c4 <main+0xfc>)
  4017e0:	4798      	blx	r3
	configure_spi();
  4017e2:	4b39      	ldr	r3, [pc, #228]	; (4018c8 <main+0x100>)
  4017e4:	4798      	blx	r3
	configure_wifi_comm_pin();
  4017e6:	4b39      	ldr	r3, [pc, #228]	; (4018cc <main+0x104>)
  4017e8:	4798      	blx	r3
	configure_wifi_provision_pin();
  4017ea:	4b39      	ldr	r3, [pc, #228]	; (4018d0 <main+0x108>)
  4017ec:	4798      	blx	r3
	spi_peripheral_initialize();
  4017ee:	4b39      	ldr	r3, [pc, #228]	; (4018d4 <main+0x10c>)
  4017f0:	4798      	blx	r3
	
	// Initialize and configure camera
	init_camera();
  4017f2:	4b39      	ldr	r3, [pc, #228]	; (4018d8 <main+0x110>)
  4017f4:	4798      	blx	r3
	configure_camera();
  4017f6:	4b39      	ldr	r3, [pc, #228]	; (4018dc <main+0x114>)
  4017f8:	4798      	blx	r3
	
	// Test write_wifi_command
	// write_wifi_command("ver\r\n", 5);
	// Config indicators
	write_wifi_command("set wlan_gpio 25\r\n", 5);
  4017fa:	2105      	movs	r1, #5
  4017fc:	4838      	ldr	r0, [pc, #224]	; (4018e0 <main+0x118>)
  4017fe:	4c39      	ldr	r4, [pc, #228]	; (4018e4 <main+0x11c>)
  401800:	47a0      	blx	r4
 	write_wifi_command("set websocket_gpio 26\r\n", 5);
  401802:	2105      	movs	r1, #5
  401804:	4838      	ldr	r0, [pc, #224]	; (4018e8 <main+0x120>)
  401806:	47a0      	blx	r4
	 write_wifi_command("get mac\r\n", 5);
  401808:	2105      	movs	r1, #5
  40180a:	4838      	ldr	r0, [pc, #224]	; (4018ec <main+0x124>)
  40180c:	47a0      	blx	r4
	write_wifi_command("set ap_gpio 27\r\n", 5);
  40180e:	2105      	movs	r1, #5
  401810:	4837      	ldr	r0, [pc, #220]	; (4018f0 <main+0x128>)
  401812:	47a0      	blx	r4
	// Config GPIOs
	write_wifi_command("set comm_gpio 21\r\n", 5);
  401814:	2105      	movs	r1, #5
  401816:	4837      	ldr	r0, [pc, #220]	; (4018f4 <main+0x12c>)
  401818:	47a0      	blx	r4
	write_wifi_command("set clients_gpio 32\r\n", 5);
  40181a:	2105      	movs	r1, #5
  40181c:	4836      	ldr	r0, [pc, #216]	; (4018f8 <main+0x130>)
  40181e:	47a0      	blx	r4
	write_wifi_command("set net_gpio 22\r\n", 5);
  401820:	2105      	movs	r1, #5
  401822:	4836      	ldr	r0, [pc, #216]	; (4018fc <main+0x134>)
  401824:	47a0      	blx	r4
	// Set SPI baud rate
	write_wifi_command("set spi_baud 100000\r\n", 5);
  401826:	2105      	movs	r1, #5
  401828:	4835      	ldr	r0, [pc, #212]	; (401900 <main+0x138>)
  40182a:	47a0      	blx	r4
	
	
	// Send test command to WiFi module
	while (!(success_flag == 1)) {
  40182c:	4b35      	ldr	r3, [pc, #212]	; (401904 <main+0x13c>)
  40182e:	781b      	ldrb	r3, [r3, #0]
  401830:	b2db      	uxtb	r3, r3
  401832:	2b01      	cmp	r3, #1
  401834:	d01b      	beq.n	40186e <main+0xa6>
		write_wifi_command("test\r\n", 10);
  401836:	4f34      	ldr	r7, [pc, #208]	; (401908 <main+0x140>)
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  401838:	4c34      	ldr	r4, [pc, #208]	; (40190c <main+0x144>)
		}
		
		ioport_set_pin_level(WIFI_RESET, false);
		delay_ms(100);
		ioport_set_pin_level(WIFI_RESET, true);
		delay_ms(10000);
  40183a:	4e35      	ldr	r6, [pc, #212]	; (401910 <main+0x148>)
		write_wifi_command("test\r\n", 10);
  40183c:	210a      	movs	r1, #10
  40183e:	4638      	mov	r0, r7
  401840:	4b28      	ldr	r3, [pc, #160]	; (4018e4 <main+0x11c>)
  401842:	4798      	blx	r3
		if (success_flag == 1) {
  401844:	4b2f      	ldr	r3, [pc, #188]	; (401904 <main+0x13c>)
  401846:	781b      	ldrb	r3, [r3, #0]
  401848:	b2db      	uxtb	r3, r3
  40184a:	2b01      	cmp	r3, #1
  40184c:	d00f      	beq.n	40186e <main+0xa6>
  40184e:	f44f 2800 	mov.w	r8, #524288	; 0x80000
  401852:	f8c4 8034 	str.w	r8, [r4, #52]	; 0x34
		delay_ms(100);
  401856:	482f      	ldr	r0, [pc, #188]	; (401914 <main+0x14c>)
  401858:	4d2f      	ldr	r5, [pc, #188]	; (401918 <main+0x150>)
  40185a:	47a8      	blx	r5
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  40185c:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
		delay_ms(10000);
  401860:	4630      	mov	r0, r6
  401862:	47a8      	blx	r5
	while (!(success_flag == 1)) {
  401864:	4b27      	ldr	r3, [pc, #156]	; (401904 <main+0x13c>)
  401866:	781b      	ldrb	r3, [r3, #0]
  401868:	b2db      	uxtb	r3, r3
  40186a:	2b01      	cmp	r3, #1
  40186c:	d1e6      	bne.n	40183c <main+0x74>
	}
	
	while (1){
		if (provision_flag){
  40186e:	4d2b      	ldr	r5, [pc, #172]	; (40191c <main+0x154>)
	}
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
  401870:	4c26      	ldr	r4, [pc, #152]	; (40190c <main+0x144>)
					
					if (!ioport_get_pin_level(WIFI_GPIO_32)){ // check clients pin
						continue;
					}
						
		if (start_capture()){
  401872:	4e2b      	ldr	r6, [pc, #172]	; (401920 <main+0x158>)
  401874:	e008      	b.n	401888 <main+0xc0>
  401876:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  401878:	6be3      	ldr	r3, [r4, #60]	; 0x3c
					if (!ioport_get_pin_level(WIFI_GPIO_22)){ // check network pin
  40187a:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
  40187e:	d003      	beq.n	401888 <main+0xc0>
  401880:	6be3      	ldr	r3, [r4, #60]	; 0x3c
					if (!ioport_get_pin_level(WIFI_GPIO_32)){ // check clients pin
  401882:	f413 7f00 	tst.w	r3, #512	; 0x200
  401886:	d10d      	bne.n	4018a4 <main+0xdc>
		if (provision_flag){
  401888:	782b      	ldrb	r3, [r5, #0]
  40188a:	2b00      	cmp	r3, #0
  40188c:	d0f3      	beq.n	401876 <main+0xae>
			write_wifi_command("provision\r\n", 5);
  40188e:	2105      	movs	r1, #5
  401890:	4824      	ldr	r0, [pc, #144]	; (401924 <main+0x15c>)
  401892:	4b14      	ldr	r3, [pc, #80]	; (4018e4 <main+0x11c>)
  401894:	4798      	blx	r3
			provision_flag = false;
  401896:	2300      	movs	r3, #0
  401898:	702b      	strb	r3, [r5, #0]
  40189a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
			while (!ioport_get_pin_level(WIFI_GPIO_22)){ // check network pin
  40189c:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
  4018a0:	d0fb      	beq.n	40189a <main+0xd2>
  4018a2:	e7f1      	b.n	401888 <main+0xc0>
		if (start_capture()){
  4018a4:	47b0      	blx	r6
  4018a6:	2800      	cmp	r0, #0
  4018a8:	d0ee      	beq.n	401888 <main+0xc0>
			write_image_to_web();
  4018aa:	4b1f      	ldr	r3, [pc, #124]	; (401928 <main+0x160>)
  4018ac:	4798      	blx	r3
  4018ae:	e7eb      	b.n	401888 <main+0xc0>
  4018b0:	00400139 	.word	0x00400139
  4018b4:	00401525 	.word	0x00401525
  4018b8:	400e1450 	.word	0x400e1450
  4018bc:	00400b61 	.word	0x00400b61
  4018c0:	00401151 	.word	0x00401151
  4018c4:	0040128d 	.word	0x0040128d
  4018c8:	004013d1 	.word	0x004013d1
  4018cc:	00401329 	.word	0x00401329
  4018d0:	00401375 	.word	0x00401375
  4018d4:	0040141d 	.word	0x0040141d
  4018d8:	00400ce1 	.word	0x00400ce1
  4018dc:	00400cb9 	.word	0x00400cb9
  4018e0:	0040747c 	.word	0x0040747c
  4018e4:	004014a9 	.word	0x004014a9
  4018e8:	00407490 	.word	0x00407490
  4018ec:	004074a8 	.word	0x004074a8
  4018f0:	004074b4 	.word	0x004074b4
  4018f4:	004074c8 	.word	0x004074c8
  4018f8:	004074dc 	.word	0x004074dc
  4018fc:	004074f4 	.word	0x004074f4
  401900:	00407508 	.word	0x00407508
  401904:	20000a74 	.word	0x20000a74
  401908:	00407520 	.word	0x00407520
  40190c:	400e0e00 	.word	0x400e0e00
  401910:	051be56e 	.word	0x051be56e
  401914:	000d1437 	.word	0x000d1437
  401918:	20000001 	.word	0x20000001
  40191c:	20000a6d 	.word	0x20000a6d
  401920:	00400e41 	.word	0x00400e41
  401924:	00407528 	.word	0x00407528
  401928:	004014e5 	.word	0x004014e5

0040192c <__libc_init_array>:
  40192c:	b570      	push	{r4, r5, r6, lr}
  40192e:	4e0f      	ldr	r6, [pc, #60]	; (40196c <__libc_init_array+0x40>)
  401930:	4d0f      	ldr	r5, [pc, #60]	; (401970 <__libc_init_array+0x44>)
  401932:	1b76      	subs	r6, r6, r5
  401934:	10b6      	asrs	r6, r6, #2
  401936:	bf18      	it	ne
  401938:	2400      	movne	r4, #0
  40193a:	d005      	beq.n	401948 <__libc_init_array+0x1c>
  40193c:	3401      	adds	r4, #1
  40193e:	f855 3b04 	ldr.w	r3, [r5], #4
  401942:	4798      	blx	r3
  401944:	42a6      	cmp	r6, r4
  401946:	d1f9      	bne.n	40193c <__libc_init_array+0x10>
  401948:	4e0a      	ldr	r6, [pc, #40]	; (401974 <__libc_init_array+0x48>)
  40194a:	4d0b      	ldr	r5, [pc, #44]	; (401978 <__libc_init_array+0x4c>)
  40194c:	1b76      	subs	r6, r6, r5
  40194e:	f005 ff37 	bl	4077c0 <_init>
  401952:	10b6      	asrs	r6, r6, #2
  401954:	bf18      	it	ne
  401956:	2400      	movne	r4, #0
  401958:	d006      	beq.n	401968 <__libc_init_array+0x3c>
  40195a:	3401      	adds	r4, #1
  40195c:	f855 3b04 	ldr.w	r3, [r5], #4
  401960:	4798      	blx	r3
  401962:	42a6      	cmp	r6, r4
  401964:	d1f9      	bne.n	40195a <__libc_init_array+0x2e>
  401966:	bd70      	pop	{r4, r5, r6, pc}
  401968:	bd70      	pop	{r4, r5, r6, pc}
  40196a:	bf00      	nop
  40196c:	004077cc 	.word	0x004077cc
  401970:	004077cc 	.word	0x004077cc
  401974:	004077d4 	.word	0x004077d4
  401978:	004077cc 	.word	0x004077cc

0040197c <memset>:
  40197c:	b470      	push	{r4, r5, r6}
  40197e:	0786      	lsls	r6, r0, #30
  401980:	d046      	beq.n	401a10 <memset+0x94>
  401982:	1e54      	subs	r4, r2, #1
  401984:	2a00      	cmp	r2, #0
  401986:	d041      	beq.n	401a0c <memset+0x90>
  401988:	b2ca      	uxtb	r2, r1
  40198a:	4603      	mov	r3, r0
  40198c:	e002      	b.n	401994 <memset+0x18>
  40198e:	f114 34ff 	adds.w	r4, r4, #4294967295
  401992:	d33b      	bcc.n	401a0c <memset+0x90>
  401994:	f803 2b01 	strb.w	r2, [r3], #1
  401998:	079d      	lsls	r5, r3, #30
  40199a:	d1f8      	bne.n	40198e <memset+0x12>
  40199c:	2c03      	cmp	r4, #3
  40199e:	d92e      	bls.n	4019fe <memset+0x82>
  4019a0:	b2cd      	uxtb	r5, r1
  4019a2:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  4019a6:	2c0f      	cmp	r4, #15
  4019a8:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  4019ac:	d919      	bls.n	4019e2 <memset+0x66>
  4019ae:	f103 0210 	add.w	r2, r3, #16
  4019b2:	4626      	mov	r6, r4
  4019b4:	3e10      	subs	r6, #16
  4019b6:	2e0f      	cmp	r6, #15
  4019b8:	f842 5c10 	str.w	r5, [r2, #-16]
  4019bc:	f842 5c0c 	str.w	r5, [r2, #-12]
  4019c0:	f842 5c08 	str.w	r5, [r2, #-8]
  4019c4:	f842 5c04 	str.w	r5, [r2, #-4]
  4019c8:	f102 0210 	add.w	r2, r2, #16
  4019cc:	d8f2      	bhi.n	4019b4 <memset+0x38>
  4019ce:	f1a4 0210 	sub.w	r2, r4, #16
  4019d2:	f022 020f 	bic.w	r2, r2, #15
  4019d6:	f004 040f 	and.w	r4, r4, #15
  4019da:	3210      	adds	r2, #16
  4019dc:	2c03      	cmp	r4, #3
  4019de:	4413      	add	r3, r2
  4019e0:	d90d      	bls.n	4019fe <memset+0x82>
  4019e2:	461e      	mov	r6, r3
  4019e4:	4622      	mov	r2, r4
  4019e6:	3a04      	subs	r2, #4
  4019e8:	2a03      	cmp	r2, #3
  4019ea:	f846 5b04 	str.w	r5, [r6], #4
  4019ee:	d8fa      	bhi.n	4019e6 <memset+0x6a>
  4019f0:	1f22      	subs	r2, r4, #4
  4019f2:	f022 0203 	bic.w	r2, r2, #3
  4019f6:	3204      	adds	r2, #4
  4019f8:	4413      	add	r3, r2
  4019fa:	f004 0403 	and.w	r4, r4, #3
  4019fe:	b12c      	cbz	r4, 401a0c <memset+0x90>
  401a00:	b2c9      	uxtb	r1, r1
  401a02:	441c      	add	r4, r3
  401a04:	f803 1b01 	strb.w	r1, [r3], #1
  401a08:	429c      	cmp	r4, r3
  401a0a:	d1fb      	bne.n	401a04 <memset+0x88>
  401a0c:	bc70      	pop	{r4, r5, r6}
  401a0e:	4770      	bx	lr
  401a10:	4614      	mov	r4, r2
  401a12:	4603      	mov	r3, r0
  401a14:	e7c2      	b.n	40199c <memset+0x20>
  401a16:	bf00      	nop

00401a18 <sprintf>:
  401a18:	b40e      	push	{r1, r2, r3}
  401a1a:	b5f0      	push	{r4, r5, r6, r7, lr}
  401a1c:	b09c      	sub	sp, #112	; 0x70
  401a1e:	ab21      	add	r3, sp, #132	; 0x84
  401a20:	490f      	ldr	r1, [pc, #60]	; (401a60 <sprintf+0x48>)
  401a22:	f853 2b04 	ldr.w	r2, [r3], #4
  401a26:	9301      	str	r3, [sp, #4]
  401a28:	4605      	mov	r5, r0
  401a2a:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  401a2e:	6808      	ldr	r0, [r1, #0]
  401a30:	9502      	str	r5, [sp, #8]
  401a32:	f44f 7702 	mov.w	r7, #520	; 0x208
  401a36:	f64f 76ff 	movw	r6, #65535	; 0xffff
  401a3a:	a902      	add	r1, sp, #8
  401a3c:	9506      	str	r5, [sp, #24]
  401a3e:	f8ad 7014 	strh.w	r7, [sp, #20]
  401a42:	9404      	str	r4, [sp, #16]
  401a44:	9407      	str	r4, [sp, #28]
  401a46:	f8ad 6016 	strh.w	r6, [sp, #22]
  401a4a:	f000 fa6f 	bl	401f2c <_svfprintf_r>
  401a4e:	9b02      	ldr	r3, [sp, #8]
  401a50:	2200      	movs	r2, #0
  401a52:	701a      	strb	r2, [r3, #0]
  401a54:	b01c      	add	sp, #112	; 0x70
  401a56:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  401a5a:	b003      	add	sp, #12
  401a5c:	4770      	bx	lr
  401a5e:	bf00      	nop
  401a60:	20000010 	.word	0x20000010

00401a64 <critical_factorization>:
  401a64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401a68:	f04f 0e01 	mov.w	lr, #1
  401a6c:	4674      	mov	r4, lr
  401a6e:	2500      	movs	r5, #0
  401a70:	f04f 36ff 	mov.w	r6, #4294967295
  401a74:	192b      	adds	r3, r5, r4
  401a76:	428b      	cmp	r3, r1
  401a78:	eb00 0706 	add.w	r7, r0, r6
  401a7c:	d20d      	bcs.n	401a9a <critical_factorization+0x36>
  401a7e:	5d3f      	ldrb	r7, [r7, r4]
  401a80:	f810 c003 	ldrb.w	ip, [r0, r3]
  401a84:	45bc      	cmp	ip, r7
  401a86:	d22d      	bcs.n	401ae4 <critical_factorization+0x80>
  401a88:	461d      	mov	r5, r3
  401a8a:	2401      	movs	r4, #1
  401a8c:	eba3 0e06 	sub.w	lr, r3, r6
  401a90:	192b      	adds	r3, r5, r4
  401a92:	428b      	cmp	r3, r1
  401a94:	eb00 0706 	add.w	r7, r0, r6
  401a98:	d3f1      	bcc.n	401a7e <critical_factorization+0x1a>
  401a9a:	f04f 0801 	mov.w	r8, #1
  401a9e:	f8c2 e000 	str.w	lr, [r2]
  401aa2:	4644      	mov	r4, r8
  401aa4:	2500      	movs	r5, #0
  401aa6:	f04f 37ff 	mov.w	r7, #4294967295
  401aaa:	192b      	adds	r3, r5, r4
  401aac:	4299      	cmp	r1, r3
  401aae:	eb00 0e07 	add.w	lr, r0, r7
  401ab2:	d90e      	bls.n	401ad2 <critical_factorization+0x6e>
  401ab4:	f81e e004 	ldrb.w	lr, [lr, r4]
  401ab8:	f810 c003 	ldrb.w	ip, [r0, r3]
  401abc:	45f4      	cmp	ip, lr
  401abe:	d918      	bls.n	401af2 <critical_factorization+0x8e>
  401ac0:	461d      	mov	r5, r3
  401ac2:	2401      	movs	r4, #1
  401ac4:	eba3 0807 	sub.w	r8, r3, r7
  401ac8:	192b      	adds	r3, r5, r4
  401aca:	4299      	cmp	r1, r3
  401acc:	eb00 0e07 	add.w	lr, r0, r7
  401ad0:	d8f0      	bhi.n	401ab4 <critical_factorization+0x50>
  401ad2:	3701      	adds	r7, #1
  401ad4:	1c70      	adds	r0, r6, #1
  401ad6:	4287      	cmp	r7, r0
  401ad8:	bf24      	itt	cs
  401ada:	f8c2 8000 	strcs.w	r8, [r2]
  401ade:	4638      	movcs	r0, r7
  401ae0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401ae4:	d00c      	beq.n	401b00 <critical_factorization+0x9c>
  401ae6:	f04f 0e01 	mov.w	lr, #1
  401aea:	462e      	mov	r6, r5
  401aec:	4674      	mov	r4, lr
  401aee:	4475      	add	r5, lr
  401af0:	e7c0      	b.n	401a74 <critical_factorization+0x10>
  401af2:	d00b      	beq.n	401b0c <critical_factorization+0xa8>
  401af4:	f04f 0801 	mov.w	r8, #1
  401af8:	462f      	mov	r7, r5
  401afa:	4644      	mov	r4, r8
  401afc:	4445      	add	r5, r8
  401afe:	e7d4      	b.n	401aaa <critical_factorization+0x46>
  401b00:	4574      	cmp	r4, lr
  401b02:	bf12      	itee	ne
  401b04:	3401      	addne	r4, #1
  401b06:	461d      	moveq	r5, r3
  401b08:	2401      	moveq	r4, #1
  401b0a:	e7b3      	b.n	401a74 <critical_factorization+0x10>
  401b0c:	4544      	cmp	r4, r8
  401b0e:	bf12      	itee	ne
  401b10:	3401      	addne	r4, #1
  401b12:	461d      	moveq	r5, r3
  401b14:	2401      	moveq	r4, #1
  401b16:	e7c8      	b.n	401aaa <critical_factorization+0x46>

00401b18 <two_way_long_needle>:
  401b18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401b1c:	f2ad 4d14 	subw	sp, sp, #1044	; 0x414
  401b20:	4616      	mov	r6, r2
  401b22:	4605      	mov	r5, r0
  401b24:	468b      	mov	fp, r1
  401b26:	4610      	mov	r0, r2
  401b28:	4619      	mov	r1, r3
  401b2a:	aa03      	add	r2, sp, #12
  401b2c:	461c      	mov	r4, r3
  401b2e:	f7ff ff99 	bl	401a64 <critical_factorization>
  401b32:	ab03      	add	r3, sp, #12
  401b34:	4681      	mov	r9, r0
  401b36:	f20d 420c 	addw	r2, sp, #1036	; 0x40c
  401b3a:	f843 4f04 	str.w	r4, [r3, #4]!
  401b3e:	4293      	cmp	r3, r2
  401b40:	d1fb      	bne.n	401b3a <two_way_long_needle+0x22>
  401b42:	b14c      	cbz	r4, 401b58 <two_way_long_needle+0x40>
  401b44:	1e63      	subs	r3, r4, #1
  401b46:	1e72      	subs	r2, r6, #1
  401b48:	a804      	add	r0, sp, #16
  401b4a:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  401b4e:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
  401b52:	f113 33ff 	adds.w	r3, r3, #4294967295
  401b56:	d2f8      	bcs.n	401b4a <two_way_long_needle+0x32>
  401b58:	9903      	ldr	r1, [sp, #12]
  401b5a:	464a      	mov	r2, r9
  401b5c:	4431      	add	r1, r6
  401b5e:	4630      	mov	r0, r6
  401b60:	f002 ff0e 	bl	404980 <memcmp>
  401b64:	2800      	cmp	r0, #0
  401b66:	d16f      	bne.n	401c48 <two_way_long_needle+0x130>
  401b68:	f109 33ff 	add.w	r3, r9, #4294967295
  401b6c:	9300      	str	r3, [sp, #0]
  401b6e:	18f3      	adds	r3, r6, r3
  401b70:	4682      	mov	sl, r0
  401b72:	9301      	str	r3, [sp, #4]
  401b74:	4623      	mov	r3, r4
  401b76:	4680      	mov	r8, r0
  401b78:	4654      	mov	r4, sl
  401b7a:	4658      	mov	r0, fp
  401b7c:	469a      	mov	sl, r3
  401b7e:	eb08 070a 	add.w	r7, r8, sl
  401b82:	1a3a      	subs	r2, r7, r0
  401b84:	2100      	movs	r1, #0
  401b86:	4428      	add	r0, r5
  401b88:	f002 feaa 	bl	4048e0 <memchr>
  401b8c:	2800      	cmp	r0, #0
  401b8e:	d156      	bne.n	401c3e <two_way_long_needle+0x126>
  401b90:	2f00      	cmp	r7, #0
  401b92:	d054      	beq.n	401c3e <two_way_long_needle+0x126>
  401b94:	19eb      	adds	r3, r5, r7
  401b96:	aa04      	add	r2, sp, #16
  401b98:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  401b9c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  401ba0:	b14b      	cbz	r3, 401bb6 <two_way_long_needle+0x9e>
  401ba2:	b124      	cbz	r4, 401bae <two_way_long_needle+0x96>
  401ba4:	9a03      	ldr	r2, [sp, #12]
  401ba6:	4293      	cmp	r3, r2
  401ba8:	d201      	bcs.n	401bae <two_way_long_needle+0x96>
  401baa:	ebaa 0302 	sub.w	r3, sl, r2
  401bae:	4498      	add	r8, r3
  401bb0:	2400      	movs	r4, #0
  401bb2:	4638      	mov	r0, r7
  401bb4:	e7e3      	b.n	401b7e <two_way_long_needle+0x66>
  401bb6:	454c      	cmp	r4, r9
  401bb8:	4623      	mov	r3, r4
  401bba:	f10a 3eff 	add.w	lr, sl, #4294967295
  401bbe:	bf38      	it	cc
  401bc0:	464b      	movcc	r3, r9
  401bc2:	4573      	cmp	r3, lr
  401bc4:	d213      	bcs.n	401bee <two_way_long_needle+0xd6>
  401bc6:	eb08 0203 	add.w	r2, r8, r3
  401bca:	f816 c003 	ldrb.w	ip, [r6, r3]
  401bce:	5ca8      	ldrb	r0, [r5, r2]
  401bd0:	4584      	cmp	ip, r0
  401bd2:	442a      	add	r2, r5
  401bd4:	eb06 0103 	add.w	r1, r6, r3
  401bd8:	d006      	beq.n	401be8 <two_way_long_needle+0xd0>
  401bda:	e02c      	b.n	401c36 <two_way_long_needle+0x11e>
  401bdc:	f811 cf01 	ldrb.w	ip, [r1, #1]!
  401be0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  401be4:	4584      	cmp	ip, r0
  401be6:	d126      	bne.n	401c36 <two_way_long_needle+0x11e>
  401be8:	3301      	adds	r3, #1
  401bea:	4573      	cmp	r3, lr
  401bec:	d3f6      	bcc.n	401bdc <two_way_long_needle+0xc4>
  401bee:	454c      	cmp	r4, r9
  401bf0:	9900      	ldr	r1, [sp, #0]
  401bf2:	f080 8089 	bcs.w	401d08 <two_way_long_needle+0x1f0>
  401bf6:	9b00      	ldr	r3, [sp, #0]
  401bf8:	eb08 0203 	add.w	r2, r8, r3
  401bfc:	9b01      	ldr	r3, [sp, #4]
  401bfe:	5ca8      	ldrb	r0, [r5, r2]
  401c00:	781b      	ldrb	r3, [r3, #0]
  401c02:	4298      	cmp	r0, r3
  401c04:	442a      	add	r2, r5
  401c06:	d17f      	bne.n	401d08 <two_way_long_needle+0x1f0>
  401c08:	9801      	ldr	r0, [sp, #4]
  401c0a:	f104 3bff 	add.w	fp, r4, #4294967295
  401c0e:	e006      	b.n	401c1e <two_way_long_needle+0x106>
  401c10:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  401c14:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  401c18:	45f4      	cmp	ip, lr
  401c1a:	d103      	bne.n	401c24 <two_way_long_needle+0x10c>
  401c1c:	4619      	mov	r1, r3
  401c1e:	1e4b      	subs	r3, r1, #1
  401c20:	459b      	cmp	fp, r3
  401c22:	d1f5      	bne.n	401c10 <two_way_long_needle+0xf8>
  401c24:	3401      	adds	r4, #1
  401c26:	428c      	cmp	r4, r1
  401c28:	d870      	bhi.n	401d0c <two_way_long_needle+0x1f4>
  401c2a:	9c03      	ldr	r4, [sp, #12]
  401c2c:	4638      	mov	r0, r7
  401c2e:	44a0      	add	r8, r4
  401c30:	ebaa 0404 	sub.w	r4, sl, r4
  401c34:	e7a3      	b.n	401b7e <two_way_long_needle+0x66>
  401c36:	f1c9 0201 	rsb	r2, r9, #1
  401c3a:	4490      	add	r8, r2
  401c3c:	e7b7      	b.n	401bae <two_way_long_needle+0x96>
  401c3e:	2000      	movs	r0, #0
  401c40:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  401c44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401c48:	eba4 0309 	sub.w	r3, r4, r9
  401c4c:	454b      	cmp	r3, r9
  401c4e:	bf38      	it	cc
  401c50:	464b      	movcc	r3, r9
  401c52:	3301      	adds	r3, #1
  401c54:	f109 38ff 	add.w	r8, r9, #4294967295
  401c58:	9303      	str	r3, [sp, #12]
  401c5a:	eb06 0308 	add.w	r3, r6, r8
  401c5e:	4658      	mov	r0, fp
  401c60:	f04f 0a00 	mov.w	sl, #0
  401c64:	46cb      	mov	fp, r9
  401c66:	4699      	mov	r9, r3
  401c68:	eb0a 0704 	add.w	r7, sl, r4
  401c6c:	1a3a      	subs	r2, r7, r0
  401c6e:	2100      	movs	r1, #0
  401c70:	4428      	add	r0, r5
  401c72:	f002 fe35 	bl	4048e0 <memchr>
  401c76:	2800      	cmp	r0, #0
  401c78:	d1e1      	bne.n	401c3e <two_way_long_needle+0x126>
  401c7a:	2f00      	cmp	r7, #0
  401c7c:	d0df      	beq.n	401c3e <two_way_long_needle+0x126>
  401c7e:	19eb      	adds	r3, r5, r7
  401c80:	aa04      	add	r2, sp, #16
  401c82:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  401c86:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  401c8a:	bba3      	cbnz	r3, 401cf6 <two_way_long_needle+0x1de>
  401c8c:	1e61      	subs	r1, r4, #1
  401c8e:	458b      	cmp	fp, r1
  401c90:	d215      	bcs.n	401cbe <two_way_long_needle+0x1a6>
  401c92:	eb0a 020b 	add.w	r2, sl, fp
  401c96:	f816 300b 	ldrb.w	r3, [r6, fp]
  401c9a:	f815 e002 	ldrb.w	lr, [r5, r2]
  401c9e:	459e      	cmp	lr, r3
  401ca0:	442a      	add	r2, r5
  401ca2:	eb06 000b 	add.w	r0, r6, fp
  401ca6:	465b      	mov	r3, fp
  401ca8:	d006      	beq.n	401cb8 <two_way_long_needle+0x1a0>
  401caa:	e027      	b.n	401cfc <two_way_long_needle+0x1e4>
  401cac:	f810 cf01 	ldrb.w	ip, [r0, #1]!
  401cb0:	f812 ef01 	ldrb.w	lr, [r2, #1]!
  401cb4:	45f4      	cmp	ip, lr
  401cb6:	d121      	bne.n	401cfc <two_way_long_needle+0x1e4>
  401cb8:	3301      	adds	r3, #1
  401cba:	428b      	cmp	r3, r1
  401cbc:	d3f6      	bcc.n	401cac <two_way_long_needle+0x194>
  401cbe:	f1b8 3fff 	cmp.w	r8, #4294967295
  401cc2:	d011      	beq.n	401ce8 <two_way_long_needle+0x1d0>
  401cc4:	eb0a 0208 	add.w	r2, sl, r8
  401cc8:	f899 1000 	ldrb.w	r1, [r9]
  401ccc:	5cab      	ldrb	r3, [r5, r2]
  401cce:	4299      	cmp	r1, r3
  401cd0:	442a      	add	r2, r5
  401cd2:	d10f      	bne.n	401cf4 <two_way_long_needle+0x1dc>
  401cd4:	464b      	mov	r3, r9
  401cd6:	e005      	b.n	401ce4 <two_way_long_needle+0x1cc>
  401cd8:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  401cdc:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  401ce0:	4288      	cmp	r0, r1
  401ce2:	d107      	bne.n	401cf4 <two_way_long_needle+0x1dc>
  401ce4:	42b3      	cmp	r3, r6
  401ce6:	d1f7      	bne.n	401cd8 <two_way_long_needle+0x1c0>
  401ce8:	eb05 000a 	add.w	r0, r5, sl
  401cec:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  401cf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401cf4:	9b03      	ldr	r3, [sp, #12]
  401cf6:	449a      	add	sl, r3
  401cf8:	4638      	mov	r0, r7
  401cfa:	e7b5      	b.n	401c68 <two_way_long_needle+0x150>
  401cfc:	f1cb 0201 	rsb	r2, fp, #1
  401d00:	4492      	add	sl, r2
  401d02:	449a      	add	sl, r3
  401d04:	4638      	mov	r0, r7
  401d06:	e7af      	b.n	401c68 <two_way_long_needle+0x150>
  401d08:	4649      	mov	r1, r9
  401d0a:	e78b      	b.n	401c24 <two_way_long_needle+0x10c>
  401d0c:	eb05 0008 	add.w	r0, r5, r8
  401d10:	e796      	b.n	401c40 <two_way_long_needle+0x128>
  401d12:	bf00      	nop

00401d14 <strstr>:
  401d14:	7802      	ldrb	r2, [r0, #0]
  401d16:	2a00      	cmp	r2, #0
  401d18:	f000 8101 	beq.w	401f1e <strstr+0x20a>
  401d1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401d20:	f891 8000 	ldrb.w	r8, [r1]
  401d24:	b085      	sub	sp, #20
  401d26:	4644      	mov	r4, r8
  401d28:	f1b8 0f00 	cmp.w	r8, #0
  401d2c:	d016      	beq.n	401d5c <strstr+0x48>
  401d2e:	4686      	mov	lr, r0
  401d30:	f101 0c01 	add.w	ip, r1, #1
  401d34:	2701      	movs	r7, #1
  401d36:	e003      	b.n	401d40 <strstr+0x2c>
  401d38:	f813 4b01 	ldrb.w	r4, [r3], #1
  401d3c:	b16c      	cbz	r4, 401d5a <strstr+0x46>
  401d3e:	469c      	mov	ip, r3
  401d40:	42a2      	cmp	r2, r4
  401d42:	bf14      	ite	ne
  401d44:	2700      	movne	r7, #0
  401d46:	f007 0701 	andeq.w	r7, r7, #1
  401d4a:	f81e 2f01 	ldrb.w	r2, [lr, #1]!
  401d4e:	4663      	mov	r3, ip
  401d50:	2a00      	cmp	r2, #0
  401d52:	d1f1      	bne.n	401d38 <strstr+0x24>
  401d54:	f89c 3000 	ldrb.w	r3, [ip]
  401d58:	b9fb      	cbnz	r3, 401d9a <strstr+0x86>
  401d5a:	b117      	cbz	r7, 401d62 <strstr+0x4e>
  401d5c:	b005      	add	sp, #20
  401d5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401d62:	460e      	mov	r6, r1
  401d64:	4605      	mov	r5, r0
  401d66:	4641      	mov	r1, r8
  401d68:	3001      	adds	r0, #1
  401d6a:	ebac 0406 	sub.w	r4, ip, r6
  401d6e:	f003 f9e9 	bl	405144 <strchr>
  401d72:	4607      	mov	r7, r0
  401d74:	b188      	cbz	r0, 401d9a <strstr+0x86>
  401d76:	2c01      	cmp	r4, #1
  401d78:	d0f0      	beq.n	401d5c <strstr+0x48>
  401d7a:	1928      	adds	r0, r5, r4
  401d7c:	4287      	cmp	r7, r0
  401d7e:	bf94      	ite	ls
  401d80:	1bc1      	subls	r1, r0, r7
  401d82:	2101      	movhi	r1, #1
  401d84:	2c1f      	cmp	r4, #31
  401d86:	468b      	mov	fp, r1
  401d88:	d90b      	bls.n	401da2 <strstr+0x8e>
  401d8a:	4623      	mov	r3, r4
  401d8c:	4632      	mov	r2, r6
  401d8e:	4638      	mov	r0, r7
  401d90:	f7ff fec2 	bl	401b18 <two_way_long_needle>
  401d94:	b005      	add	sp, #20
  401d96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401d9a:	2000      	movs	r0, #0
  401d9c:	b005      	add	sp, #20
  401d9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401da2:	aa03      	add	r2, sp, #12
  401da4:	4621      	mov	r1, r4
  401da6:	4630      	mov	r0, r6
  401da8:	f7ff fe5c 	bl	401a64 <critical_factorization>
  401dac:	9903      	ldr	r1, [sp, #12]
  401dae:	4680      	mov	r8, r0
  401db0:	4602      	mov	r2, r0
  401db2:	4431      	add	r1, r6
  401db4:	4630      	mov	r0, r6
  401db6:	f002 fde3 	bl	404980 <memcmp>
  401dba:	2800      	cmp	r0, #0
  401dbc:	d157      	bne.n	401e6e <strstr+0x15a>
  401dbe:	f108 33ff 	add.w	r3, r8, #4294967295
  401dc2:	9300      	str	r3, [sp, #0]
  401dc4:	18f3      	adds	r3, r6, r3
  401dc6:	4681      	mov	r9, r0
  401dc8:	4605      	mov	r5, r0
  401dca:	9301      	str	r3, [sp, #4]
  401dcc:	4658      	mov	r0, fp
  401dce:	46b2      	mov	sl, r6
  401dd0:	1966      	adds	r6, r4, r5
  401dd2:	1a32      	subs	r2, r6, r0
  401dd4:	2100      	movs	r1, #0
  401dd6:	4438      	add	r0, r7
  401dd8:	f002 fd82 	bl	4048e0 <memchr>
  401ddc:	2800      	cmp	r0, #0
  401dde:	d1dc      	bne.n	401d9a <strstr+0x86>
  401de0:	2e00      	cmp	r6, #0
  401de2:	d0da      	beq.n	401d9a <strstr+0x86>
  401de4:	45c8      	cmp	r8, r9
  401de6:	4643      	mov	r3, r8
  401de8:	bf38      	it	cc
  401dea:	464b      	movcc	r3, r9
  401dec:	429c      	cmp	r4, r3
  401dee:	d912      	bls.n	401e16 <strstr+0x102>
  401df0:	195a      	adds	r2, r3, r5
  401df2:	f81a 1003 	ldrb.w	r1, [sl, r3]
  401df6:	5cb8      	ldrb	r0, [r7, r2]
  401df8:	4281      	cmp	r1, r0
  401dfa:	443a      	add	r2, r7
  401dfc:	eb0a 0e03 	add.w	lr, sl, r3
  401e00:	d006      	beq.n	401e10 <strstr+0xfc>
  401e02:	e02c      	b.n	401e5e <strstr+0x14a>
  401e04:	f81e 0f01 	ldrb.w	r0, [lr, #1]!
  401e08:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  401e0c:	4288      	cmp	r0, r1
  401e0e:	d126      	bne.n	401e5e <strstr+0x14a>
  401e10:	3301      	adds	r3, #1
  401e12:	429c      	cmp	r4, r3
  401e14:	d1f6      	bne.n	401e04 <strstr+0xf0>
  401e16:	45c8      	cmp	r8, r9
  401e18:	9900      	ldr	r1, [sp, #0]
  401e1a:	f240 8083 	bls.w	401f24 <strstr+0x210>
  401e1e:	9b00      	ldr	r3, [sp, #0]
  401e20:	18ea      	adds	r2, r5, r3
  401e22:	9b01      	ldr	r3, [sp, #4]
  401e24:	5cb8      	ldrb	r0, [r7, r2]
  401e26:	781b      	ldrb	r3, [r3, #0]
  401e28:	4298      	cmp	r0, r3
  401e2a:	443a      	add	r2, r7
  401e2c:	d17a      	bne.n	401f24 <strstr+0x210>
  401e2e:	9801      	ldr	r0, [sp, #4]
  401e30:	f109 3bff 	add.w	fp, r9, #4294967295
  401e34:	e006      	b.n	401e44 <strstr+0x130>
  401e36:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  401e3a:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  401e3e:	45f4      	cmp	ip, lr
  401e40:	d103      	bne.n	401e4a <strstr+0x136>
  401e42:	4619      	mov	r1, r3
  401e44:	1e4b      	subs	r3, r1, #1
  401e46:	455b      	cmp	r3, fp
  401e48:	d1f5      	bne.n	401e36 <strstr+0x122>
  401e4a:	f109 0901 	add.w	r9, r9, #1
  401e4e:	4589      	cmp	r9, r1
  401e50:	d857      	bhi.n	401f02 <strstr+0x1ee>
  401e52:	9b03      	ldr	r3, [sp, #12]
  401e54:	4630      	mov	r0, r6
  401e56:	441d      	add	r5, r3
  401e58:	eba4 0903 	sub.w	r9, r4, r3
  401e5c:	e7b8      	b.n	401dd0 <strstr+0xbc>
  401e5e:	f1c8 0201 	rsb	r2, r8, #1
  401e62:	4415      	add	r5, r2
  401e64:	441d      	add	r5, r3
  401e66:	f04f 0900 	mov.w	r9, #0
  401e6a:	4630      	mov	r0, r6
  401e6c:	e7b0      	b.n	401dd0 <strstr+0xbc>
  401e6e:	eba4 0308 	sub.w	r3, r4, r8
  401e72:	4543      	cmp	r3, r8
  401e74:	bf38      	it	cc
  401e76:	4643      	movcc	r3, r8
  401e78:	3301      	adds	r3, #1
  401e7a:	f108 39ff 	add.w	r9, r8, #4294967295
  401e7e:	9303      	str	r3, [sp, #12]
  401e80:	eb06 0309 	add.w	r3, r6, r9
  401e84:	4658      	mov	r0, fp
  401e86:	2500      	movs	r5, #0
  401e88:	46bb      	mov	fp, r7
  401e8a:	469a      	mov	sl, r3
  401e8c:	1967      	adds	r7, r4, r5
  401e8e:	1a3a      	subs	r2, r7, r0
  401e90:	2100      	movs	r1, #0
  401e92:	4458      	add	r0, fp
  401e94:	f002 fd24 	bl	4048e0 <memchr>
  401e98:	2800      	cmp	r0, #0
  401e9a:	f47f af7e 	bne.w	401d9a <strstr+0x86>
  401e9e:	2f00      	cmp	r7, #0
  401ea0:	f43f af7b 	beq.w	401d9a <strstr+0x86>
  401ea4:	4544      	cmp	r4, r8
  401ea6:	d915      	bls.n	401ed4 <strstr+0x1c0>
  401ea8:	eb08 0205 	add.w	r2, r8, r5
  401eac:	f816 3008 	ldrb.w	r3, [r6, r8]
  401eb0:	f81b 0002 	ldrb.w	r0, [fp, r2]
  401eb4:	4298      	cmp	r0, r3
  401eb6:	445a      	add	r2, fp
  401eb8:	eb06 0108 	add.w	r1, r6, r8
  401ebc:	4643      	mov	r3, r8
  401ebe:	d006      	beq.n	401ece <strstr+0x1ba>
  401ec0:	e023      	b.n	401f0a <strstr+0x1f6>
  401ec2:	f811 ef01 	ldrb.w	lr, [r1, #1]!
  401ec6:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  401eca:	4586      	cmp	lr, r0
  401ecc:	d11d      	bne.n	401f0a <strstr+0x1f6>
  401ece:	3301      	adds	r3, #1
  401ed0:	429c      	cmp	r4, r3
  401ed2:	d1f6      	bne.n	401ec2 <strstr+0x1ae>
  401ed4:	f1b9 3fff 	cmp.w	r9, #4294967295
  401ed8:	d012      	beq.n	401f00 <strstr+0x1ec>
  401eda:	eb05 0209 	add.w	r2, r5, r9
  401ede:	f89a 3000 	ldrb.w	r3, [sl]
  401ee2:	f81b 1002 	ldrb.w	r1, [fp, r2]
  401ee6:	4299      	cmp	r1, r3
  401ee8:	445a      	add	r2, fp
  401eea:	d114      	bne.n	401f16 <strstr+0x202>
  401eec:	4653      	mov	r3, sl
  401eee:	e005      	b.n	401efc <strstr+0x1e8>
  401ef0:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  401ef4:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  401ef8:	4288      	cmp	r0, r1
  401efa:	d10c      	bne.n	401f16 <strstr+0x202>
  401efc:	42b3      	cmp	r3, r6
  401efe:	d1f7      	bne.n	401ef0 <strstr+0x1dc>
  401f00:	465f      	mov	r7, fp
  401f02:	1978      	adds	r0, r7, r5
  401f04:	b005      	add	sp, #20
  401f06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401f0a:	f1c8 0201 	rsb	r2, r8, #1
  401f0e:	4415      	add	r5, r2
  401f10:	441d      	add	r5, r3
  401f12:	4638      	mov	r0, r7
  401f14:	e7ba      	b.n	401e8c <strstr+0x178>
  401f16:	9b03      	ldr	r3, [sp, #12]
  401f18:	4638      	mov	r0, r7
  401f1a:	441d      	add	r5, r3
  401f1c:	e7b6      	b.n	401e8c <strstr+0x178>
  401f1e:	780b      	ldrb	r3, [r1, #0]
  401f20:	b913      	cbnz	r3, 401f28 <strstr+0x214>
  401f22:	4770      	bx	lr
  401f24:	4641      	mov	r1, r8
  401f26:	e790      	b.n	401e4a <strstr+0x136>
  401f28:	2000      	movs	r0, #0
  401f2a:	4770      	bx	lr

00401f2c <_svfprintf_r>:
  401f2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401f30:	b0c3      	sub	sp, #268	; 0x10c
  401f32:	460c      	mov	r4, r1
  401f34:	910b      	str	r1, [sp, #44]	; 0x2c
  401f36:	4692      	mov	sl, r2
  401f38:	930f      	str	r3, [sp, #60]	; 0x3c
  401f3a:	900c      	str	r0, [sp, #48]	; 0x30
  401f3c:	f002 fa0c 	bl	404358 <_localeconv_r>
  401f40:	6803      	ldr	r3, [r0, #0]
  401f42:	931a      	str	r3, [sp, #104]	; 0x68
  401f44:	4618      	mov	r0, r3
  401f46:	f003 f97b 	bl	405240 <strlen>
  401f4a:	89a3      	ldrh	r3, [r4, #12]
  401f4c:	9019      	str	r0, [sp, #100]	; 0x64
  401f4e:	0619      	lsls	r1, r3, #24
  401f50:	d503      	bpl.n	401f5a <_svfprintf_r+0x2e>
  401f52:	6923      	ldr	r3, [r4, #16]
  401f54:	2b00      	cmp	r3, #0
  401f56:	f001 8003 	beq.w	402f60 <_svfprintf_r+0x1034>
  401f5a:	2300      	movs	r3, #0
  401f5c:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  401f60:	9313      	str	r3, [sp, #76]	; 0x4c
  401f62:	9315      	str	r3, [sp, #84]	; 0x54
  401f64:	9314      	str	r3, [sp, #80]	; 0x50
  401f66:	9327      	str	r3, [sp, #156]	; 0x9c
  401f68:	9326      	str	r3, [sp, #152]	; 0x98
  401f6a:	9318      	str	r3, [sp, #96]	; 0x60
  401f6c:	931b      	str	r3, [sp, #108]	; 0x6c
  401f6e:	9309      	str	r3, [sp, #36]	; 0x24
  401f70:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  401f74:	46c8      	mov	r8, r9
  401f76:	9316      	str	r3, [sp, #88]	; 0x58
  401f78:	9317      	str	r3, [sp, #92]	; 0x5c
  401f7a:	f89a 3000 	ldrb.w	r3, [sl]
  401f7e:	4654      	mov	r4, sl
  401f80:	b1e3      	cbz	r3, 401fbc <_svfprintf_r+0x90>
  401f82:	2b25      	cmp	r3, #37	; 0x25
  401f84:	d102      	bne.n	401f8c <_svfprintf_r+0x60>
  401f86:	e019      	b.n	401fbc <_svfprintf_r+0x90>
  401f88:	2b25      	cmp	r3, #37	; 0x25
  401f8a:	d003      	beq.n	401f94 <_svfprintf_r+0x68>
  401f8c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  401f90:	2b00      	cmp	r3, #0
  401f92:	d1f9      	bne.n	401f88 <_svfprintf_r+0x5c>
  401f94:	eba4 050a 	sub.w	r5, r4, sl
  401f98:	b185      	cbz	r5, 401fbc <_svfprintf_r+0x90>
  401f9a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401f9c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  401f9e:	f8c8 a000 	str.w	sl, [r8]
  401fa2:	3301      	adds	r3, #1
  401fa4:	442a      	add	r2, r5
  401fa6:	2b07      	cmp	r3, #7
  401fa8:	f8c8 5004 	str.w	r5, [r8, #4]
  401fac:	9227      	str	r2, [sp, #156]	; 0x9c
  401fae:	9326      	str	r3, [sp, #152]	; 0x98
  401fb0:	dc7f      	bgt.n	4020b2 <_svfprintf_r+0x186>
  401fb2:	f108 0808 	add.w	r8, r8, #8
  401fb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401fb8:	442b      	add	r3, r5
  401fba:	9309      	str	r3, [sp, #36]	; 0x24
  401fbc:	7823      	ldrb	r3, [r4, #0]
  401fbe:	2b00      	cmp	r3, #0
  401fc0:	d07f      	beq.n	4020c2 <_svfprintf_r+0x196>
  401fc2:	2300      	movs	r3, #0
  401fc4:	461a      	mov	r2, r3
  401fc6:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  401fca:	4619      	mov	r1, r3
  401fcc:	930d      	str	r3, [sp, #52]	; 0x34
  401fce:	469b      	mov	fp, r3
  401fd0:	f04f 30ff 	mov.w	r0, #4294967295
  401fd4:	7863      	ldrb	r3, [r4, #1]
  401fd6:	900a      	str	r0, [sp, #40]	; 0x28
  401fd8:	f104 0a01 	add.w	sl, r4, #1
  401fdc:	f10a 0a01 	add.w	sl, sl, #1
  401fe0:	f1a3 0020 	sub.w	r0, r3, #32
  401fe4:	2858      	cmp	r0, #88	; 0x58
  401fe6:	f200 83c1 	bhi.w	40276c <_svfprintf_r+0x840>
  401fea:	e8df f010 	tbh	[pc, r0, lsl #1]
  401fee:	0238      	.short	0x0238
  401ff0:	03bf03bf 	.word	0x03bf03bf
  401ff4:	03bf0240 	.word	0x03bf0240
  401ff8:	03bf03bf 	.word	0x03bf03bf
  401ffc:	03bf03bf 	.word	0x03bf03bf
  402000:	024503bf 	.word	0x024503bf
  402004:	03bf0203 	.word	0x03bf0203
  402008:	026b005d 	.word	0x026b005d
  40200c:	028603bf 	.word	0x028603bf
  402010:	039d039d 	.word	0x039d039d
  402014:	039d039d 	.word	0x039d039d
  402018:	039d039d 	.word	0x039d039d
  40201c:	039d039d 	.word	0x039d039d
  402020:	03bf039d 	.word	0x03bf039d
  402024:	03bf03bf 	.word	0x03bf03bf
  402028:	03bf03bf 	.word	0x03bf03bf
  40202c:	03bf03bf 	.word	0x03bf03bf
  402030:	03bf03bf 	.word	0x03bf03bf
  402034:	033703bf 	.word	0x033703bf
  402038:	03bf0357 	.word	0x03bf0357
  40203c:	03bf0357 	.word	0x03bf0357
  402040:	03bf03bf 	.word	0x03bf03bf
  402044:	039803bf 	.word	0x039803bf
  402048:	03bf03bf 	.word	0x03bf03bf
  40204c:	03bf03ad 	.word	0x03bf03ad
  402050:	03bf03bf 	.word	0x03bf03bf
  402054:	03bf03bf 	.word	0x03bf03bf
  402058:	03bf0259 	.word	0x03bf0259
  40205c:	031e03bf 	.word	0x031e03bf
  402060:	03bf03bf 	.word	0x03bf03bf
  402064:	03bf03bf 	.word	0x03bf03bf
  402068:	03bf03bf 	.word	0x03bf03bf
  40206c:	03bf03bf 	.word	0x03bf03bf
  402070:	03bf03bf 	.word	0x03bf03bf
  402074:	02db02c6 	.word	0x02db02c6
  402078:	03570357 	.word	0x03570357
  40207c:	028b0357 	.word	0x028b0357
  402080:	03bf02db 	.word	0x03bf02db
  402084:	029003bf 	.word	0x029003bf
  402088:	029d03bf 	.word	0x029d03bf
  40208c:	02b401cc 	.word	0x02b401cc
  402090:	03bf0208 	.word	0x03bf0208
  402094:	03bf01e1 	.word	0x03bf01e1
  402098:	03bf007e 	.word	0x03bf007e
  40209c:	020d03bf 	.word	0x020d03bf
  4020a0:	980d      	ldr	r0, [sp, #52]	; 0x34
  4020a2:	930f      	str	r3, [sp, #60]	; 0x3c
  4020a4:	4240      	negs	r0, r0
  4020a6:	900d      	str	r0, [sp, #52]	; 0x34
  4020a8:	f04b 0b04 	orr.w	fp, fp, #4
  4020ac:	f89a 3000 	ldrb.w	r3, [sl]
  4020b0:	e794      	b.n	401fdc <_svfprintf_r+0xb0>
  4020b2:	aa25      	add	r2, sp, #148	; 0x94
  4020b4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4020b6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4020b8:	f003 f930 	bl	40531c <__ssprint_r>
  4020bc:	b940      	cbnz	r0, 4020d0 <_svfprintf_r+0x1a4>
  4020be:	46c8      	mov	r8, r9
  4020c0:	e779      	b.n	401fb6 <_svfprintf_r+0x8a>
  4020c2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  4020c4:	b123      	cbz	r3, 4020d0 <_svfprintf_r+0x1a4>
  4020c6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4020c8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4020ca:	aa25      	add	r2, sp, #148	; 0x94
  4020cc:	f003 f926 	bl	40531c <__ssprint_r>
  4020d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4020d2:	899b      	ldrh	r3, [r3, #12]
  4020d4:	f013 0f40 	tst.w	r3, #64	; 0x40
  4020d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4020da:	bf18      	it	ne
  4020dc:	f04f 33ff 	movne.w	r3, #4294967295
  4020e0:	9309      	str	r3, [sp, #36]	; 0x24
  4020e2:	9809      	ldr	r0, [sp, #36]	; 0x24
  4020e4:	b043      	add	sp, #268	; 0x10c
  4020e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4020ea:	f01b 0f20 	tst.w	fp, #32
  4020ee:	9311      	str	r3, [sp, #68]	; 0x44
  4020f0:	f040 81dd 	bne.w	4024ae <_svfprintf_r+0x582>
  4020f4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4020f6:	f01b 0f10 	tst.w	fp, #16
  4020fa:	4613      	mov	r3, r2
  4020fc:	f040 856e 	bne.w	402bdc <_svfprintf_r+0xcb0>
  402100:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402104:	f000 856a 	beq.w	402bdc <_svfprintf_r+0xcb0>
  402108:	8814      	ldrh	r4, [r2, #0]
  40210a:	3204      	adds	r2, #4
  40210c:	2500      	movs	r5, #0
  40210e:	2301      	movs	r3, #1
  402110:	920f      	str	r2, [sp, #60]	; 0x3c
  402112:	2700      	movs	r7, #0
  402114:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402118:	990a      	ldr	r1, [sp, #40]	; 0x28
  40211a:	1c4a      	adds	r2, r1, #1
  40211c:	f000 8265 	beq.w	4025ea <_svfprintf_r+0x6be>
  402120:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  402124:	9207      	str	r2, [sp, #28]
  402126:	ea54 0205 	orrs.w	r2, r4, r5
  40212a:	f040 8264 	bne.w	4025f6 <_svfprintf_r+0x6ca>
  40212e:	2900      	cmp	r1, #0
  402130:	f040 843c 	bne.w	4029ac <_svfprintf_r+0xa80>
  402134:	2b00      	cmp	r3, #0
  402136:	f040 84d7 	bne.w	402ae8 <_svfprintf_r+0xbbc>
  40213a:	f01b 0301 	ands.w	r3, fp, #1
  40213e:	930e      	str	r3, [sp, #56]	; 0x38
  402140:	f000 8604 	beq.w	402d4c <_svfprintf_r+0xe20>
  402144:	ae42      	add	r6, sp, #264	; 0x108
  402146:	2330      	movs	r3, #48	; 0x30
  402148:	f806 3d41 	strb.w	r3, [r6, #-65]!
  40214c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40214e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402150:	4293      	cmp	r3, r2
  402152:	bfb8      	it	lt
  402154:	4613      	movlt	r3, r2
  402156:	9308      	str	r3, [sp, #32]
  402158:	2300      	movs	r3, #0
  40215a:	9312      	str	r3, [sp, #72]	; 0x48
  40215c:	b117      	cbz	r7, 402164 <_svfprintf_r+0x238>
  40215e:	9b08      	ldr	r3, [sp, #32]
  402160:	3301      	adds	r3, #1
  402162:	9308      	str	r3, [sp, #32]
  402164:	9b07      	ldr	r3, [sp, #28]
  402166:	f013 0302 	ands.w	r3, r3, #2
  40216a:	9310      	str	r3, [sp, #64]	; 0x40
  40216c:	d002      	beq.n	402174 <_svfprintf_r+0x248>
  40216e:	9b08      	ldr	r3, [sp, #32]
  402170:	3302      	adds	r3, #2
  402172:	9308      	str	r3, [sp, #32]
  402174:	9b07      	ldr	r3, [sp, #28]
  402176:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  40217a:	f040 830e 	bne.w	40279a <_svfprintf_r+0x86e>
  40217e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402180:	9a08      	ldr	r2, [sp, #32]
  402182:	eba3 0b02 	sub.w	fp, r3, r2
  402186:	f1bb 0f00 	cmp.w	fp, #0
  40218a:	f340 8306 	ble.w	40279a <_svfprintf_r+0x86e>
  40218e:	f1bb 0f10 	cmp.w	fp, #16
  402192:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402194:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402196:	dd29      	ble.n	4021ec <_svfprintf_r+0x2c0>
  402198:	4643      	mov	r3, r8
  40219a:	4621      	mov	r1, r4
  40219c:	46a8      	mov	r8, r5
  40219e:	2710      	movs	r7, #16
  4021a0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4021a2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4021a4:	e006      	b.n	4021b4 <_svfprintf_r+0x288>
  4021a6:	f1ab 0b10 	sub.w	fp, fp, #16
  4021aa:	f1bb 0f10 	cmp.w	fp, #16
  4021ae:	f103 0308 	add.w	r3, r3, #8
  4021b2:	dd18      	ble.n	4021e6 <_svfprintf_r+0x2ba>
  4021b4:	3201      	adds	r2, #1
  4021b6:	48b7      	ldr	r0, [pc, #732]	; (402494 <_svfprintf_r+0x568>)
  4021b8:	9226      	str	r2, [sp, #152]	; 0x98
  4021ba:	3110      	adds	r1, #16
  4021bc:	2a07      	cmp	r2, #7
  4021be:	9127      	str	r1, [sp, #156]	; 0x9c
  4021c0:	e883 0081 	stmia.w	r3, {r0, r7}
  4021c4:	ddef      	ble.n	4021a6 <_svfprintf_r+0x27a>
  4021c6:	aa25      	add	r2, sp, #148	; 0x94
  4021c8:	4629      	mov	r1, r5
  4021ca:	4620      	mov	r0, r4
  4021cc:	f003 f8a6 	bl	40531c <__ssprint_r>
  4021d0:	2800      	cmp	r0, #0
  4021d2:	f47f af7d 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  4021d6:	f1ab 0b10 	sub.w	fp, fp, #16
  4021da:	f1bb 0f10 	cmp.w	fp, #16
  4021de:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4021e0:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4021e2:	464b      	mov	r3, r9
  4021e4:	dce6      	bgt.n	4021b4 <_svfprintf_r+0x288>
  4021e6:	4645      	mov	r5, r8
  4021e8:	460c      	mov	r4, r1
  4021ea:	4698      	mov	r8, r3
  4021ec:	3201      	adds	r2, #1
  4021ee:	4ba9      	ldr	r3, [pc, #676]	; (402494 <_svfprintf_r+0x568>)
  4021f0:	9226      	str	r2, [sp, #152]	; 0x98
  4021f2:	445c      	add	r4, fp
  4021f4:	2a07      	cmp	r2, #7
  4021f6:	9427      	str	r4, [sp, #156]	; 0x9c
  4021f8:	e888 0808 	stmia.w	r8, {r3, fp}
  4021fc:	f300 8498 	bgt.w	402b30 <_svfprintf_r+0xc04>
  402200:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402204:	f108 0808 	add.w	r8, r8, #8
  402208:	b177      	cbz	r7, 402228 <_svfprintf_r+0x2fc>
  40220a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40220c:	3301      	adds	r3, #1
  40220e:	3401      	adds	r4, #1
  402210:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  402214:	2201      	movs	r2, #1
  402216:	2b07      	cmp	r3, #7
  402218:	9427      	str	r4, [sp, #156]	; 0x9c
  40221a:	9326      	str	r3, [sp, #152]	; 0x98
  40221c:	e888 0006 	stmia.w	r8, {r1, r2}
  402220:	f300 83db 	bgt.w	4029da <_svfprintf_r+0xaae>
  402224:	f108 0808 	add.w	r8, r8, #8
  402228:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40222a:	b16b      	cbz	r3, 402248 <_svfprintf_r+0x31c>
  40222c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40222e:	3301      	adds	r3, #1
  402230:	3402      	adds	r4, #2
  402232:	a91e      	add	r1, sp, #120	; 0x78
  402234:	2202      	movs	r2, #2
  402236:	2b07      	cmp	r3, #7
  402238:	9427      	str	r4, [sp, #156]	; 0x9c
  40223a:	9326      	str	r3, [sp, #152]	; 0x98
  40223c:	e888 0006 	stmia.w	r8, {r1, r2}
  402240:	f300 83d6 	bgt.w	4029f0 <_svfprintf_r+0xac4>
  402244:	f108 0808 	add.w	r8, r8, #8
  402248:	2d80      	cmp	r5, #128	; 0x80
  40224a:	f000 8315 	beq.w	402878 <_svfprintf_r+0x94c>
  40224e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402250:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402252:	1a9f      	subs	r7, r3, r2
  402254:	2f00      	cmp	r7, #0
  402256:	dd36      	ble.n	4022c6 <_svfprintf_r+0x39a>
  402258:	2f10      	cmp	r7, #16
  40225a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40225c:	4d8e      	ldr	r5, [pc, #568]	; (402498 <_svfprintf_r+0x56c>)
  40225e:	dd27      	ble.n	4022b0 <_svfprintf_r+0x384>
  402260:	4642      	mov	r2, r8
  402262:	4621      	mov	r1, r4
  402264:	46b0      	mov	r8, r6
  402266:	f04f 0b10 	mov.w	fp, #16
  40226a:	462e      	mov	r6, r5
  40226c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40226e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402270:	e004      	b.n	40227c <_svfprintf_r+0x350>
  402272:	3f10      	subs	r7, #16
  402274:	2f10      	cmp	r7, #16
  402276:	f102 0208 	add.w	r2, r2, #8
  40227a:	dd15      	ble.n	4022a8 <_svfprintf_r+0x37c>
  40227c:	3301      	adds	r3, #1
  40227e:	3110      	adds	r1, #16
  402280:	2b07      	cmp	r3, #7
  402282:	9127      	str	r1, [sp, #156]	; 0x9c
  402284:	9326      	str	r3, [sp, #152]	; 0x98
  402286:	e882 0840 	stmia.w	r2, {r6, fp}
  40228a:	ddf2      	ble.n	402272 <_svfprintf_r+0x346>
  40228c:	aa25      	add	r2, sp, #148	; 0x94
  40228e:	4629      	mov	r1, r5
  402290:	4620      	mov	r0, r4
  402292:	f003 f843 	bl	40531c <__ssprint_r>
  402296:	2800      	cmp	r0, #0
  402298:	f47f af1a 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  40229c:	3f10      	subs	r7, #16
  40229e:	2f10      	cmp	r7, #16
  4022a0:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4022a2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4022a4:	464a      	mov	r2, r9
  4022a6:	dce9      	bgt.n	40227c <_svfprintf_r+0x350>
  4022a8:	4635      	mov	r5, r6
  4022aa:	460c      	mov	r4, r1
  4022ac:	4646      	mov	r6, r8
  4022ae:	4690      	mov	r8, r2
  4022b0:	3301      	adds	r3, #1
  4022b2:	443c      	add	r4, r7
  4022b4:	2b07      	cmp	r3, #7
  4022b6:	9427      	str	r4, [sp, #156]	; 0x9c
  4022b8:	9326      	str	r3, [sp, #152]	; 0x98
  4022ba:	e888 00a0 	stmia.w	r8, {r5, r7}
  4022be:	f300 8381 	bgt.w	4029c4 <_svfprintf_r+0xa98>
  4022c2:	f108 0808 	add.w	r8, r8, #8
  4022c6:	9b07      	ldr	r3, [sp, #28]
  4022c8:	05df      	lsls	r7, r3, #23
  4022ca:	f100 8268 	bmi.w	40279e <_svfprintf_r+0x872>
  4022ce:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4022d0:	990e      	ldr	r1, [sp, #56]	; 0x38
  4022d2:	f8c8 6000 	str.w	r6, [r8]
  4022d6:	3301      	adds	r3, #1
  4022d8:	440c      	add	r4, r1
  4022da:	2b07      	cmp	r3, #7
  4022dc:	9427      	str	r4, [sp, #156]	; 0x9c
  4022de:	f8c8 1004 	str.w	r1, [r8, #4]
  4022e2:	9326      	str	r3, [sp, #152]	; 0x98
  4022e4:	f300 834d 	bgt.w	402982 <_svfprintf_r+0xa56>
  4022e8:	f108 0808 	add.w	r8, r8, #8
  4022ec:	9b07      	ldr	r3, [sp, #28]
  4022ee:	075b      	lsls	r3, r3, #29
  4022f0:	d53a      	bpl.n	402368 <_svfprintf_r+0x43c>
  4022f2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4022f4:	9a08      	ldr	r2, [sp, #32]
  4022f6:	1a9d      	subs	r5, r3, r2
  4022f8:	2d00      	cmp	r5, #0
  4022fa:	dd35      	ble.n	402368 <_svfprintf_r+0x43c>
  4022fc:	2d10      	cmp	r5, #16
  4022fe:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402300:	dd20      	ble.n	402344 <_svfprintf_r+0x418>
  402302:	2610      	movs	r6, #16
  402304:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  402306:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  40230a:	e004      	b.n	402316 <_svfprintf_r+0x3ea>
  40230c:	3d10      	subs	r5, #16
  40230e:	2d10      	cmp	r5, #16
  402310:	f108 0808 	add.w	r8, r8, #8
  402314:	dd16      	ble.n	402344 <_svfprintf_r+0x418>
  402316:	3301      	adds	r3, #1
  402318:	4a5e      	ldr	r2, [pc, #376]	; (402494 <_svfprintf_r+0x568>)
  40231a:	9326      	str	r3, [sp, #152]	; 0x98
  40231c:	3410      	adds	r4, #16
  40231e:	2b07      	cmp	r3, #7
  402320:	9427      	str	r4, [sp, #156]	; 0x9c
  402322:	e888 0044 	stmia.w	r8, {r2, r6}
  402326:	ddf1      	ble.n	40230c <_svfprintf_r+0x3e0>
  402328:	aa25      	add	r2, sp, #148	; 0x94
  40232a:	4659      	mov	r1, fp
  40232c:	4638      	mov	r0, r7
  40232e:	f002 fff5 	bl	40531c <__ssprint_r>
  402332:	2800      	cmp	r0, #0
  402334:	f47f aecc 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  402338:	3d10      	subs	r5, #16
  40233a:	2d10      	cmp	r5, #16
  40233c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40233e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402340:	46c8      	mov	r8, r9
  402342:	dce8      	bgt.n	402316 <_svfprintf_r+0x3ea>
  402344:	3301      	adds	r3, #1
  402346:	4a53      	ldr	r2, [pc, #332]	; (402494 <_svfprintf_r+0x568>)
  402348:	9326      	str	r3, [sp, #152]	; 0x98
  40234a:	442c      	add	r4, r5
  40234c:	2b07      	cmp	r3, #7
  40234e:	9427      	str	r4, [sp, #156]	; 0x9c
  402350:	e888 0024 	stmia.w	r8, {r2, r5}
  402354:	dd08      	ble.n	402368 <_svfprintf_r+0x43c>
  402356:	aa25      	add	r2, sp, #148	; 0x94
  402358:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40235a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40235c:	f002 ffde 	bl	40531c <__ssprint_r>
  402360:	2800      	cmp	r0, #0
  402362:	f47f aeb5 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  402366:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402368:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40236a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40236c:	9908      	ldr	r1, [sp, #32]
  40236e:	428a      	cmp	r2, r1
  402370:	bfac      	ite	ge
  402372:	189b      	addge	r3, r3, r2
  402374:	185b      	addlt	r3, r3, r1
  402376:	9309      	str	r3, [sp, #36]	; 0x24
  402378:	2c00      	cmp	r4, #0
  40237a:	f040 830d 	bne.w	402998 <_svfprintf_r+0xa6c>
  40237e:	2300      	movs	r3, #0
  402380:	9326      	str	r3, [sp, #152]	; 0x98
  402382:	46c8      	mov	r8, r9
  402384:	e5f9      	b.n	401f7a <_svfprintf_r+0x4e>
  402386:	9311      	str	r3, [sp, #68]	; 0x44
  402388:	f01b 0320 	ands.w	r3, fp, #32
  40238c:	f040 81e3 	bne.w	402756 <_svfprintf_r+0x82a>
  402390:	f01b 0210 	ands.w	r2, fp, #16
  402394:	f040 842e 	bne.w	402bf4 <_svfprintf_r+0xcc8>
  402398:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  40239c:	f000 842a 	beq.w	402bf4 <_svfprintf_r+0xcc8>
  4023a0:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4023a2:	4613      	mov	r3, r2
  4023a4:	460a      	mov	r2, r1
  4023a6:	3204      	adds	r2, #4
  4023a8:	880c      	ldrh	r4, [r1, #0]
  4023aa:	920f      	str	r2, [sp, #60]	; 0x3c
  4023ac:	2500      	movs	r5, #0
  4023ae:	e6b0      	b.n	402112 <_svfprintf_r+0x1e6>
  4023b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4023b2:	9311      	str	r3, [sp, #68]	; 0x44
  4023b4:	6816      	ldr	r6, [r2, #0]
  4023b6:	2400      	movs	r4, #0
  4023b8:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  4023bc:	1d15      	adds	r5, r2, #4
  4023be:	2e00      	cmp	r6, #0
  4023c0:	f000 86a7 	beq.w	403112 <_svfprintf_r+0x11e6>
  4023c4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4023c6:	1c53      	adds	r3, r2, #1
  4023c8:	f000 8609 	beq.w	402fde <_svfprintf_r+0x10b2>
  4023cc:	4621      	mov	r1, r4
  4023ce:	4630      	mov	r0, r6
  4023d0:	f002 fa86 	bl	4048e0 <memchr>
  4023d4:	2800      	cmp	r0, #0
  4023d6:	f000 86e1 	beq.w	40319c <_svfprintf_r+0x1270>
  4023da:	1b83      	subs	r3, r0, r6
  4023dc:	930e      	str	r3, [sp, #56]	; 0x38
  4023de:	940a      	str	r4, [sp, #40]	; 0x28
  4023e0:	950f      	str	r5, [sp, #60]	; 0x3c
  4023e2:	f8cd b01c 	str.w	fp, [sp, #28]
  4023e6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4023ea:	9308      	str	r3, [sp, #32]
  4023ec:	9412      	str	r4, [sp, #72]	; 0x48
  4023ee:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4023f2:	e6b3      	b.n	40215c <_svfprintf_r+0x230>
  4023f4:	f89a 3000 	ldrb.w	r3, [sl]
  4023f8:	2201      	movs	r2, #1
  4023fa:	212b      	movs	r1, #43	; 0x2b
  4023fc:	e5ee      	b.n	401fdc <_svfprintf_r+0xb0>
  4023fe:	f04b 0b20 	orr.w	fp, fp, #32
  402402:	f89a 3000 	ldrb.w	r3, [sl]
  402406:	e5e9      	b.n	401fdc <_svfprintf_r+0xb0>
  402408:	9311      	str	r3, [sp, #68]	; 0x44
  40240a:	2a00      	cmp	r2, #0
  40240c:	f040 8795 	bne.w	40333a <_svfprintf_r+0x140e>
  402410:	4b22      	ldr	r3, [pc, #136]	; (40249c <_svfprintf_r+0x570>)
  402412:	9318      	str	r3, [sp, #96]	; 0x60
  402414:	f01b 0f20 	tst.w	fp, #32
  402418:	f040 8111 	bne.w	40263e <_svfprintf_r+0x712>
  40241c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40241e:	f01b 0f10 	tst.w	fp, #16
  402422:	4613      	mov	r3, r2
  402424:	f040 83e1 	bne.w	402bea <_svfprintf_r+0xcbe>
  402428:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40242c:	f000 83dd 	beq.w	402bea <_svfprintf_r+0xcbe>
  402430:	3304      	adds	r3, #4
  402432:	8814      	ldrh	r4, [r2, #0]
  402434:	930f      	str	r3, [sp, #60]	; 0x3c
  402436:	2500      	movs	r5, #0
  402438:	f01b 0f01 	tst.w	fp, #1
  40243c:	f000 810c 	beq.w	402658 <_svfprintf_r+0x72c>
  402440:	ea54 0305 	orrs.w	r3, r4, r5
  402444:	f000 8108 	beq.w	402658 <_svfprintf_r+0x72c>
  402448:	2330      	movs	r3, #48	; 0x30
  40244a:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  40244e:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  402452:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  402456:	f04b 0b02 	orr.w	fp, fp, #2
  40245a:	2302      	movs	r3, #2
  40245c:	e659      	b.n	402112 <_svfprintf_r+0x1e6>
  40245e:	f89a 3000 	ldrb.w	r3, [sl]
  402462:	2900      	cmp	r1, #0
  402464:	f47f adba 	bne.w	401fdc <_svfprintf_r+0xb0>
  402468:	2201      	movs	r2, #1
  40246a:	2120      	movs	r1, #32
  40246c:	e5b6      	b.n	401fdc <_svfprintf_r+0xb0>
  40246e:	f04b 0b01 	orr.w	fp, fp, #1
  402472:	f89a 3000 	ldrb.w	r3, [sl]
  402476:	e5b1      	b.n	401fdc <_svfprintf_r+0xb0>
  402478:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  40247a:	6823      	ldr	r3, [r4, #0]
  40247c:	930d      	str	r3, [sp, #52]	; 0x34
  40247e:	4618      	mov	r0, r3
  402480:	2800      	cmp	r0, #0
  402482:	4623      	mov	r3, r4
  402484:	f103 0304 	add.w	r3, r3, #4
  402488:	f6ff ae0a 	blt.w	4020a0 <_svfprintf_r+0x174>
  40248c:	930f      	str	r3, [sp, #60]	; 0x3c
  40248e:	f89a 3000 	ldrb.w	r3, [sl]
  402492:	e5a3      	b.n	401fdc <_svfprintf_r+0xb0>
  402494:	0040757c 	.word	0x0040757c
  402498:	0040758c 	.word	0x0040758c
  40249c:	0040755c 	.word	0x0040755c
  4024a0:	f04b 0b10 	orr.w	fp, fp, #16
  4024a4:	f01b 0f20 	tst.w	fp, #32
  4024a8:	9311      	str	r3, [sp, #68]	; 0x44
  4024aa:	f43f ae23 	beq.w	4020f4 <_svfprintf_r+0x1c8>
  4024ae:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4024b0:	3507      	adds	r5, #7
  4024b2:	f025 0307 	bic.w	r3, r5, #7
  4024b6:	f103 0208 	add.w	r2, r3, #8
  4024ba:	e9d3 4500 	ldrd	r4, r5, [r3]
  4024be:	920f      	str	r2, [sp, #60]	; 0x3c
  4024c0:	2301      	movs	r3, #1
  4024c2:	e626      	b.n	402112 <_svfprintf_r+0x1e6>
  4024c4:	f89a 3000 	ldrb.w	r3, [sl]
  4024c8:	2b2a      	cmp	r3, #42	; 0x2a
  4024ca:	f10a 0401 	add.w	r4, sl, #1
  4024ce:	f000 8727 	beq.w	403320 <_svfprintf_r+0x13f4>
  4024d2:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4024d6:	2809      	cmp	r0, #9
  4024d8:	46a2      	mov	sl, r4
  4024da:	f200 86ad 	bhi.w	403238 <_svfprintf_r+0x130c>
  4024de:	2300      	movs	r3, #0
  4024e0:	461c      	mov	r4, r3
  4024e2:	f81a 3b01 	ldrb.w	r3, [sl], #1
  4024e6:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4024ea:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  4024ee:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4024f2:	2809      	cmp	r0, #9
  4024f4:	d9f5      	bls.n	4024e2 <_svfprintf_r+0x5b6>
  4024f6:	940a      	str	r4, [sp, #40]	; 0x28
  4024f8:	e572      	b.n	401fe0 <_svfprintf_r+0xb4>
  4024fa:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  4024fe:	f89a 3000 	ldrb.w	r3, [sl]
  402502:	e56b      	b.n	401fdc <_svfprintf_r+0xb0>
  402504:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  402508:	f89a 3000 	ldrb.w	r3, [sl]
  40250c:	e566      	b.n	401fdc <_svfprintf_r+0xb0>
  40250e:	f89a 3000 	ldrb.w	r3, [sl]
  402512:	2b6c      	cmp	r3, #108	; 0x6c
  402514:	bf03      	ittte	eq
  402516:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  40251a:	f04b 0b20 	orreq.w	fp, fp, #32
  40251e:	f10a 0a01 	addeq.w	sl, sl, #1
  402522:	f04b 0b10 	orrne.w	fp, fp, #16
  402526:	e559      	b.n	401fdc <_svfprintf_r+0xb0>
  402528:	2a00      	cmp	r2, #0
  40252a:	f040 8711 	bne.w	403350 <_svfprintf_r+0x1424>
  40252e:	f01b 0f20 	tst.w	fp, #32
  402532:	f040 84f9 	bne.w	402f28 <_svfprintf_r+0xffc>
  402536:	f01b 0f10 	tst.w	fp, #16
  40253a:	f040 84ac 	bne.w	402e96 <_svfprintf_r+0xf6a>
  40253e:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402542:	f000 84a8 	beq.w	402e96 <_svfprintf_r+0xf6a>
  402546:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402548:	6813      	ldr	r3, [r2, #0]
  40254a:	3204      	adds	r2, #4
  40254c:	920f      	str	r2, [sp, #60]	; 0x3c
  40254e:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  402552:	801a      	strh	r2, [r3, #0]
  402554:	e511      	b.n	401f7a <_svfprintf_r+0x4e>
  402556:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402558:	4bb3      	ldr	r3, [pc, #716]	; (402828 <_svfprintf_r+0x8fc>)
  40255a:	680c      	ldr	r4, [r1, #0]
  40255c:	9318      	str	r3, [sp, #96]	; 0x60
  40255e:	2230      	movs	r2, #48	; 0x30
  402560:	2378      	movs	r3, #120	; 0x78
  402562:	3104      	adds	r1, #4
  402564:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  402568:	9311      	str	r3, [sp, #68]	; 0x44
  40256a:	f04b 0b02 	orr.w	fp, fp, #2
  40256e:	910f      	str	r1, [sp, #60]	; 0x3c
  402570:	2500      	movs	r5, #0
  402572:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  402576:	2302      	movs	r3, #2
  402578:	e5cb      	b.n	402112 <_svfprintf_r+0x1e6>
  40257a:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40257c:	9311      	str	r3, [sp, #68]	; 0x44
  40257e:	680a      	ldr	r2, [r1, #0]
  402580:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402584:	2300      	movs	r3, #0
  402586:	460a      	mov	r2, r1
  402588:	461f      	mov	r7, r3
  40258a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  40258e:	3204      	adds	r2, #4
  402590:	2301      	movs	r3, #1
  402592:	9308      	str	r3, [sp, #32]
  402594:	f8cd b01c 	str.w	fp, [sp, #28]
  402598:	970a      	str	r7, [sp, #40]	; 0x28
  40259a:	9712      	str	r7, [sp, #72]	; 0x48
  40259c:	920f      	str	r2, [sp, #60]	; 0x3c
  40259e:	930e      	str	r3, [sp, #56]	; 0x38
  4025a0:	ae28      	add	r6, sp, #160	; 0xa0
  4025a2:	e5df      	b.n	402164 <_svfprintf_r+0x238>
  4025a4:	9311      	str	r3, [sp, #68]	; 0x44
  4025a6:	2a00      	cmp	r2, #0
  4025a8:	f040 86ea 	bne.w	403380 <_svfprintf_r+0x1454>
  4025ac:	f01b 0f20 	tst.w	fp, #32
  4025b0:	d15d      	bne.n	40266e <_svfprintf_r+0x742>
  4025b2:	f01b 0f10 	tst.w	fp, #16
  4025b6:	f040 8308 	bne.w	402bca <_svfprintf_r+0xc9e>
  4025ba:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4025be:	f000 8304 	beq.w	402bca <_svfprintf_r+0xc9e>
  4025c2:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4025c4:	f9b1 4000 	ldrsh.w	r4, [r1]
  4025c8:	3104      	adds	r1, #4
  4025ca:	17e5      	asrs	r5, r4, #31
  4025cc:	4622      	mov	r2, r4
  4025ce:	462b      	mov	r3, r5
  4025d0:	910f      	str	r1, [sp, #60]	; 0x3c
  4025d2:	2a00      	cmp	r2, #0
  4025d4:	f173 0300 	sbcs.w	r3, r3, #0
  4025d8:	db58      	blt.n	40268c <_svfprintf_r+0x760>
  4025da:	990a      	ldr	r1, [sp, #40]	; 0x28
  4025dc:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4025e0:	1c4a      	adds	r2, r1, #1
  4025e2:	f04f 0301 	mov.w	r3, #1
  4025e6:	f47f ad9b 	bne.w	402120 <_svfprintf_r+0x1f4>
  4025ea:	ea54 0205 	orrs.w	r2, r4, r5
  4025ee:	f000 81df 	beq.w	4029b0 <_svfprintf_r+0xa84>
  4025f2:	f8cd b01c 	str.w	fp, [sp, #28]
  4025f6:	2b01      	cmp	r3, #1
  4025f8:	f000 827b 	beq.w	402af2 <_svfprintf_r+0xbc6>
  4025fc:	2b02      	cmp	r3, #2
  4025fe:	f040 8206 	bne.w	402a0e <_svfprintf_r+0xae2>
  402602:	9818      	ldr	r0, [sp, #96]	; 0x60
  402604:	464e      	mov	r6, r9
  402606:	0923      	lsrs	r3, r4, #4
  402608:	f004 010f 	and.w	r1, r4, #15
  40260c:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402610:	092a      	lsrs	r2, r5, #4
  402612:	461c      	mov	r4, r3
  402614:	4615      	mov	r5, r2
  402616:	5c43      	ldrb	r3, [r0, r1]
  402618:	f806 3d01 	strb.w	r3, [r6, #-1]!
  40261c:	ea54 0305 	orrs.w	r3, r4, r5
  402620:	d1f1      	bne.n	402606 <_svfprintf_r+0x6da>
  402622:	eba9 0306 	sub.w	r3, r9, r6
  402626:	930e      	str	r3, [sp, #56]	; 0x38
  402628:	e590      	b.n	40214c <_svfprintf_r+0x220>
  40262a:	9311      	str	r3, [sp, #68]	; 0x44
  40262c:	2a00      	cmp	r2, #0
  40262e:	f040 86a3 	bne.w	403378 <_svfprintf_r+0x144c>
  402632:	4b7e      	ldr	r3, [pc, #504]	; (40282c <_svfprintf_r+0x900>)
  402634:	9318      	str	r3, [sp, #96]	; 0x60
  402636:	f01b 0f20 	tst.w	fp, #32
  40263a:	f43f aeef 	beq.w	40241c <_svfprintf_r+0x4f0>
  40263e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402640:	3507      	adds	r5, #7
  402642:	f025 0307 	bic.w	r3, r5, #7
  402646:	f103 0208 	add.w	r2, r3, #8
  40264a:	f01b 0f01 	tst.w	fp, #1
  40264e:	920f      	str	r2, [sp, #60]	; 0x3c
  402650:	e9d3 4500 	ldrd	r4, r5, [r3]
  402654:	f47f aef4 	bne.w	402440 <_svfprintf_r+0x514>
  402658:	2302      	movs	r3, #2
  40265a:	e55a      	b.n	402112 <_svfprintf_r+0x1e6>
  40265c:	9311      	str	r3, [sp, #68]	; 0x44
  40265e:	2a00      	cmp	r2, #0
  402660:	f040 8686 	bne.w	403370 <_svfprintf_r+0x1444>
  402664:	f04b 0b10 	orr.w	fp, fp, #16
  402668:	f01b 0f20 	tst.w	fp, #32
  40266c:	d0a1      	beq.n	4025b2 <_svfprintf_r+0x686>
  40266e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402670:	3507      	adds	r5, #7
  402672:	f025 0507 	bic.w	r5, r5, #7
  402676:	e9d5 2300 	ldrd	r2, r3, [r5]
  40267a:	2a00      	cmp	r2, #0
  40267c:	f105 0108 	add.w	r1, r5, #8
  402680:	461d      	mov	r5, r3
  402682:	f173 0300 	sbcs.w	r3, r3, #0
  402686:	910f      	str	r1, [sp, #60]	; 0x3c
  402688:	4614      	mov	r4, r2
  40268a:	daa6      	bge.n	4025da <_svfprintf_r+0x6ae>
  40268c:	272d      	movs	r7, #45	; 0x2d
  40268e:	4264      	negs	r4, r4
  402690:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  402694:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402698:	2301      	movs	r3, #1
  40269a:	e53d      	b.n	402118 <_svfprintf_r+0x1ec>
  40269c:	9311      	str	r3, [sp, #68]	; 0x44
  40269e:	2a00      	cmp	r2, #0
  4026a0:	f040 8662 	bne.w	403368 <_svfprintf_r+0x143c>
  4026a4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4026a6:	3507      	adds	r5, #7
  4026a8:	f025 0307 	bic.w	r3, r5, #7
  4026ac:	f103 0208 	add.w	r2, r3, #8
  4026b0:	920f      	str	r2, [sp, #60]	; 0x3c
  4026b2:	681a      	ldr	r2, [r3, #0]
  4026b4:	9215      	str	r2, [sp, #84]	; 0x54
  4026b6:	685b      	ldr	r3, [r3, #4]
  4026b8:	9314      	str	r3, [sp, #80]	; 0x50
  4026ba:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4026bc:	9d15      	ldr	r5, [sp, #84]	; 0x54
  4026be:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  4026c2:	4628      	mov	r0, r5
  4026c4:	4621      	mov	r1, r4
  4026c6:	f04f 32ff 	mov.w	r2, #4294967295
  4026ca:	4b59      	ldr	r3, [pc, #356]	; (402830 <_svfprintf_r+0x904>)
  4026cc:	f003 feec 	bl	4064a8 <__aeabi_dcmpun>
  4026d0:	2800      	cmp	r0, #0
  4026d2:	f040 834a 	bne.w	402d6a <_svfprintf_r+0xe3e>
  4026d6:	4628      	mov	r0, r5
  4026d8:	4621      	mov	r1, r4
  4026da:	f04f 32ff 	mov.w	r2, #4294967295
  4026de:	4b54      	ldr	r3, [pc, #336]	; (402830 <_svfprintf_r+0x904>)
  4026e0:	f003 fec4 	bl	40646c <__aeabi_dcmple>
  4026e4:	2800      	cmp	r0, #0
  4026e6:	f040 8340 	bne.w	402d6a <_svfprintf_r+0xe3e>
  4026ea:	a815      	add	r0, sp, #84	; 0x54
  4026ec:	c80d      	ldmia	r0, {r0, r2, r3}
  4026ee:	9914      	ldr	r1, [sp, #80]	; 0x50
  4026f0:	f003 feb2 	bl	406458 <__aeabi_dcmplt>
  4026f4:	2800      	cmp	r0, #0
  4026f6:	f040 8530 	bne.w	40315a <_svfprintf_r+0x122e>
  4026fa:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4026fe:	4e4d      	ldr	r6, [pc, #308]	; (402834 <_svfprintf_r+0x908>)
  402700:	4b4d      	ldr	r3, [pc, #308]	; (402838 <_svfprintf_r+0x90c>)
  402702:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  402706:	9007      	str	r0, [sp, #28]
  402708:	9811      	ldr	r0, [sp, #68]	; 0x44
  40270a:	2203      	movs	r2, #3
  40270c:	2100      	movs	r1, #0
  40270e:	9208      	str	r2, [sp, #32]
  402710:	910a      	str	r1, [sp, #40]	; 0x28
  402712:	2847      	cmp	r0, #71	; 0x47
  402714:	bfd8      	it	le
  402716:	461e      	movle	r6, r3
  402718:	920e      	str	r2, [sp, #56]	; 0x38
  40271a:	9112      	str	r1, [sp, #72]	; 0x48
  40271c:	e51e      	b.n	40215c <_svfprintf_r+0x230>
  40271e:	f04b 0b08 	orr.w	fp, fp, #8
  402722:	f89a 3000 	ldrb.w	r3, [sl]
  402726:	e459      	b.n	401fdc <_svfprintf_r+0xb0>
  402728:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40272c:	2300      	movs	r3, #0
  40272e:	461c      	mov	r4, r3
  402730:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402734:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402738:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  40273c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402740:	2809      	cmp	r0, #9
  402742:	d9f5      	bls.n	402730 <_svfprintf_r+0x804>
  402744:	940d      	str	r4, [sp, #52]	; 0x34
  402746:	e44b      	b.n	401fe0 <_svfprintf_r+0xb4>
  402748:	f04b 0b10 	orr.w	fp, fp, #16
  40274c:	9311      	str	r3, [sp, #68]	; 0x44
  40274e:	f01b 0320 	ands.w	r3, fp, #32
  402752:	f43f ae1d 	beq.w	402390 <_svfprintf_r+0x464>
  402756:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402758:	3507      	adds	r5, #7
  40275a:	f025 0307 	bic.w	r3, r5, #7
  40275e:	f103 0208 	add.w	r2, r3, #8
  402762:	e9d3 4500 	ldrd	r4, r5, [r3]
  402766:	920f      	str	r2, [sp, #60]	; 0x3c
  402768:	2300      	movs	r3, #0
  40276a:	e4d2      	b.n	402112 <_svfprintf_r+0x1e6>
  40276c:	9311      	str	r3, [sp, #68]	; 0x44
  40276e:	2a00      	cmp	r2, #0
  402770:	f040 85e7 	bne.w	403342 <_svfprintf_r+0x1416>
  402774:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402776:	2a00      	cmp	r2, #0
  402778:	f43f aca3 	beq.w	4020c2 <_svfprintf_r+0x196>
  40277c:	2300      	movs	r3, #0
  40277e:	2101      	movs	r1, #1
  402780:	461f      	mov	r7, r3
  402782:	9108      	str	r1, [sp, #32]
  402784:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402788:	f8cd b01c 	str.w	fp, [sp, #28]
  40278c:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402790:	930a      	str	r3, [sp, #40]	; 0x28
  402792:	9312      	str	r3, [sp, #72]	; 0x48
  402794:	910e      	str	r1, [sp, #56]	; 0x38
  402796:	ae28      	add	r6, sp, #160	; 0xa0
  402798:	e4e4      	b.n	402164 <_svfprintf_r+0x238>
  40279a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40279c:	e534      	b.n	402208 <_svfprintf_r+0x2dc>
  40279e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4027a0:	2b65      	cmp	r3, #101	; 0x65
  4027a2:	f340 80a7 	ble.w	4028f4 <_svfprintf_r+0x9c8>
  4027a6:	a815      	add	r0, sp, #84	; 0x54
  4027a8:	c80d      	ldmia	r0, {r0, r2, r3}
  4027aa:	9914      	ldr	r1, [sp, #80]	; 0x50
  4027ac:	f003 fe4a 	bl	406444 <__aeabi_dcmpeq>
  4027b0:	2800      	cmp	r0, #0
  4027b2:	f000 8150 	beq.w	402a56 <_svfprintf_r+0xb2a>
  4027b6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4027b8:	4a20      	ldr	r2, [pc, #128]	; (40283c <_svfprintf_r+0x910>)
  4027ba:	f8c8 2000 	str.w	r2, [r8]
  4027be:	3301      	adds	r3, #1
  4027c0:	3401      	adds	r4, #1
  4027c2:	2201      	movs	r2, #1
  4027c4:	2b07      	cmp	r3, #7
  4027c6:	9427      	str	r4, [sp, #156]	; 0x9c
  4027c8:	9326      	str	r3, [sp, #152]	; 0x98
  4027ca:	f8c8 2004 	str.w	r2, [r8, #4]
  4027ce:	f300 836a 	bgt.w	402ea6 <_svfprintf_r+0xf7a>
  4027d2:	f108 0808 	add.w	r8, r8, #8
  4027d6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4027d8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4027da:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4027dc:	4293      	cmp	r3, r2
  4027de:	db03      	blt.n	4027e8 <_svfprintf_r+0x8bc>
  4027e0:	9b07      	ldr	r3, [sp, #28]
  4027e2:	07dd      	lsls	r5, r3, #31
  4027e4:	f57f ad82 	bpl.w	4022ec <_svfprintf_r+0x3c0>
  4027e8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4027ea:	9919      	ldr	r1, [sp, #100]	; 0x64
  4027ec:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  4027ee:	f8c8 2000 	str.w	r2, [r8]
  4027f2:	3301      	adds	r3, #1
  4027f4:	440c      	add	r4, r1
  4027f6:	2b07      	cmp	r3, #7
  4027f8:	f8c8 1004 	str.w	r1, [r8, #4]
  4027fc:	9427      	str	r4, [sp, #156]	; 0x9c
  4027fe:	9326      	str	r3, [sp, #152]	; 0x98
  402800:	f300 839e 	bgt.w	402f40 <_svfprintf_r+0x1014>
  402804:	f108 0808 	add.w	r8, r8, #8
  402808:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40280a:	1e5e      	subs	r6, r3, #1
  40280c:	2e00      	cmp	r6, #0
  40280e:	f77f ad6d 	ble.w	4022ec <_svfprintf_r+0x3c0>
  402812:	2e10      	cmp	r6, #16
  402814:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402816:	4d0a      	ldr	r5, [pc, #40]	; (402840 <_svfprintf_r+0x914>)
  402818:	f340 81f5 	ble.w	402c06 <_svfprintf_r+0xcda>
  40281c:	4622      	mov	r2, r4
  40281e:	2710      	movs	r7, #16
  402820:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402824:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402826:	e013      	b.n	402850 <_svfprintf_r+0x924>
  402828:	0040755c 	.word	0x0040755c
  40282c:	00407548 	.word	0x00407548
  402830:	7fefffff 	.word	0x7fefffff
  402834:	0040753c 	.word	0x0040753c
  402838:	00407538 	.word	0x00407538
  40283c:	00407578 	.word	0x00407578
  402840:	0040758c 	.word	0x0040758c
  402844:	f108 0808 	add.w	r8, r8, #8
  402848:	3e10      	subs	r6, #16
  40284a:	2e10      	cmp	r6, #16
  40284c:	f340 81da 	ble.w	402c04 <_svfprintf_r+0xcd8>
  402850:	3301      	adds	r3, #1
  402852:	3210      	adds	r2, #16
  402854:	2b07      	cmp	r3, #7
  402856:	9227      	str	r2, [sp, #156]	; 0x9c
  402858:	9326      	str	r3, [sp, #152]	; 0x98
  40285a:	e888 00a0 	stmia.w	r8, {r5, r7}
  40285e:	ddf1      	ble.n	402844 <_svfprintf_r+0x918>
  402860:	aa25      	add	r2, sp, #148	; 0x94
  402862:	4621      	mov	r1, r4
  402864:	4658      	mov	r0, fp
  402866:	f002 fd59 	bl	40531c <__ssprint_r>
  40286a:	2800      	cmp	r0, #0
  40286c:	f47f ac30 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  402870:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402872:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402874:	46c8      	mov	r8, r9
  402876:	e7e7      	b.n	402848 <_svfprintf_r+0x91c>
  402878:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40287a:	9a08      	ldr	r2, [sp, #32]
  40287c:	1a9f      	subs	r7, r3, r2
  40287e:	2f00      	cmp	r7, #0
  402880:	f77f ace5 	ble.w	40224e <_svfprintf_r+0x322>
  402884:	2f10      	cmp	r7, #16
  402886:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402888:	4db6      	ldr	r5, [pc, #728]	; (402b64 <_svfprintf_r+0xc38>)
  40288a:	dd27      	ble.n	4028dc <_svfprintf_r+0x9b0>
  40288c:	4642      	mov	r2, r8
  40288e:	4621      	mov	r1, r4
  402890:	46b0      	mov	r8, r6
  402892:	f04f 0b10 	mov.w	fp, #16
  402896:	462e      	mov	r6, r5
  402898:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40289a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  40289c:	e004      	b.n	4028a8 <_svfprintf_r+0x97c>
  40289e:	3f10      	subs	r7, #16
  4028a0:	2f10      	cmp	r7, #16
  4028a2:	f102 0208 	add.w	r2, r2, #8
  4028a6:	dd15      	ble.n	4028d4 <_svfprintf_r+0x9a8>
  4028a8:	3301      	adds	r3, #1
  4028aa:	3110      	adds	r1, #16
  4028ac:	2b07      	cmp	r3, #7
  4028ae:	9127      	str	r1, [sp, #156]	; 0x9c
  4028b0:	9326      	str	r3, [sp, #152]	; 0x98
  4028b2:	e882 0840 	stmia.w	r2, {r6, fp}
  4028b6:	ddf2      	ble.n	40289e <_svfprintf_r+0x972>
  4028b8:	aa25      	add	r2, sp, #148	; 0x94
  4028ba:	4629      	mov	r1, r5
  4028bc:	4620      	mov	r0, r4
  4028be:	f002 fd2d 	bl	40531c <__ssprint_r>
  4028c2:	2800      	cmp	r0, #0
  4028c4:	f47f ac04 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  4028c8:	3f10      	subs	r7, #16
  4028ca:	2f10      	cmp	r7, #16
  4028cc:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4028ce:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4028d0:	464a      	mov	r2, r9
  4028d2:	dce9      	bgt.n	4028a8 <_svfprintf_r+0x97c>
  4028d4:	4635      	mov	r5, r6
  4028d6:	460c      	mov	r4, r1
  4028d8:	4646      	mov	r6, r8
  4028da:	4690      	mov	r8, r2
  4028dc:	3301      	adds	r3, #1
  4028de:	443c      	add	r4, r7
  4028e0:	2b07      	cmp	r3, #7
  4028e2:	9427      	str	r4, [sp, #156]	; 0x9c
  4028e4:	9326      	str	r3, [sp, #152]	; 0x98
  4028e6:	e888 00a0 	stmia.w	r8, {r5, r7}
  4028ea:	f300 8232 	bgt.w	402d52 <_svfprintf_r+0xe26>
  4028ee:	f108 0808 	add.w	r8, r8, #8
  4028f2:	e4ac      	b.n	40224e <_svfprintf_r+0x322>
  4028f4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4028f6:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4028f8:	2b01      	cmp	r3, #1
  4028fa:	f340 81fe 	ble.w	402cfa <_svfprintf_r+0xdce>
  4028fe:	3701      	adds	r7, #1
  402900:	3401      	adds	r4, #1
  402902:	2301      	movs	r3, #1
  402904:	2f07      	cmp	r7, #7
  402906:	9427      	str	r4, [sp, #156]	; 0x9c
  402908:	9726      	str	r7, [sp, #152]	; 0x98
  40290a:	f8c8 6000 	str.w	r6, [r8]
  40290e:	f8c8 3004 	str.w	r3, [r8, #4]
  402912:	f300 8203 	bgt.w	402d1c <_svfprintf_r+0xdf0>
  402916:	f108 0808 	add.w	r8, r8, #8
  40291a:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40291c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  40291e:	f8c8 3000 	str.w	r3, [r8]
  402922:	3701      	adds	r7, #1
  402924:	4414      	add	r4, r2
  402926:	2f07      	cmp	r7, #7
  402928:	9427      	str	r4, [sp, #156]	; 0x9c
  40292a:	9726      	str	r7, [sp, #152]	; 0x98
  40292c:	f8c8 2004 	str.w	r2, [r8, #4]
  402930:	f300 8200 	bgt.w	402d34 <_svfprintf_r+0xe08>
  402934:	f108 0808 	add.w	r8, r8, #8
  402938:	a815      	add	r0, sp, #84	; 0x54
  40293a:	c80d      	ldmia	r0, {r0, r2, r3}
  40293c:	9914      	ldr	r1, [sp, #80]	; 0x50
  40293e:	f003 fd81 	bl	406444 <__aeabi_dcmpeq>
  402942:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402944:	2800      	cmp	r0, #0
  402946:	f040 8101 	bne.w	402b4c <_svfprintf_r+0xc20>
  40294a:	3b01      	subs	r3, #1
  40294c:	3701      	adds	r7, #1
  40294e:	3601      	adds	r6, #1
  402950:	441c      	add	r4, r3
  402952:	2f07      	cmp	r7, #7
  402954:	9726      	str	r7, [sp, #152]	; 0x98
  402956:	9427      	str	r4, [sp, #156]	; 0x9c
  402958:	f8c8 6000 	str.w	r6, [r8]
  40295c:	f8c8 3004 	str.w	r3, [r8, #4]
  402960:	f300 8127 	bgt.w	402bb2 <_svfprintf_r+0xc86>
  402964:	f108 0808 	add.w	r8, r8, #8
  402968:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  40296a:	f8c8 2004 	str.w	r2, [r8, #4]
  40296e:	3701      	adds	r7, #1
  402970:	4414      	add	r4, r2
  402972:	ab21      	add	r3, sp, #132	; 0x84
  402974:	2f07      	cmp	r7, #7
  402976:	9427      	str	r4, [sp, #156]	; 0x9c
  402978:	9726      	str	r7, [sp, #152]	; 0x98
  40297a:	f8c8 3000 	str.w	r3, [r8]
  40297e:	f77f acb3 	ble.w	4022e8 <_svfprintf_r+0x3bc>
  402982:	aa25      	add	r2, sp, #148	; 0x94
  402984:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402986:	980c      	ldr	r0, [sp, #48]	; 0x30
  402988:	f002 fcc8 	bl	40531c <__ssprint_r>
  40298c:	2800      	cmp	r0, #0
  40298e:	f47f ab9f 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  402992:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402994:	46c8      	mov	r8, r9
  402996:	e4a9      	b.n	4022ec <_svfprintf_r+0x3c0>
  402998:	aa25      	add	r2, sp, #148	; 0x94
  40299a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40299c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40299e:	f002 fcbd 	bl	40531c <__ssprint_r>
  4029a2:	2800      	cmp	r0, #0
  4029a4:	f43f aceb 	beq.w	40237e <_svfprintf_r+0x452>
  4029a8:	f7ff bb92 	b.w	4020d0 <_svfprintf_r+0x1a4>
  4029ac:	f8dd b01c 	ldr.w	fp, [sp, #28]
  4029b0:	2b01      	cmp	r3, #1
  4029b2:	f000 8134 	beq.w	402c1e <_svfprintf_r+0xcf2>
  4029b6:	2b02      	cmp	r3, #2
  4029b8:	d125      	bne.n	402a06 <_svfprintf_r+0xada>
  4029ba:	f8cd b01c 	str.w	fp, [sp, #28]
  4029be:	2400      	movs	r4, #0
  4029c0:	2500      	movs	r5, #0
  4029c2:	e61e      	b.n	402602 <_svfprintf_r+0x6d6>
  4029c4:	aa25      	add	r2, sp, #148	; 0x94
  4029c6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4029c8:	980c      	ldr	r0, [sp, #48]	; 0x30
  4029ca:	f002 fca7 	bl	40531c <__ssprint_r>
  4029ce:	2800      	cmp	r0, #0
  4029d0:	f47f ab7e 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  4029d4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4029d6:	46c8      	mov	r8, r9
  4029d8:	e475      	b.n	4022c6 <_svfprintf_r+0x39a>
  4029da:	aa25      	add	r2, sp, #148	; 0x94
  4029dc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4029de:	980c      	ldr	r0, [sp, #48]	; 0x30
  4029e0:	f002 fc9c 	bl	40531c <__ssprint_r>
  4029e4:	2800      	cmp	r0, #0
  4029e6:	f47f ab73 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  4029ea:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4029ec:	46c8      	mov	r8, r9
  4029ee:	e41b      	b.n	402228 <_svfprintf_r+0x2fc>
  4029f0:	aa25      	add	r2, sp, #148	; 0x94
  4029f2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4029f4:	980c      	ldr	r0, [sp, #48]	; 0x30
  4029f6:	f002 fc91 	bl	40531c <__ssprint_r>
  4029fa:	2800      	cmp	r0, #0
  4029fc:	f47f ab68 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  402a00:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402a02:	46c8      	mov	r8, r9
  402a04:	e420      	b.n	402248 <_svfprintf_r+0x31c>
  402a06:	f8cd b01c 	str.w	fp, [sp, #28]
  402a0a:	2400      	movs	r4, #0
  402a0c:	2500      	movs	r5, #0
  402a0e:	4649      	mov	r1, r9
  402a10:	e000      	b.n	402a14 <_svfprintf_r+0xae8>
  402a12:	4631      	mov	r1, r6
  402a14:	08e2      	lsrs	r2, r4, #3
  402a16:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402a1a:	08e8      	lsrs	r0, r5, #3
  402a1c:	f004 0307 	and.w	r3, r4, #7
  402a20:	4605      	mov	r5, r0
  402a22:	4614      	mov	r4, r2
  402a24:	3330      	adds	r3, #48	; 0x30
  402a26:	ea54 0205 	orrs.w	r2, r4, r5
  402a2a:	f801 3c01 	strb.w	r3, [r1, #-1]
  402a2e:	f101 36ff 	add.w	r6, r1, #4294967295
  402a32:	d1ee      	bne.n	402a12 <_svfprintf_r+0xae6>
  402a34:	9a07      	ldr	r2, [sp, #28]
  402a36:	07d2      	lsls	r2, r2, #31
  402a38:	f57f adf3 	bpl.w	402622 <_svfprintf_r+0x6f6>
  402a3c:	2b30      	cmp	r3, #48	; 0x30
  402a3e:	f43f adf0 	beq.w	402622 <_svfprintf_r+0x6f6>
  402a42:	3902      	subs	r1, #2
  402a44:	2330      	movs	r3, #48	; 0x30
  402a46:	f806 3c01 	strb.w	r3, [r6, #-1]
  402a4a:	eba9 0301 	sub.w	r3, r9, r1
  402a4e:	930e      	str	r3, [sp, #56]	; 0x38
  402a50:	460e      	mov	r6, r1
  402a52:	f7ff bb7b 	b.w	40214c <_svfprintf_r+0x220>
  402a56:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402a58:	2900      	cmp	r1, #0
  402a5a:	f340 822e 	ble.w	402eba <_svfprintf_r+0xf8e>
  402a5e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402a60:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402a62:	4293      	cmp	r3, r2
  402a64:	bfa8      	it	ge
  402a66:	4613      	movge	r3, r2
  402a68:	2b00      	cmp	r3, #0
  402a6a:	461f      	mov	r7, r3
  402a6c:	dd0d      	ble.n	402a8a <_svfprintf_r+0xb5e>
  402a6e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402a70:	f8c8 6000 	str.w	r6, [r8]
  402a74:	3301      	adds	r3, #1
  402a76:	443c      	add	r4, r7
  402a78:	2b07      	cmp	r3, #7
  402a7a:	9427      	str	r4, [sp, #156]	; 0x9c
  402a7c:	f8c8 7004 	str.w	r7, [r8, #4]
  402a80:	9326      	str	r3, [sp, #152]	; 0x98
  402a82:	f300 831f 	bgt.w	4030c4 <_svfprintf_r+0x1198>
  402a86:	f108 0808 	add.w	r8, r8, #8
  402a8a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402a8c:	2f00      	cmp	r7, #0
  402a8e:	bfa8      	it	ge
  402a90:	1bdb      	subge	r3, r3, r7
  402a92:	2b00      	cmp	r3, #0
  402a94:	461f      	mov	r7, r3
  402a96:	f340 80d6 	ble.w	402c46 <_svfprintf_r+0xd1a>
  402a9a:	2f10      	cmp	r7, #16
  402a9c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402a9e:	4d31      	ldr	r5, [pc, #196]	; (402b64 <_svfprintf_r+0xc38>)
  402aa0:	f340 81ed 	ble.w	402e7e <_svfprintf_r+0xf52>
  402aa4:	4642      	mov	r2, r8
  402aa6:	4621      	mov	r1, r4
  402aa8:	46b0      	mov	r8, r6
  402aaa:	f04f 0b10 	mov.w	fp, #16
  402aae:	462e      	mov	r6, r5
  402ab0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402ab2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402ab4:	e004      	b.n	402ac0 <_svfprintf_r+0xb94>
  402ab6:	3208      	adds	r2, #8
  402ab8:	3f10      	subs	r7, #16
  402aba:	2f10      	cmp	r7, #16
  402abc:	f340 81db 	ble.w	402e76 <_svfprintf_r+0xf4a>
  402ac0:	3301      	adds	r3, #1
  402ac2:	3110      	adds	r1, #16
  402ac4:	2b07      	cmp	r3, #7
  402ac6:	9127      	str	r1, [sp, #156]	; 0x9c
  402ac8:	9326      	str	r3, [sp, #152]	; 0x98
  402aca:	e882 0840 	stmia.w	r2, {r6, fp}
  402ace:	ddf2      	ble.n	402ab6 <_svfprintf_r+0xb8a>
  402ad0:	aa25      	add	r2, sp, #148	; 0x94
  402ad2:	4629      	mov	r1, r5
  402ad4:	4620      	mov	r0, r4
  402ad6:	f002 fc21 	bl	40531c <__ssprint_r>
  402ada:	2800      	cmp	r0, #0
  402adc:	f47f aaf8 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  402ae0:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402ae2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402ae4:	464a      	mov	r2, r9
  402ae6:	e7e7      	b.n	402ab8 <_svfprintf_r+0xb8c>
  402ae8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402aea:	930e      	str	r3, [sp, #56]	; 0x38
  402aec:	464e      	mov	r6, r9
  402aee:	f7ff bb2d 	b.w	40214c <_svfprintf_r+0x220>
  402af2:	2d00      	cmp	r5, #0
  402af4:	bf08      	it	eq
  402af6:	2c0a      	cmpeq	r4, #10
  402af8:	f0c0 808f 	bcc.w	402c1a <_svfprintf_r+0xcee>
  402afc:	464e      	mov	r6, r9
  402afe:	4620      	mov	r0, r4
  402b00:	4629      	mov	r1, r5
  402b02:	220a      	movs	r2, #10
  402b04:	2300      	movs	r3, #0
  402b06:	f003 fd0d 	bl	406524 <__aeabi_uldivmod>
  402b0a:	3230      	adds	r2, #48	; 0x30
  402b0c:	f806 2d01 	strb.w	r2, [r6, #-1]!
  402b10:	4620      	mov	r0, r4
  402b12:	4629      	mov	r1, r5
  402b14:	2300      	movs	r3, #0
  402b16:	220a      	movs	r2, #10
  402b18:	f003 fd04 	bl	406524 <__aeabi_uldivmod>
  402b1c:	4604      	mov	r4, r0
  402b1e:	460d      	mov	r5, r1
  402b20:	ea54 0305 	orrs.w	r3, r4, r5
  402b24:	d1eb      	bne.n	402afe <_svfprintf_r+0xbd2>
  402b26:	eba9 0306 	sub.w	r3, r9, r6
  402b2a:	930e      	str	r3, [sp, #56]	; 0x38
  402b2c:	f7ff bb0e 	b.w	40214c <_svfprintf_r+0x220>
  402b30:	aa25      	add	r2, sp, #148	; 0x94
  402b32:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402b34:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b36:	f002 fbf1 	bl	40531c <__ssprint_r>
  402b3a:	2800      	cmp	r0, #0
  402b3c:	f47f aac8 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  402b40:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402b44:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402b46:	46c8      	mov	r8, r9
  402b48:	f7ff bb5e 	b.w	402208 <_svfprintf_r+0x2dc>
  402b4c:	1e5e      	subs	r6, r3, #1
  402b4e:	2e00      	cmp	r6, #0
  402b50:	f77f af0a 	ble.w	402968 <_svfprintf_r+0xa3c>
  402b54:	2e10      	cmp	r6, #16
  402b56:	4d03      	ldr	r5, [pc, #12]	; (402b64 <_svfprintf_r+0xc38>)
  402b58:	dd22      	ble.n	402ba0 <_svfprintf_r+0xc74>
  402b5a:	4622      	mov	r2, r4
  402b5c:	f04f 0b10 	mov.w	fp, #16
  402b60:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402b62:	e006      	b.n	402b72 <_svfprintf_r+0xc46>
  402b64:	0040758c 	.word	0x0040758c
  402b68:	3e10      	subs	r6, #16
  402b6a:	2e10      	cmp	r6, #16
  402b6c:	f108 0808 	add.w	r8, r8, #8
  402b70:	dd15      	ble.n	402b9e <_svfprintf_r+0xc72>
  402b72:	3701      	adds	r7, #1
  402b74:	3210      	adds	r2, #16
  402b76:	2f07      	cmp	r7, #7
  402b78:	9227      	str	r2, [sp, #156]	; 0x9c
  402b7a:	9726      	str	r7, [sp, #152]	; 0x98
  402b7c:	e888 0820 	stmia.w	r8, {r5, fp}
  402b80:	ddf2      	ble.n	402b68 <_svfprintf_r+0xc3c>
  402b82:	aa25      	add	r2, sp, #148	; 0x94
  402b84:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402b86:	4620      	mov	r0, r4
  402b88:	f002 fbc8 	bl	40531c <__ssprint_r>
  402b8c:	2800      	cmp	r0, #0
  402b8e:	f47f aa9f 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  402b92:	3e10      	subs	r6, #16
  402b94:	2e10      	cmp	r6, #16
  402b96:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402b98:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402b9a:	46c8      	mov	r8, r9
  402b9c:	dce9      	bgt.n	402b72 <_svfprintf_r+0xc46>
  402b9e:	4614      	mov	r4, r2
  402ba0:	3701      	adds	r7, #1
  402ba2:	4434      	add	r4, r6
  402ba4:	2f07      	cmp	r7, #7
  402ba6:	9427      	str	r4, [sp, #156]	; 0x9c
  402ba8:	9726      	str	r7, [sp, #152]	; 0x98
  402baa:	e888 0060 	stmia.w	r8, {r5, r6}
  402bae:	f77f aed9 	ble.w	402964 <_svfprintf_r+0xa38>
  402bb2:	aa25      	add	r2, sp, #148	; 0x94
  402bb4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402bb6:	980c      	ldr	r0, [sp, #48]	; 0x30
  402bb8:	f002 fbb0 	bl	40531c <__ssprint_r>
  402bbc:	2800      	cmp	r0, #0
  402bbe:	f47f aa87 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  402bc2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402bc4:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402bc6:	46c8      	mov	r8, r9
  402bc8:	e6ce      	b.n	402968 <_svfprintf_r+0xa3c>
  402bca:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402bcc:	6814      	ldr	r4, [r2, #0]
  402bce:	4613      	mov	r3, r2
  402bd0:	3304      	adds	r3, #4
  402bd2:	17e5      	asrs	r5, r4, #31
  402bd4:	930f      	str	r3, [sp, #60]	; 0x3c
  402bd6:	4622      	mov	r2, r4
  402bd8:	462b      	mov	r3, r5
  402bda:	e4fa      	b.n	4025d2 <_svfprintf_r+0x6a6>
  402bdc:	3204      	adds	r2, #4
  402bde:	681c      	ldr	r4, [r3, #0]
  402be0:	920f      	str	r2, [sp, #60]	; 0x3c
  402be2:	2301      	movs	r3, #1
  402be4:	2500      	movs	r5, #0
  402be6:	f7ff ba94 	b.w	402112 <_svfprintf_r+0x1e6>
  402bea:	681c      	ldr	r4, [r3, #0]
  402bec:	3304      	adds	r3, #4
  402bee:	930f      	str	r3, [sp, #60]	; 0x3c
  402bf0:	2500      	movs	r5, #0
  402bf2:	e421      	b.n	402438 <_svfprintf_r+0x50c>
  402bf4:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402bf6:	460a      	mov	r2, r1
  402bf8:	3204      	adds	r2, #4
  402bfa:	680c      	ldr	r4, [r1, #0]
  402bfc:	920f      	str	r2, [sp, #60]	; 0x3c
  402bfe:	2500      	movs	r5, #0
  402c00:	f7ff ba87 	b.w	402112 <_svfprintf_r+0x1e6>
  402c04:	4614      	mov	r4, r2
  402c06:	3301      	adds	r3, #1
  402c08:	4434      	add	r4, r6
  402c0a:	2b07      	cmp	r3, #7
  402c0c:	9427      	str	r4, [sp, #156]	; 0x9c
  402c0e:	9326      	str	r3, [sp, #152]	; 0x98
  402c10:	e888 0060 	stmia.w	r8, {r5, r6}
  402c14:	f77f ab68 	ble.w	4022e8 <_svfprintf_r+0x3bc>
  402c18:	e6b3      	b.n	402982 <_svfprintf_r+0xa56>
  402c1a:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402c1e:	f8cd b01c 	str.w	fp, [sp, #28]
  402c22:	ae42      	add	r6, sp, #264	; 0x108
  402c24:	3430      	adds	r4, #48	; 0x30
  402c26:	2301      	movs	r3, #1
  402c28:	f806 4d41 	strb.w	r4, [r6, #-65]!
  402c2c:	930e      	str	r3, [sp, #56]	; 0x38
  402c2e:	f7ff ba8d 	b.w	40214c <_svfprintf_r+0x220>
  402c32:	aa25      	add	r2, sp, #148	; 0x94
  402c34:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c36:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c38:	f002 fb70 	bl	40531c <__ssprint_r>
  402c3c:	2800      	cmp	r0, #0
  402c3e:	f47f aa47 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  402c42:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c44:	46c8      	mov	r8, r9
  402c46:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402c48:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402c4a:	429a      	cmp	r2, r3
  402c4c:	db44      	blt.n	402cd8 <_svfprintf_r+0xdac>
  402c4e:	9b07      	ldr	r3, [sp, #28]
  402c50:	07d9      	lsls	r1, r3, #31
  402c52:	d441      	bmi.n	402cd8 <_svfprintf_r+0xdac>
  402c54:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402c56:	9812      	ldr	r0, [sp, #72]	; 0x48
  402c58:	1a9a      	subs	r2, r3, r2
  402c5a:	1a1d      	subs	r5, r3, r0
  402c5c:	4295      	cmp	r5, r2
  402c5e:	bfa8      	it	ge
  402c60:	4615      	movge	r5, r2
  402c62:	2d00      	cmp	r5, #0
  402c64:	dd0e      	ble.n	402c84 <_svfprintf_r+0xd58>
  402c66:	9926      	ldr	r1, [sp, #152]	; 0x98
  402c68:	f8c8 5004 	str.w	r5, [r8, #4]
  402c6c:	3101      	adds	r1, #1
  402c6e:	4406      	add	r6, r0
  402c70:	442c      	add	r4, r5
  402c72:	2907      	cmp	r1, #7
  402c74:	f8c8 6000 	str.w	r6, [r8]
  402c78:	9427      	str	r4, [sp, #156]	; 0x9c
  402c7a:	9126      	str	r1, [sp, #152]	; 0x98
  402c7c:	f300 823b 	bgt.w	4030f6 <_svfprintf_r+0x11ca>
  402c80:	f108 0808 	add.w	r8, r8, #8
  402c84:	2d00      	cmp	r5, #0
  402c86:	bfac      	ite	ge
  402c88:	1b56      	subge	r6, r2, r5
  402c8a:	4616      	movlt	r6, r2
  402c8c:	2e00      	cmp	r6, #0
  402c8e:	f77f ab2d 	ble.w	4022ec <_svfprintf_r+0x3c0>
  402c92:	2e10      	cmp	r6, #16
  402c94:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402c96:	4db0      	ldr	r5, [pc, #704]	; (402f58 <_svfprintf_r+0x102c>)
  402c98:	ddb5      	ble.n	402c06 <_svfprintf_r+0xcda>
  402c9a:	4622      	mov	r2, r4
  402c9c:	2710      	movs	r7, #16
  402c9e:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402ca2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402ca4:	e004      	b.n	402cb0 <_svfprintf_r+0xd84>
  402ca6:	f108 0808 	add.w	r8, r8, #8
  402caa:	3e10      	subs	r6, #16
  402cac:	2e10      	cmp	r6, #16
  402cae:	dda9      	ble.n	402c04 <_svfprintf_r+0xcd8>
  402cb0:	3301      	adds	r3, #1
  402cb2:	3210      	adds	r2, #16
  402cb4:	2b07      	cmp	r3, #7
  402cb6:	9227      	str	r2, [sp, #156]	; 0x9c
  402cb8:	9326      	str	r3, [sp, #152]	; 0x98
  402cba:	e888 00a0 	stmia.w	r8, {r5, r7}
  402cbe:	ddf2      	ble.n	402ca6 <_svfprintf_r+0xd7a>
  402cc0:	aa25      	add	r2, sp, #148	; 0x94
  402cc2:	4621      	mov	r1, r4
  402cc4:	4658      	mov	r0, fp
  402cc6:	f002 fb29 	bl	40531c <__ssprint_r>
  402cca:	2800      	cmp	r0, #0
  402ccc:	f47f aa00 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  402cd0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402cd2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402cd4:	46c8      	mov	r8, r9
  402cd6:	e7e8      	b.n	402caa <_svfprintf_r+0xd7e>
  402cd8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402cda:	9819      	ldr	r0, [sp, #100]	; 0x64
  402cdc:	991a      	ldr	r1, [sp, #104]	; 0x68
  402cde:	f8c8 1000 	str.w	r1, [r8]
  402ce2:	3301      	adds	r3, #1
  402ce4:	4404      	add	r4, r0
  402ce6:	2b07      	cmp	r3, #7
  402ce8:	9427      	str	r4, [sp, #156]	; 0x9c
  402cea:	f8c8 0004 	str.w	r0, [r8, #4]
  402cee:	9326      	str	r3, [sp, #152]	; 0x98
  402cf0:	f300 81f5 	bgt.w	4030de <_svfprintf_r+0x11b2>
  402cf4:	f108 0808 	add.w	r8, r8, #8
  402cf8:	e7ac      	b.n	402c54 <_svfprintf_r+0xd28>
  402cfa:	9b07      	ldr	r3, [sp, #28]
  402cfc:	07da      	lsls	r2, r3, #31
  402cfe:	f53f adfe 	bmi.w	4028fe <_svfprintf_r+0x9d2>
  402d02:	3701      	adds	r7, #1
  402d04:	3401      	adds	r4, #1
  402d06:	2301      	movs	r3, #1
  402d08:	2f07      	cmp	r7, #7
  402d0a:	9427      	str	r4, [sp, #156]	; 0x9c
  402d0c:	9726      	str	r7, [sp, #152]	; 0x98
  402d0e:	f8c8 6000 	str.w	r6, [r8]
  402d12:	f8c8 3004 	str.w	r3, [r8, #4]
  402d16:	f77f ae25 	ble.w	402964 <_svfprintf_r+0xa38>
  402d1a:	e74a      	b.n	402bb2 <_svfprintf_r+0xc86>
  402d1c:	aa25      	add	r2, sp, #148	; 0x94
  402d1e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d20:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d22:	f002 fafb 	bl	40531c <__ssprint_r>
  402d26:	2800      	cmp	r0, #0
  402d28:	f47f a9d2 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  402d2c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402d2e:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402d30:	46c8      	mov	r8, r9
  402d32:	e5f2      	b.n	40291a <_svfprintf_r+0x9ee>
  402d34:	aa25      	add	r2, sp, #148	; 0x94
  402d36:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d38:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d3a:	f002 faef 	bl	40531c <__ssprint_r>
  402d3e:	2800      	cmp	r0, #0
  402d40:	f47f a9c6 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  402d44:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402d46:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402d48:	46c8      	mov	r8, r9
  402d4a:	e5f5      	b.n	402938 <_svfprintf_r+0xa0c>
  402d4c:	464e      	mov	r6, r9
  402d4e:	f7ff b9fd 	b.w	40214c <_svfprintf_r+0x220>
  402d52:	aa25      	add	r2, sp, #148	; 0x94
  402d54:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d56:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d58:	f002 fae0 	bl	40531c <__ssprint_r>
  402d5c:	2800      	cmp	r0, #0
  402d5e:	f47f a9b7 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  402d62:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402d64:	46c8      	mov	r8, r9
  402d66:	f7ff ba72 	b.w	40224e <_svfprintf_r+0x322>
  402d6a:	9c15      	ldr	r4, [sp, #84]	; 0x54
  402d6c:	4622      	mov	r2, r4
  402d6e:	4620      	mov	r0, r4
  402d70:	9c14      	ldr	r4, [sp, #80]	; 0x50
  402d72:	4623      	mov	r3, r4
  402d74:	4621      	mov	r1, r4
  402d76:	f003 fb97 	bl	4064a8 <__aeabi_dcmpun>
  402d7a:	2800      	cmp	r0, #0
  402d7c:	f040 8286 	bne.w	40328c <_svfprintf_r+0x1360>
  402d80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402d82:	3301      	adds	r3, #1
  402d84:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402d86:	f023 0320 	bic.w	r3, r3, #32
  402d8a:	930e      	str	r3, [sp, #56]	; 0x38
  402d8c:	f000 81e2 	beq.w	403154 <_svfprintf_r+0x1228>
  402d90:	2b47      	cmp	r3, #71	; 0x47
  402d92:	f000 811e 	beq.w	402fd2 <_svfprintf_r+0x10a6>
  402d96:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  402d9a:	9307      	str	r3, [sp, #28]
  402d9c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402d9e:	1e1f      	subs	r7, r3, #0
  402da0:	9b15      	ldr	r3, [sp, #84]	; 0x54
  402da2:	9308      	str	r3, [sp, #32]
  402da4:	bfbb      	ittet	lt
  402da6:	463b      	movlt	r3, r7
  402da8:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  402dac:	2300      	movge	r3, #0
  402dae:	232d      	movlt	r3, #45	; 0x2d
  402db0:	9310      	str	r3, [sp, #64]	; 0x40
  402db2:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402db4:	2b66      	cmp	r3, #102	; 0x66
  402db6:	f000 81bb 	beq.w	403130 <_svfprintf_r+0x1204>
  402dba:	2b46      	cmp	r3, #70	; 0x46
  402dbc:	f000 80df 	beq.w	402f7e <_svfprintf_r+0x1052>
  402dc0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402dc2:	9a08      	ldr	r2, [sp, #32]
  402dc4:	2b45      	cmp	r3, #69	; 0x45
  402dc6:	bf0c      	ite	eq
  402dc8:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  402dca:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  402dcc:	a823      	add	r0, sp, #140	; 0x8c
  402dce:	a920      	add	r1, sp, #128	; 0x80
  402dd0:	bf08      	it	eq
  402dd2:	1c5d      	addeq	r5, r3, #1
  402dd4:	9004      	str	r0, [sp, #16]
  402dd6:	9103      	str	r1, [sp, #12]
  402dd8:	a81f      	add	r0, sp, #124	; 0x7c
  402dda:	2102      	movs	r1, #2
  402ddc:	463b      	mov	r3, r7
  402dde:	9002      	str	r0, [sp, #8]
  402de0:	9501      	str	r5, [sp, #4]
  402de2:	9100      	str	r1, [sp, #0]
  402de4:	980c      	ldr	r0, [sp, #48]	; 0x30
  402de6:	f000 fb73 	bl	4034d0 <_dtoa_r>
  402dea:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402dec:	2b67      	cmp	r3, #103	; 0x67
  402dee:	4606      	mov	r6, r0
  402df0:	f040 81e0 	bne.w	4031b4 <_svfprintf_r+0x1288>
  402df4:	f01b 0f01 	tst.w	fp, #1
  402df8:	f000 8246 	beq.w	403288 <_svfprintf_r+0x135c>
  402dfc:	1974      	adds	r4, r6, r5
  402dfe:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402e00:	9808      	ldr	r0, [sp, #32]
  402e02:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402e04:	4639      	mov	r1, r7
  402e06:	f003 fb1d 	bl	406444 <__aeabi_dcmpeq>
  402e0a:	2800      	cmp	r0, #0
  402e0c:	f040 8165 	bne.w	4030da <_svfprintf_r+0x11ae>
  402e10:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402e12:	42a3      	cmp	r3, r4
  402e14:	d206      	bcs.n	402e24 <_svfprintf_r+0xef8>
  402e16:	2130      	movs	r1, #48	; 0x30
  402e18:	1c5a      	adds	r2, r3, #1
  402e1a:	9223      	str	r2, [sp, #140]	; 0x8c
  402e1c:	7019      	strb	r1, [r3, #0]
  402e1e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402e20:	429c      	cmp	r4, r3
  402e22:	d8f9      	bhi.n	402e18 <_svfprintf_r+0xeec>
  402e24:	1b9b      	subs	r3, r3, r6
  402e26:	9313      	str	r3, [sp, #76]	; 0x4c
  402e28:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402e2a:	2b47      	cmp	r3, #71	; 0x47
  402e2c:	f000 80e9 	beq.w	403002 <_svfprintf_r+0x10d6>
  402e30:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402e32:	2b65      	cmp	r3, #101	; 0x65
  402e34:	f340 81cd 	ble.w	4031d2 <_svfprintf_r+0x12a6>
  402e38:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402e3a:	2b66      	cmp	r3, #102	; 0x66
  402e3c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402e3e:	9312      	str	r3, [sp, #72]	; 0x48
  402e40:	f000 819e 	beq.w	403180 <_svfprintf_r+0x1254>
  402e44:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402e46:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402e48:	4619      	mov	r1, r3
  402e4a:	4291      	cmp	r1, r2
  402e4c:	f300 818a 	bgt.w	403164 <_svfprintf_r+0x1238>
  402e50:	f01b 0f01 	tst.w	fp, #1
  402e54:	f040 8213 	bne.w	40327e <_svfprintf_r+0x1352>
  402e58:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  402e5c:	9308      	str	r3, [sp, #32]
  402e5e:	2367      	movs	r3, #103	; 0x67
  402e60:	920e      	str	r2, [sp, #56]	; 0x38
  402e62:	9311      	str	r3, [sp, #68]	; 0x44
  402e64:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402e66:	2b00      	cmp	r3, #0
  402e68:	f040 80c4 	bne.w	402ff4 <_svfprintf_r+0x10c8>
  402e6c:	930a      	str	r3, [sp, #40]	; 0x28
  402e6e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402e72:	f7ff b973 	b.w	40215c <_svfprintf_r+0x230>
  402e76:	4635      	mov	r5, r6
  402e78:	460c      	mov	r4, r1
  402e7a:	4646      	mov	r6, r8
  402e7c:	4690      	mov	r8, r2
  402e7e:	3301      	adds	r3, #1
  402e80:	443c      	add	r4, r7
  402e82:	2b07      	cmp	r3, #7
  402e84:	9427      	str	r4, [sp, #156]	; 0x9c
  402e86:	9326      	str	r3, [sp, #152]	; 0x98
  402e88:	e888 00a0 	stmia.w	r8, {r5, r7}
  402e8c:	f73f aed1 	bgt.w	402c32 <_svfprintf_r+0xd06>
  402e90:	f108 0808 	add.w	r8, r8, #8
  402e94:	e6d7      	b.n	402c46 <_svfprintf_r+0xd1a>
  402e96:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402e98:	6813      	ldr	r3, [r2, #0]
  402e9a:	3204      	adds	r2, #4
  402e9c:	920f      	str	r2, [sp, #60]	; 0x3c
  402e9e:	9a09      	ldr	r2, [sp, #36]	; 0x24
  402ea0:	601a      	str	r2, [r3, #0]
  402ea2:	f7ff b86a 	b.w	401f7a <_svfprintf_r+0x4e>
  402ea6:	aa25      	add	r2, sp, #148	; 0x94
  402ea8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402eaa:	980c      	ldr	r0, [sp, #48]	; 0x30
  402eac:	f002 fa36 	bl	40531c <__ssprint_r>
  402eb0:	2800      	cmp	r0, #0
  402eb2:	f47f a90d 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  402eb6:	46c8      	mov	r8, r9
  402eb8:	e48d      	b.n	4027d6 <_svfprintf_r+0x8aa>
  402eba:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402ebc:	4a27      	ldr	r2, [pc, #156]	; (402f5c <_svfprintf_r+0x1030>)
  402ebe:	f8c8 2000 	str.w	r2, [r8]
  402ec2:	3301      	adds	r3, #1
  402ec4:	3401      	adds	r4, #1
  402ec6:	2201      	movs	r2, #1
  402ec8:	2b07      	cmp	r3, #7
  402eca:	9427      	str	r4, [sp, #156]	; 0x9c
  402ecc:	9326      	str	r3, [sp, #152]	; 0x98
  402ece:	f8c8 2004 	str.w	r2, [r8, #4]
  402ed2:	dc72      	bgt.n	402fba <_svfprintf_r+0x108e>
  402ed4:	f108 0808 	add.w	r8, r8, #8
  402ed8:	b929      	cbnz	r1, 402ee6 <_svfprintf_r+0xfba>
  402eda:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402edc:	b91b      	cbnz	r3, 402ee6 <_svfprintf_r+0xfba>
  402ede:	9b07      	ldr	r3, [sp, #28]
  402ee0:	07d8      	lsls	r0, r3, #31
  402ee2:	f57f aa03 	bpl.w	4022ec <_svfprintf_r+0x3c0>
  402ee6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402ee8:	9819      	ldr	r0, [sp, #100]	; 0x64
  402eea:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402eec:	f8c8 2000 	str.w	r2, [r8]
  402ef0:	3301      	adds	r3, #1
  402ef2:	4602      	mov	r2, r0
  402ef4:	4422      	add	r2, r4
  402ef6:	2b07      	cmp	r3, #7
  402ef8:	9227      	str	r2, [sp, #156]	; 0x9c
  402efa:	f8c8 0004 	str.w	r0, [r8, #4]
  402efe:	9326      	str	r3, [sp, #152]	; 0x98
  402f00:	f300 818d 	bgt.w	40321e <_svfprintf_r+0x12f2>
  402f04:	f108 0808 	add.w	r8, r8, #8
  402f08:	2900      	cmp	r1, #0
  402f0a:	f2c0 8165 	blt.w	4031d8 <_svfprintf_r+0x12ac>
  402f0e:	9913      	ldr	r1, [sp, #76]	; 0x4c
  402f10:	f8c8 6000 	str.w	r6, [r8]
  402f14:	3301      	adds	r3, #1
  402f16:	188c      	adds	r4, r1, r2
  402f18:	2b07      	cmp	r3, #7
  402f1a:	9427      	str	r4, [sp, #156]	; 0x9c
  402f1c:	9326      	str	r3, [sp, #152]	; 0x98
  402f1e:	f8c8 1004 	str.w	r1, [r8, #4]
  402f22:	f77f a9e1 	ble.w	4022e8 <_svfprintf_r+0x3bc>
  402f26:	e52c      	b.n	402982 <_svfprintf_r+0xa56>
  402f28:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402f2a:	9909      	ldr	r1, [sp, #36]	; 0x24
  402f2c:	6813      	ldr	r3, [r2, #0]
  402f2e:	17cd      	asrs	r5, r1, #31
  402f30:	4608      	mov	r0, r1
  402f32:	3204      	adds	r2, #4
  402f34:	4629      	mov	r1, r5
  402f36:	920f      	str	r2, [sp, #60]	; 0x3c
  402f38:	e9c3 0100 	strd	r0, r1, [r3]
  402f3c:	f7ff b81d 	b.w	401f7a <_svfprintf_r+0x4e>
  402f40:	aa25      	add	r2, sp, #148	; 0x94
  402f42:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f44:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f46:	f002 f9e9 	bl	40531c <__ssprint_r>
  402f4a:	2800      	cmp	r0, #0
  402f4c:	f47f a8c0 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  402f50:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f52:	46c8      	mov	r8, r9
  402f54:	e458      	b.n	402808 <_svfprintf_r+0x8dc>
  402f56:	bf00      	nop
  402f58:	0040758c 	.word	0x0040758c
  402f5c:	00407578 	.word	0x00407578
  402f60:	2140      	movs	r1, #64	; 0x40
  402f62:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f64:	f001 fa0a 	bl	40437c <_malloc_r>
  402f68:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402f6a:	6010      	str	r0, [r2, #0]
  402f6c:	6110      	str	r0, [r2, #16]
  402f6e:	2800      	cmp	r0, #0
  402f70:	f000 81f2 	beq.w	403358 <_svfprintf_r+0x142c>
  402f74:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402f76:	2340      	movs	r3, #64	; 0x40
  402f78:	6153      	str	r3, [r2, #20]
  402f7a:	f7fe bfee 	b.w	401f5a <_svfprintf_r+0x2e>
  402f7e:	a823      	add	r0, sp, #140	; 0x8c
  402f80:	a920      	add	r1, sp, #128	; 0x80
  402f82:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  402f84:	9004      	str	r0, [sp, #16]
  402f86:	9103      	str	r1, [sp, #12]
  402f88:	a81f      	add	r0, sp, #124	; 0x7c
  402f8a:	2103      	movs	r1, #3
  402f8c:	9002      	str	r0, [sp, #8]
  402f8e:	9a08      	ldr	r2, [sp, #32]
  402f90:	9401      	str	r4, [sp, #4]
  402f92:	463b      	mov	r3, r7
  402f94:	9100      	str	r1, [sp, #0]
  402f96:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f98:	f000 fa9a 	bl	4034d0 <_dtoa_r>
  402f9c:	4625      	mov	r5, r4
  402f9e:	4606      	mov	r6, r0
  402fa0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402fa2:	2b46      	cmp	r3, #70	; 0x46
  402fa4:	eb06 0405 	add.w	r4, r6, r5
  402fa8:	f47f af29 	bne.w	402dfe <_svfprintf_r+0xed2>
  402fac:	7833      	ldrb	r3, [r6, #0]
  402fae:	2b30      	cmp	r3, #48	; 0x30
  402fb0:	f000 8178 	beq.w	4032a4 <_svfprintf_r+0x1378>
  402fb4:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  402fb6:	442c      	add	r4, r5
  402fb8:	e721      	b.n	402dfe <_svfprintf_r+0xed2>
  402fba:	aa25      	add	r2, sp, #148	; 0x94
  402fbc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402fbe:	980c      	ldr	r0, [sp, #48]	; 0x30
  402fc0:	f002 f9ac 	bl	40531c <__ssprint_r>
  402fc4:	2800      	cmp	r0, #0
  402fc6:	f47f a883 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  402fca:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402fcc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402fce:	46c8      	mov	r8, r9
  402fd0:	e782      	b.n	402ed8 <_svfprintf_r+0xfac>
  402fd2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402fd4:	2b00      	cmp	r3, #0
  402fd6:	bf08      	it	eq
  402fd8:	2301      	moveq	r3, #1
  402fda:	930a      	str	r3, [sp, #40]	; 0x28
  402fdc:	e6db      	b.n	402d96 <_svfprintf_r+0xe6a>
  402fde:	4630      	mov	r0, r6
  402fe0:	940a      	str	r4, [sp, #40]	; 0x28
  402fe2:	f002 f92d 	bl	405240 <strlen>
  402fe6:	950f      	str	r5, [sp, #60]	; 0x3c
  402fe8:	900e      	str	r0, [sp, #56]	; 0x38
  402fea:	f8cd b01c 	str.w	fp, [sp, #28]
  402fee:	4603      	mov	r3, r0
  402ff0:	f7ff b9f9 	b.w	4023e6 <_svfprintf_r+0x4ba>
  402ff4:	272d      	movs	r7, #45	; 0x2d
  402ff6:	2300      	movs	r3, #0
  402ff8:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402ffc:	930a      	str	r3, [sp, #40]	; 0x28
  402ffe:	f7ff b8ae 	b.w	40215e <_svfprintf_r+0x232>
  403002:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403004:	9312      	str	r3, [sp, #72]	; 0x48
  403006:	461a      	mov	r2, r3
  403008:	3303      	adds	r3, #3
  40300a:	db04      	blt.n	403016 <_svfprintf_r+0x10ea>
  40300c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40300e:	4619      	mov	r1, r3
  403010:	4291      	cmp	r1, r2
  403012:	f6bf af17 	bge.w	402e44 <_svfprintf_r+0xf18>
  403016:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403018:	3b02      	subs	r3, #2
  40301a:	9311      	str	r3, [sp, #68]	; 0x44
  40301c:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  403020:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  403024:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403026:	3b01      	subs	r3, #1
  403028:	2b00      	cmp	r3, #0
  40302a:	931f      	str	r3, [sp, #124]	; 0x7c
  40302c:	bfbd      	ittte	lt
  40302e:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  403030:	f1c3 0301 	rsblt	r3, r3, #1
  403034:	222d      	movlt	r2, #45	; 0x2d
  403036:	222b      	movge	r2, #43	; 0x2b
  403038:	2b09      	cmp	r3, #9
  40303a:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  40303e:	f340 8116 	ble.w	40326e <_svfprintf_r+0x1342>
  403042:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  403046:	4620      	mov	r0, r4
  403048:	4dab      	ldr	r5, [pc, #684]	; (4032f8 <_svfprintf_r+0x13cc>)
  40304a:	e000      	b.n	40304e <_svfprintf_r+0x1122>
  40304c:	4610      	mov	r0, r2
  40304e:	fb85 1203 	smull	r1, r2, r5, r3
  403052:	17d9      	asrs	r1, r3, #31
  403054:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  403058:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  40305c:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  403060:	3230      	adds	r2, #48	; 0x30
  403062:	2909      	cmp	r1, #9
  403064:	f800 2c01 	strb.w	r2, [r0, #-1]
  403068:	460b      	mov	r3, r1
  40306a:	f100 32ff 	add.w	r2, r0, #4294967295
  40306e:	dced      	bgt.n	40304c <_svfprintf_r+0x1120>
  403070:	3330      	adds	r3, #48	; 0x30
  403072:	3802      	subs	r0, #2
  403074:	b2d9      	uxtb	r1, r3
  403076:	4284      	cmp	r4, r0
  403078:	f802 1c01 	strb.w	r1, [r2, #-1]
  40307c:	f240 8165 	bls.w	40334a <_svfprintf_r+0x141e>
  403080:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  403084:	4613      	mov	r3, r2
  403086:	e001      	b.n	40308c <_svfprintf_r+0x1160>
  403088:	f813 1b01 	ldrb.w	r1, [r3], #1
  40308c:	f800 1b01 	strb.w	r1, [r0], #1
  403090:	42a3      	cmp	r3, r4
  403092:	d1f9      	bne.n	403088 <_svfprintf_r+0x115c>
  403094:	3301      	adds	r3, #1
  403096:	1a9b      	subs	r3, r3, r2
  403098:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  40309c:	4413      	add	r3, r2
  40309e:	aa21      	add	r2, sp, #132	; 0x84
  4030a0:	1a9b      	subs	r3, r3, r2
  4030a2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4030a4:	931b      	str	r3, [sp, #108]	; 0x6c
  4030a6:	2a01      	cmp	r2, #1
  4030a8:	4413      	add	r3, r2
  4030aa:	930e      	str	r3, [sp, #56]	; 0x38
  4030ac:	f340 8119 	ble.w	4032e2 <_svfprintf_r+0x13b6>
  4030b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4030b2:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4030b4:	4413      	add	r3, r2
  4030b6:	930e      	str	r3, [sp, #56]	; 0x38
  4030b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4030bc:	9308      	str	r3, [sp, #32]
  4030be:	2300      	movs	r3, #0
  4030c0:	9312      	str	r3, [sp, #72]	; 0x48
  4030c2:	e6cf      	b.n	402e64 <_svfprintf_r+0xf38>
  4030c4:	aa25      	add	r2, sp, #148	; 0x94
  4030c6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4030c8:	980c      	ldr	r0, [sp, #48]	; 0x30
  4030ca:	f002 f927 	bl	40531c <__ssprint_r>
  4030ce:	2800      	cmp	r0, #0
  4030d0:	f47e affe 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  4030d4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4030d6:	46c8      	mov	r8, r9
  4030d8:	e4d7      	b.n	402a8a <_svfprintf_r+0xb5e>
  4030da:	4623      	mov	r3, r4
  4030dc:	e6a2      	b.n	402e24 <_svfprintf_r+0xef8>
  4030de:	aa25      	add	r2, sp, #148	; 0x94
  4030e0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4030e2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4030e4:	f002 f91a 	bl	40531c <__ssprint_r>
  4030e8:	2800      	cmp	r0, #0
  4030ea:	f47e aff1 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  4030ee:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  4030f0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4030f2:	46c8      	mov	r8, r9
  4030f4:	e5ae      	b.n	402c54 <_svfprintf_r+0xd28>
  4030f6:	aa25      	add	r2, sp, #148	; 0x94
  4030f8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4030fa:	980c      	ldr	r0, [sp, #48]	; 0x30
  4030fc:	f002 f90e 	bl	40531c <__ssprint_r>
  403100:	2800      	cmp	r0, #0
  403102:	f47e afe5 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  403106:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403108:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40310a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40310c:	1a9a      	subs	r2, r3, r2
  40310e:	46c8      	mov	r8, r9
  403110:	e5b8      	b.n	402c84 <_svfprintf_r+0xd58>
  403112:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403114:	9612      	str	r6, [sp, #72]	; 0x48
  403116:	2b06      	cmp	r3, #6
  403118:	bf28      	it	cs
  40311a:	2306      	movcs	r3, #6
  40311c:	960a      	str	r6, [sp, #40]	; 0x28
  40311e:	4637      	mov	r7, r6
  403120:	9308      	str	r3, [sp, #32]
  403122:	950f      	str	r5, [sp, #60]	; 0x3c
  403124:	f8cd b01c 	str.w	fp, [sp, #28]
  403128:	930e      	str	r3, [sp, #56]	; 0x38
  40312a:	4e74      	ldr	r6, [pc, #464]	; (4032fc <_svfprintf_r+0x13d0>)
  40312c:	f7ff b816 	b.w	40215c <_svfprintf_r+0x230>
  403130:	a823      	add	r0, sp, #140	; 0x8c
  403132:	a920      	add	r1, sp, #128	; 0x80
  403134:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  403136:	9004      	str	r0, [sp, #16]
  403138:	9103      	str	r1, [sp, #12]
  40313a:	a81f      	add	r0, sp, #124	; 0x7c
  40313c:	2103      	movs	r1, #3
  40313e:	9002      	str	r0, [sp, #8]
  403140:	9a08      	ldr	r2, [sp, #32]
  403142:	9501      	str	r5, [sp, #4]
  403144:	463b      	mov	r3, r7
  403146:	9100      	str	r1, [sp, #0]
  403148:	980c      	ldr	r0, [sp, #48]	; 0x30
  40314a:	f000 f9c1 	bl	4034d0 <_dtoa_r>
  40314e:	4606      	mov	r6, r0
  403150:	1944      	adds	r4, r0, r5
  403152:	e72b      	b.n	402fac <_svfprintf_r+0x1080>
  403154:	2306      	movs	r3, #6
  403156:	930a      	str	r3, [sp, #40]	; 0x28
  403158:	e61d      	b.n	402d96 <_svfprintf_r+0xe6a>
  40315a:	272d      	movs	r7, #45	; 0x2d
  40315c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  403160:	f7ff bacd 	b.w	4026fe <_svfprintf_r+0x7d2>
  403164:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403166:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403168:	4413      	add	r3, r2
  40316a:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40316c:	930e      	str	r3, [sp, #56]	; 0x38
  40316e:	2a00      	cmp	r2, #0
  403170:	f340 80b0 	ble.w	4032d4 <_svfprintf_r+0x13a8>
  403174:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403178:	9308      	str	r3, [sp, #32]
  40317a:	2367      	movs	r3, #103	; 0x67
  40317c:	9311      	str	r3, [sp, #68]	; 0x44
  40317e:	e671      	b.n	402e64 <_svfprintf_r+0xf38>
  403180:	2b00      	cmp	r3, #0
  403182:	f340 80c3 	ble.w	40330c <_svfprintf_r+0x13e0>
  403186:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403188:	2a00      	cmp	r2, #0
  40318a:	f040 8099 	bne.w	4032c0 <_svfprintf_r+0x1394>
  40318e:	f01b 0f01 	tst.w	fp, #1
  403192:	f040 8095 	bne.w	4032c0 <_svfprintf_r+0x1394>
  403196:	9308      	str	r3, [sp, #32]
  403198:	930e      	str	r3, [sp, #56]	; 0x38
  40319a:	e663      	b.n	402e64 <_svfprintf_r+0xf38>
  40319c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40319e:	9308      	str	r3, [sp, #32]
  4031a0:	930e      	str	r3, [sp, #56]	; 0x38
  4031a2:	900a      	str	r0, [sp, #40]	; 0x28
  4031a4:	950f      	str	r5, [sp, #60]	; 0x3c
  4031a6:	f8cd b01c 	str.w	fp, [sp, #28]
  4031aa:	9012      	str	r0, [sp, #72]	; 0x48
  4031ac:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4031b0:	f7fe bfd4 	b.w	40215c <_svfprintf_r+0x230>
  4031b4:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4031b6:	2b47      	cmp	r3, #71	; 0x47
  4031b8:	f47f ae20 	bne.w	402dfc <_svfprintf_r+0xed0>
  4031bc:	f01b 0f01 	tst.w	fp, #1
  4031c0:	f47f aeee 	bne.w	402fa0 <_svfprintf_r+0x1074>
  4031c4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4031c6:	1b9b      	subs	r3, r3, r6
  4031c8:	9313      	str	r3, [sp, #76]	; 0x4c
  4031ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4031cc:	2b47      	cmp	r3, #71	; 0x47
  4031ce:	f43f af18 	beq.w	403002 <_svfprintf_r+0x10d6>
  4031d2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4031d4:	9312      	str	r3, [sp, #72]	; 0x48
  4031d6:	e721      	b.n	40301c <_svfprintf_r+0x10f0>
  4031d8:	424f      	negs	r7, r1
  4031da:	3110      	adds	r1, #16
  4031dc:	4d48      	ldr	r5, [pc, #288]	; (403300 <_svfprintf_r+0x13d4>)
  4031de:	da2f      	bge.n	403240 <_svfprintf_r+0x1314>
  4031e0:	2410      	movs	r4, #16
  4031e2:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  4031e6:	e004      	b.n	4031f2 <_svfprintf_r+0x12c6>
  4031e8:	f108 0808 	add.w	r8, r8, #8
  4031ec:	3f10      	subs	r7, #16
  4031ee:	2f10      	cmp	r7, #16
  4031f0:	dd26      	ble.n	403240 <_svfprintf_r+0x1314>
  4031f2:	3301      	adds	r3, #1
  4031f4:	3210      	adds	r2, #16
  4031f6:	2b07      	cmp	r3, #7
  4031f8:	9227      	str	r2, [sp, #156]	; 0x9c
  4031fa:	9326      	str	r3, [sp, #152]	; 0x98
  4031fc:	f8c8 5000 	str.w	r5, [r8]
  403200:	f8c8 4004 	str.w	r4, [r8, #4]
  403204:	ddf0      	ble.n	4031e8 <_svfprintf_r+0x12bc>
  403206:	aa25      	add	r2, sp, #148	; 0x94
  403208:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40320a:	4658      	mov	r0, fp
  40320c:	f002 f886 	bl	40531c <__ssprint_r>
  403210:	2800      	cmp	r0, #0
  403212:	f47e af5d 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  403216:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403218:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40321a:	46c8      	mov	r8, r9
  40321c:	e7e6      	b.n	4031ec <_svfprintf_r+0x12c0>
  40321e:	aa25      	add	r2, sp, #148	; 0x94
  403220:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403222:	980c      	ldr	r0, [sp, #48]	; 0x30
  403224:	f002 f87a 	bl	40531c <__ssprint_r>
  403228:	2800      	cmp	r0, #0
  40322a:	f47e af51 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  40322e:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403230:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403232:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403234:	46c8      	mov	r8, r9
  403236:	e667      	b.n	402f08 <_svfprintf_r+0xfdc>
  403238:	2000      	movs	r0, #0
  40323a:	900a      	str	r0, [sp, #40]	; 0x28
  40323c:	f7fe bed0 	b.w	401fe0 <_svfprintf_r+0xb4>
  403240:	3301      	adds	r3, #1
  403242:	443a      	add	r2, r7
  403244:	2b07      	cmp	r3, #7
  403246:	e888 00a0 	stmia.w	r8, {r5, r7}
  40324a:	9227      	str	r2, [sp, #156]	; 0x9c
  40324c:	9326      	str	r3, [sp, #152]	; 0x98
  40324e:	f108 0808 	add.w	r8, r8, #8
  403252:	f77f ae5c 	ble.w	402f0e <_svfprintf_r+0xfe2>
  403256:	aa25      	add	r2, sp, #148	; 0x94
  403258:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40325a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40325c:	f002 f85e 	bl	40531c <__ssprint_r>
  403260:	2800      	cmp	r0, #0
  403262:	f47e af35 	bne.w	4020d0 <_svfprintf_r+0x1a4>
  403266:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403268:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40326a:	46c8      	mov	r8, r9
  40326c:	e64f      	b.n	402f0e <_svfprintf_r+0xfe2>
  40326e:	3330      	adds	r3, #48	; 0x30
  403270:	2230      	movs	r2, #48	; 0x30
  403272:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  403276:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  40327a:	ab22      	add	r3, sp, #136	; 0x88
  40327c:	e70f      	b.n	40309e <_svfprintf_r+0x1172>
  40327e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403280:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403282:	4413      	add	r3, r2
  403284:	930e      	str	r3, [sp, #56]	; 0x38
  403286:	e775      	b.n	403174 <_svfprintf_r+0x1248>
  403288:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40328a:	e5cb      	b.n	402e24 <_svfprintf_r+0xef8>
  40328c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40328e:	4e1d      	ldr	r6, [pc, #116]	; (403304 <_svfprintf_r+0x13d8>)
  403290:	2b00      	cmp	r3, #0
  403292:	bfb6      	itet	lt
  403294:	272d      	movlt	r7, #45	; 0x2d
  403296:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  40329a:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  40329e:	4b1a      	ldr	r3, [pc, #104]	; (403308 <_svfprintf_r+0x13dc>)
  4032a0:	f7ff ba2f 	b.w	402702 <_svfprintf_r+0x7d6>
  4032a4:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4032a6:	9808      	ldr	r0, [sp, #32]
  4032a8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  4032aa:	4639      	mov	r1, r7
  4032ac:	f003 f8ca 	bl	406444 <__aeabi_dcmpeq>
  4032b0:	2800      	cmp	r0, #0
  4032b2:	f47f ae7f 	bne.w	402fb4 <_svfprintf_r+0x1088>
  4032b6:	f1c5 0501 	rsb	r5, r5, #1
  4032ba:	951f      	str	r5, [sp, #124]	; 0x7c
  4032bc:	442c      	add	r4, r5
  4032be:	e59e      	b.n	402dfe <_svfprintf_r+0xed2>
  4032c0:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4032c2:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4032c4:	4413      	add	r3, r2
  4032c6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4032c8:	441a      	add	r2, r3
  4032ca:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4032ce:	920e      	str	r2, [sp, #56]	; 0x38
  4032d0:	9308      	str	r3, [sp, #32]
  4032d2:	e5c7      	b.n	402e64 <_svfprintf_r+0xf38>
  4032d4:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4032d6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4032d8:	f1c3 0301 	rsb	r3, r3, #1
  4032dc:	441a      	add	r2, r3
  4032de:	4613      	mov	r3, r2
  4032e0:	e7d0      	b.n	403284 <_svfprintf_r+0x1358>
  4032e2:	f01b 0301 	ands.w	r3, fp, #1
  4032e6:	9312      	str	r3, [sp, #72]	; 0x48
  4032e8:	f47f aee2 	bne.w	4030b0 <_svfprintf_r+0x1184>
  4032ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4032ee:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4032f2:	9308      	str	r3, [sp, #32]
  4032f4:	e5b6      	b.n	402e64 <_svfprintf_r+0xf38>
  4032f6:	bf00      	nop
  4032f8:	66666667 	.word	0x66666667
  4032fc:	00407570 	.word	0x00407570
  403300:	0040758c 	.word	0x0040758c
  403304:	00407544 	.word	0x00407544
  403308:	00407540 	.word	0x00407540
  40330c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40330e:	b913      	cbnz	r3, 403316 <_svfprintf_r+0x13ea>
  403310:	f01b 0f01 	tst.w	fp, #1
  403314:	d002      	beq.n	40331c <_svfprintf_r+0x13f0>
  403316:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403318:	3301      	adds	r3, #1
  40331a:	e7d4      	b.n	4032c6 <_svfprintf_r+0x139a>
  40331c:	2301      	movs	r3, #1
  40331e:	e73a      	b.n	403196 <_svfprintf_r+0x126a>
  403320:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  403322:	f89a 3001 	ldrb.w	r3, [sl, #1]
  403326:	6828      	ldr	r0, [r5, #0]
  403328:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  40332c:	900a      	str	r0, [sp, #40]	; 0x28
  40332e:	4628      	mov	r0, r5
  403330:	3004      	adds	r0, #4
  403332:	46a2      	mov	sl, r4
  403334:	900f      	str	r0, [sp, #60]	; 0x3c
  403336:	f7fe be51 	b.w	401fdc <_svfprintf_r+0xb0>
  40333a:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40333e:	f7ff b867 	b.w	402410 <_svfprintf_r+0x4e4>
  403342:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403346:	f7ff ba15 	b.w	402774 <_svfprintf_r+0x848>
  40334a:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  40334e:	e6a6      	b.n	40309e <_svfprintf_r+0x1172>
  403350:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403354:	f7ff b8eb 	b.w	40252e <_svfprintf_r+0x602>
  403358:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  40335a:	230c      	movs	r3, #12
  40335c:	6013      	str	r3, [r2, #0]
  40335e:	f04f 33ff 	mov.w	r3, #4294967295
  403362:	9309      	str	r3, [sp, #36]	; 0x24
  403364:	f7fe bebd 	b.w	4020e2 <_svfprintf_r+0x1b6>
  403368:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40336c:	f7ff b99a 	b.w	4026a4 <_svfprintf_r+0x778>
  403370:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403374:	f7ff b976 	b.w	402664 <_svfprintf_r+0x738>
  403378:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40337c:	f7ff b959 	b.w	402632 <_svfprintf_r+0x706>
  403380:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403384:	f7ff b912 	b.w	4025ac <_svfprintf_r+0x680>

00403388 <register_fini>:
  403388:	4b02      	ldr	r3, [pc, #8]	; (403394 <register_fini+0xc>)
  40338a:	b113      	cbz	r3, 403392 <register_fini+0xa>
  40338c:	4802      	ldr	r0, [pc, #8]	; (403398 <register_fini+0x10>)
  40338e:	f000 b805 	b.w	40339c <atexit>
  403392:	4770      	bx	lr
  403394:	00000000 	.word	0x00000000
  403398:	00404325 	.word	0x00404325

0040339c <atexit>:
  40339c:	2300      	movs	r3, #0
  40339e:	4601      	mov	r1, r0
  4033a0:	461a      	mov	r2, r3
  4033a2:	4618      	mov	r0, r3
  4033a4:	f002 b838 	b.w	405418 <__register_exitproc>

004033a8 <quorem>:
  4033a8:	6902      	ldr	r2, [r0, #16]
  4033aa:	690b      	ldr	r3, [r1, #16]
  4033ac:	4293      	cmp	r3, r2
  4033ae:	f300 808d 	bgt.w	4034cc <quorem+0x124>
  4033b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4033b6:	f103 38ff 	add.w	r8, r3, #4294967295
  4033ba:	f101 0714 	add.w	r7, r1, #20
  4033be:	f100 0b14 	add.w	fp, r0, #20
  4033c2:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  4033c6:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  4033ca:	ea4f 0488 	mov.w	r4, r8, lsl #2
  4033ce:	b083      	sub	sp, #12
  4033d0:	3201      	adds	r2, #1
  4033d2:	fbb3 f9f2 	udiv	r9, r3, r2
  4033d6:	eb0b 0304 	add.w	r3, fp, r4
  4033da:	9400      	str	r4, [sp, #0]
  4033dc:	eb07 0a04 	add.w	sl, r7, r4
  4033e0:	9301      	str	r3, [sp, #4]
  4033e2:	f1b9 0f00 	cmp.w	r9, #0
  4033e6:	d039      	beq.n	40345c <quorem+0xb4>
  4033e8:	2500      	movs	r5, #0
  4033ea:	462e      	mov	r6, r5
  4033ec:	46bc      	mov	ip, r7
  4033ee:	46de      	mov	lr, fp
  4033f0:	f85c 4b04 	ldr.w	r4, [ip], #4
  4033f4:	f8de 3000 	ldr.w	r3, [lr]
  4033f8:	b2a2      	uxth	r2, r4
  4033fa:	fb09 5502 	mla	r5, r9, r2, r5
  4033fe:	0c22      	lsrs	r2, r4, #16
  403400:	0c2c      	lsrs	r4, r5, #16
  403402:	fb09 4202 	mla	r2, r9, r2, r4
  403406:	b2ad      	uxth	r5, r5
  403408:	1b75      	subs	r5, r6, r5
  40340a:	b296      	uxth	r6, r2
  40340c:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  403410:	fa15 f383 	uxtah	r3, r5, r3
  403414:	eb06 4623 	add.w	r6, r6, r3, asr #16
  403418:	b29b      	uxth	r3, r3
  40341a:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  40341e:	45e2      	cmp	sl, ip
  403420:	ea4f 4512 	mov.w	r5, r2, lsr #16
  403424:	f84e 3b04 	str.w	r3, [lr], #4
  403428:	ea4f 4626 	mov.w	r6, r6, asr #16
  40342c:	d2e0      	bcs.n	4033f0 <quorem+0x48>
  40342e:	9b00      	ldr	r3, [sp, #0]
  403430:	f85b 3003 	ldr.w	r3, [fp, r3]
  403434:	b993      	cbnz	r3, 40345c <quorem+0xb4>
  403436:	9c01      	ldr	r4, [sp, #4]
  403438:	1f23      	subs	r3, r4, #4
  40343a:	459b      	cmp	fp, r3
  40343c:	d20c      	bcs.n	403458 <quorem+0xb0>
  40343e:	f854 3c04 	ldr.w	r3, [r4, #-4]
  403442:	b94b      	cbnz	r3, 403458 <quorem+0xb0>
  403444:	f1a4 0308 	sub.w	r3, r4, #8
  403448:	e002      	b.n	403450 <quorem+0xa8>
  40344a:	681a      	ldr	r2, [r3, #0]
  40344c:	3b04      	subs	r3, #4
  40344e:	b91a      	cbnz	r2, 403458 <quorem+0xb0>
  403450:	459b      	cmp	fp, r3
  403452:	f108 38ff 	add.w	r8, r8, #4294967295
  403456:	d3f8      	bcc.n	40344a <quorem+0xa2>
  403458:	f8c0 8010 	str.w	r8, [r0, #16]
  40345c:	4604      	mov	r4, r0
  40345e:	f001 fd63 	bl	404f28 <__mcmp>
  403462:	2800      	cmp	r0, #0
  403464:	db2e      	blt.n	4034c4 <quorem+0x11c>
  403466:	f109 0901 	add.w	r9, r9, #1
  40346a:	465d      	mov	r5, fp
  40346c:	2300      	movs	r3, #0
  40346e:	f857 1b04 	ldr.w	r1, [r7], #4
  403472:	6828      	ldr	r0, [r5, #0]
  403474:	b28a      	uxth	r2, r1
  403476:	1a9a      	subs	r2, r3, r2
  403478:	0c0b      	lsrs	r3, r1, #16
  40347a:	fa12 f280 	uxtah	r2, r2, r0
  40347e:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  403482:	eb03 4322 	add.w	r3, r3, r2, asr #16
  403486:	b292      	uxth	r2, r2
  403488:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  40348c:	45ba      	cmp	sl, r7
  40348e:	f845 2b04 	str.w	r2, [r5], #4
  403492:	ea4f 4323 	mov.w	r3, r3, asr #16
  403496:	d2ea      	bcs.n	40346e <quorem+0xc6>
  403498:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  40349c:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  4034a0:	b982      	cbnz	r2, 4034c4 <quorem+0x11c>
  4034a2:	1f1a      	subs	r2, r3, #4
  4034a4:	4593      	cmp	fp, r2
  4034a6:	d20b      	bcs.n	4034c0 <quorem+0x118>
  4034a8:	f853 2c04 	ldr.w	r2, [r3, #-4]
  4034ac:	b942      	cbnz	r2, 4034c0 <quorem+0x118>
  4034ae:	3b08      	subs	r3, #8
  4034b0:	e002      	b.n	4034b8 <quorem+0x110>
  4034b2:	681a      	ldr	r2, [r3, #0]
  4034b4:	3b04      	subs	r3, #4
  4034b6:	b91a      	cbnz	r2, 4034c0 <quorem+0x118>
  4034b8:	459b      	cmp	fp, r3
  4034ba:	f108 38ff 	add.w	r8, r8, #4294967295
  4034be:	d3f8      	bcc.n	4034b2 <quorem+0x10a>
  4034c0:	f8c4 8010 	str.w	r8, [r4, #16]
  4034c4:	4648      	mov	r0, r9
  4034c6:	b003      	add	sp, #12
  4034c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4034cc:	2000      	movs	r0, #0
  4034ce:	4770      	bx	lr

004034d0 <_dtoa_r>:
  4034d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4034d4:	6c01      	ldr	r1, [r0, #64]	; 0x40
  4034d6:	b09b      	sub	sp, #108	; 0x6c
  4034d8:	4604      	mov	r4, r0
  4034da:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  4034dc:	4692      	mov	sl, r2
  4034de:	469b      	mov	fp, r3
  4034e0:	b141      	cbz	r1, 4034f4 <_dtoa_r+0x24>
  4034e2:	6c42      	ldr	r2, [r0, #68]	; 0x44
  4034e4:	604a      	str	r2, [r1, #4]
  4034e6:	2301      	movs	r3, #1
  4034e8:	4093      	lsls	r3, r2
  4034ea:	608b      	str	r3, [r1, #8]
  4034ec:	f001 fb44 	bl	404b78 <_Bfree>
  4034f0:	2300      	movs	r3, #0
  4034f2:	6423      	str	r3, [r4, #64]	; 0x40
  4034f4:	f1bb 0f00 	cmp.w	fp, #0
  4034f8:	465d      	mov	r5, fp
  4034fa:	db35      	blt.n	403568 <_dtoa_r+0x98>
  4034fc:	2300      	movs	r3, #0
  4034fe:	6033      	str	r3, [r6, #0]
  403500:	4b9d      	ldr	r3, [pc, #628]	; (403778 <_dtoa_r+0x2a8>)
  403502:	43ab      	bics	r3, r5
  403504:	d015      	beq.n	403532 <_dtoa_r+0x62>
  403506:	4650      	mov	r0, sl
  403508:	4659      	mov	r1, fp
  40350a:	2200      	movs	r2, #0
  40350c:	2300      	movs	r3, #0
  40350e:	f002 ff99 	bl	406444 <__aeabi_dcmpeq>
  403512:	4680      	mov	r8, r0
  403514:	2800      	cmp	r0, #0
  403516:	d02d      	beq.n	403574 <_dtoa_r+0xa4>
  403518:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40351a:	2301      	movs	r3, #1
  40351c:	6013      	str	r3, [r2, #0]
  40351e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403520:	2b00      	cmp	r3, #0
  403522:	f000 80bd 	beq.w	4036a0 <_dtoa_r+0x1d0>
  403526:	4895      	ldr	r0, [pc, #596]	; (40377c <_dtoa_r+0x2ac>)
  403528:	6018      	str	r0, [r3, #0]
  40352a:	3801      	subs	r0, #1
  40352c:	b01b      	add	sp, #108	; 0x6c
  40352e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403532:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403534:	f242 730f 	movw	r3, #9999	; 0x270f
  403538:	6013      	str	r3, [r2, #0]
  40353a:	f1ba 0f00 	cmp.w	sl, #0
  40353e:	d10d      	bne.n	40355c <_dtoa_r+0x8c>
  403540:	f3c5 0513 	ubfx	r5, r5, #0, #20
  403544:	b955      	cbnz	r5, 40355c <_dtoa_r+0x8c>
  403546:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403548:	488d      	ldr	r0, [pc, #564]	; (403780 <_dtoa_r+0x2b0>)
  40354a:	2b00      	cmp	r3, #0
  40354c:	d0ee      	beq.n	40352c <_dtoa_r+0x5c>
  40354e:	f100 0308 	add.w	r3, r0, #8
  403552:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  403554:	6013      	str	r3, [r2, #0]
  403556:	b01b      	add	sp, #108	; 0x6c
  403558:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40355c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40355e:	4889      	ldr	r0, [pc, #548]	; (403784 <_dtoa_r+0x2b4>)
  403560:	2b00      	cmp	r3, #0
  403562:	d0e3      	beq.n	40352c <_dtoa_r+0x5c>
  403564:	1cc3      	adds	r3, r0, #3
  403566:	e7f4      	b.n	403552 <_dtoa_r+0x82>
  403568:	2301      	movs	r3, #1
  40356a:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  40356e:	6033      	str	r3, [r6, #0]
  403570:	46ab      	mov	fp, r5
  403572:	e7c5      	b.n	403500 <_dtoa_r+0x30>
  403574:	aa18      	add	r2, sp, #96	; 0x60
  403576:	ab19      	add	r3, sp, #100	; 0x64
  403578:	9201      	str	r2, [sp, #4]
  40357a:	9300      	str	r3, [sp, #0]
  40357c:	4652      	mov	r2, sl
  40357e:	465b      	mov	r3, fp
  403580:	4620      	mov	r0, r4
  403582:	f001 fd71 	bl	405068 <__d2b>
  403586:	0d2b      	lsrs	r3, r5, #20
  403588:	4681      	mov	r9, r0
  40358a:	d071      	beq.n	403670 <_dtoa_r+0x1a0>
  40358c:	f3cb 0213 	ubfx	r2, fp, #0, #20
  403590:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  403594:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403596:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  40359a:	4650      	mov	r0, sl
  40359c:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  4035a0:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  4035a4:	2200      	movs	r2, #0
  4035a6:	4b78      	ldr	r3, [pc, #480]	; (403788 <_dtoa_r+0x2b8>)
  4035a8:	f002 fb30 	bl	405c0c <__aeabi_dsub>
  4035ac:	a36c      	add	r3, pc, #432	; (adr r3, 403760 <_dtoa_r+0x290>)
  4035ae:	e9d3 2300 	ldrd	r2, r3, [r3]
  4035b2:	f002 fcdf 	bl	405f74 <__aeabi_dmul>
  4035b6:	a36c      	add	r3, pc, #432	; (adr r3, 403768 <_dtoa_r+0x298>)
  4035b8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4035bc:	f002 fb28 	bl	405c10 <__adddf3>
  4035c0:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4035c4:	4630      	mov	r0, r6
  4035c6:	f002 fc6f 	bl	405ea8 <__aeabi_i2d>
  4035ca:	a369      	add	r3, pc, #420	; (adr r3, 403770 <_dtoa_r+0x2a0>)
  4035cc:	e9d3 2300 	ldrd	r2, r3, [r3]
  4035d0:	f002 fcd0 	bl	405f74 <__aeabi_dmul>
  4035d4:	4602      	mov	r2, r0
  4035d6:	460b      	mov	r3, r1
  4035d8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4035dc:	f002 fb18 	bl	405c10 <__adddf3>
  4035e0:	e9cd 0104 	strd	r0, r1, [sp, #16]
  4035e4:	f002 ff76 	bl	4064d4 <__aeabi_d2iz>
  4035e8:	2200      	movs	r2, #0
  4035ea:	9002      	str	r0, [sp, #8]
  4035ec:	2300      	movs	r3, #0
  4035ee:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4035f2:	f002 ff31 	bl	406458 <__aeabi_dcmplt>
  4035f6:	2800      	cmp	r0, #0
  4035f8:	f040 8173 	bne.w	4038e2 <_dtoa_r+0x412>
  4035fc:	9d02      	ldr	r5, [sp, #8]
  4035fe:	2d16      	cmp	r5, #22
  403600:	f200 815d 	bhi.w	4038be <_dtoa_r+0x3ee>
  403604:	4b61      	ldr	r3, [pc, #388]	; (40378c <_dtoa_r+0x2bc>)
  403606:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  40360a:	e9d3 0100 	ldrd	r0, r1, [r3]
  40360e:	4652      	mov	r2, sl
  403610:	465b      	mov	r3, fp
  403612:	f002 ff3f 	bl	406494 <__aeabi_dcmpgt>
  403616:	2800      	cmp	r0, #0
  403618:	f000 81c5 	beq.w	4039a6 <_dtoa_r+0x4d6>
  40361c:	1e6b      	subs	r3, r5, #1
  40361e:	9302      	str	r3, [sp, #8]
  403620:	2300      	movs	r3, #0
  403622:	930e      	str	r3, [sp, #56]	; 0x38
  403624:	1bbf      	subs	r7, r7, r6
  403626:	1e7b      	subs	r3, r7, #1
  403628:	9306      	str	r3, [sp, #24]
  40362a:	f100 8154 	bmi.w	4038d6 <_dtoa_r+0x406>
  40362e:	2300      	movs	r3, #0
  403630:	9308      	str	r3, [sp, #32]
  403632:	9b02      	ldr	r3, [sp, #8]
  403634:	2b00      	cmp	r3, #0
  403636:	f2c0 8145 	blt.w	4038c4 <_dtoa_r+0x3f4>
  40363a:	9a06      	ldr	r2, [sp, #24]
  40363c:	930d      	str	r3, [sp, #52]	; 0x34
  40363e:	4611      	mov	r1, r2
  403640:	4419      	add	r1, r3
  403642:	2300      	movs	r3, #0
  403644:	9106      	str	r1, [sp, #24]
  403646:	930c      	str	r3, [sp, #48]	; 0x30
  403648:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40364a:	2b09      	cmp	r3, #9
  40364c:	d82a      	bhi.n	4036a4 <_dtoa_r+0x1d4>
  40364e:	2b05      	cmp	r3, #5
  403650:	f340 865b 	ble.w	40430a <_dtoa_r+0xe3a>
  403654:	3b04      	subs	r3, #4
  403656:	9324      	str	r3, [sp, #144]	; 0x90
  403658:	2500      	movs	r5, #0
  40365a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40365c:	3b02      	subs	r3, #2
  40365e:	2b03      	cmp	r3, #3
  403660:	f200 8642 	bhi.w	4042e8 <_dtoa_r+0xe18>
  403664:	e8df f013 	tbh	[pc, r3, lsl #1]
  403668:	02c903d4 	.word	0x02c903d4
  40366c:	046103df 	.word	0x046103df
  403670:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403672:	9e19      	ldr	r6, [sp, #100]	; 0x64
  403674:	443e      	add	r6, r7
  403676:	f206 4332 	addw	r3, r6, #1074	; 0x432
  40367a:	2b20      	cmp	r3, #32
  40367c:	f340 818e 	ble.w	40399c <_dtoa_r+0x4cc>
  403680:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  403684:	f206 4012 	addw	r0, r6, #1042	; 0x412
  403688:	409d      	lsls	r5, r3
  40368a:	fa2a f000 	lsr.w	r0, sl, r0
  40368e:	4328      	orrs	r0, r5
  403690:	f002 fbfa 	bl	405e88 <__aeabi_ui2d>
  403694:	2301      	movs	r3, #1
  403696:	3e01      	subs	r6, #1
  403698:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  40369c:	9314      	str	r3, [sp, #80]	; 0x50
  40369e:	e781      	b.n	4035a4 <_dtoa_r+0xd4>
  4036a0:	483b      	ldr	r0, [pc, #236]	; (403790 <_dtoa_r+0x2c0>)
  4036a2:	e743      	b.n	40352c <_dtoa_r+0x5c>
  4036a4:	2100      	movs	r1, #0
  4036a6:	6461      	str	r1, [r4, #68]	; 0x44
  4036a8:	4620      	mov	r0, r4
  4036aa:	9125      	str	r1, [sp, #148]	; 0x94
  4036ac:	f001 fa3e 	bl	404b2c <_Balloc>
  4036b0:	f04f 33ff 	mov.w	r3, #4294967295
  4036b4:	930a      	str	r3, [sp, #40]	; 0x28
  4036b6:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4036b8:	930f      	str	r3, [sp, #60]	; 0x3c
  4036ba:	2301      	movs	r3, #1
  4036bc:	9004      	str	r0, [sp, #16]
  4036be:	6420      	str	r0, [r4, #64]	; 0x40
  4036c0:	9224      	str	r2, [sp, #144]	; 0x90
  4036c2:	930b      	str	r3, [sp, #44]	; 0x2c
  4036c4:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4036c6:	2b00      	cmp	r3, #0
  4036c8:	f2c0 80d9 	blt.w	40387e <_dtoa_r+0x3ae>
  4036cc:	9a02      	ldr	r2, [sp, #8]
  4036ce:	2a0e      	cmp	r2, #14
  4036d0:	f300 80d5 	bgt.w	40387e <_dtoa_r+0x3ae>
  4036d4:	4b2d      	ldr	r3, [pc, #180]	; (40378c <_dtoa_r+0x2bc>)
  4036d6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4036da:	e9d3 2300 	ldrd	r2, r3, [r3]
  4036de:	e9cd 2308 	strd	r2, r3, [sp, #32]
  4036e2:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4036e4:	2b00      	cmp	r3, #0
  4036e6:	f2c0 83ba 	blt.w	403e5e <_dtoa_r+0x98e>
  4036ea:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  4036ee:	4650      	mov	r0, sl
  4036f0:	462a      	mov	r2, r5
  4036f2:	4633      	mov	r3, r6
  4036f4:	4659      	mov	r1, fp
  4036f6:	f002 fd67 	bl	4061c8 <__aeabi_ddiv>
  4036fa:	f002 feeb 	bl	4064d4 <__aeabi_d2iz>
  4036fe:	4680      	mov	r8, r0
  403700:	f002 fbd2 	bl	405ea8 <__aeabi_i2d>
  403704:	462a      	mov	r2, r5
  403706:	4633      	mov	r3, r6
  403708:	f002 fc34 	bl	405f74 <__aeabi_dmul>
  40370c:	460b      	mov	r3, r1
  40370e:	4602      	mov	r2, r0
  403710:	4659      	mov	r1, fp
  403712:	4650      	mov	r0, sl
  403714:	f002 fa7a 	bl	405c0c <__aeabi_dsub>
  403718:	9d04      	ldr	r5, [sp, #16]
  40371a:	f108 0330 	add.w	r3, r8, #48	; 0x30
  40371e:	702b      	strb	r3, [r5, #0]
  403720:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403722:	2b01      	cmp	r3, #1
  403724:	4606      	mov	r6, r0
  403726:	460f      	mov	r7, r1
  403728:	f105 0501 	add.w	r5, r5, #1
  40372c:	d068      	beq.n	403800 <_dtoa_r+0x330>
  40372e:	2200      	movs	r2, #0
  403730:	4b18      	ldr	r3, [pc, #96]	; (403794 <_dtoa_r+0x2c4>)
  403732:	f002 fc1f 	bl	405f74 <__aeabi_dmul>
  403736:	2200      	movs	r2, #0
  403738:	2300      	movs	r3, #0
  40373a:	4606      	mov	r6, r0
  40373c:	460f      	mov	r7, r1
  40373e:	f002 fe81 	bl	406444 <__aeabi_dcmpeq>
  403742:	2800      	cmp	r0, #0
  403744:	f040 8088 	bne.w	403858 <_dtoa_r+0x388>
  403748:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  40374c:	f04f 0a00 	mov.w	sl, #0
  403750:	f8df b040 	ldr.w	fp, [pc, #64]	; 403794 <_dtoa_r+0x2c4>
  403754:	940c      	str	r4, [sp, #48]	; 0x30
  403756:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  40375a:	e028      	b.n	4037ae <_dtoa_r+0x2de>
  40375c:	f3af 8000 	nop.w
  403760:	636f4361 	.word	0x636f4361
  403764:	3fd287a7 	.word	0x3fd287a7
  403768:	8b60c8b3 	.word	0x8b60c8b3
  40376c:	3fc68a28 	.word	0x3fc68a28
  403770:	509f79fb 	.word	0x509f79fb
  403774:	3fd34413 	.word	0x3fd34413
  403778:	7ff00000 	.word	0x7ff00000
  40377c:	00407579 	.word	0x00407579
  403780:	0040759c 	.word	0x0040759c
  403784:	004075a8 	.word	0x004075a8
  403788:	3ff80000 	.word	0x3ff80000
  40378c:	004075d8 	.word	0x004075d8
  403790:	00407578 	.word	0x00407578
  403794:	40240000 	.word	0x40240000
  403798:	f002 fbec 	bl	405f74 <__aeabi_dmul>
  40379c:	2200      	movs	r2, #0
  40379e:	2300      	movs	r3, #0
  4037a0:	4606      	mov	r6, r0
  4037a2:	460f      	mov	r7, r1
  4037a4:	f002 fe4e 	bl	406444 <__aeabi_dcmpeq>
  4037a8:	2800      	cmp	r0, #0
  4037aa:	f040 83c1 	bne.w	403f30 <_dtoa_r+0xa60>
  4037ae:	4642      	mov	r2, r8
  4037b0:	464b      	mov	r3, r9
  4037b2:	4630      	mov	r0, r6
  4037b4:	4639      	mov	r1, r7
  4037b6:	f002 fd07 	bl	4061c8 <__aeabi_ddiv>
  4037ba:	f002 fe8b 	bl	4064d4 <__aeabi_d2iz>
  4037be:	4604      	mov	r4, r0
  4037c0:	f002 fb72 	bl	405ea8 <__aeabi_i2d>
  4037c4:	4642      	mov	r2, r8
  4037c6:	464b      	mov	r3, r9
  4037c8:	f002 fbd4 	bl	405f74 <__aeabi_dmul>
  4037cc:	4602      	mov	r2, r0
  4037ce:	460b      	mov	r3, r1
  4037d0:	4630      	mov	r0, r6
  4037d2:	4639      	mov	r1, r7
  4037d4:	f002 fa1a 	bl	405c0c <__aeabi_dsub>
  4037d8:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  4037dc:	9e04      	ldr	r6, [sp, #16]
  4037de:	f805 eb01 	strb.w	lr, [r5], #1
  4037e2:	eba5 0e06 	sub.w	lr, r5, r6
  4037e6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  4037e8:	45b6      	cmp	lr, r6
  4037ea:	e9cd 0106 	strd	r0, r1, [sp, #24]
  4037ee:	4652      	mov	r2, sl
  4037f0:	465b      	mov	r3, fp
  4037f2:	d1d1      	bne.n	403798 <_dtoa_r+0x2c8>
  4037f4:	46a0      	mov	r8, r4
  4037f6:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  4037fa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4037fc:	4606      	mov	r6, r0
  4037fe:	460f      	mov	r7, r1
  403800:	4632      	mov	r2, r6
  403802:	463b      	mov	r3, r7
  403804:	4630      	mov	r0, r6
  403806:	4639      	mov	r1, r7
  403808:	f002 fa02 	bl	405c10 <__adddf3>
  40380c:	4606      	mov	r6, r0
  40380e:	460f      	mov	r7, r1
  403810:	4602      	mov	r2, r0
  403812:	460b      	mov	r3, r1
  403814:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403818:	f002 fe1e 	bl	406458 <__aeabi_dcmplt>
  40381c:	b948      	cbnz	r0, 403832 <_dtoa_r+0x362>
  40381e:	4632      	mov	r2, r6
  403820:	463b      	mov	r3, r7
  403822:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403826:	f002 fe0d 	bl	406444 <__aeabi_dcmpeq>
  40382a:	b1a8      	cbz	r0, 403858 <_dtoa_r+0x388>
  40382c:	f018 0f01 	tst.w	r8, #1
  403830:	d012      	beq.n	403858 <_dtoa_r+0x388>
  403832:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403836:	9a04      	ldr	r2, [sp, #16]
  403838:	1e6b      	subs	r3, r5, #1
  40383a:	e004      	b.n	403846 <_dtoa_r+0x376>
  40383c:	429a      	cmp	r2, r3
  40383e:	f000 8401 	beq.w	404044 <_dtoa_r+0xb74>
  403842:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  403846:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  40384a:	f103 0501 	add.w	r5, r3, #1
  40384e:	d0f5      	beq.n	40383c <_dtoa_r+0x36c>
  403850:	f108 0801 	add.w	r8, r8, #1
  403854:	f883 8000 	strb.w	r8, [r3]
  403858:	4649      	mov	r1, r9
  40385a:	4620      	mov	r0, r4
  40385c:	f001 f98c 	bl	404b78 <_Bfree>
  403860:	2200      	movs	r2, #0
  403862:	9b02      	ldr	r3, [sp, #8]
  403864:	702a      	strb	r2, [r5, #0]
  403866:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403868:	3301      	adds	r3, #1
  40386a:	6013      	str	r3, [r2, #0]
  40386c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40386e:	2b00      	cmp	r3, #0
  403870:	f000 839e 	beq.w	403fb0 <_dtoa_r+0xae0>
  403874:	9804      	ldr	r0, [sp, #16]
  403876:	601d      	str	r5, [r3, #0]
  403878:	b01b      	add	sp, #108	; 0x6c
  40387a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40387e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403880:	2a00      	cmp	r2, #0
  403882:	d03e      	beq.n	403902 <_dtoa_r+0x432>
  403884:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403886:	2a01      	cmp	r2, #1
  403888:	f340 8311 	ble.w	403eae <_dtoa_r+0x9de>
  40388c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40388e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403890:	1e5f      	subs	r7, r3, #1
  403892:	42ba      	cmp	r2, r7
  403894:	f2c0 838f 	blt.w	403fb6 <_dtoa_r+0xae6>
  403898:	1bd7      	subs	r7, r2, r7
  40389a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40389c:	2b00      	cmp	r3, #0
  40389e:	f2c0 848b 	blt.w	4041b8 <_dtoa_r+0xce8>
  4038a2:	9d08      	ldr	r5, [sp, #32]
  4038a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4038a6:	9a08      	ldr	r2, [sp, #32]
  4038a8:	441a      	add	r2, r3
  4038aa:	9208      	str	r2, [sp, #32]
  4038ac:	9a06      	ldr	r2, [sp, #24]
  4038ae:	2101      	movs	r1, #1
  4038b0:	441a      	add	r2, r3
  4038b2:	4620      	mov	r0, r4
  4038b4:	9206      	str	r2, [sp, #24]
  4038b6:	f001 f9f9 	bl	404cac <__i2b>
  4038ba:	4606      	mov	r6, r0
  4038bc:	e024      	b.n	403908 <_dtoa_r+0x438>
  4038be:	2301      	movs	r3, #1
  4038c0:	930e      	str	r3, [sp, #56]	; 0x38
  4038c2:	e6af      	b.n	403624 <_dtoa_r+0x154>
  4038c4:	9a08      	ldr	r2, [sp, #32]
  4038c6:	9b02      	ldr	r3, [sp, #8]
  4038c8:	1ad2      	subs	r2, r2, r3
  4038ca:	425b      	negs	r3, r3
  4038cc:	930c      	str	r3, [sp, #48]	; 0x30
  4038ce:	2300      	movs	r3, #0
  4038d0:	9208      	str	r2, [sp, #32]
  4038d2:	930d      	str	r3, [sp, #52]	; 0x34
  4038d4:	e6b8      	b.n	403648 <_dtoa_r+0x178>
  4038d6:	f1c7 0301 	rsb	r3, r7, #1
  4038da:	9308      	str	r3, [sp, #32]
  4038dc:	2300      	movs	r3, #0
  4038de:	9306      	str	r3, [sp, #24]
  4038e0:	e6a7      	b.n	403632 <_dtoa_r+0x162>
  4038e2:	9d02      	ldr	r5, [sp, #8]
  4038e4:	4628      	mov	r0, r5
  4038e6:	f002 fadf 	bl	405ea8 <__aeabi_i2d>
  4038ea:	4602      	mov	r2, r0
  4038ec:	460b      	mov	r3, r1
  4038ee:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4038f2:	f002 fda7 	bl	406444 <__aeabi_dcmpeq>
  4038f6:	2800      	cmp	r0, #0
  4038f8:	f47f ae80 	bne.w	4035fc <_dtoa_r+0x12c>
  4038fc:	1e6b      	subs	r3, r5, #1
  4038fe:	9302      	str	r3, [sp, #8]
  403900:	e67c      	b.n	4035fc <_dtoa_r+0x12c>
  403902:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403904:	9d08      	ldr	r5, [sp, #32]
  403906:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403908:	2d00      	cmp	r5, #0
  40390a:	dd0c      	ble.n	403926 <_dtoa_r+0x456>
  40390c:	9906      	ldr	r1, [sp, #24]
  40390e:	2900      	cmp	r1, #0
  403910:	460b      	mov	r3, r1
  403912:	dd08      	ble.n	403926 <_dtoa_r+0x456>
  403914:	42a9      	cmp	r1, r5
  403916:	9a08      	ldr	r2, [sp, #32]
  403918:	bfa8      	it	ge
  40391a:	462b      	movge	r3, r5
  40391c:	1ad2      	subs	r2, r2, r3
  40391e:	1aed      	subs	r5, r5, r3
  403920:	1acb      	subs	r3, r1, r3
  403922:	9208      	str	r2, [sp, #32]
  403924:	9306      	str	r3, [sp, #24]
  403926:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403928:	b1d3      	cbz	r3, 403960 <_dtoa_r+0x490>
  40392a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40392c:	2b00      	cmp	r3, #0
  40392e:	f000 82b7 	beq.w	403ea0 <_dtoa_r+0x9d0>
  403932:	2f00      	cmp	r7, #0
  403934:	dd10      	ble.n	403958 <_dtoa_r+0x488>
  403936:	4631      	mov	r1, r6
  403938:	463a      	mov	r2, r7
  40393a:	4620      	mov	r0, r4
  40393c:	f001 fa52 	bl	404de4 <__pow5mult>
  403940:	464a      	mov	r2, r9
  403942:	4601      	mov	r1, r0
  403944:	4606      	mov	r6, r0
  403946:	4620      	mov	r0, r4
  403948:	f001 f9ba 	bl	404cc0 <__multiply>
  40394c:	4649      	mov	r1, r9
  40394e:	4680      	mov	r8, r0
  403950:	4620      	mov	r0, r4
  403952:	f001 f911 	bl	404b78 <_Bfree>
  403956:	46c1      	mov	r9, r8
  403958:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40395a:	1bda      	subs	r2, r3, r7
  40395c:	f040 82a1 	bne.w	403ea2 <_dtoa_r+0x9d2>
  403960:	2101      	movs	r1, #1
  403962:	4620      	mov	r0, r4
  403964:	f001 f9a2 	bl	404cac <__i2b>
  403968:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40396a:	2b00      	cmp	r3, #0
  40396c:	4680      	mov	r8, r0
  40396e:	dd1c      	ble.n	4039aa <_dtoa_r+0x4da>
  403970:	4601      	mov	r1, r0
  403972:	461a      	mov	r2, r3
  403974:	4620      	mov	r0, r4
  403976:	f001 fa35 	bl	404de4 <__pow5mult>
  40397a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40397c:	2b01      	cmp	r3, #1
  40397e:	4680      	mov	r8, r0
  403980:	f340 8254 	ble.w	403e2c <_dtoa_r+0x95c>
  403984:	2300      	movs	r3, #0
  403986:	930c      	str	r3, [sp, #48]	; 0x30
  403988:	f8d8 3010 	ldr.w	r3, [r8, #16]
  40398c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403990:	6918      	ldr	r0, [r3, #16]
  403992:	f001 f93b 	bl	404c0c <__hi0bits>
  403996:	f1c0 0020 	rsb	r0, r0, #32
  40399a:	e010      	b.n	4039be <_dtoa_r+0x4ee>
  40399c:	f1c3 0520 	rsb	r5, r3, #32
  4039a0:	fa0a f005 	lsl.w	r0, sl, r5
  4039a4:	e674      	b.n	403690 <_dtoa_r+0x1c0>
  4039a6:	900e      	str	r0, [sp, #56]	; 0x38
  4039a8:	e63c      	b.n	403624 <_dtoa_r+0x154>
  4039aa:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4039ac:	2b01      	cmp	r3, #1
  4039ae:	f340 8287 	ble.w	403ec0 <_dtoa_r+0x9f0>
  4039b2:	2300      	movs	r3, #0
  4039b4:	930c      	str	r3, [sp, #48]	; 0x30
  4039b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4039b8:	2001      	movs	r0, #1
  4039ba:	2b00      	cmp	r3, #0
  4039bc:	d1e4      	bne.n	403988 <_dtoa_r+0x4b8>
  4039be:	9a06      	ldr	r2, [sp, #24]
  4039c0:	4410      	add	r0, r2
  4039c2:	f010 001f 	ands.w	r0, r0, #31
  4039c6:	f000 80a1 	beq.w	403b0c <_dtoa_r+0x63c>
  4039ca:	f1c0 0320 	rsb	r3, r0, #32
  4039ce:	2b04      	cmp	r3, #4
  4039d0:	f340 849e 	ble.w	404310 <_dtoa_r+0xe40>
  4039d4:	9b08      	ldr	r3, [sp, #32]
  4039d6:	f1c0 001c 	rsb	r0, r0, #28
  4039da:	4403      	add	r3, r0
  4039dc:	9308      	str	r3, [sp, #32]
  4039de:	4613      	mov	r3, r2
  4039e0:	4403      	add	r3, r0
  4039e2:	4405      	add	r5, r0
  4039e4:	9306      	str	r3, [sp, #24]
  4039e6:	9b08      	ldr	r3, [sp, #32]
  4039e8:	2b00      	cmp	r3, #0
  4039ea:	dd05      	ble.n	4039f8 <_dtoa_r+0x528>
  4039ec:	4649      	mov	r1, r9
  4039ee:	461a      	mov	r2, r3
  4039f0:	4620      	mov	r0, r4
  4039f2:	f001 fa47 	bl	404e84 <__lshift>
  4039f6:	4681      	mov	r9, r0
  4039f8:	9b06      	ldr	r3, [sp, #24]
  4039fa:	2b00      	cmp	r3, #0
  4039fc:	dd05      	ble.n	403a0a <_dtoa_r+0x53a>
  4039fe:	4641      	mov	r1, r8
  403a00:	461a      	mov	r2, r3
  403a02:	4620      	mov	r0, r4
  403a04:	f001 fa3e 	bl	404e84 <__lshift>
  403a08:	4680      	mov	r8, r0
  403a0a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403a0c:	2b00      	cmp	r3, #0
  403a0e:	f040 8086 	bne.w	403b1e <_dtoa_r+0x64e>
  403a12:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403a14:	2b00      	cmp	r3, #0
  403a16:	f340 8266 	ble.w	403ee6 <_dtoa_r+0xa16>
  403a1a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403a1c:	2b00      	cmp	r3, #0
  403a1e:	f000 8098 	beq.w	403b52 <_dtoa_r+0x682>
  403a22:	2d00      	cmp	r5, #0
  403a24:	dd05      	ble.n	403a32 <_dtoa_r+0x562>
  403a26:	4631      	mov	r1, r6
  403a28:	462a      	mov	r2, r5
  403a2a:	4620      	mov	r0, r4
  403a2c:	f001 fa2a 	bl	404e84 <__lshift>
  403a30:	4606      	mov	r6, r0
  403a32:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403a34:	2b00      	cmp	r3, #0
  403a36:	f040 8337 	bne.w	4040a8 <_dtoa_r+0xbd8>
  403a3a:	9606      	str	r6, [sp, #24]
  403a3c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403a3e:	9a04      	ldr	r2, [sp, #16]
  403a40:	f8dd b018 	ldr.w	fp, [sp, #24]
  403a44:	3b01      	subs	r3, #1
  403a46:	18d3      	adds	r3, r2, r3
  403a48:	930b      	str	r3, [sp, #44]	; 0x2c
  403a4a:	f00a 0301 	and.w	r3, sl, #1
  403a4e:	930c      	str	r3, [sp, #48]	; 0x30
  403a50:	4617      	mov	r7, r2
  403a52:	46c2      	mov	sl, r8
  403a54:	4651      	mov	r1, sl
  403a56:	4648      	mov	r0, r9
  403a58:	f7ff fca6 	bl	4033a8 <quorem>
  403a5c:	4631      	mov	r1, r6
  403a5e:	4605      	mov	r5, r0
  403a60:	4648      	mov	r0, r9
  403a62:	f001 fa61 	bl	404f28 <__mcmp>
  403a66:	465a      	mov	r2, fp
  403a68:	900a      	str	r0, [sp, #40]	; 0x28
  403a6a:	4651      	mov	r1, sl
  403a6c:	4620      	mov	r0, r4
  403a6e:	f001 fa77 	bl	404f60 <__mdiff>
  403a72:	68c2      	ldr	r2, [r0, #12]
  403a74:	4680      	mov	r8, r0
  403a76:	f105 0330 	add.w	r3, r5, #48	; 0x30
  403a7a:	2a00      	cmp	r2, #0
  403a7c:	f040 822b 	bne.w	403ed6 <_dtoa_r+0xa06>
  403a80:	4601      	mov	r1, r0
  403a82:	4648      	mov	r0, r9
  403a84:	9308      	str	r3, [sp, #32]
  403a86:	f001 fa4f 	bl	404f28 <__mcmp>
  403a8a:	4641      	mov	r1, r8
  403a8c:	9006      	str	r0, [sp, #24]
  403a8e:	4620      	mov	r0, r4
  403a90:	f001 f872 	bl	404b78 <_Bfree>
  403a94:	9a06      	ldr	r2, [sp, #24]
  403a96:	9b08      	ldr	r3, [sp, #32]
  403a98:	b932      	cbnz	r2, 403aa8 <_dtoa_r+0x5d8>
  403a9a:	9924      	ldr	r1, [sp, #144]	; 0x90
  403a9c:	b921      	cbnz	r1, 403aa8 <_dtoa_r+0x5d8>
  403a9e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403aa0:	2a00      	cmp	r2, #0
  403aa2:	f000 83ef 	beq.w	404284 <_dtoa_r+0xdb4>
  403aa6:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403aa8:	990a      	ldr	r1, [sp, #40]	; 0x28
  403aaa:	2900      	cmp	r1, #0
  403aac:	f2c0 829f 	blt.w	403fee <_dtoa_r+0xb1e>
  403ab0:	d105      	bne.n	403abe <_dtoa_r+0x5ee>
  403ab2:	9924      	ldr	r1, [sp, #144]	; 0x90
  403ab4:	b919      	cbnz	r1, 403abe <_dtoa_r+0x5ee>
  403ab6:	990c      	ldr	r1, [sp, #48]	; 0x30
  403ab8:	2900      	cmp	r1, #0
  403aba:	f000 8298 	beq.w	403fee <_dtoa_r+0xb1e>
  403abe:	2a00      	cmp	r2, #0
  403ac0:	f300 8306 	bgt.w	4040d0 <_dtoa_r+0xc00>
  403ac4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403ac6:	703b      	strb	r3, [r7, #0]
  403ac8:	f107 0801 	add.w	r8, r7, #1
  403acc:	4297      	cmp	r7, r2
  403ace:	4645      	mov	r5, r8
  403ad0:	f000 830c 	beq.w	4040ec <_dtoa_r+0xc1c>
  403ad4:	4649      	mov	r1, r9
  403ad6:	2300      	movs	r3, #0
  403ad8:	220a      	movs	r2, #10
  403ada:	4620      	mov	r0, r4
  403adc:	f001 f856 	bl	404b8c <__multadd>
  403ae0:	455e      	cmp	r6, fp
  403ae2:	4681      	mov	r9, r0
  403ae4:	4631      	mov	r1, r6
  403ae6:	f04f 0300 	mov.w	r3, #0
  403aea:	f04f 020a 	mov.w	r2, #10
  403aee:	4620      	mov	r0, r4
  403af0:	f000 81eb 	beq.w	403eca <_dtoa_r+0x9fa>
  403af4:	f001 f84a 	bl	404b8c <__multadd>
  403af8:	4659      	mov	r1, fp
  403afa:	4606      	mov	r6, r0
  403afc:	2300      	movs	r3, #0
  403afe:	220a      	movs	r2, #10
  403b00:	4620      	mov	r0, r4
  403b02:	f001 f843 	bl	404b8c <__multadd>
  403b06:	4647      	mov	r7, r8
  403b08:	4683      	mov	fp, r0
  403b0a:	e7a3      	b.n	403a54 <_dtoa_r+0x584>
  403b0c:	201c      	movs	r0, #28
  403b0e:	9b08      	ldr	r3, [sp, #32]
  403b10:	4403      	add	r3, r0
  403b12:	9308      	str	r3, [sp, #32]
  403b14:	9b06      	ldr	r3, [sp, #24]
  403b16:	4403      	add	r3, r0
  403b18:	4405      	add	r5, r0
  403b1a:	9306      	str	r3, [sp, #24]
  403b1c:	e763      	b.n	4039e6 <_dtoa_r+0x516>
  403b1e:	4641      	mov	r1, r8
  403b20:	4648      	mov	r0, r9
  403b22:	f001 fa01 	bl	404f28 <__mcmp>
  403b26:	2800      	cmp	r0, #0
  403b28:	f6bf af73 	bge.w	403a12 <_dtoa_r+0x542>
  403b2c:	9f02      	ldr	r7, [sp, #8]
  403b2e:	4649      	mov	r1, r9
  403b30:	2300      	movs	r3, #0
  403b32:	220a      	movs	r2, #10
  403b34:	4620      	mov	r0, r4
  403b36:	3f01      	subs	r7, #1
  403b38:	9702      	str	r7, [sp, #8]
  403b3a:	f001 f827 	bl	404b8c <__multadd>
  403b3e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403b40:	4681      	mov	r9, r0
  403b42:	2b00      	cmp	r3, #0
  403b44:	f040 83b6 	bne.w	4042b4 <_dtoa_r+0xde4>
  403b48:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403b4a:	2b00      	cmp	r3, #0
  403b4c:	f340 83bf 	ble.w	4042ce <_dtoa_r+0xdfe>
  403b50:	930a      	str	r3, [sp, #40]	; 0x28
  403b52:	f8dd b010 	ldr.w	fp, [sp, #16]
  403b56:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  403b58:	465d      	mov	r5, fp
  403b5a:	e002      	b.n	403b62 <_dtoa_r+0x692>
  403b5c:	f001 f816 	bl	404b8c <__multadd>
  403b60:	4681      	mov	r9, r0
  403b62:	4641      	mov	r1, r8
  403b64:	4648      	mov	r0, r9
  403b66:	f7ff fc1f 	bl	4033a8 <quorem>
  403b6a:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  403b6e:	f805 ab01 	strb.w	sl, [r5], #1
  403b72:	eba5 030b 	sub.w	r3, r5, fp
  403b76:	42bb      	cmp	r3, r7
  403b78:	f04f 020a 	mov.w	r2, #10
  403b7c:	f04f 0300 	mov.w	r3, #0
  403b80:	4649      	mov	r1, r9
  403b82:	4620      	mov	r0, r4
  403b84:	dbea      	blt.n	403b5c <_dtoa_r+0x68c>
  403b86:	9b04      	ldr	r3, [sp, #16]
  403b88:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403b8a:	2a01      	cmp	r2, #1
  403b8c:	bfac      	ite	ge
  403b8e:	189b      	addge	r3, r3, r2
  403b90:	3301      	addlt	r3, #1
  403b92:	461d      	mov	r5, r3
  403b94:	f04f 0b00 	mov.w	fp, #0
  403b98:	4649      	mov	r1, r9
  403b9a:	2201      	movs	r2, #1
  403b9c:	4620      	mov	r0, r4
  403b9e:	f001 f971 	bl	404e84 <__lshift>
  403ba2:	4641      	mov	r1, r8
  403ba4:	4681      	mov	r9, r0
  403ba6:	f001 f9bf 	bl	404f28 <__mcmp>
  403baa:	2800      	cmp	r0, #0
  403bac:	f340 823d 	ble.w	40402a <_dtoa_r+0xb5a>
  403bb0:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  403bb4:	9904      	ldr	r1, [sp, #16]
  403bb6:	1e6b      	subs	r3, r5, #1
  403bb8:	e004      	b.n	403bc4 <_dtoa_r+0x6f4>
  403bba:	428b      	cmp	r3, r1
  403bbc:	f000 81ae 	beq.w	403f1c <_dtoa_r+0xa4c>
  403bc0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  403bc4:	2a39      	cmp	r2, #57	; 0x39
  403bc6:	f103 0501 	add.w	r5, r3, #1
  403bca:	d0f6      	beq.n	403bba <_dtoa_r+0x6ea>
  403bcc:	3201      	adds	r2, #1
  403bce:	701a      	strb	r2, [r3, #0]
  403bd0:	4641      	mov	r1, r8
  403bd2:	4620      	mov	r0, r4
  403bd4:	f000 ffd0 	bl	404b78 <_Bfree>
  403bd8:	2e00      	cmp	r6, #0
  403bda:	f43f ae3d 	beq.w	403858 <_dtoa_r+0x388>
  403bde:	f1bb 0f00 	cmp.w	fp, #0
  403be2:	d005      	beq.n	403bf0 <_dtoa_r+0x720>
  403be4:	45b3      	cmp	fp, r6
  403be6:	d003      	beq.n	403bf0 <_dtoa_r+0x720>
  403be8:	4659      	mov	r1, fp
  403bea:	4620      	mov	r0, r4
  403bec:	f000 ffc4 	bl	404b78 <_Bfree>
  403bf0:	4631      	mov	r1, r6
  403bf2:	4620      	mov	r0, r4
  403bf4:	f000 ffc0 	bl	404b78 <_Bfree>
  403bf8:	e62e      	b.n	403858 <_dtoa_r+0x388>
  403bfa:	2300      	movs	r3, #0
  403bfc:	930b      	str	r3, [sp, #44]	; 0x2c
  403bfe:	9b02      	ldr	r3, [sp, #8]
  403c00:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403c02:	4413      	add	r3, r2
  403c04:	930f      	str	r3, [sp, #60]	; 0x3c
  403c06:	3301      	adds	r3, #1
  403c08:	2b01      	cmp	r3, #1
  403c0a:	461f      	mov	r7, r3
  403c0c:	461e      	mov	r6, r3
  403c0e:	930a      	str	r3, [sp, #40]	; 0x28
  403c10:	bfb8      	it	lt
  403c12:	2701      	movlt	r7, #1
  403c14:	2100      	movs	r1, #0
  403c16:	2f17      	cmp	r7, #23
  403c18:	6461      	str	r1, [r4, #68]	; 0x44
  403c1a:	d90a      	bls.n	403c32 <_dtoa_r+0x762>
  403c1c:	2201      	movs	r2, #1
  403c1e:	2304      	movs	r3, #4
  403c20:	005b      	lsls	r3, r3, #1
  403c22:	f103 0014 	add.w	r0, r3, #20
  403c26:	4287      	cmp	r7, r0
  403c28:	4611      	mov	r1, r2
  403c2a:	f102 0201 	add.w	r2, r2, #1
  403c2e:	d2f7      	bcs.n	403c20 <_dtoa_r+0x750>
  403c30:	6461      	str	r1, [r4, #68]	; 0x44
  403c32:	4620      	mov	r0, r4
  403c34:	f000 ff7a 	bl	404b2c <_Balloc>
  403c38:	2e0e      	cmp	r6, #14
  403c3a:	9004      	str	r0, [sp, #16]
  403c3c:	6420      	str	r0, [r4, #64]	; 0x40
  403c3e:	f63f ad41 	bhi.w	4036c4 <_dtoa_r+0x1f4>
  403c42:	2d00      	cmp	r5, #0
  403c44:	f43f ad3e 	beq.w	4036c4 <_dtoa_r+0x1f4>
  403c48:	9902      	ldr	r1, [sp, #8]
  403c4a:	2900      	cmp	r1, #0
  403c4c:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  403c50:	f340 8202 	ble.w	404058 <_dtoa_r+0xb88>
  403c54:	4bb8      	ldr	r3, [pc, #736]	; (403f38 <_dtoa_r+0xa68>)
  403c56:	f001 020f 	and.w	r2, r1, #15
  403c5a:	110d      	asrs	r5, r1, #4
  403c5c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403c60:	06e9      	lsls	r1, r5, #27
  403c62:	e9d3 6700 	ldrd	r6, r7, [r3]
  403c66:	f140 81ae 	bpl.w	403fc6 <_dtoa_r+0xaf6>
  403c6a:	4bb4      	ldr	r3, [pc, #720]	; (403f3c <_dtoa_r+0xa6c>)
  403c6c:	4650      	mov	r0, sl
  403c6e:	4659      	mov	r1, fp
  403c70:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  403c74:	f002 faa8 	bl	4061c8 <__aeabi_ddiv>
  403c78:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  403c7c:	f005 050f 	and.w	r5, r5, #15
  403c80:	f04f 0a03 	mov.w	sl, #3
  403c84:	b18d      	cbz	r5, 403caa <_dtoa_r+0x7da>
  403c86:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 403f3c <_dtoa_r+0xa6c>
  403c8a:	07ea      	lsls	r2, r5, #31
  403c8c:	d509      	bpl.n	403ca2 <_dtoa_r+0x7d2>
  403c8e:	4630      	mov	r0, r6
  403c90:	4639      	mov	r1, r7
  403c92:	e9d8 2300 	ldrd	r2, r3, [r8]
  403c96:	f002 f96d 	bl	405f74 <__aeabi_dmul>
  403c9a:	f10a 0a01 	add.w	sl, sl, #1
  403c9e:	4606      	mov	r6, r0
  403ca0:	460f      	mov	r7, r1
  403ca2:	106d      	asrs	r5, r5, #1
  403ca4:	f108 0808 	add.w	r8, r8, #8
  403ca8:	d1ef      	bne.n	403c8a <_dtoa_r+0x7ba>
  403caa:	463b      	mov	r3, r7
  403cac:	4632      	mov	r2, r6
  403cae:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  403cb2:	f002 fa89 	bl	4061c8 <__aeabi_ddiv>
  403cb6:	4607      	mov	r7, r0
  403cb8:	4688      	mov	r8, r1
  403cba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403cbc:	b143      	cbz	r3, 403cd0 <_dtoa_r+0x800>
  403cbe:	2200      	movs	r2, #0
  403cc0:	4b9f      	ldr	r3, [pc, #636]	; (403f40 <_dtoa_r+0xa70>)
  403cc2:	4638      	mov	r0, r7
  403cc4:	4641      	mov	r1, r8
  403cc6:	f002 fbc7 	bl	406458 <__aeabi_dcmplt>
  403cca:	2800      	cmp	r0, #0
  403ccc:	f040 8286 	bne.w	4041dc <_dtoa_r+0xd0c>
  403cd0:	4650      	mov	r0, sl
  403cd2:	f002 f8e9 	bl	405ea8 <__aeabi_i2d>
  403cd6:	463a      	mov	r2, r7
  403cd8:	4643      	mov	r3, r8
  403cda:	f002 f94b 	bl	405f74 <__aeabi_dmul>
  403cde:	4b99      	ldr	r3, [pc, #612]	; (403f44 <_dtoa_r+0xa74>)
  403ce0:	2200      	movs	r2, #0
  403ce2:	f001 ff95 	bl	405c10 <__adddf3>
  403ce6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ce8:	4605      	mov	r5, r0
  403cea:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403cee:	2b00      	cmp	r3, #0
  403cf0:	f000 813e 	beq.w	403f70 <_dtoa_r+0xaa0>
  403cf4:	9b02      	ldr	r3, [sp, #8]
  403cf6:	9315      	str	r3, [sp, #84]	; 0x54
  403cf8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403cfa:	9312      	str	r3, [sp, #72]	; 0x48
  403cfc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403cfe:	2b00      	cmp	r3, #0
  403d00:	f000 81fa 	beq.w	4040f8 <_dtoa_r+0xc28>
  403d04:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403d06:	4b8c      	ldr	r3, [pc, #560]	; (403f38 <_dtoa_r+0xa68>)
  403d08:	498f      	ldr	r1, [pc, #572]	; (403f48 <_dtoa_r+0xa78>)
  403d0a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403d0e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  403d12:	2000      	movs	r0, #0
  403d14:	f002 fa58 	bl	4061c8 <__aeabi_ddiv>
  403d18:	462a      	mov	r2, r5
  403d1a:	4633      	mov	r3, r6
  403d1c:	f001 ff76 	bl	405c0c <__aeabi_dsub>
  403d20:	4682      	mov	sl, r0
  403d22:	468b      	mov	fp, r1
  403d24:	4638      	mov	r0, r7
  403d26:	4641      	mov	r1, r8
  403d28:	f002 fbd4 	bl	4064d4 <__aeabi_d2iz>
  403d2c:	4605      	mov	r5, r0
  403d2e:	f002 f8bb 	bl	405ea8 <__aeabi_i2d>
  403d32:	4602      	mov	r2, r0
  403d34:	460b      	mov	r3, r1
  403d36:	4638      	mov	r0, r7
  403d38:	4641      	mov	r1, r8
  403d3a:	f001 ff67 	bl	405c0c <__aeabi_dsub>
  403d3e:	3530      	adds	r5, #48	; 0x30
  403d40:	fa5f f885 	uxtb.w	r8, r5
  403d44:	9d04      	ldr	r5, [sp, #16]
  403d46:	4606      	mov	r6, r0
  403d48:	460f      	mov	r7, r1
  403d4a:	f885 8000 	strb.w	r8, [r5]
  403d4e:	4602      	mov	r2, r0
  403d50:	460b      	mov	r3, r1
  403d52:	4650      	mov	r0, sl
  403d54:	4659      	mov	r1, fp
  403d56:	3501      	adds	r5, #1
  403d58:	f002 fb9c 	bl	406494 <__aeabi_dcmpgt>
  403d5c:	2800      	cmp	r0, #0
  403d5e:	d154      	bne.n	403e0a <_dtoa_r+0x93a>
  403d60:	4632      	mov	r2, r6
  403d62:	463b      	mov	r3, r7
  403d64:	2000      	movs	r0, #0
  403d66:	4976      	ldr	r1, [pc, #472]	; (403f40 <_dtoa_r+0xa70>)
  403d68:	f001 ff50 	bl	405c0c <__aeabi_dsub>
  403d6c:	4602      	mov	r2, r0
  403d6e:	460b      	mov	r3, r1
  403d70:	4650      	mov	r0, sl
  403d72:	4659      	mov	r1, fp
  403d74:	f002 fb8e 	bl	406494 <__aeabi_dcmpgt>
  403d78:	2800      	cmp	r0, #0
  403d7a:	f040 8270 	bne.w	40425e <_dtoa_r+0xd8e>
  403d7e:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403d80:	2a01      	cmp	r2, #1
  403d82:	f000 8111 	beq.w	403fa8 <_dtoa_r+0xad8>
  403d86:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403d88:	9a04      	ldr	r2, [sp, #16]
  403d8a:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403d8e:	4413      	add	r3, r2
  403d90:	4699      	mov	r9, r3
  403d92:	e00d      	b.n	403db0 <_dtoa_r+0x8e0>
  403d94:	2000      	movs	r0, #0
  403d96:	496a      	ldr	r1, [pc, #424]	; (403f40 <_dtoa_r+0xa70>)
  403d98:	f001 ff38 	bl	405c0c <__aeabi_dsub>
  403d9c:	4652      	mov	r2, sl
  403d9e:	465b      	mov	r3, fp
  403da0:	f002 fb5a 	bl	406458 <__aeabi_dcmplt>
  403da4:	2800      	cmp	r0, #0
  403da6:	f040 8258 	bne.w	40425a <_dtoa_r+0xd8a>
  403daa:	454d      	cmp	r5, r9
  403dac:	f000 80fa 	beq.w	403fa4 <_dtoa_r+0xad4>
  403db0:	4650      	mov	r0, sl
  403db2:	4659      	mov	r1, fp
  403db4:	2200      	movs	r2, #0
  403db6:	4b65      	ldr	r3, [pc, #404]	; (403f4c <_dtoa_r+0xa7c>)
  403db8:	f002 f8dc 	bl	405f74 <__aeabi_dmul>
  403dbc:	2200      	movs	r2, #0
  403dbe:	4b63      	ldr	r3, [pc, #396]	; (403f4c <_dtoa_r+0xa7c>)
  403dc0:	4682      	mov	sl, r0
  403dc2:	468b      	mov	fp, r1
  403dc4:	4630      	mov	r0, r6
  403dc6:	4639      	mov	r1, r7
  403dc8:	f002 f8d4 	bl	405f74 <__aeabi_dmul>
  403dcc:	460f      	mov	r7, r1
  403dce:	4606      	mov	r6, r0
  403dd0:	f002 fb80 	bl	4064d4 <__aeabi_d2iz>
  403dd4:	4680      	mov	r8, r0
  403dd6:	f002 f867 	bl	405ea8 <__aeabi_i2d>
  403dda:	4602      	mov	r2, r0
  403ddc:	460b      	mov	r3, r1
  403dde:	4630      	mov	r0, r6
  403de0:	4639      	mov	r1, r7
  403de2:	f001 ff13 	bl	405c0c <__aeabi_dsub>
  403de6:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403dea:	fa5f f888 	uxtb.w	r8, r8
  403dee:	4652      	mov	r2, sl
  403df0:	465b      	mov	r3, fp
  403df2:	f805 8b01 	strb.w	r8, [r5], #1
  403df6:	4606      	mov	r6, r0
  403df8:	460f      	mov	r7, r1
  403dfa:	f002 fb2d 	bl	406458 <__aeabi_dcmplt>
  403dfe:	4632      	mov	r2, r6
  403e00:	463b      	mov	r3, r7
  403e02:	2800      	cmp	r0, #0
  403e04:	d0c6      	beq.n	403d94 <_dtoa_r+0x8c4>
  403e06:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403e0a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403e0c:	9302      	str	r3, [sp, #8]
  403e0e:	e523      	b.n	403858 <_dtoa_r+0x388>
  403e10:	2300      	movs	r3, #0
  403e12:	930b      	str	r3, [sp, #44]	; 0x2c
  403e14:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403e16:	2b00      	cmp	r3, #0
  403e18:	f340 80dc 	ble.w	403fd4 <_dtoa_r+0xb04>
  403e1c:	461f      	mov	r7, r3
  403e1e:	461e      	mov	r6, r3
  403e20:	930f      	str	r3, [sp, #60]	; 0x3c
  403e22:	930a      	str	r3, [sp, #40]	; 0x28
  403e24:	e6f6      	b.n	403c14 <_dtoa_r+0x744>
  403e26:	2301      	movs	r3, #1
  403e28:	930b      	str	r3, [sp, #44]	; 0x2c
  403e2a:	e7f3      	b.n	403e14 <_dtoa_r+0x944>
  403e2c:	f1ba 0f00 	cmp.w	sl, #0
  403e30:	f47f ada8 	bne.w	403984 <_dtoa_r+0x4b4>
  403e34:	f3cb 0313 	ubfx	r3, fp, #0, #20
  403e38:	2b00      	cmp	r3, #0
  403e3a:	f47f adba 	bne.w	4039b2 <_dtoa_r+0x4e2>
  403e3e:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  403e42:	0d3f      	lsrs	r7, r7, #20
  403e44:	053f      	lsls	r7, r7, #20
  403e46:	2f00      	cmp	r7, #0
  403e48:	f000 820d 	beq.w	404266 <_dtoa_r+0xd96>
  403e4c:	9b08      	ldr	r3, [sp, #32]
  403e4e:	3301      	adds	r3, #1
  403e50:	9308      	str	r3, [sp, #32]
  403e52:	9b06      	ldr	r3, [sp, #24]
  403e54:	3301      	adds	r3, #1
  403e56:	9306      	str	r3, [sp, #24]
  403e58:	2301      	movs	r3, #1
  403e5a:	930c      	str	r3, [sp, #48]	; 0x30
  403e5c:	e5ab      	b.n	4039b6 <_dtoa_r+0x4e6>
  403e5e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403e60:	2b00      	cmp	r3, #0
  403e62:	f73f ac42 	bgt.w	4036ea <_dtoa_r+0x21a>
  403e66:	f040 8221 	bne.w	4042ac <_dtoa_r+0xddc>
  403e6a:	2200      	movs	r2, #0
  403e6c:	4b38      	ldr	r3, [pc, #224]	; (403f50 <_dtoa_r+0xa80>)
  403e6e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403e72:	f002 f87f 	bl	405f74 <__aeabi_dmul>
  403e76:	4652      	mov	r2, sl
  403e78:	465b      	mov	r3, fp
  403e7a:	f002 fb01 	bl	406480 <__aeabi_dcmpge>
  403e7e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  403e82:	4646      	mov	r6, r8
  403e84:	2800      	cmp	r0, #0
  403e86:	d041      	beq.n	403f0c <_dtoa_r+0xa3c>
  403e88:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403e8a:	9d04      	ldr	r5, [sp, #16]
  403e8c:	43db      	mvns	r3, r3
  403e8e:	9302      	str	r3, [sp, #8]
  403e90:	4641      	mov	r1, r8
  403e92:	4620      	mov	r0, r4
  403e94:	f000 fe70 	bl	404b78 <_Bfree>
  403e98:	2e00      	cmp	r6, #0
  403e9a:	f43f acdd 	beq.w	403858 <_dtoa_r+0x388>
  403e9e:	e6a7      	b.n	403bf0 <_dtoa_r+0x720>
  403ea0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403ea2:	4649      	mov	r1, r9
  403ea4:	4620      	mov	r0, r4
  403ea6:	f000 ff9d 	bl	404de4 <__pow5mult>
  403eaa:	4681      	mov	r9, r0
  403eac:	e558      	b.n	403960 <_dtoa_r+0x490>
  403eae:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403eb0:	2a00      	cmp	r2, #0
  403eb2:	f000 8187 	beq.w	4041c4 <_dtoa_r+0xcf4>
  403eb6:	f203 4333 	addw	r3, r3, #1075	; 0x433
  403eba:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403ebc:	9d08      	ldr	r5, [sp, #32]
  403ebe:	e4f2      	b.n	4038a6 <_dtoa_r+0x3d6>
  403ec0:	f1ba 0f00 	cmp.w	sl, #0
  403ec4:	f47f ad75 	bne.w	4039b2 <_dtoa_r+0x4e2>
  403ec8:	e7b4      	b.n	403e34 <_dtoa_r+0x964>
  403eca:	f000 fe5f 	bl	404b8c <__multadd>
  403ece:	4647      	mov	r7, r8
  403ed0:	4606      	mov	r6, r0
  403ed2:	4683      	mov	fp, r0
  403ed4:	e5be      	b.n	403a54 <_dtoa_r+0x584>
  403ed6:	4601      	mov	r1, r0
  403ed8:	4620      	mov	r0, r4
  403eda:	9306      	str	r3, [sp, #24]
  403edc:	f000 fe4c 	bl	404b78 <_Bfree>
  403ee0:	2201      	movs	r2, #1
  403ee2:	9b06      	ldr	r3, [sp, #24]
  403ee4:	e5e0      	b.n	403aa8 <_dtoa_r+0x5d8>
  403ee6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403ee8:	2b02      	cmp	r3, #2
  403eea:	f77f ad96 	ble.w	403a1a <_dtoa_r+0x54a>
  403eee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ef0:	2b00      	cmp	r3, #0
  403ef2:	d1c9      	bne.n	403e88 <_dtoa_r+0x9b8>
  403ef4:	4641      	mov	r1, r8
  403ef6:	2205      	movs	r2, #5
  403ef8:	4620      	mov	r0, r4
  403efa:	f000 fe47 	bl	404b8c <__multadd>
  403efe:	4601      	mov	r1, r0
  403f00:	4680      	mov	r8, r0
  403f02:	4648      	mov	r0, r9
  403f04:	f001 f810 	bl	404f28 <__mcmp>
  403f08:	2800      	cmp	r0, #0
  403f0a:	ddbd      	ble.n	403e88 <_dtoa_r+0x9b8>
  403f0c:	9a02      	ldr	r2, [sp, #8]
  403f0e:	9904      	ldr	r1, [sp, #16]
  403f10:	2331      	movs	r3, #49	; 0x31
  403f12:	3201      	adds	r2, #1
  403f14:	9202      	str	r2, [sp, #8]
  403f16:	700b      	strb	r3, [r1, #0]
  403f18:	1c4d      	adds	r5, r1, #1
  403f1a:	e7b9      	b.n	403e90 <_dtoa_r+0x9c0>
  403f1c:	9a02      	ldr	r2, [sp, #8]
  403f1e:	3201      	adds	r2, #1
  403f20:	9202      	str	r2, [sp, #8]
  403f22:	9a04      	ldr	r2, [sp, #16]
  403f24:	2331      	movs	r3, #49	; 0x31
  403f26:	7013      	strb	r3, [r2, #0]
  403f28:	e652      	b.n	403bd0 <_dtoa_r+0x700>
  403f2a:	2301      	movs	r3, #1
  403f2c:	930b      	str	r3, [sp, #44]	; 0x2c
  403f2e:	e666      	b.n	403bfe <_dtoa_r+0x72e>
  403f30:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403f34:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403f36:	e48f      	b.n	403858 <_dtoa_r+0x388>
  403f38:	004075d8 	.word	0x004075d8
  403f3c:	004075b0 	.word	0x004075b0
  403f40:	3ff00000 	.word	0x3ff00000
  403f44:	401c0000 	.word	0x401c0000
  403f48:	3fe00000 	.word	0x3fe00000
  403f4c:	40240000 	.word	0x40240000
  403f50:	40140000 	.word	0x40140000
  403f54:	4650      	mov	r0, sl
  403f56:	f001 ffa7 	bl	405ea8 <__aeabi_i2d>
  403f5a:	463a      	mov	r2, r7
  403f5c:	4643      	mov	r3, r8
  403f5e:	f002 f809 	bl	405f74 <__aeabi_dmul>
  403f62:	2200      	movs	r2, #0
  403f64:	4bc1      	ldr	r3, [pc, #772]	; (40426c <_dtoa_r+0xd9c>)
  403f66:	f001 fe53 	bl	405c10 <__adddf3>
  403f6a:	4605      	mov	r5, r0
  403f6c:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403f70:	4641      	mov	r1, r8
  403f72:	2200      	movs	r2, #0
  403f74:	4bbe      	ldr	r3, [pc, #760]	; (404270 <_dtoa_r+0xda0>)
  403f76:	4638      	mov	r0, r7
  403f78:	f001 fe48 	bl	405c0c <__aeabi_dsub>
  403f7c:	462a      	mov	r2, r5
  403f7e:	4633      	mov	r3, r6
  403f80:	4682      	mov	sl, r0
  403f82:	468b      	mov	fp, r1
  403f84:	f002 fa86 	bl	406494 <__aeabi_dcmpgt>
  403f88:	4680      	mov	r8, r0
  403f8a:	2800      	cmp	r0, #0
  403f8c:	f040 8110 	bne.w	4041b0 <_dtoa_r+0xce0>
  403f90:	462a      	mov	r2, r5
  403f92:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  403f96:	4650      	mov	r0, sl
  403f98:	4659      	mov	r1, fp
  403f9a:	f002 fa5d 	bl	406458 <__aeabi_dcmplt>
  403f9e:	b118      	cbz	r0, 403fa8 <_dtoa_r+0xad8>
  403fa0:	4646      	mov	r6, r8
  403fa2:	e771      	b.n	403e88 <_dtoa_r+0x9b8>
  403fa4:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403fa8:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  403fac:	f7ff bb8a 	b.w	4036c4 <_dtoa_r+0x1f4>
  403fb0:	9804      	ldr	r0, [sp, #16]
  403fb2:	f7ff babb 	b.w	40352c <_dtoa_r+0x5c>
  403fb6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403fb8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  403fba:	970c      	str	r7, [sp, #48]	; 0x30
  403fbc:	1afb      	subs	r3, r7, r3
  403fbe:	441a      	add	r2, r3
  403fc0:	920d      	str	r2, [sp, #52]	; 0x34
  403fc2:	2700      	movs	r7, #0
  403fc4:	e469      	b.n	40389a <_dtoa_r+0x3ca>
  403fc6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  403fca:	f04f 0a02 	mov.w	sl, #2
  403fce:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  403fd2:	e657      	b.n	403c84 <_dtoa_r+0x7b4>
  403fd4:	2100      	movs	r1, #0
  403fd6:	2301      	movs	r3, #1
  403fd8:	6461      	str	r1, [r4, #68]	; 0x44
  403fda:	4620      	mov	r0, r4
  403fdc:	9325      	str	r3, [sp, #148]	; 0x94
  403fde:	f000 fda5 	bl	404b2c <_Balloc>
  403fe2:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403fe4:	9004      	str	r0, [sp, #16]
  403fe6:	6420      	str	r0, [r4, #64]	; 0x40
  403fe8:	930a      	str	r3, [sp, #40]	; 0x28
  403fea:	930f      	str	r3, [sp, #60]	; 0x3c
  403fec:	e629      	b.n	403c42 <_dtoa_r+0x772>
  403fee:	2a00      	cmp	r2, #0
  403ff0:	46d0      	mov	r8, sl
  403ff2:	f8cd b018 	str.w	fp, [sp, #24]
  403ff6:	469a      	mov	sl, r3
  403ff8:	dd11      	ble.n	40401e <_dtoa_r+0xb4e>
  403ffa:	4649      	mov	r1, r9
  403ffc:	2201      	movs	r2, #1
  403ffe:	4620      	mov	r0, r4
  404000:	f000 ff40 	bl	404e84 <__lshift>
  404004:	4641      	mov	r1, r8
  404006:	4681      	mov	r9, r0
  404008:	f000 ff8e 	bl	404f28 <__mcmp>
  40400c:	2800      	cmp	r0, #0
  40400e:	f340 8146 	ble.w	40429e <_dtoa_r+0xdce>
  404012:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  404016:	f000 8106 	beq.w	404226 <_dtoa_r+0xd56>
  40401a:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  40401e:	46b3      	mov	fp, r6
  404020:	f887 a000 	strb.w	sl, [r7]
  404024:	1c7d      	adds	r5, r7, #1
  404026:	9e06      	ldr	r6, [sp, #24]
  404028:	e5d2      	b.n	403bd0 <_dtoa_r+0x700>
  40402a:	d104      	bne.n	404036 <_dtoa_r+0xb66>
  40402c:	f01a 0f01 	tst.w	sl, #1
  404030:	d001      	beq.n	404036 <_dtoa_r+0xb66>
  404032:	e5bd      	b.n	403bb0 <_dtoa_r+0x6e0>
  404034:	4615      	mov	r5, r2
  404036:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  40403a:	2b30      	cmp	r3, #48	; 0x30
  40403c:	f105 32ff 	add.w	r2, r5, #4294967295
  404040:	d0f8      	beq.n	404034 <_dtoa_r+0xb64>
  404042:	e5c5      	b.n	403bd0 <_dtoa_r+0x700>
  404044:	9904      	ldr	r1, [sp, #16]
  404046:	2230      	movs	r2, #48	; 0x30
  404048:	700a      	strb	r2, [r1, #0]
  40404a:	9a02      	ldr	r2, [sp, #8]
  40404c:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404050:	3201      	adds	r2, #1
  404052:	9202      	str	r2, [sp, #8]
  404054:	f7ff bbfc 	b.w	403850 <_dtoa_r+0x380>
  404058:	f000 80bb 	beq.w	4041d2 <_dtoa_r+0xd02>
  40405c:	9b02      	ldr	r3, [sp, #8]
  40405e:	425d      	negs	r5, r3
  404060:	4b84      	ldr	r3, [pc, #528]	; (404274 <_dtoa_r+0xda4>)
  404062:	f005 020f 	and.w	r2, r5, #15
  404066:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40406a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40406e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  404072:	f001 ff7f 	bl	405f74 <__aeabi_dmul>
  404076:	112d      	asrs	r5, r5, #4
  404078:	4607      	mov	r7, r0
  40407a:	4688      	mov	r8, r1
  40407c:	f000 812c 	beq.w	4042d8 <_dtoa_r+0xe08>
  404080:	4e7d      	ldr	r6, [pc, #500]	; (404278 <_dtoa_r+0xda8>)
  404082:	f04f 0a02 	mov.w	sl, #2
  404086:	07eb      	lsls	r3, r5, #31
  404088:	d509      	bpl.n	40409e <_dtoa_r+0xbce>
  40408a:	4638      	mov	r0, r7
  40408c:	4641      	mov	r1, r8
  40408e:	e9d6 2300 	ldrd	r2, r3, [r6]
  404092:	f001 ff6f 	bl	405f74 <__aeabi_dmul>
  404096:	f10a 0a01 	add.w	sl, sl, #1
  40409a:	4607      	mov	r7, r0
  40409c:	4688      	mov	r8, r1
  40409e:	106d      	asrs	r5, r5, #1
  4040a0:	f106 0608 	add.w	r6, r6, #8
  4040a4:	d1ef      	bne.n	404086 <_dtoa_r+0xbb6>
  4040a6:	e608      	b.n	403cba <_dtoa_r+0x7ea>
  4040a8:	6871      	ldr	r1, [r6, #4]
  4040aa:	4620      	mov	r0, r4
  4040ac:	f000 fd3e 	bl	404b2c <_Balloc>
  4040b0:	6933      	ldr	r3, [r6, #16]
  4040b2:	3302      	adds	r3, #2
  4040b4:	009a      	lsls	r2, r3, #2
  4040b6:	4605      	mov	r5, r0
  4040b8:	f106 010c 	add.w	r1, r6, #12
  4040bc:	300c      	adds	r0, #12
  4040be:	f000 fc8f 	bl	4049e0 <memcpy>
  4040c2:	4629      	mov	r1, r5
  4040c4:	2201      	movs	r2, #1
  4040c6:	4620      	mov	r0, r4
  4040c8:	f000 fedc 	bl	404e84 <__lshift>
  4040cc:	9006      	str	r0, [sp, #24]
  4040ce:	e4b5      	b.n	403a3c <_dtoa_r+0x56c>
  4040d0:	2b39      	cmp	r3, #57	; 0x39
  4040d2:	f8cd b018 	str.w	fp, [sp, #24]
  4040d6:	46d0      	mov	r8, sl
  4040d8:	f000 80a5 	beq.w	404226 <_dtoa_r+0xd56>
  4040dc:	f103 0a01 	add.w	sl, r3, #1
  4040e0:	46b3      	mov	fp, r6
  4040e2:	f887 a000 	strb.w	sl, [r7]
  4040e6:	1c7d      	adds	r5, r7, #1
  4040e8:	9e06      	ldr	r6, [sp, #24]
  4040ea:	e571      	b.n	403bd0 <_dtoa_r+0x700>
  4040ec:	465a      	mov	r2, fp
  4040ee:	46d0      	mov	r8, sl
  4040f0:	46b3      	mov	fp, r6
  4040f2:	469a      	mov	sl, r3
  4040f4:	4616      	mov	r6, r2
  4040f6:	e54f      	b.n	403b98 <_dtoa_r+0x6c8>
  4040f8:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4040fa:	495e      	ldr	r1, [pc, #376]	; (404274 <_dtoa_r+0xda4>)
  4040fc:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  404100:	462a      	mov	r2, r5
  404102:	4633      	mov	r3, r6
  404104:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  404108:	f001 ff34 	bl	405f74 <__aeabi_dmul>
  40410c:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  404110:	4638      	mov	r0, r7
  404112:	4641      	mov	r1, r8
  404114:	f002 f9de 	bl	4064d4 <__aeabi_d2iz>
  404118:	4605      	mov	r5, r0
  40411a:	f001 fec5 	bl	405ea8 <__aeabi_i2d>
  40411e:	460b      	mov	r3, r1
  404120:	4602      	mov	r2, r0
  404122:	4641      	mov	r1, r8
  404124:	4638      	mov	r0, r7
  404126:	f001 fd71 	bl	405c0c <__aeabi_dsub>
  40412a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40412c:	460f      	mov	r7, r1
  40412e:	9904      	ldr	r1, [sp, #16]
  404130:	3530      	adds	r5, #48	; 0x30
  404132:	2b01      	cmp	r3, #1
  404134:	700d      	strb	r5, [r1, #0]
  404136:	4606      	mov	r6, r0
  404138:	f101 0501 	add.w	r5, r1, #1
  40413c:	d026      	beq.n	40418c <_dtoa_r+0xcbc>
  40413e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404140:	9a04      	ldr	r2, [sp, #16]
  404142:	f8df b13c 	ldr.w	fp, [pc, #316]	; 404280 <_dtoa_r+0xdb0>
  404146:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  40414a:	4413      	add	r3, r2
  40414c:	f04f 0a00 	mov.w	sl, #0
  404150:	4699      	mov	r9, r3
  404152:	4652      	mov	r2, sl
  404154:	465b      	mov	r3, fp
  404156:	4630      	mov	r0, r6
  404158:	4639      	mov	r1, r7
  40415a:	f001 ff0b 	bl	405f74 <__aeabi_dmul>
  40415e:	460f      	mov	r7, r1
  404160:	4606      	mov	r6, r0
  404162:	f002 f9b7 	bl	4064d4 <__aeabi_d2iz>
  404166:	4680      	mov	r8, r0
  404168:	f001 fe9e 	bl	405ea8 <__aeabi_i2d>
  40416c:	f108 0830 	add.w	r8, r8, #48	; 0x30
  404170:	4602      	mov	r2, r0
  404172:	460b      	mov	r3, r1
  404174:	4630      	mov	r0, r6
  404176:	4639      	mov	r1, r7
  404178:	f001 fd48 	bl	405c0c <__aeabi_dsub>
  40417c:	f805 8b01 	strb.w	r8, [r5], #1
  404180:	454d      	cmp	r5, r9
  404182:	4606      	mov	r6, r0
  404184:	460f      	mov	r7, r1
  404186:	d1e4      	bne.n	404152 <_dtoa_r+0xc82>
  404188:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40418c:	4b3b      	ldr	r3, [pc, #236]	; (40427c <_dtoa_r+0xdac>)
  40418e:	2200      	movs	r2, #0
  404190:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  404194:	f001 fd3c 	bl	405c10 <__adddf3>
  404198:	4632      	mov	r2, r6
  40419a:	463b      	mov	r3, r7
  40419c:	f002 f95c 	bl	406458 <__aeabi_dcmplt>
  4041a0:	2800      	cmp	r0, #0
  4041a2:	d046      	beq.n	404232 <_dtoa_r+0xd62>
  4041a4:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4041a6:	9302      	str	r3, [sp, #8]
  4041a8:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4041ac:	f7ff bb43 	b.w	403836 <_dtoa_r+0x366>
  4041b0:	f04f 0800 	mov.w	r8, #0
  4041b4:	4646      	mov	r6, r8
  4041b6:	e6a9      	b.n	403f0c <_dtoa_r+0xa3c>
  4041b8:	9b08      	ldr	r3, [sp, #32]
  4041ba:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4041bc:	1a9d      	subs	r5, r3, r2
  4041be:	2300      	movs	r3, #0
  4041c0:	f7ff bb71 	b.w	4038a6 <_dtoa_r+0x3d6>
  4041c4:	9b18      	ldr	r3, [sp, #96]	; 0x60
  4041c6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4041c8:	9d08      	ldr	r5, [sp, #32]
  4041ca:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  4041ce:	f7ff bb6a 	b.w	4038a6 <_dtoa_r+0x3d6>
  4041d2:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  4041d6:	f04f 0a02 	mov.w	sl, #2
  4041da:	e56e      	b.n	403cba <_dtoa_r+0x7ea>
  4041dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4041de:	2b00      	cmp	r3, #0
  4041e0:	f43f aeb8 	beq.w	403f54 <_dtoa_r+0xa84>
  4041e4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4041e6:	2b00      	cmp	r3, #0
  4041e8:	f77f aede 	ble.w	403fa8 <_dtoa_r+0xad8>
  4041ec:	2200      	movs	r2, #0
  4041ee:	4b24      	ldr	r3, [pc, #144]	; (404280 <_dtoa_r+0xdb0>)
  4041f0:	4638      	mov	r0, r7
  4041f2:	4641      	mov	r1, r8
  4041f4:	f001 febe 	bl	405f74 <__aeabi_dmul>
  4041f8:	4607      	mov	r7, r0
  4041fa:	4688      	mov	r8, r1
  4041fc:	f10a 0001 	add.w	r0, sl, #1
  404200:	f001 fe52 	bl	405ea8 <__aeabi_i2d>
  404204:	463a      	mov	r2, r7
  404206:	4643      	mov	r3, r8
  404208:	f001 feb4 	bl	405f74 <__aeabi_dmul>
  40420c:	2200      	movs	r2, #0
  40420e:	4b17      	ldr	r3, [pc, #92]	; (40426c <_dtoa_r+0xd9c>)
  404210:	f001 fcfe 	bl	405c10 <__adddf3>
  404214:	9a02      	ldr	r2, [sp, #8]
  404216:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404218:	9312      	str	r3, [sp, #72]	; 0x48
  40421a:	3a01      	subs	r2, #1
  40421c:	4605      	mov	r5, r0
  40421e:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404222:	9215      	str	r2, [sp, #84]	; 0x54
  404224:	e56a      	b.n	403cfc <_dtoa_r+0x82c>
  404226:	2239      	movs	r2, #57	; 0x39
  404228:	46b3      	mov	fp, r6
  40422a:	703a      	strb	r2, [r7, #0]
  40422c:	9e06      	ldr	r6, [sp, #24]
  40422e:	1c7d      	adds	r5, r7, #1
  404230:	e4c0      	b.n	403bb4 <_dtoa_r+0x6e4>
  404232:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  404236:	2000      	movs	r0, #0
  404238:	4910      	ldr	r1, [pc, #64]	; (40427c <_dtoa_r+0xdac>)
  40423a:	f001 fce7 	bl	405c0c <__aeabi_dsub>
  40423e:	4632      	mov	r2, r6
  404240:	463b      	mov	r3, r7
  404242:	f002 f927 	bl	406494 <__aeabi_dcmpgt>
  404246:	b908      	cbnz	r0, 40424c <_dtoa_r+0xd7c>
  404248:	e6ae      	b.n	403fa8 <_dtoa_r+0xad8>
  40424a:	4615      	mov	r5, r2
  40424c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404250:	2b30      	cmp	r3, #48	; 0x30
  404252:	f105 32ff 	add.w	r2, r5, #4294967295
  404256:	d0f8      	beq.n	40424a <_dtoa_r+0xd7a>
  404258:	e5d7      	b.n	403e0a <_dtoa_r+0x93a>
  40425a:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40425e:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404260:	9302      	str	r3, [sp, #8]
  404262:	f7ff bae8 	b.w	403836 <_dtoa_r+0x366>
  404266:	970c      	str	r7, [sp, #48]	; 0x30
  404268:	f7ff bba5 	b.w	4039b6 <_dtoa_r+0x4e6>
  40426c:	401c0000 	.word	0x401c0000
  404270:	40140000 	.word	0x40140000
  404274:	004075d8 	.word	0x004075d8
  404278:	004075b0 	.word	0x004075b0
  40427c:	3fe00000 	.word	0x3fe00000
  404280:	40240000 	.word	0x40240000
  404284:	2b39      	cmp	r3, #57	; 0x39
  404286:	f8cd b018 	str.w	fp, [sp, #24]
  40428a:	46d0      	mov	r8, sl
  40428c:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  404290:	469a      	mov	sl, r3
  404292:	d0c8      	beq.n	404226 <_dtoa_r+0xd56>
  404294:	f1bb 0f00 	cmp.w	fp, #0
  404298:	f73f aebf 	bgt.w	40401a <_dtoa_r+0xb4a>
  40429c:	e6bf      	b.n	40401e <_dtoa_r+0xb4e>
  40429e:	f47f aebe 	bne.w	40401e <_dtoa_r+0xb4e>
  4042a2:	f01a 0f01 	tst.w	sl, #1
  4042a6:	f43f aeba 	beq.w	40401e <_dtoa_r+0xb4e>
  4042aa:	e6b2      	b.n	404012 <_dtoa_r+0xb42>
  4042ac:	f04f 0800 	mov.w	r8, #0
  4042b0:	4646      	mov	r6, r8
  4042b2:	e5e9      	b.n	403e88 <_dtoa_r+0x9b8>
  4042b4:	4631      	mov	r1, r6
  4042b6:	2300      	movs	r3, #0
  4042b8:	220a      	movs	r2, #10
  4042ba:	4620      	mov	r0, r4
  4042bc:	f000 fc66 	bl	404b8c <__multadd>
  4042c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4042c2:	2b00      	cmp	r3, #0
  4042c4:	4606      	mov	r6, r0
  4042c6:	dd0a      	ble.n	4042de <_dtoa_r+0xe0e>
  4042c8:	930a      	str	r3, [sp, #40]	; 0x28
  4042ca:	f7ff bbaa 	b.w	403a22 <_dtoa_r+0x552>
  4042ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4042d0:	2b02      	cmp	r3, #2
  4042d2:	dc23      	bgt.n	40431c <_dtoa_r+0xe4c>
  4042d4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4042d6:	e43b      	b.n	403b50 <_dtoa_r+0x680>
  4042d8:	f04f 0a02 	mov.w	sl, #2
  4042dc:	e4ed      	b.n	403cba <_dtoa_r+0x7ea>
  4042de:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4042e0:	2b02      	cmp	r3, #2
  4042e2:	dc1b      	bgt.n	40431c <_dtoa_r+0xe4c>
  4042e4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4042e6:	e7ef      	b.n	4042c8 <_dtoa_r+0xdf8>
  4042e8:	2500      	movs	r5, #0
  4042ea:	6465      	str	r5, [r4, #68]	; 0x44
  4042ec:	4629      	mov	r1, r5
  4042ee:	4620      	mov	r0, r4
  4042f0:	f000 fc1c 	bl	404b2c <_Balloc>
  4042f4:	f04f 33ff 	mov.w	r3, #4294967295
  4042f8:	930a      	str	r3, [sp, #40]	; 0x28
  4042fa:	930f      	str	r3, [sp, #60]	; 0x3c
  4042fc:	2301      	movs	r3, #1
  4042fe:	9004      	str	r0, [sp, #16]
  404300:	9525      	str	r5, [sp, #148]	; 0x94
  404302:	6420      	str	r0, [r4, #64]	; 0x40
  404304:	930b      	str	r3, [sp, #44]	; 0x2c
  404306:	f7ff b9dd 	b.w	4036c4 <_dtoa_r+0x1f4>
  40430a:	2501      	movs	r5, #1
  40430c:	f7ff b9a5 	b.w	40365a <_dtoa_r+0x18a>
  404310:	f43f ab69 	beq.w	4039e6 <_dtoa_r+0x516>
  404314:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  404318:	f7ff bbf9 	b.w	403b0e <_dtoa_r+0x63e>
  40431c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40431e:	930a      	str	r3, [sp, #40]	; 0x28
  404320:	e5e5      	b.n	403eee <_dtoa_r+0xa1e>
  404322:	bf00      	nop

00404324 <__libc_fini_array>:
  404324:	b538      	push	{r3, r4, r5, lr}
  404326:	4c0a      	ldr	r4, [pc, #40]	; (404350 <__libc_fini_array+0x2c>)
  404328:	4d0a      	ldr	r5, [pc, #40]	; (404354 <__libc_fini_array+0x30>)
  40432a:	1b64      	subs	r4, r4, r5
  40432c:	10a4      	asrs	r4, r4, #2
  40432e:	d00a      	beq.n	404346 <__libc_fini_array+0x22>
  404330:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  404334:	3b01      	subs	r3, #1
  404336:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  40433a:	3c01      	subs	r4, #1
  40433c:	f855 3904 	ldr.w	r3, [r5], #-4
  404340:	4798      	blx	r3
  404342:	2c00      	cmp	r4, #0
  404344:	d1f9      	bne.n	40433a <__libc_fini_array+0x16>
  404346:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40434a:	f003 ba43 	b.w	4077d4 <_fini>
  40434e:	bf00      	nop
  404350:	004077e4 	.word	0x004077e4
  404354:	004077e0 	.word	0x004077e0

00404358 <_localeconv_r>:
  404358:	4a04      	ldr	r2, [pc, #16]	; (40436c <_localeconv_r+0x14>)
  40435a:	4b05      	ldr	r3, [pc, #20]	; (404370 <_localeconv_r+0x18>)
  40435c:	6812      	ldr	r2, [r2, #0]
  40435e:	6b50      	ldr	r0, [r2, #52]	; 0x34
  404360:	2800      	cmp	r0, #0
  404362:	bf08      	it	eq
  404364:	4618      	moveq	r0, r3
  404366:	30f0      	adds	r0, #240	; 0xf0
  404368:	4770      	bx	lr
  40436a:	bf00      	nop
  40436c:	20000010 	.word	0x20000010
  404370:	20000854 	.word	0x20000854

00404374 <__retarget_lock_acquire_recursive>:
  404374:	4770      	bx	lr
  404376:	bf00      	nop

00404378 <__retarget_lock_release_recursive>:
  404378:	4770      	bx	lr
  40437a:	bf00      	nop

0040437c <_malloc_r>:
  40437c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404380:	f101 060b 	add.w	r6, r1, #11
  404384:	2e16      	cmp	r6, #22
  404386:	b083      	sub	sp, #12
  404388:	4605      	mov	r5, r0
  40438a:	f240 809e 	bls.w	4044ca <_malloc_r+0x14e>
  40438e:	f036 0607 	bics.w	r6, r6, #7
  404392:	f100 80bd 	bmi.w	404510 <_malloc_r+0x194>
  404396:	42b1      	cmp	r1, r6
  404398:	f200 80ba 	bhi.w	404510 <_malloc_r+0x194>
  40439c:	f000 fbba 	bl	404b14 <__malloc_lock>
  4043a0:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  4043a4:	f0c0 8293 	bcc.w	4048ce <_malloc_r+0x552>
  4043a8:	0a73      	lsrs	r3, r6, #9
  4043aa:	f000 80b8 	beq.w	40451e <_malloc_r+0x1a2>
  4043ae:	2b04      	cmp	r3, #4
  4043b0:	f200 8179 	bhi.w	4046a6 <_malloc_r+0x32a>
  4043b4:	09b3      	lsrs	r3, r6, #6
  4043b6:	f103 0039 	add.w	r0, r3, #57	; 0x39
  4043ba:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  4043be:	00c3      	lsls	r3, r0, #3
  4043c0:	4fbf      	ldr	r7, [pc, #764]	; (4046c0 <_malloc_r+0x344>)
  4043c2:	443b      	add	r3, r7
  4043c4:	f1a3 0108 	sub.w	r1, r3, #8
  4043c8:	685c      	ldr	r4, [r3, #4]
  4043ca:	42a1      	cmp	r1, r4
  4043cc:	d106      	bne.n	4043dc <_malloc_r+0x60>
  4043ce:	e00c      	b.n	4043ea <_malloc_r+0x6e>
  4043d0:	2a00      	cmp	r2, #0
  4043d2:	f280 80aa 	bge.w	40452a <_malloc_r+0x1ae>
  4043d6:	68e4      	ldr	r4, [r4, #12]
  4043d8:	42a1      	cmp	r1, r4
  4043da:	d006      	beq.n	4043ea <_malloc_r+0x6e>
  4043dc:	6863      	ldr	r3, [r4, #4]
  4043de:	f023 0303 	bic.w	r3, r3, #3
  4043e2:	1b9a      	subs	r2, r3, r6
  4043e4:	2a0f      	cmp	r2, #15
  4043e6:	ddf3      	ble.n	4043d0 <_malloc_r+0x54>
  4043e8:	4670      	mov	r0, lr
  4043ea:	693c      	ldr	r4, [r7, #16]
  4043ec:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 4046d4 <_malloc_r+0x358>
  4043f0:	4574      	cmp	r4, lr
  4043f2:	f000 81ab 	beq.w	40474c <_malloc_r+0x3d0>
  4043f6:	6863      	ldr	r3, [r4, #4]
  4043f8:	f023 0303 	bic.w	r3, r3, #3
  4043fc:	1b9a      	subs	r2, r3, r6
  4043fe:	2a0f      	cmp	r2, #15
  404400:	f300 8190 	bgt.w	404724 <_malloc_r+0x3a8>
  404404:	2a00      	cmp	r2, #0
  404406:	f8c7 e014 	str.w	lr, [r7, #20]
  40440a:	f8c7 e010 	str.w	lr, [r7, #16]
  40440e:	f280 809d 	bge.w	40454c <_malloc_r+0x1d0>
  404412:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  404416:	f080 8161 	bcs.w	4046dc <_malloc_r+0x360>
  40441a:	08db      	lsrs	r3, r3, #3
  40441c:	f103 0c01 	add.w	ip, r3, #1
  404420:	1099      	asrs	r1, r3, #2
  404422:	687a      	ldr	r2, [r7, #4]
  404424:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  404428:	f8c4 8008 	str.w	r8, [r4, #8]
  40442c:	2301      	movs	r3, #1
  40442e:	408b      	lsls	r3, r1
  404430:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  404434:	4313      	orrs	r3, r2
  404436:	3908      	subs	r1, #8
  404438:	60e1      	str	r1, [r4, #12]
  40443a:	607b      	str	r3, [r7, #4]
  40443c:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  404440:	f8c8 400c 	str.w	r4, [r8, #12]
  404444:	1082      	asrs	r2, r0, #2
  404446:	2401      	movs	r4, #1
  404448:	4094      	lsls	r4, r2
  40444a:	429c      	cmp	r4, r3
  40444c:	f200 808b 	bhi.w	404566 <_malloc_r+0x1ea>
  404450:	421c      	tst	r4, r3
  404452:	d106      	bne.n	404462 <_malloc_r+0xe6>
  404454:	f020 0003 	bic.w	r0, r0, #3
  404458:	0064      	lsls	r4, r4, #1
  40445a:	421c      	tst	r4, r3
  40445c:	f100 0004 	add.w	r0, r0, #4
  404460:	d0fa      	beq.n	404458 <_malloc_r+0xdc>
  404462:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  404466:	46cc      	mov	ip, r9
  404468:	4680      	mov	r8, r0
  40446a:	f8dc 300c 	ldr.w	r3, [ip, #12]
  40446e:	459c      	cmp	ip, r3
  404470:	d107      	bne.n	404482 <_malloc_r+0x106>
  404472:	e16d      	b.n	404750 <_malloc_r+0x3d4>
  404474:	2a00      	cmp	r2, #0
  404476:	f280 817b 	bge.w	404770 <_malloc_r+0x3f4>
  40447a:	68db      	ldr	r3, [r3, #12]
  40447c:	459c      	cmp	ip, r3
  40447e:	f000 8167 	beq.w	404750 <_malloc_r+0x3d4>
  404482:	6859      	ldr	r1, [r3, #4]
  404484:	f021 0103 	bic.w	r1, r1, #3
  404488:	1b8a      	subs	r2, r1, r6
  40448a:	2a0f      	cmp	r2, #15
  40448c:	ddf2      	ble.n	404474 <_malloc_r+0xf8>
  40448e:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  404492:	f8d3 8008 	ldr.w	r8, [r3, #8]
  404496:	9300      	str	r3, [sp, #0]
  404498:	199c      	adds	r4, r3, r6
  40449a:	4628      	mov	r0, r5
  40449c:	f046 0601 	orr.w	r6, r6, #1
  4044a0:	f042 0501 	orr.w	r5, r2, #1
  4044a4:	605e      	str	r6, [r3, #4]
  4044a6:	f8c8 c00c 	str.w	ip, [r8, #12]
  4044aa:	f8cc 8008 	str.w	r8, [ip, #8]
  4044ae:	617c      	str	r4, [r7, #20]
  4044b0:	613c      	str	r4, [r7, #16]
  4044b2:	f8c4 e00c 	str.w	lr, [r4, #12]
  4044b6:	f8c4 e008 	str.w	lr, [r4, #8]
  4044ba:	6065      	str	r5, [r4, #4]
  4044bc:	505a      	str	r2, [r3, r1]
  4044be:	f000 fb2f 	bl	404b20 <__malloc_unlock>
  4044c2:	9b00      	ldr	r3, [sp, #0]
  4044c4:	f103 0408 	add.w	r4, r3, #8
  4044c8:	e01e      	b.n	404508 <_malloc_r+0x18c>
  4044ca:	2910      	cmp	r1, #16
  4044cc:	d820      	bhi.n	404510 <_malloc_r+0x194>
  4044ce:	f000 fb21 	bl	404b14 <__malloc_lock>
  4044d2:	2610      	movs	r6, #16
  4044d4:	2318      	movs	r3, #24
  4044d6:	2002      	movs	r0, #2
  4044d8:	4f79      	ldr	r7, [pc, #484]	; (4046c0 <_malloc_r+0x344>)
  4044da:	443b      	add	r3, r7
  4044dc:	f1a3 0208 	sub.w	r2, r3, #8
  4044e0:	685c      	ldr	r4, [r3, #4]
  4044e2:	4294      	cmp	r4, r2
  4044e4:	f000 813d 	beq.w	404762 <_malloc_r+0x3e6>
  4044e8:	6863      	ldr	r3, [r4, #4]
  4044ea:	68e1      	ldr	r1, [r4, #12]
  4044ec:	68a6      	ldr	r6, [r4, #8]
  4044ee:	f023 0303 	bic.w	r3, r3, #3
  4044f2:	4423      	add	r3, r4
  4044f4:	4628      	mov	r0, r5
  4044f6:	685a      	ldr	r2, [r3, #4]
  4044f8:	60f1      	str	r1, [r6, #12]
  4044fa:	f042 0201 	orr.w	r2, r2, #1
  4044fe:	608e      	str	r6, [r1, #8]
  404500:	605a      	str	r2, [r3, #4]
  404502:	f000 fb0d 	bl	404b20 <__malloc_unlock>
  404506:	3408      	adds	r4, #8
  404508:	4620      	mov	r0, r4
  40450a:	b003      	add	sp, #12
  40450c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404510:	2400      	movs	r4, #0
  404512:	230c      	movs	r3, #12
  404514:	4620      	mov	r0, r4
  404516:	602b      	str	r3, [r5, #0]
  404518:	b003      	add	sp, #12
  40451a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40451e:	2040      	movs	r0, #64	; 0x40
  404520:	f44f 7300 	mov.w	r3, #512	; 0x200
  404524:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  404528:	e74a      	b.n	4043c0 <_malloc_r+0x44>
  40452a:	4423      	add	r3, r4
  40452c:	68e1      	ldr	r1, [r4, #12]
  40452e:	685a      	ldr	r2, [r3, #4]
  404530:	68a6      	ldr	r6, [r4, #8]
  404532:	f042 0201 	orr.w	r2, r2, #1
  404536:	60f1      	str	r1, [r6, #12]
  404538:	4628      	mov	r0, r5
  40453a:	608e      	str	r6, [r1, #8]
  40453c:	605a      	str	r2, [r3, #4]
  40453e:	f000 faef 	bl	404b20 <__malloc_unlock>
  404542:	3408      	adds	r4, #8
  404544:	4620      	mov	r0, r4
  404546:	b003      	add	sp, #12
  404548:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40454c:	4423      	add	r3, r4
  40454e:	4628      	mov	r0, r5
  404550:	685a      	ldr	r2, [r3, #4]
  404552:	f042 0201 	orr.w	r2, r2, #1
  404556:	605a      	str	r2, [r3, #4]
  404558:	f000 fae2 	bl	404b20 <__malloc_unlock>
  40455c:	3408      	adds	r4, #8
  40455e:	4620      	mov	r0, r4
  404560:	b003      	add	sp, #12
  404562:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404566:	68bc      	ldr	r4, [r7, #8]
  404568:	6863      	ldr	r3, [r4, #4]
  40456a:	f023 0803 	bic.w	r8, r3, #3
  40456e:	45b0      	cmp	r8, r6
  404570:	d304      	bcc.n	40457c <_malloc_r+0x200>
  404572:	eba8 0306 	sub.w	r3, r8, r6
  404576:	2b0f      	cmp	r3, #15
  404578:	f300 8085 	bgt.w	404686 <_malloc_r+0x30a>
  40457c:	f8df 9158 	ldr.w	r9, [pc, #344]	; 4046d8 <_malloc_r+0x35c>
  404580:	4b50      	ldr	r3, [pc, #320]	; (4046c4 <_malloc_r+0x348>)
  404582:	f8d9 2000 	ldr.w	r2, [r9]
  404586:	681b      	ldr	r3, [r3, #0]
  404588:	3201      	adds	r2, #1
  40458a:	4433      	add	r3, r6
  40458c:	eb04 0a08 	add.w	sl, r4, r8
  404590:	f000 8155 	beq.w	40483e <_malloc_r+0x4c2>
  404594:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  404598:	330f      	adds	r3, #15
  40459a:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  40459e:	f02b 0b0f 	bic.w	fp, fp, #15
  4045a2:	4659      	mov	r1, fp
  4045a4:	4628      	mov	r0, r5
  4045a6:	f000 fdbb 	bl	405120 <_sbrk_r>
  4045aa:	1c41      	adds	r1, r0, #1
  4045ac:	4602      	mov	r2, r0
  4045ae:	f000 80fc 	beq.w	4047aa <_malloc_r+0x42e>
  4045b2:	4582      	cmp	sl, r0
  4045b4:	f200 80f7 	bhi.w	4047a6 <_malloc_r+0x42a>
  4045b8:	4b43      	ldr	r3, [pc, #268]	; (4046c8 <_malloc_r+0x34c>)
  4045ba:	6819      	ldr	r1, [r3, #0]
  4045bc:	4459      	add	r1, fp
  4045be:	6019      	str	r1, [r3, #0]
  4045c0:	f000 814d 	beq.w	40485e <_malloc_r+0x4e2>
  4045c4:	f8d9 0000 	ldr.w	r0, [r9]
  4045c8:	3001      	adds	r0, #1
  4045ca:	bf1b      	ittet	ne
  4045cc:	eba2 0a0a 	subne.w	sl, r2, sl
  4045d0:	4451      	addne	r1, sl
  4045d2:	f8c9 2000 	streq.w	r2, [r9]
  4045d6:	6019      	strne	r1, [r3, #0]
  4045d8:	f012 0107 	ands.w	r1, r2, #7
  4045dc:	f000 8115 	beq.w	40480a <_malloc_r+0x48e>
  4045e0:	f1c1 0008 	rsb	r0, r1, #8
  4045e4:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  4045e8:	4402      	add	r2, r0
  4045ea:	3108      	adds	r1, #8
  4045ec:	eb02 090b 	add.w	r9, r2, fp
  4045f0:	f3c9 090b 	ubfx	r9, r9, #0, #12
  4045f4:	eba1 0909 	sub.w	r9, r1, r9
  4045f8:	4649      	mov	r1, r9
  4045fa:	4628      	mov	r0, r5
  4045fc:	9301      	str	r3, [sp, #4]
  4045fe:	9200      	str	r2, [sp, #0]
  404600:	f000 fd8e 	bl	405120 <_sbrk_r>
  404604:	1c43      	adds	r3, r0, #1
  404606:	e89d 000c 	ldmia.w	sp, {r2, r3}
  40460a:	f000 8143 	beq.w	404894 <_malloc_r+0x518>
  40460e:	1a80      	subs	r0, r0, r2
  404610:	4448      	add	r0, r9
  404612:	f040 0001 	orr.w	r0, r0, #1
  404616:	6819      	ldr	r1, [r3, #0]
  404618:	60ba      	str	r2, [r7, #8]
  40461a:	4449      	add	r1, r9
  40461c:	42bc      	cmp	r4, r7
  40461e:	6050      	str	r0, [r2, #4]
  404620:	6019      	str	r1, [r3, #0]
  404622:	d017      	beq.n	404654 <_malloc_r+0x2d8>
  404624:	f1b8 0f0f 	cmp.w	r8, #15
  404628:	f240 80fb 	bls.w	404822 <_malloc_r+0x4a6>
  40462c:	6860      	ldr	r0, [r4, #4]
  40462e:	f1a8 020c 	sub.w	r2, r8, #12
  404632:	f022 0207 	bic.w	r2, r2, #7
  404636:	eb04 0e02 	add.w	lr, r4, r2
  40463a:	f000 0001 	and.w	r0, r0, #1
  40463e:	f04f 0c05 	mov.w	ip, #5
  404642:	4310      	orrs	r0, r2
  404644:	2a0f      	cmp	r2, #15
  404646:	6060      	str	r0, [r4, #4]
  404648:	f8ce c004 	str.w	ip, [lr, #4]
  40464c:	f8ce c008 	str.w	ip, [lr, #8]
  404650:	f200 8117 	bhi.w	404882 <_malloc_r+0x506>
  404654:	4b1d      	ldr	r3, [pc, #116]	; (4046cc <_malloc_r+0x350>)
  404656:	68bc      	ldr	r4, [r7, #8]
  404658:	681a      	ldr	r2, [r3, #0]
  40465a:	4291      	cmp	r1, r2
  40465c:	bf88      	it	hi
  40465e:	6019      	strhi	r1, [r3, #0]
  404660:	4b1b      	ldr	r3, [pc, #108]	; (4046d0 <_malloc_r+0x354>)
  404662:	681a      	ldr	r2, [r3, #0]
  404664:	4291      	cmp	r1, r2
  404666:	6862      	ldr	r2, [r4, #4]
  404668:	bf88      	it	hi
  40466a:	6019      	strhi	r1, [r3, #0]
  40466c:	f022 0203 	bic.w	r2, r2, #3
  404670:	4296      	cmp	r6, r2
  404672:	eba2 0306 	sub.w	r3, r2, r6
  404676:	d801      	bhi.n	40467c <_malloc_r+0x300>
  404678:	2b0f      	cmp	r3, #15
  40467a:	dc04      	bgt.n	404686 <_malloc_r+0x30a>
  40467c:	4628      	mov	r0, r5
  40467e:	f000 fa4f 	bl	404b20 <__malloc_unlock>
  404682:	2400      	movs	r4, #0
  404684:	e740      	b.n	404508 <_malloc_r+0x18c>
  404686:	19a2      	adds	r2, r4, r6
  404688:	f043 0301 	orr.w	r3, r3, #1
  40468c:	f046 0601 	orr.w	r6, r6, #1
  404690:	6066      	str	r6, [r4, #4]
  404692:	4628      	mov	r0, r5
  404694:	60ba      	str	r2, [r7, #8]
  404696:	6053      	str	r3, [r2, #4]
  404698:	f000 fa42 	bl	404b20 <__malloc_unlock>
  40469c:	3408      	adds	r4, #8
  40469e:	4620      	mov	r0, r4
  4046a0:	b003      	add	sp, #12
  4046a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4046a6:	2b14      	cmp	r3, #20
  4046a8:	d971      	bls.n	40478e <_malloc_r+0x412>
  4046aa:	2b54      	cmp	r3, #84	; 0x54
  4046ac:	f200 80a3 	bhi.w	4047f6 <_malloc_r+0x47a>
  4046b0:	0b33      	lsrs	r3, r6, #12
  4046b2:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  4046b6:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  4046ba:	00c3      	lsls	r3, r0, #3
  4046bc:	e680      	b.n	4043c0 <_malloc_r+0x44>
  4046be:	bf00      	nop
  4046c0:	20000444 	.word	0x20000444
  4046c4:	20000abc 	.word	0x20000abc
  4046c8:	20000a8c 	.word	0x20000a8c
  4046cc:	20000ab4 	.word	0x20000ab4
  4046d0:	20000ab8 	.word	0x20000ab8
  4046d4:	2000044c 	.word	0x2000044c
  4046d8:	2000084c 	.word	0x2000084c
  4046dc:	0a5a      	lsrs	r2, r3, #9
  4046de:	2a04      	cmp	r2, #4
  4046e0:	d95b      	bls.n	40479a <_malloc_r+0x41e>
  4046e2:	2a14      	cmp	r2, #20
  4046e4:	f200 80ae 	bhi.w	404844 <_malloc_r+0x4c8>
  4046e8:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  4046ec:	00c9      	lsls	r1, r1, #3
  4046ee:	325b      	adds	r2, #91	; 0x5b
  4046f0:	eb07 0c01 	add.w	ip, r7, r1
  4046f4:	5879      	ldr	r1, [r7, r1]
  4046f6:	f1ac 0c08 	sub.w	ip, ip, #8
  4046fa:	458c      	cmp	ip, r1
  4046fc:	f000 8088 	beq.w	404810 <_malloc_r+0x494>
  404700:	684a      	ldr	r2, [r1, #4]
  404702:	f022 0203 	bic.w	r2, r2, #3
  404706:	4293      	cmp	r3, r2
  404708:	d273      	bcs.n	4047f2 <_malloc_r+0x476>
  40470a:	6889      	ldr	r1, [r1, #8]
  40470c:	458c      	cmp	ip, r1
  40470e:	d1f7      	bne.n	404700 <_malloc_r+0x384>
  404710:	f8dc 200c 	ldr.w	r2, [ip, #12]
  404714:	687b      	ldr	r3, [r7, #4]
  404716:	60e2      	str	r2, [r4, #12]
  404718:	f8c4 c008 	str.w	ip, [r4, #8]
  40471c:	6094      	str	r4, [r2, #8]
  40471e:	f8cc 400c 	str.w	r4, [ip, #12]
  404722:	e68f      	b.n	404444 <_malloc_r+0xc8>
  404724:	19a1      	adds	r1, r4, r6
  404726:	f046 0c01 	orr.w	ip, r6, #1
  40472a:	f042 0601 	orr.w	r6, r2, #1
  40472e:	f8c4 c004 	str.w	ip, [r4, #4]
  404732:	4628      	mov	r0, r5
  404734:	6179      	str	r1, [r7, #20]
  404736:	6139      	str	r1, [r7, #16]
  404738:	f8c1 e00c 	str.w	lr, [r1, #12]
  40473c:	f8c1 e008 	str.w	lr, [r1, #8]
  404740:	604e      	str	r6, [r1, #4]
  404742:	50e2      	str	r2, [r4, r3]
  404744:	f000 f9ec 	bl	404b20 <__malloc_unlock>
  404748:	3408      	adds	r4, #8
  40474a:	e6dd      	b.n	404508 <_malloc_r+0x18c>
  40474c:	687b      	ldr	r3, [r7, #4]
  40474e:	e679      	b.n	404444 <_malloc_r+0xc8>
  404750:	f108 0801 	add.w	r8, r8, #1
  404754:	f018 0f03 	tst.w	r8, #3
  404758:	f10c 0c08 	add.w	ip, ip, #8
  40475c:	f47f ae85 	bne.w	40446a <_malloc_r+0xee>
  404760:	e02d      	b.n	4047be <_malloc_r+0x442>
  404762:	68dc      	ldr	r4, [r3, #12]
  404764:	42a3      	cmp	r3, r4
  404766:	bf08      	it	eq
  404768:	3002      	addeq	r0, #2
  40476a:	f43f ae3e 	beq.w	4043ea <_malloc_r+0x6e>
  40476e:	e6bb      	b.n	4044e8 <_malloc_r+0x16c>
  404770:	4419      	add	r1, r3
  404772:	461c      	mov	r4, r3
  404774:	684a      	ldr	r2, [r1, #4]
  404776:	68db      	ldr	r3, [r3, #12]
  404778:	f854 6f08 	ldr.w	r6, [r4, #8]!
  40477c:	f042 0201 	orr.w	r2, r2, #1
  404780:	604a      	str	r2, [r1, #4]
  404782:	4628      	mov	r0, r5
  404784:	60f3      	str	r3, [r6, #12]
  404786:	609e      	str	r6, [r3, #8]
  404788:	f000 f9ca 	bl	404b20 <__malloc_unlock>
  40478c:	e6bc      	b.n	404508 <_malloc_r+0x18c>
  40478e:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  404792:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  404796:	00c3      	lsls	r3, r0, #3
  404798:	e612      	b.n	4043c0 <_malloc_r+0x44>
  40479a:	099a      	lsrs	r2, r3, #6
  40479c:	f102 0139 	add.w	r1, r2, #57	; 0x39
  4047a0:	00c9      	lsls	r1, r1, #3
  4047a2:	3238      	adds	r2, #56	; 0x38
  4047a4:	e7a4      	b.n	4046f0 <_malloc_r+0x374>
  4047a6:	42bc      	cmp	r4, r7
  4047a8:	d054      	beq.n	404854 <_malloc_r+0x4d8>
  4047aa:	68bc      	ldr	r4, [r7, #8]
  4047ac:	6862      	ldr	r2, [r4, #4]
  4047ae:	f022 0203 	bic.w	r2, r2, #3
  4047b2:	e75d      	b.n	404670 <_malloc_r+0x2f4>
  4047b4:	f859 3908 	ldr.w	r3, [r9], #-8
  4047b8:	4599      	cmp	r9, r3
  4047ba:	f040 8086 	bne.w	4048ca <_malloc_r+0x54e>
  4047be:	f010 0f03 	tst.w	r0, #3
  4047c2:	f100 30ff 	add.w	r0, r0, #4294967295
  4047c6:	d1f5      	bne.n	4047b4 <_malloc_r+0x438>
  4047c8:	687b      	ldr	r3, [r7, #4]
  4047ca:	ea23 0304 	bic.w	r3, r3, r4
  4047ce:	607b      	str	r3, [r7, #4]
  4047d0:	0064      	lsls	r4, r4, #1
  4047d2:	429c      	cmp	r4, r3
  4047d4:	f63f aec7 	bhi.w	404566 <_malloc_r+0x1ea>
  4047d8:	2c00      	cmp	r4, #0
  4047da:	f43f aec4 	beq.w	404566 <_malloc_r+0x1ea>
  4047de:	421c      	tst	r4, r3
  4047e0:	4640      	mov	r0, r8
  4047e2:	f47f ae3e 	bne.w	404462 <_malloc_r+0xe6>
  4047e6:	0064      	lsls	r4, r4, #1
  4047e8:	421c      	tst	r4, r3
  4047ea:	f100 0004 	add.w	r0, r0, #4
  4047ee:	d0fa      	beq.n	4047e6 <_malloc_r+0x46a>
  4047f0:	e637      	b.n	404462 <_malloc_r+0xe6>
  4047f2:	468c      	mov	ip, r1
  4047f4:	e78c      	b.n	404710 <_malloc_r+0x394>
  4047f6:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  4047fa:	d815      	bhi.n	404828 <_malloc_r+0x4ac>
  4047fc:	0bf3      	lsrs	r3, r6, #15
  4047fe:	f103 0078 	add.w	r0, r3, #120	; 0x78
  404802:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  404806:	00c3      	lsls	r3, r0, #3
  404808:	e5da      	b.n	4043c0 <_malloc_r+0x44>
  40480a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  40480e:	e6ed      	b.n	4045ec <_malloc_r+0x270>
  404810:	687b      	ldr	r3, [r7, #4]
  404812:	1092      	asrs	r2, r2, #2
  404814:	2101      	movs	r1, #1
  404816:	fa01 f202 	lsl.w	r2, r1, r2
  40481a:	4313      	orrs	r3, r2
  40481c:	607b      	str	r3, [r7, #4]
  40481e:	4662      	mov	r2, ip
  404820:	e779      	b.n	404716 <_malloc_r+0x39a>
  404822:	2301      	movs	r3, #1
  404824:	6053      	str	r3, [r2, #4]
  404826:	e729      	b.n	40467c <_malloc_r+0x300>
  404828:	f240 5254 	movw	r2, #1364	; 0x554
  40482c:	4293      	cmp	r3, r2
  40482e:	d822      	bhi.n	404876 <_malloc_r+0x4fa>
  404830:	0cb3      	lsrs	r3, r6, #18
  404832:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  404836:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  40483a:	00c3      	lsls	r3, r0, #3
  40483c:	e5c0      	b.n	4043c0 <_malloc_r+0x44>
  40483e:	f103 0b10 	add.w	fp, r3, #16
  404842:	e6ae      	b.n	4045a2 <_malloc_r+0x226>
  404844:	2a54      	cmp	r2, #84	; 0x54
  404846:	d829      	bhi.n	40489c <_malloc_r+0x520>
  404848:	0b1a      	lsrs	r2, r3, #12
  40484a:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  40484e:	00c9      	lsls	r1, r1, #3
  404850:	326e      	adds	r2, #110	; 0x6e
  404852:	e74d      	b.n	4046f0 <_malloc_r+0x374>
  404854:	4b20      	ldr	r3, [pc, #128]	; (4048d8 <_malloc_r+0x55c>)
  404856:	6819      	ldr	r1, [r3, #0]
  404858:	4459      	add	r1, fp
  40485a:	6019      	str	r1, [r3, #0]
  40485c:	e6b2      	b.n	4045c4 <_malloc_r+0x248>
  40485e:	f3ca 000b 	ubfx	r0, sl, #0, #12
  404862:	2800      	cmp	r0, #0
  404864:	f47f aeae 	bne.w	4045c4 <_malloc_r+0x248>
  404868:	eb08 030b 	add.w	r3, r8, fp
  40486c:	68ba      	ldr	r2, [r7, #8]
  40486e:	f043 0301 	orr.w	r3, r3, #1
  404872:	6053      	str	r3, [r2, #4]
  404874:	e6ee      	b.n	404654 <_malloc_r+0x2d8>
  404876:	207f      	movs	r0, #127	; 0x7f
  404878:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  40487c:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  404880:	e59e      	b.n	4043c0 <_malloc_r+0x44>
  404882:	f104 0108 	add.w	r1, r4, #8
  404886:	4628      	mov	r0, r5
  404888:	9300      	str	r3, [sp, #0]
  40488a:	f000 fea7 	bl	4055dc <_free_r>
  40488e:	9b00      	ldr	r3, [sp, #0]
  404890:	6819      	ldr	r1, [r3, #0]
  404892:	e6df      	b.n	404654 <_malloc_r+0x2d8>
  404894:	2001      	movs	r0, #1
  404896:	f04f 0900 	mov.w	r9, #0
  40489a:	e6bc      	b.n	404616 <_malloc_r+0x29a>
  40489c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4048a0:	d805      	bhi.n	4048ae <_malloc_r+0x532>
  4048a2:	0bda      	lsrs	r2, r3, #15
  4048a4:	f102 0178 	add.w	r1, r2, #120	; 0x78
  4048a8:	00c9      	lsls	r1, r1, #3
  4048aa:	3277      	adds	r2, #119	; 0x77
  4048ac:	e720      	b.n	4046f0 <_malloc_r+0x374>
  4048ae:	f240 5154 	movw	r1, #1364	; 0x554
  4048b2:	428a      	cmp	r2, r1
  4048b4:	d805      	bhi.n	4048c2 <_malloc_r+0x546>
  4048b6:	0c9a      	lsrs	r2, r3, #18
  4048b8:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  4048bc:	00c9      	lsls	r1, r1, #3
  4048be:	327c      	adds	r2, #124	; 0x7c
  4048c0:	e716      	b.n	4046f0 <_malloc_r+0x374>
  4048c2:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  4048c6:	227e      	movs	r2, #126	; 0x7e
  4048c8:	e712      	b.n	4046f0 <_malloc_r+0x374>
  4048ca:	687b      	ldr	r3, [r7, #4]
  4048cc:	e780      	b.n	4047d0 <_malloc_r+0x454>
  4048ce:	08f0      	lsrs	r0, r6, #3
  4048d0:	f106 0308 	add.w	r3, r6, #8
  4048d4:	e600      	b.n	4044d8 <_malloc_r+0x15c>
  4048d6:	bf00      	nop
  4048d8:	20000a8c 	.word	0x20000a8c
  4048dc:	00000000 	.word	0x00000000

004048e0 <memchr>:
  4048e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4048e4:	2a10      	cmp	r2, #16
  4048e6:	db2b      	blt.n	404940 <memchr+0x60>
  4048e8:	f010 0f07 	tst.w	r0, #7
  4048ec:	d008      	beq.n	404900 <memchr+0x20>
  4048ee:	f810 3b01 	ldrb.w	r3, [r0], #1
  4048f2:	3a01      	subs	r2, #1
  4048f4:	428b      	cmp	r3, r1
  4048f6:	d02d      	beq.n	404954 <memchr+0x74>
  4048f8:	f010 0f07 	tst.w	r0, #7
  4048fc:	b342      	cbz	r2, 404950 <memchr+0x70>
  4048fe:	d1f6      	bne.n	4048ee <memchr+0xe>
  404900:	b4f0      	push	{r4, r5, r6, r7}
  404902:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404906:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40490a:	f022 0407 	bic.w	r4, r2, #7
  40490e:	f07f 0700 	mvns.w	r7, #0
  404912:	2300      	movs	r3, #0
  404914:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404918:	3c08      	subs	r4, #8
  40491a:	ea85 0501 	eor.w	r5, r5, r1
  40491e:	ea86 0601 	eor.w	r6, r6, r1
  404922:	fa85 f547 	uadd8	r5, r5, r7
  404926:	faa3 f587 	sel	r5, r3, r7
  40492a:	fa86 f647 	uadd8	r6, r6, r7
  40492e:	faa5 f687 	sel	r6, r5, r7
  404932:	b98e      	cbnz	r6, 404958 <memchr+0x78>
  404934:	d1ee      	bne.n	404914 <memchr+0x34>
  404936:	bcf0      	pop	{r4, r5, r6, r7}
  404938:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40493c:	f002 0207 	and.w	r2, r2, #7
  404940:	b132      	cbz	r2, 404950 <memchr+0x70>
  404942:	f810 3b01 	ldrb.w	r3, [r0], #1
  404946:	3a01      	subs	r2, #1
  404948:	ea83 0301 	eor.w	r3, r3, r1
  40494c:	b113      	cbz	r3, 404954 <memchr+0x74>
  40494e:	d1f8      	bne.n	404942 <memchr+0x62>
  404950:	2000      	movs	r0, #0
  404952:	4770      	bx	lr
  404954:	3801      	subs	r0, #1
  404956:	4770      	bx	lr
  404958:	2d00      	cmp	r5, #0
  40495a:	bf06      	itte	eq
  40495c:	4635      	moveq	r5, r6
  40495e:	3803      	subeq	r0, #3
  404960:	3807      	subne	r0, #7
  404962:	f015 0f01 	tst.w	r5, #1
  404966:	d107      	bne.n	404978 <memchr+0x98>
  404968:	3001      	adds	r0, #1
  40496a:	f415 7f80 	tst.w	r5, #256	; 0x100
  40496e:	bf02      	ittt	eq
  404970:	3001      	addeq	r0, #1
  404972:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404976:	3001      	addeq	r0, #1
  404978:	bcf0      	pop	{r4, r5, r6, r7}
  40497a:	3801      	subs	r0, #1
  40497c:	4770      	bx	lr
  40497e:	bf00      	nop

00404980 <memcmp>:
  404980:	2a03      	cmp	r2, #3
  404982:	b470      	push	{r4, r5, r6}
  404984:	d922      	bls.n	4049cc <memcmp+0x4c>
  404986:	ea40 0301 	orr.w	r3, r0, r1
  40498a:	079b      	lsls	r3, r3, #30
  40498c:	d011      	beq.n	4049b2 <memcmp+0x32>
  40498e:	7803      	ldrb	r3, [r0, #0]
  404990:	780c      	ldrb	r4, [r1, #0]
  404992:	42a3      	cmp	r3, r4
  404994:	d11d      	bne.n	4049d2 <memcmp+0x52>
  404996:	440a      	add	r2, r1
  404998:	3101      	adds	r1, #1
  40499a:	e005      	b.n	4049a8 <memcmp+0x28>
  40499c:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  4049a0:	f811 4b01 	ldrb.w	r4, [r1], #1
  4049a4:	42a3      	cmp	r3, r4
  4049a6:	d114      	bne.n	4049d2 <memcmp+0x52>
  4049a8:	4291      	cmp	r1, r2
  4049aa:	d1f7      	bne.n	40499c <memcmp+0x1c>
  4049ac:	2000      	movs	r0, #0
  4049ae:	bc70      	pop	{r4, r5, r6}
  4049b0:	4770      	bx	lr
  4049b2:	680d      	ldr	r5, [r1, #0]
  4049b4:	6806      	ldr	r6, [r0, #0]
  4049b6:	42ae      	cmp	r6, r5
  4049b8:	460c      	mov	r4, r1
  4049ba:	4603      	mov	r3, r0
  4049bc:	f101 0104 	add.w	r1, r1, #4
  4049c0:	f100 0004 	add.w	r0, r0, #4
  4049c4:	d108      	bne.n	4049d8 <memcmp+0x58>
  4049c6:	3a04      	subs	r2, #4
  4049c8:	2a03      	cmp	r2, #3
  4049ca:	d8f2      	bhi.n	4049b2 <memcmp+0x32>
  4049cc:	2a00      	cmp	r2, #0
  4049ce:	d1de      	bne.n	40498e <memcmp+0xe>
  4049d0:	e7ec      	b.n	4049ac <memcmp+0x2c>
  4049d2:	1b18      	subs	r0, r3, r4
  4049d4:	bc70      	pop	{r4, r5, r6}
  4049d6:	4770      	bx	lr
  4049d8:	4621      	mov	r1, r4
  4049da:	4618      	mov	r0, r3
  4049dc:	e7d7      	b.n	40498e <memcmp+0xe>
  4049de:	bf00      	nop

004049e0 <memcpy>:
  4049e0:	4684      	mov	ip, r0
  4049e2:	ea41 0300 	orr.w	r3, r1, r0
  4049e6:	f013 0303 	ands.w	r3, r3, #3
  4049ea:	d16d      	bne.n	404ac8 <memcpy+0xe8>
  4049ec:	3a40      	subs	r2, #64	; 0x40
  4049ee:	d341      	bcc.n	404a74 <memcpy+0x94>
  4049f0:	f851 3b04 	ldr.w	r3, [r1], #4
  4049f4:	f840 3b04 	str.w	r3, [r0], #4
  4049f8:	f851 3b04 	ldr.w	r3, [r1], #4
  4049fc:	f840 3b04 	str.w	r3, [r0], #4
  404a00:	f851 3b04 	ldr.w	r3, [r1], #4
  404a04:	f840 3b04 	str.w	r3, [r0], #4
  404a08:	f851 3b04 	ldr.w	r3, [r1], #4
  404a0c:	f840 3b04 	str.w	r3, [r0], #4
  404a10:	f851 3b04 	ldr.w	r3, [r1], #4
  404a14:	f840 3b04 	str.w	r3, [r0], #4
  404a18:	f851 3b04 	ldr.w	r3, [r1], #4
  404a1c:	f840 3b04 	str.w	r3, [r0], #4
  404a20:	f851 3b04 	ldr.w	r3, [r1], #4
  404a24:	f840 3b04 	str.w	r3, [r0], #4
  404a28:	f851 3b04 	ldr.w	r3, [r1], #4
  404a2c:	f840 3b04 	str.w	r3, [r0], #4
  404a30:	f851 3b04 	ldr.w	r3, [r1], #4
  404a34:	f840 3b04 	str.w	r3, [r0], #4
  404a38:	f851 3b04 	ldr.w	r3, [r1], #4
  404a3c:	f840 3b04 	str.w	r3, [r0], #4
  404a40:	f851 3b04 	ldr.w	r3, [r1], #4
  404a44:	f840 3b04 	str.w	r3, [r0], #4
  404a48:	f851 3b04 	ldr.w	r3, [r1], #4
  404a4c:	f840 3b04 	str.w	r3, [r0], #4
  404a50:	f851 3b04 	ldr.w	r3, [r1], #4
  404a54:	f840 3b04 	str.w	r3, [r0], #4
  404a58:	f851 3b04 	ldr.w	r3, [r1], #4
  404a5c:	f840 3b04 	str.w	r3, [r0], #4
  404a60:	f851 3b04 	ldr.w	r3, [r1], #4
  404a64:	f840 3b04 	str.w	r3, [r0], #4
  404a68:	f851 3b04 	ldr.w	r3, [r1], #4
  404a6c:	f840 3b04 	str.w	r3, [r0], #4
  404a70:	3a40      	subs	r2, #64	; 0x40
  404a72:	d2bd      	bcs.n	4049f0 <memcpy+0x10>
  404a74:	3230      	adds	r2, #48	; 0x30
  404a76:	d311      	bcc.n	404a9c <memcpy+0xbc>
  404a78:	f851 3b04 	ldr.w	r3, [r1], #4
  404a7c:	f840 3b04 	str.w	r3, [r0], #4
  404a80:	f851 3b04 	ldr.w	r3, [r1], #4
  404a84:	f840 3b04 	str.w	r3, [r0], #4
  404a88:	f851 3b04 	ldr.w	r3, [r1], #4
  404a8c:	f840 3b04 	str.w	r3, [r0], #4
  404a90:	f851 3b04 	ldr.w	r3, [r1], #4
  404a94:	f840 3b04 	str.w	r3, [r0], #4
  404a98:	3a10      	subs	r2, #16
  404a9a:	d2ed      	bcs.n	404a78 <memcpy+0x98>
  404a9c:	320c      	adds	r2, #12
  404a9e:	d305      	bcc.n	404aac <memcpy+0xcc>
  404aa0:	f851 3b04 	ldr.w	r3, [r1], #4
  404aa4:	f840 3b04 	str.w	r3, [r0], #4
  404aa8:	3a04      	subs	r2, #4
  404aaa:	d2f9      	bcs.n	404aa0 <memcpy+0xc0>
  404aac:	3204      	adds	r2, #4
  404aae:	d008      	beq.n	404ac2 <memcpy+0xe2>
  404ab0:	07d2      	lsls	r2, r2, #31
  404ab2:	bf1c      	itt	ne
  404ab4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404ab8:	f800 3b01 	strbne.w	r3, [r0], #1
  404abc:	d301      	bcc.n	404ac2 <memcpy+0xe2>
  404abe:	880b      	ldrh	r3, [r1, #0]
  404ac0:	8003      	strh	r3, [r0, #0]
  404ac2:	4660      	mov	r0, ip
  404ac4:	4770      	bx	lr
  404ac6:	bf00      	nop
  404ac8:	2a08      	cmp	r2, #8
  404aca:	d313      	bcc.n	404af4 <memcpy+0x114>
  404acc:	078b      	lsls	r3, r1, #30
  404ace:	d08d      	beq.n	4049ec <memcpy+0xc>
  404ad0:	f010 0303 	ands.w	r3, r0, #3
  404ad4:	d08a      	beq.n	4049ec <memcpy+0xc>
  404ad6:	f1c3 0304 	rsb	r3, r3, #4
  404ada:	1ad2      	subs	r2, r2, r3
  404adc:	07db      	lsls	r3, r3, #31
  404ade:	bf1c      	itt	ne
  404ae0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404ae4:	f800 3b01 	strbne.w	r3, [r0], #1
  404ae8:	d380      	bcc.n	4049ec <memcpy+0xc>
  404aea:	f831 3b02 	ldrh.w	r3, [r1], #2
  404aee:	f820 3b02 	strh.w	r3, [r0], #2
  404af2:	e77b      	b.n	4049ec <memcpy+0xc>
  404af4:	3a04      	subs	r2, #4
  404af6:	d3d9      	bcc.n	404aac <memcpy+0xcc>
  404af8:	3a01      	subs	r2, #1
  404afa:	f811 3b01 	ldrb.w	r3, [r1], #1
  404afe:	f800 3b01 	strb.w	r3, [r0], #1
  404b02:	d2f9      	bcs.n	404af8 <memcpy+0x118>
  404b04:	780b      	ldrb	r3, [r1, #0]
  404b06:	7003      	strb	r3, [r0, #0]
  404b08:	784b      	ldrb	r3, [r1, #1]
  404b0a:	7043      	strb	r3, [r0, #1]
  404b0c:	788b      	ldrb	r3, [r1, #2]
  404b0e:	7083      	strb	r3, [r0, #2]
  404b10:	4660      	mov	r0, ip
  404b12:	4770      	bx	lr

00404b14 <__malloc_lock>:
  404b14:	4801      	ldr	r0, [pc, #4]	; (404b1c <__malloc_lock+0x8>)
  404b16:	f7ff bc2d 	b.w	404374 <__retarget_lock_acquire_recursive>
  404b1a:	bf00      	nop
  404b1c:	20019560 	.word	0x20019560

00404b20 <__malloc_unlock>:
  404b20:	4801      	ldr	r0, [pc, #4]	; (404b28 <__malloc_unlock+0x8>)
  404b22:	f7ff bc29 	b.w	404378 <__retarget_lock_release_recursive>
  404b26:	bf00      	nop
  404b28:	20019560 	.word	0x20019560

00404b2c <_Balloc>:
  404b2c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404b2e:	b570      	push	{r4, r5, r6, lr}
  404b30:	4605      	mov	r5, r0
  404b32:	460c      	mov	r4, r1
  404b34:	b14b      	cbz	r3, 404b4a <_Balloc+0x1e>
  404b36:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  404b3a:	b180      	cbz	r0, 404b5e <_Balloc+0x32>
  404b3c:	6802      	ldr	r2, [r0, #0]
  404b3e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  404b42:	2300      	movs	r3, #0
  404b44:	6103      	str	r3, [r0, #16]
  404b46:	60c3      	str	r3, [r0, #12]
  404b48:	bd70      	pop	{r4, r5, r6, pc}
  404b4a:	2221      	movs	r2, #33	; 0x21
  404b4c:	2104      	movs	r1, #4
  404b4e:	f000 fcc5 	bl	4054dc <_calloc_r>
  404b52:	64e8      	str	r0, [r5, #76]	; 0x4c
  404b54:	4603      	mov	r3, r0
  404b56:	2800      	cmp	r0, #0
  404b58:	d1ed      	bne.n	404b36 <_Balloc+0xa>
  404b5a:	2000      	movs	r0, #0
  404b5c:	bd70      	pop	{r4, r5, r6, pc}
  404b5e:	2101      	movs	r1, #1
  404b60:	fa01 f604 	lsl.w	r6, r1, r4
  404b64:	1d72      	adds	r2, r6, #5
  404b66:	4628      	mov	r0, r5
  404b68:	0092      	lsls	r2, r2, #2
  404b6a:	f000 fcb7 	bl	4054dc <_calloc_r>
  404b6e:	2800      	cmp	r0, #0
  404b70:	d0f3      	beq.n	404b5a <_Balloc+0x2e>
  404b72:	6044      	str	r4, [r0, #4]
  404b74:	6086      	str	r6, [r0, #8]
  404b76:	e7e4      	b.n	404b42 <_Balloc+0x16>

00404b78 <_Bfree>:
  404b78:	b131      	cbz	r1, 404b88 <_Bfree+0x10>
  404b7a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404b7c:	684a      	ldr	r2, [r1, #4]
  404b7e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  404b82:	6008      	str	r0, [r1, #0]
  404b84:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  404b88:	4770      	bx	lr
  404b8a:	bf00      	nop

00404b8c <__multadd>:
  404b8c:	b5f0      	push	{r4, r5, r6, r7, lr}
  404b8e:	690c      	ldr	r4, [r1, #16]
  404b90:	b083      	sub	sp, #12
  404b92:	460d      	mov	r5, r1
  404b94:	4606      	mov	r6, r0
  404b96:	f101 0e14 	add.w	lr, r1, #20
  404b9a:	2700      	movs	r7, #0
  404b9c:	f8de 0000 	ldr.w	r0, [lr]
  404ba0:	b281      	uxth	r1, r0
  404ba2:	fb02 3301 	mla	r3, r2, r1, r3
  404ba6:	0c01      	lsrs	r1, r0, #16
  404ba8:	0c18      	lsrs	r0, r3, #16
  404baa:	fb02 0101 	mla	r1, r2, r1, r0
  404bae:	b29b      	uxth	r3, r3
  404bb0:	3701      	adds	r7, #1
  404bb2:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  404bb6:	42bc      	cmp	r4, r7
  404bb8:	f84e 3b04 	str.w	r3, [lr], #4
  404bbc:	ea4f 4311 	mov.w	r3, r1, lsr #16
  404bc0:	dcec      	bgt.n	404b9c <__multadd+0x10>
  404bc2:	b13b      	cbz	r3, 404bd4 <__multadd+0x48>
  404bc4:	68aa      	ldr	r2, [r5, #8]
  404bc6:	4294      	cmp	r4, r2
  404bc8:	da07      	bge.n	404bda <__multadd+0x4e>
  404bca:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  404bce:	3401      	adds	r4, #1
  404bd0:	6153      	str	r3, [r2, #20]
  404bd2:	612c      	str	r4, [r5, #16]
  404bd4:	4628      	mov	r0, r5
  404bd6:	b003      	add	sp, #12
  404bd8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404bda:	6869      	ldr	r1, [r5, #4]
  404bdc:	9301      	str	r3, [sp, #4]
  404bde:	3101      	adds	r1, #1
  404be0:	4630      	mov	r0, r6
  404be2:	f7ff ffa3 	bl	404b2c <_Balloc>
  404be6:	692a      	ldr	r2, [r5, #16]
  404be8:	3202      	adds	r2, #2
  404bea:	f105 010c 	add.w	r1, r5, #12
  404bee:	4607      	mov	r7, r0
  404bf0:	0092      	lsls	r2, r2, #2
  404bf2:	300c      	adds	r0, #12
  404bf4:	f7ff fef4 	bl	4049e0 <memcpy>
  404bf8:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  404bfa:	6869      	ldr	r1, [r5, #4]
  404bfc:	9b01      	ldr	r3, [sp, #4]
  404bfe:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  404c02:	6028      	str	r0, [r5, #0]
  404c04:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  404c08:	463d      	mov	r5, r7
  404c0a:	e7de      	b.n	404bca <__multadd+0x3e>

00404c0c <__hi0bits>:
  404c0c:	0c02      	lsrs	r2, r0, #16
  404c0e:	0412      	lsls	r2, r2, #16
  404c10:	4603      	mov	r3, r0
  404c12:	b9b2      	cbnz	r2, 404c42 <__hi0bits+0x36>
  404c14:	0403      	lsls	r3, r0, #16
  404c16:	2010      	movs	r0, #16
  404c18:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  404c1c:	bf04      	itt	eq
  404c1e:	021b      	lsleq	r3, r3, #8
  404c20:	3008      	addeq	r0, #8
  404c22:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  404c26:	bf04      	itt	eq
  404c28:	011b      	lsleq	r3, r3, #4
  404c2a:	3004      	addeq	r0, #4
  404c2c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  404c30:	bf04      	itt	eq
  404c32:	009b      	lsleq	r3, r3, #2
  404c34:	3002      	addeq	r0, #2
  404c36:	2b00      	cmp	r3, #0
  404c38:	db02      	blt.n	404c40 <__hi0bits+0x34>
  404c3a:	005b      	lsls	r3, r3, #1
  404c3c:	d403      	bmi.n	404c46 <__hi0bits+0x3a>
  404c3e:	2020      	movs	r0, #32
  404c40:	4770      	bx	lr
  404c42:	2000      	movs	r0, #0
  404c44:	e7e8      	b.n	404c18 <__hi0bits+0xc>
  404c46:	3001      	adds	r0, #1
  404c48:	4770      	bx	lr
  404c4a:	bf00      	nop

00404c4c <__lo0bits>:
  404c4c:	6803      	ldr	r3, [r0, #0]
  404c4e:	f013 0207 	ands.w	r2, r3, #7
  404c52:	4601      	mov	r1, r0
  404c54:	d007      	beq.n	404c66 <__lo0bits+0x1a>
  404c56:	07da      	lsls	r2, r3, #31
  404c58:	d421      	bmi.n	404c9e <__lo0bits+0x52>
  404c5a:	0798      	lsls	r0, r3, #30
  404c5c:	d421      	bmi.n	404ca2 <__lo0bits+0x56>
  404c5e:	089b      	lsrs	r3, r3, #2
  404c60:	600b      	str	r3, [r1, #0]
  404c62:	2002      	movs	r0, #2
  404c64:	4770      	bx	lr
  404c66:	b298      	uxth	r0, r3
  404c68:	b198      	cbz	r0, 404c92 <__lo0bits+0x46>
  404c6a:	4610      	mov	r0, r2
  404c6c:	f013 0fff 	tst.w	r3, #255	; 0xff
  404c70:	bf04      	itt	eq
  404c72:	0a1b      	lsreq	r3, r3, #8
  404c74:	3008      	addeq	r0, #8
  404c76:	071a      	lsls	r2, r3, #28
  404c78:	bf04      	itt	eq
  404c7a:	091b      	lsreq	r3, r3, #4
  404c7c:	3004      	addeq	r0, #4
  404c7e:	079a      	lsls	r2, r3, #30
  404c80:	bf04      	itt	eq
  404c82:	089b      	lsreq	r3, r3, #2
  404c84:	3002      	addeq	r0, #2
  404c86:	07da      	lsls	r2, r3, #31
  404c88:	d407      	bmi.n	404c9a <__lo0bits+0x4e>
  404c8a:	085b      	lsrs	r3, r3, #1
  404c8c:	d104      	bne.n	404c98 <__lo0bits+0x4c>
  404c8e:	2020      	movs	r0, #32
  404c90:	4770      	bx	lr
  404c92:	0c1b      	lsrs	r3, r3, #16
  404c94:	2010      	movs	r0, #16
  404c96:	e7e9      	b.n	404c6c <__lo0bits+0x20>
  404c98:	3001      	adds	r0, #1
  404c9a:	600b      	str	r3, [r1, #0]
  404c9c:	4770      	bx	lr
  404c9e:	2000      	movs	r0, #0
  404ca0:	4770      	bx	lr
  404ca2:	085b      	lsrs	r3, r3, #1
  404ca4:	600b      	str	r3, [r1, #0]
  404ca6:	2001      	movs	r0, #1
  404ca8:	4770      	bx	lr
  404caa:	bf00      	nop

00404cac <__i2b>:
  404cac:	b510      	push	{r4, lr}
  404cae:	460c      	mov	r4, r1
  404cb0:	2101      	movs	r1, #1
  404cb2:	f7ff ff3b 	bl	404b2c <_Balloc>
  404cb6:	2201      	movs	r2, #1
  404cb8:	6144      	str	r4, [r0, #20]
  404cba:	6102      	str	r2, [r0, #16]
  404cbc:	bd10      	pop	{r4, pc}
  404cbe:	bf00      	nop

00404cc0 <__multiply>:
  404cc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404cc4:	690c      	ldr	r4, [r1, #16]
  404cc6:	6915      	ldr	r5, [r2, #16]
  404cc8:	42ac      	cmp	r4, r5
  404cca:	b083      	sub	sp, #12
  404ccc:	468b      	mov	fp, r1
  404cce:	4616      	mov	r6, r2
  404cd0:	da04      	bge.n	404cdc <__multiply+0x1c>
  404cd2:	4622      	mov	r2, r4
  404cd4:	46b3      	mov	fp, r6
  404cd6:	462c      	mov	r4, r5
  404cd8:	460e      	mov	r6, r1
  404cda:	4615      	mov	r5, r2
  404cdc:	f8db 3008 	ldr.w	r3, [fp, #8]
  404ce0:	f8db 1004 	ldr.w	r1, [fp, #4]
  404ce4:	eb04 0805 	add.w	r8, r4, r5
  404ce8:	4598      	cmp	r8, r3
  404cea:	bfc8      	it	gt
  404cec:	3101      	addgt	r1, #1
  404cee:	f7ff ff1d 	bl	404b2c <_Balloc>
  404cf2:	f100 0914 	add.w	r9, r0, #20
  404cf6:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  404cfa:	45d1      	cmp	r9, sl
  404cfc:	9000      	str	r0, [sp, #0]
  404cfe:	d205      	bcs.n	404d0c <__multiply+0x4c>
  404d00:	464b      	mov	r3, r9
  404d02:	2100      	movs	r1, #0
  404d04:	f843 1b04 	str.w	r1, [r3], #4
  404d08:	459a      	cmp	sl, r3
  404d0a:	d8fb      	bhi.n	404d04 <__multiply+0x44>
  404d0c:	f106 0c14 	add.w	ip, r6, #20
  404d10:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  404d14:	f10b 0b14 	add.w	fp, fp, #20
  404d18:	459c      	cmp	ip, r3
  404d1a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  404d1e:	d24c      	bcs.n	404dba <__multiply+0xfa>
  404d20:	f8cd a004 	str.w	sl, [sp, #4]
  404d24:	469a      	mov	sl, r3
  404d26:	f8dc 5000 	ldr.w	r5, [ip]
  404d2a:	b2af      	uxth	r7, r5
  404d2c:	b1ef      	cbz	r7, 404d6a <__multiply+0xaa>
  404d2e:	2100      	movs	r1, #0
  404d30:	464d      	mov	r5, r9
  404d32:	465e      	mov	r6, fp
  404d34:	460c      	mov	r4, r1
  404d36:	f856 2b04 	ldr.w	r2, [r6], #4
  404d3a:	6828      	ldr	r0, [r5, #0]
  404d3c:	b293      	uxth	r3, r2
  404d3e:	b281      	uxth	r1, r0
  404d40:	fb07 1303 	mla	r3, r7, r3, r1
  404d44:	0c12      	lsrs	r2, r2, #16
  404d46:	0c01      	lsrs	r1, r0, #16
  404d48:	4423      	add	r3, r4
  404d4a:	fb07 1102 	mla	r1, r7, r2, r1
  404d4e:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  404d52:	b29b      	uxth	r3, r3
  404d54:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  404d58:	45b6      	cmp	lr, r6
  404d5a:	f845 3b04 	str.w	r3, [r5], #4
  404d5e:	ea4f 4411 	mov.w	r4, r1, lsr #16
  404d62:	d8e8      	bhi.n	404d36 <__multiply+0x76>
  404d64:	602c      	str	r4, [r5, #0]
  404d66:	f8dc 5000 	ldr.w	r5, [ip]
  404d6a:	0c2d      	lsrs	r5, r5, #16
  404d6c:	d01d      	beq.n	404daa <__multiply+0xea>
  404d6e:	f8d9 3000 	ldr.w	r3, [r9]
  404d72:	4648      	mov	r0, r9
  404d74:	461c      	mov	r4, r3
  404d76:	4659      	mov	r1, fp
  404d78:	2200      	movs	r2, #0
  404d7a:	880e      	ldrh	r6, [r1, #0]
  404d7c:	0c24      	lsrs	r4, r4, #16
  404d7e:	fb05 4406 	mla	r4, r5, r6, r4
  404d82:	4422      	add	r2, r4
  404d84:	b29b      	uxth	r3, r3
  404d86:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  404d8a:	f840 3b04 	str.w	r3, [r0], #4
  404d8e:	f851 3b04 	ldr.w	r3, [r1], #4
  404d92:	6804      	ldr	r4, [r0, #0]
  404d94:	0c1b      	lsrs	r3, r3, #16
  404d96:	b2a6      	uxth	r6, r4
  404d98:	fb05 6303 	mla	r3, r5, r3, r6
  404d9c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  404da0:	458e      	cmp	lr, r1
  404da2:	ea4f 4213 	mov.w	r2, r3, lsr #16
  404da6:	d8e8      	bhi.n	404d7a <__multiply+0xba>
  404da8:	6003      	str	r3, [r0, #0]
  404daa:	f10c 0c04 	add.w	ip, ip, #4
  404dae:	45e2      	cmp	sl, ip
  404db0:	f109 0904 	add.w	r9, r9, #4
  404db4:	d8b7      	bhi.n	404d26 <__multiply+0x66>
  404db6:	f8dd a004 	ldr.w	sl, [sp, #4]
  404dba:	f1b8 0f00 	cmp.w	r8, #0
  404dbe:	dd0b      	ble.n	404dd8 <__multiply+0x118>
  404dc0:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  404dc4:	f1aa 0a04 	sub.w	sl, sl, #4
  404dc8:	b11b      	cbz	r3, 404dd2 <__multiply+0x112>
  404dca:	e005      	b.n	404dd8 <__multiply+0x118>
  404dcc:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  404dd0:	b913      	cbnz	r3, 404dd8 <__multiply+0x118>
  404dd2:	f1b8 0801 	subs.w	r8, r8, #1
  404dd6:	d1f9      	bne.n	404dcc <__multiply+0x10c>
  404dd8:	9800      	ldr	r0, [sp, #0]
  404dda:	f8c0 8010 	str.w	r8, [r0, #16]
  404dde:	b003      	add	sp, #12
  404de0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404de4 <__pow5mult>:
  404de4:	f012 0303 	ands.w	r3, r2, #3
  404de8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404dec:	4614      	mov	r4, r2
  404dee:	4607      	mov	r7, r0
  404df0:	d12e      	bne.n	404e50 <__pow5mult+0x6c>
  404df2:	460d      	mov	r5, r1
  404df4:	10a4      	asrs	r4, r4, #2
  404df6:	d01c      	beq.n	404e32 <__pow5mult+0x4e>
  404df8:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  404dfa:	b396      	cbz	r6, 404e62 <__pow5mult+0x7e>
  404dfc:	07e3      	lsls	r3, r4, #31
  404dfe:	f04f 0800 	mov.w	r8, #0
  404e02:	d406      	bmi.n	404e12 <__pow5mult+0x2e>
  404e04:	1064      	asrs	r4, r4, #1
  404e06:	d014      	beq.n	404e32 <__pow5mult+0x4e>
  404e08:	6830      	ldr	r0, [r6, #0]
  404e0a:	b1a8      	cbz	r0, 404e38 <__pow5mult+0x54>
  404e0c:	4606      	mov	r6, r0
  404e0e:	07e3      	lsls	r3, r4, #31
  404e10:	d5f8      	bpl.n	404e04 <__pow5mult+0x20>
  404e12:	4632      	mov	r2, r6
  404e14:	4629      	mov	r1, r5
  404e16:	4638      	mov	r0, r7
  404e18:	f7ff ff52 	bl	404cc0 <__multiply>
  404e1c:	b1b5      	cbz	r5, 404e4c <__pow5mult+0x68>
  404e1e:	686a      	ldr	r2, [r5, #4]
  404e20:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404e22:	1064      	asrs	r4, r4, #1
  404e24:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404e28:	6029      	str	r1, [r5, #0]
  404e2a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  404e2e:	4605      	mov	r5, r0
  404e30:	d1ea      	bne.n	404e08 <__pow5mult+0x24>
  404e32:	4628      	mov	r0, r5
  404e34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404e38:	4632      	mov	r2, r6
  404e3a:	4631      	mov	r1, r6
  404e3c:	4638      	mov	r0, r7
  404e3e:	f7ff ff3f 	bl	404cc0 <__multiply>
  404e42:	6030      	str	r0, [r6, #0]
  404e44:	f8c0 8000 	str.w	r8, [r0]
  404e48:	4606      	mov	r6, r0
  404e4a:	e7e0      	b.n	404e0e <__pow5mult+0x2a>
  404e4c:	4605      	mov	r5, r0
  404e4e:	e7d9      	b.n	404e04 <__pow5mult+0x20>
  404e50:	1e5a      	subs	r2, r3, #1
  404e52:	4d0b      	ldr	r5, [pc, #44]	; (404e80 <__pow5mult+0x9c>)
  404e54:	2300      	movs	r3, #0
  404e56:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  404e5a:	f7ff fe97 	bl	404b8c <__multadd>
  404e5e:	4605      	mov	r5, r0
  404e60:	e7c8      	b.n	404df4 <__pow5mult+0x10>
  404e62:	2101      	movs	r1, #1
  404e64:	4638      	mov	r0, r7
  404e66:	f7ff fe61 	bl	404b2c <_Balloc>
  404e6a:	f240 2171 	movw	r1, #625	; 0x271
  404e6e:	2201      	movs	r2, #1
  404e70:	2300      	movs	r3, #0
  404e72:	6141      	str	r1, [r0, #20]
  404e74:	6102      	str	r2, [r0, #16]
  404e76:	4606      	mov	r6, r0
  404e78:	64b8      	str	r0, [r7, #72]	; 0x48
  404e7a:	6003      	str	r3, [r0, #0]
  404e7c:	e7be      	b.n	404dfc <__pow5mult+0x18>
  404e7e:	bf00      	nop
  404e80:	004076a0 	.word	0x004076a0

00404e84 <__lshift>:
  404e84:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404e88:	4691      	mov	r9, r2
  404e8a:	690a      	ldr	r2, [r1, #16]
  404e8c:	688b      	ldr	r3, [r1, #8]
  404e8e:	ea4f 1469 	mov.w	r4, r9, asr #5
  404e92:	eb04 0802 	add.w	r8, r4, r2
  404e96:	f108 0501 	add.w	r5, r8, #1
  404e9a:	429d      	cmp	r5, r3
  404e9c:	460e      	mov	r6, r1
  404e9e:	4607      	mov	r7, r0
  404ea0:	6849      	ldr	r1, [r1, #4]
  404ea2:	dd04      	ble.n	404eae <__lshift+0x2a>
  404ea4:	005b      	lsls	r3, r3, #1
  404ea6:	429d      	cmp	r5, r3
  404ea8:	f101 0101 	add.w	r1, r1, #1
  404eac:	dcfa      	bgt.n	404ea4 <__lshift+0x20>
  404eae:	4638      	mov	r0, r7
  404eb0:	f7ff fe3c 	bl	404b2c <_Balloc>
  404eb4:	2c00      	cmp	r4, #0
  404eb6:	f100 0314 	add.w	r3, r0, #20
  404eba:	dd06      	ble.n	404eca <__lshift+0x46>
  404ebc:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  404ec0:	2100      	movs	r1, #0
  404ec2:	f843 1b04 	str.w	r1, [r3], #4
  404ec6:	429a      	cmp	r2, r3
  404ec8:	d1fb      	bne.n	404ec2 <__lshift+0x3e>
  404eca:	6934      	ldr	r4, [r6, #16]
  404ecc:	f106 0114 	add.w	r1, r6, #20
  404ed0:	f019 091f 	ands.w	r9, r9, #31
  404ed4:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  404ed8:	d01d      	beq.n	404f16 <__lshift+0x92>
  404eda:	f1c9 0c20 	rsb	ip, r9, #32
  404ede:	2200      	movs	r2, #0
  404ee0:	680c      	ldr	r4, [r1, #0]
  404ee2:	fa04 f409 	lsl.w	r4, r4, r9
  404ee6:	4314      	orrs	r4, r2
  404ee8:	f843 4b04 	str.w	r4, [r3], #4
  404eec:	f851 2b04 	ldr.w	r2, [r1], #4
  404ef0:	458e      	cmp	lr, r1
  404ef2:	fa22 f20c 	lsr.w	r2, r2, ip
  404ef6:	d8f3      	bhi.n	404ee0 <__lshift+0x5c>
  404ef8:	601a      	str	r2, [r3, #0]
  404efa:	b10a      	cbz	r2, 404f00 <__lshift+0x7c>
  404efc:	f108 0502 	add.w	r5, r8, #2
  404f00:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404f02:	6872      	ldr	r2, [r6, #4]
  404f04:	3d01      	subs	r5, #1
  404f06:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404f0a:	6105      	str	r5, [r0, #16]
  404f0c:	6031      	str	r1, [r6, #0]
  404f0e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  404f12:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404f16:	3b04      	subs	r3, #4
  404f18:	f851 2b04 	ldr.w	r2, [r1], #4
  404f1c:	f843 2f04 	str.w	r2, [r3, #4]!
  404f20:	458e      	cmp	lr, r1
  404f22:	d8f9      	bhi.n	404f18 <__lshift+0x94>
  404f24:	e7ec      	b.n	404f00 <__lshift+0x7c>
  404f26:	bf00      	nop

00404f28 <__mcmp>:
  404f28:	b430      	push	{r4, r5}
  404f2a:	690b      	ldr	r3, [r1, #16]
  404f2c:	4605      	mov	r5, r0
  404f2e:	6900      	ldr	r0, [r0, #16]
  404f30:	1ac0      	subs	r0, r0, r3
  404f32:	d10f      	bne.n	404f54 <__mcmp+0x2c>
  404f34:	009b      	lsls	r3, r3, #2
  404f36:	3514      	adds	r5, #20
  404f38:	3114      	adds	r1, #20
  404f3a:	4419      	add	r1, r3
  404f3c:	442b      	add	r3, r5
  404f3e:	e001      	b.n	404f44 <__mcmp+0x1c>
  404f40:	429d      	cmp	r5, r3
  404f42:	d207      	bcs.n	404f54 <__mcmp+0x2c>
  404f44:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  404f48:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  404f4c:	4294      	cmp	r4, r2
  404f4e:	d0f7      	beq.n	404f40 <__mcmp+0x18>
  404f50:	d302      	bcc.n	404f58 <__mcmp+0x30>
  404f52:	2001      	movs	r0, #1
  404f54:	bc30      	pop	{r4, r5}
  404f56:	4770      	bx	lr
  404f58:	f04f 30ff 	mov.w	r0, #4294967295
  404f5c:	e7fa      	b.n	404f54 <__mcmp+0x2c>
  404f5e:	bf00      	nop

00404f60 <__mdiff>:
  404f60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404f64:	690f      	ldr	r7, [r1, #16]
  404f66:	460e      	mov	r6, r1
  404f68:	6911      	ldr	r1, [r2, #16]
  404f6a:	1a7f      	subs	r7, r7, r1
  404f6c:	2f00      	cmp	r7, #0
  404f6e:	4690      	mov	r8, r2
  404f70:	d117      	bne.n	404fa2 <__mdiff+0x42>
  404f72:	0089      	lsls	r1, r1, #2
  404f74:	f106 0514 	add.w	r5, r6, #20
  404f78:	f102 0e14 	add.w	lr, r2, #20
  404f7c:	186b      	adds	r3, r5, r1
  404f7e:	4471      	add	r1, lr
  404f80:	e001      	b.n	404f86 <__mdiff+0x26>
  404f82:	429d      	cmp	r5, r3
  404f84:	d25c      	bcs.n	405040 <__mdiff+0xe0>
  404f86:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  404f8a:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  404f8e:	42a2      	cmp	r2, r4
  404f90:	d0f7      	beq.n	404f82 <__mdiff+0x22>
  404f92:	d25e      	bcs.n	405052 <__mdiff+0xf2>
  404f94:	4633      	mov	r3, r6
  404f96:	462c      	mov	r4, r5
  404f98:	4646      	mov	r6, r8
  404f9a:	4675      	mov	r5, lr
  404f9c:	4698      	mov	r8, r3
  404f9e:	2701      	movs	r7, #1
  404fa0:	e005      	b.n	404fae <__mdiff+0x4e>
  404fa2:	db58      	blt.n	405056 <__mdiff+0xf6>
  404fa4:	f106 0514 	add.w	r5, r6, #20
  404fa8:	f108 0414 	add.w	r4, r8, #20
  404fac:	2700      	movs	r7, #0
  404fae:	6871      	ldr	r1, [r6, #4]
  404fb0:	f7ff fdbc 	bl	404b2c <_Balloc>
  404fb4:	f8d8 3010 	ldr.w	r3, [r8, #16]
  404fb8:	6936      	ldr	r6, [r6, #16]
  404fba:	60c7      	str	r7, [r0, #12]
  404fbc:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  404fc0:	46a6      	mov	lr, r4
  404fc2:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  404fc6:	f100 0414 	add.w	r4, r0, #20
  404fca:	2300      	movs	r3, #0
  404fcc:	f85e 1b04 	ldr.w	r1, [lr], #4
  404fd0:	f855 8b04 	ldr.w	r8, [r5], #4
  404fd4:	b28a      	uxth	r2, r1
  404fd6:	fa13 f388 	uxtah	r3, r3, r8
  404fda:	0c09      	lsrs	r1, r1, #16
  404fdc:	1a9a      	subs	r2, r3, r2
  404fde:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  404fe2:	eb03 4322 	add.w	r3, r3, r2, asr #16
  404fe6:	b292      	uxth	r2, r2
  404fe8:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  404fec:	45f4      	cmp	ip, lr
  404fee:	f844 2b04 	str.w	r2, [r4], #4
  404ff2:	ea4f 4323 	mov.w	r3, r3, asr #16
  404ff6:	d8e9      	bhi.n	404fcc <__mdiff+0x6c>
  404ff8:	42af      	cmp	r7, r5
  404ffa:	d917      	bls.n	40502c <__mdiff+0xcc>
  404ffc:	46a4      	mov	ip, r4
  404ffe:	46ae      	mov	lr, r5
  405000:	f85e 2b04 	ldr.w	r2, [lr], #4
  405004:	fa13 f382 	uxtah	r3, r3, r2
  405008:	1419      	asrs	r1, r3, #16
  40500a:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  40500e:	b29b      	uxth	r3, r3
  405010:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  405014:	4577      	cmp	r7, lr
  405016:	f84c 2b04 	str.w	r2, [ip], #4
  40501a:	ea4f 4321 	mov.w	r3, r1, asr #16
  40501e:	d8ef      	bhi.n	405000 <__mdiff+0xa0>
  405020:	43ed      	mvns	r5, r5
  405022:	442f      	add	r7, r5
  405024:	f027 0703 	bic.w	r7, r7, #3
  405028:	3704      	adds	r7, #4
  40502a:	443c      	add	r4, r7
  40502c:	3c04      	subs	r4, #4
  40502e:	b922      	cbnz	r2, 40503a <__mdiff+0xda>
  405030:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  405034:	3e01      	subs	r6, #1
  405036:	2b00      	cmp	r3, #0
  405038:	d0fa      	beq.n	405030 <__mdiff+0xd0>
  40503a:	6106      	str	r6, [r0, #16]
  40503c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405040:	2100      	movs	r1, #0
  405042:	f7ff fd73 	bl	404b2c <_Balloc>
  405046:	2201      	movs	r2, #1
  405048:	2300      	movs	r3, #0
  40504a:	6102      	str	r2, [r0, #16]
  40504c:	6143      	str	r3, [r0, #20]
  40504e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405052:	4674      	mov	r4, lr
  405054:	e7ab      	b.n	404fae <__mdiff+0x4e>
  405056:	4633      	mov	r3, r6
  405058:	f106 0414 	add.w	r4, r6, #20
  40505c:	f102 0514 	add.w	r5, r2, #20
  405060:	4616      	mov	r6, r2
  405062:	2701      	movs	r7, #1
  405064:	4698      	mov	r8, r3
  405066:	e7a2      	b.n	404fae <__mdiff+0x4e>

00405068 <__d2b>:
  405068:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40506c:	b082      	sub	sp, #8
  40506e:	2101      	movs	r1, #1
  405070:	461c      	mov	r4, r3
  405072:	f3c3 570a 	ubfx	r7, r3, #20, #11
  405076:	4615      	mov	r5, r2
  405078:	9e08      	ldr	r6, [sp, #32]
  40507a:	f7ff fd57 	bl	404b2c <_Balloc>
  40507e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  405082:	4680      	mov	r8, r0
  405084:	b10f      	cbz	r7, 40508a <__d2b+0x22>
  405086:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  40508a:	9401      	str	r4, [sp, #4]
  40508c:	b31d      	cbz	r5, 4050d6 <__d2b+0x6e>
  40508e:	a802      	add	r0, sp, #8
  405090:	f840 5d08 	str.w	r5, [r0, #-8]!
  405094:	f7ff fdda 	bl	404c4c <__lo0bits>
  405098:	2800      	cmp	r0, #0
  40509a:	d134      	bne.n	405106 <__d2b+0x9e>
  40509c:	e89d 000c 	ldmia.w	sp, {r2, r3}
  4050a0:	f8c8 2014 	str.w	r2, [r8, #20]
  4050a4:	2b00      	cmp	r3, #0
  4050a6:	bf0c      	ite	eq
  4050a8:	2101      	moveq	r1, #1
  4050aa:	2102      	movne	r1, #2
  4050ac:	f8c8 3018 	str.w	r3, [r8, #24]
  4050b0:	f8c8 1010 	str.w	r1, [r8, #16]
  4050b4:	b9df      	cbnz	r7, 4050ee <__d2b+0x86>
  4050b6:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  4050ba:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  4050be:	6030      	str	r0, [r6, #0]
  4050c0:	6918      	ldr	r0, [r3, #16]
  4050c2:	f7ff fda3 	bl	404c0c <__hi0bits>
  4050c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4050c8:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  4050cc:	6018      	str	r0, [r3, #0]
  4050ce:	4640      	mov	r0, r8
  4050d0:	b002      	add	sp, #8
  4050d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4050d6:	a801      	add	r0, sp, #4
  4050d8:	f7ff fdb8 	bl	404c4c <__lo0bits>
  4050dc:	9b01      	ldr	r3, [sp, #4]
  4050de:	f8c8 3014 	str.w	r3, [r8, #20]
  4050e2:	2101      	movs	r1, #1
  4050e4:	3020      	adds	r0, #32
  4050e6:	f8c8 1010 	str.w	r1, [r8, #16]
  4050ea:	2f00      	cmp	r7, #0
  4050ec:	d0e3      	beq.n	4050b6 <__d2b+0x4e>
  4050ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4050f0:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  4050f4:	4407      	add	r7, r0
  4050f6:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  4050fa:	6037      	str	r7, [r6, #0]
  4050fc:	6018      	str	r0, [r3, #0]
  4050fe:	4640      	mov	r0, r8
  405100:	b002      	add	sp, #8
  405102:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405106:	e89d 000a 	ldmia.w	sp, {r1, r3}
  40510a:	f1c0 0220 	rsb	r2, r0, #32
  40510e:	fa03 f202 	lsl.w	r2, r3, r2
  405112:	430a      	orrs	r2, r1
  405114:	40c3      	lsrs	r3, r0
  405116:	9301      	str	r3, [sp, #4]
  405118:	f8c8 2014 	str.w	r2, [r8, #20]
  40511c:	e7c2      	b.n	4050a4 <__d2b+0x3c>
  40511e:	bf00      	nop

00405120 <_sbrk_r>:
  405120:	b538      	push	{r3, r4, r5, lr}
  405122:	4c07      	ldr	r4, [pc, #28]	; (405140 <_sbrk_r+0x20>)
  405124:	2300      	movs	r3, #0
  405126:	4605      	mov	r5, r0
  405128:	4608      	mov	r0, r1
  40512a:	6023      	str	r3, [r4, #0]
  40512c:	f7fc fb30 	bl	401790 <_sbrk>
  405130:	1c43      	adds	r3, r0, #1
  405132:	d000      	beq.n	405136 <_sbrk_r+0x16>
  405134:	bd38      	pop	{r3, r4, r5, pc}
  405136:	6823      	ldr	r3, [r4, #0]
  405138:	2b00      	cmp	r3, #0
  40513a:	d0fb      	beq.n	405134 <_sbrk_r+0x14>
  40513c:	602b      	str	r3, [r5, #0]
  40513e:	bd38      	pop	{r3, r4, r5, pc}
  405140:	20019574 	.word	0x20019574

00405144 <strchr>:
  405144:	b2c9      	uxtb	r1, r1
  405146:	2900      	cmp	r1, #0
  405148:	d041      	beq.n	4051ce <strchr+0x8a>
  40514a:	0782      	lsls	r2, r0, #30
  40514c:	b4f0      	push	{r4, r5, r6, r7}
  40514e:	d067      	beq.n	405220 <strchr+0xdc>
  405150:	7803      	ldrb	r3, [r0, #0]
  405152:	2b00      	cmp	r3, #0
  405154:	d068      	beq.n	405228 <strchr+0xe4>
  405156:	4299      	cmp	r1, r3
  405158:	d037      	beq.n	4051ca <strchr+0x86>
  40515a:	1c43      	adds	r3, r0, #1
  40515c:	e004      	b.n	405168 <strchr+0x24>
  40515e:	f813 0b01 	ldrb.w	r0, [r3], #1
  405162:	b390      	cbz	r0, 4051ca <strchr+0x86>
  405164:	4281      	cmp	r1, r0
  405166:	d02f      	beq.n	4051c8 <strchr+0x84>
  405168:	079a      	lsls	r2, r3, #30
  40516a:	461c      	mov	r4, r3
  40516c:	d1f7      	bne.n	40515e <strchr+0x1a>
  40516e:	6825      	ldr	r5, [r4, #0]
  405170:	ea41 2301 	orr.w	r3, r1, r1, lsl #8
  405174:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
  405178:	ea83 0605 	eor.w	r6, r3, r5
  40517c:	f1a6 3001 	sub.w	r0, r6, #16843009	; 0x1010101
  405180:	f1a5 3201 	sub.w	r2, r5, #16843009	; 0x1010101
  405184:	ea20 0006 	bic.w	r0, r0, r6
  405188:	ea22 0205 	bic.w	r2, r2, r5
  40518c:	4302      	orrs	r2, r0
  40518e:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  405192:	d111      	bne.n	4051b8 <strchr+0x74>
  405194:	4620      	mov	r0, r4
  405196:	f850 6f04 	ldr.w	r6, [r0, #4]!
  40519a:	ea83 0706 	eor.w	r7, r3, r6
  40519e:	f1a7 3501 	sub.w	r5, r7, #16843009	; 0x1010101
  4051a2:	f1a6 3201 	sub.w	r2, r6, #16843009	; 0x1010101
  4051a6:	ea25 0507 	bic.w	r5, r5, r7
  4051aa:	ea22 0206 	bic.w	r2, r2, r6
  4051ae:	432a      	orrs	r2, r5
  4051b0:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  4051b4:	d0ef      	beq.n	405196 <strchr+0x52>
  4051b6:	4604      	mov	r4, r0
  4051b8:	7820      	ldrb	r0, [r4, #0]
  4051ba:	b918      	cbnz	r0, 4051c4 <strchr+0x80>
  4051bc:	e005      	b.n	4051ca <strchr+0x86>
  4051be:	f814 0f01 	ldrb.w	r0, [r4, #1]!
  4051c2:	b110      	cbz	r0, 4051ca <strchr+0x86>
  4051c4:	4281      	cmp	r1, r0
  4051c6:	d1fa      	bne.n	4051be <strchr+0x7a>
  4051c8:	4620      	mov	r0, r4
  4051ca:	bcf0      	pop	{r4, r5, r6, r7}
  4051cc:	4770      	bx	lr
  4051ce:	0783      	lsls	r3, r0, #30
  4051d0:	d024      	beq.n	40521c <strchr+0xd8>
  4051d2:	7803      	ldrb	r3, [r0, #0]
  4051d4:	2b00      	cmp	r3, #0
  4051d6:	d0f9      	beq.n	4051cc <strchr+0x88>
  4051d8:	1c43      	adds	r3, r0, #1
  4051da:	e003      	b.n	4051e4 <strchr+0xa0>
  4051dc:	7802      	ldrb	r2, [r0, #0]
  4051de:	3301      	adds	r3, #1
  4051e0:	2a00      	cmp	r2, #0
  4051e2:	d0f3      	beq.n	4051cc <strchr+0x88>
  4051e4:	0799      	lsls	r1, r3, #30
  4051e6:	4618      	mov	r0, r3
  4051e8:	d1f8      	bne.n	4051dc <strchr+0x98>
  4051ea:	6819      	ldr	r1, [r3, #0]
  4051ec:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  4051f0:	ea22 0201 	bic.w	r2, r2, r1
  4051f4:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  4051f8:	d108      	bne.n	40520c <strchr+0xc8>
  4051fa:	f853 1f04 	ldr.w	r1, [r3, #4]!
  4051fe:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  405202:	ea22 0201 	bic.w	r2, r2, r1
  405206:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  40520a:	d0f6      	beq.n	4051fa <strchr+0xb6>
  40520c:	781a      	ldrb	r2, [r3, #0]
  40520e:	4618      	mov	r0, r3
  405210:	b142      	cbz	r2, 405224 <strchr+0xe0>
  405212:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  405216:	2b00      	cmp	r3, #0
  405218:	d1fb      	bne.n	405212 <strchr+0xce>
  40521a:	4770      	bx	lr
  40521c:	4603      	mov	r3, r0
  40521e:	e7e4      	b.n	4051ea <strchr+0xa6>
  405220:	4604      	mov	r4, r0
  405222:	e7a4      	b.n	40516e <strchr+0x2a>
  405224:	4618      	mov	r0, r3
  405226:	4770      	bx	lr
  405228:	4618      	mov	r0, r3
  40522a:	e7ce      	b.n	4051ca <strchr+0x86>
	...

00405240 <strlen>:
  405240:	f890 f000 	pld	[r0]
  405244:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  405248:	f020 0107 	bic.w	r1, r0, #7
  40524c:	f06f 0c00 	mvn.w	ip, #0
  405250:	f010 0407 	ands.w	r4, r0, #7
  405254:	f891 f020 	pld	[r1, #32]
  405258:	f040 8049 	bne.w	4052ee <strlen+0xae>
  40525c:	f04f 0400 	mov.w	r4, #0
  405260:	f06f 0007 	mvn.w	r0, #7
  405264:	e9d1 2300 	ldrd	r2, r3, [r1]
  405268:	f891 f040 	pld	[r1, #64]	; 0x40
  40526c:	f100 0008 	add.w	r0, r0, #8
  405270:	fa82 f24c 	uadd8	r2, r2, ip
  405274:	faa4 f28c 	sel	r2, r4, ip
  405278:	fa83 f34c 	uadd8	r3, r3, ip
  40527c:	faa2 f38c 	sel	r3, r2, ip
  405280:	bb4b      	cbnz	r3, 4052d6 <strlen+0x96>
  405282:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  405286:	fa82 f24c 	uadd8	r2, r2, ip
  40528a:	f100 0008 	add.w	r0, r0, #8
  40528e:	faa4 f28c 	sel	r2, r4, ip
  405292:	fa83 f34c 	uadd8	r3, r3, ip
  405296:	faa2 f38c 	sel	r3, r2, ip
  40529a:	b9e3      	cbnz	r3, 4052d6 <strlen+0x96>
  40529c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  4052a0:	fa82 f24c 	uadd8	r2, r2, ip
  4052a4:	f100 0008 	add.w	r0, r0, #8
  4052a8:	faa4 f28c 	sel	r2, r4, ip
  4052ac:	fa83 f34c 	uadd8	r3, r3, ip
  4052b0:	faa2 f38c 	sel	r3, r2, ip
  4052b4:	b97b      	cbnz	r3, 4052d6 <strlen+0x96>
  4052b6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  4052ba:	f101 0120 	add.w	r1, r1, #32
  4052be:	fa82 f24c 	uadd8	r2, r2, ip
  4052c2:	f100 0008 	add.w	r0, r0, #8
  4052c6:	faa4 f28c 	sel	r2, r4, ip
  4052ca:	fa83 f34c 	uadd8	r3, r3, ip
  4052ce:	faa2 f38c 	sel	r3, r2, ip
  4052d2:	2b00      	cmp	r3, #0
  4052d4:	d0c6      	beq.n	405264 <strlen+0x24>
  4052d6:	2a00      	cmp	r2, #0
  4052d8:	bf04      	itt	eq
  4052da:	3004      	addeq	r0, #4
  4052dc:	461a      	moveq	r2, r3
  4052de:	ba12      	rev	r2, r2
  4052e0:	fab2 f282 	clz	r2, r2
  4052e4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4052e8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4052ec:	4770      	bx	lr
  4052ee:	e9d1 2300 	ldrd	r2, r3, [r1]
  4052f2:	f004 0503 	and.w	r5, r4, #3
  4052f6:	f1c4 0000 	rsb	r0, r4, #0
  4052fa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4052fe:	f014 0f04 	tst.w	r4, #4
  405302:	f891 f040 	pld	[r1, #64]	; 0x40
  405306:	fa0c f505 	lsl.w	r5, ip, r5
  40530a:	ea62 0205 	orn	r2, r2, r5
  40530e:	bf1c      	itt	ne
  405310:	ea63 0305 	ornne	r3, r3, r5
  405314:	4662      	movne	r2, ip
  405316:	f04f 0400 	mov.w	r4, #0
  40531a:	e7a9      	b.n	405270 <strlen+0x30>

0040531c <__ssprint_r>:
  40531c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405320:	6893      	ldr	r3, [r2, #8]
  405322:	b083      	sub	sp, #12
  405324:	4690      	mov	r8, r2
  405326:	2b00      	cmp	r3, #0
  405328:	d070      	beq.n	40540c <__ssprint_r+0xf0>
  40532a:	4682      	mov	sl, r0
  40532c:	460c      	mov	r4, r1
  40532e:	6817      	ldr	r7, [r2, #0]
  405330:	688d      	ldr	r5, [r1, #8]
  405332:	6808      	ldr	r0, [r1, #0]
  405334:	e042      	b.n	4053bc <__ssprint_r+0xa0>
  405336:	89a3      	ldrh	r3, [r4, #12]
  405338:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40533c:	d02e      	beq.n	40539c <__ssprint_r+0x80>
  40533e:	6965      	ldr	r5, [r4, #20]
  405340:	6921      	ldr	r1, [r4, #16]
  405342:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  405346:	eba0 0b01 	sub.w	fp, r0, r1
  40534a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40534e:	f10b 0001 	add.w	r0, fp, #1
  405352:	106d      	asrs	r5, r5, #1
  405354:	4430      	add	r0, r6
  405356:	42a8      	cmp	r0, r5
  405358:	462a      	mov	r2, r5
  40535a:	bf84      	itt	hi
  40535c:	4605      	movhi	r5, r0
  40535e:	462a      	movhi	r2, r5
  405360:	055b      	lsls	r3, r3, #21
  405362:	d538      	bpl.n	4053d6 <__ssprint_r+0xba>
  405364:	4611      	mov	r1, r2
  405366:	4650      	mov	r0, sl
  405368:	f7ff f808 	bl	40437c <_malloc_r>
  40536c:	2800      	cmp	r0, #0
  40536e:	d03c      	beq.n	4053ea <__ssprint_r+0xce>
  405370:	465a      	mov	r2, fp
  405372:	6921      	ldr	r1, [r4, #16]
  405374:	9001      	str	r0, [sp, #4]
  405376:	f7ff fb33 	bl	4049e0 <memcpy>
  40537a:	89a2      	ldrh	r2, [r4, #12]
  40537c:	9b01      	ldr	r3, [sp, #4]
  40537e:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  405382:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  405386:	81a2      	strh	r2, [r4, #12]
  405388:	eba5 020b 	sub.w	r2, r5, fp
  40538c:	eb03 000b 	add.w	r0, r3, fp
  405390:	6165      	str	r5, [r4, #20]
  405392:	6123      	str	r3, [r4, #16]
  405394:	6020      	str	r0, [r4, #0]
  405396:	60a2      	str	r2, [r4, #8]
  405398:	4635      	mov	r5, r6
  40539a:	46b3      	mov	fp, r6
  40539c:	465a      	mov	r2, fp
  40539e:	4649      	mov	r1, r9
  4053a0:	f000 fa18 	bl	4057d4 <memmove>
  4053a4:	f8d8 3008 	ldr.w	r3, [r8, #8]
  4053a8:	68a2      	ldr	r2, [r4, #8]
  4053aa:	6820      	ldr	r0, [r4, #0]
  4053ac:	1b55      	subs	r5, r2, r5
  4053ae:	4458      	add	r0, fp
  4053b0:	1b9e      	subs	r6, r3, r6
  4053b2:	60a5      	str	r5, [r4, #8]
  4053b4:	6020      	str	r0, [r4, #0]
  4053b6:	f8c8 6008 	str.w	r6, [r8, #8]
  4053ba:	b33e      	cbz	r6, 40540c <__ssprint_r+0xf0>
  4053bc:	687e      	ldr	r6, [r7, #4]
  4053be:	463b      	mov	r3, r7
  4053c0:	3708      	adds	r7, #8
  4053c2:	2e00      	cmp	r6, #0
  4053c4:	d0fa      	beq.n	4053bc <__ssprint_r+0xa0>
  4053c6:	42ae      	cmp	r6, r5
  4053c8:	f8d3 9000 	ldr.w	r9, [r3]
  4053cc:	46ab      	mov	fp, r5
  4053ce:	d2b2      	bcs.n	405336 <__ssprint_r+0x1a>
  4053d0:	4635      	mov	r5, r6
  4053d2:	46b3      	mov	fp, r6
  4053d4:	e7e2      	b.n	40539c <__ssprint_r+0x80>
  4053d6:	4650      	mov	r0, sl
  4053d8:	f000 fa60 	bl	40589c <_realloc_r>
  4053dc:	4603      	mov	r3, r0
  4053de:	2800      	cmp	r0, #0
  4053e0:	d1d2      	bne.n	405388 <__ssprint_r+0x6c>
  4053e2:	6921      	ldr	r1, [r4, #16]
  4053e4:	4650      	mov	r0, sl
  4053e6:	f000 f8f9 	bl	4055dc <_free_r>
  4053ea:	230c      	movs	r3, #12
  4053ec:	f8ca 3000 	str.w	r3, [sl]
  4053f0:	89a3      	ldrh	r3, [r4, #12]
  4053f2:	2200      	movs	r2, #0
  4053f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4053f8:	f04f 30ff 	mov.w	r0, #4294967295
  4053fc:	81a3      	strh	r3, [r4, #12]
  4053fe:	f8c8 2008 	str.w	r2, [r8, #8]
  405402:	f8c8 2004 	str.w	r2, [r8, #4]
  405406:	b003      	add	sp, #12
  405408:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40540c:	2000      	movs	r0, #0
  40540e:	f8c8 0004 	str.w	r0, [r8, #4]
  405412:	b003      	add	sp, #12
  405414:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405418 <__register_exitproc>:
  405418:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40541c:	4d2c      	ldr	r5, [pc, #176]	; (4054d0 <__register_exitproc+0xb8>)
  40541e:	4606      	mov	r6, r0
  405420:	6828      	ldr	r0, [r5, #0]
  405422:	4698      	mov	r8, r3
  405424:	460f      	mov	r7, r1
  405426:	4691      	mov	r9, r2
  405428:	f7fe ffa4 	bl	404374 <__retarget_lock_acquire_recursive>
  40542c:	4b29      	ldr	r3, [pc, #164]	; (4054d4 <__register_exitproc+0xbc>)
  40542e:	681c      	ldr	r4, [r3, #0]
  405430:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  405434:	2b00      	cmp	r3, #0
  405436:	d03e      	beq.n	4054b6 <__register_exitproc+0x9e>
  405438:	685a      	ldr	r2, [r3, #4]
  40543a:	2a1f      	cmp	r2, #31
  40543c:	dc1c      	bgt.n	405478 <__register_exitproc+0x60>
  40543e:	f102 0e01 	add.w	lr, r2, #1
  405442:	b176      	cbz	r6, 405462 <__register_exitproc+0x4a>
  405444:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  405448:	2401      	movs	r4, #1
  40544a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40544e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  405452:	4094      	lsls	r4, r2
  405454:	4320      	orrs	r0, r4
  405456:	2e02      	cmp	r6, #2
  405458:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40545c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  405460:	d023      	beq.n	4054aa <__register_exitproc+0x92>
  405462:	3202      	adds	r2, #2
  405464:	f8c3 e004 	str.w	lr, [r3, #4]
  405468:	6828      	ldr	r0, [r5, #0]
  40546a:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  40546e:	f7fe ff83 	bl	404378 <__retarget_lock_release_recursive>
  405472:	2000      	movs	r0, #0
  405474:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405478:	4b17      	ldr	r3, [pc, #92]	; (4054d8 <__register_exitproc+0xc0>)
  40547a:	b30b      	cbz	r3, 4054c0 <__register_exitproc+0xa8>
  40547c:	f44f 70c8 	mov.w	r0, #400	; 0x190
  405480:	f3af 8000 	nop.w
  405484:	4603      	mov	r3, r0
  405486:	b1d8      	cbz	r0, 4054c0 <__register_exitproc+0xa8>
  405488:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  40548c:	6002      	str	r2, [r0, #0]
  40548e:	2100      	movs	r1, #0
  405490:	6041      	str	r1, [r0, #4]
  405492:	460a      	mov	r2, r1
  405494:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  405498:	f04f 0e01 	mov.w	lr, #1
  40549c:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  4054a0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  4054a4:	2e00      	cmp	r6, #0
  4054a6:	d0dc      	beq.n	405462 <__register_exitproc+0x4a>
  4054a8:	e7cc      	b.n	405444 <__register_exitproc+0x2c>
  4054aa:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  4054ae:	430c      	orrs	r4, r1
  4054b0:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  4054b4:	e7d5      	b.n	405462 <__register_exitproc+0x4a>
  4054b6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  4054ba:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  4054be:	e7bb      	b.n	405438 <__register_exitproc+0x20>
  4054c0:	6828      	ldr	r0, [r5, #0]
  4054c2:	f7fe ff59 	bl	404378 <__retarget_lock_release_recursive>
  4054c6:	f04f 30ff 	mov.w	r0, #4294967295
  4054ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4054ce:	bf00      	nop
  4054d0:	20000440 	.word	0x20000440
  4054d4:	00407534 	.word	0x00407534
  4054d8:	00000000 	.word	0x00000000

004054dc <_calloc_r>:
  4054dc:	b510      	push	{r4, lr}
  4054de:	fb02 f101 	mul.w	r1, r2, r1
  4054e2:	f7fe ff4b 	bl	40437c <_malloc_r>
  4054e6:	4604      	mov	r4, r0
  4054e8:	b1d8      	cbz	r0, 405522 <_calloc_r+0x46>
  4054ea:	f850 2c04 	ldr.w	r2, [r0, #-4]
  4054ee:	f022 0203 	bic.w	r2, r2, #3
  4054f2:	3a04      	subs	r2, #4
  4054f4:	2a24      	cmp	r2, #36	; 0x24
  4054f6:	d818      	bhi.n	40552a <_calloc_r+0x4e>
  4054f8:	2a13      	cmp	r2, #19
  4054fa:	d914      	bls.n	405526 <_calloc_r+0x4a>
  4054fc:	2300      	movs	r3, #0
  4054fe:	2a1b      	cmp	r2, #27
  405500:	6003      	str	r3, [r0, #0]
  405502:	6043      	str	r3, [r0, #4]
  405504:	d916      	bls.n	405534 <_calloc_r+0x58>
  405506:	2a24      	cmp	r2, #36	; 0x24
  405508:	6083      	str	r3, [r0, #8]
  40550a:	60c3      	str	r3, [r0, #12]
  40550c:	bf11      	iteee	ne
  40550e:	f100 0210 	addne.w	r2, r0, #16
  405512:	6103      	streq	r3, [r0, #16]
  405514:	6143      	streq	r3, [r0, #20]
  405516:	f100 0218 	addeq.w	r2, r0, #24
  40551a:	2300      	movs	r3, #0
  40551c:	6013      	str	r3, [r2, #0]
  40551e:	6053      	str	r3, [r2, #4]
  405520:	6093      	str	r3, [r2, #8]
  405522:	4620      	mov	r0, r4
  405524:	bd10      	pop	{r4, pc}
  405526:	4602      	mov	r2, r0
  405528:	e7f7      	b.n	40551a <_calloc_r+0x3e>
  40552a:	2100      	movs	r1, #0
  40552c:	f7fc fa26 	bl	40197c <memset>
  405530:	4620      	mov	r0, r4
  405532:	bd10      	pop	{r4, pc}
  405534:	f100 0208 	add.w	r2, r0, #8
  405538:	e7ef      	b.n	40551a <_calloc_r+0x3e>
  40553a:	bf00      	nop

0040553c <_malloc_trim_r>:
  40553c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40553e:	4f24      	ldr	r7, [pc, #144]	; (4055d0 <_malloc_trim_r+0x94>)
  405540:	460c      	mov	r4, r1
  405542:	4606      	mov	r6, r0
  405544:	f7ff fae6 	bl	404b14 <__malloc_lock>
  405548:	68bb      	ldr	r3, [r7, #8]
  40554a:	685d      	ldr	r5, [r3, #4]
  40554c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  405550:	310f      	adds	r1, #15
  405552:	f025 0503 	bic.w	r5, r5, #3
  405556:	4429      	add	r1, r5
  405558:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40555c:	f021 010f 	bic.w	r1, r1, #15
  405560:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  405564:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  405568:	db07      	blt.n	40557a <_malloc_trim_r+0x3e>
  40556a:	2100      	movs	r1, #0
  40556c:	4630      	mov	r0, r6
  40556e:	f7ff fdd7 	bl	405120 <_sbrk_r>
  405572:	68bb      	ldr	r3, [r7, #8]
  405574:	442b      	add	r3, r5
  405576:	4298      	cmp	r0, r3
  405578:	d004      	beq.n	405584 <_malloc_trim_r+0x48>
  40557a:	4630      	mov	r0, r6
  40557c:	f7ff fad0 	bl	404b20 <__malloc_unlock>
  405580:	2000      	movs	r0, #0
  405582:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405584:	4261      	negs	r1, r4
  405586:	4630      	mov	r0, r6
  405588:	f7ff fdca 	bl	405120 <_sbrk_r>
  40558c:	3001      	adds	r0, #1
  40558e:	d00d      	beq.n	4055ac <_malloc_trim_r+0x70>
  405590:	4b10      	ldr	r3, [pc, #64]	; (4055d4 <_malloc_trim_r+0x98>)
  405592:	68ba      	ldr	r2, [r7, #8]
  405594:	6819      	ldr	r1, [r3, #0]
  405596:	1b2d      	subs	r5, r5, r4
  405598:	f045 0501 	orr.w	r5, r5, #1
  40559c:	4630      	mov	r0, r6
  40559e:	1b09      	subs	r1, r1, r4
  4055a0:	6055      	str	r5, [r2, #4]
  4055a2:	6019      	str	r1, [r3, #0]
  4055a4:	f7ff fabc 	bl	404b20 <__malloc_unlock>
  4055a8:	2001      	movs	r0, #1
  4055aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4055ac:	2100      	movs	r1, #0
  4055ae:	4630      	mov	r0, r6
  4055b0:	f7ff fdb6 	bl	405120 <_sbrk_r>
  4055b4:	68ba      	ldr	r2, [r7, #8]
  4055b6:	1a83      	subs	r3, r0, r2
  4055b8:	2b0f      	cmp	r3, #15
  4055ba:	ddde      	ble.n	40557a <_malloc_trim_r+0x3e>
  4055bc:	4c06      	ldr	r4, [pc, #24]	; (4055d8 <_malloc_trim_r+0x9c>)
  4055be:	4905      	ldr	r1, [pc, #20]	; (4055d4 <_malloc_trim_r+0x98>)
  4055c0:	6824      	ldr	r4, [r4, #0]
  4055c2:	f043 0301 	orr.w	r3, r3, #1
  4055c6:	1b00      	subs	r0, r0, r4
  4055c8:	6053      	str	r3, [r2, #4]
  4055ca:	6008      	str	r0, [r1, #0]
  4055cc:	e7d5      	b.n	40557a <_malloc_trim_r+0x3e>
  4055ce:	bf00      	nop
  4055d0:	20000444 	.word	0x20000444
  4055d4:	20000a8c 	.word	0x20000a8c
  4055d8:	2000084c 	.word	0x2000084c

004055dc <_free_r>:
  4055dc:	2900      	cmp	r1, #0
  4055de:	d044      	beq.n	40566a <_free_r+0x8e>
  4055e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4055e4:	460d      	mov	r5, r1
  4055e6:	4680      	mov	r8, r0
  4055e8:	f7ff fa94 	bl	404b14 <__malloc_lock>
  4055ec:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4055f0:	4969      	ldr	r1, [pc, #420]	; (405798 <_free_r+0x1bc>)
  4055f2:	f027 0301 	bic.w	r3, r7, #1
  4055f6:	f1a5 0408 	sub.w	r4, r5, #8
  4055fa:	18e2      	adds	r2, r4, r3
  4055fc:	688e      	ldr	r6, [r1, #8]
  4055fe:	6850      	ldr	r0, [r2, #4]
  405600:	42b2      	cmp	r2, r6
  405602:	f020 0003 	bic.w	r0, r0, #3
  405606:	d05e      	beq.n	4056c6 <_free_r+0xea>
  405608:	07fe      	lsls	r6, r7, #31
  40560a:	6050      	str	r0, [r2, #4]
  40560c:	d40b      	bmi.n	405626 <_free_r+0x4a>
  40560e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  405612:	1be4      	subs	r4, r4, r7
  405614:	f101 0e08 	add.w	lr, r1, #8
  405618:	68a5      	ldr	r5, [r4, #8]
  40561a:	4575      	cmp	r5, lr
  40561c:	443b      	add	r3, r7
  40561e:	d06d      	beq.n	4056fc <_free_r+0x120>
  405620:	68e7      	ldr	r7, [r4, #12]
  405622:	60ef      	str	r7, [r5, #12]
  405624:	60bd      	str	r5, [r7, #8]
  405626:	1815      	adds	r5, r2, r0
  405628:	686d      	ldr	r5, [r5, #4]
  40562a:	07ed      	lsls	r5, r5, #31
  40562c:	d53e      	bpl.n	4056ac <_free_r+0xd0>
  40562e:	f043 0201 	orr.w	r2, r3, #1
  405632:	6062      	str	r2, [r4, #4]
  405634:	50e3      	str	r3, [r4, r3]
  405636:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40563a:	d217      	bcs.n	40566c <_free_r+0x90>
  40563c:	08db      	lsrs	r3, r3, #3
  40563e:	1c58      	adds	r0, r3, #1
  405640:	109a      	asrs	r2, r3, #2
  405642:	684d      	ldr	r5, [r1, #4]
  405644:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  405648:	60a7      	str	r7, [r4, #8]
  40564a:	2301      	movs	r3, #1
  40564c:	4093      	lsls	r3, r2
  40564e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  405652:	432b      	orrs	r3, r5
  405654:	3a08      	subs	r2, #8
  405656:	60e2      	str	r2, [r4, #12]
  405658:	604b      	str	r3, [r1, #4]
  40565a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40565e:	60fc      	str	r4, [r7, #12]
  405660:	4640      	mov	r0, r8
  405662:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405666:	f7ff ba5b 	b.w	404b20 <__malloc_unlock>
  40566a:	4770      	bx	lr
  40566c:	0a5a      	lsrs	r2, r3, #9
  40566e:	2a04      	cmp	r2, #4
  405670:	d852      	bhi.n	405718 <_free_r+0x13c>
  405672:	099a      	lsrs	r2, r3, #6
  405674:	f102 0739 	add.w	r7, r2, #57	; 0x39
  405678:	00ff      	lsls	r7, r7, #3
  40567a:	f102 0538 	add.w	r5, r2, #56	; 0x38
  40567e:	19c8      	adds	r0, r1, r7
  405680:	59ca      	ldr	r2, [r1, r7]
  405682:	3808      	subs	r0, #8
  405684:	4290      	cmp	r0, r2
  405686:	d04f      	beq.n	405728 <_free_r+0x14c>
  405688:	6851      	ldr	r1, [r2, #4]
  40568a:	f021 0103 	bic.w	r1, r1, #3
  40568e:	428b      	cmp	r3, r1
  405690:	d232      	bcs.n	4056f8 <_free_r+0x11c>
  405692:	6892      	ldr	r2, [r2, #8]
  405694:	4290      	cmp	r0, r2
  405696:	d1f7      	bne.n	405688 <_free_r+0xac>
  405698:	68c3      	ldr	r3, [r0, #12]
  40569a:	60a0      	str	r0, [r4, #8]
  40569c:	60e3      	str	r3, [r4, #12]
  40569e:	609c      	str	r4, [r3, #8]
  4056a0:	60c4      	str	r4, [r0, #12]
  4056a2:	4640      	mov	r0, r8
  4056a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4056a8:	f7ff ba3a 	b.w	404b20 <__malloc_unlock>
  4056ac:	6895      	ldr	r5, [r2, #8]
  4056ae:	4f3b      	ldr	r7, [pc, #236]	; (40579c <_free_r+0x1c0>)
  4056b0:	42bd      	cmp	r5, r7
  4056b2:	4403      	add	r3, r0
  4056b4:	d040      	beq.n	405738 <_free_r+0x15c>
  4056b6:	68d0      	ldr	r0, [r2, #12]
  4056b8:	60e8      	str	r0, [r5, #12]
  4056ba:	f043 0201 	orr.w	r2, r3, #1
  4056be:	6085      	str	r5, [r0, #8]
  4056c0:	6062      	str	r2, [r4, #4]
  4056c2:	50e3      	str	r3, [r4, r3]
  4056c4:	e7b7      	b.n	405636 <_free_r+0x5a>
  4056c6:	07ff      	lsls	r7, r7, #31
  4056c8:	4403      	add	r3, r0
  4056ca:	d407      	bmi.n	4056dc <_free_r+0x100>
  4056cc:	f855 2c08 	ldr.w	r2, [r5, #-8]
  4056d0:	1aa4      	subs	r4, r4, r2
  4056d2:	4413      	add	r3, r2
  4056d4:	68a0      	ldr	r0, [r4, #8]
  4056d6:	68e2      	ldr	r2, [r4, #12]
  4056d8:	60c2      	str	r2, [r0, #12]
  4056da:	6090      	str	r0, [r2, #8]
  4056dc:	4a30      	ldr	r2, [pc, #192]	; (4057a0 <_free_r+0x1c4>)
  4056de:	6812      	ldr	r2, [r2, #0]
  4056e0:	f043 0001 	orr.w	r0, r3, #1
  4056e4:	4293      	cmp	r3, r2
  4056e6:	6060      	str	r0, [r4, #4]
  4056e8:	608c      	str	r4, [r1, #8]
  4056ea:	d3b9      	bcc.n	405660 <_free_r+0x84>
  4056ec:	4b2d      	ldr	r3, [pc, #180]	; (4057a4 <_free_r+0x1c8>)
  4056ee:	4640      	mov	r0, r8
  4056f0:	6819      	ldr	r1, [r3, #0]
  4056f2:	f7ff ff23 	bl	40553c <_malloc_trim_r>
  4056f6:	e7b3      	b.n	405660 <_free_r+0x84>
  4056f8:	4610      	mov	r0, r2
  4056fa:	e7cd      	b.n	405698 <_free_r+0xbc>
  4056fc:	1811      	adds	r1, r2, r0
  4056fe:	6849      	ldr	r1, [r1, #4]
  405700:	07c9      	lsls	r1, r1, #31
  405702:	d444      	bmi.n	40578e <_free_r+0x1b2>
  405704:	6891      	ldr	r1, [r2, #8]
  405706:	68d2      	ldr	r2, [r2, #12]
  405708:	60ca      	str	r2, [r1, #12]
  40570a:	4403      	add	r3, r0
  40570c:	f043 0001 	orr.w	r0, r3, #1
  405710:	6091      	str	r1, [r2, #8]
  405712:	6060      	str	r0, [r4, #4]
  405714:	50e3      	str	r3, [r4, r3]
  405716:	e7a3      	b.n	405660 <_free_r+0x84>
  405718:	2a14      	cmp	r2, #20
  40571a:	d816      	bhi.n	40574a <_free_r+0x16e>
  40571c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405720:	00ff      	lsls	r7, r7, #3
  405722:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  405726:	e7aa      	b.n	40567e <_free_r+0xa2>
  405728:	10aa      	asrs	r2, r5, #2
  40572a:	2301      	movs	r3, #1
  40572c:	684d      	ldr	r5, [r1, #4]
  40572e:	4093      	lsls	r3, r2
  405730:	432b      	orrs	r3, r5
  405732:	604b      	str	r3, [r1, #4]
  405734:	4603      	mov	r3, r0
  405736:	e7b0      	b.n	40569a <_free_r+0xbe>
  405738:	f043 0201 	orr.w	r2, r3, #1
  40573c:	614c      	str	r4, [r1, #20]
  40573e:	610c      	str	r4, [r1, #16]
  405740:	60e5      	str	r5, [r4, #12]
  405742:	60a5      	str	r5, [r4, #8]
  405744:	6062      	str	r2, [r4, #4]
  405746:	50e3      	str	r3, [r4, r3]
  405748:	e78a      	b.n	405660 <_free_r+0x84>
  40574a:	2a54      	cmp	r2, #84	; 0x54
  40574c:	d806      	bhi.n	40575c <_free_r+0x180>
  40574e:	0b1a      	lsrs	r2, r3, #12
  405750:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405754:	00ff      	lsls	r7, r7, #3
  405756:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40575a:	e790      	b.n	40567e <_free_r+0xa2>
  40575c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405760:	d806      	bhi.n	405770 <_free_r+0x194>
  405762:	0bda      	lsrs	r2, r3, #15
  405764:	f102 0778 	add.w	r7, r2, #120	; 0x78
  405768:	00ff      	lsls	r7, r7, #3
  40576a:	f102 0577 	add.w	r5, r2, #119	; 0x77
  40576e:	e786      	b.n	40567e <_free_r+0xa2>
  405770:	f240 5054 	movw	r0, #1364	; 0x554
  405774:	4282      	cmp	r2, r0
  405776:	d806      	bhi.n	405786 <_free_r+0x1aa>
  405778:	0c9a      	lsrs	r2, r3, #18
  40577a:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40577e:	00ff      	lsls	r7, r7, #3
  405780:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  405784:	e77b      	b.n	40567e <_free_r+0xa2>
  405786:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  40578a:	257e      	movs	r5, #126	; 0x7e
  40578c:	e777      	b.n	40567e <_free_r+0xa2>
  40578e:	f043 0101 	orr.w	r1, r3, #1
  405792:	6061      	str	r1, [r4, #4]
  405794:	6013      	str	r3, [r2, #0]
  405796:	e763      	b.n	405660 <_free_r+0x84>
  405798:	20000444 	.word	0x20000444
  40579c:	2000044c 	.word	0x2000044c
  4057a0:	20000850 	.word	0x20000850
  4057a4:	20000abc 	.word	0x20000abc

004057a8 <__ascii_mbtowc>:
  4057a8:	b082      	sub	sp, #8
  4057aa:	b149      	cbz	r1, 4057c0 <__ascii_mbtowc+0x18>
  4057ac:	b15a      	cbz	r2, 4057c6 <__ascii_mbtowc+0x1e>
  4057ae:	b16b      	cbz	r3, 4057cc <__ascii_mbtowc+0x24>
  4057b0:	7813      	ldrb	r3, [r2, #0]
  4057b2:	600b      	str	r3, [r1, #0]
  4057b4:	7812      	ldrb	r2, [r2, #0]
  4057b6:	1c10      	adds	r0, r2, #0
  4057b8:	bf18      	it	ne
  4057ba:	2001      	movne	r0, #1
  4057bc:	b002      	add	sp, #8
  4057be:	4770      	bx	lr
  4057c0:	a901      	add	r1, sp, #4
  4057c2:	2a00      	cmp	r2, #0
  4057c4:	d1f3      	bne.n	4057ae <__ascii_mbtowc+0x6>
  4057c6:	4610      	mov	r0, r2
  4057c8:	b002      	add	sp, #8
  4057ca:	4770      	bx	lr
  4057cc:	f06f 0001 	mvn.w	r0, #1
  4057d0:	e7f4      	b.n	4057bc <__ascii_mbtowc+0x14>
  4057d2:	bf00      	nop

004057d4 <memmove>:
  4057d4:	4288      	cmp	r0, r1
  4057d6:	b5f0      	push	{r4, r5, r6, r7, lr}
  4057d8:	d90d      	bls.n	4057f6 <memmove+0x22>
  4057da:	188b      	adds	r3, r1, r2
  4057dc:	4298      	cmp	r0, r3
  4057de:	d20a      	bcs.n	4057f6 <memmove+0x22>
  4057e0:	1884      	adds	r4, r0, r2
  4057e2:	2a00      	cmp	r2, #0
  4057e4:	d051      	beq.n	40588a <memmove+0xb6>
  4057e6:	4622      	mov	r2, r4
  4057e8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  4057ec:	f802 4d01 	strb.w	r4, [r2, #-1]!
  4057f0:	4299      	cmp	r1, r3
  4057f2:	d1f9      	bne.n	4057e8 <memmove+0x14>
  4057f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4057f6:	2a0f      	cmp	r2, #15
  4057f8:	d948      	bls.n	40588c <memmove+0xb8>
  4057fa:	ea41 0300 	orr.w	r3, r1, r0
  4057fe:	079b      	lsls	r3, r3, #30
  405800:	d146      	bne.n	405890 <memmove+0xbc>
  405802:	f100 0410 	add.w	r4, r0, #16
  405806:	f101 0310 	add.w	r3, r1, #16
  40580a:	4615      	mov	r5, r2
  40580c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405810:	f844 6c10 	str.w	r6, [r4, #-16]
  405814:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405818:	f844 6c0c 	str.w	r6, [r4, #-12]
  40581c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405820:	f844 6c08 	str.w	r6, [r4, #-8]
  405824:	3d10      	subs	r5, #16
  405826:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40582a:	f844 6c04 	str.w	r6, [r4, #-4]
  40582e:	2d0f      	cmp	r5, #15
  405830:	f103 0310 	add.w	r3, r3, #16
  405834:	f104 0410 	add.w	r4, r4, #16
  405838:	d8e8      	bhi.n	40580c <memmove+0x38>
  40583a:	f1a2 0310 	sub.w	r3, r2, #16
  40583e:	f023 030f 	bic.w	r3, r3, #15
  405842:	f002 0e0f 	and.w	lr, r2, #15
  405846:	3310      	adds	r3, #16
  405848:	f1be 0f03 	cmp.w	lr, #3
  40584c:	4419      	add	r1, r3
  40584e:	4403      	add	r3, r0
  405850:	d921      	bls.n	405896 <memmove+0xc2>
  405852:	1f1e      	subs	r6, r3, #4
  405854:	460d      	mov	r5, r1
  405856:	4674      	mov	r4, lr
  405858:	3c04      	subs	r4, #4
  40585a:	f855 7b04 	ldr.w	r7, [r5], #4
  40585e:	f846 7f04 	str.w	r7, [r6, #4]!
  405862:	2c03      	cmp	r4, #3
  405864:	d8f8      	bhi.n	405858 <memmove+0x84>
  405866:	f1ae 0404 	sub.w	r4, lr, #4
  40586a:	f024 0403 	bic.w	r4, r4, #3
  40586e:	3404      	adds	r4, #4
  405870:	4421      	add	r1, r4
  405872:	4423      	add	r3, r4
  405874:	f002 0203 	and.w	r2, r2, #3
  405878:	b162      	cbz	r2, 405894 <memmove+0xc0>
  40587a:	3b01      	subs	r3, #1
  40587c:	440a      	add	r2, r1
  40587e:	f811 4b01 	ldrb.w	r4, [r1], #1
  405882:	f803 4f01 	strb.w	r4, [r3, #1]!
  405886:	428a      	cmp	r2, r1
  405888:	d1f9      	bne.n	40587e <memmove+0xaa>
  40588a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40588c:	4603      	mov	r3, r0
  40588e:	e7f3      	b.n	405878 <memmove+0xa4>
  405890:	4603      	mov	r3, r0
  405892:	e7f2      	b.n	40587a <memmove+0xa6>
  405894:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405896:	4672      	mov	r2, lr
  405898:	e7ee      	b.n	405878 <memmove+0xa4>
  40589a:	bf00      	nop

0040589c <_realloc_r>:
  40589c:	2900      	cmp	r1, #0
  40589e:	f000 8095 	beq.w	4059cc <_realloc_r+0x130>
  4058a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4058a6:	460d      	mov	r5, r1
  4058a8:	4616      	mov	r6, r2
  4058aa:	b083      	sub	sp, #12
  4058ac:	4680      	mov	r8, r0
  4058ae:	f106 070b 	add.w	r7, r6, #11
  4058b2:	f7ff f92f 	bl	404b14 <__malloc_lock>
  4058b6:	f855 ec04 	ldr.w	lr, [r5, #-4]
  4058ba:	2f16      	cmp	r7, #22
  4058bc:	f02e 0403 	bic.w	r4, lr, #3
  4058c0:	f1a5 0908 	sub.w	r9, r5, #8
  4058c4:	d83c      	bhi.n	405940 <_realloc_r+0xa4>
  4058c6:	2210      	movs	r2, #16
  4058c8:	4617      	mov	r7, r2
  4058ca:	42be      	cmp	r6, r7
  4058cc:	d83d      	bhi.n	40594a <_realloc_r+0xae>
  4058ce:	4294      	cmp	r4, r2
  4058d0:	da43      	bge.n	40595a <_realloc_r+0xbe>
  4058d2:	4bc4      	ldr	r3, [pc, #784]	; (405be4 <_realloc_r+0x348>)
  4058d4:	6899      	ldr	r1, [r3, #8]
  4058d6:	eb09 0004 	add.w	r0, r9, r4
  4058da:	4288      	cmp	r0, r1
  4058dc:	f000 80b4 	beq.w	405a48 <_realloc_r+0x1ac>
  4058e0:	6843      	ldr	r3, [r0, #4]
  4058e2:	f023 0101 	bic.w	r1, r3, #1
  4058e6:	4401      	add	r1, r0
  4058e8:	6849      	ldr	r1, [r1, #4]
  4058ea:	07c9      	lsls	r1, r1, #31
  4058ec:	d54c      	bpl.n	405988 <_realloc_r+0xec>
  4058ee:	f01e 0f01 	tst.w	lr, #1
  4058f2:	f000 809b 	beq.w	405a2c <_realloc_r+0x190>
  4058f6:	4631      	mov	r1, r6
  4058f8:	4640      	mov	r0, r8
  4058fa:	f7fe fd3f 	bl	40437c <_malloc_r>
  4058fe:	4606      	mov	r6, r0
  405900:	2800      	cmp	r0, #0
  405902:	d03a      	beq.n	40597a <_realloc_r+0xde>
  405904:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405908:	f023 0301 	bic.w	r3, r3, #1
  40590c:	444b      	add	r3, r9
  40590e:	f1a0 0208 	sub.w	r2, r0, #8
  405912:	429a      	cmp	r2, r3
  405914:	f000 8121 	beq.w	405b5a <_realloc_r+0x2be>
  405918:	1f22      	subs	r2, r4, #4
  40591a:	2a24      	cmp	r2, #36	; 0x24
  40591c:	f200 8107 	bhi.w	405b2e <_realloc_r+0x292>
  405920:	2a13      	cmp	r2, #19
  405922:	f200 80db 	bhi.w	405adc <_realloc_r+0x240>
  405926:	4603      	mov	r3, r0
  405928:	462a      	mov	r2, r5
  40592a:	6811      	ldr	r1, [r2, #0]
  40592c:	6019      	str	r1, [r3, #0]
  40592e:	6851      	ldr	r1, [r2, #4]
  405930:	6059      	str	r1, [r3, #4]
  405932:	6892      	ldr	r2, [r2, #8]
  405934:	609a      	str	r2, [r3, #8]
  405936:	4629      	mov	r1, r5
  405938:	4640      	mov	r0, r8
  40593a:	f7ff fe4f 	bl	4055dc <_free_r>
  40593e:	e01c      	b.n	40597a <_realloc_r+0xde>
  405940:	f027 0707 	bic.w	r7, r7, #7
  405944:	2f00      	cmp	r7, #0
  405946:	463a      	mov	r2, r7
  405948:	dabf      	bge.n	4058ca <_realloc_r+0x2e>
  40594a:	2600      	movs	r6, #0
  40594c:	230c      	movs	r3, #12
  40594e:	4630      	mov	r0, r6
  405950:	f8c8 3000 	str.w	r3, [r8]
  405954:	b003      	add	sp, #12
  405956:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40595a:	462e      	mov	r6, r5
  40595c:	1be3      	subs	r3, r4, r7
  40595e:	2b0f      	cmp	r3, #15
  405960:	d81e      	bhi.n	4059a0 <_realloc_r+0x104>
  405962:	f8d9 3004 	ldr.w	r3, [r9, #4]
  405966:	f003 0301 	and.w	r3, r3, #1
  40596a:	4323      	orrs	r3, r4
  40596c:	444c      	add	r4, r9
  40596e:	f8c9 3004 	str.w	r3, [r9, #4]
  405972:	6863      	ldr	r3, [r4, #4]
  405974:	f043 0301 	orr.w	r3, r3, #1
  405978:	6063      	str	r3, [r4, #4]
  40597a:	4640      	mov	r0, r8
  40597c:	f7ff f8d0 	bl	404b20 <__malloc_unlock>
  405980:	4630      	mov	r0, r6
  405982:	b003      	add	sp, #12
  405984:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405988:	f023 0303 	bic.w	r3, r3, #3
  40598c:	18e1      	adds	r1, r4, r3
  40598e:	4291      	cmp	r1, r2
  405990:	db1f      	blt.n	4059d2 <_realloc_r+0x136>
  405992:	68c3      	ldr	r3, [r0, #12]
  405994:	6882      	ldr	r2, [r0, #8]
  405996:	462e      	mov	r6, r5
  405998:	60d3      	str	r3, [r2, #12]
  40599a:	460c      	mov	r4, r1
  40599c:	609a      	str	r2, [r3, #8]
  40599e:	e7dd      	b.n	40595c <_realloc_r+0xc0>
  4059a0:	f8d9 2004 	ldr.w	r2, [r9, #4]
  4059a4:	eb09 0107 	add.w	r1, r9, r7
  4059a8:	f002 0201 	and.w	r2, r2, #1
  4059ac:	444c      	add	r4, r9
  4059ae:	f043 0301 	orr.w	r3, r3, #1
  4059b2:	4317      	orrs	r7, r2
  4059b4:	f8c9 7004 	str.w	r7, [r9, #4]
  4059b8:	604b      	str	r3, [r1, #4]
  4059ba:	6863      	ldr	r3, [r4, #4]
  4059bc:	f043 0301 	orr.w	r3, r3, #1
  4059c0:	3108      	adds	r1, #8
  4059c2:	6063      	str	r3, [r4, #4]
  4059c4:	4640      	mov	r0, r8
  4059c6:	f7ff fe09 	bl	4055dc <_free_r>
  4059ca:	e7d6      	b.n	40597a <_realloc_r+0xde>
  4059cc:	4611      	mov	r1, r2
  4059ce:	f7fe bcd5 	b.w	40437c <_malloc_r>
  4059d2:	f01e 0f01 	tst.w	lr, #1
  4059d6:	d18e      	bne.n	4058f6 <_realloc_r+0x5a>
  4059d8:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4059dc:	eba9 0a01 	sub.w	sl, r9, r1
  4059e0:	f8da 1004 	ldr.w	r1, [sl, #4]
  4059e4:	f021 0103 	bic.w	r1, r1, #3
  4059e8:	440b      	add	r3, r1
  4059ea:	4423      	add	r3, r4
  4059ec:	4293      	cmp	r3, r2
  4059ee:	db25      	blt.n	405a3c <_realloc_r+0x1a0>
  4059f0:	68c2      	ldr	r2, [r0, #12]
  4059f2:	6881      	ldr	r1, [r0, #8]
  4059f4:	4656      	mov	r6, sl
  4059f6:	60ca      	str	r2, [r1, #12]
  4059f8:	6091      	str	r1, [r2, #8]
  4059fa:	f8da 100c 	ldr.w	r1, [sl, #12]
  4059fe:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405a02:	1f22      	subs	r2, r4, #4
  405a04:	2a24      	cmp	r2, #36	; 0x24
  405a06:	60c1      	str	r1, [r0, #12]
  405a08:	6088      	str	r0, [r1, #8]
  405a0a:	f200 8094 	bhi.w	405b36 <_realloc_r+0x29a>
  405a0e:	2a13      	cmp	r2, #19
  405a10:	d96f      	bls.n	405af2 <_realloc_r+0x256>
  405a12:	6829      	ldr	r1, [r5, #0]
  405a14:	f8ca 1008 	str.w	r1, [sl, #8]
  405a18:	6869      	ldr	r1, [r5, #4]
  405a1a:	f8ca 100c 	str.w	r1, [sl, #12]
  405a1e:	2a1b      	cmp	r2, #27
  405a20:	f200 80a2 	bhi.w	405b68 <_realloc_r+0x2cc>
  405a24:	3508      	adds	r5, #8
  405a26:	f10a 0210 	add.w	r2, sl, #16
  405a2a:	e063      	b.n	405af4 <_realloc_r+0x258>
  405a2c:	f855 3c08 	ldr.w	r3, [r5, #-8]
  405a30:	eba9 0a03 	sub.w	sl, r9, r3
  405a34:	f8da 1004 	ldr.w	r1, [sl, #4]
  405a38:	f021 0103 	bic.w	r1, r1, #3
  405a3c:	1863      	adds	r3, r4, r1
  405a3e:	4293      	cmp	r3, r2
  405a40:	f6ff af59 	blt.w	4058f6 <_realloc_r+0x5a>
  405a44:	4656      	mov	r6, sl
  405a46:	e7d8      	b.n	4059fa <_realloc_r+0x15e>
  405a48:	6841      	ldr	r1, [r0, #4]
  405a4a:	f021 0b03 	bic.w	fp, r1, #3
  405a4e:	44a3      	add	fp, r4
  405a50:	f107 0010 	add.w	r0, r7, #16
  405a54:	4583      	cmp	fp, r0
  405a56:	da56      	bge.n	405b06 <_realloc_r+0x26a>
  405a58:	f01e 0f01 	tst.w	lr, #1
  405a5c:	f47f af4b 	bne.w	4058f6 <_realloc_r+0x5a>
  405a60:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405a64:	eba9 0a01 	sub.w	sl, r9, r1
  405a68:	f8da 1004 	ldr.w	r1, [sl, #4]
  405a6c:	f021 0103 	bic.w	r1, r1, #3
  405a70:	448b      	add	fp, r1
  405a72:	4558      	cmp	r0, fp
  405a74:	dce2      	bgt.n	405a3c <_realloc_r+0x1a0>
  405a76:	4656      	mov	r6, sl
  405a78:	f8da 100c 	ldr.w	r1, [sl, #12]
  405a7c:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405a80:	1f22      	subs	r2, r4, #4
  405a82:	2a24      	cmp	r2, #36	; 0x24
  405a84:	60c1      	str	r1, [r0, #12]
  405a86:	6088      	str	r0, [r1, #8]
  405a88:	f200 808f 	bhi.w	405baa <_realloc_r+0x30e>
  405a8c:	2a13      	cmp	r2, #19
  405a8e:	f240 808a 	bls.w	405ba6 <_realloc_r+0x30a>
  405a92:	6829      	ldr	r1, [r5, #0]
  405a94:	f8ca 1008 	str.w	r1, [sl, #8]
  405a98:	6869      	ldr	r1, [r5, #4]
  405a9a:	f8ca 100c 	str.w	r1, [sl, #12]
  405a9e:	2a1b      	cmp	r2, #27
  405aa0:	f200 808a 	bhi.w	405bb8 <_realloc_r+0x31c>
  405aa4:	3508      	adds	r5, #8
  405aa6:	f10a 0210 	add.w	r2, sl, #16
  405aaa:	6829      	ldr	r1, [r5, #0]
  405aac:	6011      	str	r1, [r2, #0]
  405aae:	6869      	ldr	r1, [r5, #4]
  405ab0:	6051      	str	r1, [r2, #4]
  405ab2:	68a9      	ldr	r1, [r5, #8]
  405ab4:	6091      	str	r1, [r2, #8]
  405ab6:	eb0a 0107 	add.w	r1, sl, r7
  405aba:	ebab 0207 	sub.w	r2, fp, r7
  405abe:	f042 0201 	orr.w	r2, r2, #1
  405ac2:	6099      	str	r1, [r3, #8]
  405ac4:	604a      	str	r2, [r1, #4]
  405ac6:	f8da 3004 	ldr.w	r3, [sl, #4]
  405aca:	f003 0301 	and.w	r3, r3, #1
  405ace:	431f      	orrs	r7, r3
  405ad0:	4640      	mov	r0, r8
  405ad2:	f8ca 7004 	str.w	r7, [sl, #4]
  405ad6:	f7ff f823 	bl	404b20 <__malloc_unlock>
  405ada:	e751      	b.n	405980 <_realloc_r+0xe4>
  405adc:	682b      	ldr	r3, [r5, #0]
  405ade:	6003      	str	r3, [r0, #0]
  405ae0:	686b      	ldr	r3, [r5, #4]
  405ae2:	6043      	str	r3, [r0, #4]
  405ae4:	2a1b      	cmp	r2, #27
  405ae6:	d82d      	bhi.n	405b44 <_realloc_r+0x2a8>
  405ae8:	f100 0308 	add.w	r3, r0, #8
  405aec:	f105 0208 	add.w	r2, r5, #8
  405af0:	e71b      	b.n	40592a <_realloc_r+0x8e>
  405af2:	4632      	mov	r2, r6
  405af4:	6829      	ldr	r1, [r5, #0]
  405af6:	6011      	str	r1, [r2, #0]
  405af8:	6869      	ldr	r1, [r5, #4]
  405afa:	6051      	str	r1, [r2, #4]
  405afc:	68a9      	ldr	r1, [r5, #8]
  405afe:	6091      	str	r1, [r2, #8]
  405b00:	461c      	mov	r4, r3
  405b02:	46d1      	mov	r9, sl
  405b04:	e72a      	b.n	40595c <_realloc_r+0xc0>
  405b06:	eb09 0107 	add.w	r1, r9, r7
  405b0a:	ebab 0b07 	sub.w	fp, fp, r7
  405b0e:	f04b 0201 	orr.w	r2, fp, #1
  405b12:	6099      	str	r1, [r3, #8]
  405b14:	604a      	str	r2, [r1, #4]
  405b16:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405b1a:	f003 0301 	and.w	r3, r3, #1
  405b1e:	431f      	orrs	r7, r3
  405b20:	4640      	mov	r0, r8
  405b22:	f845 7c04 	str.w	r7, [r5, #-4]
  405b26:	f7fe fffb 	bl	404b20 <__malloc_unlock>
  405b2a:	462e      	mov	r6, r5
  405b2c:	e728      	b.n	405980 <_realloc_r+0xe4>
  405b2e:	4629      	mov	r1, r5
  405b30:	f7ff fe50 	bl	4057d4 <memmove>
  405b34:	e6ff      	b.n	405936 <_realloc_r+0x9a>
  405b36:	4629      	mov	r1, r5
  405b38:	4630      	mov	r0, r6
  405b3a:	461c      	mov	r4, r3
  405b3c:	46d1      	mov	r9, sl
  405b3e:	f7ff fe49 	bl	4057d4 <memmove>
  405b42:	e70b      	b.n	40595c <_realloc_r+0xc0>
  405b44:	68ab      	ldr	r3, [r5, #8]
  405b46:	6083      	str	r3, [r0, #8]
  405b48:	68eb      	ldr	r3, [r5, #12]
  405b4a:	60c3      	str	r3, [r0, #12]
  405b4c:	2a24      	cmp	r2, #36	; 0x24
  405b4e:	d017      	beq.n	405b80 <_realloc_r+0x2e4>
  405b50:	f100 0310 	add.w	r3, r0, #16
  405b54:	f105 0210 	add.w	r2, r5, #16
  405b58:	e6e7      	b.n	40592a <_realloc_r+0x8e>
  405b5a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  405b5e:	f023 0303 	bic.w	r3, r3, #3
  405b62:	441c      	add	r4, r3
  405b64:	462e      	mov	r6, r5
  405b66:	e6f9      	b.n	40595c <_realloc_r+0xc0>
  405b68:	68a9      	ldr	r1, [r5, #8]
  405b6a:	f8ca 1010 	str.w	r1, [sl, #16]
  405b6e:	68e9      	ldr	r1, [r5, #12]
  405b70:	f8ca 1014 	str.w	r1, [sl, #20]
  405b74:	2a24      	cmp	r2, #36	; 0x24
  405b76:	d00c      	beq.n	405b92 <_realloc_r+0x2f6>
  405b78:	3510      	adds	r5, #16
  405b7a:	f10a 0218 	add.w	r2, sl, #24
  405b7e:	e7b9      	b.n	405af4 <_realloc_r+0x258>
  405b80:	692b      	ldr	r3, [r5, #16]
  405b82:	6103      	str	r3, [r0, #16]
  405b84:	696b      	ldr	r3, [r5, #20]
  405b86:	6143      	str	r3, [r0, #20]
  405b88:	f105 0218 	add.w	r2, r5, #24
  405b8c:	f100 0318 	add.w	r3, r0, #24
  405b90:	e6cb      	b.n	40592a <_realloc_r+0x8e>
  405b92:	692a      	ldr	r2, [r5, #16]
  405b94:	f8ca 2018 	str.w	r2, [sl, #24]
  405b98:	696a      	ldr	r2, [r5, #20]
  405b9a:	f8ca 201c 	str.w	r2, [sl, #28]
  405b9e:	3518      	adds	r5, #24
  405ba0:	f10a 0220 	add.w	r2, sl, #32
  405ba4:	e7a6      	b.n	405af4 <_realloc_r+0x258>
  405ba6:	4632      	mov	r2, r6
  405ba8:	e77f      	b.n	405aaa <_realloc_r+0x20e>
  405baa:	4629      	mov	r1, r5
  405bac:	4630      	mov	r0, r6
  405bae:	9301      	str	r3, [sp, #4]
  405bb0:	f7ff fe10 	bl	4057d4 <memmove>
  405bb4:	9b01      	ldr	r3, [sp, #4]
  405bb6:	e77e      	b.n	405ab6 <_realloc_r+0x21a>
  405bb8:	68a9      	ldr	r1, [r5, #8]
  405bba:	f8ca 1010 	str.w	r1, [sl, #16]
  405bbe:	68e9      	ldr	r1, [r5, #12]
  405bc0:	f8ca 1014 	str.w	r1, [sl, #20]
  405bc4:	2a24      	cmp	r2, #36	; 0x24
  405bc6:	d003      	beq.n	405bd0 <_realloc_r+0x334>
  405bc8:	3510      	adds	r5, #16
  405bca:	f10a 0218 	add.w	r2, sl, #24
  405bce:	e76c      	b.n	405aaa <_realloc_r+0x20e>
  405bd0:	692a      	ldr	r2, [r5, #16]
  405bd2:	f8ca 2018 	str.w	r2, [sl, #24]
  405bd6:	696a      	ldr	r2, [r5, #20]
  405bd8:	f8ca 201c 	str.w	r2, [sl, #28]
  405bdc:	3518      	adds	r5, #24
  405bde:	f10a 0220 	add.w	r2, sl, #32
  405be2:	e762      	b.n	405aaa <_realloc_r+0x20e>
  405be4:	20000444 	.word	0x20000444

00405be8 <__ascii_wctomb>:
  405be8:	b121      	cbz	r1, 405bf4 <__ascii_wctomb+0xc>
  405bea:	2aff      	cmp	r2, #255	; 0xff
  405bec:	d804      	bhi.n	405bf8 <__ascii_wctomb+0x10>
  405bee:	700a      	strb	r2, [r1, #0]
  405bf0:	2001      	movs	r0, #1
  405bf2:	4770      	bx	lr
  405bf4:	4608      	mov	r0, r1
  405bf6:	4770      	bx	lr
  405bf8:	238a      	movs	r3, #138	; 0x8a
  405bfa:	6003      	str	r3, [r0, #0]
  405bfc:	f04f 30ff 	mov.w	r0, #4294967295
  405c00:	4770      	bx	lr
  405c02:	bf00      	nop

00405c04 <__aeabi_drsub>:
  405c04:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  405c08:	e002      	b.n	405c10 <__adddf3>
  405c0a:	bf00      	nop

00405c0c <__aeabi_dsub>:
  405c0c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00405c10 <__adddf3>:
  405c10:	b530      	push	{r4, r5, lr}
  405c12:	ea4f 0441 	mov.w	r4, r1, lsl #1
  405c16:	ea4f 0543 	mov.w	r5, r3, lsl #1
  405c1a:	ea94 0f05 	teq	r4, r5
  405c1e:	bf08      	it	eq
  405c20:	ea90 0f02 	teqeq	r0, r2
  405c24:	bf1f      	itttt	ne
  405c26:	ea54 0c00 	orrsne.w	ip, r4, r0
  405c2a:	ea55 0c02 	orrsne.w	ip, r5, r2
  405c2e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  405c32:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405c36:	f000 80e2 	beq.w	405dfe <__adddf3+0x1ee>
  405c3a:	ea4f 5454 	mov.w	r4, r4, lsr #21
  405c3e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  405c42:	bfb8      	it	lt
  405c44:	426d      	neglt	r5, r5
  405c46:	dd0c      	ble.n	405c62 <__adddf3+0x52>
  405c48:	442c      	add	r4, r5
  405c4a:	ea80 0202 	eor.w	r2, r0, r2
  405c4e:	ea81 0303 	eor.w	r3, r1, r3
  405c52:	ea82 0000 	eor.w	r0, r2, r0
  405c56:	ea83 0101 	eor.w	r1, r3, r1
  405c5a:	ea80 0202 	eor.w	r2, r0, r2
  405c5e:	ea81 0303 	eor.w	r3, r1, r3
  405c62:	2d36      	cmp	r5, #54	; 0x36
  405c64:	bf88      	it	hi
  405c66:	bd30      	pophi	{r4, r5, pc}
  405c68:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  405c6c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405c70:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  405c74:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  405c78:	d002      	beq.n	405c80 <__adddf3+0x70>
  405c7a:	4240      	negs	r0, r0
  405c7c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405c80:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  405c84:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405c88:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  405c8c:	d002      	beq.n	405c94 <__adddf3+0x84>
  405c8e:	4252      	negs	r2, r2
  405c90:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  405c94:	ea94 0f05 	teq	r4, r5
  405c98:	f000 80a7 	beq.w	405dea <__adddf3+0x1da>
  405c9c:	f1a4 0401 	sub.w	r4, r4, #1
  405ca0:	f1d5 0e20 	rsbs	lr, r5, #32
  405ca4:	db0d      	blt.n	405cc2 <__adddf3+0xb2>
  405ca6:	fa02 fc0e 	lsl.w	ip, r2, lr
  405caa:	fa22 f205 	lsr.w	r2, r2, r5
  405cae:	1880      	adds	r0, r0, r2
  405cb0:	f141 0100 	adc.w	r1, r1, #0
  405cb4:	fa03 f20e 	lsl.w	r2, r3, lr
  405cb8:	1880      	adds	r0, r0, r2
  405cba:	fa43 f305 	asr.w	r3, r3, r5
  405cbe:	4159      	adcs	r1, r3
  405cc0:	e00e      	b.n	405ce0 <__adddf3+0xd0>
  405cc2:	f1a5 0520 	sub.w	r5, r5, #32
  405cc6:	f10e 0e20 	add.w	lr, lr, #32
  405cca:	2a01      	cmp	r2, #1
  405ccc:	fa03 fc0e 	lsl.w	ip, r3, lr
  405cd0:	bf28      	it	cs
  405cd2:	f04c 0c02 	orrcs.w	ip, ip, #2
  405cd6:	fa43 f305 	asr.w	r3, r3, r5
  405cda:	18c0      	adds	r0, r0, r3
  405cdc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  405ce0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405ce4:	d507      	bpl.n	405cf6 <__adddf3+0xe6>
  405ce6:	f04f 0e00 	mov.w	lr, #0
  405cea:	f1dc 0c00 	rsbs	ip, ip, #0
  405cee:	eb7e 0000 	sbcs.w	r0, lr, r0
  405cf2:	eb6e 0101 	sbc.w	r1, lr, r1
  405cf6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  405cfa:	d31b      	bcc.n	405d34 <__adddf3+0x124>
  405cfc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  405d00:	d30c      	bcc.n	405d1c <__adddf3+0x10c>
  405d02:	0849      	lsrs	r1, r1, #1
  405d04:	ea5f 0030 	movs.w	r0, r0, rrx
  405d08:	ea4f 0c3c 	mov.w	ip, ip, rrx
  405d0c:	f104 0401 	add.w	r4, r4, #1
  405d10:	ea4f 5244 	mov.w	r2, r4, lsl #21
  405d14:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  405d18:	f080 809a 	bcs.w	405e50 <__adddf3+0x240>
  405d1c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  405d20:	bf08      	it	eq
  405d22:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405d26:	f150 0000 	adcs.w	r0, r0, #0
  405d2a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405d2e:	ea41 0105 	orr.w	r1, r1, r5
  405d32:	bd30      	pop	{r4, r5, pc}
  405d34:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  405d38:	4140      	adcs	r0, r0
  405d3a:	eb41 0101 	adc.w	r1, r1, r1
  405d3e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405d42:	f1a4 0401 	sub.w	r4, r4, #1
  405d46:	d1e9      	bne.n	405d1c <__adddf3+0x10c>
  405d48:	f091 0f00 	teq	r1, #0
  405d4c:	bf04      	itt	eq
  405d4e:	4601      	moveq	r1, r0
  405d50:	2000      	moveq	r0, #0
  405d52:	fab1 f381 	clz	r3, r1
  405d56:	bf08      	it	eq
  405d58:	3320      	addeq	r3, #32
  405d5a:	f1a3 030b 	sub.w	r3, r3, #11
  405d5e:	f1b3 0220 	subs.w	r2, r3, #32
  405d62:	da0c      	bge.n	405d7e <__adddf3+0x16e>
  405d64:	320c      	adds	r2, #12
  405d66:	dd08      	ble.n	405d7a <__adddf3+0x16a>
  405d68:	f102 0c14 	add.w	ip, r2, #20
  405d6c:	f1c2 020c 	rsb	r2, r2, #12
  405d70:	fa01 f00c 	lsl.w	r0, r1, ip
  405d74:	fa21 f102 	lsr.w	r1, r1, r2
  405d78:	e00c      	b.n	405d94 <__adddf3+0x184>
  405d7a:	f102 0214 	add.w	r2, r2, #20
  405d7e:	bfd8      	it	le
  405d80:	f1c2 0c20 	rsble	ip, r2, #32
  405d84:	fa01 f102 	lsl.w	r1, r1, r2
  405d88:	fa20 fc0c 	lsr.w	ip, r0, ip
  405d8c:	bfdc      	itt	le
  405d8e:	ea41 010c 	orrle.w	r1, r1, ip
  405d92:	4090      	lslle	r0, r2
  405d94:	1ae4      	subs	r4, r4, r3
  405d96:	bfa2      	ittt	ge
  405d98:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  405d9c:	4329      	orrge	r1, r5
  405d9e:	bd30      	popge	{r4, r5, pc}
  405da0:	ea6f 0404 	mvn.w	r4, r4
  405da4:	3c1f      	subs	r4, #31
  405da6:	da1c      	bge.n	405de2 <__adddf3+0x1d2>
  405da8:	340c      	adds	r4, #12
  405daa:	dc0e      	bgt.n	405dca <__adddf3+0x1ba>
  405dac:	f104 0414 	add.w	r4, r4, #20
  405db0:	f1c4 0220 	rsb	r2, r4, #32
  405db4:	fa20 f004 	lsr.w	r0, r0, r4
  405db8:	fa01 f302 	lsl.w	r3, r1, r2
  405dbc:	ea40 0003 	orr.w	r0, r0, r3
  405dc0:	fa21 f304 	lsr.w	r3, r1, r4
  405dc4:	ea45 0103 	orr.w	r1, r5, r3
  405dc8:	bd30      	pop	{r4, r5, pc}
  405dca:	f1c4 040c 	rsb	r4, r4, #12
  405dce:	f1c4 0220 	rsb	r2, r4, #32
  405dd2:	fa20 f002 	lsr.w	r0, r0, r2
  405dd6:	fa01 f304 	lsl.w	r3, r1, r4
  405dda:	ea40 0003 	orr.w	r0, r0, r3
  405dde:	4629      	mov	r1, r5
  405de0:	bd30      	pop	{r4, r5, pc}
  405de2:	fa21 f004 	lsr.w	r0, r1, r4
  405de6:	4629      	mov	r1, r5
  405de8:	bd30      	pop	{r4, r5, pc}
  405dea:	f094 0f00 	teq	r4, #0
  405dee:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  405df2:	bf06      	itte	eq
  405df4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  405df8:	3401      	addeq	r4, #1
  405dfa:	3d01      	subne	r5, #1
  405dfc:	e74e      	b.n	405c9c <__adddf3+0x8c>
  405dfe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405e02:	bf18      	it	ne
  405e04:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405e08:	d029      	beq.n	405e5e <__adddf3+0x24e>
  405e0a:	ea94 0f05 	teq	r4, r5
  405e0e:	bf08      	it	eq
  405e10:	ea90 0f02 	teqeq	r0, r2
  405e14:	d005      	beq.n	405e22 <__adddf3+0x212>
  405e16:	ea54 0c00 	orrs.w	ip, r4, r0
  405e1a:	bf04      	itt	eq
  405e1c:	4619      	moveq	r1, r3
  405e1e:	4610      	moveq	r0, r2
  405e20:	bd30      	pop	{r4, r5, pc}
  405e22:	ea91 0f03 	teq	r1, r3
  405e26:	bf1e      	ittt	ne
  405e28:	2100      	movne	r1, #0
  405e2a:	2000      	movne	r0, #0
  405e2c:	bd30      	popne	{r4, r5, pc}
  405e2e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  405e32:	d105      	bne.n	405e40 <__adddf3+0x230>
  405e34:	0040      	lsls	r0, r0, #1
  405e36:	4149      	adcs	r1, r1
  405e38:	bf28      	it	cs
  405e3a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  405e3e:	bd30      	pop	{r4, r5, pc}
  405e40:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  405e44:	bf3c      	itt	cc
  405e46:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  405e4a:	bd30      	popcc	{r4, r5, pc}
  405e4c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405e50:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  405e54:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405e58:	f04f 0000 	mov.w	r0, #0
  405e5c:	bd30      	pop	{r4, r5, pc}
  405e5e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405e62:	bf1a      	itte	ne
  405e64:	4619      	movne	r1, r3
  405e66:	4610      	movne	r0, r2
  405e68:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  405e6c:	bf1c      	itt	ne
  405e6e:	460b      	movne	r3, r1
  405e70:	4602      	movne	r2, r0
  405e72:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405e76:	bf06      	itte	eq
  405e78:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  405e7c:	ea91 0f03 	teqeq	r1, r3
  405e80:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  405e84:	bd30      	pop	{r4, r5, pc}
  405e86:	bf00      	nop

00405e88 <__aeabi_ui2d>:
  405e88:	f090 0f00 	teq	r0, #0
  405e8c:	bf04      	itt	eq
  405e8e:	2100      	moveq	r1, #0
  405e90:	4770      	bxeq	lr
  405e92:	b530      	push	{r4, r5, lr}
  405e94:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405e98:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405e9c:	f04f 0500 	mov.w	r5, #0
  405ea0:	f04f 0100 	mov.w	r1, #0
  405ea4:	e750      	b.n	405d48 <__adddf3+0x138>
  405ea6:	bf00      	nop

00405ea8 <__aeabi_i2d>:
  405ea8:	f090 0f00 	teq	r0, #0
  405eac:	bf04      	itt	eq
  405eae:	2100      	moveq	r1, #0
  405eb0:	4770      	bxeq	lr
  405eb2:	b530      	push	{r4, r5, lr}
  405eb4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405eb8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405ebc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  405ec0:	bf48      	it	mi
  405ec2:	4240      	negmi	r0, r0
  405ec4:	f04f 0100 	mov.w	r1, #0
  405ec8:	e73e      	b.n	405d48 <__adddf3+0x138>
  405eca:	bf00      	nop

00405ecc <__aeabi_f2d>:
  405ecc:	0042      	lsls	r2, r0, #1
  405ece:	ea4f 01e2 	mov.w	r1, r2, asr #3
  405ed2:	ea4f 0131 	mov.w	r1, r1, rrx
  405ed6:	ea4f 7002 	mov.w	r0, r2, lsl #28
  405eda:	bf1f      	itttt	ne
  405edc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  405ee0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405ee4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  405ee8:	4770      	bxne	lr
  405eea:	f092 0f00 	teq	r2, #0
  405eee:	bf14      	ite	ne
  405ef0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405ef4:	4770      	bxeq	lr
  405ef6:	b530      	push	{r4, r5, lr}
  405ef8:	f44f 7460 	mov.w	r4, #896	; 0x380
  405efc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405f00:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405f04:	e720      	b.n	405d48 <__adddf3+0x138>
  405f06:	bf00      	nop

00405f08 <__aeabi_ul2d>:
  405f08:	ea50 0201 	orrs.w	r2, r0, r1
  405f0c:	bf08      	it	eq
  405f0e:	4770      	bxeq	lr
  405f10:	b530      	push	{r4, r5, lr}
  405f12:	f04f 0500 	mov.w	r5, #0
  405f16:	e00a      	b.n	405f2e <__aeabi_l2d+0x16>

00405f18 <__aeabi_l2d>:
  405f18:	ea50 0201 	orrs.w	r2, r0, r1
  405f1c:	bf08      	it	eq
  405f1e:	4770      	bxeq	lr
  405f20:	b530      	push	{r4, r5, lr}
  405f22:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  405f26:	d502      	bpl.n	405f2e <__aeabi_l2d+0x16>
  405f28:	4240      	negs	r0, r0
  405f2a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405f2e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405f32:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405f36:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  405f3a:	f43f aedc 	beq.w	405cf6 <__adddf3+0xe6>
  405f3e:	f04f 0203 	mov.w	r2, #3
  405f42:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405f46:	bf18      	it	ne
  405f48:	3203      	addne	r2, #3
  405f4a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405f4e:	bf18      	it	ne
  405f50:	3203      	addne	r2, #3
  405f52:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  405f56:	f1c2 0320 	rsb	r3, r2, #32
  405f5a:	fa00 fc03 	lsl.w	ip, r0, r3
  405f5e:	fa20 f002 	lsr.w	r0, r0, r2
  405f62:	fa01 fe03 	lsl.w	lr, r1, r3
  405f66:	ea40 000e 	orr.w	r0, r0, lr
  405f6a:	fa21 f102 	lsr.w	r1, r1, r2
  405f6e:	4414      	add	r4, r2
  405f70:	e6c1      	b.n	405cf6 <__adddf3+0xe6>
  405f72:	bf00      	nop

00405f74 <__aeabi_dmul>:
  405f74:	b570      	push	{r4, r5, r6, lr}
  405f76:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405f7a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405f7e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405f82:	bf1d      	ittte	ne
  405f84:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405f88:	ea94 0f0c 	teqne	r4, ip
  405f8c:	ea95 0f0c 	teqne	r5, ip
  405f90:	f000 f8de 	bleq	406150 <__aeabi_dmul+0x1dc>
  405f94:	442c      	add	r4, r5
  405f96:	ea81 0603 	eor.w	r6, r1, r3
  405f9a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  405f9e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  405fa2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  405fa6:	bf18      	it	ne
  405fa8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  405fac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405fb0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  405fb4:	d038      	beq.n	406028 <__aeabi_dmul+0xb4>
  405fb6:	fba0 ce02 	umull	ip, lr, r0, r2
  405fba:	f04f 0500 	mov.w	r5, #0
  405fbe:	fbe1 e502 	umlal	lr, r5, r1, r2
  405fc2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  405fc6:	fbe0 e503 	umlal	lr, r5, r0, r3
  405fca:	f04f 0600 	mov.w	r6, #0
  405fce:	fbe1 5603 	umlal	r5, r6, r1, r3
  405fd2:	f09c 0f00 	teq	ip, #0
  405fd6:	bf18      	it	ne
  405fd8:	f04e 0e01 	orrne.w	lr, lr, #1
  405fdc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  405fe0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  405fe4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  405fe8:	d204      	bcs.n	405ff4 <__aeabi_dmul+0x80>
  405fea:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  405fee:	416d      	adcs	r5, r5
  405ff0:	eb46 0606 	adc.w	r6, r6, r6
  405ff4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  405ff8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  405ffc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  406000:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  406004:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  406008:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  40600c:	bf88      	it	hi
  40600e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  406012:	d81e      	bhi.n	406052 <__aeabi_dmul+0xde>
  406014:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  406018:	bf08      	it	eq
  40601a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  40601e:	f150 0000 	adcs.w	r0, r0, #0
  406022:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  406026:	bd70      	pop	{r4, r5, r6, pc}
  406028:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  40602c:	ea46 0101 	orr.w	r1, r6, r1
  406030:	ea40 0002 	orr.w	r0, r0, r2
  406034:	ea81 0103 	eor.w	r1, r1, r3
  406038:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  40603c:	bfc2      	ittt	gt
  40603e:	ebd4 050c 	rsbsgt	r5, r4, ip
  406042:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  406046:	bd70      	popgt	{r4, r5, r6, pc}
  406048:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  40604c:	f04f 0e00 	mov.w	lr, #0
  406050:	3c01      	subs	r4, #1
  406052:	f300 80ab 	bgt.w	4061ac <__aeabi_dmul+0x238>
  406056:	f114 0f36 	cmn.w	r4, #54	; 0x36
  40605a:	bfde      	ittt	le
  40605c:	2000      	movle	r0, #0
  40605e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  406062:	bd70      	pople	{r4, r5, r6, pc}
  406064:	f1c4 0400 	rsb	r4, r4, #0
  406068:	3c20      	subs	r4, #32
  40606a:	da35      	bge.n	4060d8 <__aeabi_dmul+0x164>
  40606c:	340c      	adds	r4, #12
  40606e:	dc1b      	bgt.n	4060a8 <__aeabi_dmul+0x134>
  406070:	f104 0414 	add.w	r4, r4, #20
  406074:	f1c4 0520 	rsb	r5, r4, #32
  406078:	fa00 f305 	lsl.w	r3, r0, r5
  40607c:	fa20 f004 	lsr.w	r0, r0, r4
  406080:	fa01 f205 	lsl.w	r2, r1, r5
  406084:	ea40 0002 	orr.w	r0, r0, r2
  406088:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  40608c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  406090:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  406094:	fa21 f604 	lsr.w	r6, r1, r4
  406098:	eb42 0106 	adc.w	r1, r2, r6
  40609c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4060a0:	bf08      	it	eq
  4060a2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4060a6:	bd70      	pop	{r4, r5, r6, pc}
  4060a8:	f1c4 040c 	rsb	r4, r4, #12
  4060ac:	f1c4 0520 	rsb	r5, r4, #32
  4060b0:	fa00 f304 	lsl.w	r3, r0, r4
  4060b4:	fa20 f005 	lsr.w	r0, r0, r5
  4060b8:	fa01 f204 	lsl.w	r2, r1, r4
  4060bc:	ea40 0002 	orr.w	r0, r0, r2
  4060c0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4060c4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  4060c8:	f141 0100 	adc.w	r1, r1, #0
  4060cc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4060d0:	bf08      	it	eq
  4060d2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4060d6:	bd70      	pop	{r4, r5, r6, pc}
  4060d8:	f1c4 0520 	rsb	r5, r4, #32
  4060dc:	fa00 f205 	lsl.w	r2, r0, r5
  4060e0:	ea4e 0e02 	orr.w	lr, lr, r2
  4060e4:	fa20 f304 	lsr.w	r3, r0, r4
  4060e8:	fa01 f205 	lsl.w	r2, r1, r5
  4060ec:	ea43 0302 	orr.w	r3, r3, r2
  4060f0:	fa21 f004 	lsr.w	r0, r1, r4
  4060f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4060f8:	fa21 f204 	lsr.w	r2, r1, r4
  4060fc:	ea20 0002 	bic.w	r0, r0, r2
  406100:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  406104:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  406108:	bf08      	it	eq
  40610a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40610e:	bd70      	pop	{r4, r5, r6, pc}
  406110:	f094 0f00 	teq	r4, #0
  406114:	d10f      	bne.n	406136 <__aeabi_dmul+0x1c2>
  406116:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  40611a:	0040      	lsls	r0, r0, #1
  40611c:	eb41 0101 	adc.w	r1, r1, r1
  406120:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  406124:	bf08      	it	eq
  406126:	3c01      	subeq	r4, #1
  406128:	d0f7      	beq.n	40611a <__aeabi_dmul+0x1a6>
  40612a:	ea41 0106 	orr.w	r1, r1, r6
  40612e:	f095 0f00 	teq	r5, #0
  406132:	bf18      	it	ne
  406134:	4770      	bxne	lr
  406136:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  40613a:	0052      	lsls	r2, r2, #1
  40613c:	eb43 0303 	adc.w	r3, r3, r3
  406140:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  406144:	bf08      	it	eq
  406146:	3d01      	subeq	r5, #1
  406148:	d0f7      	beq.n	40613a <__aeabi_dmul+0x1c6>
  40614a:	ea43 0306 	orr.w	r3, r3, r6
  40614e:	4770      	bx	lr
  406150:	ea94 0f0c 	teq	r4, ip
  406154:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  406158:	bf18      	it	ne
  40615a:	ea95 0f0c 	teqne	r5, ip
  40615e:	d00c      	beq.n	40617a <__aeabi_dmul+0x206>
  406160:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  406164:	bf18      	it	ne
  406166:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40616a:	d1d1      	bne.n	406110 <__aeabi_dmul+0x19c>
  40616c:	ea81 0103 	eor.w	r1, r1, r3
  406170:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  406174:	f04f 0000 	mov.w	r0, #0
  406178:	bd70      	pop	{r4, r5, r6, pc}
  40617a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40617e:	bf06      	itte	eq
  406180:	4610      	moveq	r0, r2
  406182:	4619      	moveq	r1, r3
  406184:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  406188:	d019      	beq.n	4061be <__aeabi_dmul+0x24a>
  40618a:	ea94 0f0c 	teq	r4, ip
  40618e:	d102      	bne.n	406196 <__aeabi_dmul+0x222>
  406190:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  406194:	d113      	bne.n	4061be <__aeabi_dmul+0x24a>
  406196:	ea95 0f0c 	teq	r5, ip
  40619a:	d105      	bne.n	4061a8 <__aeabi_dmul+0x234>
  40619c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  4061a0:	bf1c      	itt	ne
  4061a2:	4610      	movne	r0, r2
  4061a4:	4619      	movne	r1, r3
  4061a6:	d10a      	bne.n	4061be <__aeabi_dmul+0x24a>
  4061a8:	ea81 0103 	eor.w	r1, r1, r3
  4061ac:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4061b0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  4061b4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  4061b8:	f04f 0000 	mov.w	r0, #0
  4061bc:	bd70      	pop	{r4, r5, r6, pc}
  4061be:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  4061c2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  4061c6:	bd70      	pop	{r4, r5, r6, pc}

004061c8 <__aeabi_ddiv>:
  4061c8:	b570      	push	{r4, r5, r6, lr}
  4061ca:	f04f 0cff 	mov.w	ip, #255	; 0xff
  4061ce:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  4061d2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  4061d6:	bf1d      	ittte	ne
  4061d8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  4061dc:	ea94 0f0c 	teqne	r4, ip
  4061e0:	ea95 0f0c 	teqne	r5, ip
  4061e4:	f000 f8a7 	bleq	406336 <__aeabi_ddiv+0x16e>
  4061e8:	eba4 0405 	sub.w	r4, r4, r5
  4061ec:	ea81 0e03 	eor.w	lr, r1, r3
  4061f0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4061f4:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4061f8:	f000 8088 	beq.w	40630c <__aeabi_ddiv+0x144>
  4061fc:	ea4f 3303 	mov.w	r3, r3, lsl #12
  406200:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  406204:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  406208:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  40620c:	ea4f 2202 	mov.w	r2, r2, lsl #8
  406210:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  406214:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  406218:	ea4f 2600 	mov.w	r6, r0, lsl #8
  40621c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  406220:	429d      	cmp	r5, r3
  406222:	bf08      	it	eq
  406224:	4296      	cmpeq	r6, r2
  406226:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  40622a:	f504 7440 	add.w	r4, r4, #768	; 0x300
  40622e:	d202      	bcs.n	406236 <__aeabi_ddiv+0x6e>
  406230:	085b      	lsrs	r3, r3, #1
  406232:	ea4f 0232 	mov.w	r2, r2, rrx
  406236:	1ab6      	subs	r6, r6, r2
  406238:	eb65 0503 	sbc.w	r5, r5, r3
  40623c:	085b      	lsrs	r3, r3, #1
  40623e:	ea4f 0232 	mov.w	r2, r2, rrx
  406242:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  406246:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  40624a:	ebb6 0e02 	subs.w	lr, r6, r2
  40624e:	eb75 0e03 	sbcs.w	lr, r5, r3
  406252:	bf22      	ittt	cs
  406254:	1ab6      	subcs	r6, r6, r2
  406256:	4675      	movcs	r5, lr
  406258:	ea40 000c 	orrcs.w	r0, r0, ip
  40625c:	085b      	lsrs	r3, r3, #1
  40625e:	ea4f 0232 	mov.w	r2, r2, rrx
  406262:	ebb6 0e02 	subs.w	lr, r6, r2
  406266:	eb75 0e03 	sbcs.w	lr, r5, r3
  40626a:	bf22      	ittt	cs
  40626c:	1ab6      	subcs	r6, r6, r2
  40626e:	4675      	movcs	r5, lr
  406270:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  406274:	085b      	lsrs	r3, r3, #1
  406276:	ea4f 0232 	mov.w	r2, r2, rrx
  40627a:	ebb6 0e02 	subs.w	lr, r6, r2
  40627e:	eb75 0e03 	sbcs.w	lr, r5, r3
  406282:	bf22      	ittt	cs
  406284:	1ab6      	subcs	r6, r6, r2
  406286:	4675      	movcs	r5, lr
  406288:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  40628c:	085b      	lsrs	r3, r3, #1
  40628e:	ea4f 0232 	mov.w	r2, r2, rrx
  406292:	ebb6 0e02 	subs.w	lr, r6, r2
  406296:	eb75 0e03 	sbcs.w	lr, r5, r3
  40629a:	bf22      	ittt	cs
  40629c:	1ab6      	subcs	r6, r6, r2
  40629e:	4675      	movcs	r5, lr
  4062a0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  4062a4:	ea55 0e06 	orrs.w	lr, r5, r6
  4062a8:	d018      	beq.n	4062dc <__aeabi_ddiv+0x114>
  4062aa:	ea4f 1505 	mov.w	r5, r5, lsl #4
  4062ae:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  4062b2:	ea4f 1606 	mov.w	r6, r6, lsl #4
  4062b6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  4062ba:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  4062be:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  4062c2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  4062c6:	d1c0      	bne.n	40624a <__aeabi_ddiv+0x82>
  4062c8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4062cc:	d10b      	bne.n	4062e6 <__aeabi_ddiv+0x11e>
  4062ce:	ea41 0100 	orr.w	r1, r1, r0
  4062d2:	f04f 0000 	mov.w	r0, #0
  4062d6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  4062da:	e7b6      	b.n	40624a <__aeabi_ddiv+0x82>
  4062dc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4062e0:	bf04      	itt	eq
  4062e2:	4301      	orreq	r1, r0
  4062e4:	2000      	moveq	r0, #0
  4062e6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4062ea:	bf88      	it	hi
  4062ec:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4062f0:	f63f aeaf 	bhi.w	406052 <__aeabi_dmul+0xde>
  4062f4:	ebb5 0c03 	subs.w	ip, r5, r3
  4062f8:	bf04      	itt	eq
  4062fa:	ebb6 0c02 	subseq.w	ip, r6, r2
  4062fe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  406302:	f150 0000 	adcs.w	r0, r0, #0
  406306:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40630a:	bd70      	pop	{r4, r5, r6, pc}
  40630c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  406310:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  406314:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  406318:	bfc2      	ittt	gt
  40631a:	ebd4 050c 	rsbsgt	r5, r4, ip
  40631e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  406322:	bd70      	popgt	{r4, r5, r6, pc}
  406324:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  406328:	f04f 0e00 	mov.w	lr, #0
  40632c:	3c01      	subs	r4, #1
  40632e:	e690      	b.n	406052 <__aeabi_dmul+0xde>
  406330:	ea45 0e06 	orr.w	lr, r5, r6
  406334:	e68d      	b.n	406052 <__aeabi_dmul+0xde>
  406336:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  40633a:	ea94 0f0c 	teq	r4, ip
  40633e:	bf08      	it	eq
  406340:	ea95 0f0c 	teqeq	r5, ip
  406344:	f43f af3b 	beq.w	4061be <__aeabi_dmul+0x24a>
  406348:	ea94 0f0c 	teq	r4, ip
  40634c:	d10a      	bne.n	406364 <__aeabi_ddiv+0x19c>
  40634e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  406352:	f47f af34 	bne.w	4061be <__aeabi_dmul+0x24a>
  406356:	ea95 0f0c 	teq	r5, ip
  40635a:	f47f af25 	bne.w	4061a8 <__aeabi_dmul+0x234>
  40635e:	4610      	mov	r0, r2
  406360:	4619      	mov	r1, r3
  406362:	e72c      	b.n	4061be <__aeabi_dmul+0x24a>
  406364:	ea95 0f0c 	teq	r5, ip
  406368:	d106      	bne.n	406378 <__aeabi_ddiv+0x1b0>
  40636a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  40636e:	f43f aefd 	beq.w	40616c <__aeabi_dmul+0x1f8>
  406372:	4610      	mov	r0, r2
  406374:	4619      	mov	r1, r3
  406376:	e722      	b.n	4061be <__aeabi_dmul+0x24a>
  406378:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40637c:	bf18      	it	ne
  40637e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  406382:	f47f aec5 	bne.w	406110 <__aeabi_dmul+0x19c>
  406386:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  40638a:	f47f af0d 	bne.w	4061a8 <__aeabi_dmul+0x234>
  40638e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  406392:	f47f aeeb 	bne.w	40616c <__aeabi_dmul+0x1f8>
  406396:	e712      	b.n	4061be <__aeabi_dmul+0x24a>

00406398 <__gedf2>:
  406398:	f04f 3cff 	mov.w	ip, #4294967295
  40639c:	e006      	b.n	4063ac <__cmpdf2+0x4>
  40639e:	bf00      	nop

004063a0 <__ledf2>:
  4063a0:	f04f 0c01 	mov.w	ip, #1
  4063a4:	e002      	b.n	4063ac <__cmpdf2+0x4>
  4063a6:	bf00      	nop

004063a8 <__cmpdf2>:
  4063a8:	f04f 0c01 	mov.w	ip, #1
  4063ac:	f84d cd04 	str.w	ip, [sp, #-4]!
  4063b0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4063b4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4063b8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4063bc:	bf18      	it	ne
  4063be:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  4063c2:	d01b      	beq.n	4063fc <__cmpdf2+0x54>
  4063c4:	b001      	add	sp, #4
  4063c6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  4063ca:	bf0c      	ite	eq
  4063cc:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  4063d0:	ea91 0f03 	teqne	r1, r3
  4063d4:	bf02      	ittt	eq
  4063d6:	ea90 0f02 	teqeq	r0, r2
  4063da:	2000      	moveq	r0, #0
  4063dc:	4770      	bxeq	lr
  4063de:	f110 0f00 	cmn.w	r0, #0
  4063e2:	ea91 0f03 	teq	r1, r3
  4063e6:	bf58      	it	pl
  4063e8:	4299      	cmppl	r1, r3
  4063ea:	bf08      	it	eq
  4063ec:	4290      	cmpeq	r0, r2
  4063ee:	bf2c      	ite	cs
  4063f0:	17d8      	asrcs	r0, r3, #31
  4063f2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  4063f6:	f040 0001 	orr.w	r0, r0, #1
  4063fa:	4770      	bx	lr
  4063fc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406400:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406404:	d102      	bne.n	40640c <__cmpdf2+0x64>
  406406:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  40640a:	d107      	bne.n	40641c <__cmpdf2+0x74>
  40640c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406410:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406414:	d1d6      	bne.n	4063c4 <__cmpdf2+0x1c>
  406416:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  40641a:	d0d3      	beq.n	4063c4 <__cmpdf2+0x1c>
  40641c:	f85d 0b04 	ldr.w	r0, [sp], #4
  406420:	4770      	bx	lr
  406422:	bf00      	nop

00406424 <__aeabi_cdrcmple>:
  406424:	4684      	mov	ip, r0
  406426:	4610      	mov	r0, r2
  406428:	4662      	mov	r2, ip
  40642a:	468c      	mov	ip, r1
  40642c:	4619      	mov	r1, r3
  40642e:	4663      	mov	r3, ip
  406430:	e000      	b.n	406434 <__aeabi_cdcmpeq>
  406432:	bf00      	nop

00406434 <__aeabi_cdcmpeq>:
  406434:	b501      	push	{r0, lr}
  406436:	f7ff ffb7 	bl	4063a8 <__cmpdf2>
  40643a:	2800      	cmp	r0, #0
  40643c:	bf48      	it	mi
  40643e:	f110 0f00 	cmnmi.w	r0, #0
  406442:	bd01      	pop	{r0, pc}

00406444 <__aeabi_dcmpeq>:
  406444:	f84d ed08 	str.w	lr, [sp, #-8]!
  406448:	f7ff fff4 	bl	406434 <__aeabi_cdcmpeq>
  40644c:	bf0c      	ite	eq
  40644e:	2001      	moveq	r0, #1
  406450:	2000      	movne	r0, #0
  406452:	f85d fb08 	ldr.w	pc, [sp], #8
  406456:	bf00      	nop

00406458 <__aeabi_dcmplt>:
  406458:	f84d ed08 	str.w	lr, [sp, #-8]!
  40645c:	f7ff ffea 	bl	406434 <__aeabi_cdcmpeq>
  406460:	bf34      	ite	cc
  406462:	2001      	movcc	r0, #1
  406464:	2000      	movcs	r0, #0
  406466:	f85d fb08 	ldr.w	pc, [sp], #8
  40646a:	bf00      	nop

0040646c <__aeabi_dcmple>:
  40646c:	f84d ed08 	str.w	lr, [sp, #-8]!
  406470:	f7ff ffe0 	bl	406434 <__aeabi_cdcmpeq>
  406474:	bf94      	ite	ls
  406476:	2001      	movls	r0, #1
  406478:	2000      	movhi	r0, #0
  40647a:	f85d fb08 	ldr.w	pc, [sp], #8
  40647e:	bf00      	nop

00406480 <__aeabi_dcmpge>:
  406480:	f84d ed08 	str.w	lr, [sp, #-8]!
  406484:	f7ff ffce 	bl	406424 <__aeabi_cdrcmple>
  406488:	bf94      	ite	ls
  40648a:	2001      	movls	r0, #1
  40648c:	2000      	movhi	r0, #0
  40648e:	f85d fb08 	ldr.w	pc, [sp], #8
  406492:	bf00      	nop

00406494 <__aeabi_dcmpgt>:
  406494:	f84d ed08 	str.w	lr, [sp, #-8]!
  406498:	f7ff ffc4 	bl	406424 <__aeabi_cdrcmple>
  40649c:	bf34      	ite	cc
  40649e:	2001      	movcc	r0, #1
  4064a0:	2000      	movcs	r0, #0
  4064a2:	f85d fb08 	ldr.w	pc, [sp], #8
  4064a6:	bf00      	nop

004064a8 <__aeabi_dcmpun>:
  4064a8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4064ac:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4064b0:	d102      	bne.n	4064b8 <__aeabi_dcmpun+0x10>
  4064b2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4064b6:	d10a      	bne.n	4064ce <__aeabi_dcmpun+0x26>
  4064b8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4064bc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4064c0:	d102      	bne.n	4064c8 <__aeabi_dcmpun+0x20>
  4064c2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4064c6:	d102      	bne.n	4064ce <__aeabi_dcmpun+0x26>
  4064c8:	f04f 0000 	mov.w	r0, #0
  4064cc:	4770      	bx	lr
  4064ce:	f04f 0001 	mov.w	r0, #1
  4064d2:	4770      	bx	lr

004064d4 <__aeabi_d2iz>:
  4064d4:	ea4f 0241 	mov.w	r2, r1, lsl #1
  4064d8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  4064dc:	d215      	bcs.n	40650a <__aeabi_d2iz+0x36>
  4064de:	d511      	bpl.n	406504 <__aeabi_d2iz+0x30>
  4064e0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  4064e4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  4064e8:	d912      	bls.n	406510 <__aeabi_d2iz+0x3c>
  4064ea:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4064ee:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4064f2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4064f6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4064fa:	fa23 f002 	lsr.w	r0, r3, r2
  4064fe:	bf18      	it	ne
  406500:	4240      	negne	r0, r0
  406502:	4770      	bx	lr
  406504:	f04f 0000 	mov.w	r0, #0
  406508:	4770      	bx	lr
  40650a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  40650e:	d105      	bne.n	40651c <__aeabi_d2iz+0x48>
  406510:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  406514:	bf08      	it	eq
  406516:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  40651a:	4770      	bx	lr
  40651c:	f04f 0000 	mov.w	r0, #0
  406520:	4770      	bx	lr
  406522:	bf00      	nop

00406524 <__aeabi_uldivmod>:
  406524:	b953      	cbnz	r3, 40653c <__aeabi_uldivmod+0x18>
  406526:	b94a      	cbnz	r2, 40653c <__aeabi_uldivmod+0x18>
  406528:	2900      	cmp	r1, #0
  40652a:	bf08      	it	eq
  40652c:	2800      	cmpeq	r0, #0
  40652e:	bf1c      	itt	ne
  406530:	f04f 31ff 	movne.w	r1, #4294967295
  406534:	f04f 30ff 	movne.w	r0, #4294967295
  406538:	f000 b97a 	b.w	406830 <__aeabi_idiv0>
  40653c:	f1ad 0c08 	sub.w	ip, sp, #8
  406540:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  406544:	f000 f806 	bl	406554 <__udivmoddi4>
  406548:	f8dd e004 	ldr.w	lr, [sp, #4]
  40654c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  406550:	b004      	add	sp, #16
  406552:	4770      	bx	lr

00406554 <__udivmoddi4>:
  406554:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  406558:	468c      	mov	ip, r1
  40655a:	460d      	mov	r5, r1
  40655c:	4604      	mov	r4, r0
  40655e:	9e08      	ldr	r6, [sp, #32]
  406560:	2b00      	cmp	r3, #0
  406562:	d151      	bne.n	406608 <__udivmoddi4+0xb4>
  406564:	428a      	cmp	r2, r1
  406566:	4617      	mov	r7, r2
  406568:	d96d      	bls.n	406646 <__udivmoddi4+0xf2>
  40656a:	fab2 fe82 	clz	lr, r2
  40656e:	f1be 0f00 	cmp.w	lr, #0
  406572:	d00b      	beq.n	40658c <__udivmoddi4+0x38>
  406574:	f1ce 0c20 	rsb	ip, lr, #32
  406578:	fa01 f50e 	lsl.w	r5, r1, lr
  40657c:	fa20 fc0c 	lsr.w	ip, r0, ip
  406580:	fa02 f70e 	lsl.w	r7, r2, lr
  406584:	ea4c 0c05 	orr.w	ip, ip, r5
  406588:	fa00 f40e 	lsl.w	r4, r0, lr
  40658c:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  406590:	0c25      	lsrs	r5, r4, #16
  406592:	fbbc f8fa 	udiv	r8, ip, sl
  406596:	fa1f f987 	uxth.w	r9, r7
  40659a:	fb0a cc18 	mls	ip, sl, r8, ip
  40659e:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  4065a2:	fb08 f309 	mul.w	r3, r8, r9
  4065a6:	42ab      	cmp	r3, r5
  4065a8:	d90a      	bls.n	4065c0 <__udivmoddi4+0x6c>
  4065aa:	19ed      	adds	r5, r5, r7
  4065ac:	f108 32ff 	add.w	r2, r8, #4294967295
  4065b0:	f080 8123 	bcs.w	4067fa <__udivmoddi4+0x2a6>
  4065b4:	42ab      	cmp	r3, r5
  4065b6:	f240 8120 	bls.w	4067fa <__udivmoddi4+0x2a6>
  4065ba:	f1a8 0802 	sub.w	r8, r8, #2
  4065be:	443d      	add	r5, r7
  4065c0:	1aed      	subs	r5, r5, r3
  4065c2:	b2a4      	uxth	r4, r4
  4065c4:	fbb5 f0fa 	udiv	r0, r5, sl
  4065c8:	fb0a 5510 	mls	r5, sl, r0, r5
  4065cc:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  4065d0:	fb00 f909 	mul.w	r9, r0, r9
  4065d4:	45a1      	cmp	r9, r4
  4065d6:	d909      	bls.n	4065ec <__udivmoddi4+0x98>
  4065d8:	19e4      	adds	r4, r4, r7
  4065da:	f100 33ff 	add.w	r3, r0, #4294967295
  4065de:	f080 810a 	bcs.w	4067f6 <__udivmoddi4+0x2a2>
  4065e2:	45a1      	cmp	r9, r4
  4065e4:	f240 8107 	bls.w	4067f6 <__udivmoddi4+0x2a2>
  4065e8:	3802      	subs	r0, #2
  4065ea:	443c      	add	r4, r7
  4065ec:	eba4 0409 	sub.w	r4, r4, r9
  4065f0:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4065f4:	2100      	movs	r1, #0
  4065f6:	2e00      	cmp	r6, #0
  4065f8:	d061      	beq.n	4066be <__udivmoddi4+0x16a>
  4065fa:	fa24 f40e 	lsr.w	r4, r4, lr
  4065fe:	2300      	movs	r3, #0
  406600:	6034      	str	r4, [r6, #0]
  406602:	6073      	str	r3, [r6, #4]
  406604:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406608:	428b      	cmp	r3, r1
  40660a:	d907      	bls.n	40661c <__udivmoddi4+0xc8>
  40660c:	2e00      	cmp	r6, #0
  40660e:	d054      	beq.n	4066ba <__udivmoddi4+0x166>
  406610:	2100      	movs	r1, #0
  406612:	e886 0021 	stmia.w	r6, {r0, r5}
  406616:	4608      	mov	r0, r1
  406618:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40661c:	fab3 f183 	clz	r1, r3
  406620:	2900      	cmp	r1, #0
  406622:	f040 808e 	bne.w	406742 <__udivmoddi4+0x1ee>
  406626:	42ab      	cmp	r3, r5
  406628:	d302      	bcc.n	406630 <__udivmoddi4+0xdc>
  40662a:	4282      	cmp	r2, r0
  40662c:	f200 80fa 	bhi.w	406824 <__udivmoddi4+0x2d0>
  406630:	1a84      	subs	r4, r0, r2
  406632:	eb65 0503 	sbc.w	r5, r5, r3
  406636:	2001      	movs	r0, #1
  406638:	46ac      	mov	ip, r5
  40663a:	2e00      	cmp	r6, #0
  40663c:	d03f      	beq.n	4066be <__udivmoddi4+0x16a>
  40663e:	e886 1010 	stmia.w	r6, {r4, ip}
  406642:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406646:	b912      	cbnz	r2, 40664e <__udivmoddi4+0xfa>
  406648:	2701      	movs	r7, #1
  40664a:	fbb7 f7f2 	udiv	r7, r7, r2
  40664e:	fab7 fe87 	clz	lr, r7
  406652:	f1be 0f00 	cmp.w	lr, #0
  406656:	d134      	bne.n	4066c2 <__udivmoddi4+0x16e>
  406658:	1beb      	subs	r3, r5, r7
  40665a:	0c3a      	lsrs	r2, r7, #16
  40665c:	fa1f fc87 	uxth.w	ip, r7
  406660:	2101      	movs	r1, #1
  406662:	fbb3 f8f2 	udiv	r8, r3, r2
  406666:	0c25      	lsrs	r5, r4, #16
  406668:	fb02 3318 	mls	r3, r2, r8, r3
  40666c:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406670:	fb0c f308 	mul.w	r3, ip, r8
  406674:	42ab      	cmp	r3, r5
  406676:	d907      	bls.n	406688 <__udivmoddi4+0x134>
  406678:	19ed      	adds	r5, r5, r7
  40667a:	f108 30ff 	add.w	r0, r8, #4294967295
  40667e:	d202      	bcs.n	406686 <__udivmoddi4+0x132>
  406680:	42ab      	cmp	r3, r5
  406682:	f200 80d1 	bhi.w	406828 <__udivmoddi4+0x2d4>
  406686:	4680      	mov	r8, r0
  406688:	1aed      	subs	r5, r5, r3
  40668a:	b2a3      	uxth	r3, r4
  40668c:	fbb5 f0f2 	udiv	r0, r5, r2
  406690:	fb02 5510 	mls	r5, r2, r0, r5
  406694:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  406698:	fb0c fc00 	mul.w	ip, ip, r0
  40669c:	45a4      	cmp	ip, r4
  40669e:	d907      	bls.n	4066b0 <__udivmoddi4+0x15c>
  4066a0:	19e4      	adds	r4, r4, r7
  4066a2:	f100 33ff 	add.w	r3, r0, #4294967295
  4066a6:	d202      	bcs.n	4066ae <__udivmoddi4+0x15a>
  4066a8:	45a4      	cmp	ip, r4
  4066aa:	f200 80b8 	bhi.w	40681e <__udivmoddi4+0x2ca>
  4066ae:	4618      	mov	r0, r3
  4066b0:	eba4 040c 	sub.w	r4, r4, ip
  4066b4:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4066b8:	e79d      	b.n	4065f6 <__udivmoddi4+0xa2>
  4066ba:	4631      	mov	r1, r6
  4066bc:	4630      	mov	r0, r6
  4066be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4066c2:	f1ce 0420 	rsb	r4, lr, #32
  4066c6:	fa05 f30e 	lsl.w	r3, r5, lr
  4066ca:	fa07 f70e 	lsl.w	r7, r7, lr
  4066ce:	fa20 f804 	lsr.w	r8, r0, r4
  4066d2:	0c3a      	lsrs	r2, r7, #16
  4066d4:	fa25 f404 	lsr.w	r4, r5, r4
  4066d8:	ea48 0803 	orr.w	r8, r8, r3
  4066dc:	fbb4 f1f2 	udiv	r1, r4, r2
  4066e0:	ea4f 4518 	mov.w	r5, r8, lsr #16
  4066e4:	fb02 4411 	mls	r4, r2, r1, r4
  4066e8:	fa1f fc87 	uxth.w	ip, r7
  4066ec:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  4066f0:	fb01 f30c 	mul.w	r3, r1, ip
  4066f4:	42ab      	cmp	r3, r5
  4066f6:	fa00 f40e 	lsl.w	r4, r0, lr
  4066fa:	d909      	bls.n	406710 <__udivmoddi4+0x1bc>
  4066fc:	19ed      	adds	r5, r5, r7
  4066fe:	f101 30ff 	add.w	r0, r1, #4294967295
  406702:	f080 808a 	bcs.w	40681a <__udivmoddi4+0x2c6>
  406706:	42ab      	cmp	r3, r5
  406708:	f240 8087 	bls.w	40681a <__udivmoddi4+0x2c6>
  40670c:	3902      	subs	r1, #2
  40670e:	443d      	add	r5, r7
  406710:	1aeb      	subs	r3, r5, r3
  406712:	fa1f f588 	uxth.w	r5, r8
  406716:	fbb3 f0f2 	udiv	r0, r3, r2
  40671a:	fb02 3310 	mls	r3, r2, r0, r3
  40671e:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406722:	fb00 f30c 	mul.w	r3, r0, ip
  406726:	42ab      	cmp	r3, r5
  406728:	d907      	bls.n	40673a <__udivmoddi4+0x1e6>
  40672a:	19ed      	adds	r5, r5, r7
  40672c:	f100 38ff 	add.w	r8, r0, #4294967295
  406730:	d26f      	bcs.n	406812 <__udivmoddi4+0x2be>
  406732:	42ab      	cmp	r3, r5
  406734:	d96d      	bls.n	406812 <__udivmoddi4+0x2be>
  406736:	3802      	subs	r0, #2
  406738:	443d      	add	r5, r7
  40673a:	1aeb      	subs	r3, r5, r3
  40673c:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  406740:	e78f      	b.n	406662 <__udivmoddi4+0x10e>
  406742:	f1c1 0720 	rsb	r7, r1, #32
  406746:	fa22 f807 	lsr.w	r8, r2, r7
  40674a:	408b      	lsls	r3, r1
  40674c:	fa05 f401 	lsl.w	r4, r5, r1
  406750:	ea48 0303 	orr.w	r3, r8, r3
  406754:	fa20 fe07 	lsr.w	lr, r0, r7
  406758:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  40675c:	40fd      	lsrs	r5, r7
  40675e:	ea4e 0e04 	orr.w	lr, lr, r4
  406762:	fbb5 f9fc 	udiv	r9, r5, ip
  406766:	ea4f 441e 	mov.w	r4, lr, lsr #16
  40676a:	fb0c 5519 	mls	r5, ip, r9, r5
  40676e:	fa1f f883 	uxth.w	r8, r3
  406772:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  406776:	fb09 f408 	mul.w	r4, r9, r8
  40677a:	42ac      	cmp	r4, r5
  40677c:	fa02 f201 	lsl.w	r2, r2, r1
  406780:	fa00 fa01 	lsl.w	sl, r0, r1
  406784:	d908      	bls.n	406798 <__udivmoddi4+0x244>
  406786:	18ed      	adds	r5, r5, r3
  406788:	f109 30ff 	add.w	r0, r9, #4294967295
  40678c:	d243      	bcs.n	406816 <__udivmoddi4+0x2c2>
  40678e:	42ac      	cmp	r4, r5
  406790:	d941      	bls.n	406816 <__udivmoddi4+0x2c2>
  406792:	f1a9 0902 	sub.w	r9, r9, #2
  406796:	441d      	add	r5, r3
  406798:	1b2d      	subs	r5, r5, r4
  40679a:	fa1f fe8e 	uxth.w	lr, lr
  40679e:	fbb5 f0fc 	udiv	r0, r5, ip
  4067a2:	fb0c 5510 	mls	r5, ip, r0, r5
  4067a6:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  4067aa:	fb00 f808 	mul.w	r8, r0, r8
  4067ae:	45a0      	cmp	r8, r4
  4067b0:	d907      	bls.n	4067c2 <__udivmoddi4+0x26e>
  4067b2:	18e4      	adds	r4, r4, r3
  4067b4:	f100 35ff 	add.w	r5, r0, #4294967295
  4067b8:	d229      	bcs.n	40680e <__udivmoddi4+0x2ba>
  4067ba:	45a0      	cmp	r8, r4
  4067bc:	d927      	bls.n	40680e <__udivmoddi4+0x2ba>
  4067be:	3802      	subs	r0, #2
  4067c0:	441c      	add	r4, r3
  4067c2:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  4067c6:	eba4 0408 	sub.w	r4, r4, r8
  4067ca:	fba0 8902 	umull	r8, r9, r0, r2
  4067ce:	454c      	cmp	r4, r9
  4067d0:	46c6      	mov	lr, r8
  4067d2:	464d      	mov	r5, r9
  4067d4:	d315      	bcc.n	406802 <__udivmoddi4+0x2ae>
  4067d6:	d012      	beq.n	4067fe <__udivmoddi4+0x2aa>
  4067d8:	b156      	cbz	r6, 4067f0 <__udivmoddi4+0x29c>
  4067da:	ebba 030e 	subs.w	r3, sl, lr
  4067de:	eb64 0405 	sbc.w	r4, r4, r5
  4067e2:	fa04 f707 	lsl.w	r7, r4, r7
  4067e6:	40cb      	lsrs	r3, r1
  4067e8:	431f      	orrs	r7, r3
  4067ea:	40cc      	lsrs	r4, r1
  4067ec:	6037      	str	r7, [r6, #0]
  4067ee:	6074      	str	r4, [r6, #4]
  4067f0:	2100      	movs	r1, #0
  4067f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4067f6:	4618      	mov	r0, r3
  4067f8:	e6f8      	b.n	4065ec <__udivmoddi4+0x98>
  4067fa:	4690      	mov	r8, r2
  4067fc:	e6e0      	b.n	4065c0 <__udivmoddi4+0x6c>
  4067fe:	45c2      	cmp	sl, r8
  406800:	d2ea      	bcs.n	4067d8 <__udivmoddi4+0x284>
  406802:	ebb8 0e02 	subs.w	lr, r8, r2
  406806:	eb69 0503 	sbc.w	r5, r9, r3
  40680a:	3801      	subs	r0, #1
  40680c:	e7e4      	b.n	4067d8 <__udivmoddi4+0x284>
  40680e:	4628      	mov	r0, r5
  406810:	e7d7      	b.n	4067c2 <__udivmoddi4+0x26e>
  406812:	4640      	mov	r0, r8
  406814:	e791      	b.n	40673a <__udivmoddi4+0x1e6>
  406816:	4681      	mov	r9, r0
  406818:	e7be      	b.n	406798 <__udivmoddi4+0x244>
  40681a:	4601      	mov	r1, r0
  40681c:	e778      	b.n	406710 <__udivmoddi4+0x1bc>
  40681e:	3802      	subs	r0, #2
  406820:	443c      	add	r4, r7
  406822:	e745      	b.n	4066b0 <__udivmoddi4+0x15c>
  406824:	4608      	mov	r0, r1
  406826:	e708      	b.n	40663a <__udivmoddi4+0xe6>
  406828:	f1a8 0802 	sub.w	r8, r8, #2
  40682c:	443d      	add	r5, r7
  40682e:	e72b      	b.n	406688 <__udivmoddi4+0x134>

00406830 <__aeabi_idiv0>:
  406830:	4770      	bx	lr
  406832:	bf00      	nop

00406834 <OV2640_JPEG>:
  406834:	14e0 77e1 1fe5 03d7 10da 00e0 01ff 0804     ...w............
  406844:	ffff 0000                                   ....

00406848 <OV2640_JPEG_1024x768>:
  406848:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  406858:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  406868:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406878:	c8c0 96c1 008c 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  406888:	0054 8855 005a c05b 015c 02d3 ffff 0000     T.U.Z.[.\.......

00406898 <OV2640_JPEG_1280x1024>:
  406898:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  4068a8:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  4068b8:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  4068c8:	04e0 c8c0 96c1 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  4068d8:	0054 8855 0057 405a f05b 015c 02d3 00e0     T.U.W.Z@[.\.....
  4068e8:	ffff 0000                                   ....

004068ec <OV2640_JPEG_1600x1200>:
  4068ec:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  4068fc:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  40690c:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  40691c:	04e0 c8c0 96c1 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  40692c:	0054 8855 0057 905a 2c5b 055c 02d3 00e0     T.U.W.Z.[,\.....
  40693c:	ffff 0000                                   ....

00406940 <OV2640_JPEG_320x240>:
  406940:	01ff 4012 1117 4318 0019 4b1a 0932 ca4f     ...@...C...K2.O.
  406950:	a850 235a 006d 1239 da35 1a22 c337 0023     P.Z#m.9.5.".7.#.
  406960:	c034 1a36 8806 c007 870d 410e 004c 00ff     4.6........AL...
  406970:	04e0 64c0 4bc1 3586 8950 c851 9652 0053     ...d.K.5P.Q.R.S.
  406980:	0054 0055 0057 505a 3c5b 005c 00e0 ffff     T.U.W.ZP[<\.....

00406990 <OV2640_JPEG_640x480>:
  406990:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  4069a0:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  4069b0:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  4069c0:	04e0 c8c0 96c1 3d86 8950 9051 2c52 0053     .......=P.Q.R,S.
  4069d0:	0054 8855 0057 a05a 785b 005c 04d3 00e0     T.U.W.Z.[x\.....
  4069e0:	ffff 0000                                   ....

004069e4 <OV2640_JPEG_800x600>:
  4069e4:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  4069f4:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  406a04:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406a14:	04e0 c8c0 96c1 3586 8950 9051 2c52 0053     .......5P.Q.R,S.
  406a24:	0054 8855 0057 c85a 965b 005c 02d3 00e0     T.U.W.Z.[.\.....
  406a34:	ffff 0000                                   ....

00406a38 <OV2640_JPEG_INIT>:
  406a38:	00ff ff2c df2e 01ff 323c 0111 0209 2804     ..,.....<2.....(
  406a48:	e513 4814 0c2c 7833 333a fb3b 003e 1143     ...H,.3x:3;.>.C.
  406a58:	1016 9239 da35 1a22 c337 0023 c034 1a36     ..9.5.".7.#.4.6.
  406a68:	8806 c007 870d 410e 004c 0048 005b 0342     .......AL.H.[.B.
  406a78:	814a 9921 4024 3825 8226 005c 0063 7061     J.!.$@%8&.\.c.ap
  406a88:	8062 057c 8020 3028 006c 806d 006e 0270     b.|. .(0l.m.n.p.
  406a98:	9471 c173 4012 1117 4318 0019 4b1a 0932     q.s..@...C...K2.
  406aa8:	c037 604f a850 006d 383d 3f46 604f 3c0c     7.O`P.m.=8F?O`.<
  406ab8:	00ff 7fe5 c0f9 2441 14e0 ff76 a033 2042     ......A$..v.3.B 
  406ac8:	1843 004c d587 3f88 03d7 10d9 82d3 08c8     C.L....?........
  406ad8:	80c9 007c 007d 037c 487d 487d 087c 207d     ..|.}.|.}H}H|.} 
  406ae8:	107d 0e7d 0090 0e91 1a91 3191 5a91 6991     }.}........1.Z.i
  406af8:	7591 7e91 8891 8f91 9691 a391 af91 c491     .u.~............
  406b08:	d791 e891 2091 0092 0693 e393 0593 0593     ..... ..........
  406b18:	0093 0493 0093 0093 0093 0093 0093 0093     ................
  406b28:	0093 0096 0897 1997 0297 0c97 2497 3097     .............$.0
  406b38:	2897 2697 0297 9897 8097 0097 0097 edc3     .(.&............
  406b48:	00a4 00a8 11c5 51c6 80bf 10c7 66b6 a5b8     .......Q.....f..
  406b58:	64b7 7cb9 afb3 97b4 ffb5 c5b0 94b1 0fb2     .d.|............
  406b68:	5cc4 64c0 4bc1 008c 3d86 0050 c851 9652     .\.d.K...=P.Q.R.
  406b78:	0053 0054 0055 c85a 965b 005c 00d3 edc3     S.T.U.Z.[.\.....
  406b88:	007f 00da 1fe5 67e1 00e0 7fdd 0005 4012     .......g.......@
  406b98:	04d3 16c0 12c1 008c 3d86 0050 2c51 2452     .........=P.Q,R$
  406ba8:	0053 0054 0055 2c5a 245b 005c ffff 0000     S.T.U.Z,[$\.....

00406bb8 <OV2640_QQVGA_RGB888>:
  406bb8:	000e 8012 0013 0111 0012 10d5 120c 340d     ...............4
  406bc8:	2517 a018 0319 f01a 891b 0322 1829 f82b     .%........".).+.
  406bd8:	012c a031 f032 c433 b43a 3f36 6004 8027     ,.1.2.3.:.6?.`'.
  406be8:	0f3d 803e 403f 7f40 6a41 2942 e544 4145     =.>.?@@.AjB)D.EA
  406bf8:	0247 6449 a14a 704b 1a4c 504d 134e 0064     G.IdJ.KpL.MPN.d.
  406c08:	8867 1a68 3814 3c24 3025 7226 9750 7e51     g.h..8$<%0&rP.Q~
  406c18:	0052 0053 0020 2321 1438 00e9 5556 ff57     R.S. .!#8...VUW.
  406c28:	ff58 ff59 045f 00ec ff13 7f80 3f81 3282     X.Y._........?.2
  406c38:	0183 1138 7084 0085 0386 0187 0588 3089     ..8..p.........0
  406c48:	308d 858f 3093 8595 3099 859b 089c 129d     .0...0...0......
  406c58:	239e 459f 55a0 64a1 72a2 7fa3 8ba4 95a5     .#.E.U.d.r......
  406c68:	a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce 6ecf     .............x.n
  406c78:	0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b 885c     ..........Z$[.\.
  406c88:	605d 6eac ffbe 00bf 2831 3c32 3f82 0112     ]`.n....1(2<.?..
  406c98:	2f36 0483 0053 f433 8a1b 0322 0084 0084     6/..S.3...".....
  406ca8:	0228 ffff                                   (...

00406cac <OV2640_QQVGA_YUV422>:
  406cac:	000e 8012 0013 0111 0012 10d5 540c 340d     .............T.4
  406cbc:	0116 2517 a018 0319 f01a 891b 0322 1829     ...%........".).
  406ccc:	f82b 012c a031 f032 c433 b43a 3f36 6004     +.,.1.2.3.:.6?.`
  406cdc:	8027 0f3d 803e 403f 7f40 6a41 2942 e544     '.=.>.?@@.AjB)D.
  406cec:	4145 0247 6449 a14a 704b 1a4c 504d 134e     EAG.IdJ.KpL.MPN.
  406cfc:	0064 8867 1a68 3814 3c24 3025 7226 9750     d.g.h..8$<%0&rP.
  406d0c:	7e51 0052 0053 0020 2321 1438 00e9 5556     Q~R.S. .!#8...VU
  406d1c:	ff57 ff58 ff59 045f 00ec ff13 7f80 3f81     W.X.Y._........?
  406d2c:	3282 0183 1138 7084 0085 0386 0187 0588     .2..8..p........
  406d3c:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406d4c:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406d5c:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406d6c:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406d7c:	885c 605d 6eac ffbe 00bf 2831 3c32 0034     \.]`.n....1(2<4.
  406d8c:	3f82 0012 3f36 0053 0033 891b 0322 0228     .?..6?S.3...".(.
  406d9c:	00d9 ffff                                   ....

00406da0 <OV2640_QVGA_RGB888>:
  406da0:	000e 8012 0013 0111 0012 10d5 120c 340d     ...............4
  406db0:	2517 a018 0319 f01a 891b 0322 1829 f82b     .%........".).+.
  406dc0:	012c a031 f032 c433 b43a 3f36 6004 8027     ,.1.2.3.:.6?.`'.
  406dd0:	0f3d 803e 403f 7f40 6a41 2942 e544 4145     =.>.?@@.AjB)D.EA
  406de0:	0247 6449 a14a 704b 1a4c 504d 134e 0064     G.IdJ.KpL.MPN.d.
  406df0:	8867 1a68 3814 3c24 3025 7226 9750 7e51     g.h..8$<%0&rP.Q~
  406e00:	0052 0053 0020 2321 1438 00e9 5556 ff57     R.S. .!#8...VUW.
  406e10:	ff58 ff59 045f 00ec ff13 7f80 3f81 3282     X.Y._........?.2
  406e20:	0183 1138 7084 0085 0386 0187 0588 3089     ..8..p.........0
  406e30:	308d 858f 3093 8595 3099 859b 089c 129d     .0...0...0......
  406e40:	239e 459f 55a0 64a1 72a2 7fa3 8ba4 95a5     .#.E.U.d.r......
  406e50:	a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce 6ecf     .............x.n
  406e60:	0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b 885c     ..........Z$[.\.
  406e70:	605d 6eac ffbe 00bf 5031 7832 3f82 0112     ]`.n....1P2x.?..
  406e80:	2f36 0483 0053 f433 8a1b 0322 0084 0084     6/..S.3...".....
  406e90:	0228 ffff                                   (...

00406e94 <OV2640_QVGA_YUV422_10FPS>:
  406e94:	000e 8012 05fe 0013 0511 0012 10d5 d40c     ................
  406ea4:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  406eb4:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406ec4:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406ed4:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406ee4:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  406ef4:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  406f04:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  406f14:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  406f24:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406f34:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406f44:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406f54:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406f64:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  406f74:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00406f84 <OV2640_QVGA_YUV422_15FPS>:
  406f84:	000e 8012 05fe 0013 0311 0012 10d5 d40c     ................
  406f94:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  406fa4:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406fb4:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406fc4:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406fd4:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  406fe4:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  406ff4:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  407004:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  407014:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  407024:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  407034:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  407044:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  407054:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  407064:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00407074 <OV2640_QVGA_YUV422_20FPS>:
  407074:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  407084:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  407094:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  4070a4:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  4070b4:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  4070c4:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  4070d4:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  4070e4:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  4070f4:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  407104:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  407114:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  407124:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  407134:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  407144:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  407154:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00407164 <OV2640_QVGA_YUV422_30FPS>:
  407164:	000e 8012 05fe 0013 0111 0012 10d5 d40c     ................
  407174:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  407184:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  407194:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  4071a4:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  4071b4:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  4071c4:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  4071d4:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  4071e4:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  4071f4:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  407204:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  407214:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  407224:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  407234:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  407244:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00407254 <OV2640_TEST_PATTERN>:
  407254:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  407264:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  407274:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  407284:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  407294:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  4072a4:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  4072b4:	9750 7e51 0052 0053 0020 2321 0738 0284     P.Q~R.S. .!#8...
  4072c4:	1438 00e9 5556 ff57 ff58 ff59 045f 00ec     8...VUW.X.Y._...
  4072d4:	ff13 7f80 3f81 3282 0183 1138 0085 0386     .....?.2..8.....
  4072e4:	0187 0588 3089 308d 858f 3093 8595 3099     .....0.0...0...0
  4072f4:	859b 089c 129d 239e 459f 55a0 64a1 72a2     .......#.E.U.d.r
  407304:	7fa3 8ba4 95a5 a7a6 b5a7 cba8 dda9 ecaa     ................
  407314:	1aab 78ce 6ecf 0ad0 0cd1 84d2 90d3 1ed4     ...x.n..........
  407324:	245a 1f5b 885c 605d 6eac ffbe 00bf 5031     Z$[.\.]`.n....1P
  407334:	7832 3f82 0012 3f36 0053 c433 891b 0322     2x.?..6?S.3...".
  407344:	0228 ffff                                   (...

00407348 <OV2640_VGA_YUV422_20FPS>:
  407348:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  407358:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  407368:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  407378:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  407388:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  407398:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  4073a8:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  4073b8:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  4073c8:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  4073d8:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  4073e8:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  4073f8:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  407408:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  407418:	885c 605d 6eac ffbe 00bf a031 f032 3f82     \.]`.n....1.2..?
  407428:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00407438 <OV2640_YUV422>:
  407438:	00ff 0005 10da 03d7 00df 8033 403c 77e1     ..........3.<@.w
  407448:	0000 ffff c200 0001 00c0 0000 0800 0000     ................
	...
  407464:	5553 4343 5345 0053 6d69 6761 5f65 6574     SUCCESS.image_te
  407474:	7473 2520 0d69 000a 6573 2074 6c77 6e61     st %i...set wlan
  407484:	675f 6970 206f 3532 0a0d 0000 6573 2074     _gpio 25....set 
  407494:	6577 7362 636f 656b 5f74 7067 6f69 3220     websocket_gpio 2
  4074a4:	0d36 000a 6567 2074 616d 0d63 000a 0000     6...get mac.....
  4074b4:	6573 2074 7061 675f 6970 206f 3732 0a0d     set ap_gpio 27..
  4074c4:	0000 0000 6573 2074 6f63 6d6d 675f 6970     ....set comm_gpi
  4074d4:	206f 3132 0a0d 0000 6573 2074 6c63 6569     o 21....set clie
  4074e4:	746e 5f73 7067 6f69 3320 0d32 000a 0000     nts_gpio 32.....
  4074f4:	6573 2074 656e 5f74 7067 6f69 3220 0d32     set net_gpio 22.
  407504:	000a 0000 6573 2074 7073 5f69 6162 6475     ....set spi_baud
  407514:	3120 3030 3030 0d30 000a 0000 6574 7473      100000.....test
  407524:	0a0d 0000 7270 766f 7369 6f69 0d6e 000a     ....provision...

00407534 <_global_impure_ptr>:
  407534:	0018 2000 4e49 0046 6e69 0066 414e 004e     ... INF.inf.NAN.
  407544:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  407554:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  407564:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  407574:	296c 0000 0030 0000                         l)..0...

0040757c <blanks.7223>:
  40757c:	2020 2020 2020 2020 2020 2020 2020 2020                     

0040758c <zeroes.7224>:
  40758c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  40759c:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.
  4075ac:	0000 0000                                   ....

004075b0 <__mprec_bigtens>:
  4075b0:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  4075c0:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  4075d0:	bf3c 7f73 4fdd 7515                         <.s..O.u

004075d8 <__mprec_tens>:
  4075d8:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  4075e8:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  4075f8:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  407608:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  407618:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  407628:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  407638:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  407648:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  407658:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  407668:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  407678:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  407688:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  407698:	9db4 79d9 7843 44ea                         ...yCx.D

004076a0 <p05.6055>:
  4076a0:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  4076b0:	4f50 4953 0058 0000 002e 0000               POSIX.......

004076bc <_ctype_>:
  4076bc:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  4076cc:	2020 2020 2020 2020 2020 2020 2020 2020                     
  4076dc:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  4076ec:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  4076fc:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  40770c:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  40771c:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  40772c:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  40773c:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

004077c0 <_init>:
  4077c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4077c2:	bf00      	nop
  4077c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4077c6:	bc08      	pop	{r3}
  4077c8:	469e      	mov	lr, r3
  4077ca:	4770      	bx	lr

004077cc <__init_array_start>:
  4077cc:	00403389 	.word	0x00403389

004077d0 <__frame_dummy_init_array_entry>:
  4077d0:	004000f1                                ..@.

004077d4 <_fini>:
  4077d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4077d6:	bf00      	nop
  4077d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4077da:	bc08      	pop	{r3}
  4077dc:	469e      	mov	lr, r3
  4077de:	4770      	bx	lr

004077e0 <__fini_array_start>:
  4077e0:	004000cd 	.word	0x004000cd

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
20000008:	4770      	bx	lr
	...

2000000c <SystemCoreClock>:
2000000c:	0900 003d                                   ..=.

20000010 <_impure_ptr>:
20000010:	0018 2000 0000 0000                         ... ....

20000018 <impure_data>:
20000018:	0000 0000 0304 2000 036c 2000 03d4 2000     ....... l.. ... 
	...
200000c0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
200000d0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20000440 <__atexit_recursive_mutex>:
20000440:	9550 2001                                   P.. 

20000444 <__malloc_av_>:
	...
2000044c:	0444 2000 0444 2000 044c 2000 044c 2000     D.. D.. L.. L.. 
2000045c:	0454 2000 0454 2000 045c 2000 045c 2000     T.. T.. \.. \.. 
2000046c:	0464 2000 0464 2000 046c 2000 046c 2000     d.. d.. l.. l.. 
2000047c:	0474 2000 0474 2000 047c 2000 047c 2000     t.. t.. |.. |.. 
2000048c:	0484 2000 0484 2000 048c 2000 048c 2000     ... ... ... ... 
2000049c:	0494 2000 0494 2000 049c 2000 049c 2000     ... ... ... ... 
200004ac:	04a4 2000 04a4 2000 04ac 2000 04ac 2000     ... ... ... ... 
200004bc:	04b4 2000 04b4 2000 04bc 2000 04bc 2000     ... ... ... ... 
200004cc:	04c4 2000 04c4 2000 04cc 2000 04cc 2000     ... ... ... ... 
200004dc:	04d4 2000 04d4 2000 04dc 2000 04dc 2000     ... ... ... ... 
200004ec:	04e4 2000 04e4 2000 04ec 2000 04ec 2000     ... ... ... ... 
200004fc:	04f4 2000 04f4 2000 04fc 2000 04fc 2000     ... ... ... ... 
2000050c:	0504 2000 0504 2000 050c 2000 050c 2000     ... ... ... ... 
2000051c:	0514 2000 0514 2000 051c 2000 051c 2000     ... ... ... ... 
2000052c:	0524 2000 0524 2000 052c 2000 052c 2000     $.. $.. ,.. ,.. 
2000053c:	0534 2000 0534 2000 053c 2000 053c 2000     4.. 4.. <.. <.. 
2000054c:	0544 2000 0544 2000 054c 2000 054c 2000     D.. D.. L.. L.. 
2000055c:	0554 2000 0554 2000 055c 2000 055c 2000     T.. T.. \.. \.. 
2000056c:	0564 2000 0564 2000 056c 2000 056c 2000     d.. d.. l.. l.. 
2000057c:	0574 2000 0574 2000 057c 2000 057c 2000     t.. t.. |.. |.. 
2000058c:	0584 2000 0584 2000 058c 2000 058c 2000     ... ... ... ... 
2000059c:	0594 2000 0594 2000 059c 2000 059c 2000     ... ... ... ... 
200005ac:	05a4 2000 05a4 2000 05ac 2000 05ac 2000     ... ... ... ... 
200005bc:	05b4 2000 05b4 2000 05bc 2000 05bc 2000     ... ... ... ... 
200005cc:	05c4 2000 05c4 2000 05cc 2000 05cc 2000     ... ... ... ... 
200005dc:	05d4 2000 05d4 2000 05dc 2000 05dc 2000     ... ... ... ... 
200005ec:	05e4 2000 05e4 2000 05ec 2000 05ec 2000     ... ... ... ... 
200005fc:	05f4 2000 05f4 2000 05fc 2000 05fc 2000     ... ... ... ... 
2000060c:	0604 2000 0604 2000 060c 2000 060c 2000     ... ... ... ... 
2000061c:	0614 2000 0614 2000 061c 2000 061c 2000     ... ... ... ... 
2000062c:	0624 2000 0624 2000 062c 2000 062c 2000     $.. $.. ,.. ,.. 
2000063c:	0634 2000 0634 2000 063c 2000 063c 2000     4.. 4.. <.. <.. 
2000064c:	0644 2000 0644 2000 064c 2000 064c 2000     D.. D.. L.. L.. 
2000065c:	0654 2000 0654 2000 065c 2000 065c 2000     T.. T.. \.. \.. 
2000066c:	0664 2000 0664 2000 066c 2000 066c 2000     d.. d.. l.. l.. 
2000067c:	0674 2000 0674 2000 067c 2000 067c 2000     t.. t.. |.. |.. 
2000068c:	0684 2000 0684 2000 068c 2000 068c 2000     ... ... ... ... 
2000069c:	0694 2000 0694 2000 069c 2000 069c 2000     ... ... ... ... 
200006ac:	06a4 2000 06a4 2000 06ac 2000 06ac 2000     ... ... ... ... 
200006bc:	06b4 2000 06b4 2000 06bc 2000 06bc 2000     ... ... ... ... 
200006cc:	06c4 2000 06c4 2000 06cc 2000 06cc 2000     ... ... ... ... 
200006dc:	06d4 2000 06d4 2000 06dc 2000 06dc 2000     ... ... ... ... 
200006ec:	06e4 2000 06e4 2000 06ec 2000 06ec 2000     ... ... ... ... 
200006fc:	06f4 2000 06f4 2000 06fc 2000 06fc 2000     ... ... ... ... 
2000070c:	0704 2000 0704 2000 070c 2000 070c 2000     ... ... ... ... 
2000071c:	0714 2000 0714 2000 071c 2000 071c 2000     ... ... ... ... 
2000072c:	0724 2000 0724 2000 072c 2000 072c 2000     $.. $.. ,.. ,.. 
2000073c:	0734 2000 0734 2000 073c 2000 073c 2000     4.. 4.. <.. <.. 
2000074c:	0744 2000 0744 2000 074c 2000 074c 2000     D.. D.. L.. L.. 
2000075c:	0754 2000 0754 2000 075c 2000 075c 2000     T.. T.. \.. \.. 
2000076c:	0764 2000 0764 2000 076c 2000 076c 2000     d.. d.. l.. l.. 
2000077c:	0774 2000 0774 2000 077c 2000 077c 2000     t.. t.. |.. |.. 
2000078c:	0784 2000 0784 2000 078c 2000 078c 2000     ... ... ... ... 
2000079c:	0794 2000 0794 2000 079c 2000 079c 2000     ... ... ... ... 
200007ac:	07a4 2000 07a4 2000 07ac 2000 07ac 2000     ... ... ... ... 
200007bc:	07b4 2000 07b4 2000 07bc 2000 07bc 2000     ... ... ... ... 
200007cc:	07c4 2000 07c4 2000 07cc 2000 07cc 2000     ... ... ... ... 
200007dc:	07d4 2000 07d4 2000 07dc 2000 07dc 2000     ... ... ... ... 
200007ec:	07e4 2000 07e4 2000 07ec 2000 07ec 2000     ... ... ... ... 
200007fc:	07f4 2000 07f4 2000 07fc 2000 07fc 2000     ... ... ... ... 
2000080c:	0804 2000 0804 2000 080c 2000 080c 2000     ... ... ... ... 
2000081c:	0814 2000 0814 2000 081c 2000 081c 2000     ... ... ... ... 
2000082c:	0824 2000 0824 2000 082c 2000 082c 2000     $.. $.. ,.. ,.. 
2000083c:	0834 2000 0834 2000 083c 2000 083c 2000     4.. 4.. <.. <.. 

2000084c <__malloc_sbrk_base>:
2000084c:	ffff ffff                                   ....

20000850 <__malloc_trim_threshold>:
20000850:	0000 0002                                   ....

20000854 <__global_locale>:
20000854:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000874:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000894:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008b4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008d4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008f4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000914:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000934:	5be9 0040 57a9 0040 0000 0000 76bc 0040     .[@..W@......v@.
20000944:	76b8 0040 74c4 0040 74c4 0040 74c4 0040     .v@..t@..t@..t@.
20000954:	74c4 0040 74c4 0040 74c4 0040 74c4 0040     .t@..t@..t@..t@.
20000964:	74c4 0040 74c4 0040 ffff ffff ffff ffff     .t@..t@.........
20000974:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
2000099c:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...


firmware.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000078a4  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  004078a4  004078a4  000178a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009c0  20000000  004078ac  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00018bbc  200009c0  0040826c  000209c0  2**2
                  ALLOC
  4 .stack        00003004  2001957c  00420e28  000209c0  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  000209c0  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000209ea  2**0
                  CONTENTS, READONLY
  7 .debug_info   0001982b  00000000  00000000  00020a43  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000039ff  00000000  00000000  0003a26e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000591a  00000000  00000000  0003dc6d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000b78  00000000  00000000  00043587  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000aa8  00000000  00000000  000440ff  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00015de6  00000000  00000000  00044ba7  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000f91e  00000000  00000000  0005a98d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00052479  00000000  00000000  0006a2ab  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000025c0  00000000  00000000  000bc724  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	80 c5 01 20 09 16 40 00 05 16 40 00 05 16 40 00     ... ..@...@...@.
  400010:	05 16 40 00 05 16 40 00 05 16 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	05 16 40 00 05 16 40 00 00 00 00 00 05 16 40 00     ..@...@.......@.
  40003c:	05 16 40 00 05 16 40 00 05 16 40 00 05 16 40 00     ..@...@...@...@.
  40004c:	05 16 40 00 05 16 40 00 05 16 40 00 05 16 40 00     ..@...@...@...@.
  40005c:	00 00 00 00 05 16 40 00 05 16 40 00 00 00 00 00     ......@...@.....
  40006c:	05 05 40 00 19 05 40 00 00 00 00 00 39 12 40 00     ..@...@.....9.@.
  40007c:	05 16 40 00 00 00 00 00 00 00 00 00 05 16 40 00     ..@...........@.
  40008c:	05 16 40 00 05 16 40 00 d5 12 40 00 05 16 40 00     ..@...@...@...@.
  40009c:	71 11 40 00 05 16 40 00 05 16 40 00 00 00 00 00     q.@...@...@.....
	...
  4000b4:	05 16 40 00 05 16 40 00 05 16 40 00 05 16 40 00     ..@...@...@...@.
  4000c4:	05 16 40 00 05 16 40 00                             ..@...@.

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	200009c0 	.word	0x200009c0
  4000e8:	00000000 	.word	0x00000000
  4000ec:	004078ac 	.word	0x004078ac

004000f0 <frame_dummy>:
  4000f0:	4b0c      	ldr	r3, [pc, #48]	; (400124 <frame_dummy+0x34>)
  4000f2:	b143      	cbz	r3, 400106 <frame_dummy+0x16>
  4000f4:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x38>)
  4000f6:	490d      	ldr	r1, [pc, #52]	; (40012c <frame_dummy+0x3c>)
  4000f8:	b510      	push	{r4, lr}
  4000fa:	f3af 8000 	nop.w
  4000fe:	480c      	ldr	r0, [pc, #48]	; (400130 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b923      	cbnz	r3, 40010e <frame_dummy+0x1e>
  400104:	bd10      	pop	{r4, pc}
  400106:	480a      	ldr	r0, [pc, #40]	; (400130 <frame_dummy+0x40>)
  400108:	6803      	ldr	r3, [r0, #0]
  40010a:	b933      	cbnz	r3, 40011a <frame_dummy+0x2a>
  40010c:	4770      	bx	lr
  40010e:	4b09      	ldr	r3, [pc, #36]	; (400134 <frame_dummy+0x44>)
  400110:	2b00      	cmp	r3, #0
  400112:	d0f7      	beq.n	400104 <frame_dummy+0x14>
  400114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400118:	4718      	bx	r3
  40011a:	4b06      	ldr	r3, [pc, #24]	; (400134 <frame_dummy+0x44>)
  40011c:	2b00      	cmp	r3, #0
  40011e:	d0f5      	beq.n	40010c <frame_dummy+0x1c>
  400120:	4718      	bx	r3
  400122:	bf00      	nop
  400124:	00000000 	.word	0x00000000
  400128:	004078ac 	.word	0x004078ac
  40012c:	200009c4 	.word	0x200009c4
  400130:	004078ac 	.word	0x004078ac
  400134:	00000000 	.word	0x00000000

00400138 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400138:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40013a:	480e      	ldr	r0, [pc, #56]	; (400174 <sysclk_init+0x3c>)
  40013c:	4b0e      	ldr	r3, [pc, #56]	; (400178 <sysclk_init+0x40>)
  40013e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400140:	213e      	movs	r1, #62	; 0x3e
  400142:	2000      	movs	r0, #0
  400144:	4b0d      	ldr	r3, [pc, #52]	; (40017c <sysclk_init+0x44>)
  400146:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400148:	4c0d      	ldr	r4, [pc, #52]	; (400180 <sysclk_init+0x48>)
  40014a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  40014c:	2800      	cmp	r0, #0
  40014e:	d0fc      	beq.n	40014a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400150:	4b0c      	ldr	r3, [pc, #48]	; (400184 <sysclk_init+0x4c>)
  400152:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400154:	4a0c      	ldr	r2, [pc, #48]	; (400188 <sysclk_init+0x50>)
  400156:	4b0d      	ldr	r3, [pc, #52]	; (40018c <sysclk_init+0x54>)
  400158:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  40015a:	4c0d      	ldr	r4, [pc, #52]	; (400190 <sysclk_init+0x58>)
  40015c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  40015e:	2800      	cmp	r0, #0
  400160:	d0fc      	beq.n	40015c <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400162:	2010      	movs	r0, #16
  400164:	4b0b      	ldr	r3, [pc, #44]	; (400194 <sysclk_init+0x5c>)
  400166:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400168:	4b0b      	ldr	r3, [pc, #44]	; (400198 <sysclk_init+0x60>)
  40016a:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  40016c:	4801      	ldr	r0, [pc, #4]	; (400174 <sysclk_init+0x3c>)
  40016e:	4b02      	ldr	r3, [pc, #8]	; (400178 <sysclk_init+0x40>)
  400170:	4798      	blx	r3
  400172:	bd10      	pop	{r4, pc}
  400174:	07270e00 	.word	0x07270e00
  400178:	004017c5 	.word	0x004017c5
  40017c:	00400591 	.word	0x00400591
  400180:	004005e5 	.word	0x004005e5
  400184:	004005f5 	.word	0x004005f5
  400188:	20133f01 	.word	0x20133f01
  40018c:	400e0400 	.word	0x400e0400
  400190:	00400605 	.word	0x00400605
  400194:	0040052d 	.word	0x0040052d
  400198:	004016b5 	.word	0x004016b5

0040019c <pio_set_debounce_filter>:
void pio_set_debounce_filter(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_cut_off)
{
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Set Debouncing, 0 bit field no effect */
	p_pio->PIO_IFSCER = ul_mask;
  40019c:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
	/*
	 * The debouncing filter can filter a pulse of less than 1/2 Period of a
	 * programmable Divided Slow Clock:
	 * Tdiv_slclk = ((DIV+1)*2).Tslow_clock
	 */
	p_pio->PIO_SCDR = PIO_SCDR_DIV((FREQ_SLOW_CLOCK_EXT /
  4001a0:	0053      	lsls	r3, r2, #1
  4001a2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4001a6:	fbb2 f2f3 	udiv	r2, r2, r3
  4001aa:	3a01      	subs	r2, #1
  4001ac:	f3c2 020d 	ubfx	r2, r2, #0, #14
  4001b0:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
  4001b4:	4770      	bx	lr

004001b6 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  4001b6:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  4001b8:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  4001bc:	d039      	beq.n	400232 <pio_set_peripheral+0x7c>
  4001be:	d813      	bhi.n	4001e8 <pio_set_peripheral+0x32>
  4001c0:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  4001c4:	d025      	beq.n	400212 <pio_set_peripheral+0x5c>
  4001c6:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  4001ca:	d10a      	bne.n	4001e2 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4001cc:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4001ce:	4313      	orrs	r3, r2
  4001d0:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4001d2:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4001d4:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4001d6:	400b      	ands	r3, r1
  4001d8:	ea23 0302 	bic.w	r3, r3, r2
  4001dc:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4001de:	6042      	str	r2, [r0, #4]
  4001e0:	4770      	bx	lr
	switch (ul_type) {
  4001e2:	2900      	cmp	r1, #0
  4001e4:	d1fb      	bne.n	4001de <pio_set_peripheral+0x28>
  4001e6:	4770      	bx	lr
  4001e8:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4001ec:	d020      	beq.n	400230 <pio_set_peripheral+0x7a>
  4001ee:	d809      	bhi.n	400204 <pio_set_peripheral+0x4e>
  4001f0:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4001f4:	d1f3      	bne.n	4001de <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  4001f6:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4001f8:	4313      	orrs	r3, r2
  4001fa:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  4001fc:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4001fe:	4313      	orrs	r3, r2
  400200:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400202:	e7ec      	b.n	4001de <pio_set_peripheral+0x28>
	switch (ul_type) {
  400204:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400208:	d012      	beq.n	400230 <pio_set_peripheral+0x7a>
  40020a:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  40020e:	d00f      	beq.n	400230 <pio_set_peripheral+0x7a>
  400210:	e7e5      	b.n	4001de <pio_set_peripheral+0x28>
{
  400212:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400214:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400216:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400218:	43d3      	mvns	r3, r2
  40021a:	4021      	ands	r1, r4
  40021c:	461c      	mov	r4, r3
  40021e:	4019      	ands	r1, r3
  400220:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400222:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400224:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400226:	400b      	ands	r3, r1
  400228:	4023      	ands	r3, r4
  40022a:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  40022c:	6042      	str	r2, [r0, #4]
}
  40022e:	bc10      	pop	{r4}
  400230:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400232:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400234:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400236:	400b      	ands	r3, r1
  400238:	ea23 0302 	bic.w	r3, r3, r2
  40023c:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  40023e:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400240:	4313      	orrs	r3, r2
  400242:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400244:	e7cb      	b.n	4001de <pio_set_peripheral+0x28>

00400246 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400246:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400248:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  40024c:	bf14      	ite	ne
  40024e:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400250:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400252:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  400256:	bf14      	ite	ne
  400258:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
  40025a:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
  40025c:	f012 0f02 	tst.w	r2, #2
  400260:	d107      	bne.n	400272 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400262:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  400266:	bf18      	it	ne
  400268:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
  40026c:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  40026e:	6001      	str	r1, [r0, #0]
  400270:	4770      	bx	lr
		p_pio->PIO_IFSCDR = ul_mask;
  400272:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  400276:	e7f9      	b.n	40026c <pio_set_input+0x26>

00400278 <pio_set_output>:
{
  400278:	b410      	push	{r4}
  40027a:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  40027c:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  40027e:	b944      	cbnz	r4, 400292 <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
  400280:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400282:	b143      	cbz	r3, 400296 <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
  400284:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400286:	b942      	cbnz	r2, 40029a <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
  400288:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  40028a:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  40028c:	6001      	str	r1, [r0, #0]
}
  40028e:	bc10      	pop	{r4}
  400290:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400292:	6641      	str	r1, [r0, #100]	; 0x64
  400294:	e7f5      	b.n	400282 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400296:	6541      	str	r1, [r0, #84]	; 0x54
  400298:	e7f5      	b.n	400286 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  40029a:	6301      	str	r1, [r0, #48]	; 0x30
  40029c:	e7f5      	b.n	40028a <pio_set_output+0x12>

0040029e <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  40029e:	f012 0f10 	tst.w	r2, #16
  4002a2:	d010      	beq.n	4002c6 <pio_configure_interrupt+0x28>
		p_pio->PIO_AIMER = ul_mask;
  4002a4:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  4002a8:	f012 0f20 	tst.w	r2, #32
			p_pio->PIO_REHLSR = ul_mask;
  4002ac:	bf14      	ite	ne
  4002ae:	f8c0 10d4 	strne.w	r1, [r0, #212]	; 0xd4
			p_pio->PIO_FELLSR = ul_mask;
  4002b2:	f8c0 10d0 	streq.w	r1, [r0, #208]	; 0xd0
		if (ul_attr & PIO_IT_EDGE) {
  4002b6:	f012 0f40 	tst.w	r2, #64	; 0x40
			p_pio->PIO_ESR = ul_mask;
  4002ba:	bf14      	ite	ne
  4002bc:	f8c0 10c0 	strne.w	r1, [r0, #192]	; 0xc0
			p_pio->PIO_LSR = ul_mask;
  4002c0:	f8c0 10c4 	streq.w	r1, [r0, #196]	; 0xc4
  4002c4:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  4002c6:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  4002ca:	4770      	bx	lr

004002cc <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  4002cc:	6401      	str	r1, [r0, #64]	; 0x40
  4002ce:	4770      	bx	lr

004002d0 <pio_disable_interrupt>:
	p_pio->PIO_IDR = ul_mask;
  4002d0:	6441      	str	r1, [r0, #68]	; 0x44
  4002d2:	4770      	bx	lr

004002d4 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  4002d4:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  4002d6:	4770      	bx	lr

004002d8 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  4002d8:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  4002da:	4770      	bx	lr

004002dc <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
  4002dc:	b570      	push	{r4, r5, r6, lr}
  4002de:	b082      	sub	sp, #8
  4002e0:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4002e2:	0943      	lsrs	r3, r0, #5
  4002e4:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4002e8:	f203 7307 	addw	r3, r3, #1799	; 0x707
  4002ec:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
  4002ee:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  4002f2:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4002f6:	d053      	beq.n	4003a0 <pio_configure_pin+0xc4>
  4002f8:	d80a      	bhi.n	400310 <pio_configure_pin+0x34>
  4002fa:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4002fe:	d02d      	beq.n	40035c <pio_configure_pin+0x80>
  400300:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  400304:	d03b      	beq.n	40037e <pio_configure_pin+0xa2>
  400306:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  40030a:	d015      	beq.n	400338 <pio_configure_pin+0x5c>
		return 0;
  40030c:	2000      	movs	r0, #0
  40030e:	e023      	b.n	400358 <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
  400310:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  400314:	d055      	beq.n	4003c2 <pio_configure_pin+0xe6>
  400316:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  40031a:	d052      	beq.n	4003c2 <pio_configure_pin+0xe6>
  40031c:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400320:	d1f4      	bne.n	40030c <pio_configure_pin+0x30>
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  400322:	f000 011f 	and.w	r1, r0, #31
  400326:	2601      	movs	r6, #1
  400328:	462a      	mov	r2, r5
  40032a:	fa06 f101 	lsl.w	r1, r6, r1
  40032e:	4620      	mov	r0, r4
  400330:	4b2f      	ldr	r3, [pc, #188]	; (4003f0 <pio_configure_pin+0x114>)
  400332:	4798      	blx	r3
	return 1;
  400334:	4630      	mov	r0, r6
		break;
  400336:	e00f      	b.n	400358 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  400338:	f000 001f 	and.w	r0, r0, #31
  40033c:	2601      	movs	r6, #1
  40033e:	4086      	lsls	r6, r0
  400340:	4632      	mov	r2, r6
  400342:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400346:	4620      	mov	r0, r4
  400348:	4b2a      	ldr	r3, [pc, #168]	; (4003f4 <pio_configure_pin+0x118>)
  40034a:	4798      	blx	r3
	if (ul_pull_up_enable) {
  40034c:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400350:	bf14      	ite	ne
  400352:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400354:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400356:	2001      	movs	r0, #1
}
  400358:	b002      	add	sp, #8
  40035a:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  40035c:	f000 001f 	and.w	r0, r0, #31
  400360:	2601      	movs	r6, #1
  400362:	4086      	lsls	r6, r0
  400364:	4632      	mov	r2, r6
  400366:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40036a:	4620      	mov	r0, r4
  40036c:	4b21      	ldr	r3, [pc, #132]	; (4003f4 <pio_configure_pin+0x118>)
  40036e:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400370:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400374:	bf14      	ite	ne
  400376:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400378:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  40037a:	2001      	movs	r0, #1
  40037c:	e7ec      	b.n	400358 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  40037e:	f000 001f 	and.w	r0, r0, #31
  400382:	2601      	movs	r6, #1
  400384:	4086      	lsls	r6, r0
  400386:	4632      	mov	r2, r6
  400388:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  40038c:	4620      	mov	r0, r4
  40038e:	4b19      	ldr	r3, [pc, #100]	; (4003f4 <pio_configure_pin+0x118>)
  400390:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400392:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400396:	bf14      	ite	ne
  400398:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  40039a:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  40039c:	2001      	movs	r0, #1
  40039e:	e7db      	b.n	400358 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  4003a0:	f000 001f 	and.w	r0, r0, #31
  4003a4:	2601      	movs	r6, #1
  4003a6:	4086      	lsls	r6, r0
  4003a8:	4632      	mov	r2, r6
  4003aa:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  4003ae:	4620      	mov	r0, r4
  4003b0:	4b10      	ldr	r3, [pc, #64]	; (4003f4 <pio_configure_pin+0x118>)
  4003b2:	4798      	blx	r3
	if (ul_pull_up_enable) {
  4003b4:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  4003b8:	bf14      	ite	ne
  4003ba:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  4003bc:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  4003be:	2001      	movs	r0, #1
  4003c0:	e7ca      	b.n	400358 <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  4003c2:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4003c6:	f000 011f 	and.w	r1, r0, #31
  4003ca:	2601      	movs	r6, #1
  4003cc:	ea05 0306 	and.w	r3, r5, r6
  4003d0:	9300      	str	r3, [sp, #0]
  4003d2:	f3c5 0380 	ubfx	r3, r5, #2, #1
  4003d6:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  4003da:	bf14      	ite	ne
  4003dc:	2200      	movne	r2, #0
  4003de:	2201      	moveq	r2, #1
  4003e0:	fa06 f101 	lsl.w	r1, r6, r1
  4003e4:	4620      	mov	r0, r4
  4003e6:	4c04      	ldr	r4, [pc, #16]	; (4003f8 <pio_configure_pin+0x11c>)
  4003e8:	47a0      	blx	r4
	return 1;
  4003ea:	4630      	mov	r0, r6
		break;
  4003ec:	e7b4      	b.n	400358 <pio_configure_pin+0x7c>
  4003ee:	bf00      	nop
  4003f0:	00400247 	.word	0x00400247
  4003f4:	004001b7 	.word	0x004001b7
  4003f8:	00400279 	.word	0x00400279

004003fc <pio_capture_enable>:
 *
 * \param p_pio Pointer to a PIO instance.
 */
void pio_capture_enable(Pio *p_pio)
{
	p_pio->PIO_PCMR |= PIO_PCMR_PCEN;
  4003fc:	f8d0 3150 	ldr.w	r3, [r0, #336]	; 0x150
  400400:	f043 0301 	orr.w	r3, r3, #1
  400404:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
	pio_capture_enable_flag = true;
  400408:	2201      	movs	r2, #1
  40040a:	4b01      	ldr	r3, [pc, #4]	; (400410 <pio_capture_enable+0x14>)
  40040c:	601a      	str	r2, [r3, #0]
  40040e:	4770      	bx	lr
  400410:	20000ac4 	.word	0x20000ac4

00400414 <pio_capture_disable>:
 *
 * \param p_pio Pointer to a PIO instance.
 */
void pio_capture_disable(Pio *p_pio)
{
	p_pio->PIO_PCMR &= (~PIO_PCMR_PCEN);
  400414:	f8d0 3150 	ldr.w	r3, [r0, #336]	; 0x150
  400418:	f023 0301 	bic.w	r3, r3, #1
  40041c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
	pio_capture_enable_flag = false;
  400420:	2200      	movs	r2, #0
  400422:	4b01      	ldr	r3, [pc, #4]	; (400428 <pio_capture_disable+0x14>)
  400424:	601a      	str	r2, [r3, #0]
  400426:	4770      	bx	lr
  400428:	20000ac4 	.word	0x20000ac4

0040042c <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  40042c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400430:	4681      	mov	r9, r0
  400432:	460f      	mov	r7, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400434:	4b12      	ldr	r3, [pc, #72]	; (400480 <pio_handler_process+0x54>)
  400436:	4798      	blx	r3
  400438:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  40043a:	4648      	mov	r0, r9
  40043c:	4b11      	ldr	r3, [pc, #68]	; (400484 <pio_handler_process+0x58>)
  40043e:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400440:	4005      	ands	r5, r0
  400442:	d013      	beq.n	40046c <pio_handler_process+0x40>
  400444:	4c10      	ldr	r4, [pc, #64]	; (400488 <pio_handler_process+0x5c>)
  400446:	f104 0660 	add.w	r6, r4, #96	; 0x60
  40044a:	e003      	b.n	400454 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  40044c:	42b4      	cmp	r4, r6
  40044e:	d00d      	beq.n	40046c <pio_handler_process+0x40>
  400450:	3410      	adds	r4, #16
		while (status != 0) {
  400452:	b15d      	cbz	r5, 40046c <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400454:	6820      	ldr	r0, [r4, #0]
  400456:	42b8      	cmp	r0, r7
  400458:	d1f8      	bne.n	40044c <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  40045a:	6861      	ldr	r1, [r4, #4]
  40045c:	4229      	tst	r1, r5
  40045e:	d0f5      	beq.n	40044c <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400460:	68e3      	ldr	r3, [r4, #12]
  400462:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400464:	6863      	ldr	r3, [r4, #4]
  400466:	ea25 0503 	bic.w	r5, r5, r3
  40046a:	e7ef      	b.n	40044c <pio_handler_process+0x20>
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  40046c:	4b07      	ldr	r3, [pc, #28]	; (40048c <pio_handler_process+0x60>)
  40046e:	681b      	ldr	r3, [r3, #0]
  400470:	b123      	cbz	r3, 40047c <pio_handler_process+0x50>
		if (pio_capture_handler) {
  400472:	4b07      	ldr	r3, [pc, #28]	; (400490 <pio_handler_process+0x64>)
  400474:	681b      	ldr	r3, [r3, #0]
  400476:	b10b      	cbz	r3, 40047c <pio_handler_process+0x50>
			pio_capture_handler(p_pio);
  400478:	4648      	mov	r0, r9
  40047a:	4798      	blx	r3
  40047c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400480:	004002d5 	.word	0x004002d5
  400484:	004002d9 	.word	0x004002d9
  400488:	200009dc 	.word	0x200009dc
  40048c:	20000ac4 	.word	0x20000ac4
  400490:	20000a50 	.word	0x20000a50

00400494 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400494:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400496:	4c18      	ldr	r4, [pc, #96]	; (4004f8 <pio_handler_set+0x64>)
  400498:	6826      	ldr	r6, [r4, #0]
  40049a:	2e06      	cmp	r6, #6
  40049c:	d829      	bhi.n	4004f2 <pio_handler_set+0x5e>
  40049e:	f04f 0c00 	mov.w	ip, #0
  4004a2:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  4004a4:	4f15      	ldr	r7, [pc, #84]	; (4004fc <pio_handler_set+0x68>)
  4004a6:	e004      	b.n	4004b2 <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  4004a8:	3401      	adds	r4, #1
  4004aa:	b2e4      	uxtb	r4, r4
  4004ac:	46a4      	mov	ip, r4
  4004ae:	42a6      	cmp	r6, r4
  4004b0:	d309      	bcc.n	4004c6 <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  4004b2:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  4004b4:	0125      	lsls	r5, r4, #4
  4004b6:	597d      	ldr	r5, [r7, r5]
  4004b8:	428d      	cmp	r5, r1
  4004ba:	d1f5      	bne.n	4004a8 <pio_handler_set+0x14>
  4004bc:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  4004c0:	686d      	ldr	r5, [r5, #4]
  4004c2:	4295      	cmp	r5, r2
  4004c4:	d1f0      	bne.n	4004a8 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  4004c6:	4d0d      	ldr	r5, [pc, #52]	; (4004fc <pio_handler_set+0x68>)
  4004c8:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  4004cc:	eb05 040e 	add.w	r4, r5, lr
  4004d0:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  4004d4:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  4004d6:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  4004d8:	9906      	ldr	r1, [sp, #24]
  4004da:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  4004dc:	3601      	adds	r6, #1
  4004de:	4566      	cmp	r6, ip
		gs_ul_nb_sources++;
  4004e0:	bf04      	itt	eq
  4004e2:	4905      	ldreq	r1, [pc, #20]	; (4004f8 <pio_handler_set+0x64>)
  4004e4:	600e      	streq	r6, [r1, #0]
  4004e6:	4611      	mov	r1, r2
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  4004e8:	461a      	mov	r2, r3
  4004ea:	4b05      	ldr	r3, [pc, #20]	; (400500 <pio_handler_set+0x6c>)
  4004ec:	4798      	blx	r3

	return 0;
  4004ee:	2000      	movs	r0, #0
  4004f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return 1;
  4004f2:	2001      	movs	r0, #1
}
  4004f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4004f6:	bf00      	nop
  4004f8:	20000a4c 	.word	0x20000a4c
  4004fc:	200009dc 	.word	0x200009dc
  400500:	0040029f 	.word	0x0040029f

00400504 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400504:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400506:	210b      	movs	r1, #11
  400508:	4801      	ldr	r0, [pc, #4]	; (400510 <PIOA_Handler+0xc>)
  40050a:	4b02      	ldr	r3, [pc, #8]	; (400514 <PIOA_Handler+0x10>)
  40050c:	4798      	blx	r3
  40050e:	bd08      	pop	{r3, pc}
  400510:	400e0e00 	.word	0x400e0e00
  400514:	0040042d 	.word	0x0040042d

00400518 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400518:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  40051a:	210c      	movs	r1, #12
  40051c:	4801      	ldr	r0, [pc, #4]	; (400524 <PIOB_Handler+0xc>)
  40051e:	4b02      	ldr	r3, [pc, #8]	; (400528 <PIOB_Handler+0x10>)
  400520:	4798      	blx	r3
  400522:	bd08      	pop	{r3, pc}
  400524:	400e1000 	.word	0x400e1000
  400528:	0040042d 	.word	0x0040042d

0040052c <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  40052c:	4a17      	ldr	r2, [pc, #92]	; (40058c <pmc_switch_mck_to_pllack+0x60>)
  40052e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400530:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400534:	4318      	orrs	r0, r3
  400536:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400538:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40053a:	f013 0f08 	tst.w	r3, #8
  40053e:	d10a      	bne.n	400556 <pmc_switch_mck_to_pllack+0x2a>
  400540:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400544:	4911      	ldr	r1, [pc, #68]	; (40058c <pmc_switch_mck_to_pllack+0x60>)
  400546:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400548:	f012 0f08 	tst.w	r2, #8
  40054c:	d103      	bne.n	400556 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40054e:	3b01      	subs	r3, #1
  400550:	d1f9      	bne.n	400546 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400552:	2001      	movs	r0, #1
  400554:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400556:	4a0d      	ldr	r2, [pc, #52]	; (40058c <pmc_switch_mck_to_pllack+0x60>)
  400558:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40055a:	f023 0303 	bic.w	r3, r3, #3
  40055e:	f043 0302 	orr.w	r3, r3, #2
  400562:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400564:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400566:	f013 0f08 	tst.w	r3, #8
  40056a:	d10a      	bne.n	400582 <pmc_switch_mck_to_pllack+0x56>
  40056c:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400570:	4906      	ldr	r1, [pc, #24]	; (40058c <pmc_switch_mck_to_pllack+0x60>)
  400572:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400574:	f012 0f08 	tst.w	r2, #8
  400578:	d105      	bne.n	400586 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40057a:	3b01      	subs	r3, #1
  40057c:	d1f9      	bne.n	400572 <pmc_switch_mck_to_pllack+0x46>
			return 1;
  40057e:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400580:	4770      	bx	lr
	return 0;
  400582:	2000      	movs	r0, #0
  400584:	4770      	bx	lr
  400586:	2000      	movs	r0, #0
  400588:	4770      	bx	lr
  40058a:	bf00      	nop
  40058c:	400e0400 	.word	0x400e0400

00400590 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400590:	b9c8      	cbnz	r0, 4005c6 <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400592:	4a11      	ldr	r2, [pc, #68]	; (4005d8 <pmc_switch_mainck_to_xtal+0x48>)
  400594:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400596:	0209      	lsls	r1, r1, #8
  400598:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  40059a:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  40059e:	f023 0303 	bic.w	r3, r3, #3
  4005a2:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4005a6:	f043 0301 	orr.w	r3, r3, #1
  4005aa:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4005ac:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4005ae:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4005b0:	f013 0f01 	tst.w	r3, #1
  4005b4:	d0fb      	beq.n	4005ae <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  4005b6:	4a08      	ldr	r2, [pc, #32]	; (4005d8 <pmc_switch_mainck_to_xtal+0x48>)
  4005b8:	6a13      	ldr	r3, [r2, #32]
  4005ba:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  4005be:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4005c2:	6213      	str	r3, [r2, #32]
  4005c4:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4005c6:	4904      	ldr	r1, [pc, #16]	; (4005d8 <pmc_switch_mainck_to_xtal+0x48>)
  4005c8:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4005ca:	4a04      	ldr	r2, [pc, #16]	; (4005dc <pmc_switch_mainck_to_xtal+0x4c>)
  4005cc:	401a      	ands	r2, r3
  4005ce:	4b04      	ldr	r3, [pc, #16]	; (4005e0 <pmc_switch_mainck_to_xtal+0x50>)
  4005d0:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4005d2:	620b      	str	r3, [r1, #32]
  4005d4:	4770      	bx	lr
  4005d6:	bf00      	nop
  4005d8:	400e0400 	.word	0x400e0400
  4005dc:	fec8fffc 	.word	0xfec8fffc
  4005e0:	01370002 	.word	0x01370002

004005e4 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  4005e4:	4b02      	ldr	r3, [pc, #8]	; (4005f0 <pmc_osc_is_ready_mainck+0xc>)
  4005e6:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4005e8:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4005ec:	4770      	bx	lr
  4005ee:	bf00      	nop
  4005f0:	400e0400 	.word	0x400e0400

004005f4 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  4005f4:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4005f8:	4b01      	ldr	r3, [pc, #4]	; (400600 <pmc_disable_pllack+0xc>)
  4005fa:	629a      	str	r2, [r3, #40]	; 0x28
  4005fc:	4770      	bx	lr
  4005fe:	bf00      	nop
  400600:	400e0400 	.word	0x400e0400

00400604 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400604:	4b02      	ldr	r3, [pc, #8]	; (400610 <pmc_is_locked_pllack+0xc>)
  400606:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400608:	f000 0002 	and.w	r0, r0, #2
  40060c:	4770      	bx	lr
  40060e:	bf00      	nop
  400610:	400e0400 	.word	0x400e0400

00400614 <pmc_enable_pllbck>:
 * \param mulb PLLB multiplier.
 * \param pllbcount PLLB counter.
 * \param divb Divider.
 */
void pmc_enable_pllbck(uint32_t mulb, uint32_t pllbcount, uint32_t divb)
{
  400614:	b410      	push	{r4}
/**
 * \brief Disable PLLB clock.
 */
void pmc_disable_pllbck(void)
{
	PMC->CKGR_PLLBR = CKGR_PLLBR_MULB(0);
  400616:	4c0a      	ldr	r4, [pc, #40]	; (400640 <pmc_enable_pllbck+0x2c>)
  400618:	2300      	movs	r3, #0
  40061a:	62e3      	str	r3, [r4, #44]	; 0x2c
			CKGR_PLLBR_DIVB(divb) | CKGR_PLLBR_PLLBCOUNT(pllbcount)
  40061c:	0209      	lsls	r1, r1, #8
  40061e:	f401 517c 	and.w	r1, r1, #16128	; 0x3f00
  400622:	b2d2      	uxtb	r2, r2
  400624:	4311      	orrs	r1, r2
			| CKGR_PLLBR_MULB(mulb);
  400626:	4b07      	ldr	r3, [pc, #28]	; (400644 <pmc_enable_pllbck+0x30>)
  400628:	ea03 4000 	and.w	r0, r3, r0, lsl #16
  40062c:	4301      	orrs	r1, r0
	PMC->CKGR_PLLBR =
  40062e:	62e1      	str	r1, [r4, #44]	; 0x2c
	while ((PMC->PMC_SR & PMC_SR_LOCKB) == 0);
  400630:	4622      	mov	r2, r4
  400632:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400634:	f013 0f04 	tst.w	r3, #4
  400638:	d0fb      	beq.n	400632 <pmc_enable_pllbck+0x1e>
}
  40063a:	bc10      	pop	{r4}
  40063c:	4770      	bx	lr
  40063e:	bf00      	nop
  400640:	400e0400 	.word	0x400e0400
  400644:	07ff0000 	.word	0x07ff0000

00400648 <pmc_enable_periph_clk>:
	PMC->PMC_PCR = ul_id & 0x7F;
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
	PMC->PMC_PCR = pcr;
	return 0;
#else
	if (ul_id > MAX_PERIPH_ID) {
  400648:	2822      	cmp	r0, #34	; 0x22
  40064a:	d81e      	bhi.n	40068a <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  40064c:	281f      	cmp	r0, #31
  40064e:	d80c      	bhi.n	40066a <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400650:	4b11      	ldr	r3, [pc, #68]	; (400698 <pmc_enable_periph_clk+0x50>)
  400652:	699a      	ldr	r2, [r3, #24]
  400654:	2301      	movs	r3, #1
  400656:	4083      	lsls	r3, r0
  400658:	4393      	bics	r3, r2
  40065a:	d018      	beq.n	40068e <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  40065c:	2301      	movs	r3, #1
  40065e:	fa03 f000 	lsl.w	r0, r3, r0
  400662:	4b0d      	ldr	r3, [pc, #52]	; (400698 <pmc_enable_periph_clk+0x50>)
  400664:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400666:	2000      	movs	r0, #0
  400668:	4770      	bx	lr
		ul_id -= 32;
  40066a:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  40066c:	4b0a      	ldr	r3, [pc, #40]	; (400698 <pmc_enable_periph_clk+0x50>)
  40066e:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  400672:	2301      	movs	r3, #1
  400674:	4083      	lsls	r3, r0
  400676:	4393      	bics	r3, r2
  400678:	d00b      	beq.n	400692 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  40067a:	2301      	movs	r3, #1
  40067c:	fa03 f000 	lsl.w	r0, r3, r0
  400680:	4b05      	ldr	r3, [pc, #20]	; (400698 <pmc_enable_periph_clk+0x50>)
  400682:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  400686:	2000      	movs	r0, #0
  400688:	4770      	bx	lr
		return 1;
  40068a:	2001      	movs	r0, #1
  40068c:	4770      	bx	lr
	return 0;
  40068e:	2000      	movs	r0, #0
  400690:	4770      	bx	lr
  400692:	2000      	movs	r0, #0
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
  400694:	4770      	bx	lr
  400696:	bf00      	nop
  400698:	400e0400 	.word	0x400e0400

0040069c <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  40069c:	b508      	push	{r3, lr}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  40069e:	2015      	movs	r0, #21
  4006a0:	4b01      	ldr	r3, [pc, #4]	; (4006a8 <spi_enable_clock+0xc>)
  4006a2:	4798      	blx	r3
  4006a4:	bd08      	pop	{r3, pc}
  4006a6:	bf00      	nop
  4006a8:	00400649 	.word	0x00400649

004006ac <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  4006ac:	6843      	ldr	r3, [r0, #4]
  4006ae:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  4006b2:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  4006b4:	6843      	ldr	r3, [r0, #4]
  4006b6:	0409      	lsls	r1, r1, #16
  4006b8:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  4006bc:	4319      	orrs	r1, r3
  4006be:	6041      	str	r1, [r0, #4]
  4006c0:	4770      	bx	lr

004006c2 <spi_read>:
 *
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_read(Spi *p_spi, uint16_t *us_data, uint8_t *p_pcs)
{
  4006c2:	b410      	push	{r4}
	uint32_t timeout = SPI_TIMEOUT;
	static uint32_t reg_value;

	while (!(p_spi->SPI_SR & SPI_SR_RDRF)) {
  4006c4:	f643 2399 	movw	r3, #15001	; 0x3a99
  4006c8:	6904      	ldr	r4, [r0, #16]
  4006ca:	f014 0f01 	tst.w	r4, #1
  4006ce:	d103      	bne.n	4006d8 <spi_read+0x16>
		if (!timeout--) {
  4006d0:	3b01      	subs	r3, #1
  4006d2:	d1f9      	bne.n	4006c8 <spi_read+0x6>
			return SPI_ERROR_TIMEOUT;
  4006d4:	2001      	movs	r0, #1
  4006d6:	e009      	b.n	4006ec <spi_read+0x2a>
		}
	}

	reg_value = p_spi->SPI_RDR;
  4006d8:	6883      	ldr	r3, [r0, #8]
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  4006da:	6840      	ldr	r0, [r0, #4]
	if (spi_get_peripheral_select_mode(p_spi)) {
  4006dc:	f010 0f02 	tst.w	r0, #2
		*p_pcs = (uint8_t) ((reg_value & SPI_RDR_PCS_Msk) >> SPI_RDR_PCS_Pos);
  4006e0:	bf1c      	itt	ne
  4006e2:	f3c3 4003 	ubfxne	r0, r3, #16, #4
  4006e6:	7010      	strbne	r0, [r2, #0]
	}
	*us_data = (uint16_t) (reg_value & SPI_RDR_RD_Msk);
  4006e8:	800b      	strh	r3, [r1, #0]

	return SPI_OK;
  4006ea:	2000      	movs	r0, #0
}
  4006ec:	bc10      	pop	{r4}
  4006ee:	4770      	bx	lr

004006f0 <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  4006f0:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  4006f2:	f643 2499 	movw	r4, #15001	; 0x3a99
  4006f6:	6905      	ldr	r5, [r0, #16]
  4006f8:	f015 0f02 	tst.w	r5, #2
  4006fc:	d103      	bne.n	400706 <spi_write+0x16>
		if (!timeout--) {
  4006fe:	3c01      	subs	r4, #1
  400700:	d1f9      	bne.n	4006f6 <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  400702:	2001      	movs	r0, #1
  400704:	e00c      	b.n	400720 <spi_write+0x30>
  400706:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  400708:	f014 0f02 	tst.w	r4, #2
  40070c:	d006      	beq.n	40071c <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  40070e:	0412      	lsls	r2, r2, #16
  400710:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  400714:	4311      	orrs	r1, r2
		if (uc_last) {
  400716:	b10b      	cbz	r3, 40071c <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  400718:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  40071c:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  40071e:	2000      	movs	r0, #0
}
  400720:	bc30      	pop	{r4, r5}
  400722:	4770      	bx	lr

00400724 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  400724:	b932      	cbnz	r2, 400734 <spi_set_clock_polarity+0x10>
  400726:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  40072a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40072c:	f023 0301 	bic.w	r3, r3, #1
  400730:	6303      	str	r3, [r0, #48]	; 0x30
  400732:	4770      	bx	lr
  400734:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  400738:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40073a:	f043 0301 	orr.w	r3, r3, #1
  40073e:	6303      	str	r3, [r0, #48]	; 0x30
  400740:	4770      	bx	lr

00400742 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  400742:	b932      	cbnz	r2, 400752 <spi_set_clock_phase+0x10>
  400744:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  400748:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40074a:	f023 0302 	bic.w	r3, r3, #2
  40074e:	6303      	str	r3, [r0, #48]	; 0x30
  400750:	4770      	bx	lr
  400752:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  400756:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400758:	f043 0302 	orr.w	r3, r3, #2
  40075c:	6303      	str	r3, [r0, #48]	; 0x30
  40075e:	4770      	bx	lr

00400760 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  400760:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  400764:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400766:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  40076a:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  40076c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40076e:	431a      	orrs	r2, r3
  400770:	630a      	str	r2, [r1, #48]	; 0x30
  400772:	4770      	bx	lr

00400774 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  400774:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400776:	0189      	lsls	r1, r1, #6
  400778:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  40077a:	2402      	movs	r4, #2
  40077c:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  40077e:	f04f 31ff 	mov.w	r1, #4294967295
  400782:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  400784:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  400786:	605a      	str	r2, [r3, #4]
}
  400788:	bc10      	pop	{r4}
  40078a:	4770      	bx	lr

0040078c <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  40078c:	0189      	lsls	r1, r1, #6
  40078e:	2305      	movs	r3, #5
  400790:	5043      	str	r3, [r0, r1]
  400792:	4770      	bx	lr

00400794 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  400794:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  400798:	61ca      	str	r2, [r1, #28]
  40079a:	4770      	bx	lr

0040079c <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  40079c:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
  4007a0:	624a      	str	r2, [r1, #36]	; 0x24
  4007a2:	4770      	bx	lr

004007a4 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4007a4:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
  4007a8:	6a08      	ldr	r0, [r1, #32]
}
  4007aa:	4770      	bx	lr

004007ac <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  4007ac:	b4f0      	push	{r4, r5, r6, r7}
  4007ae:	b086      	sub	sp, #24
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  4007b0:	2402      	movs	r4, #2
  4007b2:	9401      	str	r4, [sp, #4]
  4007b4:	2408      	movs	r4, #8
  4007b6:	9402      	str	r4, [sp, #8]
  4007b8:	2420      	movs	r4, #32
  4007ba:	9403      	str	r4, [sp, #12]
  4007bc:	2480      	movs	r4, #128	; 0x80
  4007be:	9404      	str	r4, [sp, #16]
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
  4007c0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  4007c2:	0be4      	lsrs	r4, r4, #15
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  4007c4:	9405      	str	r4, [sp, #20]
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
		if (ul_freq > ul_high) {
  4007c6:	ebb0 0f51 	cmp.w	r0, r1, lsr #1
  4007ca:	d814      	bhi.n	4007f6 <tc_find_mck_divisor+0x4a>
  4007cc:	0c4c      	lsrs	r4, r1, #17
			return 0;
		} else if (ul_freq >= ul_low) {
  4007ce:	42a0      	cmp	r0, r4
  4007d0:	d217      	bcs.n	400802 <tc_find_mck_divisor+0x56>
  4007d2:	2501      	movs	r5, #1
		ul_high = ul_mck / divisors[ul_index];
  4007d4:	af01      	add	r7, sp, #4
  4007d6:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
  4007da:	fbb1 f4f4 	udiv	r4, r1, r4
		ul_low  = ul_high / TC_DIV_FACTOR;
  4007de:	0c26      	lsrs	r6, r4, #16
		if (ul_freq > ul_high) {
  4007e0:	4284      	cmp	r4, r0
  4007e2:	d30a      	bcc.n	4007fa <tc_find_mck_divisor+0x4e>
		} else if (ul_freq >= ul_low) {
  4007e4:	4286      	cmp	r6, r0
  4007e6:	d90d      	bls.n	400804 <tc_find_mck_divisor+0x58>
			ul_index++) {
  4007e8:	3501      	adds	r5, #1
	for (ul_index = 0;
  4007ea:	2d05      	cmp	r5, #5
  4007ec:	d1f3      	bne.n	4007d6 <tc_find_mck_divisor+0x2a>
			break;
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
		return 0;
  4007ee:	2000      	movs	r0, #0
	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
}
  4007f0:	b006      	add	sp, #24
  4007f2:	bcf0      	pop	{r4, r5, r6, r7}
  4007f4:	4770      	bx	lr
			return 0;
  4007f6:	2000      	movs	r0, #0
  4007f8:	e7fa      	b.n	4007f0 <tc_find_mck_divisor+0x44>
  4007fa:	2000      	movs	r0, #0
  4007fc:	e7f8      	b.n	4007f0 <tc_find_mck_divisor+0x44>
	return 1;
  4007fe:	2001      	movs	r0, #1
  400800:	e7f6      	b.n	4007f0 <tc_find_mck_divisor+0x44>
	for (ul_index = 0;
  400802:	2500      	movs	r5, #0
	if (p_uldiv) {
  400804:	b12a      	cbz	r2, 400812 <tc_find_mck_divisor+0x66>
		*p_uldiv = divisors[ul_index];
  400806:	a906      	add	r1, sp, #24
  400808:	eb01 0185 	add.w	r1, r1, r5, lsl #2
  40080c:	f851 1c14 	ldr.w	r1, [r1, #-20]
  400810:	6011      	str	r1, [r2, #0]
	if (p_ultcclks) {
  400812:	2b00      	cmp	r3, #0
  400814:	d0f3      	beq.n	4007fe <tc_find_mck_divisor+0x52>
		*p_ultcclks = ul_index;
  400816:	601d      	str	r5, [r3, #0]
	return 1;
  400818:	2001      	movs	r0, #1
  40081a:	e7e9      	b.n	4007f0 <tc_find_mck_divisor+0x44>

0040081c <twi_set_speed>:
{
	uint32_t ckdiv = 0;
	uint32_t c_lh_div;
	uint32_t cldiv, chdiv;

	if (ul_speed > I2C_FAST_MODE_SPEED) {
  40081c:	4b2a      	ldr	r3, [pc, #168]	; (4008c8 <twi_set_speed+0xac>)
  40081e:	4299      	cmp	r1, r3
  400820:	d849      	bhi.n	4008b6 <twi_set_speed+0x9a>
		return FAIL;
	}

	/* Low level time not less than 1.3us of I2C Fast Mode. */
	if (ul_speed > LOW_LEVEL_TIME_LIMIT) {
  400822:	f5a3 537a 	sub.w	r3, r3, #16000	; 0x3e80
  400826:	4299      	cmp	r1, r3
  400828:	d92b      	bls.n	400882 <twi_set_speed+0x66>
{
  40082a:	b410      	push	{r4}
		/* Low level of time fixed for 1.3us. */
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  40082c:	4c27      	ldr	r4, [pc, #156]	; (4008cc <twi_set_speed+0xb0>)
  40082e:	fba4 3402 	umull	r3, r4, r4, r2
  400832:	0ba4      	lsrs	r4, r4, #14
  400834:	3c04      	subs	r4, #4
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  400836:	4b26      	ldr	r3, [pc, #152]	; (4008d0 <twi_set_speed+0xb4>)
  400838:	440b      	add	r3, r1
  40083a:	009b      	lsls	r3, r3, #2
  40083c:	fbb2 f2f3 	udiv	r2, r2, r3
  400840:	3a04      	subs	r2, #4
		
		/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400842:	2cff      	cmp	r4, #255	; 0xff
  400844:	d939      	bls.n	4008ba <twi_set_speed+0x9e>
  400846:	2100      	movs	r1, #0
			/* Increase clock divider */
			ckdiv++;
  400848:	3101      	adds	r1, #1
			/* Divide cldiv value */
			cldiv /= TWI_CLK_DIVIDER;
  40084a:	0864      	lsrs	r4, r4, #1
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40084c:	2cff      	cmp	r4, #255	; 0xff
  40084e:	d90d      	bls.n	40086c <twi_set_speed+0x50>
  400850:	2907      	cmp	r1, #7
  400852:	d1f9      	bne.n	400848 <twi_set_speed+0x2c>
			chdiv /= TWI_CLK_DIVIDER;
		}

		/* set clock waveform generator register */
		p_twi->TWI_CWGR =
				TWI_CWGR_CLDIV(cldiv) | TWI_CWGR_CHDIV(chdiv) |
  400854:	0213      	lsls	r3, r2, #8
  400856:	b29b      	uxth	r3, r3
				TWI_CWGR_CKDIV(ckdiv);		
  400858:	0409      	lsls	r1, r1, #16
  40085a:	f401 21e0 	and.w	r1, r1, #458752	; 0x70000
				TWI_CWGR_CLDIV(cldiv) | TWI_CWGR_CHDIV(chdiv) |
  40085e:	430b      	orrs	r3, r1
  400860:	b2e4      	uxtb	r4, r4
  400862:	4323      	orrs	r3, r4
		p_twi->TWI_CWGR =
  400864:	6103      	str	r3, [r0, #16]
		p_twi->TWI_CWGR =
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
				TWI_CWGR_CKDIV(ckdiv);
	}

	return PASS;
  400866:	2000      	movs	r0, #0
}
  400868:	bc10      	pop	{r4}
  40086a:	4770      	bx	lr
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40086c:	2aff      	cmp	r2, #255	; 0xff
  40086e:	d9f1      	bls.n	400854 <twi_set_speed+0x38>
  400870:	2906      	cmp	r1, #6
  400872:	d8ef      	bhi.n	400854 <twi_set_speed+0x38>
			ckdiv++;
  400874:	3101      	adds	r1, #1
			chdiv /= TWI_CLK_DIVIDER;
  400876:	0852      	lsrs	r2, r2, #1
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400878:	2aff      	cmp	r2, #255	; 0xff
  40087a:	d9eb      	bls.n	400854 <twi_set_speed+0x38>
  40087c:	2906      	cmp	r1, #6
  40087e:	d9f9      	bls.n	400874 <twi_set_speed+0x58>
  400880:	e7e8      	b.n	400854 <twi_set_speed+0x38>
		c_lh_div = ul_mck / (ul_speed * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  400882:	0049      	lsls	r1, r1, #1
  400884:	fbb2 f2f1 	udiv	r2, r2, r1
  400888:	3a04      	subs	r2, #4
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40088a:	2aff      	cmp	r2, #255	; 0xff
  40088c:	d911      	bls.n	4008b2 <twi_set_speed+0x96>
  40088e:	2300      	movs	r3, #0
			ckdiv++;
  400890:	3301      	adds	r3, #1
			c_lh_div /= TWI_CLK_DIVIDER;
  400892:	0852      	lsrs	r2, r2, #1
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400894:	2aff      	cmp	r2, #255	; 0xff
  400896:	d901      	bls.n	40089c <twi_set_speed+0x80>
  400898:	2b07      	cmp	r3, #7
  40089a:	d1f9      	bne.n	400890 <twi_set_speed+0x74>
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
  40089c:	0211      	lsls	r1, r2, #8
  40089e:	b289      	uxth	r1, r1
				TWI_CWGR_CKDIV(ckdiv);
  4008a0:	041b      	lsls	r3, r3, #16
  4008a2:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
  4008a6:	430b      	orrs	r3, r1
  4008a8:	b2d2      	uxtb	r2, r2
  4008aa:	431a      	orrs	r2, r3
		p_twi->TWI_CWGR =
  4008ac:	6102      	str	r2, [r0, #16]
	return PASS;
  4008ae:	2000      	movs	r0, #0
  4008b0:	4770      	bx	lr
	uint32_t ckdiv = 0;
  4008b2:	2300      	movs	r3, #0
  4008b4:	e7f2      	b.n	40089c <twi_set_speed+0x80>
		return FAIL;
  4008b6:	2001      	movs	r0, #1
  4008b8:	4770      	bx	lr
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4008ba:	2aff      	cmp	r2, #255	; 0xff
	uint32_t ckdiv = 0;
  4008bc:	bf88      	it	hi
  4008be:	2100      	movhi	r1, #0
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4008c0:	d8d8      	bhi.n	400874 <twi_set_speed+0x58>
	uint32_t ckdiv = 0;
  4008c2:	2100      	movs	r1, #0
  4008c4:	e7c6      	b.n	400854 <twi_set_speed+0x38>
  4008c6:	bf00      	nop
  4008c8:	00061a80 	.word	0x00061a80
  4008cc:	057619f1 	.word	0x057619f1
  4008d0:	3ffd1200 	.word	0x3ffd1200

004008d4 <twi_master_init>:
{
  4008d4:	b538      	push	{r3, r4, r5, lr}
  4008d6:	4604      	mov	r4, r0
  4008d8:	460d      	mov	r5, r1
	p_twi->TWI_IDR = ~0UL;
  4008da:	f04f 33ff 	mov.w	r3, #4294967295
  4008de:	6283      	str	r3, [r0, #40]	; 0x28
	p_twi->TWI_SR;
  4008e0:	6a03      	ldr	r3, [r0, #32]
 * \param p_twi Pointer to a TWI instance.
 */
void twi_reset(Twi *p_twi)
{
	/* Set SWRST bit to reset TWI peripheral */
	p_twi->TWI_CR = TWI_CR_SWRST;
  4008e2:	2380      	movs	r3, #128	; 0x80
  4008e4:	6003      	str	r3, [r0, #0]
	p_twi->TWI_RHR;
  4008e6:	6b03      	ldr	r3, [r0, #48]	; 0x30
	p_twi->TWI_CR = TWI_CR_MSDIS;
  4008e8:	2308      	movs	r3, #8
  4008ea:	6003      	str	r3, [r0, #0]
	p_twi->TWI_CR = TWI_CR_SVDIS;
  4008ec:	2320      	movs	r3, #32
  4008ee:	6003      	str	r3, [r0, #0]
	p_twi->TWI_CR = TWI_CR_MSEN;
  4008f0:	2304      	movs	r3, #4
  4008f2:	6003      	str	r3, [r0, #0]
	if (twi_set_speed(p_twi, p_opt->speed, p_opt->master_clk) == FAIL) {
  4008f4:	680a      	ldr	r2, [r1, #0]
  4008f6:	6849      	ldr	r1, [r1, #4]
  4008f8:	4b05      	ldr	r3, [pc, #20]	; (400910 <twi_master_init+0x3c>)
  4008fa:	4798      	blx	r3
  4008fc:	2801      	cmp	r0, #1
  4008fe:	bf14      	ite	ne
  400900:	2000      	movne	r0, #0
  400902:	2001      	moveq	r0, #1
	if (p_opt->smbus == 1) {
  400904:	7a6b      	ldrb	r3, [r5, #9]
  400906:	2b01      	cmp	r3, #1
		p_twi->TWI_CR = TWI_CR_QUICK;
  400908:	bf04      	itt	eq
  40090a:	2340      	moveq	r3, #64	; 0x40
  40090c:	6023      	streq	r3, [r4, #0]
}
  40090e:	bd38      	pop	{r3, r4, r5, pc}
  400910:	0040081d 	.word	0x0040081d

00400914 <twi_mk_addr>:
	if (len == 0)
  400914:	460a      	mov	r2, r1
  400916:	b159      	cbz	r1, 400930 <twi_mk_addr+0x1c>
	val = addr[0];
  400918:	7803      	ldrb	r3, [r0, #0]
	if (len > 1) {
  40091a:	2901      	cmp	r1, #1
		val |= addr[1];
  40091c:	bfc4      	itt	gt
  40091e:	7841      	ldrbgt	r1, [r0, #1]
  400920:	ea41 2303 	orrgt.w	r3, r1, r3, lsl #8
	if (len > 2) {
  400924:	2a02      	cmp	r2, #2
  400926:	dd04      	ble.n	400932 <twi_mk_addr+0x1e>
		val |= addr[2];
  400928:	7882      	ldrb	r2, [r0, #2]
  40092a:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
  40092e:	e000      	b.n	400932 <twi_mk_addr+0x1e>
		return 0;
  400930:	2300      	movs	r3, #0
}
  400932:	4618      	mov	r0, r3
  400934:	4770      	bx	lr
	...

00400938 <twi_master_read>:
{
  400938:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	uint32_t cnt = p_packet->length;
  40093a:	68cc      	ldr	r4, [r1, #12]
	if (cnt == 0) {
  40093c:	2c00      	cmp	r4, #0
  40093e:	d04f      	beq.n	4009e0 <twi_master_read+0xa8>
  400940:	460b      	mov	r3, r1
  400942:	4605      	mov	r5, r0
	uint8_t *buffer = p_packet->buffer;
  400944:	688e      	ldr	r6, [r1, #8]
	p_twi->TWI_MMR = 0;
  400946:	2000      	movs	r0, #0
  400948:	6068      	str	r0, [r5, #4]
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
  40094a:	684a      	ldr	r2, [r1, #4]
  40094c:	0212      	lsls	r2, r2, #8
  40094e:	f402 7240 	and.w	r2, r2, #768	; 0x300
	p_twi->TWI_MMR = TWI_MMR_MREAD | TWI_MMR_DADR(p_packet->chip) |
  400952:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
  400956:	7c09      	ldrb	r1, [r1, #16]
  400958:	0409      	lsls	r1, r1, #16
  40095a:	f401 01fe 	and.w	r1, r1, #8323072	; 0x7f0000
  40095e:	430a      	orrs	r2, r1
  400960:	606a      	str	r2, [r5, #4]
	p_twi->TWI_IADR = 0;
  400962:	60e8      	str	r0, [r5, #12]
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  400964:	6859      	ldr	r1, [r3, #4]
  400966:	4618      	mov	r0, r3
  400968:	4b22      	ldr	r3, [pc, #136]	; (4009f4 <twi_master_read+0xbc>)
  40096a:	4798      	blx	r3
  40096c:	60e8      	str	r0, [r5, #12]
	if (cnt == 1) {
  40096e:	2c01      	cmp	r4, #1
  400970:	d00f      	beq.n	400992 <twi_master_read+0x5a>
		p_twi->TWI_CR = TWI_CR_START;
  400972:	2301      	movs	r3, #1
  400974:	602b      	str	r3, [r5, #0]
		stop_sent = 0;
  400976:	2000      	movs	r0, #0
		status = p_twi->TWI_SR;
  400978:	6a2b      	ldr	r3, [r5, #32]
		if (status & TWI_SR_NACK) {
  40097a:	f413 7f80 	tst.w	r3, #256	; 0x100
  40097e:	d136      	bne.n	4009ee <twi_master_read+0xb6>
  400980:	f247 512f 	movw	r1, #29999	; 0x752f
		timeout = TWI_TIMEOUT;
  400984:	f247 5730 	movw	r7, #30000	; 0x7530
		if (!(status & TWI_SR_RXRDY)) {
  400988:	f04f 0e01 	mov.w	lr, #1
			p_twi->TWI_CR = TWI_CR_STOP;
  40098c:	f04f 0c02 	mov.w	ip, #2
  400990:	e019      	b.n	4009c6 <twi_master_read+0x8e>
		p_twi->TWI_CR = TWI_CR_START | TWI_CR_STOP;
  400992:	2303      	movs	r3, #3
  400994:	602b      	str	r3, [r5, #0]
		stop_sent = 1;
  400996:	2001      	movs	r0, #1
  400998:	e7ee      	b.n	400978 <twi_master_read+0x40>
		if (!(status & TWI_SR_RXRDY)) {
  40099a:	460a      	mov	r2, r1
  40099c:	4670      	mov	r0, lr
  40099e:	e00c      	b.n	4009ba <twi_master_read+0x82>
		if (cnt == 1  && !stop_sent) {
  4009a0:	b908      	cbnz	r0, 4009a6 <twi_master_read+0x6e>
			p_twi->TWI_CR = TWI_CR_STOP;
  4009a2:	f8c5 c000 	str.w	ip, [r5]
		if (!(status & TWI_SR_RXRDY)) {
  4009a6:	f013 0f02 	tst.w	r3, #2
  4009aa:	d0f6      	beq.n	40099a <twi_master_read+0x62>
  4009ac:	4670      	mov	r0, lr
		*buffer++ = p_twi->TWI_RHR;
  4009ae:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  4009b0:	7033      	strb	r3, [r6, #0]
		cnt--;
  4009b2:	3c01      	subs	r4, #1
		*buffer++ = p_twi->TWI_RHR;
  4009b4:	3601      	adds	r6, #1
		timeout = TWI_TIMEOUT;
  4009b6:	463a      	mov	r2, r7
	while (cnt > 0) {
  4009b8:	b164      	cbz	r4, 4009d4 <twi_master_read+0x9c>
		status = p_twi->TWI_SR;
  4009ba:	6a2b      	ldr	r3, [r5, #32]
		if (status & TWI_SR_NACK) {
  4009bc:	f413 7f80 	tst.w	r3, #256	; 0x100
  4009c0:	d111      	bne.n	4009e6 <twi_master_read+0xae>
		if (!timeout--) {
  4009c2:	1e51      	subs	r1, r2, #1
  4009c4:	b18a      	cbz	r2, 4009ea <twi_master_read+0xb2>
		if (cnt == 1  && !stop_sent) {
  4009c6:	2c01      	cmp	r4, #1
  4009c8:	d0ea      	beq.n	4009a0 <twi_master_read+0x68>
		if (!(status & TWI_SR_RXRDY)) {
  4009ca:	f013 0f02 	tst.w	r3, #2
  4009ce:	d1ee      	bne.n	4009ae <twi_master_read+0x76>
  4009d0:	460a      	mov	r2, r1
  4009d2:	e7f1      	b.n	4009b8 <twi_master_read+0x80>
	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
  4009d4:	6a2b      	ldr	r3, [r5, #32]
  4009d6:	f013 0f01 	tst.w	r3, #1
  4009da:	d0fb      	beq.n	4009d4 <twi_master_read+0x9c>
	p_twi->TWI_SR;
  4009dc:	6a2b      	ldr	r3, [r5, #32]
	return TWI_SUCCESS;
  4009de:	e000      	b.n	4009e2 <twi_master_read+0xaa>
		return TWI_INVALID_ARGUMENT;
  4009e0:	2401      	movs	r4, #1
}
  4009e2:	4620      	mov	r0, r4
  4009e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			return TWI_RECEIVE_NACK;
  4009e6:	2405      	movs	r4, #5
  4009e8:	e7fb      	b.n	4009e2 <twi_master_read+0xaa>
			return TWI_ERROR_TIMEOUT;
  4009ea:	2409      	movs	r4, #9
  4009ec:	e7f9      	b.n	4009e2 <twi_master_read+0xaa>
			return TWI_RECEIVE_NACK;
  4009ee:	2405      	movs	r4, #5
  4009f0:	e7f7      	b.n	4009e2 <twi_master_read+0xaa>
  4009f2:	bf00      	nop
  4009f4:	00400915 	.word	0x00400915

004009f8 <twi_master_write>:
{
  4009f8:	b570      	push	{r4, r5, r6, lr}
	uint32_t cnt = p_packet->length;
  4009fa:	68cd      	ldr	r5, [r1, #12]
	if (cnt == 0) {
  4009fc:	2d00      	cmp	r5, #0
  4009fe:	d035      	beq.n	400a6c <twi_master_write+0x74>
  400a00:	460b      	mov	r3, r1
  400a02:	4604      	mov	r4, r0
	uint8_t *buffer = p_packet->buffer;
  400a04:	688e      	ldr	r6, [r1, #8]
	p_twi->TWI_MMR = 0;
  400a06:	2000      	movs	r0, #0
  400a08:	6060      	str	r0, [r4, #4]
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  400a0a:	7c0a      	ldrb	r2, [r1, #16]
  400a0c:	0412      	lsls	r2, r2, #16
  400a0e:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
  400a12:	6849      	ldr	r1, [r1, #4]
  400a14:	0209      	lsls	r1, r1, #8
  400a16:	f401 7140 	and.w	r1, r1, #768	; 0x300
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  400a1a:	430a      	orrs	r2, r1
  400a1c:	6062      	str	r2, [r4, #4]
	p_twi->TWI_IADR = 0;
  400a1e:	60e0      	str	r0, [r4, #12]
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  400a20:	6859      	ldr	r1, [r3, #4]
  400a22:	4618      	mov	r0, r3
  400a24:	4b15      	ldr	r3, [pc, #84]	; (400a7c <twi_master_write+0x84>)
  400a26:	4798      	blx	r3
  400a28:	60e0      	str	r0, [r4, #12]
		status = p_twi->TWI_SR;
  400a2a:	6a23      	ldr	r3, [r4, #32]
		if (status & TWI_SR_NACK) {
  400a2c:	f413 7f80 	tst.w	r3, #256	; 0x100
  400a30:	d006      	beq.n	400a40 <twi_master_write+0x48>
			return TWI_RECEIVE_NACK;
  400a32:	2505      	movs	r5, #5
  400a34:	e01b      	b.n	400a6e <twi_master_write+0x76>
	while (cnt > 0) {
  400a36:	b15d      	cbz	r5, 400a50 <twi_master_write+0x58>
		status = p_twi->TWI_SR;
  400a38:	6a23      	ldr	r3, [r4, #32]
		if (status & TWI_SR_NACK) {
  400a3a:	f413 7f80 	tst.w	r3, #256	; 0x100
  400a3e:	d118      	bne.n	400a72 <twi_master_write+0x7a>
		if (!(status & TWI_SR_TXRDY)) {
  400a40:	f013 0f04 	tst.w	r3, #4
  400a44:	d0f7      	beq.n	400a36 <twi_master_write+0x3e>
		p_twi->TWI_THR = *buffer++;
  400a46:	7833      	ldrb	r3, [r6, #0]
  400a48:	6363      	str	r3, [r4, #52]	; 0x34
		cnt--;
  400a4a:	3d01      	subs	r5, #1
		p_twi->TWI_THR = *buffer++;
  400a4c:	3601      	adds	r6, #1
  400a4e:	e7f2      	b.n	400a36 <twi_master_write+0x3e>
		status = p_twi->TWI_SR;
  400a50:	6a23      	ldr	r3, [r4, #32]
		if (status & TWI_SR_NACK) {
  400a52:	f413 7f80 	tst.w	r3, #256	; 0x100
  400a56:	d10e      	bne.n	400a76 <twi_master_write+0x7e>
		if (status & TWI_SR_TXRDY) {
  400a58:	f013 0f04 	tst.w	r3, #4
  400a5c:	d0f8      	beq.n	400a50 <twi_master_write+0x58>
	p_twi->TWI_CR = TWI_CR_STOP;
  400a5e:	2302      	movs	r3, #2
  400a60:	6023      	str	r3, [r4, #0]
	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
  400a62:	6a23      	ldr	r3, [r4, #32]
  400a64:	f013 0f01 	tst.w	r3, #1
  400a68:	d0fb      	beq.n	400a62 <twi_master_write+0x6a>
  400a6a:	e000      	b.n	400a6e <twi_master_write+0x76>
		return TWI_INVALID_ARGUMENT;
  400a6c:	2501      	movs	r5, #1
}
  400a6e:	4628      	mov	r0, r5
  400a70:	bd70      	pop	{r4, r5, r6, pc}
			return TWI_RECEIVE_NACK;
  400a72:	2505      	movs	r5, #5
  400a74:	e7fb      	b.n	400a6e <twi_master_write+0x76>
			return TWI_RECEIVE_NACK;
  400a76:	2505      	movs	r5, #5
  400a78:	e7f9      	b.n	400a6e <twi_master_write+0x76>
  400a7a:	bf00      	nop
  400a7c:	00400915 	.word	0x00400915

00400a80 <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
  400a80:	b410      	push	{r4}
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  400a82:	010b      	lsls	r3, r1, #4
  400a84:	4293      	cmp	r3, r2
  400a86:	d914      	bls.n	400ab2 <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  400a88:	00c9      	lsls	r1, r1, #3
  400a8a:	084b      	lsrs	r3, r1, #1
  400a8c:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  400a90:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
  400a94:	08d3      	lsrs	r3, r2, #3
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  400a96:	1e5c      	subs	r4, r3, #1
  400a98:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  400a9c:	428c      	cmp	r4, r1
  400a9e:	d901      	bls.n	400aa4 <usart_set_async_baudrate+0x24>
		return 1;
  400aa0:	2001      	movs	r0, #1
  400aa2:	e017      	b.n	400ad4 <usart_set_async_baudrate+0x54>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
  400aa4:	6841      	ldr	r1, [r0, #4]
  400aa6:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
  400aaa:	6041      	str	r1, [r0, #4]
  400aac:	e00c      	b.n	400ac8 <usart_set_async_baudrate+0x48>
		return 1;
  400aae:	2001      	movs	r0, #1
  400ab0:	e010      	b.n	400ad4 <usart_set_async_baudrate+0x54>
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  400ab2:	0859      	lsrs	r1, r3, #1
  400ab4:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
  400ab8:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
  400abc:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  400abe:	1e5c      	subs	r4, r3, #1
  400ac0:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  400ac4:	428c      	cmp	r4, r1
  400ac6:	d8f2      	bhi.n	400aae <usart_set_async_baudrate+0x2e>
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  400ac8:	0412      	lsls	r2, r2, #16
  400aca:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  400ace:	431a      	orrs	r2, r3
  400ad0:	6202      	str	r2, [r0, #32]

	return 0;
  400ad2:	2000      	movs	r0, #0
}
  400ad4:	bc10      	pop	{r4}
  400ad6:	4770      	bx	lr

00400ad8 <usart_reset>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  400ad8:	4b0a      	ldr	r3, [pc, #40]	; (400b04 <usart_reset+0x2c>)
  400ada:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
  400ade:	2300      	movs	r3, #0
  400ae0:	6043      	str	r3, [r0, #4]
	p_usart->US_RTOR = 0;
  400ae2:	6243      	str	r3, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
  400ae4:	6283      	str	r3, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  400ae6:	2388      	movs	r3, #136	; 0x88
  400ae8:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  400aea:	2324      	movs	r3, #36	; 0x24
  400aec:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
  400aee:	f44f 7380 	mov.w	r3, #256	; 0x100
  400af2:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RTSDIS;
  400af4:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  400af8:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_DTRDIS;
  400afa:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  400afe:	6003      	str	r3, [r0, #0]
  400b00:	4770      	bx	lr
  400b02:	bf00      	nop
  400b04:	55534100 	.word	0x55534100

00400b08 <usart_init_rs232>:
{
  400b08:	b570      	push	{r4, r5, r6, lr}
  400b0a:	4605      	mov	r5, r0
  400b0c:	460c      	mov	r4, r1
  400b0e:	4616      	mov	r6, r2
	usart_reset(p_usart);
  400b10:	4b0f      	ldr	r3, [pc, #60]	; (400b50 <usart_init_rs232+0x48>)
  400b12:	4798      	blx	r3
	ul_reg_val = 0;
  400b14:	2200      	movs	r2, #0
  400b16:	4b0f      	ldr	r3, [pc, #60]	; (400b54 <usart_init_rs232+0x4c>)
  400b18:	601a      	str	r2, [r3, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  400b1a:	b1a4      	cbz	r4, 400b46 <usart_init_rs232+0x3e>
  400b1c:	4632      	mov	r2, r6
  400b1e:	6821      	ldr	r1, [r4, #0]
  400b20:	4628      	mov	r0, r5
  400b22:	4b0d      	ldr	r3, [pc, #52]	; (400b58 <usart_init_rs232+0x50>)
  400b24:	4798      	blx	r3
  400b26:	4602      	mov	r2, r0
  400b28:	b978      	cbnz	r0, 400b4a <usart_init_rs232+0x42>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400b2a:	6863      	ldr	r3, [r4, #4]
  400b2c:	68a1      	ldr	r1, [r4, #8]
  400b2e:	430b      	orrs	r3, r1
  400b30:	6921      	ldr	r1, [r4, #16]
  400b32:	430b      	orrs	r3, r1
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  400b34:	68e1      	ldr	r1, [r4, #12]
  400b36:	430b      	orrs	r3, r1
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400b38:	4906      	ldr	r1, [pc, #24]	; (400b54 <usart_init_rs232+0x4c>)
  400b3a:	600b      	str	r3, [r1, #0]
	p_usart->US_MR |= ul_reg_val;
  400b3c:	6869      	ldr	r1, [r5, #4]
  400b3e:	430b      	orrs	r3, r1
  400b40:	606b      	str	r3, [r5, #4]
}
  400b42:	4610      	mov	r0, r2
  400b44:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
  400b46:	2201      	movs	r2, #1
  400b48:	e7fb      	b.n	400b42 <usart_init_rs232+0x3a>
  400b4a:	2201      	movs	r2, #1
  400b4c:	e7f9      	b.n	400b42 <usart_init_rs232+0x3a>
  400b4e:	bf00      	nop
  400b50:	00400ad9 	.word	0x00400ad9
  400b54:	20000a54 	.word	0x20000a54
  400b58:	00400a81 	.word	0x00400a81

00400b5c <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
  400b5c:	2340      	movs	r3, #64	; 0x40
  400b5e:	6003      	str	r3, [r0, #0]
  400b60:	4770      	bx	lr

00400b62 <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
  400b62:	2310      	movs	r3, #16
  400b64:	6003      	str	r3, [r0, #0]
  400b66:	4770      	bx	lr

00400b68 <usart_enable_interrupt>:
	p_usart->US_IER = ul_sources;
  400b68:	6081      	str	r1, [r0, #8]
  400b6a:	4770      	bx	lr

00400b6c <usart_disable_interrupt>:
	p_usart->US_IDR = ul_sources;
  400b6c:	60c1      	str	r1, [r0, #12]
  400b6e:	4770      	bx	lr

00400b70 <usart_get_status>:
	return p_usart->US_CSR;
  400b70:	6940      	ldr	r0, [r0, #20]
}
  400b72:	4770      	bx	lr

00400b74 <usart_putchar>:
	while (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  400b74:	6943      	ldr	r3, [r0, #20]
  400b76:	f013 0f02 	tst.w	r3, #2
  400b7a:	d0fb      	beq.n	400b74 <usart_putchar>
	p_usart->US_THR = US_THR_TXCHR(c);
  400b7c:	f3c1 0108 	ubfx	r1, r1, #0, #9
  400b80:	61c1      	str	r1, [r0, #28]
}
  400b82:	2000      	movs	r0, #0
  400b84:	4770      	bx	lr
	...

00400b88 <usart_write_line>:
{
  400b88:	b570      	push	{r4, r5, r6, lr}
  400b8a:	460c      	mov	r4, r1
	while (*string != '\0') {
  400b8c:	7809      	ldrb	r1, [r1, #0]
  400b8e:	b139      	cbz	r1, 400ba0 <usart_write_line+0x18>
  400b90:	4605      	mov	r5, r0
		usart_putchar(p_usart, *string++);
  400b92:	4e04      	ldr	r6, [pc, #16]	; (400ba4 <usart_write_line+0x1c>)
  400b94:	4628      	mov	r0, r5
  400b96:	47b0      	blx	r6
	while (*string != '\0') {
  400b98:	f814 1f01 	ldrb.w	r1, [r4, #1]!
  400b9c:	2900      	cmp	r1, #0
  400b9e:	d1f9      	bne.n	400b94 <usart_write_line+0xc>
  400ba0:	bd70      	pop	{r4, r5, r6, pc}
  400ba2:	bf00      	nop
  400ba4:	00400b75 	.word	0x00400b75

00400ba8 <usart_read>:
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  400ba8:	6943      	ldr	r3, [r0, #20]
  400baa:	f013 0f01 	tst.w	r3, #1
  400bae:	d005      	beq.n	400bbc <usart_read+0x14>
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  400bb0:	6983      	ldr	r3, [r0, #24]
  400bb2:	f3c3 0308 	ubfx	r3, r3, #0, #9
  400bb6:	600b      	str	r3, [r1, #0]
	return 0;
  400bb8:	2000      	movs	r0, #0
  400bba:	4770      	bx	lr
		return 1;
  400bbc:	2001      	movs	r0, #1
}
  400bbe:	4770      	bx	lr

00400bc0 <wdt_disable>:
/**
 * \brief Disable the watchdog timer.
 */
void wdt_disable(Wdt *p_wdt)
{
	p_wdt->WDT_MR = WDT_MR_WDDIS;
  400bc0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  400bc4:	6043      	str	r3, [r0, #4]
  400bc6:	4770      	bx	lr

00400bc8 <vsync_handler>:
volatile uint32_t eoi_pos = 0; 

void vsync_handler(uint32_t ul_id, uint32_t ul_mask) {
	unused(ul_id);
	unused(ul_mask);
	g_vsync_flag = 1;
  400bc8:	2201      	movs	r2, #1
  400bca:	4b01      	ldr	r3, [pc, #4]	; (400bd0 <vsync_handler+0x8>)
  400bcc:	601a      	str	r2, [r3, #0]
  400bce:	4770      	bx	lr
  400bd0:	20000a60 	.word	0x20000a60

00400bd4 <init_vsync_interrupts>:
}


void init_vsync_interrupts(void) {
  400bd4:	b510      	push	{r4, lr}
  400bd6:	b082      	sub	sp, #8
	pio_handler_set(PIOA, ID_PIOA, CAMERA_VSYNC_PIN, PIO_IT_RISE_EDGE, vsync_handler);
  400bd8:	4b07      	ldr	r3, [pc, #28]	; (400bf8 <init_vsync_interrupts+0x24>)
  400bda:	9300      	str	r3, [sp, #0]
  400bdc:	2370      	movs	r3, #112	; 0x70
  400bde:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400be2:	210b      	movs	r1, #11
  400be4:	4805      	ldr	r0, [pc, #20]	; (400bfc <init_vsync_interrupts+0x28>)
  400be6:	4c06      	ldr	r4, [pc, #24]	; (400c00 <init_vsync_interrupts+0x2c>)
  400be8:	47a0      	blx	r4
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400bea:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400bee:	4b05      	ldr	r3, [pc, #20]	; (400c04 <init_vsync_interrupts+0x30>)
  400bf0:	601a      	str	r2, [r3, #0]
	NVIC_EnableIRQ(PIOA_IRQn);
}
  400bf2:	b002      	add	sp, #8
  400bf4:	bd10      	pop	{r4, pc}
  400bf6:	bf00      	nop
  400bf8:	00400bc9 	.word	0x00400bc9
  400bfc:	400e0e00 	.word	0x400e0e00
  400c00:	00400495 	.word	0x00400495
  400c04:	e000e100 	.word	0xe000e100

00400c08 <configure_twi>:


void configure_twi(void) {
  400c08:	b530      	push	{r4, r5, lr}
  400c0a:	b085      	sub	sp, #20
	twi_options_t opt;

	/* Enable TWI peripheral */
	pmc_enable_periph_clk(BOARD_TWI_ID);
  400c0c:	2013      	movs	r0, #19
  400c0e:	4b11      	ldr	r3, [pc, #68]	; (400c54 <configure_twi+0x4c>)
  400c10:	4798      	blx	r3

	/* Init TWI peripheral */
	opt.master_clk = sysclk_get_cpu_hz();
  400c12:	4b11      	ldr	r3, [pc, #68]	; (400c58 <configure_twi+0x50>)
  400c14:	9301      	str	r3, [sp, #4]
	opt.speed      = TWI_CLK;
  400c16:	4b11      	ldr	r3, [pc, #68]	; (400c5c <configure_twi+0x54>)
  400c18:	9302      	str	r3, [sp, #8]
	twi_master_init(BOARD_TWI, &opt);
  400c1a:	a901      	add	r1, sp, #4
  400c1c:	4810      	ldr	r0, [pc, #64]	; (400c60 <configure_twi+0x58>)
  400c1e:	4b11      	ldr	r3, [pc, #68]	; (400c64 <configure_twi+0x5c>)
  400c20:	4798      	blx	r3

	/* Configure TWI pins */
	#ifdef BOARD_TWI0
		gpio_configure_pin(TWI_DATA_GPIO, TWI_DATA_FLAG);
  400c22:	4d11      	ldr	r5, [pc, #68]	; (400c68 <configure_twi+0x60>)
  400c24:	4629      	mov	r1, r5
  400c26:	2003      	movs	r0, #3
  400c28:	4c10      	ldr	r4, [pc, #64]	; (400c6c <configure_twi+0x64>)
  400c2a:	47a0      	blx	r4
		gpio_configure_pin(TWI_CLK_GPIO, TWI_CLK_FLAGS);
  400c2c:	4629      	mov	r1, r5
  400c2e:	2004      	movs	r0, #4
  400c30:	47a0      	blx	r4
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400c32:	4b0f      	ldr	r3, [pc, #60]	; (400c70 <configure_twi+0x68>)
  400c34:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  400c38:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
  400c3c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  400c40:	f3bf 8f6f 	isb	sy
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400c44:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  400c48:	2100      	movs	r1, #0
  400c4a:	f883 1313 	strb.w	r1, [r3, #787]	; 0x313
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400c4e:	601a      	str	r2, [r3, #0]
	/* Configure TWI interrupts */
	NVIC_DisableIRQ(BOARD_TWI_IRQn);
	NVIC_ClearPendingIRQ(BOARD_TWI_IRQn);
	NVIC_SetPriority(BOARD_TWI_IRQn, 0);
	NVIC_EnableIRQ(BOARD_TWI_IRQn);
}
  400c50:	b005      	add	sp, #20
  400c52:	bd30      	pop	{r4, r5, pc}
  400c54:	00400649 	.word	0x00400649
  400c58:	07270e00 	.word	0x07270e00
  400c5c:	00061a80 	.word	0x00061a80
  400c60:	40018000 	.word	0x40018000
  400c64:	004008d5 	.word	0x004008d5
  400c68:	08000001 	.word	0x08000001
  400c6c:	004002dd 	.word	0x004002dd
  400c70:	e000e100 	.word	0xe000e100

00400c74 <pio_capture_init>:

void pio_capture_init(Pio *p_pio, uint32_t ul_id) {
  400c74:	b510      	push	{r4, lr}
  400c76:	4604      	mov	r4, r0
	/* Enable periphral clock */
	pmc_enable_periph_clk(ul_id);
  400c78:	4608      	mov	r0, r1
  400c7a:	4b13      	ldr	r3, [pc, #76]	; (400cc8 <pio_capture_init+0x54>)
  400c7c:	4798      	blx	r3

	/* Disable pio capture */
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_PCEN);
  400c7e:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400c82:	f023 0301 	bic.w	r3, r3, #1
  400c86:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150

	/* Disable rxbuff interrupt */
	p_pio->PIO_PCIDR |= PIO_PCIDR_RXBUFF;
  400c8a:	f8d4 3158 	ldr.w	r3, [r4, #344]	; 0x158
  400c8e:	f043 0308 	orr.w	r3, r3, #8
  400c92:	f8c4 3158 	str.w	r3, [r4, #344]	; 0x158

	/* 32bit width*/
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_DSIZE_Msk);
  400c96:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400c9a:	f023 0330 	bic.w	r3, r3, #48	; 0x30
  400c9e:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
	p_pio->PIO_PCMR |= PIO_PCMR_DSIZE_WORD;
  400ca2:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400ca6:	f043 0320 	orr.w	r3, r3, #32
  400caa:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150

	/* Only HSYNC and VSYNC enabled */
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_ALWYS);
  400cae:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400cb2:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  400cb6:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_HALFS);
  400cba:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400cbe:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
  400cc2:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
  400cc6:	bd10      	pop	{r4, pc}
  400cc8:	00400649 	.word	0x00400649

00400ccc <pio_capture_to_buffer>:
// 		p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_FRSTS);
// 	#endif
}

uint8_t pio_capture_to_buffer(Pio *p_pio, uint8_t *uc_buf, uint32_t ul_size){
	if ((p_pio->PIO_RCR == 0) && (p_pio->PIO_RNCR == 0)) {
  400ccc:	f8d0 316c 	ldr.w	r3, [r0, #364]	; 0x16c
  400cd0:	b913      	cbnz	r3, 400cd8 <pio_capture_to_buffer+0xc>
  400cd2:	f8d0 317c 	ldr.w	r3, [r0, #380]	; 0x17c
  400cd6:	b143      	cbz	r3, 400cea <pio_capture_to_buffer+0x1e>
		p_pio->PIO_RPR = (uint32_t)uc_buf;
		p_pio->PIO_RCR = ul_size;
		p_pio->PIO_PTCR = PIO_PTCR_RXTEN;
		return 1;
	} else if (p_pio->PIO_RNCR == 0) {
  400cd8:	f8d0 317c 	ldr.w	r3, [r0, #380]	; 0x17c
  400cdc:	b973      	cbnz	r3, 400cfc <pio_capture_to_buffer+0x30>
		p_pio->PIO_RNPR = (uint32_t)uc_buf;
  400cde:	f8c0 1178 	str.w	r1, [r0, #376]	; 0x178
		p_pio->PIO_RNCR = ul_size;
  400ce2:	f8c0 217c 	str.w	r2, [r0, #380]	; 0x17c
		return 1;
  400ce6:	2001      	movs	r0, #1
  400ce8:	4770      	bx	lr
		p_pio->PIO_RPR = (uint32_t)uc_buf;
  400cea:	f8c0 1168 	str.w	r1, [r0, #360]	; 0x168
		p_pio->PIO_RCR = ul_size;
  400cee:	f8c0 216c 	str.w	r2, [r0, #364]	; 0x16c
		p_pio->PIO_PTCR = PIO_PTCR_RXTEN;
  400cf2:	2301      	movs	r3, #1
  400cf4:	f8c0 3188 	str.w	r3, [r0, #392]	; 0x188
		return 1;
  400cf8:	4618      	mov	r0, r3
  400cfa:	4770      	bx	lr
	} else {
		return 0;
  400cfc:	2000      	movs	r0, #0
	}
}
  400cfe:	4770      	bx	lr

00400d00 <configure_camera>:
	configure_camera();
	delay_ms(3000);

}

void configure_camera(void){
  400d00:	b538      	push	{r3, r4, r5, lr}
	ov_configure(BOARD_TWI, JPEG_INIT);
  400d02:	4d07      	ldr	r5, [pc, #28]	; (400d20 <configure_camera+0x20>)
  400d04:	2100      	movs	r1, #0
  400d06:	4628      	mov	r0, r5
  400d08:	4c06      	ldr	r4, [pc, #24]	; (400d24 <configure_camera+0x24>)
  400d0a:	47a0      	blx	r4
	ov_configure(BOARD_TWI, YUV422);
  400d0c:	2101      	movs	r1, #1
  400d0e:	4628      	mov	r0, r5
  400d10:	47a0      	blx	r4
	ov_configure(BOARD_TWI, JPEG);
  400d12:	2102      	movs	r1, #2
  400d14:	4628      	mov	r0, r5
  400d16:	47a0      	blx	r4
	ov_configure(BOARD_TWI, JPEG_320x240);
  400d18:	2103      	movs	r1, #3
  400d1a:	4628      	mov	r0, r5
  400d1c:	47a0      	blx	r4
  400d1e:	bd38      	pop	{r3, r4, r5, pc}
  400d20:	40018000 	.word	0x40018000
  400d24:	004010b5 	.word	0x004010b5

00400d28 <init_camera>:
void init_camera(void){
  400d28:	b538      	push	{r3, r4, r5, lr}
	configure_twi();
  400d2a:	4b26      	ldr	r3, [pc, #152]	; (400dc4 <init_camera+0x9c>)
  400d2c:	4798      	blx	r3
	init_vsync_interrupts();
  400d2e:	4b26      	ldr	r3, [pc, #152]	; (400dc8 <init_camera+0xa0>)
  400d30:	4798      	blx	r3
	pio_capture_init(PIOA, ID_PIOA);
  400d32:	210b      	movs	r1, #11
  400d34:	4825      	ldr	r0, [pc, #148]	; (400dcc <init_camera+0xa4>)
  400d36:	4b26      	ldr	r3, [pc, #152]	; (400dd0 <init_camera+0xa8>)
  400d38:	4798      	blx	r3
	gpio_configure_pin(PIN_PCK1, PIN_PCK1_FLAGS);
  400d3a:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400d3e:	2011      	movs	r0, #17
  400d40:	4c24      	ldr	r4, [pc, #144]	; (400dd4 <init_camera+0xac>)
  400d42:	47a0      	blx	r4
	pmc_enable_pllbck(7, 0x1, 1); /* PLLA work at 96 Mhz */ // PA17 is xclck signal
  400d44:	2201      	movs	r2, #1
  400d46:	4611      	mov	r1, r2
  400d48:	2007      	movs	r0, #7
  400d4a:	4b23      	ldr	r3, [pc, #140]	; (400dd8 <init_camera+0xb0>)
  400d4c:	4798      	blx	r3
	gpio_configure_pin(CAMERA_RST_GPIO, CAMERA_RST_FLAGS);
  400d4e:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400d52:	2014      	movs	r0, #20
  400d54:	47a0      	blx	r4
	gpio_configure_pin(CAMERA_HSYNC_GPIO, CAMERA_HSYNC_FLAGS);  // e.g., input or output flag as needed
  400d56:	2171      	movs	r1, #113	; 0x71
  400d58:	2010      	movs	r0, #16
  400d5a:	47a0      	blx	r4
	gpio_configure_pin(CAMERA_VSYNC_GPIO,  CAMERA_VSYNC_FLAGS);   // e.g., output for clock signal  // e.g., input for pixel clock
  400d5c:	2171      	movs	r1, #113	; 0x71
  400d5e:	200f      	movs	r0, #15
  400d60:	47a0      	blx	r4
	gpio_configure_pin(CAMERA_DATA_BUS_D0, CAMERA_DATA_FLAGS);
  400d62:	4d1e      	ldr	r5, [pc, #120]	; (400ddc <init_camera+0xb4>)
  400d64:	4629      	mov	r1, r5
  400d66:	2018      	movs	r0, #24
  400d68:	47a0      	blx	r4
	gpio_configure_pin(CAMERA_DATA_BUS_D1, CAMERA_DATA_FLAGS);
  400d6a:	4629      	mov	r1, r5
  400d6c:	2019      	movs	r0, #25
  400d6e:	47a0      	blx	r4
	gpio_configure_pin(CAMERA_DATA_BUS_D2, CAMERA_DATA_FLAGS);
  400d70:	4629      	mov	r1, r5
  400d72:	201a      	movs	r0, #26
  400d74:	47a0      	blx	r4
	gpio_configure_pin(CAMERA_DATA_BUS_D3, CAMERA_DATA_FLAGS);
  400d76:	4629      	mov	r1, r5
  400d78:	201b      	movs	r0, #27
  400d7a:	47a0      	blx	r4
	gpio_configure_pin(CAMERA_DATA_BUS_D4, CAMERA_DATA_FLAGS);
  400d7c:	4629      	mov	r1, r5
  400d7e:	201c      	movs	r0, #28
  400d80:	47a0      	blx	r4
	gpio_configure_pin(CAMERA_DATA_BUS_D5, CAMERA_DATA_FLAGS);
  400d82:	4629      	mov	r1, r5
  400d84:	201d      	movs	r0, #29
  400d86:	47a0      	blx	r4
	gpio_configure_pin(CAMERA_DATA_BUS_D6, CAMERA_DATA_FLAGS);
  400d88:	4629      	mov	r1, r5
  400d8a:	201e      	movs	r0, #30
  400d8c:	47a0      	blx	r4
	gpio_configure_pin(CAMERA_DATA_BUS_D7, CAMERA_DATA_FLAGS);
  400d8e:	4629      	mov	r1, r5
  400d90:	201f      	movs	r0, #31
  400d92:	47a0      	blx	r4
	PMC->PMC_PCK[1] = (PMC_PCK_PRES_CLK_4 | PMC_PCK_CSS_PLLB_CLK);
  400d94:	4b12      	ldr	r3, [pc, #72]	; (400de0 <init_camera+0xb8>)
  400d96:	2223      	movs	r2, #35	; 0x23
  400d98:	645a      	str	r2, [r3, #68]	; 0x44
	PMC->PMC_SCER = PMC_SCER_PCK1;
  400d9a:	f44f 7200 	mov.w	r2, #512	; 0x200
  400d9e:	601a      	str	r2, [r3, #0]
	while (!(PMC->PMC_SCSR & PMC_SCSR_PCK1)) {
  400da0:	461a      	mov	r2, r3
  400da2:	6893      	ldr	r3, [r2, #8]
  400da4:	f413 7f00 	tst.w	r3, #512	; 0x200
  400da8:	d0fb      	beq.n	400da2 <init_camera+0x7a>
	while (ov_init(BOARD_TWI) == 1){}
  400daa:	4d0e      	ldr	r5, [pc, #56]	; (400de4 <init_camera+0xbc>)
  400dac:	4c0e      	ldr	r4, [pc, #56]	; (400de8 <init_camera+0xc0>)
  400dae:	4628      	mov	r0, r5
  400db0:	47a0      	blx	r4
  400db2:	2801      	cmp	r0, #1
  400db4:	d0fb      	beq.n	400dae <init_camera+0x86>
	configure_camera();
  400db6:	4b0d      	ldr	r3, [pc, #52]	; (400dec <init_camera+0xc4>)
  400db8:	4798      	blx	r3
	delay_ms(3000);
  400dba:	480d      	ldr	r0, [pc, #52]	; (400df0 <init_camera+0xc8>)
  400dbc:	4b0d      	ldr	r3, [pc, #52]	; (400df4 <init_camera+0xcc>)
  400dbe:	4798      	blx	r3
  400dc0:	bd38      	pop	{r3, r4, r5, pc}
  400dc2:	bf00      	nop
  400dc4:	00400c09 	.word	0x00400c09
  400dc8:	00400bd5 	.word	0x00400bd5
  400dcc:	400e0e00 	.word	0x400e0e00
  400dd0:	00400c75 	.word	0x00400c75
  400dd4:	004002dd 	.word	0x004002dd
  400dd8:	00400615 	.word	0x00400615
  400ddc:	28000001 	.word	0x28000001
  400de0:	400e0400 	.word	0x400e0400
  400de4:	40018000 	.word	0x40018000
  400de8:	00400f79 	.word	0x00400f79
  400dec:	00400d01 	.word	0x00400d01
  400df0:	01885e6e 	.word	0x01885e6e
  400df4:	20000001 	.word	0x20000001

00400df8 <find_image_len>:

}


uint8_t find_image_len(void) {
	uint32_t i = 0;
  400df8:	2300      	movs	r3, #0
	
	// Find SOI marker
	while (i < 100000) {
		if ((g_image_buffer[i] == 0xFF) && (g_image_buffer[i+1] == 0xD8)) {
  400dfa:	491d      	ldr	r1, [pc, #116]	; (400e70 <find_image_len+0x78>)
	while (i < 100000) {
  400dfc:	481d      	ldr	r0, [pc, #116]	; (400e74 <find_image_len+0x7c>)
  400dfe:	e004      	b.n	400e0a <find_image_len+0x12>
		}
		i += 1;
	}

	if (i >= 100000){
		return 0;
  400e00:	2000      	movs	r0, #0
  400e02:	4770      	bx	lr
		i += 1;
  400e04:	3301      	adds	r3, #1
	while (i < 100000) {
  400e06:	4283      	cmp	r3, r0
  400e08:	d010      	beq.n	400e2c <find_image_len+0x34>
		if ((g_image_buffer[i] == 0xFF) && (g_image_buffer[i+1] == 0xD8)) {
  400e0a:	5cca      	ldrb	r2, [r1, r3]
  400e0c:	b2d2      	uxtb	r2, r2
  400e0e:	2aff      	cmp	r2, #255	; 0xff
  400e10:	d1f8      	bne.n	400e04 <find_image_len+0xc>
  400e12:	1c5a      	adds	r2, r3, #1
  400e14:	5c8a      	ldrb	r2, [r1, r2]
  400e16:	b2d2      	uxtb	r2, r2
  400e18:	2ad8      	cmp	r2, #216	; 0xd8
  400e1a:	d1f3      	bne.n	400e04 <find_image_len+0xc>
			soi_pos = i;
  400e1c:	4a16      	ldr	r2, [pc, #88]	; (400e78 <find_image_len+0x80>)
  400e1e:	6013      	str	r3, [r2, #0]
	while (i < 100000) {
  400e20:	4a16      	ldr	r2, [pc, #88]	; (400e7c <find_image_len+0x84>)
  400e22:	4293      	cmp	r3, r2
  400e24:	d8ec      	bhi.n	400e00 <find_image_len+0x8>
		if ((g_image_buffer[i-1] == 0xFF) && (g_image_buffer[i] == 0xD9)) {
  400e26:	4912      	ldr	r1, [pc, #72]	; (400e70 <find_image_len+0x78>)
	while (i < 100000) {
  400e28:	4812      	ldr	r0, [pc, #72]	; (400e74 <find_image_len+0x7c>)
  400e2a:	e004      	b.n	400e36 <find_image_len+0x3e>
		return 0;
  400e2c:	2000      	movs	r0, #0
  400e2e:	4770      	bx	lr
		i += 1;
  400e30:	3301      	adds	r3, #1
	while (i < 100000) {
  400e32:	4283      	cmp	r3, r0
  400e34:	d017      	beq.n	400e66 <find_image_len+0x6e>
  400e36:	1e5a      	subs	r2, r3, #1
		if ((g_image_buffer[i-1] == 0xFF) && (g_image_buffer[i] == 0xD9)) {
  400e38:	5c8a      	ldrb	r2, [r1, r2]
  400e3a:	b2d2      	uxtb	r2, r2
  400e3c:	2aff      	cmp	r2, #255	; 0xff
  400e3e:	d1f7      	bne.n	400e30 <find_image_len+0x38>
  400e40:	5cca      	ldrb	r2, [r1, r3]
  400e42:	b2d2      	uxtb	r2, r2
  400e44:	2ad9      	cmp	r2, #217	; 0xd9
  400e46:	d1f3      	bne.n	400e30 <find_image_len+0x38>
			eoi_pos = i;
  400e48:	4a0d      	ldr	r2, [pc, #52]	; (400e80 <find_image_len+0x88>)
  400e4a:	6013      	str	r3, [r2, #0]
	if (i >= 100000){
  400e4c:	4a0b      	ldr	r2, [pc, #44]	; (400e7c <find_image_len+0x84>)
  400e4e:	4293      	cmp	r3, r2
  400e50:	d80b      	bhi.n	400e6a <find_image_len+0x72>
	}
	
	g_image_length = eoi_pos - soi_pos + 1;
  400e52:	4b0b      	ldr	r3, [pc, #44]	; (400e80 <find_image_len+0x88>)
  400e54:	681b      	ldr	r3, [r3, #0]
  400e56:	4a08      	ldr	r2, [pc, #32]	; (400e78 <find_image_len+0x80>)
  400e58:	6812      	ldr	r2, [r2, #0]
  400e5a:	3301      	adds	r3, #1
  400e5c:	1a9b      	subs	r3, r3, r2
  400e5e:	4a09      	ldr	r2, [pc, #36]	; (400e84 <find_image_len+0x8c>)
  400e60:	6013      	str	r3, [r2, #0]
	
	return 1;
  400e62:	2001      	movs	r0, #1
  400e64:	4770      	bx	lr
		return 0;
  400e66:	2000      	movs	r0, #0
  400e68:	4770      	bx	lr
  400e6a:	2000      	movs	r0, #0
}
  400e6c:	4770      	bx	lr
  400e6e:	bf00      	nop
  400e70:	20000ac8 	.word	0x20000ac8
  400e74:	000186a0 	.word	0x000186a0
  400e78:	20000a64 	.word	0x20000a64
  400e7c:	0001869f 	.word	0x0001869f
  400e80:	20000a58 	.word	0x20000a58
  400e84:	20000a5c 	.word	0x20000a5c

00400e88 <start_capture>:
uint8_t start_capture(void) {
  400e88:	b510      	push	{r4, lr}
	pio_enable_interrupt(PIOA, CAMERA_VSYNC_PIN);
  400e8a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  400e8e:	4814      	ldr	r0, [pc, #80]	; (400ee0 <start_capture+0x58>)
  400e90:	4b14      	ldr	r3, [pc, #80]	; (400ee4 <start_capture+0x5c>)
  400e92:	4798      	blx	r3
	while (!g_vsync_flag) {
  400e94:	4a14      	ldr	r2, [pc, #80]	; (400ee8 <start_capture+0x60>)
  400e96:	6813      	ldr	r3, [r2, #0]
  400e98:	2b00      	cmp	r3, #0
  400e9a:	d0fc      	beq.n	400e96 <start_capture+0xe>
	pio_disable_interrupt(PIOA, CAMERA_VSYNC_PIN);
  400e9c:	4c10      	ldr	r4, [pc, #64]	; (400ee0 <start_capture+0x58>)
  400e9e:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  400ea2:	4620      	mov	r0, r4
  400ea4:	4b11      	ldr	r3, [pc, #68]	; (400eec <start_capture+0x64>)
  400ea6:	4798      	blx	r3
	pio_capture_enable(PIOA);
  400ea8:	4620      	mov	r0, r4
  400eaa:	4b11      	ldr	r3, [pc, #68]	; (400ef0 <start_capture+0x68>)
  400eac:	4798      	blx	r3
	pio_capture_to_buffer(PIOA, g_image_buffer, (100000) >> 2);
  400eae:	f246 12a8 	movw	r2, #25000	; 0x61a8
  400eb2:	4910      	ldr	r1, [pc, #64]	; (400ef4 <start_capture+0x6c>)
  400eb4:	4620      	mov	r0, r4
  400eb6:	4b10      	ldr	r3, [pc, #64]	; (400ef8 <start_capture+0x70>)
  400eb8:	4798      	blx	r3
	while (!((PIOA->PIO_PCISR & PIO_PCIMR_RXBUFF) == PIO_PCIMR_RXBUFF)) {
  400eba:	4622      	mov	r2, r4
  400ebc:	f8d2 3160 	ldr.w	r3, [r2, #352]	; 0x160
  400ec0:	f013 0f08 	tst.w	r3, #8
  400ec4:	d0fa      	beq.n	400ebc <start_capture+0x34>
	pio_capture_disable(PIOA);
  400ec6:	4806      	ldr	r0, [pc, #24]	; (400ee0 <start_capture+0x58>)
  400ec8:	4b0c      	ldr	r3, [pc, #48]	; (400efc <start_capture+0x74>)
  400eca:	4798      	blx	r3
	g_vsync_flag = false;
  400ecc:	2200      	movs	r2, #0
  400ece:	4b06      	ldr	r3, [pc, #24]	; (400ee8 <start_capture+0x60>)
  400ed0:	601a      	str	r2, [r3, #0]
	if (find_image_len() == 1){
  400ed2:	4b0b      	ldr	r3, [pc, #44]	; (400f00 <start_capture+0x78>)
  400ed4:	4798      	blx	r3
}
  400ed6:	2801      	cmp	r0, #1
  400ed8:	bf14      	ite	ne
  400eda:	2000      	movne	r0, #0
  400edc:	2001      	moveq	r0, #1
  400ede:	bd10      	pop	{r4, pc}
  400ee0:	400e0e00 	.word	0x400e0e00
  400ee4:	004002cd 	.word	0x004002cd
  400ee8:	20000a60 	.word	0x20000a60
  400eec:	004002d1 	.word	0x004002d1
  400ef0:	004003fd 	.word	0x004003fd
  400ef4:	20000ac8 	.word	0x20000ac8
  400ef8:	00400ccd 	.word	0x00400ccd
  400efc:	00400415 	.word	0x00400415
  400f00:	00400df9 	.word	0x00400df9

00400f04 <ov_read_reg>:
 * \param p_twi TWI interface.
 * \param p_packet TWI packet.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_read_reg(Twi* const p_twi, twi_packet_t* const p_packet)
{
  400f04:	b508      	push	{r3, lr}
	uint32_t ul_status;

	ul_status = twi_master_read(p_twi, p_packet);
  400f06:	4b01      	ldr	r3, [pc, #4]	; (400f0c <ov_read_reg+0x8>)
  400f08:	4798      	blx	r3

	return ul_status;
}
  400f0a:	bd08      	pop	{r3, pc}
  400f0c:	00400939 	.word	0x00400939

00400f10 <ov_write_reg>:
 * \param p_twi TWI interface.
 * \param p_packet TWI packet.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_write_reg(Twi* const p_twi, twi_packet_t* const p_packet)
{
  400f10:	b508      	push	{r3, lr}
	uint32_t ul_status;

	ul_status = twi_master_write(p_twi, p_packet);
  400f12:	4b01      	ldr	r3, [pc, #4]	; (400f18 <ov_write_reg+0x8>)
  400f14:	4798      	blx	r3

	return ul_status;
}
  400f16:	bd08      	pop	{r3, pc}
  400f18:	004009f9 	.word	0x004009f9

00400f1c <ov_write_regs>:
 * \param p_twi TWI interface.
 * \param p_reg_list Register list to be written.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_write_regs(Twi* const p_twi, const ov_reg *p_reg_list)
{
  400f1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400f20:	b086      	sub	sp, #24
  400f22:	4607      	mov	r7, r0
  400f24:	1c4c      	adds	r4, r1, #1
			(p_next->val == OV_VAL_TERM))) {
		if (p_next->reg == 0xFE) {
			delay_ms(5);
		} else {
			twi_packet_regs.addr[0] = p_next->reg;
			twi_packet_regs.addr_length = 1;
  400f26:	2501      	movs	r5, #1
			twi_packet_regs.chip = OV_I2C_SENSOR_ADDRESS;
			twi_packet_regs.length = 1;
			twi_packet_regs.buffer = &(p_next->val);

			ul_err = ov_write_reg(p_twi, &twi_packet_regs);
  400f28:	4e11      	ldr	r6, [pc, #68]	; (400f70 <ov_write_regs+0x54>)
			delay_ms(5);
  400f2a:	f8df 8048 	ldr.w	r8, [pc, #72]	; 400f74 <ov_write_regs+0x58>
	while (!((p_next->reg == OV_REG_TERM) &&
  400f2e:	e010      	b.n	400f52 <ov_write_regs+0x36>
  400f30:	7821      	ldrb	r1, [r4, #0]
  400f32:	29ff      	cmp	r1, #255	; 0xff
  400f34:	d018      	beq.n	400f68 <ov_write_regs+0x4c>
			twi_packet_regs.addr[0] = p_next->reg;
  400f36:	f88d 3004 	strb.w	r3, [sp, #4]
			twi_packet_regs.addr_length = 1;
  400f3a:	9502      	str	r5, [sp, #8]
			twi_packet_regs.chip = OV_I2C_SENSOR_ADDRESS;
  400f3c:	2330      	movs	r3, #48	; 0x30
  400f3e:	f88d 3014 	strb.w	r3, [sp, #20]
			twi_packet_regs.length = 1;
  400f42:	9504      	str	r5, [sp, #16]
			twi_packet_regs.buffer = &(p_next->val);
  400f44:	9203      	str	r2, [sp, #12]
			ul_err = ov_write_reg(p_twi, &twi_packet_regs);
  400f46:	a901      	add	r1, sp, #4
  400f48:	4638      	mov	r0, r7
  400f4a:	47b0      	blx	r6
			ul_size++;

			if (ul_err == TWI_BUSY) {
  400f4c:	2808      	cmp	r0, #8
  400f4e:	d00c      	beq.n	400f6a <ov_write_regs+0x4e>
  400f50:	3402      	adds	r4, #2
  400f52:	4622      	mov	r2, r4
	while (!((p_next->reg == OV_REG_TERM) &&
  400f54:	f814 3c01 	ldrb.w	r3, [r4, #-1]
  400f58:	2bff      	cmp	r3, #255	; 0xff
  400f5a:	d0e9      	beq.n	400f30 <ov_write_regs+0x14>
		if (p_next->reg == 0xFE) {
  400f5c:	2bfe      	cmp	r3, #254	; 0xfe
  400f5e:	d1ea      	bne.n	400f36 <ov_write_regs+0x1a>
			delay_ms(5);
  400f60:	f24a 706a 	movw	r0, #42858	; 0xa76a
  400f64:	47c0      	blx	r8
  400f66:	e7f3      	b.n	400f50 <ov_write_regs+0x34>
			}
		}

		p_next++;
	}
	return 0;
  400f68:	2000      	movs	r0, #0
}
  400f6a:	b006      	add	sp, #24
  400f6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400f70:	00400f11 	.word	0x00400f11
  400f74:	20000001 	.word	0x20000001

00400f78 <ov_init>:
 *
 * \param p_twi TWI interface.
 * \return 0 on success, 1 otherwise.
 */
uint32_t ov_init(Twi* const p_twi)
{
  400f78:	b5f0      	push	{r4, r5, r6, r7, lr}
  400f7a:	b093      	sub	sp, #76	; 0x4c
  400f7c:	4607      	mov	r7, r0
	const uint8_t cont_reg_val = 1;
  400f7e:	2401      	movs	r4, #1
  400f80:	f88d 4047 	strb.w	r4, [sp, #71]	; 0x47
	twi_packet_t init_packet = {
  400f84:	2500      	movs	r5, #0
  400f86:	950c      	str	r5, [sp, #48]	; 0x30
  400f88:	9510      	str	r5, [sp, #64]	; 0x40
  400f8a:	23ff      	movs	r3, #255	; 0xff
  400f8c:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
  400f90:	940d      	str	r4, [sp, #52]	; 0x34
  400f92:	f10d 0347 	add.w	r3, sp, #71	; 0x47
  400f96:	930e      	str	r3, [sp, #56]	; 0x38
  400f98:	940f      	str	r4, [sp, #60]	; 0x3c
  400f9a:	2630      	movs	r6, #48	; 0x30
  400f9c:	f88d 6040 	strb.w	r6, [sp, #64]	; 0x40
		.addr_length  = 1, //sizeof (uint16_t),    // TWI slave memory address data size
		.chip         = OV_I2C_SENSOR_ADDRESS,      // TWI slave bus address
		.buffer       = &cont_reg_val,        // transfer data destination buffer
		.length       = 1                    // transfer data size (bytes)
	};
	ov_write_reg(p_twi, &init_packet);
  400fa0:	eb0d 0106 	add.w	r1, sp, r6
  400fa4:	4b41      	ldr	r3, [pc, #260]	; (4010ac <ov_init+0x134>)
  400fa6:	4798      	blx	r3
	uint32_t ul_id = 0;
  400fa8:	9500      	str	r5, [sp, #0]
	uint32_t ul_ver = 0;
  400faa:	9501      	str	r5, [sp, #4]
	packet_pid.chip = OV_I2C_SENSOR_ADDRESS;
  400fac:	f88d 6018 	strb.w	r6, [sp, #24]
	packet_pid.addr[0] = OV2640_PIDH;
  400fb0:	230a      	movs	r3, #10
  400fb2:	f88d 3008 	strb.w	r3, [sp, #8]
	packet_pid.addr_length = 1;
  400fb6:	9403      	str	r4, [sp, #12]
	packet_pid.buffer = &ul_id;
  400fb8:	f8cd d010 	str.w	sp, [sp, #16]
	packet_pid.length = 1;
  400fbc:	9405      	str	r4, [sp, #20]
	ov_read_reg(p_twi, &packet_pid);
  400fbe:	a902      	add	r1, sp, #8
  400fc0:	4638      	mov	r0, r7
  400fc2:	4d3b      	ldr	r5, [pc, #236]	; (4010b0 <ov_init+0x138>)
  400fc4:	47a8      	blx	r5
	packet_ver.chip = OV_I2C_SENSOR_ADDRESS;
  400fc6:	f88d 602c 	strb.w	r6, [sp, #44]	; 0x2c
	packet_ver.addr[0] = OV2640_PIDL;
  400fca:	230b      	movs	r3, #11
  400fcc:	f88d 301c 	strb.w	r3, [sp, #28]
	packet_ver.addr_length = 1;
  400fd0:	9408      	str	r4, [sp, #32]
	packet_ver.buffer = &ul_ver;
  400fd2:	ab01      	add	r3, sp, #4
  400fd4:	9309      	str	r3, [sp, #36]	; 0x24
	packet_ver.length = 1;
  400fd6:	940a      	str	r4, [sp, #40]	; 0x28
	ov_read_reg(p_twi, &packet_ver);
  400fd8:	a907      	add	r1, sp, #28
  400fda:	4638      	mov	r0, r7
  400fdc:	47a8      	blx	r5
	return ((uint32_t)(ul_id << 8) | ul_ver);
  400fde:	9b01      	ldr	r3, [sp, #4]
  400fe0:	9a00      	ldr	r2, [sp, #0]
  400fe2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
	
	uint32_t ul_id = 0;

	ul_id = ov_id( p_twi );

	if (((ul_id >> 8)&0xff)  == OV2640_PIDH_DEFAULT) {
  400fe6:	f3c3 2307 	ubfx	r3, r3, #8, #8
  400fea:	2b26      	cmp	r3, #38	; 0x26
  400fec:	d002      	beq.n	400ff4 <ov_init+0x7c>
				return 0;
			}
		}
	}

	return 1;
  400fee:	2001      	movs	r0, #1
}
  400ff0:	b013      	add	sp, #76	; 0x4c
  400ff2:	bdf0      	pop	{r4, r5, r6, r7, pc}
	uint32_t ul_midh = 0;
  400ff4:	2300      	movs	r3, #0
  400ff6:	9301      	str	r3, [sp, #4]
	uint32_t ul_midl = 0;
  400ff8:	9302      	str	r3, [sp, #8]
	twi_packet.addr[0] = OV2640_MIDH;
  400ffa:	231c      	movs	r3, #28
  400ffc:	f88d 301c 	strb.w	r3, [sp, #28]
	twi_packet.addr_length = 1;
  401000:	9408      	str	r4, [sp, #32]
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  401002:	f88d 602c 	strb.w	r6, [sp, #44]	; 0x2c
	twi_packet.buffer = &ul_midh;
  401006:	ab01      	add	r3, sp, #4
  401008:	9309      	str	r3, [sp, #36]	; 0x24
	twi_packet.length = 1;
  40100a:	940a      	str	r4, [sp, #40]	; 0x28
	ov_read_reg(p_twi, &twi_packet);
  40100c:	a907      	add	r1, sp, #28
  40100e:	4638      	mov	r0, r7
  401010:	47a8      	blx	r5
	twi_packet.addr[0] = OV2640_MIDL;
  401012:	231d      	movs	r3, #29
  401014:	f88d 301c 	strb.w	r3, [sp, #28]
	twi_packet.addr_length = 1;
  401018:	9408      	str	r4, [sp, #32]
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  40101a:	f88d 602c 	strb.w	r6, [sp, #44]	; 0x2c
	twi_packet.buffer = &ul_midl;
  40101e:	ab02      	add	r3, sp, #8
  401020:	9309      	str	r3, [sp, #36]	; 0x24
	twi_packet.length = 1;
  401022:	940a      	str	r4, [sp, #40]	; 0x28
	ov_read_reg(p_twi, &twi_packet);
  401024:	a907      	add	r1, sp, #28
  401026:	4638      	mov	r0, r7
  401028:	47a8      	blx	r5
	if ((ul_midh == OV2640_MIDH_DEFAULT) && (ul_midl == OV2640_MIDL_DEFAULT)) {
  40102a:	9b01      	ldr	r3, [sp, #4]
  40102c:	2b7f      	cmp	r3, #127	; 0x7f
  40102e:	d001      	beq.n	401034 <ov_init+0xbc>
	return 1;
  401030:	2001      	movs	r0, #1
  401032:	e7dd      	b.n	400ff0 <ov_init+0x78>
	if ((ul_midh == OV2640_MIDH_DEFAULT) && (ul_midl == OV2640_MIDL_DEFAULT)) {
  401034:	9b02      	ldr	r3, [sp, #8]
  401036:	2ba2      	cmp	r3, #162	; 0xa2
  401038:	d1fa      	bne.n	401030 <ov_init+0xb8>
	uint32_t ul_value = 0;
  40103a:	2300      	movs	r3, #0
  40103c:	9300      	str	r3, [sp, #0]
	uint32_t ul_oldvalue = 0;
  40103e:	9301      	str	r3, [sp, #4]
	uint32_t ul_entervalue = 0;
  401040:	9302      	str	r3, [sp, #8]
	twi_packet.addr[0] = 0x01;
  401042:	2301      	movs	r3, #1
  401044:	f88d 301c 	strb.w	r3, [sp, #28]
	twi_packet.addr_length = 1;
  401048:	9308      	str	r3, [sp, #32]
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  40104a:	2230      	movs	r2, #48	; 0x30
  40104c:	f88d 202c 	strb.w	r2, [sp, #44]	; 0x2c
	twi_packet.length = 1;
  401050:	930a      	str	r3, [sp, #40]	; 0x28
	twi_packet.buffer = &ul_oldvalue;
  401052:	ab01      	add	r3, sp, #4
  401054:	9309      	str	r3, [sp, #36]	; 0x24
	ov_read_reg(p_twi, &twi_packet);
  401056:	a907      	add	r1, sp, #28
  401058:	4638      	mov	r0, r7
  40105a:	4c15      	ldr	r4, [pc, #84]	; (4010b0 <ov_init+0x138>)
  40105c:	47a0      	blx	r4
	ul_entervalue = 0xAD;
  40105e:	ab12      	add	r3, sp, #72	; 0x48
  401060:	22ad      	movs	r2, #173	; 0xad
  401062:	f843 2d40 	str.w	r2, [r3, #-64]!
	twi_packet.buffer = &ul_entervalue;
  401066:	9309      	str	r3, [sp, #36]	; 0x24
	ov_write_reg(p_twi, &twi_packet);
  401068:	a907      	add	r1, sp, #28
  40106a:	4638      	mov	r0, r7
  40106c:	4b0f      	ldr	r3, [pc, #60]	; (4010ac <ov_init+0x134>)
  40106e:	4798      	blx	r3
	twi_packet.buffer = &ul_value;
  401070:	f8cd d024 	str.w	sp, [sp, #36]	; 0x24
	ov_read_reg(p_twi, &twi_packet);
  401074:	a907      	add	r1, sp, #28
  401076:	4638      	mov	r0, r7
  401078:	47a0      	blx	r4
	if (ul_value != ul_entervalue) {
  40107a:	9b02      	ldr	r3, [sp, #8]
  40107c:	9a00      	ldr	r2, [sp, #0]
  40107e:	429a      	cmp	r2, r3
  401080:	d001      	beq.n	401086 <ov_init+0x10e>
		return 1;
  401082:	2001      	movs	r0, #1
  401084:	e7b4      	b.n	400ff0 <ov_init+0x78>
	twi_packet.buffer = &ul_oldvalue;
  401086:	ab01      	add	r3, sp, #4
  401088:	9309      	str	r3, [sp, #36]	; 0x24
	ov_write_reg(p_twi, &twi_packet);
  40108a:	a907      	add	r1, sp, #28
  40108c:	4638      	mov	r0, r7
  40108e:	4b07      	ldr	r3, [pc, #28]	; (4010ac <ov_init+0x134>)
  401090:	4798      	blx	r3
	twi_packet.buffer = &ul_value;
  401092:	f8cd d024 	str.w	sp, [sp, #36]	; 0x24
	ov_read_reg(p_twi, &twi_packet);
  401096:	a907      	add	r1, sp, #28
  401098:	4638      	mov	r0, r7
  40109a:	4b05      	ldr	r3, [pc, #20]	; (4010b0 <ov_init+0x138>)
  40109c:	4798      	blx	r3
	if (ul_value != ul_oldvalue) {
  40109e:	9b01      	ldr	r3, [sp, #4]
  4010a0:	9800      	ldr	r0, [sp, #0]
  4010a2:	1ac0      	subs	r0, r0, r3
  4010a4:	bf18      	it	ne
  4010a6:	2001      	movne	r0, #1
  4010a8:	e7a2      	b.n	400ff0 <ov_init+0x78>
  4010aa:	bf00      	nop
  4010ac:	00400f11 	.word	0x00400f11
  4010b0:	00400f05 	.word	0x00400f05

004010b4 <ov_configure>:
 * \param p_twi TWI interface.
 * \param format Specific format to configure.
 * \return 0 on success, 1 otherwise.
 */
uint32_t ov_configure(Twi* const p_twi, const e_OV2640_format format)
{
  4010b4:	b508      	push	{r3, lr}
	const ov_reg *p_regs_conf = NULL;

	/* Common register initialization */
	switch (format) {
  4010b6:	2911      	cmp	r1, #17
  4010b8:	d82a      	bhi.n	401110 <ov_configure+0x5c>
  4010ba:	e8df f001 	tbb	[pc, r1]
  4010be:	092b      	.short	0x092b
  4010c0:	0f0d0b2d 	.word	0x0f0d0b2d
  4010c4:	17151311 	.word	0x17151311
  4010c8:	1f1d1b19 	.word	0x1f1d1b19
  4010cc:	27252321 	.word	0x27252321
	case JPEG_INIT:
		p_regs_conf = OV2640_JPEG_INIT;
		break;
		
	case YUV422:
		p_regs_conf = OV2640_YUV422;
  4010d0:	4914      	ldr	r1, [pc, #80]	; (401124 <ov_configure+0x70>)
  4010d2:	e022      	b.n	40111a <ov_configure+0x66>
	case JPEG:
		p_regs_conf = OV2640_JPEG;
		break;
		
	case JPEG_320x240:
		p_regs_conf = OV2640_JPEG_320x240;
  4010d4:	4914      	ldr	r1, [pc, #80]	; (401128 <ov_configure+0x74>)
		break;
  4010d6:	e020      	b.n	40111a <ov_configure+0x66>
		
	case JPEG_640x480:
		p_regs_conf = OV2640_JPEG_640x480;
  4010d8:	4914      	ldr	r1, [pc, #80]	; (40112c <ov_configure+0x78>)
		break;
  4010da:	e01e      	b.n	40111a <ov_configure+0x66>
		
	case JPEG_800x600:
		p_regs_conf = OV2640_JPEG_800x600;
  4010dc:	4914      	ldr	r1, [pc, #80]	; (401130 <ov_configure+0x7c>)
		break;
  4010de:	e01c      	b.n	40111a <ov_configure+0x66>
		
	case JPEG_1024x768:
		p_regs_conf = OV2640_JPEG_1024x768;
  4010e0:	4914      	ldr	r1, [pc, #80]	; (401134 <ov_configure+0x80>)
		break;
  4010e2:	e01a      	b.n	40111a <ov_configure+0x66>
		
	case JPEG_1280x1024:
		p_regs_conf = OV2640_JPEG_1280x1024;
  4010e4:	4914      	ldr	r1, [pc, #80]	; (401138 <ov_configure+0x84>)
		break;
  4010e6:	e018      	b.n	40111a <ov_configure+0x66>
		
	case JPEG_1600x1200:
		p_regs_conf = OV2640_JPEG_1600x1200;
  4010e8:	4914      	ldr	r1, [pc, #80]	; (40113c <ov_configure+0x88>)
		break;
  4010ea:	e016      	b.n	40111a <ov_configure+0x66>
		
	case QVGA_YUV422_10FPS:
		p_regs_conf = OV2640_QVGA_YUV422_10FPS;
  4010ec:	4914      	ldr	r1, [pc, #80]	; (401140 <ov_configure+0x8c>)
		break;
  4010ee:	e014      	b.n	40111a <ov_configure+0x66>

	case QVGA_YUV422_15FPS:
		p_regs_conf = OV2640_QVGA_YUV422_15FPS;
  4010f0:	4914      	ldr	r1, [pc, #80]	; (401144 <ov_configure+0x90>)
		break;
  4010f2:	e012      	b.n	40111a <ov_configure+0x66>

	case QVGA_YUV422_20FPS:
		p_regs_conf = OV2640_QVGA_YUV422_20FPS;
  4010f4:	4914      	ldr	r1, [pc, #80]	; (401148 <ov_configure+0x94>)
		break;
  4010f6:	e010      	b.n	40111a <ov_configure+0x66>

	case QVGA_YUV422_30FPS:
		p_regs_conf = OV2640_QVGA_YUV422_30FPS;
  4010f8:	4914      	ldr	r1, [pc, #80]	; (40114c <ov_configure+0x98>)
		break;
  4010fa:	e00e      	b.n	40111a <ov_configure+0x66>

	case QVGA_RGB888:
		p_regs_conf = OV2640_QVGA_RGB888;
  4010fc:	4914      	ldr	r1, [pc, #80]	; (401150 <ov_configure+0x9c>)
		break;
  4010fe:	e00c      	b.n	40111a <ov_configure+0x66>

	case QQVGA_YUV422:
		p_regs_conf = OV2640_QQVGA_YUV422;
  401100:	4914      	ldr	r1, [pc, #80]	; (401154 <ov_configure+0xa0>)
		break;
  401102:	e00a      	b.n	40111a <ov_configure+0x66>

	case QQVGA_RGB888:
		p_regs_conf = OV2640_QQVGA_RGB888;
  401104:	4914      	ldr	r1, [pc, #80]	; (401158 <ov_configure+0xa4>)
		break;
  401106:	e008      	b.n	40111a <ov_configure+0x66>

	case TEST_PATTERN:
		p_regs_conf = OV2640_TEST_PATTERN;
  401108:	4914      	ldr	r1, [pc, #80]	; (40115c <ov_configure+0xa8>)
		break;
  40110a:	e006      	b.n	40111a <ov_configure+0x66>

	case VGA_YUV422_20FPS:
		p_regs_conf = OV2640_VGA_YUV422_20FPS;
  40110c:	4914      	ldr	r1, [pc, #80]	; (401160 <ov_configure+0xac>)
		break;
  40110e:	e004      	b.n	40111a <ov_configure+0x66>
	if (p_regs_conf != NULL) {
		ov_write_regs( p_twi, p_regs_conf );
		return 0;
	}

	return 1;
  401110:	2001      	movs	r0, #1
  401112:	bd08      	pop	{r3, pc}
		p_regs_conf = OV2640_JPEG_INIT;
  401114:	4913      	ldr	r1, [pc, #76]	; (401164 <ov_configure+0xb0>)
  401116:	e000      	b.n	40111a <ov_configure+0x66>
		p_regs_conf = OV2640_JPEG;
  401118:	4913      	ldr	r1, [pc, #76]	; (401168 <ov_configure+0xb4>)
		ov_write_regs( p_twi, p_regs_conf );
  40111a:	4b14      	ldr	r3, [pc, #80]	; (40116c <ov_configure+0xb8>)
  40111c:	4798      	blx	r3
		return 0;
  40111e:	2000      	movs	r0, #0
}
  401120:	bd08      	pop	{r3, pc}
  401122:	bf00      	nop
  401124:	004074f8 	.word	0x004074f8
  401128:	00406a00 	.word	0x00406a00
  40112c:	00406a50 	.word	0x00406a50
  401130:	00406aa4 	.word	0x00406aa4
  401134:	00406908 	.word	0x00406908
  401138:	00406958 	.word	0x00406958
  40113c:	004069ac 	.word	0x004069ac
  401140:	00406f54 	.word	0x00406f54
  401144:	00407044 	.word	0x00407044
  401148:	00407134 	.word	0x00407134
  40114c:	00407224 	.word	0x00407224
  401150:	00406e60 	.word	0x00406e60
  401154:	00406d6c 	.word	0x00406d6c
  401158:	00406c78 	.word	0x00406c78
  40115c:	00407314 	.word	0x00407314
  401160:	00407408 	.word	0x00407408
  401164:	00406af8 	.word	0x00406af8
  401168:	004068f4 	.word	0x004068f4
  40116c:	00400f1d 	.word	0x00400f1d

00401170 <TC0_Handler>:
 */ 

#include "timer_interface.h"

void TC0_Handler(void)
{
  401170:	b508      	push	{r3, lr}
	uint32_t ul_status;

	// Read TC0 status.
	ul_status = tc_get_status(TC0, 0);
  401172:	2100      	movs	r1, #0
  401174:	4805      	ldr	r0, [pc, #20]	; (40118c <TC0_Handler+0x1c>)
  401176:	4b06      	ldr	r3, [pc, #24]	; (401190 <TC0_Handler+0x20>)
  401178:	4798      	blx	r3

	// RC compare.
	if ((ul_status & TC_SR_CPCS) == TC_SR_CPCS) {
  40117a:	f010 0f10 	tst.w	r0, #16
  40117e:	d004      	beq.n	40118a <TC0_Handler+0x1a>
		counts++;
  401180:	4a04      	ldr	r2, [pc, #16]	; (401194 <TC0_Handler+0x24>)
  401182:	7813      	ldrb	r3, [r2, #0]
  401184:	3301      	adds	r3, #1
  401186:	b2db      	uxtb	r3, r3
  401188:	7013      	strb	r3, [r2, #0]
  40118a:	bd08      	pop	{r3, pc}
  40118c:	40010000 	.word	0x40010000
  401190:	004007a5 	.word	0x004007a5
  401194:	20019168 	.word	0x20019168

00401198 <configure_tc>:
	}
}

void configure_tc(void)
{
  401198:	b530      	push	{r4, r5, lr}
  40119a:	b085      	sub	sp, #20

	// Get system clock.
	ul_sysclk = sysclk_get_cpu_hz();

	// Configure PMC.
	pmc_enable_periph_clk(ID_TC0);
  40119c:	2017      	movs	r0, #23
  40119e:	4b14      	ldr	r3, [pc, #80]	; (4011f0 <configure_tc+0x58>)
  4011a0:	4798      	blx	r3

	// Configure TC for a 1Hz frequency and trigger on RC compare.
	tc_find_mck_divisor(TC_FREQ, ul_sysclk, &ul_div, &ul_tcclks, ul_sysclk);
  4011a2:	4d14      	ldr	r5, [pc, #80]	; (4011f4 <configure_tc+0x5c>)
  4011a4:	9500      	str	r5, [sp, #0]
  4011a6:	ab02      	add	r3, sp, #8
  4011a8:	aa03      	add	r2, sp, #12
  4011aa:	4629      	mov	r1, r5
  4011ac:	2001      	movs	r0, #1
  4011ae:	4c12      	ldr	r4, [pc, #72]	; (4011f8 <configure_tc+0x60>)
  4011b0:	47a0      	blx	r4
	tc_init(TC0, 0, ul_tcclks | TC_CMR_CPCTRG);
  4011b2:	4c12      	ldr	r4, [pc, #72]	; (4011fc <configure_tc+0x64>)
  4011b4:	9a02      	ldr	r2, [sp, #8]
  4011b6:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
  4011ba:	2100      	movs	r1, #0
  4011bc:	4620      	mov	r0, r4
  4011be:	4b10      	ldr	r3, [pc, #64]	; (401200 <configure_tc+0x68>)
  4011c0:	4798      	blx	r3
	tc_write_rc(TC0, 0, (ul_sysclk / ul_div) / TC_FREQ);
  4011c2:	9a03      	ldr	r2, [sp, #12]
  4011c4:	fbb5 f2f2 	udiv	r2, r5, r2
  4011c8:	2100      	movs	r1, #0
  4011ca:	4620      	mov	r0, r4
  4011cc:	4b0d      	ldr	r3, [pc, #52]	; (401204 <configure_tc+0x6c>)
  4011ce:	4798      	blx	r3
  4011d0:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
  4011d4:	4b0c      	ldr	r3, [pc, #48]	; (401208 <configure_tc+0x70>)
  4011d6:	601a      	str	r2, [r3, #0]

	// Configure and enable interrupt on RC compare.
	NVIC_EnableIRQ((IRQn_Type) ID_TC0);
	tc_enable_interrupt(TC0, 0, TC_IER_CPCS);
  4011d8:	2210      	movs	r2, #16
  4011da:	2100      	movs	r1, #0
  4011dc:	4620      	mov	r0, r4
  4011de:	4b0b      	ldr	r3, [pc, #44]	; (40120c <configure_tc+0x74>)
  4011e0:	4798      	blx	r3
	
	// Start the timer
	tc_start(TC0, 0);
  4011e2:	2100      	movs	r1, #0
  4011e4:	4620      	mov	r0, r4
  4011e6:	4b0a      	ldr	r3, [pc, #40]	; (401210 <configure_tc+0x78>)
  4011e8:	4798      	blx	r3
  4011ea:	b005      	add	sp, #20
  4011ec:	bd30      	pop	{r4, r5, pc}
  4011ee:	bf00      	nop
  4011f0:	00400649 	.word	0x00400649
  4011f4:	07270e00 	.word	0x07270e00
  4011f8:	004007ad 	.word	0x004007ad
  4011fc:	40010000 	.word	0x40010000
  401200:	00400775 	.word	0x00400775
  401204:	00400795 	.word	0x00400795
  401208:	e000e100 	.word	0xe000e100
  40120c:	0040079d 	.word	0x0040079d
  401210:	0040078d 	.word	0x0040078d

00401214 <wifi_provision_handler>:
	// WIFI_PROVISIONING pin is button
	// when low set flag as true 
	unused(ul_id);
	unused(ul_mask);
	
	provision_flag = 1;
  401214:	2201      	movs	r2, #1
  401216:	4b01      	ldr	r3, [pc, #4]	; (40121c <wifi_provision_handler+0x8>)
  401218:	701a      	strb	r2, [r3, #0]
  40121a:	4770      	bx	lr
  40121c:	20000a71 	.word	0x20000a71

00401220 <process_incoming_byte_wifi>:
	input_line_wifi[input_pos_wifi++] = in_byte;
  401220:	4a03      	ldr	r2, [pc, #12]	; (401230 <process_incoming_byte_wifi+0x10>)
  401222:	6813      	ldr	r3, [r2, #0]
  401224:	1c59      	adds	r1, r3, #1
  401226:	6011      	str	r1, [r2, #0]
  401228:	4a02      	ldr	r2, [pc, #8]	; (401234 <process_incoming_byte_wifi+0x14>)
  40122a:	54d0      	strb	r0, [r2, r3]
  40122c:	4770      	bx	lr
  40122e:	bf00      	nop
  401230:	20000a6c 	.word	0x20000a6c
  401234:	2001916c 	.word	0x2001916c

00401238 <USART0_Handler>:
void WIFI_USART_HANDLER(void) {
  401238:	b510      	push	{r4, lr}
	ul_status = usart_get_status(WIFI_USART);
  40123a:	480a      	ldr	r0, [pc, #40]	; (401264 <USART0_Handler+0x2c>)
  40123c:	4b0a      	ldr	r3, [pc, #40]	; (401268 <USART0_Handler+0x30>)
  40123e:	4798      	blx	r3
	if (ul_status & US_CSR_RXBUFF) {
  401240:	f410 5f80 	tst.w	r0, #4096	; 0x1000
  401244:	d100      	bne.n	401248 <USART0_Handler+0x10>
  401246:	bd10      	pop	{r4, pc}
		usart_read(WIFI_USART, &received_byte_wifi);
  401248:	4c08      	ldr	r4, [pc, #32]	; (40126c <USART0_Handler+0x34>)
  40124a:	4621      	mov	r1, r4
  40124c:	4805      	ldr	r0, [pc, #20]	; (401264 <USART0_Handler+0x2c>)
  40124e:	4b08      	ldr	r3, [pc, #32]	; (401270 <USART0_Handler+0x38>)
  401250:	4798      	blx	r3
		new_rx_wifi = 1;
  401252:	2201      	movs	r2, #1
  401254:	4b07      	ldr	r3, [pc, #28]	; (401274 <USART0_Handler+0x3c>)
  401256:	701a      	strb	r2, [r3, #0]
		process_incoming_byte_wifi((uint8_t)received_byte_wifi);
  401258:	6820      	ldr	r0, [r4, #0]
  40125a:	b2c0      	uxtb	r0, r0
  40125c:	4b06      	ldr	r3, [pc, #24]	; (401278 <USART0_Handler+0x40>)
  40125e:	4798      	blx	r3
}
  401260:	e7f1      	b.n	401246 <USART0_Handler+0xe>
  401262:	bf00      	nop
  401264:	40024000 	.word	0x40024000
  401268:	00400b71 	.word	0x00400b71
  40126c:	20000a74 	.word	0x20000a74
  401270:	00400ba9 	.word	0x00400ba9
  401274:	20000a70 	.word	0x20000a70
  401278:	00401221 	.word	0x00401221

0040127c <process_data_wifi>:
void process_data_wifi(void) {
  40127c:	b508      	push	{r3, lr}
	if (strstr(input_line_wifi, "SUCCESS")) {
  40127e:	4904      	ldr	r1, [pc, #16]	; (401290 <process_data_wifi+0x14>)
  401280:	4804      	ldr	r0, [pc, #16]	; (401294 <process_data_wifi+0x18>)
  401282:	4b05      	ldr	r3, [pc, #20]	; (401298 <process_data_wifi+0x1c>)
  401284:	4798      	blx	r3
  401286:	b110      	cbz	r0, 40128e <process_data_wifi+0x12>
		success_flag = 1;
  401288:	2201      	movs	r2, #1
  40128a:	4b04      	ldr	r3, [pc, #16]	; (40129c <process_data_wifi+0x20>)
  40128c:	701a      	strb	r2, [r3, #0]
  40128e:	bd08      	pop	{r3, pc}
  401290:	00407524 	.word	0x00407524
  401294:	2001916c 	.word	0x2001916c
  401298:	00401dbd 	.word	0x00401dbd
  40129c:	20000a78 	.word	0x20000a78

004012a0 <wifi_command_response_handler>:
void wifi_command_response_handler(uint32_t ul_id, uint32_t ul_mask) {
  4012a0:	b508      	push	{r3, lr}
	wifi_comm_success = 1;
  4012a2:	2201      	movs	r2, #1
  4012a4:	4b07      	ldr	r3, [pc, #28]	; (4012c4 <wifi_command_response_handler+0x24>)
  4012a6:	701a      	strb	r2, [r3, #0]
	process_data_wifi();
  4012a8:	4b07      	ldr	r3, [pc, #28]	; (4012c8 <wifi_command_response_handler+0x28>)
  4012aa:	4798      	blx	r3
	for (int jj=0;jj<MAX_INPUT_WIFI;jj++) input_line_wifi[jj] = 0;
  4012ac:	2300      	movs	r3, #0
  4012ae:	4907      	ldr	r1, [pc, #28]	; (4012cc <wifi_command_response_handler+0x2c>)
  4012b0:	461a      	mov	r2, r3
  4012b2:	54ca      	strb	r2, [r1, r3]
  4012b4:	3301      	adds	r3, #1
  4012b6:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
  4012ba:	d1fa      	bne.n	4012b2 <wifi_command_response_handler+0x12>
	input_pos_wifi = 0;
  4012bc:	2200      	movs	r2, #0
  4012be:	4b04      	ldr	r3, [pc, #16]	; (4012d0 <wifi_command_response_handler+0x30>)
  4012c0:	601a      	str	r2, [r3, #0]
  4012c2:	bd08      	pop	{r3, pc}
  4012c4:	20000a88 	.word	0x20000a88
  4012c8:	0040127d 	.word	0x0040127d
  4012cc:	2001916c 	.word	0x2001916c
  4012d0:	20000a6c 	.word	0x20000a6c

004012d4 <SPI_Handler>:
 *
 * \return SPI status register value.
 */
static inline uint32_t spi_read_status(Spi *p_spi)
{
	return p_spi->SPI_SR;
  4012d4:	4b10      	ldr	r3, [pc, #64]	; (401318 <SPI_Handler+0x44>)
  4012d6:	691b      	ldr	r3, [r3, #16]
	// Handler for peripheral mode interrupts on SPI bus. When the ESP32 SPI controller requests data, this interrupt should send one byte of the image at a time.
	uint32_t new_cmd = 0;
	static uint16_t data;
	uint8_t uc_pcs;

	if (spi_read_status(SPI) & SPI_SR_RDRF) {
  4012d8:	f013 0f01 	tst.w	r3, #1
  4012dc:	d100      	bne.n	4012e0 <SPI_Handler+0xc>
  4012de:	4770      	bx	lr
void SPI_Handler(void) {
  4012e0:	b510      	push	{r4, lr}
  4012e2:	b082      	sub	sp, #8
		spi_read(SPI, &data, &uc_pcs);
  4012e4:	f10d 0207 	add.w	r2, sp, #7
  4012e8:	490c      	ldr	r1, [pc, #48]	; (40131c <SPI_Handler+0x48>)
  4012ea:	480b      	ldr	r0, [pc, #44]	; (401318 <SPI_Handler+0x44>)
  4012ec:	4b0c      	ldr	r3, [pc, #48]	; (401320 <SPI_Handler+0x4c>)
  4012ee:	4798      	blx	r3
		
		if (transfer_len--) {
  4012f0:	4a0c      	ldr	r2, [pc, #48]	; (401324 <SPI_Handler+0x50>)
  4012f2:	6813      	ldr	r3, [r2, #0]
  4012f4:	1e59      	subs	r1, r3, #1
  4012f6:	6011      	str	r1, [r2, #0]
  4012f8:	b90b      	cbnz	r3, 4012fe <SPI_Handler+0x2a>
			spi_write(SPI, g_image_buffer[transfer_index++], 0, 0);
		}
	}
}
  4012fa:	b002      	add	sp, #8
  4012fc:	bd10      	pop	{r4, pc}
			spi_write(SPI, g_image_buffer[transfer_index++], 0, 0);
  4012fe:	4a0a      	ldr	r2, [pc, #40]	; (401328 <SPI_Handler+0x54>)
  401300:	6813      	ldr	r3, [r2, #0]
  401302:	1c59      	adds	r1, r3, #1
  401304:	6011      	str	r1, [r2, #0]
  401306:	4a09      	ldr	r2, [pc, #36]	; (40132c <SPI_Handler+0x58>)
  401308:	5cd1      	ldrb	r1, [r2, r3]
  40130a:	2300      	movs	r3, #0
  40130c:	461a      	mov	r2, r3
  40130e:	4802      	ldr	r0, [pc, #8]	; (401318 <SPI_Handler+0x44>)
  401310:	4c07      	ldr	r4, [pc, #28]	; (401330 <SPI_Handler+0x5c>)
  401312:	47a0      	blx	r4
}
  401314:	e7f1      	b.n	4012fa <SPI_Handler+0x26>
  401316:	bf00      	nop
  401318:	40008000 	.word	0x40008000
  40131c:	20000a68 	.word	0x20000a68
  401320:	004006c3 	.word	0x004006c3
  401324:	20000a80 	.word	0x20000a80
  401328:	20000a7c 	.word	0x20000a7c
  40132c:	20000ac8 	.word	0x20000ac8
  401330:	004006f1 	.word	0x004006f1

00401334 <configure_usart_wifi>:

void configure_usart_wifi(void) {
  401334:	b530      	push	{r4, r5, lr}
  401336:	b087      	sub	sp, #28
	// Configuration of USART port used to communicate with the ESP32.
	gpio_configure_pin(PIN_USART0_RXD_IDX, PIN_USART0_RXD_FLAGS);
  401338:	4d18      	ldr	r5, [pc, #96]	; (40139c <configure_usart_wifi+0x68>)
  40133a:	4629      	mov	r1, r5
  40133c:	2005      	movs	r0, #5
  40133e:	4c18      	ldr	r4, [pc, #96]	; (4013a0 <configure_usart_wifi+0x6c>)
  401340:	47a0      	blx	r4
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
  401342:	4629      	mov	r1, r5
  401344:	2006      	movs	r0, #6
  401346:	47a0      	blx	r4
	
	static uint32_t ul_sysclk;
	const sam_usart_opt_t wifi_usart_settings = {
  401348:	466c      	mov	r4, sp
  40134a:	4d16      	ldr	r5, [pc, #88]	; (4013a4 <configure_usart_wifi+0x70>)
  40134c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  40134e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  401350:	e895 0003 	ldmia.w	r5, {r0, r1}
  401354:	e884 0003 	stmia.w	r4, {r0, r1}
		/* This field is only used in IrDA mode. */
		0
	};
	
	/* Get system clock. */
	ul_sysclk = sysclk_get_cpu_hz();
  401358:	4d13      	ldr	r5, [pc, #76]	; (4013a8 <configure_usart_wifi+0x74>)
  40135a:	4b14      	ldr	r3, [pc, #80]	; (4013ac <configure_usart_wifi+0x78>)
  40135c:	602b      	str	r3, [r5, #0]
	
	pmc_enable_periph_clk(WIFI_USART_ID);
  40135e:	200e      	movs	r0, #14
  401360:	4b13      	ldr	r3, [pc, #76]	; (4013b0 <configure_usart_wifi+0x7c>)
  401362:	4798      	blx	r3
	
	usart_init_rs232(WIFI_USART,&wifi_usart_settings,ul_sysclk);
  401364:	4c13      	ldr	r4, [pc, #76]	; (4013b4 <configure_usart_wifi+0x80>)
  401366:	682a      	ldr	r2, [r5, #0]
  401368:	4669      	mov	r1, sp
  40136a:	4620      	mov	r0, r4
  40136c:	4b12      	ldr	r3, [pc, #72]	; (4013b8 <configure_usart_wifi+0x84>)
  40136e:	4798      	blx	r3

	/* Disable all the interrupts. */
	usart_disable_interrupt(WIFI_USART, ALL_INTERRUPT_MASK);
  401370:	f04f 31ff 	mov.w	r1, #4294967295
  401374:	4620      	mov	r0, r4
  401376:	4b11      	ldr	r3, [pc, #68]	; (4013bc <configure_usart_wifi+0x88>)
  401378:	4798      	blx	r3
	
	/* Enable TX & RX function. */
	usart_enable_tx(WIFI_USART);
  40137a:	4620      	mov	r0, r4
  40137c:	4b10      	ldr	r3, [pc, #64]	; (4013c0 <configure_usart_wifi+0x8c>)
  40137e:	4798      	blx	r3
	usart_enable_rx(WIFI_USART);
  401380:	4620      	mov	r0, r4
  401382:	4b10      	ldr	r3, [pc, #64]	; (4013c4 <configure_usart_wifi+0x90>)
  401384:	4798      	blx	r3

	usart_enable_interrupt(WIFI_USART, US_IER_RXRDY);
  401386:	2101      	movs	r1, #1
  401388:	4620      	mov	r0, r4
  40138a:	4b0f      	ldr	r3, [pc, #60]	; (4013c8 <configure_usart_wifi+0x94>)
  40138c:	4798      	blx	r3
  40138e:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  401392:	4b0e      	ldr	r3, [pc, #56]	; (4013cc <configure_usart_wifi+0x98>)
  401394:	601a      	str	r2, [r3, #0]

	/* Configure and enable interrupt of USART. */
	NVIC_EnableIRQ(WIFI_USART_IRQn);
}
  401396:	b007      	add	sp, #28
  401398:	bd30      	pop	{r4, r5, pc}
  40139a:	bf00      	nop
  40139c:	08000001 	.word	0x08000001
  4013a0:	004002dd 	.word	0x004002dd
  4013a4:	0040750c 	.word	0x0040750c
  4013a8:	20000a84 	.word	0x20000a84
  4013ac:	07270e00 	.word	0x07270e00
  4013b0:	00400649 	.word	0x00400649
  4013b4:	40024000 	.word	0x40024000
  4013b8:	00400b09 	.word	0x00400b09
  4013bc:	00400b6d 	.word	0x00400b6d
  4013c0:	00400b5d 	.word	0x00400b5d
  4013c4:	00400b63 	.word	0x00400b63
  4013c8:	00400b69 	.word	0x00400b69
  4013cc:	e000e100 	.word	0xe000e100

004013d0 <configure_wifi_comm_pin>:

void configure_wifi_comm_pin(void) {
  4013d0:	b530      	push	{r4, r5, lr}
  4013d2:	b083      	sub	sp, #12
	// Configuration of ?command complete? rising-edge interrupt.
	/* Configure PIO clock. */
	pmc_enable_periph_clk(WIFI_COMM_ID);
  4013d4:	200b      	movs	r0, #11
  4013d6:	4b0b      	ldr	r3, [pc, #44]	; (401404 <configure_wifi_comm_pin+0x34>)
  4013d8:	4798      	blx	r3

	/* Initialize PIO interrupt handler, see PIO definition in conf_board.h
	**/
	pio_handler_set(WIFI_COMM_PIO, WIFI_COMM_ID, WIFI_COMM_PIN_NUM, WIFI_COMM_ATTR, wifi_command_response_handler);
  4013da:	4c0b      	ldr	r4, [pc, #44]	; (401408 <configure_wifi_comm_pin+0x38>)
  4013dc:	4b0b      	ldr	r3, [pc, #44]	; (40140c <configure_wifi_comm_pin+0x3c>)
  4013de:	9300      	str	r3, [sp, #0]
  4013e0:	2370      	movs	r3, #112	; 0x70
  4013e2:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4013e6:	210b      	movs	r1, #11
  4013e8:	4620      	mov	r0, r4
  4013ea:	4d09      	ldr	r5, [pc, #36]	; (401410 <configure_wifi_comm_pin+0x40>)
  4013ec:	47a8      	blx	r5
  4013ee:	f44f 6200 	mov.w	r2, #2048	; 0x800
  4013f2:	4b08      	ldr	r3, [pc, #32]	; (401414 <configure_wifi_comm_pin+0x44>)
  4013f4:	601a      	str	r2, [r3, #0]

	/* Enable PIO controller IRQs. */
	NVIC_EnableIRQ((IRQn_Type)WIFI_COMM_ID);

	/* Enable PIO interrupt lines. */
	pio_enable_interrupt(WIFI_COMM_PIO, WIFI_COMM_PIN_NUM);
  4013f6:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
  4013fa:	4620      	mov	r0, r4
  4013fc:	4b06      	ldr	r3, [pc, #24]	; (401418 <configure_wifi_comm_pin+0x48>)
  4013fe:	4798      	blx	r3
}
  401400:	b003      	add	sp, #12
  401402:	bd30      	pop	{r4, r5, pc}
  401404:	00400649 	.word	0x00400649
  401408:	400e0e00 	.word	0x400e0e00
  40140c:	004012a1 	.word	0x004012a1
  401410:	00400495 	.word	0x00400495
  401414:	e000e100 	.word	0xe000e100
  401418:	004002cd 	.word	0x004002cd

0040141c <configure_wifi_provision_pin>:

void configure_wifi_provision_pin(void) { //
  40141c:	b530      	push	{r4, r5, lr}
  40141e:	b083      	sub	sp, #12
	// Configuration of button interrupt to initiate provisioning mode.
	// if flag then interrupt
	// This configures the ESP32 as an access point with SSID ?ESD1 XY?, where X is the fifth byte of the MAC address and Y is the 
	// sixth byte of the MAC address
	pmc_enable_periph_clk(WIFI_PROVIS_ID);
  401420:	200b      	movs	r0, #11
  401422:	4b0e      	ldr	r3, [pc, #56]	; (40145c <configure_wifi_provision_pin+0x40>)
  401424:	4798      	blx	r3
	pio_set_debounce_filter(WIFI_PROVIS_PIO, WIFI_PROVIS_PIN_NUM, 10);
  401426:	4c0e      	ldr	r4, [pc, #56]	; (401460 <configure_wifi_provision_pin+0x44>)
  401428:	220a      	movs	r2, #10
  40142a:	f44f 2180 	mov.w	r1, #262144	; 0x40000
  40142e:	4620      	mov	r0, r4
  401430:	4b0c      	ldr	r3, [pc, #48]	; (401464 <configure_wifi_provision_pin+0x48>)
  401432:	4798      	blx	r3
	pio_handler_set(WIFI_PROVIS_PIO, WIFI_PROVIS_ID, WIFI_PROVIS_PIN_NUM, WIFI_PROVIS_ATTR, wifi_provision_handler);
  401434:	4b0c      	ldr	r3, [pc, #48]	; (401468 <configure_wifi_provision_pin+0x4c>)
  401436:	9300      	str	r3, [sp, #0]
  401438:	2349      	movs	r3, #73	; 0x49
  40143a:	f44f 2280 	mov.w	r2, #262144	; 0x40000
  40143e:	210b      	movs	r1, #11
  401440:	4620      	mov	r0, r4
  401442:	4d0a      	ldr	r5, [pc, #40]	; (40146c <configure_wifi_provision_pin+0x50>)
  401444:	47a8      	blx	r5
  401446:	f44f 6200 	mov.w	r2, #2048	; 0x800
  40144a:	4b09      	ldr	r3, [pc, #36]	; (401470 <configure_wifi_provision_pin+0x54>)
  40144c:	601a      	str	r2, [r3, #0]
	NVIC_EnableIRQ((IRQn_Type)WIFI_PROVIS_ID);
	pio_enable_interrupt(WIFI_PROVIS_PIO, WIFI_PROVIS_PIN_NUM);
  40144e:	f44f 2180 	mov.w	r1, #262144	; 0x40000
  401452:	4620      	mov	r0, r4
  401454:	4b07      	ldr	r3, [pc, #28]	; (401474 <configure_wifi_provision_pin+0x58>)
  401456:	4798      	blx	r3
}
  401458:	b003      	add	sp, #12
  40145a:	bd30      	pop	{r4, r5, pc}
  40145c:	00400649 	.word	0x00400649
  401460:	400e0e00 	.word	0x400e0e00
  401464:	0040019d 	.word	0x0040019d
  401468:	00401215 	.word	0x00401215
  40146c:	00400495 	.word	0x00400495
  401470:	e000e100 	.word	0xe000e100
  401474:	004002cd 	.word	0x004002cd

00401478 <configure_spi>:

void configure_spi(void) {
  401478:	b510      	push	{r4, lr}
	// Configuration of SPI port and interrupts used to send images to the ESP32.
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  40147a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40147e:	200c      	movs	r0, #12
  401480:	4c0e      	ldr	r4, [pc, #56]	; (4014bc <configure_spi+0x44>)
  401482:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  401484:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  401488:	200d      	movs	r0, #13
  40148a:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  40148c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  401490:	200e      	movs	r0, #14
  401492:	47a0      	blx	r4
	gpio_configure_pin(SPI_NPCS0_GPIO, SPI_NPCS0_FLAGS);
  401494:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  401498:	200b      	movs	r0, #11
  40149a:	47a0      	blx	r4
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  40149c:	4b08      	ldr	r3, [pc, #32]	; (4014c0 <configure_spi+0x48>)
  40149e:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4014a2:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  __ASM volatile ("dsb 0xF":::"memory");
  4014a6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  4014aa:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  4014ae:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  4014b2:	2100      	movs	r1, #0
  4014b4:	f883 1315 	strb.w	r1, [r3, #789]	; 0x315
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  4014b8:	601a      	str	r2, [r3, #0]
  4014ba:	bd10      	pop	{r4, pc}
  4014bc:	004002dd 	.word	0x004002dd
  4014c0:	e000e100 	.word	0xe000e100

004014c4 <spi_peripheral_initialize>:
	NVIC_ClearPendingIRQ(SPI_IRQn);
	NVIC_SetPriority(SPI_IRQn, 0);
	NVIC_EnableIRQ(SPI_IRQn);
}

void spi_peripheral_initialize(void) {
  4014c4:	b510      	push	{r4, lr}
	// Initialize the SPI port as a peripheral (slave) device.
	spi_enable_clock(SPI);
  4014c6:	4c13      	ldr	r4, [pc, #76]	; (401514 <spi_peripheral_initialize+0x50>)
  4014c8:	4620      	mov	r0, r4
  4014ca:	4b13      	ldr	r3, [pc, #76]	; (401518 <spi_peripheral_initialize+0x54>)
  4014cc:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  4014ce:	2302      	movs	r3, #2
  4014d0:	6023      	str	r3, [r4, #0]
	p_spi->SPI_CR = SPI_CR_SWRST;
  4014d2:	2380      	movs	r3, #128	; 0x80
  4014d4:	6023      	str	r3, [r4, #0]
	p_spi->SPI_MR &= (~SPI_MR_MSTR);
  4014d6:	6863      	ldr	r3, [r4, #4]
  4014d8:	f023 0301 	bic.w	r3, r3, #1
  4014dc:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  4014de:	6863      	ldr	r3, [r4, #4]
  4014e0:	f043 0310 	orr.w	r3, r3, #16
  4014e4:	6063      	str	r3, [r4, #4]
	spi_disable(SPI);
	spi_reset(SPI);
	spi_set_slave_mode(SPI);
	spi_disable_mode_fault_detect(SPI);
	spi_set_peripheral_chip_select_value(SPI, SPI_CHIP_PCS);
  4014e6:	210e      	movs	r1, #14
  4014e8:	4620      	mov	r0, r4
  4014ea:	4b0c      	ldr	r3, [pc, #48]	; (40151c <spi_peripheral_initialize+0x58>)
  4014ec:	4798      	blx	r3
	spi_set_clock_polarity(SPI, SPI_CHIP_SEL, SPI_CLK_POLARITY);
  4014ee:	2200      	movs	r2, #0
  4014f0:	4611      	mov	r1, r2
  4014f2:	4620      	mov	r0, r4
  4014f4:	4b0a      	ldr	r3, [pc, #40]	; (401520 <spi_peripheral_initialize+0x5c>)
  4014f6:	4798      	blx	r3
	spi_set_clock_phase(SPI, SPI_CHIP_SEL, SPI_CLK_PHASE);
  4014f8:	2201      	movs	r2, #1
  4014fa:	2100      	movs	r1, #0
  4014fc:	4620      	mov	r0, r4
  4014fe:	4b09      	ldr	r3, [pc, #36]	; (401524 <spi_peripheral_initialize+0x60>)
  401500:	4798      	blx	r3
	spi_set_bits_per_transfer(SPI, SPI_CHIP_SEL, SPI_CSR_BITS_8_BIT);
  401502:	2200      	movs	r2, #0
  401504:	4611      	mov	r1, r2
  401506:	4620      	mov	r0, r4
  401508:	4b07      	ldr	r3, [pc, #28]	; (401528 <spi_peripheral_initialize+0x64>)
  40150a:	4798      	blx	r3
 * \param p_spi Pointer to an SPI instance.
 * \param ul_sources Interrupts to be enabled.
 */
static inline void spi_enable_interrupt(Spi *p_spi, uint32_t ul_sources)
{
	p_spi->SPI_IER = ul_sources;
  40150c:	2301      	movs	r3, #1
  40150e:	6163      	str	r3, [r4, #20]
	p_spi->SPI_CR = SPI_CR_SPIEN;
  401510:	6023      	str	r3, [r4, #0]
  401512:	bd10      	pop	{r4, pc}
  401514:	40008000 	.word	0x40008000
  401518:	0040069d 	.word	0x0040069d
  40151c:	004006ad 	.word	0x004006ad
  401520:	00400725 	.word	0x00400725
  401524:	00400743 	.word	0x00400743
  401528:	00400761 	.word	0x00400761

0040152c <prepare_spi_transfer>:
	spi_enable(SPI);
}

void prepare_spi_transfer(void) {
	// Set necessary parameters to prepare for SPI transfer.
	transfer_len = g_image_length;
  40152c:	4b04      	ldr	r3, [pc, #16]	; (401540 <prepare_spi_transfer+0x14>)
  40152e:	681a      	ldr	r2, [r3, #0]
  401530:	4b04      	ldr	r3, [pc, #16]	; (401544 <prepare_spi_transfer+0x18>)
  401532:	601a      	str	r2, [r3, #0]
	transfer_index = soi_pos;
  401534:	4b04      	ldr	r3, [pc, #16]	; (401548 <prepare_spi_transfer+0x1c>)
  401536:	681a      	ldr	r2, [r3, #0]
  401538:	4b04      	ldr	r3, [pc, #16]	; (40154c <prepare_spi_transfer+0x20>)
  40153a:	601a      	str	r2, [r3, #0]
  40153c:	4770      	bx	lr
  40153e:	bf00      	nop
  401540:	20000a5c 	.word	0x20000a5c
  401544:	20000a80 	.word	0x20000a80
  401548:	20000a64 	.word	0x20000a64
  40154c:	20000a7c 	.word	0x20000a7c

00401550 <write_wifi_command>:
}

void write_wifi_command(char* comm, uint8_t cnt) { //
  401550:	b510      	push	{r4, lr}
  401552:	460c      	mov	r4, r1
	// Writes a command (comm) to the ESP32, and waits either for an acknowledgment (via the ?command complete? pin)
	// or a timeout. The timeout can be created by setting the global variable counts to zero, which will automatically increment every second, 
	// and waiting while counts < cnt.
	
	wifi_comm_success = false;
  401554:	2300      	movs	r3, #0
  401556:	4a09      	ldr	r2, [pc, #36]	; (40157c <write_wifi_command+0x2c>)
  401558:	7013      	strb	r3, [r2, #0]

	// wait for acknowledgment or timeout 
	counts = 0;
  40155a:	4a09      	ldr	r2, [pc, #36]	; (401580 <write_wifi_command+0x30>)
  40155c:	7013      	strb	r3, [r2, #0]
	usart_write_line(WIFI_USART,comm); // write command
  40155e:	4601      	mov	r1, r0
  401560:	4808      	ldr	r0, [pc, #32]	; (401584 <write_wifi_command+0x34>)
  401562:	4b09      	ldr	r3, [pc, #36]	; (401588 <write_wifi_command+0x38>)
  401564:	4798      	blx	r3
	while ((counts < cnt) && (!wifi_comm_success)) {
  401566:	4a06      	ldr	r2, [pc, #24]	; (401580 <write_wifi_command+0x30>)
  401568:	4904      	ldr	r1, [pc, #16]	; (40157c <write_wifi_command+0x2c>)
  40156a:	7813      	ldrb	r3, [r2, #0]
  40156c:	b2db      	uxtb	r3, r3
  40156e:	42a3      	cmp	r3, r4
  401570:	d202      	bcs.n	401578 <write_wifi_command+0x28>
  401572:	780b      	ldrb	r3, [r1, #0]
  401574:	2b00      	cmp	r3, #0
  401576:	d0f8      	beq.n	40156a <write_wifi_command+0x1a>
  401578:	bd10      	pop	{r4, pc}
  40157a:	bf00      	nop
  40157c:	20000a88 	.word	0x20000a88
  401580:	20019168 	.word	0x20019168
  401584:	40024000 	.word	0x40024000
  401588:	00400b89 	.word	0x00400b89

0040158c <write_image_to_web>:
	// follow this protocol (illustrated in Appendix C):
	// 1. Configure the SPI interface to be ready for a transfer by setting its parameters appropriately.
	// 2. Issue the command ?image transfer xxxx?, where xxxx is replaced by the length of the image you want to transfer.
	// 3. The ESP32 will then set the ?command complete? pin low and begin transferring the image over SPI.
	// 4. After the image is done sending, the ESP32 will set the ?command complete? pin high. The MCU should sense this and then move on.
	if (g_image_length == 0) {
  40158c:	4b0a      	ldr	r3, [pc, #40]	; (4015b8 <write_image_to_web+0x2c>)
  40158e:	681b      	ldr	r3, [r3, #0]
  401590:	b903      	cbnz	r3, 401594 <write_image_to_web+0x8>
  401592:	4770      	bx	lr
void write_image_to_web(void) { //
  401594:	b500      	push	{lr}
  401596:	b09b      	sub	sp, #108	; 0x6c
		return;
	}
	
	prepare_spi_transfer();
  401598:	4b08      	ldr	r3, [pc, #32]	; (4015bc <write_image_to_web+0x30>)
  40159a:	4798      	blx	r3
	uint8_t transfer_message[100];
	sprintf(transfer_message, "image_transfer %i\r\n", g_image_length); // use image_test for testing
  40159c:	4b06      	ldr	r3, [pc, #24]	; (4015b8 <write_image_to_web+0x2c>)
  40159e:	681a      	ldr	r2, [r3, #0]
  4015a0:	4907      	ldr	r1, [pc, #28]	; (4015c0 <write_image_to_web+0x34>)
  4015a2:	a801      	add	r0, sp, #4
  4015a4:	4b07      	ldr	r3, [pc, #28]	; (4015c4 <write_image_to_web+0x38>)
  4015a6:	4798      	blx	r3
	write_wifi_command(transfer_message,5);		
  4015a8:	2105      	movs	r1, #5
  4015aa:	a801      	add	r0, sp, #4
  4015ac:	4b06      	ldr	r3, [pc, #24]	; (4015c8 <write_image_to_web+0x3c>)
  4015ae:	4798      	blx	r3
	
  4015b0:	b01b      	add	sp, #108	; 0x6c
  4015b2:	f85d fb04 	ldr.w	pc, [sp], #4
  4015b6:	bf00      	nop
  4015b8:	20000a5c 	.word	0x20000a5c
  4015bc:	0040152d 	.word	0x0040152d
  4015c0:	0040752c 	.word	0x0040752c
  4015c4:	00401ac1 	.word	0x00401ac1
  4015c8:	00401551 	.word	0x00401551

004015cc <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
  4015cc:	b510      	push	{r4, lr}
  4015ce:	200b      	movs	r0, #11
  4015d0:	4c0a      	ldr	r4, [pc, #40]	; (4015fc <board_init+0x30>)
  4015d2:	47a0      	blx	r4
  4015d4:	200c      	movs	r0, #12
  4015d6:	47a0      	blx	r4
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  4015d8:	4b09      	ldr	r3, [pc, #36]	; (401600 <board_init+0x34>)
  4015da:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  4015de:	615a      	str	r2, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4015e0:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  4015e4:	f44f 7200 	mov.w	r2, #512	; 0x200
  4015e8:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4015ea:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4015ee:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  4015f2:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4015f4:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  4015f8:	bd10      	pop	{r4, pc}
  4015fa:	bf00      	nop
  4015fc:	00400649 	.word	0x00400649
  401600:	400e0e00 	.word	0x400e0e00

00401604 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  401604:	e7fe      	b.n	401604 <Dummy_Handler>
	...

00401608 <Reset_Handler>:
{
  401608:	b508      	push	{r3, lr}
	if (pSrc > pDest) {
  40160a:	4b21      	ldr	r3, [pc, #132]	; (401690 <Reset_Handler+0x88>)
  40160c:	4a21      	ldr	r2, [pc, #132]	; (401694 <Reset_Handler+0x8c>)
  40160e:	429a      	cmp	r2, r3
  401610:	d928      	bls.n	401664 <Reset_Handler+0x5c>
		for (; pDest < &_erelocate;) {
  401612:	4b21      	ldr	r3, [pc, #132]	; (401698 <Reset_Handler+0x90>)
  401614:	4a1e      	ldr	r2, [pc, #120]	; (401690 <Reset_Handler+0x88>)
  401616:	429a      	cmp	r2, r3
  401618:	d20c      	bcs.n	401634 <Reset_Handler+0x2c>
  40161a:	3b01      	subs	r3, #1
  40161c:	1a9b      	subs	r3, r3, r2
  40161e:	f023 0303 	bic.w	r3, r3, #3
  401622:	3304      	adds	r3, #4
  401624:	4413      	add	r3, r2
  401626:	491b      	ldr	r1, [pc, #108]	; (401694 <Reset_Handler+0x8c>)
			*pDest++ = *pSrc++;
  401628:	f851 0b04 	ldr.w	r0, [r1], #4
  40162c:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
  401630:	429a      	cmp	r2, r3
  401632:	d1f9      	bne.n	401628 <Reset_Handler+0x20>
	__NOP();
  401634:	bf00      	nop
	for (pDest = &_szero; pDest < &_ezero;) {
  401636:	4b19      	ldr	r3, [pc, #100]	; (40169c <Reset_Handler+0x94>)
  401638:	4a19      	ldr	r2, [pc, #100]	; (4016a0 <Reset_Handler+0x98>)
  40163a:	429a      	cmp	r2, r3
  40163c:	d20a      	bcs.n	401654 <Reset_Handler+0x4c>
  40163e:	3b01      	subs	r3, #1
  401640:	1a9b      	subs	r3, r3, r2
  401642:	f023 0303 	bic.w	r3, r3, #3
  401646:	3304      	adds	r3, #4
  401648:	4413      	add	r3, r2
		*pDest++ = 0;
  40164a:	2100      	movs	r1, #0
  40164c:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
  401650:	429a      	cmp	r2, r3
  401652:	d1fb      	bne.n	40164c <Reset_Handler+0x44>
	SCB->VTOR = ((uint32_t) pSrc);
  401654:	4b13      	ldr	r3, [pc, #76]	; (4016a4 <Reset_Handler+0x9c>)
  401656:	4a14      	ldr	r2, [pc, #80]	; (4016a8 <Reset_Handler+0xa0>)
  401658:	609a      	str	r2, [r3, #8]
	__libc_init_array();
  40165a:	4b14      	ldr	r3, [pc, #80]	; (4016ac <Reset_Handler+0xa4>)
  40165c:	4798      	blx	r3
	main();
  40165e:	4b14      	ldr	r3, [pc, #80]	; (4016b0 <Reset_Handler+0xa8>)
  401660:	4798      	blx	r3
  401662:	e7fe      	b.n	401662 <Reset_Handler+0x5a>
	} else if (pSrc < pDest) {
  401664:	4b0a      	ldr	r3, [pc, #40]	; (401690 <Reset_Handler+0x88>)
  401666:	4a0b      	ldr	r2, [pc, #44]	; (401694 <Reset_Handler+0x8c>)
  401668:	429a      	cmp	r2, r3
  40166a:	d2e3      	bcs.n	401634 <Reset_Handler+0x2c>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  40166c:	4b0a      	ldr	r3, [pc, #40]	; (401698 <Reset_Handler+0x90>)
  40166e:	4808      	ldr	r0, [pc, #32]	; (401690 <Reset_Handler+0x88>)
  401670:	1a18      	subs	r0, r3, r0
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  401672:	4611      	mov	r1, r2
  401674:	3a04      	subs	r2, #4
  401676:	4402      	add	r2, r0
		for (;nb_bytes;nb_bytes -= 4) {
  401678:	2800      	cmp	r0, #0
  40167a:	d0db      	beq.n	401634 <Reset_Handler+0x2c>
  40167c:	f1c1 0104 	rsb	r1, r1, #4
			*pDest-- = *pSrc--;
  401680:	f852 0904 	ldr.w	r0, [r2], #-4
  401684:	f843 0d04 	str.w	r0, [r3, #-4]!
		for (;nb_bytes;nb_bytes -= 4) {
  401688:	42ca      	cmn	r2, r1
  40168a:	d1f9      	bne.n	401680 <Reset_Handler+0x78>
  40168c:	e7d2      	b.n	401634 <Reset_Handler+0x2c>
  40168e:	bf00      	nop
  401690:	20000000 	.word	0x20000000
  401694:	004078ac 	.word	0x004078ac
  401698:	200009c0 	.word	0x200009c0
  40169c:	2001957c 	.word	0x2001957c
  4016a0:	200009c0 	.word	0x200009c0
  4016a4:	e000ed00 	.word	0xe000ed00
  4016a8:	00400000 	.word	0x00400000
  4016ac:	004019d5 	.word	0x004019d5
  4016b0:	00401871 	.word	0x00401871

004016b4 <SystemCoreClockUpdate>:
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  4016b4:	4b3c      	ldr	r3, [pc, #240]	; (4017a8 <SystemCoreClockUpdate+0xf4>)
  4016b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4016b8:	f003 0303 	and.w	r3, r3, #3
  4016bc:	2b03      	cmp	r3, #3
  4016be:	d80e      	bhi.n	4016de <SystemCoreClockUpdate+0x2a>
  4016c0:	e8df f003 	tbb	[pc, r3]
  4016c4:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  4016c8:	4b38      	ldr	r3, [pc, #224]	; (4017ac <SystemCoreClockUpdate+0xf8>)
  4016ca:	695b      	ldr	r3, [r3, #20]
  4016cc:	f013 0f80 	tst.w	r3, #128	; 0x80
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4016d0:	bf14      	ite	ne
  4016d2:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4016d6:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4016da:	4b35      	ldr	r3, [pc, #212]	; (4017b0 <SystemCoreClockUpdate+0xfc>)
  4016dc:	601a      	str	r2, [r3, #0]
		
	default:
		break;
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  4016de:	4b32      	ldr	r3, [pc, #200]	; (4017a8 <SystemCoreClockUpdate+0xf4>)
  4016e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4016e2:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4016e6:	2b70      	cmp	r3, #112	; 0x70
  4016e8:	d055      	beq.n	401796 <SystemCoreClockUpdate+0xe2>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4016ea:	4b2f      	ldr	r3, [pc, #188]	; (4017a8 <SystemCoreClockUpdate+0xf4>)
  4016ec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
		SystemCoreClock >>=
  4016ee:	4930      	ldr	r1, [pc, #192]	; (4017b0 <SystemCoreClockUpdate+0xfc>)
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4016f0:	f3c2 1202 	ubfx	r2, r2, #4, #3
		SystemCoreClock >>=
  4016f4:	680b      	ldr	r3, [r1, #0]
  4016f6:	40d3      	lsrs	r3, r2
  4016f8:	600b      	str	r3, [r1, #0]
  4016fa:	4770      	bx	lr
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  4016fc:	4b2a      	ldr	r3, [pc, #168]	; (4017a8 <SystemCoreClockUpdate+0xf4>)
  4016fe:	6a1b      	ldr	r3, [r3, #32]
  401700:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401704:	d003      	beq.n	40170e <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL;
  401706:	4a2b      	ldr	r2, [pc, #172]	; (4017b4 <SystemCoreClockUpdate+0x100>)
  401708:	4b29      	ldr	r3, [pc, #164]	; (4017b0 <SystemCoreClockUpdate+0xfc>)
  40170a:	601a      	str	r2, [r3, #0]
  40170c:	e7e7      	b.n	4016de <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40170e:	4a2a      	ldr	r2, [pc, #168]	; (4017b8 <SystemCoreClockUpdate+0x104>)
  401710:	4b27      	ldr	r3, [pc, #156]	; (4017b0 <SystemCoreClockUpdate+0xfc>)
  401712:	601a      	str	r2, [r3, #0]
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  401714:	4b24      	ldr	r3, [pc, #144]	; (4017a8 <SystemCoreClockUpdate+0xf4>)
  401716:	6a1b      	ldr	r3, [r3, #32]
  401718:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40171c:	2b10      	cmp	r3, #16
  40171e:	d005      	beq.n	40172c <SystemCoreClockUpdate+0x78>
  401720:	2b20      	cmp	r3, #32
  401722:	d1dc      	bne.n	4016de <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  401724:	4a23      	ldr	r2, [pc, #140]	; (4017b4 <SystemCoreClockUpdate+0x100>)
  401726:	4b22      	ldr	r3, [pc, #136]	; (4017b0 <SystemCoreClockUpdate+0xfc>)
  401728:	601a      	str	r2, [r3, #0]
			break;
  40172a:	e7d8      	b.n	4016de <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  40172c:	4a23      	ldr	r2, [pc, #140]	; (4017bc <SystemCoreClockUpdate+0x108>)
  40172e:	4b20      	ldr	r3, [pc, #128]	; (4017b0 <SystemCoreClockUpdate+0xfc>)
  401730:	601a      	str	r2, [r3, #0]
			break;
  401732:	e7d4      	b.n	4016de <SystemCoreClockUpdate+0x2a>
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  401734:	4b1c      	ldr	r3, [pc, #112]	; (4017a8 <SystemCoreClockUpdate+0xf4>)
  401736:	6a1b      	ldr	r3, [r3, #32]
  401738:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  40173c:	d018      	beq.n	401770 <SystemCoreClockUpdate+0xbc>
				SystemCoreClock = CHIP_FREQ_XTAL;
  40173e:	4a1d      	ldr	r2, [pc, #116]	; (4017b4 <SystemCoreClockUpdate+0x100>)
  401740:	4b1b      	ldr	r3, [pc, #108]	; (4017b0 <SystemCoreClockUpdate+0xfc>)
  401742:	601a      	str	r2, [r3, #0]
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  401744:	4b18      	ldr	r3, [pc, #96]	; (4017a8 <SystemCoreClockUpdate+0xf4>)
  401746:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401748:	f003 0303 	and.w	r3, r3, #3
  40174c:	2b02      	cmp	r3, #2
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  40174e:	4a16      	ldr	r2, [pc, #88]	; (4017a8 <SystemCoreClockUpdate+0xf4>)
  401750:	bf07      	ittee	eq
  401752:	6a91      	ldreq	r1, [r2, #40]	; 0x28
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  401754:	6a92      	ldreq	r2, [r2, #40]	; 0x28
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  401756:	6ad1      	ldrne	r1, [r2, #44]	; 0x2c
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  401758:	6ad2      	ldrne	r2, [r2, #44]	; 0x2c
  40175a:	4815      	ldr	r0, [pc, #84]	; (4017b0 <SystemCoreClockUpdate+0xfc>)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  40175c:	f3c1 410a 	ubfx	r1, r1, #16, #11
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  401760:	6803      	ldr	r3, [r0, #0]
  401762:	fb01 3303 	mla	r3, r1, r3, r3
						>> CKGR_PLLBR_DIVB_Pos));
  401766:	b2d2      	uxtb	r2, r2
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  401768:	fbb3 f3f2 	udiv	r3, r3, r2
  40176c:	6003      	str	r3, [r0, #0]
  40176e:	e7b6      	b.n	4016de <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401770:	4a11      	ldr	r2, [pc, #68]	; (4017b8 <SystemCoreClockUpdate+0x104>)
  401772:	4b0f      	ldr	r3, [pc, #60]	; (4017b0 <SystemCoreClockUpdate+0xfc>)
  401774:	601a      	str	r2, [r3, #0]
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  401776:	4b0c      	ldr	r3, [pc, #48]	; (4017a8 <SystemCoreClockUpdate+0xf4>)
  401778:	6a1b      	ldr	r3, [r3, #32]
  40177a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40177e:	2b10      	cmp	r3, #16
  401780:	d005      	beq.n	40178e <SystemCoreClockUpdate+0xda>
  401782:	2b20      	cmp	r3, #32
  401784:	d1de      	bne.n	401744 <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  401786:	4a0b      	ldr	r2, [pc, #44]	; (4017b4 <SystemCoreClockUpdate+0x100>)
  401788:	4b09      	ldr	r3, [pc, #36]	; (4017b0 <SystemCoreClockUpdate+0xfc>)
  40178a:	601a      	str	r2, [r3, #0]
					break;
  40178c:	e7da      	b.n	401744 <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  40178e:	4a0b      	ldr	r2, [pc, #44]	; (4017bc <SystemCoreClockUpdate+0x108>)
  401790:	4b07      	ldr	r3, [pc, #28]	; (4017b0 <SystemCoreClockUpdate+0xfc>)
  401792:	601a      	str	r2, [r3, #0]
					break;
  401794:	e7d6      	b.n	401744 <SystemCoreClockUpdate+0x90>
		SystemCoreClock /= 3U;
  401796:	4a06      	ldr	r2, [pc, #24]	; (4017b0 <SystemCoreClockUpdate+0xfc>)
  401798:	6813      	ldr	r3, [r2, #0]
  40179a:	4909      	ldr	r1, [pc, #36]	; (4017c0 <SystemCoreClockUpdate+0x10c>)
  40179c:	fba1 1303 	umull	r1, r3, r1, r3
  4017a0:	085b      	lsrs	r3, r3, #1
  4017a2:	6013      	str	r3, [r2, #0]
  4017a4:	4770      	bx	lr
  4017a6:	bf00      	nop
  4017a8:	400e0400 	.word	0x400e0400
  4017ac:	400e1410 	.word	0x400e1410
  4017b0:	2000000c 	.word	0x2000000c
  4017b4:	00b71b00 	.word	0x00b71b00
  4017b8:	003d0900 	.word	0x003d0900
  4017bc:	007a1200 	.word	0x007a1200
  4017c0:	aaaaaaab 	.word	0xaaaaaaab

004017c4 <system_init_flash>:
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
#if !defined(ID_EFC1)
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  4017c4:	4b12      	ldr	r3, [pc, #72]	; (401810 <system_init_flash+0x4c>)
  4017c6:	4298      	cmp	r0, r3
  4017c8:	d911      	bls.n	4017ee <system_init_flash+0x2a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  4017ca:	4b12      	ldr	r3, [pc, #72]	; (401814 <system_init_flash+0x50>)
  4017cc:	4298      	cmp	r0, r3
  4017ce:	d913      	bls.n	4017f8 <system_init_flash+0x34>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  4017d0:	4b11      	ldr	r3, [pc, #68]	; (401818 <system_init_flash+0x54>)
  4017d2:	4298      	cmp	r0, r3
  4017d4:	d914      	bls.n	401800 <system_init_flash+0x3c>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  4017d6:	4b11      	ldr	r3, [pc, #68]	; (40181c <system_init_flash+0x58>)
  4017d8:	4298      	cmp	r0, r3
  4017da:	d915      	bls.n	401808 <system_init_flash+0x44>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  4017dc:	4b10      	ldr	r3, [pc, #64]	; (401820 <system_init_flash+0x5c>)
  4017de:	4298      	cmp	r0, r3
					EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  4017e0:	bf94      	ite	ls
  4017e2:	f04f 2204 	movls.w	r2, #67109888	; 0x4000400
					} else {
					EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  4017e6:	4a0f      	ldrhi	r2, [pc, #60]	; (401824 <system_init_flash+0x60>)
  4017e8:	4b0f      	ldr	r3, [pc, #60]	; (401828 <system_init_flash+0x64>)
  4017ea:	601a      	str	r2, [r3, #0]
  4017ec:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  4017ee:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  4017f2:	4b0d      	ldr	r3, [pc, #52]	; (401828 <system_init_flash+0x64>)
  4017f4:	601a      	str	r2, [r3, #0]
  4017f6:	4770      	bx	lr
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  4017f8:	4a0c      	ldr	r2, [pc, #48]	; (40182c <system_init_flash+0x68>)
  4017fa:	4b0b      	ldr	r3, [pc, #44]	; (401828 <system_init_flash+0x64>)
  4017fc:	601a      	str	r2, [r3, #0]
  4017fe:	4770      	bx	lr
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  401800:	4a0b      	ldr	r2, [pc, #44]	; (401830 <system_init_flash+0x6c>)
  401802:	4b09      	ldr	r3, [pc, #36]	; (401828 <system_init_flash+0x64>)
  401804:	601a      	str	r2, [r3, #0]
  401806:	4770      	bx	lr
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  401808:	4a0a      	ldr	r2, [pc, #40]	; (401834 <system_init_flash+0x70>)
  40180a:	4b07      	ldr	r3, [pc, #28]	; (401828 <system_init_flash+0x64>)
  40180c:	601a      	str	r2, [r3, #0]
  40180e:	4770      	bx	lr
  401810:	01312cff 	.word	0x01312cff
  401814:	026259ff 	.word	0x026259ff
  401818:	039386ff 	.word	0x039386ff
  40181c:	04c4b3ff 	.word	0x04c4b3ff
  401820:	05f5e0ff 	.word	0x05f5e0ff
  401824:	04000500 	.word	0x04000500
  401828:	400e0a00 	.word	0x400e0a00
  40182c:	04000100 	.word	0x04000100
  401830:	04000200 	.word	0x04000200
  401834:	04000300 	.word	0x04000300

00401838 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  401838:	4b0a      	ldr	r3, [pc, #40]	; (401864 <_sbrk+0x2c>)
  40183a:	681b      	ldr	r3, [r3, #0]
  40183c:	b153      	cbz	r3, 401854 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  40183e:	4b09      	ldr	r3, [pc, #36]	; (401864 <_sbrk+0x2c>)
  401840:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  401842:	181a      	adds	r2, r3, r0
  401844:	4908      	ldr	r1, [pc, #32]	; (401868 <_sbrk+0x30>)
  401846:	4291      	cmp	r1, r2
  401848:	db08      	blt.n	40185c <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  40184a:	4610      	mov	r0, r2
  40184c:	4a05      	ldr	r2, [pc, #20]	; (401864 <_sbrk+0x2c>)
  40184e:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  401850:	4618      	mov	r0, r3
  401852:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  401854:	4a05      	ldr	r2, [pc, #20]	; (40186c <_sbrk+0x34>)
  401856:	4b03      	ldr	r3, [pc, #12]	; (401864 <_sbrk+0x2c>)
  401858:	601a      	str	r2, [r3, #0]
  40185a:	e7f0      	b.n	40183e <_sbrk+0x6>
		return (caddr_t) -1;	
  40185c:	f04f 30ff 	mov.w	r0, #4294967295
}
  401860:	4770      	bx	lr
  401862:	bf00      	nop
  401864:	20000a8c 	.word	0x20000a8c
  401868:	2001fffc 	.word	0x2001fffc
  40186c:	2001c580 	.word	0x2001c580

00401870 <main>:
#include "camera.h"
#include "timer_interface.h"
#include "camera_helper/ov2640.h"
#include <asf.h>

int main(void) {
  401870:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	// Initialize clock and board definitions
	sysclk_init();
  401874:	4b38      	ldr	r3, [pc, #224]	; (401958 <main+0xe8>)
  401876:	4798      	blx	r3
	board_init();
  401878:	4b38      	ldr	r3, [pc, #224]	; (40195c <main+0xec>)
  40187a:	4798      	blx	r3
	wdt_disable(WDT);
  40187c:	4838      	ldr	r0, [pc, #224]	; (401960 <main+0xf0>)
  40187e:	4b39      	ldr	r3, [pc, #228]	; (401964 <main+0xf4>)
  401880:	4798      	blx	r3
	
	// Configure and start the Timer
	configure_tc();
  401882:	4b39      	ldr	r3, [pc, #228]	; (401968 <main+0xf8>)
  401884:	4798      	blx	r3
	
	// Configure WiFi USART, SPI, and pins
	configure_usart_wifi();
  401886:	4b39      	ldr	r3, [pc, #228]	; (40196c <main+0xfc>)
  401888:	4798      	blx	r3
	configure_spi();
  40188a:	4b39      	ldr	r3, [pc, #228]	; (401970 <main+0x100>)
  40188c:	4798      	blx	r3
	configure_wifi_comm_pin();
  40188e:	4b39      	ldr	r3, [pc, #228]	; (401974 <main+0x104>)
  401890:	4798      	blx	r3
	configure_wifi_provision_pin();
  401892:	4b39      	ldr	r3, [pc, #228]	; (401978 <main+0x108>)
  401894:	4798      	blx	r3
	spi_peripheral_initialize();
  401896:	4b39      	ldr	r3, [pc, #228]	; (40197c <main+0x10c>)
  401898:	4798      	blx	r3
	
	// Initialize and configure camera
	init_camera();
  40189a:	4b39      	ldr	r3, [pc, #228]	; (401980 <main+0x110>)
  40189c:	4798      	blx	r3
	configure_camera();
  40189e:	4b39      	ldr	r3, [pc, #228]	; (401984 <main+0x114>)
  4018a0:	4798      	blx	r3
	
	// Test write_wifi_command
	// write_wifi_command("ver\r\n", 5);
	// Config indicators
	write_wifi_command("set wlan_gpio 25\r\n", 5);
  4018a2:	2105      	movs	r1, #5
  4018a4:	4838      	ldr	r0, [pc, #224]	; (401988 <main+0x118>)
  4018a6:	4c39      	ldr	r4, [pc, #228]	; (40198c <main+0x11c>)
  4018a8:	47a0      	blx	r4
 	write_wifi_command("set websocket_gpio 26\r\n", 5);
  4018aa:	2105      	movs	r1, #5
  4018ac:	4838      	ldr	r0, [pc, #224]	; (401990 <main+0x120>)
  4018ae:	47a0      	blx	r4
	write_wifi_command("get mac\r\n", 5);
  4018b0:	2105      	movs	r1, #5
  4018b2:	4838      	ldr	r0, [pc, #224]	; (401994 <main+0x124>)
  4018b4:	47a0      	blx	r4
	write_wifi_command("set ap_gpio 27\r\n", 5);
  4018b6:	2105      	movs	r1, #5
  4018b8:	4837      	ldr	r0, [pc, #220]	; (401998 <main+0x128>)
  4018ba:	47a0      	blx	r4
	// Config GPIOs
	write_wifi_command("set comm_gpio 21\r\n", 5);
  4018bc:	2105      	movs	r1, #5
  4018be:	4837      	ldr	r0, [pc, #220]	; (40199c <main+0x12c>)
  4018c0:	47a0      	blx	r4
	write_wifi_command("set clients_gpio 32\r\n", 5);
  4018c2:	2105      	movs	r1, #5
  4018c4:	4836      	ldr	r0, [pc, #216]	; (4019a0 <main+0x130>)
  4018c6:	47a0      	blx	r4
	write_wifi_command("set net_gpio 22\r\n", 5);
  4018c8:	2105      	movs	r1, #5
  4018ca:	4836      	ldr	r0, [pc, #216]	; (4019a4 <main+0x134>)
  4018cc:	47a0      	blx	r4
	// Set SPI baud rate
	write_wifi_command("set spi_baud 100000\r\n", 5);
  4018ce:	2105      	movs	r1, #5
  4018d0:	4835      	ldr	r0, [pc, #212]	; (4019a8 <main+0x138>)
  4018d2:	47a0      	blx	r4
	
	
	// Send test command to WiFi module
	while (!(success_flag == 1)) {
  4018d4:	4b35      	ldr	r3, [pc, #212]	; (4019ac <main+0x13c>)
  4018d6:	781b      	ldrb	r3, [r3, #0]
  4018d8:	b2db      	uxtb	r3, r3
  4018da:	2b01      	cmp	r3, #1
  4018dc:	d01b      	beq.n	401916 <main+0xa6>
		write_wifi_command("test\r\n", 10);
  4018de:	4f34      	ldr	r7, [pc, #208]	; (4019b0 <main+0x140>)
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  4018e0:	4c34      	ldr	r4, [pc, #208]	; (4019b4 <main+0x144>)
		}
		
		ioport_set_pin_level(WIFI_RESET, false);
		delay_ms(100);
		ioport_set_pin_level(WIFI_RESET, true);
		delay_ms(10000);
  4018e2:	4e35      	ldr	r6, [pc, #212]	; (4019b8 <main+0x148>)
		write_wifi_command("test\r\n", 10);
  4018e4:	210a      	movs	r1, #10
  4018e6:	4638      	mov	r0, r7
  4018e8:	4b28      	ldr	r3, [pc, #160]	; (40198c <main+0x11c>)
  4018ea:	4798      	blx	r3
		if (success_flag == 1) {
  4018ec:	4b2f      	ldr	r3, [pc, #188]	; (4019ac <main+0x13c>)
  4018ee:	781b      	ldrb	r3, [r3, #0]
  4018f0:	b2db      	uxtb	r3, r3
  4018f2:	2b01      	cmp	r3, #1
  4018f4:	d00f      	beq.n	401916 <main+0xa6>
  4018f6:	f44f 2800 	mov.w	r8, #524288	; 0x80000
  4018fa:	f8c4 8034 	str.w	r8, [r4, #52]	; 0x34
		delay_ms(100);
  4018fe:	482f      	ldr	r0, [pc, #188]	; (4019bc <main+0x14c>)
  401900:	4d2f      	ldr	r5, [pc, #188]	; (4019c0 <main+0x150>)
  401902:	47a8      	blx	r5
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  401904:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
		delay_ms(10000);
  401908:	4630      	mov	r0, r6
  40190a:	47a8      	blx	r5
	while (!(success_flag == 1)) {
  40190c:	4b27      	ldr	r3, [pc, #156]	; (4019ac <main+0x13c>)
  40190e:	781b      	ldrb	r3, [r3, #0]
  401910:	b2db      	uxtb	r3, r3
  401912:	2b01      	cmp	r3, #1
  401914:	d1e6      	bne.n	4018e4 <main+0x74>
	}
	
	while (1){
		if (provision_flag){
  401916:	4d2b      	ldr	r5, [pc, #172]	; (4019c4 <main+0x154>)
	}
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
  401918:	4c26      	ldr	r4, [pc, #152]	; (4019b4 <main+0x144>)
					
					if (!ioport_get_pin_level(WIFI_GPIO_32)){ // check clients pin
						continue;
					}
						
		if (start_capture()){
  40191a:	4e2b      	ldr	r6, [pc, #172]	; (4019c8 <main+0x158>)
  40191c:	e008      	b.n	401930 <main+0xc0>
  40191e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  401920:	6be3      	ldr	r3, [r4, #60]	; 0x3c
					if (!ioport_get_pin_level(WIFI_GPIO_22)){ // check network pin
  401922:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
  401926:	d003      	beq.n	401930 <main+0xc0>
  401928:	6be3      	ldr	r3, [r4, #60]	; 0x3c
					if (!ioport_get_pin_level(WIFI_GPIO_32)){ // check clients pin
  40192a:	f413 7f00 	tst.w	r3, #512	; 0x200
  40192e:	d10d      	bne.n	40194c <main+0xdc>
		if (provision_flag){
  401930:	782b      	ldrb	r3, [r5, #0]
  401932:	2b00      	cmp	r3, #0
  401934:	d0f3      	beq.n	40191e <main+0xae>
			write_wifi_command("provision\r\n", 5);
  401936:	2105      	movs	r1, #5
  401938:	4824      	ldr	r0, [pc, #144]	; (4019cc <main+0x15c>)
  40193a:	4b14      	ldr	r3, [pc, #80]	; (40198c <main+0x11c>)
  40193c:	4798      	blx	r3
			provision_flag = false;
  40193e:	2300      	movs	r3, #0
  401940:	702b      	strb	r3, [r5, #0]
  401942:	6be3      	ldr	r3, [r4, #60]	; 0x3c
			while (!ioport_get_pin_level(WIFI_GPIO_22)){ // check network pin
  401944:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
  401948:	d0fb      	beq.n	401942 <main+0xd2>
  40194a:	e7f1      	b.n	401930 <main+0xc0>
		if (start_capture()){
  40194c:	47b0      	blx	r6
  40194e:	2800      	cmp	r0, #0
  401950:	d0ee      	beq.n	401930 <main+0xc0>
			write_image_to_web();
  401952:	4b1f      	ldr	r3, [pc, #124]	; (4019d0 <main+0x160>)
  401954:	4798      	blx	r3
  401956:	e7eb      	b.n	401930 <main+0xc0>
  401958:	00400139 	.word	0x00400139
  40195c:	004015cd 	.word	0x004015cd
  401960:	400e1450 	.word	0x400e1450
  401964:	00400bc1 	.word	0x00400bc1
  401968:	00401199 	.word	0x00401199
  40196c:	00401335 	.word	0x00401335
  401970:	00401479 	.word	0x00401479
  401974:	004013d1 	.word	0x004013d1
  401978:	0040141d 	.word	0x0040141d
  40197c:	004014c5 	.word	0x004014c5
  401980:	00400d29 	.word	0x00400d29
  401984:	00400d01 	.word	0x00400d01
  401988:	00407540 	.word	0x00407540
  40198c:	00401551 	.word	0x00401551
  401990:	00407554 	.word	0x00407554
  401994:	0040756c 	.word	0x0040756c
  401998:	00407578 	.word	0x00407578
  40199c:	0040758c 	.word	0x0040758c
  4019a0:	004075a0 	.word	0x004075a0
  4019a4:	004075b8 	.word	0x004075b8
  4019a8:	004075cc 	.word	0x004075cc
  4019ac:	20000a78 	.word	0x20000a78
  4019b0:	004075e4 	.word	0x004075e4
  4019b4:	400e0e00 	.word	0x400e0e00
  4019b8:	051be56e 	.word	0x051be56e
  4019bc:	000d1437 	.word	0x000d1437
  4019c0:	20000001 	.word	0x20000001
  4019c4:	20000a71 	.word	0x20000a71
  4019c8:	00400e89 	.word	0x00400e89
  4019cc:	004075ec 	.word	0x004075ec
  4019d0:	0040158d 	.word	0x0040158d

004019d4 <__libc_init_array>:
  4019d4:	b570      	push	{r4, r5, r6, lr}
  4019d6:	4e0f      	ldr	r6, [pc, #60]	; (401a14 <__libc_init_array+0x40>)
  4019d8:	4d0f      	ldr	r5, [pc, #60]	; (401a18 <__libc_init_array+0x44>)
  4019da:	1b76      	subs	r6, r6, r5
  4019dc:	10b6      	asrs	r6, r6, #2
  4019de:	bf18      	it	ne
  4019e0:	2400      	movne	r4, #0
  4019e2:	d005      	beq.n	4019f0 <__libc_init_array+0x1c>
  4019e4:	3401      	adds	r4, #1
  4019e6:	f855 3b04 	ldr.w	r3, [r5], #4
  4019ea:	4798      	blx	r3
  4019ec:	42a6      	cmp	r6, r4
  4019ee:	d1f9      	bne.n	4019e4 <__libc_init_array+0x10>
  4019f0:	4e0a      	ldr	r6, [pc, #40]	; (401a1c <__libc_init_array+0x48>)
  4019f2:	4d0b      	ldr	r5, [pc, #44]	; (401a20 <__libc_init_array+0x4c>)
  4019f4:	1b76      	subs	r6, r6, r5
  4019f6:	f005 ff43 	bl	407880 <_init>
  4019fa:	10b6      	asrs	r6, r6, #2
  4019fc:	bf18      	it	ne
  4019fe:	2400      	movne	r4, #0
  401a00:	d006      	beq.n	401a10 <__libc_init_array+0x3c>
  401a02:	3401      	adds	r4, #1
  401a04:	f855 3b04 	ldr.w	r3, [r5], #4
  401a08:	4798      	blx	r3
  401a0a:	42a6      	cmp	r6, r4
  401a0c:	d1f9      	bne.n	401a02 <__libc_init_array+0x2e>
  401a0e:	bd70      	pop	{r4, r5, r6, pc}
  401a10:	bd70      	pop	{r4, r5, r6, pc}
  401a12:	bf00      	nop
  401a14:	0040788c 	.word	0x0040788c
  401a18:	0040788c 	.word	0x0040788c
  401a1c:	00407894 	.word	0x00407894
  401a20:	0040788c 	.word	0x0040788c

00401a24 <memset>:
  401a24:	b470      	push	{r4, r5, r6}
  401a26:	0786      	lsls	r6, r0, #30
  401a28:	d046      	beq.n	401ab8 <memset+0x94>
  401a2a:	1e54      	subs	r4, r2, #1
  401a2c:	2a00      	cmp	r2, #0
  401a2e:	d041      	beq.n	401ab4 <memset+0x90>
  401a30:	b2ca      	uxtb	r2, r1
  401a32:	4603      	mov	r3, r0
  401a34:	e002      	b.n	401a3c <memset+0x18>
  401a36:	f114 34ff 	adds.w	r4, r4, #4294967295
  401a3a:	d33b      	bcc.n	401ab4 <memset+0x90>
  401a3c:	f803 2b01 	strb.w	r2, [r3], #1
  401a40:	079d      	lsls	r5, r3, #30
  401a42:	d1f8      	bne.n	401a36 <memset+0x12>
  401a44:	2c03      	cmp	r4, #3
  401a46:	d92e      	bls.n	401aa6 <memset+0x82>
  401a48:	b2cd      	uxtb	r5, r1
  401a4a:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  401a4e:	2c0f      	cmp	r4, #15
  401a50:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401a54:	d919      	bls.n	401a8a <memset+0x66>
  401a56:	f103 0210 	add.w	r2, r3, #16
  401a5a:	4626      	mov	r6, r4
  401a5c:	3e10      	subs	r6, #16
  401a5e:	2e0f      	cmp	r6, #15
  401a60:	f842 5c10 	str.w	r5, [r2, #-16]
  401a64:	f842 5c0c 	str.w	r5, [r2, #-12]
  401a68:	f842 5c08 	str.w	r5, [r2, #-8]
  401a6c:	f842 5c04 	str.w	r5, [r2, #-4]
  401a70:	f102 0210 	add.w	r2, r2, #16
  401a74:	d8f2      	bhi.n	401a5c <memset+0x38>
  401a76:	f1a4 0210 	sub.w	r2, r4, #16
  401a7a:	f022 020f 	bic.w	r2, r2, #15
  401a7e:	f004 040f 	and.w	r4, r4, #15
  401a82:	3210      	adds	r2, #16
  401a84:	2c03      	cmp	r4, #3
  401a86:	4413      	add	r3, r2
  401a88:	d90d      	bls.n	401aa6 <memset+0x82>
  401a8a:	461e      	mov	r6, r3
  401a8c:	4622      	mov	r2, r4
  401a8e:	3a04      	subs	r2, #4
  401a90:	2a03      	cmp	r2, #3
  401a92:	f846 5b04 	str.w	r5, [r6], #4
  401a96:	d8fa      	bhi.n	401a8e <memset+0x6a>
  401a98:	1f22      	subs	r2, r4, #4
  401a9a:	f022 0203 	bic.w	r2, r2, #3
  401a9e:	3204      	adds	r2, #4
  401aa0:	4413      	add	r3, r2
  401aa2:	f004 0403 	and.w	r4, r4, #3
  401aa6:	b12c      	cbz	r4, 401ab4 <memset+0x90>
  401aa8:	b2c9      	uxtb	r1, r1
  401aaa:	441c      	add	r4, r3
  401aac:	f803 1b01 	strb.w	r1, [r3], #1
  401ab0:	429c      	cmp	r4, r3
  401ab2:	d1fb      	bne.n	401aac <memset+0x88>
  401ab4:	bc70      	pop	{r4, r5, r6}
  401ab6:	4770      	bx	lr
  401ab8:	4614      	mov	r4, r2
  401aba:	4603      	mov	r3, r0
  401abc:	e7c2      	b.n	401a44 <memset+0x20>
  401abe:	bf00      	nop

00401ac0 <sprintf>:
  401ac0:	b40e      	push	{r1, r2, r3}
  401ac2:	b5f0      	push	{r4, r5, r6, r7, lr}
  401ac4:	b09c      	sub	sp, #112	; 0x70
  401ac6:	ab21      	add	r3, sp, #132	; 0x84
  401ac8:	490f      	ldr	r1, [pc, #60]	; (401b08 <sprintf+0x48>)
  401aca:	f853 2b04 	ldr.w	r2, [r3], #4
  401ace:	9301      	str	r3, [sp, #4]
  401ad0:	4605      	mov	r5, r0
  401ad2:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  401ad6:	6808      	ldr	r0, [r1, #0]
  401ad8:	9502      	str	r5, [sp, #8]
  401ada:	f44f 7702 	mov.w	r7, #520	; 0x208
  401ade:	f64f 76ff 	movw	r6, #65535	; 0xffff
  401ae2:	a902      	add	r1, sp, #8
  401ae4:	9506      	str	r5, [sp, #24]
  401ae6:	f8ad 7014 	strh.w	r7, [sp, #20]
  401aea:	9404      	str	r4, [sp, #16]
  401aec:	9407      	str	r4, [sp, #28]
  401aee:	f8ad 6016 	strh.w	r6, [sp, #22]
  401af2:	f000 fa6f 	bl	401fd4 <_svfprintf_r>
  401af6:	9b02      	ldr	r3, [sp, #8]
  401af8:	2200      	movs	r2, #0
  401afa:	701a      	strb	r2, [r3, #0]
  401afc:	b01c      	add	sp, #112	; 0x70
  401afe:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  401b02:	b003      	add	sp, #12
  401b04:	4770      	bx	lr
  401b06:	bf00      	nop
  401b08:	20000010 	.word	0x20000010

00401b0c <critical_factorization>:
  401b0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401b10:	f04f 0e01 	mov.w	lr, #1
  401b14:	4674      	mov	r4, lr
  401b16:	2500      	movs	r5, #0
  401b18:	f04f 36ff 	mov.w	r6, #4294967295
  401b1c:	192b      	adds	r3, r5, r4
  401b1e:	428b      	cmp	r3, r1
  401b20:	eb00 0706 	add.w	r7, r0, r6
  401b24:	d20d      	bcs.n	401b42 <critical_factorization+0x36>
  401b26:	5d3f      	ldrb	r7, [r7, r4]
  401b28:	f810 c003 	ldrb.w	ip, [r0, r3]
  401b2c:	45bc      	cmp	ip, r7
  401b2e:	d22d      	bcs.n	401b8c <critical_factorization+0x80>
  401b30:	461d      	mov	r5, r3
  401b32:	2401      	movs	r4, #1
  401b34:	eba3 0e06 	sub.w	lr, r3, r6
  401b38:	192b      	adds	r3, r5, r4
  401b3a:	428b      	cmp	r3, r1
  401b3c:	eb00 0706 	add.w	r7, r0, r6
  401b40:	d3f1      	bcc.n	401b26 <critical_factorization+0x1a>
  401b42:	f04f 0801 	mov.w	r8, #1
  401b46:	f8c2 e000 	str.w	lr, [r2]
  401b4a:	4644      	mov	r4, r8
  401b4c:	2500      	movs	r5, #0
  401b4e:	f04f 37ff 	mov.w	r7, #4294967295
  401b52:	192b      	adds	r3, r5, r4
  401b54:	4299      	cmp	r1, r3
  401b56:	eb00 0e07 	add.w	lr, r0, r7
  401b5a:	d90e      	bls.n	401b7a <critical_factorization+0x6e>
  401b5c:	f81e e004 	ldrb.w	lr, [lr, r4]
  401b60:	f810 c003 	ldrb.w	ip, [r0, r3]
  401b64:	45f4      	cmp	ip, lr
  401b66:	d918      	bls.n	401b9a <critical_factorization+0x8e>
  401b68:	461d      	mov	r5, r3
  401b6a:	2401      	movs	r4, #1
  401b6c:	eba3 0807 	sub.w	r8, r3, r7
  401b70:	192b      	adds	r3, r5, r4
  401b72:	4299      	cmp	r1, r3
  401b74:	eb00 0e07 	add.w	lr, r0, r7
  401b78:	d8f0      	bhi.n	401b5c <critical_factorization+0x50>
  401b7a:	3701      	adds	r7, #1
  401b7c:	1c70      	adds	r0, r6, #1
  401b7e:	4287      	cmp	r7, r0
  401b80:	bf24      	itt	cs
  401b82:	f8c2 8000 	strcs.w	r8, [r2]
  401b86:	4638      	movcs	r0, r7
  401b88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401b8c:	d00c      	beq.n	401ba8 <critical_factorization+0x9c>
  401b8e:	f04f 0e01 	mov.w	lr, #1
  401b92:	462e      	mov	r6, r5
  401b94:	4674      	mov	r4, lr
  401b96:	4475      	add	r5, lr
  401b98:	e7c0      	b.n	401b1c <critical_factorization+0x10>
  401b9a:	d00b      	beq.n	401bb4 <critical_factorization+0xa8>
  401b9c:	f04f 0801 	mov.w	r8, #1
  401ba0:	462f      	mov	r7, r5
  401ba2:	4644      	mov	r4, r8
  401ba4:	4445      	add	r5, r8
  401ba6:	e7d4      	b.n	401b52 <critical_factorization+0x46>
  401ba8:	4574      	cmp	r4, lr
  401baa:	bf12      	itee	ne
  401bac:	3401      	addne	r4, #1
  401bae:	461d      	moveq	r5, r3
  401bb0:	2401      	moveq	r4, #1
  401bb2:	e7b3      	b.n	401b1c <critical_factorization+0x10>
  401bb4:	4544      	cmp	r4, r8
  401bb6:	bf12      	itee	ne
  401bb8:	3401      	addne	r4, #1
  401bba:	461d      	moveq	r5, r3
  401bbc:	2401      	moveq	r4, #1
  401bbe:	e7c8      	b.n	401b52 <critical_factorization+0x46>

00401bc0 <two_way_long_needle>:
  401bc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401bc4:	f2ad 4d14 	subw	sp, sp, #1044	; 0x414
  401bc8:	4616      	mov	r6, r2
  401bca:	4605      	mov	r5, r0
  401bcc:	468b      	mov	fp, r1
  401bce:	4610      	mov	r0, r2
  401bd0:	4619      	mov	r1, r3
  401bd2:	aa03      	add	r2, sp, #12
  401bd4:	461c      	mov	r4, r3
  401bd6:	f7ff ff99 	bl	401b0c <critical_factorization>
  401bda:	ab03      	add	r3, sp, #12
  401bdc:	4681      	mov	r9, r0
  401bde:	f20d 420c 	addw	r2, sp, #1036	; 0x40c
  401be2:	f843 4f04 	str.w	r4, [r3, #4]!
  401be6:	4293      	cmp	r3, r2
  401be8:	d1fb      	bne.n	401be2 <two_way_long_needle+0x22>
  401bea:	b14c      	cbz	r4, 401c00 <two_way_long_needle+0x40>
  401bec:	1e63      	subs	r3, r4, #1
  401bee:	1e72      	subs	r2, r6, #1
  401bf0:	a804      	add	r0, sp, #16
  401bf2:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  401bf6:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
  401bfa:	f113 33ff 	adds.w	r3, r3, #4294967295
  401bfe:	d2f8      	bcs.n	401bf2 <two_way_long_needle+0x32>
  401c00:	9903      	ldr	r1, [sp, #12]
  401c02:	464a      	mov	r2, r9
  401c04:	4431      	add	r1, r6
  401c06:	4630      	mov	r0, r6
  401c08:	f002 ff12 	bl	404a30 <memcmp>
  401c0c:	2800      	cmp	r0, #0
  401c0e:	d16f      	bne.n	401cf0 <two_way_long_needle+0x130>
  401c10:	f109 33ff 	add.w	r3, r9, #4294967295
  401c14:	9300      	str	r3, [sp, #0]
  401c16:	18f3      	adds	r3, r6, r3
  401c18:	4682      	mov	sl, r0
  401c1a:	9301      	str	r3, [sp, #4]
  401c1c:	4623      	mov	r3, r4
  401c1e:	4680      	mov	r8, r0
  401c20:	4654      	mov	r4, sl
  401c22:	4658      	mov	r0, fp
  401c24:	469a      	mov	sl, r3
  401c26:	eb08 070a 	add.w	r7, r8, sl
  401c2a:	1a3a      	subs	r2, r7, r0
  401c2c:	2100      	movs	r1, #0
  401c2e:	4428      	add	r0, r5
  401c30:	f002 feae 	bl	404990 <memchr>
  401c34:	2800      	cmp	r0, #0
  401c36:	d156      	bne.n	401ce6 <two_way_long_needle+0x126>
  401c38:	2f00      	cmp	r7, #0
  401c3a:	d054      	beq.n	401ce6 <two_way_long_needle+0x126>
  401c3c:	19eb      	adds	r3, r5, r7
  401c3e:	aa04      	add	r2, sp, #16
  401c40:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  401c44:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  401c48:	b14b      	cbz	r3, 401c5e <two_way_long_needle+0x9e>
  401c4a:	b124      	cbz	r4, 401c56 <two_way_long_needle+0x96>
  401c4c:	9a03      	ldr	r2, [sp, #12]
  401c4e:	4293      	cmp	r3, r2
  401c50:	d201      	bcs.n	401c56 <two_way_long_needle+0x96>
  401c52:	ebaa 0302 	sub.w	r3, sl, r2
  401c56:	4498      	add	r8, r3
  401c58:	2400      	movs	r4, #0
  401c5a:	4638      	mov	r0, r7
  401c5c:	e7e3      	b.n	401c26 <two_way_long_needle+0x66>
  401c5e:	454c      	cmp	r4, r9
  401c60:	4623      	mov	r3, r4
  401c62:	f10a 3eff 	add.w	lr, sl, #4294967295
  401c66:	bf38      	it	cc
  401c68:	464b      	movcc	r3, r9
  401c6a:	4573      	cmp	r3, lr
  401c6c:	d213      	bcs.n	401c96 <two_way_long_needle+0xd6>
  401c6e:	eb08 0203 	add.w	r2, r8, r3
  401c72:	f816 c003 	ldrb.w	ip, [r6, r3]
  401c76:	5ca8      	ldrb	r0, [r5, r2]
  401c78:	4584      	cmp	ip, r0
  401c7a:	442a      	add	r2, r5
  401c7c:	eb06 0103 	add.w	r1, r6, r3
  401c80:	d006      	beq.n	401c90 <two_way_long_needle+0xd0>
  401c82:	e02c      	b.n	401cde <two_way_long_needle+0x11e>
  401c84:	f811 cf01 	ldrb.w	ip, [r1, #1]!
  401c88:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  401c8c:	4584      	cmp	ip, r0
  401c8e:	d126      	bne.n	401cde <two_way_long_needle+0x11e>
  401c90:	3301      	adds	r3, #1
  401c92:	4573      	cmp	r3, lr
  401c94:	d3f6      	bcc.n	401c84 <two_way_long_needle+0xc4>
  401c96:	454c      	cmp	r4, r9
  401c98:	9900      	ldr	r1, [sp, #0]
  401c9a:	f080 8089 	bcs.w	401db0 <two_way_long_needle+0x1f0>
  401c9e:	9b00      	ldr	r3, [sp, #0]
  401ca0:	eb08 0203 	add.w	r2, r8, r3
  401ca4:	9b01      	ldr	r3, [sp, #4]
  401ca6:	5ca8      	ldrb	r0, [r5, r2]
  401ca8:	781b      	ldrb	r3, [r3, #0]
  401caa:	4298      	cmp	r0, r3
  401cac:	442a      	add	r2, r5
  401cae:	d17f      	bne.n	401db0 <two_way_long_needle+0x1f0>
  401cb0:	9801      	ldr	r0, [sp, #4]
  401cb2:	f104 3bff 	add.w	fp, r4, #4294967295
  401cb6:	e006      	b.n	401cc6 <two_way_long_needle+0x106>
  401cb8:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  401cbc:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  401cc0:	45f4      	cmp	ip, lr
  401cc2:	d103      	bne.n	401ccc <two_way_long_needle+0x10c>
  401cc4:	4619      	mov	r1, r3
  401cc6:	1e4b      	subs	r3, r1, #1
  401cc8:	459b      	cmp	fp, r3
  401cca:	d1f5      	bne.n	401cb8 <two_way_long_needle+0xf8>
  401ccc:	3401      	adds	r4, #1
  401cce:	428c      	cmp	r4, r1
  401cd0:	d870      	bhi.n	401db4 <two_way_long_needle+0x1f4>
  401cd2:	9c03      	ldr	r4, [sp, #12]
  401cd4:	4638      	mov	r0, r7
  401cd6:	44a0      	add	r8, r4
  401cd8:	ebaa 0404 	sub.w	r4, sl, r4
  401cdc:	e7a3      	b.n	401c26 <two_way_long_needle+0x66>
  401cde:	f1c9 0201 	rsb	r2, r9, #1
  401ce2:	4490      	add	r8, r2
  401ce4:	e7b7      	b.n	401c56 <two_way_long_needle+0x96>
  401ce6:	2000      	movs	r0, #0
  401ce8:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  401cec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401cf0:	eba4 0309 	sub.w	r3, r4, r9
  401cf4:	454b      	cmp	r3, r9
  401cf6:	bf38      	it	cc
  401cf8:	464b      	movcc	r3, r9
  401cfa:	3301      	adds	r3, #1
  401cfc:	f109 38ff 	add.w	r8, r9, #4294967295
  401d00:	9303      	str	r3, [sp, #12]
  401d02:	eb06 0308 	add.w	r3, r6, r8
  401d06:	4658      	mov	r0, fp
  401d08:	f04f 0a00 	mov.w	sl, #0
  401d0c:	46cb      	mov	fp, r9
  401d0e:	4699      	mov	r9, r3
  401d10:	eb0a 0704 	add.w	r7, sl, r4
  401d14:	1a3a      	subs	r2, r7, r0
  401d16:	2100      	movs	r1, #0
  401d18:	4428      	add	r0, r5
  401d1a:	f002 fe39 	bl	404990 <memchr>
  401d1e:	2800      	cmp	r0, #0
  401d20:	d1e1      	bne.n	401ce6 <two_way_long_needle+0x126>
  401d22:	2f00      	cmp	r7, #0
  401d24:	d0df      	beq.n	401ce6 <two_way_long_needle+0x126>
  401d26:	19eb      	adds	r3, r5, r7
  401d28:	aa04      	add	r2, sp, #16
  401d2a:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  401d2e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  401d32:	bba3      	cbnz	r3, 401d9e <two_way_long_needle+0x1de>
  401d34:	1e61      	subs	r1, r4, #1
  401d36:	458b      	cmp	fp, r1
  401d38:	d215      	bcs.n	401d66 <two_way_long_needle+0x1a6>
  401d3a:	eb0a 020b 	add.w	r2, sl, fp
  401d3e:	f816 300b 	ldrb.w	r3, [r6, fp]
  401d42:	f815 e002 	ldrb.w	lr, [r5, r2]
  401d46:	459e      	cmp	lr, r3
  401d48:	442a      	add	r2, r5
  401d4a:	eb06 000b 	add.w	r0, r6, fp
  401d4e:	465b      	mov	r3, fp
  401d50:	d006      	beq.n	401d60 <two_way_long_needle+0x1a0>
  401d52:	e027      	b.n	401da4 <two_way_long_needle+0x1e4>
  401d54:	f810 cf01 	ldrb.w	ip, [r0, #1]!
  401d58:	f812 ef01 	ldrb.w	lr, [r2, #1]!
  401d5c:	45f4      	cmp	ip, lr
  401d5e:	d121      	bne.n	401da4 <two_way_long_needle+0x1e4>
  401d60:	3301      	adds	r3, #1
  401d62:	428b      	cmp	r3, r1
  401d64:	d3f6      	bcc.n	401d54 <two_way_long_needle+0x194>
  401d66:	f1b8 3fff 	cmp.w	r8, #4294967295
  401d6a:	d011      	beq.n	401d90 <two_way_long_needle+0x1d0>
  401d6c:	eb0a 0208 	add.w	r2, sl, r8
  401d70:	f899 1000 	ldrb.w	r1, [r9]
  401d74:	5cab      	ldrb	r3, [r5, r2]
  401d76:	4299      	cmp	r1, r3
  401d78:	442a      	add	r2, r5
  401d7a:	d10f      	bne.n	401d9c <two_way_long_needle+0x1dc>
  401d7c:	464b      	mov	r3, r9
  401d7e:	e005      	b.n	401d8c <two_way_long_needle+0x1cc>
  401d80:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  401d84:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  401d88:	4288      	cmp	r0, r1
  401d8a:	d107      	bne.n	401d9c <two_way_long_needle+0x1dc>
  401d8c:	42b3      	cmp	r3, r6
  401d8e:	d1f7      	bne.n	401d80 <two_way_long_needle+0x1c0>
  401d90:	eb05 000a 	add.w	r0, r5, sl
  401d94:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  401d98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401d9c:	9b03      	ldr	r3, [sp, #12]
  401d9e:	449a      	add	sl, r3
  401da0:	4638      	mov	r0, r7
  401da2:	e7b5      	b.n	401d10 <two_way_long_needle+0x150>
  401da4:	f1cb 0201 	rsb	r2, fp, #1
  401da8:	4492      	add	sl, r2
  401daa:	449a      	add	sl, r3
  401dac:	4638      	mov	r0, r7
  401dae:	e7af      	b.n	401d10 <two_way_long_needle+0x150>
  401db0:	4649      	mov	r1, r9
  401db2:	e78b      	b.n	401ccc <two_way_long_needle+0x10c>
  401db4:	eb05 0008 	add.w	r0, r5, r8
  401db8:	e796      	b.n	401ce8 <two_way_long_needle+0x128>
  401dba:	bf00      	nop

00401dbc <strstr>:
  401dbc:	7802      	ldrb	r2, [r0, #0]
  401dbe:	2a00      	cmp	r2, #0
  401dc0:	f000 8101 	beq.w	401fc6 <strstr+0x20a>
  401dc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401dc8:	f891 8000 	ldrb.w	r8, [r1]
  401dcc:	b085      	sub	sp, #20
  401dce:	4644      	mov	r4, r8
  401dd0:	f1b8 0f00 	cmp.w	r8, #0
  401dd4:	d016      	beq.n	401e04 <strstr+0x48>
  401dd6:	4686      	mov	lr, r0
  401dd8:	f101 0c01 	add.w	ip, r1, #1
  401ddc:	2701      	movs	r7, #1
  401dde:	e003      	b.n	401de8 <strstr+0x2c>
  401de0:	f813 4b01 	ldrb.w	r4, [r3], #1
  401de4:	b16c      	cbz	r4, 401e02 <strstr+0x46>
  401de6:	469c      	mov	ip, r3
  401de8:	42a2      	cmp	r2, r4
  401dea:	bf14      	ite	ne
  401dec:	2700      	movne	r7, #0
  401dee:	f007 0701 	andeq.w	r7, r7, #1
  401df2:	f81e 2f01 	ldrb.w	r2, [lr, #1]!
  401df6:	4663      	mov	r3, ip
  401df8:	2a00      	cmp	r2, #0
  401dfa:	d1f1      	bne.n	401de0 <strstr+0x24>
  401dfc:	f89c 3000 	ldrb.w	r3, [ip]
  401e00:	b9fb      	cbnz	r3, 401e42 <strstr+0x86>
  401e02:	b117      	cbz	r7, 401e0a <strstr+0x4e>
  401e04:	b005      	add	sp, #20
  401e06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401e0a:	460e      	mov	r6, r1
  401e0c:	4605      	mov	r5, r0
  401e0e:	4641      	mov	r1, r8
  401e10:	3001      	adds	r0, #1
  401e12:	ebac 0406 	sub.w	r4, ip, r6
  401e16:	f003 f9ed 	bl	4051f4 <strchr>
  401e1a:	4607      	mov	r7, r0
  401e1c:	b188      	cbz	r0, 401e42 <strstr+0x86>
  401e1e:	2c01      	cmp	r4, #1
  401e20:	d0f0      	beq.n	401e04 <strstr+0x48>
  401e22:	1928      	adds	r0, r5, r4
  401e24:	4287      	cmp	r7, r0
  401e26:	bf94      	ite	ls
  401e28:	1bc1      	subls	r1, r0, r7
  401e2a:	2101      	movhi	r1, #1
  401e2c:	2c1f      	cmp	r4, #31
  401e2e:	468b      	mov	fp, r1
  401e30:	d90b      	bls.n	401e4a <strstr+0x8e>
  401e32:	4623      	mov	r3, r4
  401e34:	4632      	mov	r2, r6
  401e36:	4638      	mov	r0, r7
  401e38:	f7ff fec2 	bl	401bc0 <two_way_long_needle>
  401e3c:	b005      	add	sp, #20
  401e3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401e42:	2000      	movs	r0, #0
  401e44:	b005      	add	sp, #20
  401e46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401e4a:	aa03      	add	r2, sp, #12
  401e4c:	4621      	mov	r1, r4
  401e4e:	4630      	mov	r0, r6
  401e50:	f7ff fe5c 	bl	401b0c <critical_factorization>
  401e54:	9903      	ldr	r1, [sp, #12]
  401e56:	4680      	mov	r8, r0
  401e58:	4602      	mov	r2, r0
  401e5a:	4431      	add	r1, r6
  401e5c:	4630      	mov	r0, r6
  401e5e:	f002 fde7 	bl	404a30 <memcmp>
  401e62:	2800      	cmp	r0, #0
  401e64:	d157      	bne.n	401f16 <strstr+0x15a>
  401e66:	f108 33ff 	add.w	r3, r8, #4294967295
  401e6a:	9300      	str	r3, [sp, #0]
  401e6c:	18f3      	adds	r3, r6, r3
  401e6e:	4681      	mov	r9, r0
  401e70:	4605      	mov	r5, r0
  401e72:	9301      	str	r3, [sp, #4]
  401e74:	4658      	mov	r0, fp
  401e76:	46b2      	mov	sl, r6
  401e78:	1966      	adds	r6, r4, r5
  401e7a:	1a32      	subs	r2, r6, r0
  401e7c:	2100      	movs	r1, #0
  401e7e:	4438      	add	r0, r7
  401e80:	f002 fd86 	bl	404990 <memchr>
  401e84:	2800      	cmp	r0, #0
  401e86:	d1dc      	bne.n	401e42 <strstr+0x86>
  401e88:	2e00      	cmp	r6, #0
  401e8a:	d0da      	beq.n	401e42 <strstr+0x86>
  401e8c:	45c8      	cmp	r8, r9
  401e8e:	4643      	mov	r3, r8
  401e90:	bf38      	it	cc
  401e92:	464b      	movcc	r3, r9
  401e94:	429c      	cmp	r4, r3
  401e96:	d912      	bls.n	401ebe <strstr+0x102>
  401e98:	195a      	adds	r2, r3, r5
  401e9a:	f81a 1003 	ldrb.w	r1, [sl, r3]
  401e9e:	5cb8      	ldrb	r0, [r7, r2]
  401ea0:	4281      	cmp	r1, r0
  401ea2:	443a      	add	r2, r7
  401ea4:	eb0a 0e03 	add.w	lr, sl, r3
  401ea8:	d006      	beq.n	401eb8 <strstr+0xfc>
  401eaa:	e02c      	b.n	401f06 <strstr+0x14a>
  401eac:	f81e 0f01 	ldrb.w	r0, [lr, #1]!
  401eb0:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  401eb4:	4288      	cmp	r0, r1
  401eb6:	d126      	bne.n	401f06 <strstr+0x14a>
  401eb8:	3301      	adds	r3, #1
  401eba:	429c      	cmp	r4, r3
  401ebc:	d1f6      	bne.n	401eac <strstr+0xf0>
  401ebe:	45c8      	cmp	r8, r9
  401ec0:	9900      	ldr	r1, [sp, #0]
  401ec2:	f240 8083 	bls.w	401fcc <strstr+0x210>
  401ec6:	9b00      	ldr	r3, [sp, #0]
  401ec8:	18ea      	adds	r2, r5, r3
  401eca:	9b01      	ldr	r3, [sp, #4]
  401ecc:	5cb8      	ldrb	r0, [r7, r2]
  401ece:	781b      	ldrb	r3, [r3, #0]
  401ed0:	4298      	cmp	r0, r3
  401ed2:	443a      	add	r2, r7
  401ed4:	d17a      	bne.n	401fcc <strstr+0x210>
  401ed6:	9801      	ldr	r0, [sp, #4]
  401ed8:	f109 3bff 	add.w	fp, r9, #4294967295
  401edc:	e006      	b.n	401eec <strstr+0x130>
  401ede:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  401ee2:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  401ee6:	45f4      	cmp	ip, lr
  401ee8:	d103      	bne.n	401ef2 <strstr+0x136>
  401eea:	4619      	mov	r1, r3
  401eec:	1e4b      	subs	r3, r1, #1
  401eee:	455b      	cmp	r3, fp
  401ef0:	d1f5      	bne.n	401ede <strstr+0x122>
  401ef2:	f109 0901 	add.w	r9, r9, #1
  401ef6:	4589      	cmp	r9, r1
  401ef8:	d857      	bhi.n	401faa <strstr+0x1ee>
  401efa:	9b03      	ldr	r3, [sp, #12]
  401efc:	4630      	mov	r0, r6
  401efe:	441d      	add	r5, r3
  401f00:	eba4 0903 	sub.w	r9, r4, r3
  401f04:	e7b8      	b.n	401e78 <strstr+0xbc>
  401f06:	f1c8 0201 	rsb	r2, r8, #1
  401f0a:	4415      	add	r5, r2
  401f0c:	441d      	add	r5, r3
  401f0e:	f04f 0900 	mov.w	r9, #0
  401f12:	4630      	mov	r0, r6
  401f14:	e7b0      	b.n	401e78 <strstr+0xbc>
  401f16:	eba4 0308 	sub.w	r3, r4, r8
  401f1a:	4543      	cmp	r3, r8
  401f1c:	bf38      	it	cc
  401f1e:	4643      	movcc	r3, r8
  401f20:	3301      	adds	r3, #1
  401f22:	f108 39ff 	add.w	r9, r8, #4294967295
  401f26:	9303      	str	r3, [sp, #12]
  401f28:	eb06 0309 	add.w	r3, r6, r9
  401f2c:	4658      	mov	r0, fp
  401f2e:	2500      	movs	r5, #0
  401f30:	46bb      	mov	fp, r7
  401f32:	469a      	mov	sl, r3
  401f34:	1967      	adds	r7, r4, r5
  401f36:	1a3a      	subs	r2, r7, r0
  401f38:	2100      	movs	r1, #0
  401f3a:	4458      	add	r0, fp
  401f3c:	f002 fd28 	bl	404990 <memchr>
  401f40:	2800      	cmp	r0, #0
  401f42:	f47f af7e 	bne.w	401e42 <strstr+0x86>
  401f46:	2f00      	cmp	r7, #0
  401f48:	f43f af7b 	beq.w	401e42 <strstr+0x86>
  401f4c:	4544      	cmp	r4, r8
  401f4e:	d915      	bls.n	401f7c <strstr+0x1c0>
  401f50:	eb08 0205 	add.w	r2, r8, r5
  401f54:	f816 3008 	ldrb.w	r3, [r6, r8]
  401f58:	f81b 0002 	ldrb.w	r0, [fp, r2]
  401f5c:	4298      	cmp	r0, r3
  401f5e:	445a      	add	r2, fp
  401f60:	eb06 0108 	add.w	r1, r6, r8
  401f64:	4643      	mov	r3, r8
  401f66:	d006      	beq.n	401f76 <strstr+0x1ba>
  401f68:	e023      	b.n	401fb2 <strstr+0x1f6>
  401f6a:	f811 ef01 	ldrb.w	lr, [r1, #1]!
  401f6e:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  401f72:	4586      	cmp	lr, r0
  401f74:	d11d      	bne.n	401fb2 <strstr+0x1f6>
  401f76:	3301      	adds	r3, #1
  401f78:	429c      	cmp	r4, r3
  401f7a:	d1f6      	bne.n	401f6a <strstr+0x1ae>
  401f7c:	f1b9 3fff 	cmp.w	r9, #4294967295
  401f80:	d012      	beq.n	401fa8 <strstr+0x1ec>
  401f82:	eb05 0209 	add.w	r2, r5, r9
  401f86:	f89a 3000 	ldrb.w	r3, [sl]
  401f8a:	f81b 1002 	ldrb.w	r1, [fp, r2]
  401f8e:	4299      	cmp	r1, r3
  401f90:	445a      	add	r2, fp
  401f92:	d114      	bne.n	401fbe <strstr+0x202>
  401f94:	4653      	mov	r3, sl
  401f96:	e005      	b.n	401fa4 <strstr+0x1e8>
  401f98:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  401f9c:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  401fa0:	4288      	cmp	r0, r1
  401fa2:	d10c      	bne.n	401fbe <strstr+0x202>
  401fa4:	42b3      	cmp	r3, r6
  401fa6:	d1f7      	bne.n	401f98 <strstr+0x1dc>
  401fa8:	465f      	mov	r7, fp
  401faa:	1978      	adds	r0, r7, r5
  401fac:	b005      	add	sp, #20
  401fae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401fb2:	f1c8 0201 	rsb	r2, r8, #1
  401fb6:	4415      	add	r5, r2
  401fb8:	441d      	add	r5, r3
  401fba:	4638      	mov	r0, r7
  401fbc:	e7ba      	b.n	401f34 <strstr+0x178>
  401fbe:	9b03      	ldr	r3, [sp, #12]
  401fc0:	4638      	mov	r0, r7
  401fc2:	441d      	add	r5, r3
  401fc4:	e7b6      	b.n	401f34 <strstr+0x178>
  401fc6:	780b      	ldrb	r3, [r1, #0]
  401fc8:	b913      	cbnz	r3, 401fd0 <strstr+0x214>
  401fca:	4770      	bx	lr
  401fcc:	4641      	mov	r1, r8
  401fce:	e790      	b.n	401ef2 <strstr+0x136>
  401fd0:	2000      	movs	r0, #0
  401fd2:	4770      	bx	lr

00401fd4 <_svfprintf_r>:
  401fd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401fd8:	b0c3      	sub	sp, #268	; 0x10c
  401fda:	460c      	mov	r4, r1
  401fdc:	910b      	str	r1, [sp, #44]	; 0x2c
  401fde:	4692      	mov	sl, r2
  401fe0:	930f      	str	r3, [sp, #60]	; 0x3c
  401fe2:	900c      	str	r0, [sp, #48]	; 0x30
  401fe4:	f002 fa0c 	bl	404400 <_localeconv_r>
  401fe8:	6803      	ldr	r3, [r0, #0]
  401fea:	931a      	str	r3, [sp, #104]	; 0x68
  401fec:	4618      	mov	r0, r3
  401fee:	f003 f987 	bl	405300 <strlen>
  401ff2:	89a3      	ldrh	r3, [r4, #12]
  401ff4:	9019      	str	r0, [sp, #100]	; 0x64
  401ff6:	0619      	lsls	r1, r3, #24
  401ff8:	d503      	bpl.n	402002 <_svfprintf_r+0x2e>
  401ffa:	6923      	ldr	r3, [r4, #16]
  401ffc:	2b00      	cmp	r3, #0
  401ffe:	f001 8003 	beq.w	403008 <_svfprintf_r+0x1034>
  402002:	2300      	movs	r3, #0
  402004:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  402008:	9313      	str	r3, [sp, #76]	; 0x4c
  40200a:	9315      	str	r3, [sp, #84]	; 0x54
  40200c:	9314      	str	r3, [sp, #80]	; 0x50
  40200e:	9327      	str	r3, [sp, #156]	; 0x9c
  402010:	9326      	str	r3, [sp, #152]	; 0x98
  402012:	9318      	str	r3, [sp, #96]	; 0x60
  402014:	931b      	str	r3, [sp, #108]	; 0x6c
  402016:	9309      	str	r3, [sp, #36]	; 0x24
  402018:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  40201c:	46c8      	mov	r8, r9
  40201e:	9316      	str	r3, [sp, #88]	; 0x58
  402020:	9317      	str	r3, [sp, #92]	; 0x5c
  402022:	f89a 3000 	ldrb.w	r3, [sl]
  402026:	4654      	mov	r4, sl
  402028:	b1e3      	cbz	r3, 402064 <_svfprintf_r+0x90>
  40202a:	2b25      	cmp	r3, #37	; 0x25
  40202c:	d102      	bne.n	402034 <_svfprintf_r+0x60>
  40202e:	e019      	b.n	402064 <_svfprintf_r+0x90>
  402030:	2b25      	cmp	r3, #37	; 0x25
  402032:	d003      	beq.n	40203c <_svfprintf_r+0x68>
  402034:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  402038:	2b00      	cmp	r3, #0
  40203a:	d1f9      	bne.n	402030 <_svfprintf_r+0x5c>
  40203c:	eba4 050a 	sub.w	r5, r4, sl
  402040:	b185      	cbz	r5, 402064 <_svfprintf_r+0x90>
  402042:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402044:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402046:	f8c8 a000 	str.w	sl, [r8]
  40204a:	3301      	adds	r3, #1
  40204c:	442a      	add	r2, r5
  40204e:	2b07      	cmp	r3, #7
  402050:	f8c8 5004 	str.w	r5, [r8, #4]
  402054:	9227      	str	r2, [sp, #156]	; 0x9c
  402056:	9326      	str	r3, [sp, #152]	; 0x98
  402058:	dc7f      	bgt.n	40215a <_svfprintf_r+0x186>
  40205a:	f108 0808 	add.w	r8, r8, #8
  40205e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402060:	442b      	add	r3, r5
  402062:	9309      	str	r3, [sp, #36]	; 0x24
  402064:	7823      	ldrb	r3, [r4, #0]
  402066:	2b00      	cmp	r3, #0
  402068:	d07f      	beq.n	40216a <_svfprintf_r+0x196>
  40206a:	2300      	movs	r3, #0
  40206c:	461a      	mov	r2, r3
  40206e:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402072:	4619      	mov	r1, r3
  402074:	930d      	str	r3, [sp, #52]	; 0x34
  402076:	469b      	mov	fp, r3
  402078:	f04f 30ff 	mov.w	r0, #4294967295
  40207c:	7863      	ldrb	r3, [r4, #1]
  40207e:	900a      	str	r0, [sp, #40]	; 0x28
  402080:	f104 0a01 	add.w	sl, r4, #1
  402084:	f10a 0a01 	add.w	sl, sl, #1
  402088:	f1a3 0020 	sub.w	r0, r3, #32
  40208c:	2858      	cmp	r0, #88	; 0x58
  40208e:	f200 83c1 	bhi.w	402814 <_svfprintf_r+0x840>
  402092:	e8df f010 	tbh	[pc, r0, lsl #1]
  402096:	0238      	.short	0x0238
  402098:	03bf03bf 	.word	0x03bf03bf
  40209c:	03bf0240 	.word	0x03bf0240
  4020a0:	03bf03bf 	.word	0x03bf03bf
  4020a4:	03bf03bf 	.word	0x03bf03bf
  4020a8:	024503bf 	.word	0x024503bf
  4020ac:	03bf0203 	.word	0x03bf0203
  4020b0:	026b005d 	.word	0x026b005d
  4020b4:	028603bf 	.word	0x028603bf
  4020b8:	039d039d 	.word	0x039d039d
  4020bc:	039d039d 	.word	0x039d039d
  4020c0:	039d039d 	.word	0x039d039d
  4020c4:	039d039d 	.word	0x039d039d
  4020c8:	03bf039d 	.word	0x03bf039d
  4020cc:	03bf03bf 	.word	0x03bf03bf
  4020d0:	03bf03bf 	.word	0x03bf03bf
  4020d4:	03bf03bf 	.word	0x03bf03bf
  4020d8:	03bf03bf 	.word	0x03bf03bf
  4020dc:	033703bf 	.word	0x033703bf
  4020e0:	03bf0357 	.word	0x03bf0357
  4020e4:	03bf0357 	.word	0x03bf0357
  4020e8:	03bf03bf 	.word	0x03bf03bf
  4020ec:	039803bf 	.word	0x039803bf
  4020f0:	03bf03bf 	.word	0x03bf03bf
  4020f4:	03bf03ad 	.word	0x03bf03ad
  4020f8:	03bf03bf 	.word	0x03bf03bf
  4020fc:	03bf03bf 	.word	0x03bf03bf
  402100:	03bf0259 	.word	0x03bf0259
  402104:	031e03bf 	.word	0x031e03bf
  402108:	03bf03bf 	.word	0x03bf03bf
  40210c:	03bf03bf 	.word	0x03bf03bf
  402110:	03bf03bf 	.word	0x03bf03bf
  402114:	03bf03bf 	.word	0x03bf03bf
  402118:	03bf03bf 	.word	0x03bf03bf
  40211c:	02db02c6 	.word	0x02db02c6
  402120:	03570357 	.word	0x03570357
  402124:	028b0357 	.word	0x028b0357
  402128:	03bf02db 	.word	0x03bf02db
  40212c:	029003bf 	.word	0x029003bf
  402130:	029d03bf 	.word	0x029d03bf
  402134:	02b401cc 	.word	0x02b401cc
  402138:	03bf0208 	.word	0x03bf0208
  40213c:	03bf01e1 	.word	0x03bf01e1
  402140:	03bf007e 	.word	0x03bf007e
  402144:	020d03bf 	.word	0x020d03bf
  402148:	980d      	ldr	r0, [sp, #52]	; 0x34
  40214a:	930f      	str	r3, [sp, #60]	; 0x3c
  40214c:	4240      	negs	r0, r0
  40214e:	900d      	str	r0, [sp, #52]	; 0x34
  402150:	f04b 0b04 	orr.w	fp, fp, #4
  402154:	f89a 3000 	ldrb.w	r3, [sl]
  402158:	e794      	b.n	402084 <_svfprintf_r+0xb0>
  40215a:	aa25      	add	r2, sp, #148	; 0x94
  40215c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40215e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402160:	f003 f93c 	bl	4053dc <__ssprint_r>
  402164:	b940      	cbnz	r0, 402178 <_svfprintf_r+0x1a4>
  402166:	46c8      	mov	r8, r9
  402168:	e779      	b.n	40205e <_svfprintf_r+0x8a>
  40216a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  40216c:	b123      	cbz	r3, 402178 <_svfprintf_r+0x1a4>
  40216e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402170:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402172:	aa25      	add	r2, sp, #148	; 0x94
  402174:	f003 f932 	bl	4053dc <__ssprint_r>
  402178:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40217a:	899b      	ldrh	r3, [r3, #12]
  40217c:	f013 0f40 	tst.w	r3, #64	; 0x40
  402180:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402182:	bf18      	it	ne
  402184:	f04f 33ff 	movne.w	r3, #4294967295
  402188:	9309      	str	r3, [sp, #36]	; 0x24
  40218a:	9809      	ldr	r0, [sp, #36]	; 0x24
  40218c:	b043      	add	sp, #268	; 0x10c
  40218e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402192:	f01b 0f20 	tst.w	fp, #32
  402196:	9311      	str	r3, [sp, #68]	; 0x44
  402198:	f040 81dd 	bne.w	402556 <_svfprintf_r+0x582>
  40219c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40219e:	f01b 0f10 	tst.w	fp, #16
  4021a2:	4613      	mov	r3, r2
  4021a4:	f040 856e 	bne.w	402c84 <_svfprintf_r+0xcb0>
  4021a8:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4021ac:	f000 856a 	beq.w	402c84 <_svfprintf_r+0xcb0>
  4021b0:	8814      	ldrh	r4, [r2, #0]
  4021b2:	3204      	adds	r2, #4
  4021b4:	2500      	movs	r5, #0
  4021b6:	2301      	movs	r3, #1
  4021b8:	920f      	str	r2, [sp, #60]	; 0x3c
  4021ba:	2700      	movs	r7, #0
  4021bc:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4021c0:	990a      	ldr	r1, [sp, #40]	; 0x28
  4021c2:	1c4a      	adds	r2, r1, #1
  4021c4:	f000 8265 	beq.w	402692 <_svfprintf_r+0x6be>
  4021c8:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  4021cc:	9207      	str	r2, [sp, #28]
  4021ce:	ea54 0205 	orrs.w	r2, r4, r5
  4021d2:	f040 8264 	bne.w	40269e <_svfprintf_r+0x6ca>
  4021d6:	2900      	cmp	r1, #0
  4021d8:	f040 843c 	bne.w	402a54 <_svfprintf_r+0xa80>
  4021dc:	2b00      	cmp	r3, #0
  4021de:	f040 84d7 	bne.w	402b90 <_svfprintf_r+0xbbc>
  4021e2:	f01b 0301 	ands.w	r3, fp, #1
  4021e6:	930e      	str	r3, [sp, #56]	; 0x38
  4021e8:	f000 8604 	beq.w	402df4 <_svfprintf_r+0xe20>
  4021ec:	ae42      	add	r6, sp, #264	; 0x108
  4021ee:	2330      	movs	r3, #48	; 0x30
  4021f0:	f806 3d41 	strb.w	r3, [r6, #-65]!
  4021f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4021f6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4021f8:	4293      	cmp	r3, r2
  4021fa:	bfb8      	it	lt
  4021fc:	4613      	movlt	r3, r2
  4021fe:	9308      	str	r3, [sp, #32]
  402200:	2300      	movs	r3, #0
  402202:	9312      	str	r3, [sp, #72]	; 0x48
  402204:	b117      	cbz	r7, 40220c <_svfprintf_r+0x238>
  402206:	9b08      	ldr	r3, [sp, #32]
  402208:	3301      	adds	r3, #1
  40220a:	9308      	str	r3, [sp, #32]
  40220c:	9b07      	ldr	r3, [sp, #28]
  40220e:	f013 0302 	ands.w	r3, r3, #2
  402212:	9310      	str	r3, [sp, #64]	; 0x40
  402214:	d002      	beq.n	40221c <_svfprintf_r+0x248>
  402216:	9b08      	ldr	r3, [sp, #32]
  402218:	3302      	adds	r3, #2
  40221a:	9308      	str	r3, [sp, #32]
  40221c:	9b07      	ldr	r3, [sp, #28]
  40221e:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  402222:	f040 830e 	bne.w	402842 <_svfprintf_r+0x86e>
  402226:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402228:	9a08      	ldr	r2, [sp, #32]
  40222a:	eba3 0b02 	sub.w	fp, r3, r2
  40222e:	f1bb 0f00 	cmp.w	fp, #0
  402232:	f340 8306 	ble.w	402842 <_svfprintf_r+0x86e>
  402236:	f1bb 0f10 	cmp.w	fp, #16
  40223a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40223c:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40223e:	dd29      	ble.n	402294 <_svfprintf_r+0x2c0>
  402240:	4643      	mov	r3, r8
  402242:	4621      	mov	r1, r4
  402244:	46a8      	mov	r8, r5
  402246:	2710      	movs	r7, #16
  402248:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40224a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  40224c:	e006      	b.n	40225c <_svfprintf_r+0x288>
  40224e:	f1ab 0b10 	sub.w	fp, fp, #16
  402252:	f1bb 0f10 	cmp.w	fp, #16
  402256:	f103 0308 	add.w	r3, r3, #8
  40225a:	dd18      	ble.n	40228e <_svfprintf_r+0x2ba>
  40225c:	3201      	adds	r2, #1
  40225e:	48b7      	ldr	r0, [pc, #732]	; (40253c <_svfprintf_r+0x568>)
  402260:	9226      	str	r2, [sp, #152]	; 0x98
  402262:	3110      	adds	r1, #16
  402264:	2a07      	cmp	r2, #7
  402266:	9127      	str	r1, [sp, #156]	; 0x9c
  402268:	e883 0081 	stmia.w	r3, {r0, r7}
  40226c:	ddef      	ble.n	40224e <_svfprintf_r+0x27a>
  40226e:	aa25      	add	r2, sp, #148	; 0x94
  402270:	4629      	mov	r1, r5
  402272:	4620      	mov	r0, r4
  402274:	f003 f8b2 	bl	4053dc <__ssprint_r>
  402278:	2800      	cmp	r0, #0
  40227a:	f47f af7d 	bne.w	402178 <_svfprintf_r+0x1a4>
  40227e:	f1ab 0b10 	sub.w	fp, fp, #16
  402282:	f1bb 0f10 	cmp.w	fp, #16
  402286:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402288:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40228a:	464b      	mov	r3, r9
  40228c:	dce6      	bgt.n	40225c <_svfprintf_r+0x288>
  40228e:	4645      	mov	r5, r8
  402290:	460c      	mov	r4, r1
  402292:	4698      	mov	r8, r3
  402294:	3201      	adds	r2, #1
  402296:	4ba9      	ldr	r3, [pc, #676]	; (40253c <_svfprintf_r+0x568>)
  402298:	9226      	str	r2, [sp, #152]	; 0x98
  40229a:	445c      	add	r4, fp
  40229c:	2a07      	cmp	r2, #7
  40229e:	9427      	str	r4, [sp, #156]	; 0x9c
  4022a0:	e888 0808 	stmia.w	r8, {r3, fp}
  4022a4:	f300 8498 	bgt.w	402bd8 <_svfprintf_r+0xc04>
  4022a8:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4022ac:	f108 0808 	add.w	r8, r8, #8
  4022b0:	b177      	cbz	r7, 4022d0 <_svfprintf_r+0x2fc>
  4022b2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4022b4:	3301      	adds	r3, #1
  4022b6:	3401      	adds	r4, #1
  4022b8:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  4022bc:	2201      	movs	r2, #1
  4022be:	2b07      	cmp	r3, #7
  4022c0:	9427      	str	r4, [sp, #156]	; 0x9c
  4022c2:	9326      	str	r3, [sp, #152]	; 0x98
  4022c4:	e888 0006 	stmia.w	r8, {r1, r2}
  4022c8:	f300 83db 	bgt.w	402a82 <_svfprintf_r+0xaae>
  4022cc:	f108 0808 	add.w	r8, r8, #8
  4022d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4022d2:	b16b      	cbz	r3, 4022f0 <_svfprintf_r+0x31c>
  4022d4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4022d6:	3301      	adds	r3, #1
  4022d8:	3402      	adds	r4, #2
  4022da:	a91e      	add	r1, sp, #120	; 0x78
  4022dc:	2202      	movs	r2, #2
  4022de:	2b07      	cmp	r3, #7
  4022e0:	9427      	str	r4, [sp, #156]	; 0x9c
  4022e2:	9326      	str	r3, [sp, #152]	; 0x98
  4022e4:	e888 0006 	stmia.w	r8, {r1, r2}
  4022e8:	f300 83d6 	bgt.w	402a98 <_svfprintf_r+0xac4>
  4022ec:	f108 0808 	add.w	r8, r8, #8
  4022f0:	2d80      	cmp	r5, #128	; 0x80
  4022f2:	f000 8315 	beq.w	402920 <_svfprintf_r+0x94c>
  4022f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4022f8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4022fa:	1a9f      	subs	r7, r3, r2
  4022fc:	2f00      	cmp	r7, #0
  4022fe:	dd36      	ble.n	40236e <_svfprintf_r+0x39a>
  402300:	2f10      	cmp	r7, #16
  402302:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402304:	4d8e      	ldr	r5, [pc, #568]	; (402540 <_svfprintf_r+0x56c>)
  402306:	dd27      	ble.n	402358 <_svfprintf_r+0x384>
  402308:	4642      	mov	r2, r8
  40230a:	4621      	mov	r1, r4
  40230c:	46b0      	mov	r8, r6
  40230e:	f04f 0b10 	mov.w	fp, #16
  402312:	462e      	mov	r6, r5
  402314:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402316:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402318:	e004      	b.n	402324 <_svfprintf_r+0x350>
  40231a:	3f10      	subs	r7, #16
  40231c:	2f10      	cmp	r7, #16
  40231e:	f102 0208 	add.w	r2, r2, #8
  402322:	dd15      	ble.n	402350 <_svfprintf_r+0x37c>
  402324:	3301      	adds	r3, #1
  402326:	3110      	adds	r1, #16
  402328:	2b07      	cmp	r3, #7
  40232a:	9127      	str	r1, [sp, #156]	; 0x9c
  40232c:	9326      	str	r3, [sp, #152]	; 0x98
  40232e:	e882 0840 	stmia.w	r2, {r6, fp}
  402332:	ddf2      	ble.n	40231a <_svfprintf_r+0x346>
  402334:	aa25      	add	r2, sp, #148	; 0x94
  402336:	4629      	mov	r1, r5
  402338:	4620      	mov	r0, r4
  40233a:	f003 f84f 	bl	4053dc <__ssprint_r>
  40233e:	2800      	cmp	r0, #0
  402340:	f47f af1a 	bne.w	402178 <_svfprintf_r+0x1a4>
  402344:	3f10      	subs	r7, #16
  402346:	2f10      	cmp	r7, #16
  402348:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40234a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40234c:	464a      	mov	r2, r9
  40234e:	dce9      	bgt.n	402324 <_svfprintf_r+0x350>
  402350:	4635      	mov	r5, r6
  402352:	460c      	mov	r4, r1
  402354:	4646      	mov	r6, r8
  402356:	4690      	mov	r8, r2
  402358:	3301      	adds	r3, #1
  40235a:	443c      	add	r4, r7
  40235c:	2b07      	cmp	r3, #7
  40235e:	9427      	str	r4, [sp, #156]	; 0x9c
  402360:	9326      	str	r3, [sp, #152]	; 0x98
  402362:	e888 00a0 	stmia.w	r8, {r5, r7}
  402366:	f300 8381 	bgt.w	402a6c <_svfprintf_r+0xa98>
  40236a:	f108 0808 	add.w	r8, r8, #8
  40236e:	9b07      	ldr	r3, [sp, #28]
  402370:	05df      	lsls	r7, r3, #23
  402372:	f100 8268 	bmi.w	402846 <_svfprintf_r+0x872>
  402376:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402378:	990e      	ldr	r1, [sp, #56]	; 0x38
  40237a:	f8c8 6000 	str.w	r6, [r8]
  40237e:	3301      	adds	r3, #1
  402380:	440c      	add	r4, r1
  402382:	2b07      	cmp	r3, #7
  402384:	9427      	str	r4, [sp, #156]	; 0x9c
  402386:	f8c8 1004 	str.w	r1, [r8, #4]
  40238a:	9326      	str	r3, [sp, #152]	; 0x98
  40238c:	f300 834d 	bgt.w	402a2a <_svfprintf_r+0xa56>
  402390:	f108 0808 	add.w	r8, r8, #8
  402394:	9b07      	ldr	r3, [sp, #28]
  402396:	075b      	lsls	r3, r3, #29
  402398:	d53a      	bpl.n	402410 <_svfprintf_r+0x43c>
  40239a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40239c:	9a08      	ldr	r2, [sp, #32]
  40239e:	1a9d      	subs	r5, r3, r2
  4023a0:	2d00      	cmp	r5, #0
  4023a2:	dd35      	ble.n	402410 <_svfprintf_r+0x43c>
  4023a4:	2d10      	cmp	r5, #16
  4023a6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4023a8:	dd20      	ble.n	4023ec <_svfprintf_r+0x418>
  4023aa:	2610      	movs	r6, #16
  4023ac:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4023ae:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  4023b2:	e004      	b.n	4023be <_svfprintf_r+0x3ea>
  4023b4:	3d10      	subs	r5, #16
  4023b6:	2d10      	cmp	r5, #16
  4023b8:	f108 0808 	add.w	r8, r8, #8
  4023bc:	dd16      	ble.n	4023ec <_svfprintf_r+0x418>
  4023be:	3301      	adds	r3, #1
  4023c0:	4a5e      	ldr	r2, [pc, #376]	; (40253c <_svfprintf_r+0x568>)
  4023c2:	9326      	str	r3, [sp, #152]	; 0x98
  4023c4:	3410      	adds	r4, #16
  4023c6:	2b07      	cmp	r3, #7
  4023c8:	9427      	str	r4, [sp, #156]	; 0x9c
  4023ca:	e888 0044 	stmia.w	r8, {r2, r6}
  4023ce:	ddf1      	ble.n	4023b4 <_svfprintf_r+0x3e0>
  4023d0:	aa25      	add	r2, sp, #148	; 0x94
  4023d2:	4659      	mov	r1, fp
  4023d4:	4638      	mov	r0, r7
  4023d6:	f003 f801 	bl	4053dc <__ssprint_r>
  4023da:	2800      	cmp	r0, #0
  4023dc:	f47f aecc 	bne.w	402178 <_svfprintf_r+0x1a4>
  4023e0:	3d10      	subs	r5, #16
  4023e2:	2d10      	cmp	r5, #16
  4023e4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4023e6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4023e8:	46c8      	mov	r8, r9
  4023ea:	dce8      	bgt.n	4023be <_svfprintf_r+0x3ea>
  4023ec:	3301      	adds	r3, #1
  4023ee:	4a53      	ldr	r2, [pc, #332]	; (40253c <_svfprintf_r+0x568>)
  4023f0:	9326      	str	r3, [sp, #152]	; 0x98
  4023f2:	442c      	add	r4, r5
  4023f4:	2b07      	cmp	r3, #7
  4023f6:	9427      	str	r4, [sp, #156]	; 0x9c
  4023f8:	e888 0024 	stmia.w	r8, {r2, r5}
  4023fc:	dd08      	ble.n	402410 <_svfprintf_r+0x43c>
  4023fe:	aa25      	add	r2, sp, #148	; 0x94
  402400:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402402:	980c      	ldr	r0, [sp, #48]	; 0x30
  402404:	f002 ffea 	bl	4053dc <__ssprint_r>
  402408:	2800      	cmp	r0, #0
  40240a:	f47f aeb5 	bne.w	402178 <_svfprintf_r+0x1a4>
  40240e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402410:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402412:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  402414:	9908      	ldr	r1, [sp, #32]
  402416:	428a      	cmp	r2, r1
  402418:	bfac      	ite	ge
  40241a:	189b      	addge	r3, r3, r2
  40241c:	185b      	addlt	r3, r3, r1
  40241e:	9309      	str	r3, [sp, #36]	; 0x24
  402420:	2c00      	cmp	r4, #0
  402422:	f040 830d 	bne.w	402a40 <_svfprintf_r+0xa6c>
  402426:	2300      	movs	r3, #0
  402428:	9326      	str	r3, [sp, #152]	; 0x98
  40242a:	46c8      	mov	r8, r9
  40242c:	e5f9      	b.n	402022 <_svfprintf_r+0x4e>
  40242e:	9311      	str	r3, [sp, #68]	; 0x44
  402430:	f01b 0320 	ands.w	r3, fp, #32
  402434:	f040 81e3 	bne.w	4027fe <_svfprintf_r+0x82a>
  402438:	f01b 0210 	ands.w	r2, fp, #16
  40243c:	f040 842e 	bne.w	402c9c <_svfprintf_r+0xcc8>
  402440:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  402444:	f000 842a 	beq.w	402c9c <_svfprintf_r+0xcc8>
  402448:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40244a:	4613      	mov	r3, r2
  40244c:	460a      	mov	r2, r1
  40244e:	3204      	adds	r2, #4
  402450:	880c      	ldrh	r4, [r1, #0]
  402452:	920f      	str	r2, [sp, #60]	; 0x3c
  402454:	2500      	movs	r5, #0
  402456:	e6b0      	b.n	4021ba <_svfprintf_r+0x1e6>
  402458:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40245a:	9311      	str	r3, [sp, #68]	; 0x44
  40245c:	6816      	ldr	r6, [r2, #0]
  40245e:	2400      	movs	r4, #0
  402460:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  402464:	1d15      	adds	r5, r2, #4
  402466:	2e00      	cmp	r6, #0
  402468:	f000 86a7 	beq.w	4031ba <_svfprintf_r+0x11e6>
  40246c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40246e:	1c53      	adds	r3, r2, #1
  402470:	f000 8609 	beq.w	403086 <_svfprintf_r+0x10b2>
  402474:	4621      	mov	r1, r4
  402476:	4630      	mov	r0, r6
  402478:	f002 fa8a 	bl	404990 <memchr>
  40247c:	2800      	cmp	r0, #0
  40247e:	f000 86e1 	beq.w	403244 <_svfprintf_r+0x1270>
  402482:	1b83      	subs	r3, r0, r6
  402484:	930e      	str	r3, [sp, #56]	; 0x38
  402486:	940a      	str	r4, [sp, #40]	; 0x28
  402488:	950f      	str	r5, [sp, #60]	; 0x3c
  40248a:	f8cd b01c 	str.w	fp, [sp, #28]
  40248e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402492:	9308      	str	r3, [sp, #32]
  402494:	9412      	str	r4, [sp, #72]	; 0x48
  402496:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40249a:	e6b3      	b.n	402204 <_svfprintf_r+0x230>
  40249c:	f89a 3000 	ldrb.w	r3, [sl]
  4024a0:	2201      	movs	r2, #1
  4024a2:	212b      	movs	r1, #43	; 0x2b
  4024a4:	e5ee      	b.n	402084 <_svfprintf_r+0xb0>
  4024a6:	f04b 0b20 	orr.w	fp, fp, #32
  4024aa:	f89a 3000 	ldrb.w	r3, [sl]
  4024ae:	e5e9      	b.n	402084 <_svfprintf_r+0xb0>
  4024b0:	9311      	str	r3, [sp, #68]	; 0x44
  4024b2:	2a00      	cmp	r2, #0
  4024b4:	f040 8795 	bne.w	4033e2 <_svfprintf_r+0x140e>
  4024b8:	4b22      	ldr	r3, [pc, #136]	; (402544 <_svfprintf_r+0x570>)
  4024ba:	9318      	str	r3, [sp, #96]	; 0x60
  4024bc:	f01b 0f20 	tst.w	fp, #32
  4024c0:	f040 8111 	bne.w	4026e6 <_svfprintf_r+0x712>
  4024c4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4024c6:	f01b 0f10 	tst.w	fp, #16
  4024ca:	4613      	mov	r3, r2
  4024cc:	f040 83e1 	bne.w	402c92 <_svfprintf_r+0xcbe>
  4024d0:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4024d4:	f000 83dd 	beq.w	402c92 <_svfprintf_r+0xcbe>
  4024d8:	3304      	adds	r3, #4
  4024da:	8814      	ldrh	r4, [r2, #0]
  4024dc:	930f      	str	r3, [sp, #60]	; 0x3c
  4024de:	2500      	movs	r5, #0
  4024e0:	f01b 0f01 	tst.w	fp, #1
  4024e4:	f000 810c 	beq.w	402700 <_svfprintf_r+0x72c>
  4024e8:	ea54 0305 	orrs.w	r3, r4, r5
  4024ec:	f000 8108 	beq.w	402700 <_svfprintf_r+0x72c>
  4024f0:	2330      	movs	r3, #48	; 0x30
  4024f2:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  4024f6:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  4024fa:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  4024fe:	f04b 0b02 	orr.w	fp, fp, #2
  402502:	2302      	movs	r3, #2
  402504:	e659      	b.n	4021ba <_svfprintf_r+0x1e6>
  402506:	f89a 3000 	ldrb.w	r3, [sl]
  40250a:	2900      	cmp	r1, #0
  40250c:	f47f adba 	bne.w	402084 <_svfprintf_r+0xb0>
  402510:	2201      	movs	r2, #1
  402512:	2120      	movs	r1, #32
  402514:	e5b6      	b.n	402084 <_svfprintf_r+0xb0>
  402516:	f04b 0b01 	orr.w	fp, fp, #1
  40251a:	f89a 3000 	ldrb.w	r3, [sl]
  40251e:	e5b1      	b.n	402084 <_svfprintf_r+0xb0>
  402520:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  402522:	6823      	ldr	r3, [r4, #0]
  402524:	930d      	str	r3, [sp, #52]	; 0x34
  402526:	4618      	mov	r0, r3
  402528:	2800      	cmp	r0, #0
  40252a:	4623      	mov	r3, r4
  40252c:	f103 0304 	add.w	r3, r3, #4
  402530:	f6ff ae0a 	blt.w	402148 <_svfprintf_r+0x174>
  402534:	930f      	str	r3, [sp, #60]	; 0x3c
  402536:	f89a 3000 	ldrb.w	r3, [sl]
  40253a:	e5a3      	b.n	402084 <_svfprintf_r+0xb0>
  40253c:	00407640 	.word	0x00407640
  402540:	00407650 	.word	0x00407650
  402544:	00407620 	.word	0x00407620
  402548:	f04b 0b10 	orr.w	fp, fp, #16
  40254c:	f01b 0f20 	tst.w	fp, #32
  402550:	9311      	str	r3, [sp, #68]	; 0x44
  402552:	f43f ae23 	beq.w	40219c <_svfprintf_r+0x1c8>
  402556:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402558:	3507      	adds	r5, #7
  40255a:	f025 0307 	bic.w	r3, r5, #7
  40255e:	f103 0208 	add.w	r2, r3, #8
  402562:	e9d3 4500 	ldrd	r4, r5, [r3]
  402566:	920f      	str	r2, [sp, #60]	; 0x3c
  402568:	2301      	movs	r3, #1
  40256a:	e626      	b.n	4021ba <_svfprintf_r+0x1e6>
  40256c:	f89a 3000 	ldrb.w	r3, [sl]
  402570:	2b2a      	cmp	r3, #42	; 0x2a
  402572:	f10a 0401 	add.w	r4, sl, #1
  402576:	f000 8727 	beq.w	4033c8 <_svfprintf_r+0x13f4>
  40257a:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40257e:	2809      	cmp	r0, #9
  402580:	46a2      	mov	sl, r4
  402582:	f200 86ad 	bhi.w	4032e0 <_svfprintf_r+0x130c>
  402586:	2300      	movs	r3, #0
  402588:	461c      	mov	r4, r3
  40258a:	f81a 3b01 	ldrb.w	r3, [sl], #1
  40258e:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402592:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402596:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40259a:	2809      	cmp	r0, #9
  40259c:	d9f5      	bls.n	40258a <_svfprintf_r+0x5b6>
  40259e:	940a      	str	r4, [sp, #40]	; 0x28
  4025a0:	e572      	b.n	402088 <_svfprintf_r+0xb4>
  4025a2:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  4025a6:	f89a 3000 	ldrb.w	r3, [sl]
  4025aa:	e56b      	b.n	402084 <_svfprintf_r+0xb0>
  4025ac:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  4025b0:	f89a 3000 	ldrb.w	r3, [sl]
  4025b4:	e566      	b.n	402084 <_svfprintf_r+0xb0>
  4025b6:	f89a 3000 	ldrb.w	r3, [sl]
  4025ba:	2b6c      	cmp	r3, #108	; 0x6c
  4025bc:	bf03      	ittte	eq
  4025be:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  4025c2:	f04b 0b20 	orreq.w	fp, fp, #32
  4025c6:	f10a 0a01 	addeq.w	sl, sl, #1
  4025ca:	f04b 0b10 	orrne.w	fp, fp, #16
  4025ce:	e559      	b.n	402084 <_svfprintf_r+0xb0>
  4025d0:	2a00      	cmp	r2, #0
  4025d2:	f040 8711 	bne.w	4033f8 <_svfprintf_r+0x1424>
  4025d6:	f01b 0f20 	tst.w	fp, #32
  4025da:	f040 84f9 	bne.w	402fd0 <_svfprintf_r+0xffc>
  4025de:	f01b 0f10 	tst.w	fp, #16
  4025e2:	f040 84ac 	bne.w	402f3e <_svfprintf_r+0xf6a>
  4025e6:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4025ea:	f000 84a8 	beq.w	402f3e <_svfprintf_r+0xf6a>
  4025ee:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4025f0:	6813      	ldr	r3, [r2, #0]
  4025f2:	3204      	adds	r2, #4
  4025f4:	920f      	str	r2, [sp, #60]	; 0x3c
  4025f6:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  4025fa:	801a      	strh	r2, [r3, #0]
  4025fc:	e511      	b.n	402022 <_svfprintf_r+0x4e>
  4025fe:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402600:	4bb3      	ldr	r3, [pc, #716]	; (4028d0 <_svfprintf_r+0x8fc>)
  402602:	680c      	ldr	r4, [r1, #0]
  402604:	9318      	str	r3, [sp, #96]	; 0x60
  402606:	2230      	movs	r2, #48	; 0x30
  402608:	2378      	movs	r3, #120	; 0x78
  40260a:	3104      	adds	r1, #4
  40260c:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  402610:	9311      	str	r3, [sp, #68]	; 0x44
  402612:	f04b 0b02 	orr.w	fp, fp, #2
  402616:	910f      	str	r1, [sp, #60]	; 0x3c
  402618:	2500      	movs	r5, #0
  40261a:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  40261e:	2302      	movs	r3, #2
  402620:	e5cb      	b.n	4021ba <_svfprintf_r+0x1e6>
  402622:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402624:	9311      	str	r3, [sp, #68]	; 0x44
  402626:	680a      	ldr	r2, [r1, #0]
  402628:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  40262c:	2300      	movs	r3, #0
  40262e:	460a      	mov	r2, r1
  402630:	461f      	mov	r7, r3
  402632:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402636:	3204      	adds	r2, #4
  402638:	2301      	movs	r3, #1
  40263a:	9308      	str	r3, [sp, #32]
  40263c:	f8cd b01c 	str.w	fp, [sp, #28]
  402640:	970a      	str	r7, [sp, #40]	; 0x28
  402642:	9712      	str	r7, [sp, #72]	; 0x48
  402644:	920f      	str	r2, [sp, #60]	; 0x3c
  402646:	930e      	str	r3, [sp, #56]	; 0x38
  402648:	ae28      	add	r6, sp, #160	; 0xa0
  40264a:	e5df      	b.n	40220c <_svfprintf_r+0x238>
  40264c:	9311      	str	r3, [sp, #68]	; 0x44
  40264e:	2a00      	cmp	r2, #0
  402650:	f040 86ea 	bne.w	403428 <_svfprintf_r+0x1454>
  402654:	f01b 0f20 	tst.w	fp, #32
  402658:	d15d      	bne.n	402716 <_svfprintf_r+0x742>
  40265a:	f01b 0f10 	tst.w	fp, #16
  40265e:	f040 8308 	bne.w	402c72 <_svfprintf_r+0xc9e>
  402662:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402666:	f000 8304 	beq.w	402c72 <_svfprintf_r+0xc9e>
  40266a:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40266c:	f9b1 4000 	ldrsh.w	r4, [r1]
  402670:	3104      	adds	r1, #4
  402672:	17e5      	asrs	r5, r4, #31
  402674:	4622      	mov	r2, r4
  402676:	462b      	mov	r3, r5
  402678:	910f      	str	r1, [sp, #60]	; 0x3c
  40267a:	2a00      	cmp	r2, #0
  40267c:	f173 0300 	sbcs.w	r3, r3, #0
  402680:	db58      	blt.n	402734 <_svfprintf_r+0x760>
  402682:	990a      	ldr	r1, [sp, #40]	; 0x28
  402684:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402688:	1c4a      	adds	r2, r1, #1
  40268a:	f04f 0301 	mov.w	r3, #1
  40268e:	f47f ad9b 	bne.w	4021c8 <_svfprintf_r+0x1f4>
  402692:	ea54 0205 	orrs.w	r2, r4, r5
  402696:	f000 81df 	beq.w	402a58 <_svfprintf_r+0xa84>
  40269a:	f8cd b01c 	str.w	fp, [sp, #28]
  40269e:	2b01      	cmp	r3, #1
  4026a0:	f000 827b 	beq.w	402b9a <_svfprintf_r+0xbc6>
  4026a4:	2b02      	cmp	r3, #2
  4026a6:	f040 8206 	bne.w	402ab6 <_svfprintf_r+0xae2>
  4026aa:	9818      	ldr	r0, [sp, #96]	; 0x60
  4026ac:	464e      	mov	r6, r9
  4026ae:	0923      	lsrs	r3, r4, #4
  4026b0:	f004 010f 	and.w	r1, r4, #15
  4026b4:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  4026b8:	092a      	lsrs	r2, r5, #4
  4026ba:	461c      	mov	r4, r3
  4026bc:	4615      	mov	r5, r2
  4026be:	5c43      	ldrb	r3, [r0, r1]
  4026c0:	f806 3d01 	strb.w	r3, [r6, #-1]!
  4026c4:	ea54 0305 	orrs.w	r3, r4, r5
  4026c8:	d1f1      	bne.n	4026ae <_svfprintf_r+0x6da>
  4026ca:	eba9 0306 	sub.w	r3, r9, r6
  4026ce:	930e      	str	r3, [sp, #56]	; 0x38
  4026d0:	e590      	b.n	4021f4 <_svfprintf_r+0x220>
  4026d2:	9311      	str	r3, [sp, #68]	; 0x44
  4026d4:	2a00      	cmp	r2, #0
  4026d6:	f040 86a3 	bne.w	403420 <_svfprintf_r+0x144c>
  4026da:	4b7e      	ldr	r3, [pc, #504]	; (4028d4 <_svfprintf_r+0x900>)
  4026dc:	9318      	str	r3, [sp, #96]	; 0x60
  4026de:	f01b 0f20 	tst.w	fp, #32
  4026e2:	f43f aeef 	beq.w	4024c4 <_svfprintf_r+0x4f0>
  4026e6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4026e8:	3507      	adds	r5, #7
  4026ea:	f025 0307 	bic.w	r3, r5, #7
  4026ee:	f103 0208 	add.w	r2, r3, #8
  4026f2:	f01b 0f01 	tst.w	fp, #1
  4026f6:	920f      	str	r2, [sp, #60]	; 0x3c
  4026f8:	e9d3 4500 	ldrd	r4, r5, [r3]
  4026fc:	f47f aef4 	bne.w	4024e8 <_svfprintf_r+0x514>
  402700:	2302      	movs	r3, #2
  402702:	e55a      	b.n	4021ba <_svfprintf_r+0x1e6>
  402704:	9311      	str	r3, [sp, #68]	; 0x44
  402706:	2a00      	cmp	r2, #0
  402708:	f040 8686 	bne.w	403418 <_svfprintf_r+0x1444>
  40270c:	f04b 0b10 	orr.w	fp, fp, #16
  402710:	f01b 0f20 	tst.w	fp, #32
  402714:	d0a1      	beq.n	40265a <_svfprintf_r+0x686>
  402716:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402718:	3507      	adds	r5, #7
  40271a:	f025 0507 	bic.w	r5, r5, #7
  40271e:	e9d5 2300 	ldrd	r2, r3, [r5]
  402722:	2a00      	cmp	r2, #0
  402724:	f105 0108 	add.w	r1, r5, #8
  402728:	461d      	mov	r5, r3
  40272a:	f173 0300 	sbcs.w	r3, r3, #0
  40272e:	910f      	str	r1, [sp, #60]	; 0x3c
  402730:	4614      	mov	r4, r2
  402732:	daa6      	bge.n	402682 <_svfprintf_r+0x6ae>
  402734:	272d      	movs	r7, #45	; 0x2d
  402736:	4264      	negs	r4, r4
  402738:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  40273c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402740:	2301      	movs	r3, #1
  402742:	e53d      	b.n	4021c0 <_svfprintf_r+0x1ec>
  402744:	9311      	str	r3, [sp, #68]	; 0x44
  402746:	2a00      	cmp	r2, #0
  402748:	f040 8662 	bne.w	403410 <_svfprintf_r+0x143c>
  40274c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40274e:	3507      	adds	r5, #7
  402750:	f025 0307 	bic.w	r3, r5, #7
  402754:	f103 0208 	add.w	r2, r3, #8
  402758:	920f      	str	r2, [sp, #60]	; 0x3c
  40275a:	681a      	ldr	r2, [r3, #0]
  40275c:	9215      	str	r2, [sp, #84]	; 0x54
  40275e:	685b      	ldr	r3, [r3, #4]
  402760:	9314      	str	r3, [sp, #80]	; 0x50
  402762:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402764:	9d15      	ldr	r5, [sp, #84]	; 0x54
  402766:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  40276a:	4628      	mov	r0, r5
  40276c:	4621      	mov	r1, r4
  40276e:	f04f 32ff 	mov.w	r2, #4294967295
  402772:	4b59      	ldr	r3, [pc, #356]	; (4028d8 <_svfprintf_r+0x904>)
  402774:	f003 fef8 	bl	406568 <__aeabi_dcmpun>
  402778:	2800      	cmp	r0, #0
  40277a:	f040 834a 	bne.w	402e12 <_svfprintf_r+0xe3e>
  40277e:	4628      	mov	r0, r5
  402780:	4621      	mov	r1, r4
  402782:	f04f 32ff 	mov.w	r2, #4294967295
  402786:	4b54      	ldr	r3, [pc, #336]	; (4028d8 <_svfprintf_r+0x904>)
  402788:	f003 fed0 	bl	40652c <__aeabi_dcmple>
  40278c:	2800      	cmp	r0, #0
  40278e:	f040 8340 	bne.w	402e12 <_svfprintf_r+0xe3e>
  402792:	a815      	add	r0, sp, #84	; 0x54
  402794:	c80d      	ldmia	r0, {r0, r2, r3}
  402796:	9914      	ldr	r1, [sp, #80]	; 0x50
  402798:	f003 febe 	bl	406518 <__aeabi_dcmplt>
  40279c:	2800      	cmp	r0, #0
  40279e:	f040 8530 	bne.w	403202 <_svfprintf_r+0x122e>
  4027a2:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4027a6:	4e4d      	ldr	r6, [pc, #308]	; (4028dc <_svfprintf_r+0x908>)
  4027a8:	4b4d      	ldr	r3, [pc, #308]	; (4028e0 <_svfprintf_r+0x90c>)
  4027aa:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  4027ae:	9007      	str	r0, [sp, #28]
  4027b0:	9811      	ldr	r0, [sp, #68]	; 0x44
  4027b2:	2203      	movs	r2, #3
  4027b4:	2100      	movs	r1, #0
  4027b6:	9208      	str	r2, [sp, #32]
  4027b8:	910a      	str	r1, [sp, #40]	; 0x28
  4027ba:	2847      	cmp	r0, #71	; 0x47
  4027bc:	bfd8      	it	le
  4027be:	461e      	movle	r6, r3
  4027c0:	920e      	str	r2, [sp, #56]	; 0x38
  4027c2:	9112      	str	r1, [sp, #72]	; 0x48
  4027c4:	e51e      	b.n	402204 <_svfprintf_r+0x230>
  4027c6:	f04b 0b08 	orr.w	fp, fp, #8
  4027ca:	f89a 3000 	ldrb.w	r3, [sl]
  4027ce:	e459      	b.n	402084 <_svfprintf_r+0xb0>
  4027d0:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4027d4:	2300      	movs	r3, #0
  4027d6:	461c      	mov	r4, r3
  4027d8:	f81a 3b01 	ldrb.w	r3, [sl], #1
  4027dc:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4027e0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  4027e4:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4027e8:	2809      	cmp	r0, #9
  4027ea:	d9f5      	bls.n	4027d8 <_svfprintf_r+0x804>
  4027ec:	940d      	str	r4, [sp, #52]	; 0x34
  4027ee:	e44b      	b.n	402088 <_svfprintf_r+0xb4>
  4027f0:	f04b 0b10 	orr.w	fp, fp, #16
  4027f4:	9311      	str	r3, [sp, #68]	; 0x44
  4027f6:	f01b 0320 	ands.w	r3, fp, #32
  4027fa:	f43f ae1d 	beq.w	402438 <_svfprintf_r+0x464>
  4027fe:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402800:	3507      	adds	r5, #7
  402802:	f025 0307 	bic.w	r3, r5, #7
  402806:	f103 0208 	add.w	r2, r3, #8
  40280a:	e9d3 4500 	ldrd	r4, r5, [r3]
  40280e:	920f      	str	r2, [sp, #60]	; 0x3c
  402810:	2300      	movs	r3, #0
  402812:	e4d2      	b.n	4021ba <_svfprintf_r+0x1e6>
  402814:	9311      	str	r3, [sp, #68]	; 0x44
  402816:	2a00      	cmp	r2, #0
  402818:	f040 85e7 	bne.w	4033ea <_svfprintf_r+0x1416>
  40281c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40281e:	2a00      	cmp	r2, #0
  402820:	f43f aca3 	beq.w	40216a <_svfprintf_r+0x196>
  402824:	2300      	movs	r3, #0
  402826:	2101      	movs	r1, #1
  402828:	461f      	mov	r7, r3
  40282a:	9108      	str	r1, [sp, #32]
  40282c:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402830:	f8cd b01c 	str.w	fp, [sp, #28]
  402834:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402838:	930a      	str	r3, [sp, #40]	; 0x28
  40283a:	9312      	str	r3, [sp, #72]	; 0x48
  40283c:	910e      	str	r1, [sp, #56]	; 0x38
  40283e:	ae28      	add	r6, sp, #160	; 0xa0
  402840:	e4e4      	b.n	40220c <_svfprintf_r+0x238>
  402842:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402844:	e534      	b.n	4022b0 <_svfprintf_r+0x2dc>
  402846:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402848:	2b65      	cmp	r3, #101	; 0x65
  40284a:	f340 80a7 	ble.w	40299c <_svfprintf_r+0x9c8>
  40284e:	a815      	add	r0, sp, #84	; 0x54
  402850:	c80d      	ldmia	r0, {r0, r2, r3}
  402852:	9914      	ldr	r1, [sp, #80]	; 0x50
  402854:	f003 fe56 	bl	406504 <__aeabi_dcmpeq>
  402858:	2800      	cmp	r0, #0
  40285a:	f000 8150 	beq.w	402afe <_svfprintf_r+0xb2a>
  40285e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402860:	4a20      	ldr	r2, [pc, #128]	; (4028e4 <_svfprintf_r+0x910>)
  402862:	f8c8 2000 	str.w	r2, [r8]
  402866:	3301      	adds	r3, #1
  402868:	3401      	adds	r4, #1
  40286a:	2201      	movs	r2, #1
  40286c:	2b07      	cmp	r3, #7
  40286e:	9427      	str	r4, [sp, #156]	; 0x9c
  402870:	9326      	str	r3, [sp, #152]	; 0x98
  402872:	f8c8 2004 	str.w	r2, [r8, #4]
  402876:	f300 836a 	bgt.w	402f4e <_svfprintf_r+0xf7a>
  40287a:	f108 0808 	add.w	r8, r8, #8
  40287e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402880:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402882:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402884:	4293      	cmp	r3, r2
  402886:	db03      	blt.n	402890 <_svfprintf_r+0x8bc>
  402888:	9b07      	ldr	r3, [sp, #28]
  40288a:	07dd      	lsls	r5, r3, #31
  40288c:	f57f ad82 	bpl.w	402394 <_svfprintf_r+0x3c0>
  402890:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402892:	9919      	ldr	r1, [sp, #100]	; 0x64
  402894:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402896:	f8c8 2000 	str.w	r2, [r8]
  40289a:	3301      	adds	r3, #1
  40289c:	440c      	add	r4, r1
  40289e:	2b07      	cmp	r3, #7
  4028a0:	f8c8 1004 	str.w	r1, [r8, #4]
  4028a4:	9427      	str	r4, [sp, #156]	; 0x9c
  4028a6:	9326      	str	r3, [sp, #152]	; 0x98
  4028a8:	f300 839e 	bgt.w	402fe8 <_svfprintf_r+0x1014>
  4028ac:	f108 0808 	add.w	r8, r8, #8
  4028b0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4028b2:	1e5e      	subs	r6, r3, #1
  4028b4:	2e00      	cmp	r6, #0
  4028b6:	f77f ad6d 	ble.w	402394 <_svfprintf_r+0x3c0>
  4028ba:	2e10      	cmp	r6, #16
  4028bc:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4028be:	4d0a      	ldr	r5, [pc, #40]	; (4028e8 <_svfprintf_r+0x914>)
  4028c0:	f340 81f5 	ble.w	402cae <_svfprintf_r+0xcda>
  4028c4:	4622      	mov	r2, r4
  4028c6:	2710      	movs	r7, #16
  4028c8:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  4028cc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  4028ce:	e013      	b.n	4028f8 <_svfprintf_r+0x924>
  4028d0:	00407620 	.word	0x00407620
  4028d4:	0040760c 	.word	0x0040760c
  4028d8:	7fefffff 	.word	0x7fefffff
  4028dc:	00407600 	.word	0x00407600
  4028e0:	004075fc 	.word	0x004075fc
  4028e4:	0040763c 	.word	0x0040763c
  4028e8:	00407650 	.word	0x00407650
  4028ec:	f108 0808 	add.w	r8, r8, #8
  4028f0:	3e10      	subs	r6, #16
  4028f2:	2e10      	cmp	r6, #16
  4028f4:	f340 81da 	ble.w	402cac <_svfprintf_r+0xcd8>
  4028f8:	3301      	adds	r3, #1
  4028fa:	3210      	adds	r2, #16
  4028fc:	2b07      	cmp	r3, #7
  4028fe:	9227      	str	r2, [sp, #156]	; 0x9c
  402900:	9326      	str	r3, [sp, #152]	; 0x98
  402902:	e888 00a0 	stmia.w	r8, {r5, r7}
  402906:	ddf1      	ble.n	4028ec <_svfprintf_r+0x918>
  402908:	aa25      	add	r2, sp, #148	; 0x94
  40290a:	4621      	mov	r1, r4
  40290c:	4658      	mov	r0, fp
  40290e:	f002 fd65 	bl	4053dc <__ssprint_r>
  402912:	2800      	cmp	r0, #0
  402914:	f47f ac30 	bne.w	402178 <_svfprintf_r+0x1a4>
  402918:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40291a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40291c:	46c8      	mov	r8, r9
  40291e:	e7e7      	b.n	4028f0 <_svfprintf_r+0x91c>
  402920:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402922:	9a08      	ldr	r2, [sp, #32]
  402924:	1a9f      	subs	r7, r3, r2
  402926:	2f00      	cmp	r7, #0
  402928:	f77f ace5 	ble.w	4022f6 <_svfprintf_r+0x322>
  40292c:	2f10      	cmp	r7, #16
  40292e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402930:	4db6      	ldr	r5, [pc, #728]	; (402c0c <_svfprintf_r+0xc38>)
  402932:	dd27      	ble.n	402984 <_svfprintf_r+0x9b0>
  402934:	4642      	mov	r2, r8
  402936:	4621      	mov	r1, r4
  402938:	46b0      	mov	r8, r6
  40293a:	f04f 0b10 	mov.w	fp, #16
  40293e:	462e      	mov	r6, r5
  402940:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402942:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402944:	e004      	b.n	402950 <_svfprintf_r+0x97c>
  402946:	3f10      	subs	r7, #16
  402948:	2f10      	cmp	r7, #16
  40294a:	f102 0208 	add.w	r2, r2, #8
  40294e:	dd15      	ble.n	40297c <_svfprintf_r+0x9a8>
  402950:	3301      	adds	r3, #1
  402952:	3110      	adds	r1, #16
  402954:	2b07      	cmp	r3, #7
  402956:	9127      	str	r1, [sp, #156]	; 0x9c
  402958:	9326      	str	r3, [sp, #152]	; 0x98
  40295a:	e882 0840 	stmia.w	r2, {r6, fp}
  40295e:	ddf2      	ble.n	402946 <_svfprintf_r+0x972>
  402960:	aa25      	add	r2, sp, #148	; 0x94
  402962:	4629      	mov	r1, r5
  402964:	4620      	mov	r0, r4
  402966:	f002 fd39 	bl	4053dc <__ssprint_r>
  40296a:	2800      	cmp	r0, #0
  40296c:	f47f ac04 	bne.w	402178 <_svfprintf_r+0x1a4>
  402970:	3f10      	subs	r7, #16
  402972:	2f10      	cmp	r7, #16
  402974:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402976:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402978:	464a      	mov	r2, r9
  40297a:	dce9      	bgt.n	402950 <_svfprintf_r+0x97c>
  40297c:	4635      	mov	r5, r6
  40297e:	460c      	mov	r4, r1
  402980:	4646      	mov	r6, r8
  402982:	4690      	mov	r8, r2
  402984:	3301      	adds	r3, #1
  402986:	443c      	add	r4, r7
  402988:	2b07      	cmp	r3, #7
  40298a:	9427      	str	r4, [sp, #156]	; 0x9c
  40298c:	9326      	str	r3, [sp, #152]	; 0x98
  40298e:	e888 00a0 	stmia.w	r8, {r5, r7}
  402992:	f300 8232 	bgt.w	402dfa <_svfprintf_r+0xe26>
  402996:	f108 0808 	add.w	r8, r8, #8
  40299a:	e4ac      	b.n	4022f6 <_svfprintf_r+0x322>
  40299c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40299e:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4029a0:	2b01      	cmp	r3, #1
  4029a2:	f340 81fe 	ble.w	402da2 <_svfprintf_r+0xdce>
  4029a6:	3701      	adds	r7, #1
  4029a8:	3401      	adds	r4, #1
  4029aa:	2301      	movs	r3, #1
  4029ac:	2f07      	cmp	r7, #7
  4029ae:	9427      	str	r4, [sp, #156]	; 0x9c
  4029b0:	9726      	str	r7, [sp, #152]	; 0x98
  4029b2:	f8c8 6000 	str.w	r6, [r8]
  4029b6:	f8c8 3004 	str.w	r3, [r8, #4]
  4029ba:	f300 8203 	bgt.w	402dc4 <_svfprintf_r+0xdf0>
  4029be:	f108 0808 	add.w	r8, r8, #8
  4029c2:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4029c4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  4029c6:	f8c8 3000 	str.w	r3, [r8]
  4029ca:	3701      	adds	r7, #1
  4029cc:	4414      	add	r4, r2
  4029ce:	2f07      	cmp	r7, #7
  4029d0:	9427      	str	r4, [sp, #156]	; 0x9c
  4029d2:	9726      	str	r7, [sp, #152]	; 0x98
  4029d4:	f8c8 2004 	str.w	r2, [r8, #4]
  4029d8:	f300 8200 	bgt.w	402ddc <_svfprintf_r+0xe08>
  4029dc:	f108 0808 	add.w	r8, r8, #8
  4029e0:	a815      	add	r0, sp, #84	; 0x54
  4029e2:	c80d      	ldmia	r0, {r0, r2, r3}
  4029e4:	9914      	ldr	r1, [sp, #80]	; 0x50
  4029e6:	f003 fd8d 	bl	406504 <__aeabi_dcmpeq>
  4029ea:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4029ec:	2800      	cmp	r0, #0
  4029ee:	f040 8101 	bne.w	402bf4 <_svfprintf_r+0xc20>
  4029f2:	3b01      	subs	r3, #1
  4029f4:	3701      	adds	r7, #1
  4029f6:	3601      	adds	r6, #1
  4029f8:	441c      	add	r4, r3
  4029fa:	2f07      	cmp	r7, #7
  4029fc:	9726      	str	r7, [sp, #152]	; 0x98
  4029fe:	9427      	str	r4, [sp, #156]	; 0x9c
  402a00:	f8c8 6000 	str.w	r6, [r8]
  402a04:	f8c8 3004 	str.w	r3, [r8, #4]
  402a08:	f300 8127 	bgt.w	402c5a <_svfprintf_r+0xc86>
  402a0c:	f108 0808 	add.w	r8, r8, #8
  402a10:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  402a12:	f8c8 2004 	str.w	r2, [r8, #4]
  402a16:	3701      	adds	r7, #1
  402a18:	4414      	add	r4, r2
  402a1a:	ab21      	add	r3, sp, #132	; 0x84
  402a1c:	2f07      	cmp	r7, #7
  402a1e:	9427      	str	r4, [sp, #156]	; 0x9c
  402a20:	9726      	str	r7, [sp, #152]	; 0x98
  402a22:	f8c8 3000 	str.w	r3, [r8]
  402a26:	f77f acb3 	ble.w	402390 <_svfprintf_r+0x3bc>
  402a2a:	aa25      	add	r2, sp, #148	; 0x94
  402a2c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a2e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a30:	f002 fcd4 	bl	4053dc <__ssprint_r>
  402a34:	2800      	cmp	r0, #0
  402a36:	f47f ab9f 	bne.w	402178 <_svfprintf_r+0x1a4>
  402a3a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402a3c:	46c8      	mov	r8, r9
  402a3e:	e4a9      	b.n	402394 <_svfprintf_r+0x3c0>
  402a40:	aa25      	add	r2, sp, #148	; 0x94
  402a42:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a44:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a46:	f002 fcc9 	bl	4053dc <__ssprint_r>
  402a4a:	2800      	cmp	r0, #0
  402a4c:	f43f aceb 	beq.w	402426 <_svfprintf_r+0x452>
  402a50:	f7ff bb92 	b.w	402178 <_svfprintf_r+0x1a4>
  402a54:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402a58:	2b01      	cmp	r3, #1
  402a5a:	f000 8134 	beq.w	402cc6 <_svfprintf_r+0xcf2>
  402a5e:	2b02      	cmp	r3, #2
  402a60:	d125      	bne.n	402aae <_svfprintf_r+0xada>
  402a62:	f8cd b01c 	str.w	fp, [sp, #28]
  402a66:	2400      	movs	r4, #0
  402a68:	2500      	movs	r5, #0
  402a6a:	e61e      	b.n	4026aa <_svfprintf_r+0x6d6>
  402a6c:	aa25      	add	r2, sp, #148	; 0x94
  402a6e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a70:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a72:	f002 fcb3 	bl	4053dc <__ssprint_r>
  402a76:	2800      	cmp	r0, #0
  402a78:	f47f ab7e 	bne.w	402178 <_svfprintf_r+0x1a4>
  402a7c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402a7e:	46c8      	mov	r8, r9
  402a80:	e475      	b.n	40236e <_svfprintf_r+0x39a>
  402a82:	aa25      	add	r2, sp, #148	; 0x94
  402a84:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a86:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a88:	f002 fca8 	bl	4053dc <__ssprint_r>
  402a8c:	2800      	cmp	r0, #0
  402a8e:	f47f ab73 	bne.w	402178 <_svfprintf_r+0x1a4>
  402a92:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402a94:	46c8      	mov	r8, r9
  402a96:	e41b      	b.n	4022d0 <_svfprintf_r+0x2fc>
  402a98:	aa25      	add	r2, sp, #148	; 0x94
  402a9a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a9c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a9e:	f002 fc9d 	bl	4053dc <__ssprint_r>
  402aa2:	2800      	cmp	r0, #0
  402aa4:	f47f ab68 	bne.w	402178 <_svfprintf_r+0x1a4>
  402aa8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402aaa:	46c8      	mov	r8, r9
  402aac:	e420      	b.n	4022f0 <_svfprintf_r+0x31c>
  402aae:	f8cd b01c 	str.w	fp, [sp, #28]
  402ab2:	2400      	movs	r4, #0
  402ab4:	2500      	movs	r5, #0
  402ab6:	4649      	mov	r1, r9
  402ab8:	e000      	b.n	402abc <_svfprintf_r+0xae8>
  402aba:	4631      	mov	r1, r6
  402abc:	08e2      	lsrs	r2, r4, #3
  402abe:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402ac2:	08e8      	lsrs	r0, r5, #3
  402ac4:	f004 0307 	and.w	r3, r4, #7
  402ac8:	4605      	mov	r5, r0
  402aca:	4614      	mov	r4, r2
  402acc:	3330      	adds	r3, #48	; 0x30
  402ace:	ea54 0205 	orrs.w	r2, r4, r5
  402ad2:	f801 3c01 	strb.w	r3, [r1, #-1]
  402ad6:	f101 36ff 	add.w	r6, r1, #4294967295
  402ada:	d1ee      	bne.n	402aba <_svfprintf_r+0xae6>
  402adc:	9a07      	ldr	r2, [sp, #28]
  402ade:	07d2      	lsls	r2, r2, #31
  402ae0:	f57f adf3 	bpl.w	4026ca <_svfprintf_r+0x6f6>
  402ae4:	2b30      	cmp	r3, #48	; 0x30
  402ae6:	f43f adf0 	beq.w	4026ca <_svfprintf_r+0x6f6>
  402aea:	3902      	subs	r1, #2
  402aec:	2330      	movs	r3, #48	; 0x30
  402aee:	f806 3c01 	strb.w	r3, [r6, #-1]
  402af2:	eba9 0301 	sub.w	r3, r9, r1
  402af6:	930e      	str	r3, [sp, #56]	; 0x38
  402af8:	460e      	mov	r6, r1
  402afa:	f7ff bb7b 	b.w	4021f4 <_svfprintf_r+0x220>
  402afe:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402b00:	2900      	cmp	r1, #0
  402b02:	f340 822e 	ble.w	402f62 <_svfprintf_r+0xf8e>
  402b06:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402b08:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402b0a:	4293      	cmp	r3, r2
  402b0c:	bfa8      	it	ge
  402b0e:	4613      	movge	r3, r2
  402b10:	2b00      	cmp	r3, #0
  402b12:	461f      	mov	r7, r3
  402b14:	dd0d      	ble.n	402b32 <_svfprintf_r+0xb5e>
  402b16:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b18:	f8c8 6000 	str.w	r6, [r8]
  402b1c:	3301      	adds	r3, #1
  402b1e:	443c      	add	r4, r7
  402b20:	2b07      	cmp	r3, #7
  402b22:	9427      	str	r4, [sp, #156]	; 0x9c
  402b24:	f8c8 7004 	str.w	r7, [r8, #4]
  402b28:	9326      	str	r3, [sp, #152]	; 0x98
  402b2a:	f300 831f 	bgt.w	40316c <_svfprintf_r+0x1198>
  402b2e:	f108 0808 	add.w	r8, r8, #8
  402b32:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402b34:	2f00      	cmp	r7, #0
  402b36:	bfa8      	it	ge
  402b38:	1bdb      	subge	r3, r3, r7
  402b3a:	2b00      	cmp	r3, #0
  402b3c:	461f      	mov	r7, r3
  402b3e:	f340 80d6 	ble.w	402cee <_svfprintf_r+0xd1a>
  402b42:	2f10      	cmp	r7, #16
  402b44:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b46:	4d31      	ldr	r5, [pc, #196]	; (402c0c <_svfprintf_r+0xc38>)
  402b48:	f340 81ed 	ble.w	402f26 <_svfprintf_r+0xf52>
  402b4c:	4642      	mov	r2, r8
  402b4e:	4621      	mov	r1, r4
  402b50:	46b0      	mov	r8, r6
  402b52:	f04f 0b10 	mov.w	fp, #16
  402b56:	462e      	mov	r6, r5
  402b58:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402b5a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402b5c:	e004      	b.n	402b68 <_svfprintf_r+0xb94>
  402b5e:	3208      	adds	r2, #8
  402b60:	3f10      	subs	r7, #16
  402b62:	2f10      	cmp	r7, #16
  402b64:	f340 81db 	ble.w	402f1e <_svfprintf_r+0xf4a>
  402b68:	3301      	adds	r3, #1
  402b6a:	3110      	adds	r1, #16
  402b6c:	2b07      	cmp	r3, #7
  402b6e:	9127      	str	r1, [sp, #156]	; 0x9c
  402b70:	9326      	str	r3, [sp, #152]	; 0x98
  402b72:	e882 0840 	stmia.w	r2, {r6, fp}
  402b76:	ddf2      	ble.n	402b5e <_svfprintf_r+0xb8a>
  402b78:	aa25      	add	r2, sp, #148	; 0x94
  402b7a:	4629      	mov	r1, r5
  402b7c:	4620      	mov	r0, r4
  402b7e:	f002 fc2d 	bl	4053dc <__ssprint_r>
  402b82:	2800      	cmp	r0, #0
  402b84:	f47f aaf8 	bne.w	402178 <_svfprintf_r+0x1a4>
  402b88:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402b8a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b8c:	464a      	mov	r2, r9
  402b8e:	e7e7      	b.n	402b60 <_svfprintf_r+0xb8c>
  402b90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402b92:	930e      	str	r3, [sp, #56]	; 0x38
  402b94:	464e      	mov	r6, r9
  402b96:	f7ff bb2d 	b.w	4021f4 <_svfprintf_r+0x220>
  402b9a:	2d00      	cmp	r5, #0
  402b9c:	bf08      	it	eq
  402b9e:	2c0a      	cmpeq	r4, #10
  402ba0:	f0c0 808f 	bcc.w	402cc2 <_svfprintf_r+0xcee>
  402ba4:	464e      	mov	r6, r9
  402ba6:	4620      	mov	r0, r4
  402ba8:	4629      	mov	r1, r5
  402baa:	220a      	movs	r2, #10
  402bac:	2300      	movs	r3, #0
  402bae:	f003 fd19 	bl	4065e4 <__aeabi_uldivmod>
  402bb2:	3230      	adds	r2, #48	; 0x30
  402bb4:	f806 2d01 	strb.w	r2, [r6, #-1]!
  402bb8:	4620      	mov	r0, r4
  402bba:	4629      	mov	r1, r5
  402bbc:	2300      	movs	r3, #0
  402bbe:	220a      	movs	r2, #10
  402bc0:	f003 fd10 	bl	4065e4 <__aeabi_uldivmod>
  402bc4:	4604      	mov	r4, r0
  402bc6:	460d      	mov	r5, r1
  402bc8:	ea54 0305 	orrs.w	r3, r4, r5
  402bcc:	d1eb      	bne.n	402ba6 <_svfprintf_r+0xbd2>
  402bce:	eba9 0306 	sub.w	r3, r9, r6
  402bd2:	930e      	str	r3, [sp, #56]	; 0x38
  402bd4:	f7ff bb0e 	b.w	4021f4 <_svfprintf_r+0x220>
  402bd8:	aa25      	add	r2, sp, #148	; 0x94
  402bda:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402bdc:	980c      	ldr	r0, [sp, #48]	; 0x30
  402bde:	f002 fbfd 	bl	4053dc <__ssprint_r>
  402be2:	2800      	cmp	r0, #0
  402be4:	f47f aac8 	bne.w	402178 <_svfprintf_r+0x1a4>
  402be8:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402bec:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402bee:	46c8      	mov	r8, r9
  402bf0:	f7ff bb5e 	b.w	4022b0 <_svfprintf_r+0x2dc>
  402bf4:	1e5e      	subs	r6, r3, #1
  402bf6:	2e00      	cmp	r6, #0
  402bf8:	f77f af0a 	ble.w	402a10 <_svfprintf_r+0xa3c>
  402bfc:	2e10      	cmp	r6, #16
  402bfe:	4d03      	ldr	r5, [pc, #12]	; (402c0c <_svfprintf_r+0xc38>)
  402c00:	dd22      	ble.n	402c48 <_svfprintf_r+0xc74>
  402c02:	4622      	mov	r2, r4
  402c04:	f04f 0b10 	mov.w	fp, #16
  402c08:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402c0a:	e006      	b.n	402c1a <_svfprintf_r+0xc46>
  402c0c:	00407650 	.word	0x00407650
  402c10:	3e10      	subs	r6, #16
  402c12:	2e10      	cmp	r6, #16
  402c14:	f108 0808 	add.w	r8, r8, #8
  402c18:	dd15      	ble.n	402c46 <_svfprintf_r+0xc72>
  402c1a:	3701      	adds	r7, #1
  402c1c:	3210      	adds	r2, #16
  402c1e:	2f07      	cmp	r7, #7
  402c20:	9227      	str	r2, [sp, #156]	; 0x9c
  402c22:	9726      	str	r7, [sp, #152]	; 0x98
  402c24:	e888 0820 	stmia.w	r8, {r5, fp}
  402c28:	ddf2      	ble.n	402c10 <_svfprintf_r+0xc3c>
  402c2a:	aa25      	add	r2, sp, #148	; 0x94
  402c2c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c2e:	4620      	mov	r0, r4
  402c30:	f002 fbd4 	bl	4053dc <__ssprint_r>
  402c34:	2800      	cmp	r0, #0
  402c36:	f47f aa9f 	bne.w	402178 <_svfprintf_r+0x1a4>
  402c3a:	3e10      	subs	r6, #16
  402c3c:	2e10      	cmp	r6, #16
  402c3e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402c40:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402c42:	46c8      	mov	r8, r9
  402c44:	dce9      	bgt.n	402c1a <_svfprintf_r+0xc46>
  402c46:	4614      	mov	r4, r2
  402c48:	3701      	adds	r7, #1
  402c4a:	4434      	add	r4, r6
  402c4c:	2f07      	cmp	r7, #7
  402c4e:	9427      	str	r4, [sp, #156]	; 0x9c
  402c50:	9726      	str	r7, [sp, #152]	; 0x98
  402c52:	e888 0060 	stmia.w	r8, {r5, r6}
  402c56:	f77f aed9 	ble.w	402a0c <_svfprintf_r+0xa38>
  402c5a:	aa25      	add	r2, sp, #148	; 0x94
  402c5c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c5e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c60:	f002 fbbc 	bl	4053dc <__ssprint_r>
  402c64:	2800      	cmp	r0, #0
  402c66:	f47f aa87 	bne.w	402178 <_svfprintf_r+0x1a4>
  402c6a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c6c:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402c6e:	46c8      	mov	r8, r9
  402c70:	e6ce      	b.n	402a10 <_svfprintf_r+0xa3c>
  402c72:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402c74:	6814      	ldr	r4, [r2, #0]
  402c76:	4613      	mov	r3, r2
  402c78:	3304      	adds	r3, #4
  402c7a:	17e5      	asrs	r5, r4, #31
  402c7c:	930f      	str	r3, [sp, #60]	; 0x3c
  402c7e:	4622      	mov	r2, r4
  402c80:	462b      	mov	r3, r5
  402c82:	e4fa      	b.n	40267a <_svfprintf_r+0x6a6>
  402c84:	3204      	adds	r2, #4
  402c86:	681c      	ldr	r4, [r3, #0]
  402c88:	920f      	str	r2, [sp, #60]	; 0x3c
  402c8a:	2301      	movs	r3, #1
  402c8c:	2500      	movs	r5, #0
  402c8e:	f7ff ba94 	b.w	4021ba <_svfprintf_r+0x1e6>
  402c92:	681c      	ldr	r4, [r3, #0]
  402c94:	3304      	adds	r3, #4
  402c96:	930f      	str	r3, [sp, #60]	; 0x3c
  402c98:	2500      	movs	r5, #0
  402c9a:	e421      	b.n	4024e0 <_svfprintf_r+0x50c>
  402c9c:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402c9e:	460a      	mov	r2, r1
  402ca0:	3204      	adds	r2, #4
  402ca2:	680c      	ldr	r4, [r1, #0]
  402ca4:	920f      	str	r2, [sp, #60]	; 0x3c
  402ca6:	2500      	movs	r5, #0
  402ca8:	f7ff ba87 	b.w	4021ba <_svfprintf_r+0x1e6>
  402cac:	4614      	mov	r4, r2
  402cae:	3301      	adds	r3, #1
  402cb0:	4434      	add	r4, r6
  402cb2:	2b07      	cmp	r3, #7
  402cb4:	9427      	str	r4, [sp, #156]	; 0x9c
  402cb6:	9326      	str	r3, [sp, #152]	; 0x98
  402cb8:	e888 0060 	stmia.w	r8, {r5, r6}
  402cbc:	f77f ab68 	ble.w	402390 <_svfprintf_r+0x3bc>
  402cc0:	e6b3      	b.n	402a2a <_svfprintf_r+0xa56>
  402cc2:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402cc6:	f8cd b01c 	str.w	fp, [sp, #28]
  402cca:	ae42      	add	r6, sp, #264	; 0x108
  402ccc:	3430      	adds	r4, #48	; 0x30
  402cce:	2301      	movs	r3, #1
  402cd0:	f806 4d41 	strb.w	r4, [r6, #-65]!
  402cd4:	930e      	str	r3, [sp, #56]	; 0x38
  402cd6:	f7ff ba8d 	b.w	4021f4 <_svfprintf_r+0x220>
  402cda:	aa25      	add	r2, sp, #148	; 0x94
  402cdc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402cde:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ce0:	f002 fb7c 	bl	4053dc <__ssprint_r>
  402ce4:	2800      	cmp	r0, #0
  402ce6:	f47f aa47 	bne.w	402178 <_svfprintf_r+0x1a4>
  402cea:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402cec:	46c8      	mov	r8, r9
  402cee:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402cf0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402cf2:	429a      	cmp	r2, r3
  402cf4:	db44      	blt.n	402d80 <_svfprintf_r+0xdac>
  402cf6:	9b07      	ldr	r3, [sp, #28]
  402cf8:	07d9      	lsls	r1, r3, #31
  402cfa:	d441      	bmi.n	402d80 <_svfprintf_r+0xdac>
  402cfc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402cfe:	9812      	ldr	r0, [sp, #72]	; 0x48
  402d00:	1a9a      	subs	r2, r3, r2
  402d02:	1a1d      	subs	r5, r3, r0
  402d04:	4295      	cmp	r5, r2
  402d06:	bfa8      	it	ge
  402d08:	4615      	movge	r5, r2
  402d0a:	2d00      	cmp	r5, #0
  402d0c:	dd0e      	ble.n	402d2c <_svfprintf_r+0xd58>
  402d0e:	9926      	ldr	r1, [sp, #152]	; 0x98
  402d10:	f8c8 5004 	str.w	r5, [r8, #4]
  402d14:	3101      	adds	r1, #1
  402d16:	4406      	add	r6, r0
  402d18:	442c      	add	r4, r5
  402d1a:	2907      	cmp	r1, #7
  402d1c:	f8c8 6000 	str.w	r6, [r8]
  402d20:	9427      	str	r4, [sp, #156]	; 0x9c
  402d22:	9126      	str	r1, [sp, #152]	; 0x98
  402d24:	f300 823b 	bgt.w	40319e <_svfprintf_r+0x11ca>
  402d28:	f108 0808 	add.w	r8, r8, #8
  402d2c:	2d00      	cmp	r5, #0
  402d2e:	bfac      	ite	ge
  402d30:	1b56      	subge	r6, r2, r5
  402d32:	4616      	movlt	r6, r2
  402d34:	2e00      	cmp	r6, #0
  402d36:	f77f ab2d 	ble.w	402394 <_svfprintf_r+0x3c0>
  402d3a:	2e10      	cmp	r6, #16
  402d3c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d3e:	4db0      	ldr	r5, [pc, #704]	; (403000 <_svfprintf_r+0x102c>)
  402d40:	ddb5      	ble.n	402cae <_svfprintf_r+0xcda>
  402d42:	4622      	mov	r2, r4
  402d44:	2710      	movs	r7, #16
  402d46:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402d4a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402d4c:	e004      	b.n	402d58 <_svfprintf_r+0xd84>
  402d4e:	f108 0808 	add.w	r8, r8, #8
  402d52:	3e10      	subs	r6, #16
  402d54:	2e10      	cmp	r6, #16
  402d56:	dda9      	ble.n	402cac <_svfprintf_r+0xcd8>
  402d58:	3301      	adds	r3, #1
  402d5a:	3210      	adds	r2, #16
  402d5c:	2b07      	cmp	r3, #7
  402d5e:	9227      	str	r2, [sp, #156]	; 0x9c
  402d60:	9326      	str	r3, [sp, #152]	; 0x98
  402d62:	e888 00a0 	stmia.w	r8, {r5, r7}
  402d66:	ddf2      	ble.n	402d4e <_svfprintf_r+0xd7a>
  402d68:	aa25      	add	r2, sp, #148	; 0x94
  402d6a:	4621      	mov	r1, r4
  402d6c:	4658      	mov	r0, fp
  402d6e:	f002 fb35 	bl	4053dc <__ssprint_r>
  402d72:	2800      	cmp	r0, #0
  402d74:	f47f aa00 	bne.w	402178 <_svfprintf_r+0x1a4>
  402d78:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402d7a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d7c:	46c8      	mov	r8, r9
  402d7e:	e7e8      	b.n	402d52 <_svfprintf_r+0xd7e>
  402d80:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d82:	9819      	ldr	r0, [sp, #100]	; 0x64
  402d84:	991a      	ldr	r1, [sp, #104]	; 0x68
  402d86:	f8c8 1000 	str.w	r1, [r8]
  402d8a:	3301      	adds	r3, #1
  402d8c:	4404      	add	r4, r0
  402d8e:	2b07      	cmp	r3, #7
  402d90:	9427      	str	r4, [sp, #156]	; 0x9c
  402d92:	f8c8 0004 	str.w	r0, [r8, #4]
  402d96:	9326      	str	r3, [sp, #152]	; 0x98
  402d98:	f300 81f5 	bgt.w	403186 <_svfprintf_r+0x11b2>
  402d9c:	f108 0808 	add.w	r8, r8, #8
  402da0:	e7ac      	b.n	402cfc <_svfprintf_r+0xd28>
  402da2:	9b07      	ldr	r3, [sp, #28]
  402da4:	07da      	lsls	r2, r3, #31
  402da6:	f53f adfe 	bmi.w	4029a6 <_svfprintf_r+0x9d2>
  402daa:	3701      	adds	r7, #1
  402dac:	3401      	adds	r4, #1
  402dae:	2301      	movs	r3, #1
  402db0:	2f07      	cmp	r7, #7
  402db2:	9427      	str	r4, [sp, #156]	; 0x9c
  402db4:	9726      	str	r7, [sp, #152]	; 0x98
  402db6:	f8c8 6000 	str.w	r6, [r8]
  402dba:	f8c8 3004 	str.w	r3, [r8, #4]
  402dbe:	f77f ae25 	ble.w	402a0c <_svfprintf_r+0xa38>
  402dc2:	e74a      	b.n	402c5a <_svfprintf_r+0xc86>
  402dc4:	aa25      	add	r2, sp, #148	; 0x94
  402dc6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402dc8:	980c      	ldr	r0, [sp, #48]	; 0x30
  402dca:	f002 fb07 	bl	4053dc <__ssprint_r>
  402dce:	2800      	cmp	r0, #0
  402dd0:	f47f a9d2 	bne.w	402178 <_svfprintf_r+0x1a4>
  402dd4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402dd6:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402dd8:	46c8      	mov	r8, r9
  402dda:	e5f2      	b.n	4029c2 <_svfprintf_r+0x9ee>
  402ddc:	aa25      	add	r2, sp, #148	; 0x94
  402dde:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402de0:	980c      	ldr	r0, [sp, #48]	; 0x30
  402de2:	f002 fafb 	bl	4053dc <__ssprint_r>
  402de6:	2800      	cmp	r0, #0
  402de8:	f47f a9c6 	bne.w	402178 <_svfprintf_r+0x1a4>
  402dec:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402dee:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402df0:	46c8      	mov	r8, r9
  402df2:	e5f5      	b.n	4029e0 <_svfprintf_r+0xa0c>
  402df4:	464e      	mov	r6, r9
  402df6:	f7ff b9fd 	b.w	4021f4 <_svfprintf_r+0x220>
  402dfa:	aa25      	add	r2, sp, #148	; 0x94
  402dfc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402dfe:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e00:	f002 faec 	bl	4053dc <__ssprint_r>
  402e04:	2800      	cmp	r0, #0
  402e06:	f47f a9b7 	bne.w	402178 <_svfprintf_r+0x1a4>
  402e0a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e0c:	46c8      	mov	r8, r9
  402e0e:	f7ff ba72 	b.w	4022f6 <_svfprintf_r+0x322>
  402e12:	9c15      	ldr	r4, [sp, #84]	; 0x54
  402e14:	4622      	mov	r2, r4
  402e16:	4620      	mov	r0, r4
  402e18:	9c14      	ldr	r4, [sp, #80]	; 0x50
  402e1a:	4623      	mov	r3, r4
  402e1c:	4621      	mov	r1, r4
  402e1e:	f003 fba3 	bl	406568 <__aeabi_dcmpun>
  402e22:	2800      	cmp	r0, #0
  402e24:	f040 8286 	bne.w	403334 <_svfprintf_r+0x1360>
  402e28:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402e2a:	3301      	adds	r3, #1
  402e2c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402e2e:	f023 0320 	bic.w	r3, r3, #32
  402e32:	930e      	str	r3, [sp, #56]	; 0x38
  402e34:	f000 81e2 	beq.w	4031fc <_svfprintf_r+0x1228>
  402e38:	2b47      	cmp	r3, #71	; 0x47
  402e3a:	f000 811e 	beq.w	40307a <_svfprintf_r+0x10a6>
  402e3e:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  402e42:	9307      	str	r3, [sp, #28]
  402e44:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402e46:	1e1f      	subs	r7, r3, #0
  402e48:	9b15      	ldr	r3, [sp, #84]	; 0x54
  402e4a:	9308      	str	r3, [sp, #32]
  402e4c:	bfbb      	ittet	lt
  402e4e:	463b      	movlt	r3, r7
  402e50:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  402e54:	2300      	movge	r3, #0
  402e56:	232d      	movlt	r3, #45	; 0x2d
  402e58:	9310      	str	r3, [sp, #64]	; 0x40
  402e5a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402e5c:	2b66      	cmp	r3, #102	; 0x66
  402e5e:	f000 81bb 	beq.w	4031d8 <_svfprintf_r+0x1204>
  402e62:	2b46      	cmp	r3, #70	; 0x46
  402e64:	f000 80df 	beq.w	403026 <_svfprintf_r+0x1052>
  402e68:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402e6a:	9a08      	ldr	r2, [sp, #32]
  402e6c:	2b45      	cmp	r3, #69	; 0x45
  402e6e:	bf0c      	ite	eq
  402e70:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  402e72:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  402e74:	a823      	add	r0, sp, #140	; 0x8c
  402e76:	a920      	add	r1, sp, #128	; 0x80
  402e78:	bf08      	it	eq
  402e7a:	1c5d      	addeq	r5, r3, #1
  402e7c:	9004      	str	r0, [sp, #16]
  402e7e:	9103      	str	r1, [sp, #12]
  402e80:	a81f      	add	r0, sp, #124	; 0x7c
  402e82:	2102      	movs	r1, #2
  402e84:	463b      	mov	r3, r7
  402e86:	9002      	str	r0, [sp, #8]
  402e88:	9501      	str	r5, [sp, #4]
  402e8a:	9100      	str	r1, [sp, #0]
  402e8c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e8e:	f000 fb73 	bl	403578 <_dtoa_r>
  402e92:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402e94:	2b67      	cmp	r3, #103	; 0x67
  402e96:	4606      	mov	r6, r0
  402e98:	f040 81e0 	bne.w	40325c <_svfprintf_r+0x1288>
  402e9c:	f01b 0f01 	tst.w	fp, #1
  402ea0:	f000 8246 	beq.w	403330 <_svfprintf_r+0x135c>
  402ea4:	1974      	adds	r4, r6, r5
  402ea6:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402ea8:	9808      	ldr	r0, [sp, #32]
  402eaa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402eac:	4639      	mov	r1, r7
  402eae:	f003 fb29 	bl	406504 <__aeabi_dcmpeq>
  402eb2:	2800      	cmp	r0, #0
  402eb4:	f040 8165 	bne.w	403182 <_svfprintf_r+0x11ae>
  402eb8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402eba:	42a3      	cmp	r3, r4
  402ebc:	d206      	bcs.n	402ecc <_svfprintf_r+0xef8>
  402ebe:	2130      	movs	r1, #48	; 0x30
  402ec0:	1c5a      	adds	r2, r3, #1
  402ec2:	9223      	str	r2, [sp, #140]	; 0x8c
  402ec4:	7019      	strb	r1, [r3, #0]
  402ec6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402ec8:	429c      	cmp	r4, r3
  402eca:	d8f9      	bhi.n	402ec0 <_svfprintf_r+0xeec>
  402ecc:	1b9b      	subs	r3, r3, r6
  402ece:	9313      	str	r3, [sp, #76]	; 0x4c
  402ed0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402ed2:	2b47      	cmp	r3, #71	; 0x47
  402ed4:	f000 80e9 	beq.w	4030aa <_svfprintf_r+0x10d6>
  402ed8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402eda:	2b65      	cmp	r3, #101	; 0x65
  402edc:	f340 81cd 	ble.w	40327a <_svfprintf_r+0x12a6>
  402ee0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402ee2:	2b66      	cmp	r3, #102	; 0x66
  402ee4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402ee6:	9312      	str	r3, [sp, #72]	; 0x48
  402ee8:	f000 819e 	beq.w	403228 <_svfprintf_r+0x1254>
  402eec:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402eee:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402ef0:	4619      	mov	r1, r3
  402ef2:	4291      	cmp	r1, r2
  402ef4:	f300 818a 	bgt.w	40320c <_svfprintf_r+0x1238>
  402ef8:	f01b 0f01 	tst.w	fp, #1
  402efc:	f040 8213 	bne.w	403326 <_svfprintf_r+0x1352>
  402f00:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  402f04:	9308      	str	r3, [sp, #32]
  402f06:	2367      	movs	r3, #103	; 0x67
  402f08:	920e      	str	r2, [sp, #56]	; 0x38
  402f0a:	9311      	str	r3, [sp, #68]	; 0x44
  402f0c:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402f0e:	2b00      	cmp	r3, #0
  402f10:	f040 80c4 	bne.w	40309c <_svfprintf_r+0x10c8>
  402f14:	930a      	str	r3, [sp, #40]	; 0x28
  402f16:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402f1a:	f7ff b973 	b.w	402204 <_svfprintf_r+0x230>
  402f1e:	4635      	mov	r5, r6
  402f20:	460c      	mov	r4, r1
  402f22:	4646      	mov	r6, r8
  402f24:	4690      	mov	r8, r2
  402f26:	3301      	adds	r3, #1
  402f28:	443c      	add	r4, r7
  402f2a:	2b07      	cmp	r3, #7
  402f2c:	9427      	str	r4, [sp, #156]	; 0x9c
  402f2e:	9326      	str	r3, [sp, #152]	; 0x98
  402f30:	e888 00a0 	stmia.w	r8, {r5, r7}
  402f34:	f73f aed1 	bgt.w	402cda <_svfprintf_r+0xd06>
  402f38:	f108 0808 	add.w	r8, r8, #8
  402f3c:	e6d7      	b.n	402cee <_svfprintf_r+0xd1a>
  402f3e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402f40:	6813      	ldr	r3, [r2, #0]
  402f42:	3204      	adds	r2, #4
  402f44:	920f      	str	r2, [sp, #60]	; 0x3c
  402f46:	9a09      	ldr	r2, [sp, #36]	; 0x24
  402f48:	601a      	str	r2, [r3, #0]
  402f4a:	f7ff b86a 	b.w	402022 <_svfprintf_r+0x4e>
  402f4e:	aa25      	add	r2, sp, #148	; 0x94
  402f50:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f52:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f54:	f002 fa42 	bl	4053dc <__ssprint_r>
  402f58:	2800      	cmp	r0, #0
  402f5a:	f47f a90d 	bne.w	402178 <_svfprintf_r+0x1a4>
  402f5e:	46c8      	mov	r8, r9
  402f60:	e48d      	b.n	40287e <_svfprintf_r+0x8aa>
  402f62:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402f64:	4a27      	ldr	r2, [pc, #156]	; (403004 <_svfprintf_r+0x1030>)
  402f66:	f8c8 2000 	str.w	r2, [r8]
  402f6a:	3301      	adds	r3, #1
  402f6c:	3401      	adds	r4, #1
  402f6e:	2201      	movs	r2, #1
  402f70:	2b07      	cmp	r3, #7
  402f72:	9427      	str	r4, [sp, #156]	; 0x9c
  402f74:	9326      	str	r3, [sp, #152]	; 0x98
  402f76:	f8c8 2004 	str.w	r2, [r8, #4]
  402f7a:	dc72      	bgt.n	403062 <_svfprintf_r+0x108e>
  402f7c:	f108 0808 	add.w	r8, r8, #8
  402f80:	b929      	cbnz	r1, 402f8e <_svfprintf_r+0xfba>
  402f82:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402f84:	b91b      	cbnz	r3, 402f8e <_svfprintf_r+0xfba>
  402f86:	9b07      	ldr	r3, [sp, #28]
  402f88:	07d8      	lsls	r0, r3, #31
  402f8a:	f57f aa03 	bpl.w	402394 <_svfprintf_r+0x3c0>
  402f8e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402f90:	9819      	ldr	r0, [sp, #100]	; 0x64
  402f92:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402f94:	f8c8 2000 	str.w	r2, [r8]
  402f98:	3301      	adds	r3, #1
  402f9a:	4602      	mov	r2, r0
  402f9c:	4422      	add	r2, r4
  402f9e:	2b07      	cmp	r3, #7
  402fa0:	9227      	str	r2, [sp, #156]	; 0x9c
  402fa2:	f8c8 0004 	str.w	r0, [r8, #4]
  402fa6:	9326      	str	r3, [sp, #152]	; 0x98
  402fa8:	f300 818d 	bgt.w	4032c6 <_svfprintf_r+0x12f2>
  402fac:	f108 0808 	add.w	r8, r8, #8
  402fb0:	2900      	cmp	r1, #0
  402fb2:	f2c0 8165 	blt.w	403280 <_svfprintf_r+0x12ac>
  402fb6:	9913      	ldr	r1, [sp, #76]	; 0x4c
  402fb8:	f8c8 6000 	str.w	r6, [r8]
  402fbc:	3301      	adds	r3, #1
  402fbe:	188c      	adds	r4, r1, r2
  402fc0:	2b07      	cmp	r3, #7
  402fc2:	9427      	str	r4, [sp, #156]	; 0x9c
  402fc4:	9326      	str	r3, [sp, #152]	; 0x98
  402fc6:	f8c8 1004 	str.w	r1, [r8, #4]
  402fca:	f77f a9e1 	ble.w	402390 <_svfprintf_r+0x3bc>
  402fce:	e52c      	b.n	402a2a <_svfprintf_r+0xa56>
  402fd0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402fd2:	9909      	ldr	r1, [sp, #36]	; 0x24
  402fd4:	6813      	ldr	r3, [r2, #0]
  402fd6:	17cd      	asrs	r5, r1, #31
  402fd8:	4608      	mov	r0, r1
  402fda:	3204      	adds	r2, #4
  402fdc:	4629      	mov	r1, r5
  402fde:	920f      	str	r2, [sp, #60]	; 0x3c
  402fe0:	e9c3 0100 	strd	r0, r1, [r3]
  402fe4:	f7ff b81d 	b.w	402022 <_svfprintf_r+0x4e>
  402fe8:	aa25      	add	r2, sp, #148	; 0x94
  402fea:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402fec:	980c      	ldr	r0, [sp, #48]	; 0x30
  402fee:	f002 f9f5 	bl	4053dc <__ssprint_r>
  402ff2:	2800      	cmp	r0, #0
  402ff4:	f47f a8c0 	bne.w	402178 <_svfprintf_r+0x1a4>
  402ff8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402ffa:	46c8      	mov	r8, r9
  402ffc:	e458      	b.n	4028b0 <_svfprintf_r+0x8dc>
  402ffe:	bf00      	nop
  403000:	00407650 	.word	0x00407650
  403004:	0040763c 	.word	0x0040763c
  403008:	2140      	movs	r1, #64	; 0x40
  40300a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40300c:	f001 fa0a 	bl	404424 <_malloc_r>
  403010:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403012:	6010      	str	r0, [r2, #0]
  403014:	6110      	str	r0, [r2, #16]
  403016:	2800      	cmp	r0, #0
  403018:	f000 81f2 	beq.w	403400 <_svfprintf_r+0x142c>
  40301c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  40301e:	2340      	movs	r3, #64	; 0x40
  403020:	6153      	str	r3, [r2, #20]
  403022:	f7fe bfee 	b.w	402002 <_svfprintf_r+0x2e>
  403026:	a823      	add	r0, sp, #140	; 0x8c
  403028:	a920      	add	r1, sp, #128	; 0x80
  40302a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  40302c:	9004      	str	r0, [sp, #16]
  40302e:	9103      	str	r1, [sp, #12]
  403030:	a81f      	add	r0, sp, #124	; 0x7c
  403032:	2103      	movs	r1, #3
  403034:	9002      	str	r0, [sp, #8]
  403036:	9a08      	ldr	r2, [sp, #32]
  403038:	9401      	str	r4, [sp, #4]
  40303a:	463b      	mov	r3, r7
  40303c:	9100      	str	r1, [sp, #0]
  40303e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403040:	f000 fa9a 	bl	403578 <_dtoa_r>
  403044:	4625      	mov	r5, r4
  403046:	4606      	mov	r6, r0
  403048:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40304a:	2b46      	cmp	r3, #70	; 0x46
  40304c:	eb06 0405 	add.w	r4, r6, r5
  403050:	f47f af29 	bne.w	402ea6 <_svfprintf_r+0xed2>
  403054:	7833      	ldrb	r3, [r6, #0]
  403056:	2b30      	cmp	r3, #48	; 0x30
  403058:	f000 8178 	beq.w	40334c <_svfprintf_r+0x1378>
  40305c:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  40305e:	442c      	add	r4, r5
  403060:	e721      	b.n	402ea6 <_svfprintf_r+0xed2>
  403062:	aa25      	add	r2, sp, #148	; 0x94
  403064:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403066:	980c      	ldr	r0, [sp, #48]	; 0x30
  403068:	f002 f9b8 	bl	4053dc <__ssprint_r>
  40306c:	2800      	cmp	r0, #0
  40306e:	f47f a883 	bne.w	402178 <_svfprintf_r+0x1a4>
  403072:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403074:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403076:	46c8      	mov	r8, r9
  403078:	e782      	b.n	402f80 <_svfprintf_r+0xfac>
  40307a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40307c:	2b00      	cmp	r3, #0
  40307e:	bf08      	it	eq
  403080:	2301      	moveq	r3, #1
  403082:	930a      	str	r3, [sp, #40]	; 0x28
  403084:	e6db      	b.n	402e3e <_svfprintf_r+0xe6a>
  403086:	4630      	mov	r0, r6
  403088:	940a      	str	r4, [sp, #40]	; 0x28
  40308a:	f002 f939 	bl	405300 <strlen>
  40308e:	950f      	str	r5, [sp, #60]	; 0x3c
  403090:	900e      	str	r0, [sp, #56]	; 0x38
  403092:	f8cd b01c 	str.w	fp, [sp, #28]
  403096:	4603      	mov	r3, r0
  403098:	f7ff b9f9 	b.w	40248e <_svfprintf_r+0x4ba>
  40309c:	272d      	movs	r7, #45	; 0x2d
  40309e:	2300      	movs	r3, #0
  4030a0:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4030a4:	930a      	str	r3, [sp, #40]	; 0x28
  4030a6:	f7ff b8ae 	b.w	402206 <_svfprintf_r+0x232>
  4030aa:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4030ac:	9312      	str	r3, [sp, #72]	; 0x48
  4030ae:	461a      	mov	r2, r3
  4030b0:	3303      	adds	r3, #3
  4030b2:	db04      	blt.n	4030be <_svfprintf_r+0x10ea>
  4030b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4030b6:	4619      	mov	r1, r3
  4030b8:	4291      	cmp	r1, r2
  4030ba:	f6bf af17 	bge.w	402eec <_svfprintf_r+0xf18>
  4030be:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4030c0:	3b02      	subs	r3, #2
  4030c2:	9311      	str	r3, [sp, #68]	; 0x44
  4030c4:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  4030c8:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  4030cc:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4030ce:	3b01      	subs	r3, #1
  4030d0:	2b00      	cmp	r3, #0
  4030d2:	931f      	str	r3, [sp, #124]	; 0x7c
  4030d4:	bfbd      	ittte	lt
  4030d6:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  4030d8:	f1c3 0301 	rsblt	r3, r3, #1
  4030dc:	222d      	movlt	r2, #45	; 0x2d
  4030de:	222b      	movge	r2, #43	; 0x2b
  4030e0:	2b09      	cmp	r3, #9
  4030e2:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  4030e6:	f340 8116 	ble.w	403316 <_svfprintf_r+0x1342>
  4030ea:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  4030ee:	4620      	mov	r0, r4
  4030f0:	4dab      	ldr	r5, [pc, #684]	; (4033a0 <_svfprintf_r+0x13cc>)
  4030f2:	e000      	b.n	4030f6 <_svfprintf_r+0x1122>
  4030f4:	4610      	mov	r0, r2
  4030f6:	fb85 1203 	smull	r1, r2, r5, r3
  4030fa:	17d9      	asrs	r1, r3, #31
  4030fc:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  403100:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  403104:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  403108:	3230      	adds	r2, #48	; 0x30
  40310a:	2909      	cmp	r1, #9
  40310c:	f800 2c01 	strb.w	r2, [r0, #-1]
  403110:	460b      	mov	r3, r1
  403112:	f100 32ff 	add.w	r2, r0, #4294967295
  403116:	dced      	bgt.n	4030f4 <_svfprintf_r+0x1120>
  403118:	3330      	adds	r3, #48	; 0x30
  40311a:	3802      	subs	r0, #2
  40311c:	b2d9      	uxtb	r1, r3
  40311e:	4284      	cmp	r4, r0
  403120:	f802 1c01 	strb.w	r1, [r2, #-1]
  403124:	f240 8165 	bls.w	4033f2 <_svfprintf_r+0x141e>
  403128:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  40312c:	4613      	mov	r3, r2
  40312e:	e001      	b.n	403134 <_svfprintf_r+0x1160>
  403130:	f813 1b01 	ldrb.w	r1, [r3], #1
  403134:	f800 1b01 	strb.w	r1, [r0], #1
  403138:	42a3      	cmp	r3, r4
  40313a:	d1f9      	bne.n	403130 <_svfprintf_r+0x115c>
  40313c:	3301      	adds	r3, #1
  40313e:	1a9b      	subs	r3, r3, r2
  403140:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  403144:	4413      	add	r3, r2
  403146:	aa21      	add	r2, sp, #132	; 0x84
  403148:	1a9b      	subs	r3, r3, r2
  40314a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  40314c:	931b      	str	r3, [sp, #108]	; 0x6c
  40314e:	2a01      	cmp	r2, #1
  403150:	4413      	add	r3, r2
  403152:	930e      	str	r3, [sp, #56]	; 0x38
  403154:	f340 8119 	ble.w	40338a <_svfprintf_r+0x13b6>
  403158:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40315a:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40315c:	4413      	add	r3, r2
  40315e:	930e      	str	r3, [sp, #56]	; 0x38
  403160:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403164:	9308      	str	r3, [sp, #32]
  403166:	2300      	movs	r3, #0
  403168:	9312      	str	r3, [sp, #72]	; 0x48
  40316a:	e6cf      	b.n	402f0c <_svfprintf_r+0xf38>
  40316c:	aa25      	add	r2, sp, #148	; 0x94
  40316e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403170:	980c      	ldr	r0, [sp, #48]	; 0x30
  403172:	f002 f933 	bl	4053dc <__ssprint_r>
  403176:	2800      	cmp	r0, #0
  403178:	f47e affe 	bne.w	402178 <_svfprintf_r+0x1a4>
  40317c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40317e:	46c8      	mov	r8, r9
  403180:	e4d7      	b.n	402b32 <_svfprintf_r+0xb5e>
  403182:	4623      	mov	r3, r4
  403184:	e6a2      	b.n	402ecc <_svfprintf_r+0xef8>
  403186:	aa25      	add	r2, sp, #148	; 0x94
  403188:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40318a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40318c:	f002 f926 	bl	4053dc <__ssprint_r>
  403190:	2800      	cmp	r0, #0
  403192:	f47e aff1 	bne.w	402178 <_svfprintf_r+0x1a4>
  403196:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403198:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40319a:	46c8      	mov	r8, r9
  40319c:	e5ae      	b.n	402cfc <_svfprintf_r+0xd28>
  40319e:	aa25      	add	r2, sp, #148	; 0x94
  4031a0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4031a2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4031a4:	f002 f91a 	bl	4053dc <__ssprint_r>
  4031a8:	2800      	cmp	r0, #0
  4031aa:	f47e afe5 	bne.w	402178 <_svfprintf_r+0x1a4>
  4031ae:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  4031b0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4031b2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4031b4:	1a9a      	subs	r2, r3, r2
  4031b6:	46c8      	mov	r8, r9
  4031b8:	e5b8      	b.n	402d2c <_svfprintf_r+0xd58>
  4031ba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4031bc:	9612      	str	r6, [sp, #72]	; 0x48
  4031be:	2b06      	cmp	r3, #6
  4031c0:	bf28      	it	cs
  4031c2:	2306      	movcs	r3, #6
  4031c4:	960a      	str	r6, [sp, #40]	; 0x28
  4031c6:	4637      	mov	r7, r6
  4031c8:	9308      	str	r3, [sp, #32]
  4031ca:	950f      	str	r5, [sp, #60]	; 0x3c
  4031cc:	f8cd b01c 	str.w	fp, [sp, #28]
  4031d0:	930e      	str	r3, [sp, #56]	; 0x38
  4031d2:	4e74      	ldr	r6, [pc, #464]	; (4033a4 <_svfprintf_r+0x13d0>)
  4031d4:	f7ff b816 	b.w	402204 <_svfprintf_r+0x230>
  4031d8:	a823      	add	r0, sp, #140	; 0x8c
  4031da:	a920      	add	r1, sp, #128	; 0x80
  4031dc:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  4031de:	9004      	str	r0, [sp, #16]
  4031e0:	9103      	str	r1, [sp, #12]
  4031e2:	a81f      	add	r0, sp, #124	; 0x7c
  4031e4:	2103      	movs	r1, #3
  4031e6:	9002      	str	r0, [sp, #8]
  4031e8:	9a08      	ldr	r2, [sp, #32]
  4031ea:	9501      	str	r5, [sp, #4]
  4031ec:	463b      	mov	r3, r7
  4031ee:	9100      	str	r1, [sp, #0]
  4031f0:	980c      	ldr	r0, [sp, #48]	; 0x30
  4031f2:	f000 f9c1 	bl	403578 <_dtoa_r>
  4031f6:	4606      	mov	r6, r0
  4031f8:	1944      	adds	r4, r0, r5
  4031fa:	e72b      	b.n	403054 <_svfprintf_r+0x1080>
  4031fc:	2306      	movs	r3, #6
  4031fe:	930a      	str	r3, [sp, #40]	; 0x28
  403200:	e61d      	b.n	402e3e <_svfprintf_r+0xe6a>
  403202:	272d      	movs	r7, #45	; 0x2d
  403204:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  403208:	f7ff bacd 	b.w	4027a6 <_svfprintf_r+0x7d2>
  40320c:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40320e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403210:	4413      	add	r3, r2
  403212:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403214:	930e      	str	r3, [sp, #56]	; 0x38
  403216:	2a00      	cmp	r2, #0
  403218:	f340 80b0 	ble.w	40337c <_svfprintf_r+0x13a8>
  40321c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403220:	9308      	str	r3, [sp, #32]
  403222:	2367      	movs	r3, #103	; 0x67
  403224:	9311      	str	r3, [sp, #68]	; 0x44
  403226:	e671      	b.n	402f0c <_svfprintf_r+0xf38>
  403228:	2b00      	cmp	r3, #0
  40322a:	f340 80c3 	ble.w	4033b4 <_svfprintf_r+0x13e0>
  40322e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403230:	2a00      	cmp	r2, #0
  403232:	f040 8099 	bne.w	403368 <_svfprintf_r+0x1394>
  403236:	f01b 0f01 	tst.w	fp, #1
  40323a:	f040 8095 	bne.w	403368 <_svfprintf_r+0x1394>
  40323e:	9308      	str	r3, [sp, #32]
  403240:	930e      	str	r3, [sp, #56]	; 0x38
  403242:	e663      	b.n	402f0c <_svfprintf_r+0xf38>
  403244:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403246:	9308      	str	r3, [sp, #32]
  403248:	930e      	str	r3, [sp, #56]	; 0x38
  40324a:	900a      	str	r0, [sp, #40]	; 0x28
  40324c:	950f      	str	r5, [sp, #60]	; 0x3c
  40324e:	f8cd b01c 	str.w	fp, [sp, #28]
  403252:	9012      	str	r0, [sp, #72]	; 0x48
  403254:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403258:	f7fe bfd4 	b.w	402204 <_svfprintf_r+0x230>
  40325c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40325e:	2b47      	cmp	r3, #71	; 0x47
  403260:	f47f ae20 	bne.w	402ea4 <_svfprintf_r+0xed0>
  403264:	f01b 0f01 	tst.w	fp, #1
  403268:	f47f aeee 	bne.w	403048 <_svfprintf_r+0x1074>
  40326c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40326e:	1b9b      	subs	r3, r3, r6
  403270:	9313      	str	r3, [sp, #76]	; 0x4c
  403272:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403274:	2b47      	cmp	r3, #71	; 0x47
  403276:	f43f af18 	beq.w	4030aa <_svfprintf_r+0x10d6>
  40327a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  40327c:	9312      	str	r3, [sp, #72]	; 0x48
  40327e:	e721      	b.n	4030c4 <_svfprintf_r+0x10f0>
  403280:	424f      	negs	r7, r1
  403282:	3110      	adds	r1, #16
  403284:	4d48      	ldr	r5, [pc, #288]	; (4033a8 <_svfprintf_r+0x13d4>)
  403286:	da2f      	bge.n	4032e8 <_svfprintf_r+0x1314>
  403288:	2410      	movs	r4, #16
  40328a:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40328e:	e004      	b.n	40329a <_svfprintf_r+0x12c6>
  403290:	f108 0808 	add.w	r8, r8, #8
  403294:	3f10      	subs	r7, #16
  403296:	2f10      	cmp	r7, #16
  403298:	dd26      	ble.n	4032e8 <_svfprintf_r+0x1314>
  40329a:	3301      	adds	r3, #1
  40329c:	3210      	adds	r2, #16
  40329e:	2b07      	cmp	r3, #7
  4032a0:	9227      	str	r2, [sp, #156]	; 0x9c
  4032a2:	9326      	str	r3, [sp, #152]	; 0x98
  4032a4:	f8c8 5000 	str.w	r5, [r8]
  4032a8:	f8c8 4004 	str.w	r4, [r8, #4]
  4032ac:	ddf0      	ble.n	403290 <_svfprintf_r+0x12bc>
  4032ae:	aa25      	add	r2, sp, #148	; 0x94
  4032b0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4032b2:	4658      	mov	r0, fp
  4032b4:	f002 f892 	bl	4053dc <__ssprint_r>
  4032b8:	2800      	cmp	r0, #0
  4032ba:	f47e af5d 	bne.w	402178 <_svfprintf_r+0x1a4>
  4032be:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4032c0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4032c2:	46c8      	mov	r8, r9
  4032c4:	e7e6      	b.n	403294 <_svfprintf_r+0x12c0>
  4032c6:	aa25      	add	r2, sp, #148	; 0x94
  4032c8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4032ca:	980c      	ldr	r0, [sp, #48]	; 0x30
  4032cc:	f002 f886 	bl	4053dc <__ssprint_r>
  4032d0:	2800      	cmp	r0, #0
  4032d2:	f47e af51 	bne.w	402178 <_svfprintf_r+0x1a4>
  4032d6:	991f      	ldr	r1, [sp, #124]	; 0x7c
  4032d8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4032da:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4032dc:	46c8      	mov	r8, r9
  4032de:	e667      	b.n	402fb0 <_svfprintf_r+0xfdc>
  4032e0:	2000      	movs	r0, #0
  4032e2:	900a      	str	r0, [sp, #40]	; 0x28
  4032e4:	f7fe bed0 	b.w	402088 <_svfprintf_r+0xb4>
  4032e8:	3301      	adds	r3, #1
  4032ea:	443a      	add	r2, r7
  4032ec:	2b07      	cmp	r3, #7
  4032ee:	e888 00a0 	stmia.w	r8, {r5, r7}
  4032f2:	9227      	str	r2, [sp, #156]	; 0x9c
  4032f4:	9326      	str	r3, [sp, #152]	; 0x98
  4032f6:	f108 0808 	add.w	r8, r8, #8
  4032fa:	f77f ae5c 	ble.w	402fb6 <_svfprintf_r+0xfe2>
  4032fe:	aa25      	add	r2, sp, #148	; 0x94
  403300:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403302:	980c      	ldr	r0, [sp, #48]	; 0x30
  403304:	f002 f86a 	bl	4053dc <__ssprint_r>
  403308:	2800      	cmp	r0, #0
  40330a:	f47e af35 	bne.w	402178 <_svfprintf_r+0x1a4>
  40330e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403310:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403312:	46c8      	mov	r8, r9
  403314:	e64f      	b.n	402fb6 <_svfprintf_r+0xfe2>
  403316:	3330      	adds	r3, #48	; 0x30
  403318:	2230      	movs	r2, #48	; 0x30
  40331a:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  40331e:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  403322:	ab22      	add	r3, sp, #136	; 0x88
  403324:	e70f      	b.n	403146 <_svfprintf_r+0x1172>
  403326:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403328:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40332a:	4413      	add	r3, r2
  40332c:	930e      	str	r3, [sp, #56]	; 0x38
  40332e:	e775      	b.n	40321c <_svfprintf_r+0x1248>
  403330:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403332:	e5cb      	b.n	402ecc <_svfprintf_r+0xef8>
  403334:	9b14      	ldr	r3, [sp, #80]	; 0x50
  403336:	4e1d      	ldr	r6, [pc, #116]	; (4033ac <_svfprintf_r+0x13d8>)
  403338:	2b00      	cmp	r3, #0
  40333a:	bfb6      	itet	lt
  40333c:	272d      	movlt	r7, #45	; 0x2d
  40333e:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  403342:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  403346:	4b1a      	ldr	r3, [pc, #104]	; (4033b0 <_svfprintf_r+0x13dc>)
  403348:	f7ff ba2f 	b.w	4027aa <_svfprintf_r+0x7d6>
  40334c:	9a16      	ldr	r2, [sp, #88]	; 0x58
  40334e:	9808      	ldr	r0, [sp, #32]
  403350:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403352:	4639      	mov	r1, r7
  403354:	f003 f8d6 	bl	406504 <__aeabi_dcmpeq>
  403358:	2800      	cmp	r0, #0
  40335a:	f47f ae7f 	bne.w	40305c <_svfprintf_r+0x1088>
  40335e:	f1c5 0501 	rsb	r5, r5, #1
  403362:	951f      	str	r5, [sp, #124]	; 0x7c
  403364:	442c      	add	r4, r5
  403366:	e59e      	b.n	402ea6 <_svfprintf_r+0xed2>
  403368:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40336a:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40336c:	4413      	add	r3, r2
  40336e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403370:	441a      	add	r2, r3
  403372:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  403376:	920e      	str	r2, [sp, #56]	; 0x38
  403378:	9308      	str	r3, [sp, #32]
  40337a:	e5c7      	b.n	402f0c <_svfprintf_r+0xf38>
  40337c:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40337e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403380:	f1c3 0301 	rsb	r3, r3, #1
  403384:	441a      	add	r2, r3
  403386:	4613      	mov	r3, r2
  403388:	e7d0      	b.n	40332c <_svfprintf_r+0x1358>
  40338a:	f01b 0301 	ands.w	r3, fp, #1
  40338e:	9312      	str	r3, [sp, #72]	; 0x48
  403390:	f47f aee2 	bne.w	403158 <_svfprintf_r+0x1184>
  403394:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403396:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40339a:	9308      	str	r3, [sp, #32]
  40339c:	e5b6      	b.n	402f0c <_svfprintf_r+0xf38>
  40339e:	bf00      	nop
  4033a0:	66666667 	.word	0x66666667
  4033a4:	00407634 	.word	0x00407634
  4033a8:	00407650 	.word	0x00407650
  4033ac:	00407608 	.word	0x00407608
  4033b0:	00407604 	.word	0x00407604
  4033b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4033b6:	b913      	cbnz	r3, 4033be <_svfprintf_r+0x13ea>
  4033b8:	f01b 0f01 	tst.w	fp, #1
  4033bc:	d002      	beq.n	4033c4 <_svfprintf_r+0x13f0>
  4033be:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4033c0:	3301      	adds	r3, #1
  4033c2:	e7d4      	b.n	40336e <_svfprintf_r+0x139a>
  4033c4:	2301      	movs	r3, #1
  4033c6:	e73a      	b.n	40323e <_svfprintf_r+0x126a>
  4033c8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4033ca:	f89a 3001 	ldrb.w	r3, [sl, #1]
  4033ce:	6828      	ldr	r0, [r5, #0]
  4033d0:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  4033d4:	900a      	str	r0, [sp, #40]	; 0x28
  4033d6:	4628      	mov	r0, r5
  4033d8:	3004      	adds	r0, #4
  4033da:	46a2      	mov	sl, r4
  4033dc:	900f      	str	r0, [sp, #60]	; 0x3c
  4033de:	f7fe be51 	b.w	402084 <_svfprintf_r+0xb0>
  4033e2:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4033e6:	f7ff b867 	b.w	4024b8 <_svfprintf_r+0x4e4>
  4033ea:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4033ee:	f7ff ba15 	b.w	40281c <_svfprintf_r+0x848>
  4033f2:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  4033f6:	e6a6      	b.n	403146 <_svfprintf_r+0x1172>
  4033f8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4033fc:	f7ff b8eb 	b.w	4025d6 <_svfprintf_r+0x602>
  403400:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403402:	230c      	movs	r3, #12
  403404:	6013      	str	r3, [r2, #0]
  403406:	f04f 33ff 	mov.w	r3, #4294967295
  40340a:	9309      	str	r3, [sp, #36]	; 0x24
  40340c:	f7fe bebd 	b.w	40218a <_svfprintf_r+0x1b6>
  403410:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403414:	f7ff b99a 	b.w	40274c <_svfprintf_r+0x778>
  403418:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40341c:	f7ff b976 	b.w	40270c <_svfprintf_r+0x738>
  403420:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403424:	f7ff b959 	b.w	4026da <_svfprintf_r+0x706>
  403428:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40342c:	f7ff b912 	b.w	402654 <_svfprintf_r+0x680>

00403430 <register_fini>:
  403430:	4b02      	ldr	r3, [pc, #8]	; (40343c <register_fini+0xc>)
  403432:	b113      	cbz	r3, 40343a <register_fini+0xa>
  403434:	4802      	ldr	r0, [pc, #8]	; (403440 <register_fini+0x10>)
  403436:	f000 b805 	b.w	403444 <atexit>
  40343a:	4770      	bx	lr
  40343c:	00000000 	.word	0x00000000
  403440:	004043cd 	.word	0x004043cd

00403444 <atexit>:
  403444:	2300      	movs	r3, #0
  403446:	4601      	mov	r1, r0
  403448:	461a      	mov	r2, r3
  40344a:	4618      	mov	r0, r3
  40344c:	f002 b844 	b.w	4054d8 <__register_exitproc>

00403450 <quorem>:
  403450:	6902      	ldr	r2, [r0, #16]
  403452:	690b      	ldr	r3, [r1, #16]
  403454:	4293      	cmp	r3, r2
  403456:	f300 808d 	bgt.w	403574 <quorem+0x124>
  40345a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40345e:	f103 38ff 	add.w	r8, r3, #4294967295
  403462:	f101 0714 	add.w	r7, r1, #20
  403466:	f100 0b14 	add.w	fp, r0, #20
  40346a:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  40346e:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  403472:	ea4f 0488 	mov.w	r4, r8, lsl #2
  403476:	b083      	sub	sp, #12
  403478:	3201      	adds	r2, #1
  40347a:	fbb3 f9f2 	udiv	r9, r3, r2
  40347e:	eb0b 0304 	add.w	r3, fp, r4
  403482:	9400      	str	r4, [sp, #0]
  403484:	eb07 0a04 	add.w	sl, r7, r4
  403488:	9301      	str	r3, [sp, #4]
  40348a:	f1b9 0f00 	cmp.w	r9, #0
  40348e:	d039      	beq.n	403504 <quorem+0xb4>
  403490:	2500      	movs	r5, #0
  403492:	462e      	mov	r6, r5
  403494:	46bc      	mov	ip, r7
  403496:	46de      	mov	lr, fp
  403498:	f85c 4b04 	ldr.w	r4, [ip], #4
  40349c:	f8de 3000 	ldr.w	r3, [lr]
  4034a0:	b2a2      	uxth	r2, r4
  4034a2:	fb09 5502 	mla	r5, r9, r2, r5
  4034a6:	0c22      	lsrs	r2, r4, #16
  4034a8:	0c2c      	lsrs	r4, r5, #16
  4034aa:	fb09 4202 	mla	r2, r9, r2, r4
  4034ae:	b2ad      	uxth	r5, r5
  4034b0:	1b75      	subs	r5, r6, r5
  4034b2:	b296      	uxth	r6, r2
  4034b4:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  4034b8:	fa15 f383 	uxtah	r3, r5, r3
  4034bc:	eb06 4623 	add.w	r6, r6, r3, asr #16
  4034c0:	b29b      	uxth	r3, r3
  4034c2:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  4034c6:	45e2      	cmp	sl, ip
  4034c8:	ea4f 4512 	mov.w	r5, r2, lsr #16
  4034cc:	f84e 3b04 	str.w	r3, [lr], #4
  4034d0:	ea4f 4626 	mov.w	r6, r6, asr #16
  4034d4:	d2e0      	bcs.n	403498 <quorem+0x48>
  4034d6:	9b00      	ldr	r3, [sp, #0]
  4034d8:	f85b 3003 	ldr.w	r3, [fp, r3]
  4034dc:	b993      	cbnz	r3, 403504 <quorem+0xb4>
  4034de:	9c01      	ldr	r4, [sp, #4]
  4034e0:	1f23      	subs	r3, r4, #4
  4034e2:	459b      	cmp	fp, r3
  4034e4:	d20c      	bcs.n	403500 <quorem+0xb0>
  4034e6:	f854 3c04 	ldr.w	r3, [r4, #-4]
  4034ea:	b94b      	cbnz	r3, 403500 <quorem+0xb0>
  4034ec:	f1a4 0308 	sub.w	r3, r4, #8
  4034f0:	e002      	b.n	4034f8 <quorem+0xa8>
  4034f2:	681a      	ldr	r2, [r3, #0]
  4034f4:	3b04      	subs	r3, #4
  4034f6:	b91a      	cbnz	r2, 403500 <quorem+0xb0>
  4034f8:	459b      	cmp	fp, r3
  4034fa:	f108 38ff 	add.w	r8, r8, #4294967295
  4034fe:	d3f8      	bcc.n	4034f2 <quorem+0xa2>
  403500:	f8c0 8010 	str.w	r8, [r0, #16]
  403504:	4604      	mov	r4, r0
  403506:	f001 fd67 	bl	404fd8 <__mcmp>
  40350a:	2800      	cmp	r0, #0
  40350c:	db2e      	blt.n	40356c <quorem+0x11c>
  40350e:	f109 0901 	add.w	r9, r9, #1
  403512:	465d      	mov	r5, fp
  403514:	2300      	movs	r3, #0
  403516:	f857 1b04 	ldr.w	r1, [r7], #4
  40351a:	6828      	ldr	r0, [r5, #0]
  40351c:	b28a      	uxth	r2, r1
  40351e:	1a9a      	subs	r2, r3, r2
  403520:	0c0b      	lsrs	r3, r1, #16
  403522:	fa12 f280 	uxtah	r2, r2, r0
  403526:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  40352a:	eb03 4322 	add.w	r3, r3, r2, asr #16
  40352e:	b292      	uxth	r2, r2
  403530:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  403534:	45ba      	cmp	sl, r7
  403536:	f845 2b04 	str.w	r2, [r5], #4
  40353a:	ea4f 4323 	mov.w	r3, r3, asr #16
  40353e:	d2ea      	bcs.n	403516 <quorem+0xc6>
  403540:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  403544:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  403548:	b982      	cbnz	r2, 40356c <quorem+0x11c>
  40354a:	1f1a      	subs	r2, r3, #4
  40354c:	4593      	cmp	fp, r2
  40354e:	d20b      	bcs.n	403568 <quorem+0x118>
  403550:	f853 2c04 	ldr.w	r2, [r3, #-4]
  403554:	b942      	cbnz	r2, 403568 <quorem+0x118>
  403556:	3b08      	subs	r3, #8
  403558:	e002      	b.n	403560 <quorem+0x110>
  40355a:	681a      	ldr	r2, [r3, #0]
  40355c:	3b04      	subs	r3, #4
  40355e:	b91a      	cbnz	r2, 403568 <quorem+0x118>
  403560:	459b      	cmp	fp, r3
  403562:	f108 38ff 	add.w	r8, r8, #4294967295
  403566:	d3f8      	bcc.n	40355a <quorem+0x10a>
  403568:	f8c4 8010 	str.w	r8, [r4, #16]
  40356c:	4648      	mov	r0, r9
  40356e:	b003      	add	sp, #12
  403570:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403574:	2000      	movs	r0, #0
  403576:	4770      	bx	lr

00403578 <_dtoa_r>:
  403578:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40357c:	6c01      	ldr	r1, [r0, #64]	; 0x40
  40357e:	b09b      	sub	sp, #108	; 0x6c
  403580:	4604      	mov	r4, r0
  403582:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  403584:	4692      	mov	sl, r2
  403586:	469b      	mov	fp, r3
  403588:	b141      	cbz	r1, 40359c <_dtoa_r+0x24>
  40358a:	6c42      	ldr	r2, [r0, #68]	; 0x44
  40358c:	604a      	str	r2, [r1, #4]
  40358e:	2301      	movs	r3, #1
  403590:	4093      	lsls	r3, r2
  403592:	608b      	str	r3, [r1, #8]
  403594:	f001 fb48 	bl	404c28 <_Bfree>
  403598:	2300      	movs	r3, #0
  40359a:	6423      	str	r3, [r4, #64]	; 0x40
  40359c:	f1bb 0f00 	cmp.w	fp, #0
  4035a0:	465d      	mov	r5, fp
  4035a2:	db35      	blt.n	403610 <_dtoa_r+0x98>
  4035a4:	2300      	movs	r3, #0
  4035a6:	6033      	str	r3, [r6, #0]
  4035a8:	4b9d      	ldr	r3, [pc, #628]	; (403820 <_dtoa_r+0x2a8>)
  4035aa:	43ab      	bics	r3, r5
  4035ac:	d015      	beq.n	4035da <_dtoa_r+0x62>
  4035ae:	4650      	mov	r0, sl
  4035b0:	4659      	mov	r1, fp
  4035b2:	2200      	movs	r2, #0
  4035b4:	2300      	movs	r3, #0
  4035b6:	f002 ffa5 	bl	406504 <__aeabi_dcmpeq>
  4035ba:	4680      	mov	r8, r0
  4035bc:	2800      	cmp	r0, #0
  4035be:	d02d      	beq.n	40361c <_dtoa_r+0xa4>
  4035c0:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4035c2:	2301      	movs	r3, #1
  4035c4:	6013      	str	r3, [r2, #0]
  4035c6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4035c8:	2b00      	cmp	r3, #0
  4035ca:	f000 80bd 	beq.w	403748 <_dtoa_r+0x1d0>
  4035ce:	4895      	ldr	r0, [pc, #596]	; (403824 <_dtoa_r+0x2ac>)
  4035d0:	6018      	str	r0, [r3, #0]
  4035d2:	3801      	subs	r0, #1
  4035d4:	b01b      	add	sp, #108	; 0x6c
  4035d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4035da:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4035dc:	f242 730f 	movw	r3, #9999	; 0x270f
  4035e0:	6013      	str	r3, [r2, #0]
  4035e2:	f1ba 0f00 	cmp.w	sl, #0
  4035e6:	d10d      	bne.n	403604 <_dtoa_r+0x8c>
  4035e8:	f3c5 0513 	ubfx	r5, r5, #0, #20
  4035ec:	b955      	cbnz	r5, 403604 <_dtoa_r+0x8c>
  4035ee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4035f0:	488d      	ldr	r0, [pc, #564]	; (403828 <_dtoa_r+0x2b0>)
  4035f2:	2b00      	cmp	r3, #0
  4035f4:	d0ee      	beq.n	4035d4 <_dtoa_r+0x5c>
  4035f6:	f100 0308 	add.w	r3, r0, #8
  4035fa:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  4035fc:	6013      	str	r3, [r2, #0]
  4035fe:	b01b      	add	sp, #108	; 0x6c
  403600:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403604:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403606:	4889      	ldr	r0, [pc, #548]	; (40382c <_dtoa_r+0x2b4>)
  403608:	2b00      	cmp	r3, #0
  40360a:	d0e3      	beq.n	4035d4 <_dtoa_r+0x5c>
  40360c:	1cc3      	adds	r3, r0, #3
  40360e:	e7f4      	b.n	4035fa <_dtoa_r+0x82>
  403610:	2301      	movs	r3, #1
  403612:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  403616:	6033      	str	r3, [r6, #0]
  403618:	46ab      	mov	fp, r5
  40361a:	e7c5      	b.n	4035a8 <_dtoa_r+0x30>
  40361c:	aa18      	add	r2, sp, #96	; 0x60
  40361e:	ab19      	add	r3, sp, #100	; 0x64
  403620:	9201      	str	r2, [sp, #4]
  403622:	9300      	str	r3, [sp, #0]
  403624:	4652      	mov	r2, sl
  403626:	465b      	mov	r3, fp
  403628:	4620      	mov	r0, r4
  40362a:	f001 fd75 	bl	405118 <__d2b>
  40362e:	0d2b      	lsrs	r3, r5, #20
  403630:	4681      	mov	r9, r0
  403632:	d071      	beq.n	403718 <_dtoa_r+0x1a0>
  403634:	f3cb 0213 	ubfx	r2, fp, #0, #20
  403638:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  40363c:	9f18      	ldr	r7, [sp, #96]	; 0x60
  40363e:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  403642:	4650      	mov	r0, sl
  403644:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  403648:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  40364c:	2200      	movs	r2, #0
  40364e:	4b78      	ldr	r3, [pc, #480]	; (403830 <_dtoa_r+0x2b8>)
  403650:	f002 fb3c 	bl	405ccc <__aeabi_dsub>
  403654:	a36c      	add	r3, pc, #432	; (adr r3, 403808 <_dtoa_r+0x290>)
  403656:	e9d3 2300 	ldrd	r2, r3, [r3]
  40365a:	f002 fceb 	bl	406034 <__aeabi_dmul>
  40365e:	a36c      	add	r3, pc, #432	; (adr r3, 403810 <_dtoa_r+0x298>)
  403660:	e9d3 2300 	ldrd	r2, r3, [r3]
  403664:	f002 fb34 	bl	405cd0 <__adddf3>
  403668:	e9cd 0102 	strd	r0, r1, [sp, #8]
  40366c:	4630      	mov	r0, r6
  40366e:	f002 fc7b 	bl	405f68 <__aeabi_i2d>
  403672:	a369      	add	r3, pc, #420	; (adr r3, 403818 <_dtoa_r+0x2a0>)
  403674:	e9d3 2300 	ldrd	r2, r3, [r3]
  403678:	f002 fcdc 	bl	406034 <__aeabi_dmul>
  40367c:	4602      	mov	r2, r0
  40367e:	460b      	mov	r3, r1
  403680:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  403684:	f002 fb24 	bl	405cd0 <__adddf3>
  403688:	e9cd 0104 	strd	r0, r1, [sp, #16]
  40368c:	f002 ff82 	bl	406594 <__aeabi_d2iz>
  403690:	2200      	movs	r2, #0
  403692:	9002      	str	r0, [sp, #8]
  403694:	2300      	movs	r3, #0
  403696:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40369a:	f002 ff3d 	bl	406518 <__aeabi_dcmplt>
  40369e:	2800      	cmp	r0, #0
  4036a0:	f040 8173 	bne.w	40398a <_dtoa_r+0x412>
  4036a4:	9d02      	ldr	r5, [sp, #8]
  4036a6:	2d16      	cmp	r5, #22
  4036a8:	f200 815d 	bhi.w	403966 <_dtoa_r+0x3ee>
  4036ac:	4b61      	ldr	r3, [pc, #388]	; (403834 <_dtoa_r+0x2bc>)
  4036ae:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  4036b2:	e9d3 0100 	ldrd	r0, r1, [r3]
  4036b6:	4652      	mov	r2, sl
  4036b8:	465b      	mov	r3, fp
  4036ba:	f002 ff4b 	bl	406554 <__aeabi_dcmpgt>
  4036be:	2800      	cmp	r0, #0
  4036c0:	f000 81c5 	beq.w	403a4e <_dtoa_r+0x4d6>
  4036c4:	1e6b      	subs	r3, r5, #1
  4036c6:	9302      	str	r3, [sp, #8]
  4036c8:	2300      	movs	r3, #0
  4036ca:	930e      	str	r3, [sp, #56]	; 0x38
  4036cc:	1bbf      	subs	r7, r7, r6
  4036ce:	1e7b      	subs	r3, r7, #1
  4036d0:	9306      	str	r3, [sp, #24]
  4036d2:	f100 8154 	bmi.w	40397e <_dtoa_r+0x406>
  4036d6:	2300      	movs	r3, #0
  4036d8:	9308      	str	r3, [sp, #32]
  4036da:	9b02      	ldr	r3, [sp, #8]
  4036dc:	2b00      	cmp	r3, #0
  4036de:	f2c0 8145 	blt.w	40396c <_dtoa_r+0x3f4>
  4036e2:	9a06      	ldr	r2, [sp, #24]
  4036e4:	930d      	str	r3, [sp, #52]	; 0x34
  4036e6:	4611      	mov	r1, r2
  4036e8:	4419      	add	r1, r3
  4036ea:	2300      	movs	r3, #0
  4036ec:	9106      	str	r1, [sp, #24]
  4036ee:	930c      	str	r3, [sp, #48]	; 0x30
  4036f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4036f2:	2b09      	cmp	r3, #9
  4036f4:	d82a      	bhi.n	40374c <_dtoa_r+0x1d4>
  4036f6:	2b05      	cmp	r3, #5
  4036f8:	f340 865b 	ble.w	4043b2 <_dtoa_r+0xe3a>
  4036fc:	3b04      	subs	r3, #4
  4036fe:	9324      	str	r3, [sp, #144]	; 0x90
  403700:	2500      	movs	r5, #0
  403702:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403704:	3b02      	subs	r3, #2
  403706:	2b03      	cmp	r3, #3
  403708:	f200 8642 	bhi.w	404390 <_dtoa_r+0xe18>
  40370c:	e8df f013 	tbh	[pc, r3, lsl #1]
  403710:	02c903d4 	.word	0x02c903d4
  403714:	046103df 	.word	0x046103df
  403718:	9f18      	ldr	r7, [sp, #96]	; 0x60
  40371a:	9e19      	ldr	r6, [sp, #100]	; 0x64
  40371c:	443e      	add	r6, r7
  40371e:	f206 4332 	addw	r3, r6, #1074	; 0x432
  403722:	2b20      	cmp	r3, #32
  403724:	f340 818e 	ble.w	403a44 <_dtoa_r+0x4cc>
  403728:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  40372c:	f206 4012 	addw	r0, r6, #1042	; 0x412
  403730:	409d      	lsls	r5, r3
  403732:	fa2a f000 	lsr.w	r0, sl, r0
  403736:	4328      	orrs	r0, r5
  403738:	f002 fc06 	bl	405f48 <__aeabi_ui2d>
  40373c:	2301      	movs	r3, #1
  40373e:	3e01      	subs	r6, #1
  403740:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  403744:	9314      	str	r3, [sp, #80]	; 0x50
  403746:	e781      	b.n	40364c <_dtoa_r+0xd4>
  403748:	483b      	ldr	r0, [pc, #236]	; (403838 <_dtoa_r+0x2c0>)
  40374a:	e743      	b.n	4035d4 <_dtoa_r+0x5c>
  40374c:	2100      	movs	r1, #0
  40374e:	6461      	str	r1, [r4, #68]	; 0x44
  403750:	4620      	mov	r0, r4
  403752:	9125      	str	r1, [sp, #148]	; 0x94
  403754:	f001 fa42 	bl	404bdc <_Balloc>
  403758:	f04f 33ff 	mov.w	r3, #4294967295
  40375c:	930a      	str	r3, [sp, #40]	; 0x28
  40375e:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403760:	930f      	str	r3, [sp, #60]	; 0x3c
  403762:	2301      	movs	r3, #1
  403764:	9004      	str	r0, [sp, #16]
  403766:	6420      	str	r0, [r4, #64]	; 0x40
  403768:	9224      	str	r2, [sp, #144]	; 0x90
  40376a:	930b      	str	r3, [sp, #44]	; 0x2c
  40376c:	9b19      	ldr	r3, [sp, #100]	; 0x64
  40376e:	2b00      	cmp	r3, #0
  403770:	f2c0 80d9 	blt.w	403926 <_dtoa_r+0x3ae>
  403774:	9a02      	ldr	r2, [sp, #8]
  403776:	2a0e      	cmp	r2, #14
  403778:	f300 80d5 	bgt.w	403926 <_dtoa_r+0x3ae>
  40377c:	4b2d      	ldr	r3, [pc, #180]	; (403834 <_dtoa_r+0x2bc>)
  40377e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403782:	e9d3 2300 	ldrd	r2, r3, [r3]
  403786:	e9cd 2308 	strd	r2, r3, [sp, #32]
  40378a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40378c:	2b00      	cmp	r3, #0
  40378e:	f2c0 83ba 	blt.w	403f06 <_dtoa_r+0x98e>
  403792:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  403796:	4650      	mov	r0, sl
  403798:	462a      	mov	r2, r5
  40379a:	4633      	mov	r3, r6
  40379c:	4659      	mov	r1, fp
  40379e:	f002 fd73 	bl	406288 <__aeabi_ddiv>
  4037a2:	f002 fef7 	bl	406594 <__aeabi_d2iz>
  4037a6:	4680      	mov	r8, r0
  4037a8:	f002 fbde 	bl	405f68 <__aeabi_i2d>
  4037ac:	462a      	mov	r2, r5
  4037ae:	4633      	mov	r3, r6
  4037b0:	f002 fc40 	bl	406034 <__aeabi_dmul>
  4037b4:	460b      	mov	r3, r1
  4037b6:	4602      	mov	r2, r0
  4037b8:	4659      	mov	r1, fp
  4037ba:	4650      	mov	r0, sl
  4037bc:	f002 fa86 	bl	405ccc <__aeabi_dsub>
  4037c0:	9d04      	ldr	r5, [sp, #16]
  4037c2:	f108 0330 	add.w	r3, r8, #48	; 0x30
  4037c6:	702b      	strb	r3, [r5, #0]
  4037c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4037ca:	2b01      	cmp	r3, #1
  4037cc:	4606      	mov	r6, r0
  4037ce:	460f      	mov	r7, r1
  4037d0:	f105 0501 	add.w	r5, r5, #1
  4037d4:	d068      	beq.n	4038a8 <_dtoa_r+0x330>
  4037d6:	2200      	movs	r2, #0
  4037d8:	4b18      	ldr	r3, [pc, #96]	; (40383c <_dtoa_r+0x2c4>)
  4037da:	f002 fc2b 	bl	406034 <__aeabi_dmul>
  4037de:	2200      	movs	r2, #0
  4037e0:	2300      	movs	r3, #0
  4037e2:	4606      	mov	r6, r0
  4037e4:	460f      	mov	r7, r1
  4037e6:	f002 fe8d 	bl	406504 <__aeabi_dcmpeq>
  4037ea:	2800      	cmp	r0, #0
  4037ec:	f040 8088 	bne.w	403900 <_dtoa_r+0x388>
  4037f0:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  4037f4:	f04f 0a00 	mov.w	sl, #0
  4037f8:	f8df b040 	ldr.w	fp, [pc, #64]	; 40383c <_dtoa_r+0x2c4>
  4037fc:	940c      	str	r4, [sp, #48]	; 0x30
  4037fe:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  403802:	e028      	b.n	403856 <_dtoa_r+0x2de>
  403804:	f3af 8000 	nop.w
  403808:	636f4361 	.word	0x636f4361
  40380c:	3fd287a7 	.word	0x3fd287a7
  403810:	8b60c8b3 	.word	0x8b60c8b3
  403814:	3fc68a28 	.word	0x3fc68a28
  403818:	509f79fb 	.word	0x509f79fb
  40381c:	3fd34413 	.word	0x3fd34413
  403820:	7ff00000 	.word	0x7ff00000
  403824:	0040763d 	.word	0x0040763d
  403828:	00407660 	.word	0x00407660
  40382c:	0040766c 	.word	0x0040766c
  403830:	3ff80000 	.word	0x3ff80000
  403834:	00407698 	.word	0x00407698
  403838:	0040763c 	.word	0x0040763c
  40383c:	40240000 	.word	0x40240000
  403840:	f002 fbf8 	bl	406034 <__aeabi_dmul>
  403844:	2200      	movs	r2, #0
  403846:	2300      	movs	r3, #0
  403848:	4606      	mov	r6, r0
  40384a:	460f      	mov	r7, r1
  40384c:	f002 fe5a 	bl	406504 <__aeabi_dcmpeq>
  403850:	2800      	cmp	r0, #0
  403852:	f040 83c1 	bne.w	403fd8 <_dtoa_r+0xa60>
  403856:	4642      	mov	r2, r8
  403858:	464b      	mov	r3, r9
  40385a:	4630      	mov	r0, r6
  40385c:	4639      	mov	r1, r7
  40385e:	f002 fd13 	bl	406288 <__aeabi_ddiv>
  403862:	f002 fe97 	bl	406594 <__aeabi_d2iz>
  403866:	4604      	mov	r4, r0
  403868:	f002 fb7e 	bl	405f68 <__aeabi_i2d>
  40386c:	4642      	mov	r2, r8
  40386e:	464b      	mov	r3, r9
  403870:	f002 fbe0 	bl	406034 <__aeabi_dmul>
  403874:	4602      	mov	r2, r0
  403876:	460b      	mov	r3, r1
  403878:	4630      	mov	r0, r6
  40387a:	4639      	mov	r1, r7
  40387c:	f002 fa26 	bl	405ccc <__aeabi_dsub>
  403880:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  403884:	9e04      	ldr	r6, [sp, #16]
  403886:	f805 eb01 	strb.w	lr, [r5], #1
  40388a:	eba5 0e06 	sub.w	lr, r5, r6
  40388e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403890:	45b6      	cmp	lr, r6
  403892:	e9cd 0106 	strd	r0, r1, [sp, #24]
  403896:	4652      	mov	r2, sl
  403898:	465b      	mov	r3, fp
  40389a:	d1d1      	bne.n	403840 <_dtoa_r+0x2c8>
  40389c:	46a0      	mov	r8, r4
  40389e:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  4038a2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4038a4:	4606      	mov	r6, r0
  4038a6:	460f      	mov	r7, r1
  4038a8:	4632      	mov	r2, r6
  4038aa:	463b      	mov	r3, r7
  4038ac:	4630      	mov	r0, r6
  4038ae:	4639      	mov	r1, r7
  4038b0:	f002 fa0e 	bl	405cd0 <__adddf3>
  4038b4:	4606      	mov	r6, r0
  4038b6:	460f      	mov	r7, r1
  4038b8:	4602      	mov	r2, r0
  4038ba:	460b      	mov	r3, r1
  4038bc:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4038c0:	f002 fe2a 	bl	406518 <__aeabi_dcmplt>
  4038c4:	b948      	cbnz	r0, 4038da <_dtoa_r+0x362>
  4038c6:	4632      	mov	r2, r6
  4038c8:	463b      	mov	r3, r7
  4038ca:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4038ce:	f002 fe19 	bl	406504 <__aeabi_dcmpeq>
  4038d2:	b1a8      	cbz	r0, 403900 <_dtoa_r+0x388>
  4038d4:	f018 0f01 	tst.w	r8, #1
  4038d8:	d012      	beq.n	403900 <_dtoa_r+0x388>
  4038da:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4038de:	9a04      	ldr	r2, [sp, #16]
  4038e0:	1e6b      	subs	r3, r5, #1
  4038e2:	e004      	b.n	4038ee <_dtoa_r+0x376>
  4038e4:	429a      	cmp	r2, r3
  4038e6:	f000 8401 	beq.w	4040ec <_dtoa_r+0xb74>
  4038ea:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  4038ee:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  4038f2:	f103 0501 	add.w	r5, r3, #1
  4038f6:	d0f5      	beq.n	4038e4 <_dtoa_r+0x36c>
  4038f8:	f108 0801 	add.w	r8, r8, #1
  4038fc:	f883 8000 	strb.w	r8, [r3]
  403900:	4649      	mov	r1, r9
  403902:	4620      	mov	r0, r4
  403904:	f001 f990 	bl	404c28 <_Bfree>
  403908:	2200      	movs	r2, #0
  40390a:	9b02      	ldr	r3, [sp, #8]
  40390c:	702a      	strb	r2, [r5, #0]
  40390e:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403910:	3301      	adds	r3, #1
  403912:	6013      	str	r3, [r2, #0]
  403914:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403916:	2b00      	cmp	r3, #0
  403918:	f000 839e 	beq.w	404058 <_dtoa_r+0xae0>
  40391c:	9804      	ldr	r0, [sp, #16]
  40391e:	601d      	str	r5, [r3, #0]
  403920:	b01b      	add	sp, #108	; 0x6c
  403922:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403926:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403928:	2a00      	cmp	r2, #0
  40392a:	d03e      	beq.n	4039aa <_dtoa_r+0x432>
  40392c:	9a24      	ldr	r2, [sp, #144]	; 0x90
  40392e:	2a01      	cmp	r2, #1
  403930:	f340 8311 	ble.w	403f56 <_dtoa_r+0x9de>
  403934:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403936:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403938:	1e5f      	subs	r7, r3, #1
  40393a:	42ba      	cmp	r2, r7
  40393c:	f2c0 838f 	blt.w	40405e <_dtoa_r+0xae6>
  403940:	1bd7      	subs	r7, r2, r7
  403942:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403944:	2b00      	cmp	r3, #0
  403946:	f2c0 848b 	blt.w	404260 <_dtoa_r+0xce8>
  40394a:	9d08      	ldr	r5, [sp, #32]
  40394c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40394e:	9a08      	ldr	r2, [sp, #32]
  403950:	441a      	add	r2, r3
  403952:	9208      	str	r2, [sp, #32]
  403954:	9a06      	ldr	r2, [sp, #24]
  403956:	2101      	movs	r1, #1
  403958:	441a      	add	r2, r3
  40395a:	4620      	mov	r0, r4
  40395c:	9206      	str	r2, [sp, #24]
  40395e:	f001 f9fd 	bl	404d5c <__i2b>
  403962:	4606      	mov	r6, r0
  403964:	e024      	b.n	4039b0 <_dtoa_r+0x438>
  403966:	2301      	movs	r3, #1
  403968:	930e      	str	r3, [sp, #56]	; 0x38
  40396a:	e6af      	b.n	4036cc <_dtoa_r+0x154>
  40396c:	9a08      	ldr	r2, [sp, #32]
  40396e:	9b02      	ldr	r3, [sp, #8]
  403970:	1ad2      	subs	r2, r2, r3
  403972:	425b      	negs	r3, r3
  403974:	930c      	str	r3, [sp, #48]	; 0x30
  403976:	2300      	movs	r3, #0
  403978:	9208      	str	r2, [sp, #32]
  40397a:	930d      	str	r3, [sp, #52]	; 0x34
  40397c:	e6b8      	b.n	4036f0 <_dtoa_r+0x178>
  40397e:	f1c7 0301 	rsb	r3, r7, #1
  403982:	9308      	str	r3, [sp, #32]
  403984:	2300      	movs	r3, #0
  403986:	9306      	str	r3, [sp, #24]
  403988:	e6a7      	b.n	4036da <_dtoa_r+0x162>
  40398a:	9d02      	ldr	r5, [sp, #8]
  40398c:	4628      	mov	r0, r5
  40398e:	f002 faeb 	bl	405f68 <__aeabi_i2d>
  403992:	4602      	mov	r2, r0
  403994:	460b      	mov	r3, r1
  403996:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40399a:	f002 fdb3 	bl	406504 <__aeabi_dcmpeq>
  40399e:	2800      	cmp	r0, #0
  4039a0:	f47f ae80 	bne.w	4036a4 <_dtoa_r+0x12c>
  4039a4:	1e6b      	subs	r3, r5, #1
  4039a6:	9302      	str	r3, [sp, #8]
  4039a8:	e67c      	b.n	4036a4 <_dtoa_r+0x12c>
  4039aa:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4039ac:	9d08      	ldr	r5, [sp, #32]
  4039ae:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  4039b0:	2d00      	cmp	r5, #0
  4039b2:	dd0c      	ble.n	4039ce <_dtoa_r+0x456>
  4039b4:	9906      	ldr	r1, [sp, #24]
  4039b6:	2900      	cmp	r1, #0
  4039b8:	460b      	mov	r3, r1
  4039ba:	dd08      	ble.n	4039ce <_dtoa_r+0x456>
  4039bc:	42a9      	cmp	r1, r5
  4039be:	9a08      	ldr	r2, [sp, #32]
  4039c0:	bfa8      	it	ge
  4039c2:	462b      	movge	r3, r5
  4039c4:	1ad2      	subs	r2, r2, r3
  4039c6:	1aed      	subs	r5, r5, r3
  4039c8:	1acb      	subs	r3, r1, r3
  4039ca:	9208      	str	r2, [sp, #32]
  4039cc:	9306      	str	r3, [sp, #24]
  4039ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4039d0:	b1d3      	cbz	r3, 403a08 <_dtoa_r+0x490>
  4039d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4039d4:	2b00      	cmp	r3, #0
  4039d6:	f000 82b7 	beq.w	403f48 <_dtoa_r+0x9d0>
  4039da:	2f00      	cmp	r7, #0
  4039dc:	dd10      	ble.n	403a00 <_dtoa_r+0x488>
  4039de:	4631      	mov	r1, r6
  4039e0:	463a      	mov	r2, r7
  4039e2:	4620      	mov	r0, r4
  4039e4:	f001 fa56 	bl	404e94 <__pow5mult>
  4039e8:	464a      	mov	r2, r9
  4039ea:	4601      	mov	r1, r0
  4039ec:	4606      	mov	r6, r0
  4039ee:	4620      	mov	r0, r4
  4039f0:	f001 f9be 	bl	404d70 <__multiply>
  4039f4:	4649      	mov	r1, r9
  4039f6:	4680      	mov	r8, r0
  4039f8:	4620      	mov	r0, r4
  4039fa:	f001 f915 	bl	404c28 <_Bfree>
  4039fe:	46c1      	mov	r9, r8
  403a00:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403a02:	1bda      	subs	r2, r3, r7
  403a04:	f040 82a1 	bne.w	403f4a <_dtoa_r+0x9d2>
  403a08:	2101      	movs	r1, #1
  403a0a:	4620      	mov	r0, r4
  403a0c:	f001 f9a6 	bl	404d5c <__i2b>
  403a10:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403a12:	2b00      	cmp	r3, #0
  403a14:	4680      	mov	r8, r0
  403a16:	dd1c      	ble.n	403a52 <_dtoa_r+0x4da>
  403a18:	4601      	mov	r1, r0
  403a1a:	461a      	mov	r2, r3
  403a1c:	4620      	mov	r0, r4
  403a1e:	f001 fa39 	bl	404e94 <__pow5mult>
  403a22:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403a24:	2b01      	cmp	r3, #1
  403a26:	4680      	mov	r8, r0
  403a28:	f340 8254 	ble.w	403ed4 <_dtoa_r+0x95c>
  403a2c:	2300      	movs	r3, #0
  403a2e:	930c      	str	r3, [sp, #48]	; 0x30
  403a30:	f8d8 3010 	ldr.w	r3, [r8, #16]
  403a34:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403a38:	6918      	ldr	r0, [r3, #16]
  403a3a:	f001 f93f 	bl	404cbc <__hi0bits>
  403a3e:	f1c0 0020 	rsb	r0, r0, #32
  403a42:	e010      	b.n	403a66 <_dtoa_r+0x4ee>
  403a44:	f1c3 0520 	rsb	r5, r3, #32
  403a48:	fa0a f005 	lsl.w	r0, sl, r5
  403a4c:	e674      	b.n	403738 <_dtoa_r+0x1c0>
  403a4e:	900e      	str	r0, [sp, #56]	; 0x38
  403a50:	e63c      	b.n	4036cc <_dtoa_r+0x154>
  403a52:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403a54:	2b01      	cmp	r3, #1
  403a56:	f340 8287 	ble.w	403f68 <_dtoa_r+0x9f0>
  403a5a:	2300      	movs	r3, #0
  403a5c:	930c      	str	r3, [sp, #48]	; 0x30
  403a5e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403a60:	2001      	movs	r0, #1
  403a62:	2b00      	cmp	r3, #0
  403a64:	d1e4      	bne.n	403a30 <_dtoa_r+0x4b8>
  403a66:	9a06      	ldr	r2, [sp, #24]
  403a68:	4410      	add	r0, r2
  403a6a:	f010 001f 	ands.w	r0, r0, #31
  403a6e:	f000 80a1 	beq.w	403bb4 <_dtoa_r+0x63c>
  403a72:	f1c0 0320 	rsb	r3, r0, #32
  403a76:	2b04      	cmp	r3, #4
  403a78:	f340 849e 	ble.w	4043b8 <_dtoa_r+0xe40>
  403a7c:	9b08      	ldr	r3, [sp, #32]
  403a7e:	f1c0 001c 	rsb	r0, r0, #28
  403a82:	4403      	add	r3, r0
  403a84:	9308      	str	r3, [sp, #32]
  403a86:	4613      	mov	r3, r2
  403a88:	4403      	add	r3, r0
  403a8a:	4405      	add	r5, r0
  403a8c:	9306      	str	r3, [sp, #24]
  403a8e:	9b08      	ldr	r3, [sp, #32]
  403a90:	2b00      	cmp	r3, #0
  403a92:	dd05      	ble.n	403aa0 <_dtoa_r+0x528>
  403a94:	4649      	mov	r1, r9
  403a96:	461a      	mov	r2, r3
  403a98:	4620      	mov	r0, r4
  403a9a:	f001 fa4b 	bl	404f34 <__lshift>
  403a9e:	4681      	mov	r9, r0
  403aa0:	9b06      	ldr	r3, [sp, #24]
  403aa2:	2b00      	cmp	r3, #0
  403aa4:	dd05      	ble.n	403ab2 <_dtoa_r+0x53a>
  403aa6:	4641      	mov	r1, r8
  403aa8:	461a      	mov	r2, r3
  403aaa:	4620      	mov	r0, r4
  403aac:	f001 fa42 	bl	404f34 <__lshift>
  403ab0:	4680      	mov	r8, r0
  403ab2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403ab4:	2b00      	cmp	r3, #0
  403ab6:	f040 8086 	bne.w	403bc6 <_dtoa_r+0x64e>
  403aba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403abc:	2b00      	cmp	r3, #0
  403abe:	f340 8266 	ble.w	403f8e <_dtoa_r+0xa16>
  403ac2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403ac4:	2b00      	cmp	r3, #0
  403ac6:	f000 8098 	beq.w	403bfa <_dtoa_r+0x682>
  403aca:	2d00      	cmp	r5, #0
  403acc:	dd05      	ble.n	403ada <_dtoa_r+0x562>
  403ace:	4631      	mov	r1, r6
  403ad0:	462a      	mov	r2, r5
  403ad2:	4620      	mov	r0, r4
  403ad4:	f001 fa2e 	bl	404f34 <__lshift>
  403ad8:	4606      	mov	r6, r0
  403ada:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403adc:	2b00      	cmp	r3, #0
  403ade:	f040 8337 	bne.w	404150 <_dtoa_r+0xbd8>
  403ae2:	9606      	str	r6, [sp, #24]
  403ae4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ae6:	9a04      	ldr	r2, [sp, #16]
  403ae8:	f8dd b018 	ldr.w	fp, [sp, #24]
  403aec:	3b01      	subs	r3, #1
  403aee:	18d3      	adds	r3, r2, r3
  403af0:	930b      	str	r3, [sp, #44]	; 0x2c
  403af2:	f00a 0301 	and.w	r3, sl, #1
  403af6:	930c      	str	r3, [sp, #48]	; 0x30
  403af8:	4617      	mov	r7, r2
  403afa:	46c2      	mov	sl, r8
  403afc:	4651      	mov	r1, sl
  403afe:	4648      	mov	r0, r9
  403b00:	f7ff fca6 	bl	403450 <quorem>
  403b04:	4631      	mov	r1, r6
  403b06:	4605      	mov	r5, r0
  403b08:	4648      	mov	r0, r9
  403b0a:	f001 fa65 	bl	404fd8 <__mcmp>
  403b0e:	465a      	mov	r2, fp
  403b10:	900a      	str	r0, [sp, #40]	; 0x28
  403b12:	4651      	mov	r1, sl
  403b14:	4620      	mov	r0, r4
  403b16:	f001 fa7b 	bl	405010 <__mdiff>
  403b1a:	68c2      	ldr	r2, [r0, #12]
  403b1c:	4680      	mov	r8, r0
  403b1e:	f105 0330 	add.w	r3, r5, #48	; 0x30
  403b22:	2a00      	cmp	r2, #0
  403b24:	f040 822b 	bne.w	403f7e <_dtoa_r+0xa06>
  403b28:	4601      	mov	r1, r0
  403b2a:	4648      	mov	r0, r9
  403b2c:	9308      	str	r3, [sp, #32]
  403b2e:	f001 fa53 	bl	404fd8 <__mcmp>
  403b32:	4641      	mov	r1, r8
  403b34:	9006      	str	r0, [sp, #24]
  403b36:	4620      	mov	r0, r4
  403b38:	f001 f876 	bl	404c28 <_Bfree>
  403b3c:	9a06      	ldr	r2, [sp, #24]
  403b3e:	9b08      	ldr	r3, [sp, #32]
  403b40:	b932      	cbnz	r2, 403b50 <_dtoa_r+0x5d8>
  403b42:	9924      	ldr	r1, [sp, #144]	; 0x90
  403b44:	b921      	cbnz	r1, 403b50 <_dtoa_r+0x5d8>
  403b46:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403b48:	2a00      	cmp	r2, #0
  403b4a:	f000 83ef 	beq.w	40432c <_dtoa_r+0xdb4>
  403b4e:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403b50:	990a      	ldr	r1, [sp, #40]	; 0x28
  403b52:	2900      	cmp	r1, #0
  403b54:	f2c0 829f 	blt.w	404096 <_dtoa_r+0xb1e>
  403b58:	d105      	bne.n	403b66 <_dtoa_r+0x5ee>
  403b5a:	9924      	ldr	r1, [sp, #144]	; 0x90
  403b5c:	b919      	cbnz	r1, 403b66 <_dtoa_r+0x5ee>
  403b5e:	990c      	ldr	r1, [sp, #48]	; 0x30
  403b60:	2900      	cmp	r1, #0
  403b62:	f000 8298 	beq.w	404096 <_dtoa_r+0xb1e>
  403b66:	2a00      	cmp	r2, #0
  403b68:	f300 8306 	bgt.w	404178 <_dtoa_r+0xc00>
  403b6c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403b6e:	703b      	strb	r3, [r7, #0]
  403b70:	f107 0801 	add.w	r8, r7, #1
  403b74:	4297      	cmp	r7, r2
  403b76:	4645      	mov	r5, r8
  403b78:	f000 830c 	beq.w	404194 <_dtoa_r+0xc1c>
  403b7c:	4649      	mov	r1, r9
  403b7e:	2300      	movs	r3, #0
  403b80:	220a      	movs	r2, #10
  403b82:	4620      	mov	r0, r4
  403b84:	f001 f85a 	bl	404c3c <__multadd>
  403b88:	455e      	cmp	r6, fp
  403b8a:	4681      	mov	r9, r0
  403b8c:	4631      	mov	r1, r6
  403b8e:	f04f 0300 	mov.w	r3, #0
  403b92:	f04f 020a 	mov.w	r2, #10
  403b96:	4620      	mov	r0, r4
  403b98:	f000 81eb 	beq.w	403f72 <_dtoa_r+0x9fa>
  403b9c:	f001 f84e 	bl	404c3c <__multadd>
  403ba0:	4659      	mov	r1, fp
  403ba2:	4606      	mov	r6, r0
  403ba4:	2300      	movs	r3, #0
  403ba6:	220a      	movs	r2, #10
  403ba8:	4620      	mov	r0, r4
  403baa:	f001 f847 	bl	404c3c <__multadd>
  403bae:	4647      	mov	r7, r8
  403bb0:	4683      	mov	fp, r0
  403bb2:	e7a3      	b.n	403afc <_dtoa_r+0x584>
  403bb4:	201c      	movs	r0, #28
  403bb6:	9b08      	ldr	r3, [sp, #32]
  403bb8:	4403      	add	r3, r0
  403bba:	9308      	str	r3, [sp, #32]
  403bbc:	9b06      	ldr	r3, [sp, #24]
  403bbe:	4403      	add	r3, r0
  403bc0:	4405      	add	r5, r0
  403bc2:	9306      	str	r3, [sp, #24]
  403bc4:	e763      	b.n	403a8e <_dtoa_r+0x516>
  403bc6:	4641      	mov	r1, r8
  403bc8:	4648      	mov	r0, r9
  403bca:	f001 fa05 	bl	404fd8 <__mcmp>
  403bce:	2800      	cmp	r0, #0
  403bd0:	f6bf af73 	bge.w	403aba <_dtoa_r+0x542>
  403bd4:	9f02      	ldr	r7, [sp, #8]
  403bd6:	4649      	mov	r1, r9
  403bd8:	2300      	movs	r3, #0
  403bda:	220a      	movs	r2, #10
  403bdc:	4620      	mov	r0, r4
  403bde:	3f01      	subs	r7, #1
  403be0:	9702      	str	r7, [sp, #8]
  403be2:	f001 f82b 	bl	404c3c <__multadd>
  403be6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403be8:	4681      	mov	r9, r0
  403bea:	2b00      	cmp	r3, #0
  403bec:	f040 83b6 	bne.w	40435c <_dtoa_r+0xde4>
  403bf0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403bf2:	2b00      	cmp	r3, #0
  403bf4:	f340 83bf 	ble.w	404376 <_dtoa_r+0xdfe>
  403bf8:	930a      	str	r3, [sp, #40]	; 0x28
  403bfa:	f8dd b010 	ldr.w	fp, [sp, #16]
  403bfe:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  403c00:	465d      	mov	r5, fp
  403c02:	e002      	b.n	403c0a <_dtoa_r+0x692>
  403c04:	f001 f81a 	bl	404c3c <__multadd>
  403c08:	4681      	mov	r9, r0
  403c0a:	4641      	mov	r1, r8
  403c0c:	4648      	mov	r0, r9
  403c0e:	f7ff fc1f 	bl	403450 <quorem>
  403c12:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  403c16:	f805 ab01 	strb.w	sl, [r5], #1
  403c1a:	eba5 030b 	sub.w	r3, r5, fp
  403c1e:	42bb      	cmp	r3, r7
  403c20:	f04f 020a 	mov.w	r2, #10
  403c24:	f04f 0300 	mov.w	r3, #0
  403c28:	4649      	mov	r1, r9
  403c2a:	4620      	mov	r0, r4
  403c2c:	dbea      	blt.n	403c04 <_dtoa_r+0x68c>
  403c2e:	9b04      	ldr	r3, [sp, #16]
  403c30:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403c32:	2a01      	cmp	r2, #1
  403c34:	bfac      	ite	ge
  403c36:	189b      	addge	r3, r3, r2
  403c38:	3301      	addlt	r3, #1
  403c3a:	461d      	mov	r5, r3
  403c3c:	f04f 0b00 	mov.w	fp, #0
  403c40:	4649      	mov	r1, r9
  403c42:	2201      	movs	r2, #1
  403c44:	4620      	mov	r0, r4
  403c46:	f001 f975 	bl	404f34 <__lshift>
  403c4a:	4641      	mov	r1, r8
  403c4c:	4681      	mov	r9, r0
  403c4e:	f001 f9c3 	bl	404fd8 <__mcmp>
  403c52:	2800      	cmp	r0, #0
  403c54:	f340 823d 	ble.w	4040d2 <_dtoa_r+0xb5a>
  403c58:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  403c5c:	9904      	ldr	r1, [sp, #16]
  403c5e:	1e6b      	subs	r3, r5, #1
  403c60:	e004      	b.n	403c6c <_dtoa_r+0x6f4>
  403c62:	428b      	cmp	r3, r1
  403c64:	f000 81ae 	beq.w	403fc4 <_dtoa_r+0xa4c>
  403c68:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  403c6c:	2a39      	cmp	r2, #57	; 0x39
  403c6e:	f103 0501 	add.w	r5, r3, #1
  403c72:	d0f6      	beq.n	403c62 <_dtoa_r+0x6ea>
  403c74:	3201      	adds	r2, #1
  403c76:	701a      	strb	r2, [r3, #0]
  403c78:	4641      	mov	r1, r8
  403c7a:	4620      	mov	r0, r4
  403c7c:	f000 ffd4 	bl	404c28 <_Bfree>
  403c80:	2e00      	cmp	r6, #0
  403c82:	f43f ae3d 	beq.w	403900 <_dtoa_r+0x388>
  403c86:	f1bb 0f00 	cmp.w	fp, #0
  403c8a:	d005      	beq.n	403c98 <_dtoa_r+0x720>
  403c8c:	45b3      	cmp	fp, r6
  403c8e:	d003      	beq.n	403c98 <_dtoa_r+0x720>
  403c90:	4659      	mov	r1, fp
  403c92:	4620      	mov	r0, r4
  403c94:	f000 ffc8 	bl	404c28 <_Bfree>
  403c98:	4631      	mov	r1, r6
  403c9a:	4620      	mov	r0, r4
  403c9c:	f000 ffc4 	bl	404c28 <_Bfree>
  403ca0:	e62e      	b.n	403900 <_dtoa_r+0x388>
  403ca2:	2300      	movs	r3, #0
  403ca4:	930b      	str	r3, [sp, #44]	; 0x2c
  403ca6:	9b02      	ldr	r3, [sp, #8]
  403ca8:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403caa:	4413      	add	r3, r2
  403cac:	930f      	str	r3, [sp, #60]	; 0x3c
  403cae:	3301      	adds	r3, #1
  403cb0:	2b01      	cmp	r3, #1
  403cb2:	461f      	mov	r7, r3
  403cb4:	461e      	mov	r6, r3
  403cb6:	930a      	str	r3, [sp, #40]	; 0x28
  403cb8:	bfb8      	it	lt
  403cba:	2701      	movlt	r7, #1
  403cbc:	2100      	movs	r1, #0
  403cbe:	2f17      	cmp	r7, #23
  403cc0:	6461      	str	r1, [r4, #68]	; 0x44
  403cc2:	d90a      	bls.n	403cda <_dtoa_r+0x762>
  403cc4:	2201      	movs	r2, #1
  403cc6:	2304      	movs	r3, #4
  403cc8:	005b      	lsls	r3, r3, #1
  403cca:	f103 0014 	add.w	r0, r3, #20
  403cce:	4287      	cmp	r7, r0
  403cd0:	4611      	mov	r1, r2
  403cd2:	f102 0201 	add.w	r2, r2, #1
  403cd6:	d2f7      	bcs.n	403cc8 <_dtoa_r+0x750>
  403cd8:	6461      	str	r1, [r4, #68]	; 0x44
  403cda:	4620      	mov	r0, r4
  403cdc:	f000 ff7e 	bl	404bdc <_Balloc>
  403ce0:	2e0e      	cmp	r6, #14
  403ce2:	9004      	str	r0, [sp, #16]
  403ce4:	6420      	str	r0, [r4, #64]	; 0x40
  403ce6:	f63f ad41 	bhi.w	40376c <_dtoa_r+0x1f4>
  403cea:	2d00      	cmp	r5, #0
  403cec:	f43f ad3e 	beq.w	40376c <_dtoa_r+0x1f4>
  403cf0:	9902      	ldr	r1, [sp, #8]
  403cf2:	2900      	cmp	r1, #0
  403cf4:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  403cf8:	f340 8202 	ble.w	404100 <_dtoa_r+0xb88>
  403cfc:	4bb8      	ldr	r3, [pc, #736]	; (403fe0 <_dtoa_r+0xa68>)
  403cfe:	f001 020f 	and.w	r2, r1, #15
  403d02:	110d      	asrs	r5, r1, #4
  403d04:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403d08:	06e9      	lsls	r1, r5, #27
  403d0a:	e9d3 6700 	ldrd	r6, r7, [r3]
  403d0e:	f140 81ae 	bpl.w	40406e <_dtoa_r+0xaf6>
  403d12:	4bb4      	ldr	r3, [pc, #720]	; (403fe4 <_dtoa_r+0xa6c>)
  403d14:	4650      	mov	r0, sl
  403d16:	4659      	mov	r1, fp
  403d18:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  403d1c:	f002 fab4 	bl	406288 <__aeabi_ddiv>
  403d20:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  403d24:	f005 050f 	and.w	r5, r5, #15
  403d28:	f04f 0a03 	mov.w	sl, #3
  403d2c:	b18d      	cbz	r5, 403d52 <_dtoa_r+0x7da>
  403d2e:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 403fe4 <_dtoa_r+0xa6c>
  403d32:	07ea      	lsls	r2, r5, #31
  403d34:	d509      	bpl.n	403d4a <_dtoa_r+0x7d2>
  403d36:	4630      	mov	r0, r6
  403d38:	4639      	mov	r1, r7
  403d3a:	e9d8 2300 	ldrd	r2, r3, [r8]
  403d3e:	f002 f979 	bl	406034 <__aeabi_dmul>
  403d42:	f10a 0a01 	add.w	sl, sl, #1
  403d46:	4606      	mov	r6, r0
  403d48:	460f      	mov	r7, r1
  403d4a:	106d      	asrs	r5, r5, #1
  403d4c:	f108 0808 	add.w	r8, r8, #8
  403d50:	d1ef      	bne.n	403d32 <_dtoa_r+0x7ba>
  403d52:	463b      	mov	r3, r7
  403d54:	4632      	mov	r2, r6
  403d56:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  403d5a:	f002 fa95 	bl	406288 <__aeabi_ddiv>
  403d5e:	4607      	mov	r7, r0
  403d60:	4688      	mov	r8, r1
  403d62:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403d64:	b143      	cbz	r3, 403d78 <_dtoa_r+0x800>
  403d66:	2200      	movs	r2, #0
  403d68:	4b9f      	ldr	r3, [pc, #636]	; (403fe8 <_dtoa_r+0xa70>)
  403d6a:	4638      	mov	r0, r7
  403d6c:	4641      	mov	r1, r8
  403d6e:	f002 fbd3 	bl	406518 <__aeabi_dcmplt>
  403d72:	2800      	cmp	r0, #0
  403d74:	f040 8286 	bne.w	404284 <_dtoa_r+0xd0c>
  403d78:	4650      	mov	r0, sl
  403d7a:	f002 f8f5 	bl	405f68 <__aeabi_i2d>
  403d7e:	463a      	mov	r2, r7
  403d80:	4643      	mov	r3, r8
  403d82:	f002 f957 	bl	406034 <__aeabi_dmul>
  403d86:	4b99      	ldr	r3, [pc, #612]	; (403fec <_dtoa_r+0xa74>)
  403d88:	2200      	movs	r2, #0
  403d8a:	f001 ffa1 	bl	405cd0 <__adddf3>
  403d8e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d90:	4605      	mov	r5, r0
  403d92:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403d96:	2b00      	cmp	r3, #0
  403d98:	f000 813e 	beq.w	404018 <_dtoa_r+0xaa0>
  403d9c:	9b02      	ldr	r3, [sp, #8]
  403d9e:	9315      	str	r3, [sp, #84]	; 0x54
  403da0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403da2:	9312      	str	r3, [sp, #72]	; 0x48
  403da4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403da6:	2b00      	cmp	r3, #0
  403da8:	f000 81fa 	beq.w	4041a0 <_dtoa_r+0xc28>
  403dac:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403dae:	4b8c      	ldr	r3, [pc, #560]	; (403fe0 <_dtoa_r+0xa68>)
  403db0:	498f      	ldr	r1, [pc, #572]	; (403ff0 <_dtoa_r+0xa78>)
  403db2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403db6:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  403dba:	2000      	movs	r0, #0
  403dbc:	f002 fa64 	bl	406288 <__aeabi_ddiv>
  403dc0:	462a      	mov	r2, r5
  403dc2:	4633      	mov	r3, r6
  403dc4:	f001 ff82 	bl	405ccc <__aeabi_dsub>
  403dc8:	4682      	mov	sl, r0
  403dca:	468b      	mov	fp, r1
  403dcc:	4638      	mov	r0, r7
  403dce:	4641      	mov	r1, r8
  403dd0:	f002 fbe0 	bl	406594 <__aeabi_d2iz>
  403dd4:	4605      	mov	r5, r0
  403dd6:	f002 f8c7 	bl	405f68 <__aeabi_i2d>
  403dda:	4602      	mov	r2, r0
  403ddc:	460b      	mov	r3, r1
  403dde:	4638      	mov	r0, r7
  403de0:	4641      	mov	r1, r8
  403de2:	f001 ff73 	bl	405ccc <__aeabi_dsub>
  403de6:	3530      	adds	r5, #48	; 0x30
  403de8:	fa5f f885 	uxtb.w	r8, r5
  403dec:	9d04      	ldr	r5, [sp, #16]
  403dee:	4606      	mov	r6, r0
  403df0:	460f      	mov	r7, r1
  403df2:	f885 8000 	strb.w	r8, [r5]
  403df6:	4602      	mov	r2, r0
  403df8:	460b      	mov	r3, r1
  403dfa:	4650      	mov	r0, sl
  403dfc:	4659      	mov	r1, fp
  403dfe:	3501      	adds	r5, #1
  403e00:	f002 fba8 	bl	406554 <__aeabi_dcmpgt>
  403e04:	2800      	cmp	r0, #0
  403e06:	d154      	bne.n	403eb2 <_dtoa_r+0x93a>
  403e08:	4632      	mov	r2, r6
  403e0a:	463b      	mov	r3, r7
  403e0c:	2000      	movs	r0, #0
  403e0e:	4976      	ldr	r1, [pc, #472]	; (403fe8 <_dtoa_r+0xa70>)
  403e10:	f001 ff5c 	bl	405ccc <__aeabi_dsub>
  403e14:	4602      	mov	r2, r0
  403e16:	460b      	mov	r3, r1
  403e18:	4650      	mov	r0, sl
  403e1a:	4659      	mov	r1, fp
  403e1c:	f002 fb9a 	bl	406554 <__aeabi_dcmpgt>
  403e20:	2800      	cmp	r0, #0
  403e22:	f040 8270 	bne.w	404306 <_dtoa_r+0xd8e>
  403e26:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403e28:	2a01      	cmp	r2, #1
  403e2a:	f000 8111 	beq.w	404050 <_dtoa_r+0xad8>
  403e2e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403e30:	9a04      	ldr	r2, [sp, #16]
  403e32:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403e36:	4413      	add	r3, r2
  403e38:	4699      	mov	r9, r3
  403e3a:	e00d      	b.n	403e58 <_dtoa_r+0x8e0>
  403e3c:	2000      	movs	r0, #0
  403e3e:	496a      	ldr	r1, [pc, #424]	; (403fe8 <_dtoa_r+0xa70>)
  403e40:	f001 ff44 	bl	405ccc <__aeabi_dsub>
  403e44:	4652      	mov	r2, sl
  403e46:	465b      	mov	r3, fp
  403e48:	f002 fb66 	bl	406518 <__aeabi_dcmplt>
  403e4c:	2800      	cmp	r0, #0
  403e4e:	f040 8258 	bne.w	404302 <_dtoa_r+0xd8a>
  403e52:	454d      	cmp	r5, r9
  403e54:	f000 80fa 	beq.w	40404c <_dtoa_r+0xad4>
  403e58:	4650      	mov	r0, sl
  403e5a:	4659      	mov	r1, fp
  403e5c:	2200      	movs	r2, #0
  403e5e:	4b65      	ldr	r3, [pc, #404]	; (403ff4 <_dtoa_r+0xa7c>)
  403e60:	f002 f8e8 	bl	406034 <__aeabi_dmul>
  403e64:	2200      	movs	r2, #0
  403e66:	4b63      	ldr	r3, [pc, #396]	; (403ff4 <_dtoa_r+0xa7c>)
  403e68:	4682      	mov	sl, r0
  403e6a:	468b      	mov	fp, r1
  403e6c:	4630      	mov	r0, r6
  403e6e:	4639      	mov	r1, r7
  403e70:	f002 f8e0 	bl	406034 <__aeabi_dmul>
  403e74:	460f      	mov	r7, r1
  403e76:	4606      	mov	r6, r0
  403e78:	f002 fb8c 	bl	406594 <__aeabi_d2iz>
  403e7c:	4680      	mov	r8, r0
  403e7e:	f002 f873 	bl	405f68 <__aeabi_i2d>
  403e82:	4602      	mov	r2, r0
  403e84:	460b      	mov	r3, r1
  403e86:	4630      	mov	r0, r6
  403e88:	4639      	mov	r1, r7
  403e8a:	f001 ff1f 	bl	405ccc <__aeabi_dsub>
  403e8e:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403e92:	fa5f f888 	uxtb.w	r8, r8
  403e96:	4652      	mov	r2, sl
  403e98:	465b      	mov	r3, fp
  403e9a:	f805 8b01 	strb.w	r8, [r5], #1
  403e9e:	4606      	mov	r6, r0
  403ea0:	460f      	mov	r7, r1
  403ea2:	f002 fb39 	bl	406518 <__aeabi_dcmplt>
  403ea6:	4632      	mov	r2, r6
  403ea8:	463b      	mov	r3, r7
  403eaa:	2800      	cmp	r0, #0
  403eac:	d0c6      	beq.n	403e3c <_dtoa_r+0x8c4>
  403eae:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403eb2:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403eb4:	9302      	str	r3, [sp, #8]
  403eb6:	e523      	b.n	403900 <_dtoa_r+0x388>
  403eb8:	2300      	movs	r3, #0
  403eba:	930b      	str	r3, [sp, #44]	; 0x2c
  403ebc:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403ebe:	2b00      	cmp	r3, #0
  403ec0:	f340 80dc 	ble.w	40407c <_dtoa_r+0xb04>
  403ec4:	461f      	mov	r7, r3
  403ec6:	461e      	mov	r6, r3
  403ec8:	930f      	str	r3, [sp, #60]	; 0x3c
  403eca:	930a      	str	r3, [sp, #40]	; 0x28
  403ecc:	e6f6      	b.n	403cbc <_dtoa_r+0x744>
  403ece:	2301      	movs	r3, #1
  403ed0:	930b      	str	r3, [sp, #44]	; 0x2c
  403ed2:	e7f3      	b.n	403ebc <_dtoa_r+0x944>
  403ed4:	f1ba 0f00 	cmp.w	sl, #0
  403ed8:	f47f ada8 	bne.w	403a2c <_dtoa_r+0x4b4>
  403edc:	f3cb 0313 	ubfx	r3, fp, #0, #20
  403ee0:	2b00      	cmp	r3, #0
  403ee2:	f47f adba 	bne.w	403a5a <_dtoa_r+0x4e2>
  403ee6:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  403eea:	0d3f      	lsrs	r7, r7, #20
  403eec:	053f      	lsls	r7, r7, #20
  403eee:	2f00      	cmp	r7, #0
  403ef0:	f000 820d 	beq.w	40430e <_dtoa_r+0xd96>
  403ef4:	9b08      	ldr	r3, [sp, #32]
  403ef6:	3301      	adds	r3, #1
  403ef8:	9308      	str	r3, [sp, #32]
  403efa:	9b06      	ldr	r3, [sp, #24]
  403efc:	3301      	adds	r3, #1
  403efe:	9306      	str	r3, [sp, #24]
  403f00:	2301      	movs	r3, #1
  403f02:	930c      	str	r3, [sp, #48]	; 0x30
  403f04:	e5ab      	b.n	403a5e <_dtoa_r+0x4e6>
  403f06:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403f08:	2b00      	cmp	r3, #0
  403f0a:	f73f ac42 	bgt.w	403792 <_dtoa_r+0x21a>
  403f0e:	f040 8221 	bne.w	404354 <_dtoa_r+0xddc>
  403f12:	2200      	movs	r2, #0
  403f14:	4b38      	ldr	r3, [pc, #224]	; (403ff8 <_dtoa_r+0xa80>)
  403f16:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403f1a:	f002 f88b 	bl	406034 <__aeabi_dmul>
  403f1e:	4652      	mov	r2, sl
  403f20:	465b      	mov	r3, fp
  403f22:	f002 fb0d 	bl	406540 <__aeabi_dcmpge>
  403f26:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  403f2a:	4646      	mov	r6, r8
  403f2c:	2800      	cmp	r0, #0
  403f2e:	d041      	beq.n	403fb4 <_dtoa_r+0xa3c>
  403f30:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403f32:	9d04      	ldr	r5, [sp, #16]
  403f34:	43db      	mvns	r3, r3
  403f36:	9302      	str	r3, [sp, #8]
  403f38:	4641      	mov	r1, r8
  403f3a:	4620      	mov	r0, r4
  403f3c:	f000 fe74 	bl	404c28 <_Bfree>
  403f40:	2e00      	cmp	r6, #0
  403f42:	f43f acdd 	beq.w	403900 <_dtoa_r+0x388>
  403f46:	e6a7      	b.n	403c98 <_dtoa_r+0x720>
  403f48:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403f4a:	4649      	mov	r1, r9
  403f4c:	4620      	mov	r0, r4
  403f4e:	f000 ffa1 	bl	404e94 <__pow5mult>
  403f52:	4681      	mov	r9, r0
  403f54:	e558      	b.n	403a08 <_dtoa_r+0x490>
  403f56:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403f58:	2a00      	cmp	r2, #0
  403f5a:	f000 8187 	beq.w	40426c <_dtoa_r+0xcf4>
  403f5e:	f203 4333 	addw	r3, r3, #1075	; 0x433
  403f62:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403f64:	9d08      	ldr	r5, [sp, #32]
  403f66:	e4f2      	b.n	40394e <_dtoa_r+0x3d6>
  403f68:	f1ba 0f00 	cmp.w	sl, #0
  403f6c:	f47f ad75 	bne.w	403a5a <_dtoa_r+0x4e2>
  403f70:	e7b4      	b.n	403edc <_dtoa_r+0x964>
  403f72:	f000 fe63 	bl	404c3c <__multadd>
  403f76:	4647      	mov	r7, r8
  403f78:	4606      	mov	r6, r0
  403f7a:	4683      	mov	fp, r0
  403f7c:	e5be      	b.n	403afc <_dtoa_r+0x584>
  403f7e:	4601      	mov	r1, r0
  403f80:	4620      	mov	r0, r4
  403f82:	9306      	str	r3, [sp, #24]
  403f84:	f000 fe50 	bl	404c28 <_Bfree>
  403f88:	2201      	movs	r2, #1
  403f8a:	9b06      	ldr	r3, [sp, #24]
  403f8c:	e5e0      	b.n	403b50 <_dtoa_r+0x5d8>
  403f8e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403f90:	2b02      	cmp	r3, #2
  403f92:	f77f ad96 	ble.w	403ac2 <_dtoa_r+0x54a>
  403f96:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403f98:	2b00      	cmp	r3, #0
  403f9a:	d1c9      	bne.n	403f30 <_dtoa_r+0x9b8>
  403f9c:	4641      	mov	r1, r8
  403f9e:	2205      	movs	r2, #5
  403fa0:	4620      	mov	r0, r4
  403fa2:	f000 fe4b 	bl	404c3c <__multadd>
  403fa6:	4601      	mov	r1, r0
  403fa8:	4680      	mov	r8, r0
  403faa:	4648      	mov	r0, r9
  403fac:	f001 f814 	bl	404fd8 <__mcmp>
  403fb0:	2800      	cmp	r0, #0
  403fb2:	ddbd      	ble.n	403f30 <_dtoa_r+0x9b8>
  403fb4:	9a02      	ldr	r2, [sp, #8]
  403fb6:	9904      	ldr	r1, [sp, #16]
  403fb8:	2331      	movs	r3, #49	; 0x31
  403fba:	3201      	adds	r2, #1
  403fbc:	9202      	str	r2, [sp, #8]
  403fbe:	700b      	strb	r3, [r1, #0]
  403fc0:	1c4d      	adds	r5, r1, #1
  403fc2:	e7b9      	b.n	403f38 <_dtoa_r+0x9c0>
  403fc4:	9a02      	ldr	r2, [sp, #8]
  403fc6:	3201      	adds	r2, #1
  403fc8:	9202      	str	r2, [sp, #8]
  403fca:	9a04      	ldr	r2, [sp, #16]
  403fcc:	2331      	movs	r3, #49	; 0x31
  403fce:	7013      	strb	r3, [r2, #0]
  403fd0:	e652      	b.n	403c78 <_dtoa_r+0x700>
  403fd2:	2301      	movs	r3, #1
  403fd4:	930b      	str	r3, [sp, #44]	; 0x2c
  403fd6:	e666      	b.n	403ca6 <_dtoa_r+0x72e>
  403fd8:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403fdc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403fde:	e48f      	b.n	403900 <_dtoa_r+0x388>
  403fe0:	00407698 	.word	0x00407698
  403fe4:	00407670 	.word	0x00407670
  403fe8:	3ff00000 	.word	0x3ff00000
  403fec:	401c0000 	.word	0x401c0000
  403ff0:	3fe00000 	.word	0x3fe00000
  403ff4:	40240000 	.word	0x40240000
  403ff8:	40140000 	.word	0x40140000
  403ffc:	4650      	mov	r0, sl
  403ffe:	f001 ffb3 	bl	405f68 <__aeabi_i2d>
  404002:	463a      	mov	r2, r7
  404004:	4643      	mov	r3, r8
  404006:	f002 f815 	bl	406034 <__aeabi_dmul>
  40400a:	2200      	movs	r2, #0
  40400c:	4bc1      	ldr	r3, [pc, #772]	; (404314 <_dtoa_r+0xd9c>)
  40400e:	f001 fe5f 	bl	405cd0 <__adddf3>
  404012:	4605      	mov	r5, r0
  404014:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404018:	4641      	mov	r1, r8
  40401a:	2200      	movs	r2, #0
  40401c:	4bbe      	ldr	r3, [pc, #760]	; (404318 <_dtoa_r+0xda0>)
  40401e:	4638      	mov	r0, r7
  404020:	f001 fe54 	bl	405ccc <__aeabi_dsub>
  404024:	462a      	mov	r2, r5
  404026:	4633      	mov	r3, r6
  404028:	4682      	mov	sl, r0
  40402a:	468b      	mov	fp, r1
  40402c:	f002 fa92 	bl	406554 <__aeabi_dcmpgt>
  404030:	4680      	mov	r8, r0
  404032:	2800      	cmp	r0, #0
  404034:	f040 8110 	bne.w	404258 <_dtoa_r+0xce0>
  404038:	462a      	mov	r2, r5
  40403a:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  40403e:	4650      	mov	r0, sl
  404040:	4659      	mov	r1, fp
  404042:	f002 fa69 	bl	406518 <__aeabi_dcmplt>
  404046:	b118      	cbz	r0, 404050 <_dtoa_r+0xad8>
  404048:	4646      	mov	r6, r8
  40404a:	e771      	b.n	403f30 <_dtoa_r+0x9b8>
  40404c:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404050:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  404054:	f7ff bb8a 	b.w	40376c <_dtoa_r+0x1f4>
  404058:	9804      	ldr	r0, [sp, #16]
  40405a:	f7ff babb 	b.w	4035d4 <_dtoa_r+0x5c>
  40405e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404060:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  404062:	970c      	str	r7, [sp, #48]	; 0x30
  404064:	1afb      	subs	r3, r7, r3
  404066:	441a      	add	r2, r3
  404068:	920d      	str	r2, [sp, #52]	; 0x34
  40406a:	2700      	movs	r7, #0
  40406c:	e469      	b.n	403942 <_dtoa_r+0x3ca>
  40406e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  404072:	f04f 0a02 	mov.w	sl, #2
  404076:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  40407a:	e657      	b.n	403d2c <_dtoa_r+0x7b4>
  40407c:	2100      	movs	r1, #0
  40407e:	2301      	movs	r3, #1
  404080:	6461      	str	r1, [r4, #68]	; 0x44
  404082:	4620      	mov	r0, r4
  404084:	9325      	str	r3, [sp, #148]	; 0x94
  404086:	f000 fda9 	bl	404bdc <_Balloc>
  40408a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40408c:	9004      	str	r0, [sp, #16]
  40408e:	6420      	str	r0, [r4, #64]	; 0x40
  404090:	930a      	str	r3, [sp, #40]	; 0x28
  404092:	930f      	str	r3, [sp, #60]	; 0x3c
  404094:	e629      	b.n	403cea <_dtoa_r+0x772>
  404096:	2a00      	cmp	r2, #0
  404098:	46d0      	mov	r8, sl
  40409a:	f8cd b018 	str.w	fp, [sp, #24]
  40409e:	469a      	mov	sl, r3
  4040a0:	dd11      	ble.n	4040c6 <_dtoa_r+0xb4e>
  4040a2:	4649      	mov	r1, r9
  4040a4:	2201      	movs	r2, #1
  4040a6:	4620      	mov	r0, r4
  4040a8:	f000 ff44 	bl	404f34 <__lshift>
  4040ac:	4641      	mov	r1, r8
  4040ae:	4681      	mov	r9, r0
  4040b0:	f000 ff92 	bl	404fd8 <__mcmp>
  4040b4:	2800      	cmp	r0, #0
  4040b6:	f340 8146 	ble.w	404346 <_dtoa_r+0xdce>
  4040ba:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  4040be:	f000 8106 	beq.w	4042ce <_dtoa_r+0xd56>
  4040c2:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  4040c6:	46b3      	mov	fp, r6
  4040c8:	f887 a000 	strb.w	sl, [r7]
  4040cc:	1c7d      	adds	r5, r7, #1
  4040ce:	9e06      	ldr	r6, [sp, #24]
  4040d0:	e5d2      	b.n	403c78 <_dtoa_r+0x700>
  4040d2:	d104      	bne.n	4040de <_dtoa_r+0xb66>
  4040d4:	f01a 0f01 	tst.w	sl, #1
  4040d8:	d001      	beq.n	4040de <_dtoa_r+0xb66>
  4040da:	e5bd      	b.n	403c58 <_dtoa_r+0x6e0>
  4040dc:	4615      	mov	r5, r2
  4040de:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  4040e2:	2b30      	cmp	r3, #48	; 0x30
  4040e4:	f105 32ff 	add.w	r2, r5, #4294967295
  4040e8:	d0f8      	beq.n	4040dc <_dtoa_r+0xb64>
  4040ea:	e5c5      	b.n	403c78 <_dtoa_r+0x700>
  4040ec:	9904      	ldr	r1, [sp, #16]
  4040ee:	2230      	movs	r2, #48	; 0x30
  4040f0:	700a      	strb	r2, [r1, #0]
  4040f2:	9a02      	ldr	r2, [sp, #8]
  4040f4:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4040f8:	3201      	adds	r2, #1
  4040fa:	9202      	str	r2, [sp, #8]
  4040fc:	f7ff bbfc 	b.w	4038f8 <_dtoa_r+0x380>
  404100:	f000 80bb 	beq.w	40427a <_dtoa_r+0xd02>
  404104:	9b02      	ldr	r3, [sp, #8]
  404106:	425d      	negs	r5, r3
  404108:	4b84      	ldr	r3, [pc, #528]	; (40431c <_dtoa_r+0xda4>)
  40410a:	f005 020f 	and.w	r2, r5, #15
  40410e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  404112:	e9d3 2300 	ldrd	r2, r3, [r3]
  404116:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  40411a:	f001 ff8b 	bl	406034 <__aeabi_dmul>
  40411e:	112d      	asrs	r5, r5, #4
  404120:	4607      	mov	r7, r0
  404122:	4688      	mov	r8, r1
  404124:	f000 812c 	beq.w	404380 <_dtoa_r+0xe08>
  404128:	4e7d      	ldr	r6, [pc, #500]	; (404320 <_dtoa_r+0xda8>)
  40412a:	f04f 0a02 	mov.w	sl, #2
  40412e:	07eb      	lsls	r3, r5, #31
  404130:	d509      	bpl.n	404146 <_dtoa_r+0xbce>
  404132:	4638      	mov	r0, r7
  404134:	4641      	mov	r1, r8
  404136:	e9d6 2300 	ldrd	r2, r3, [r6]
  40413a:	f001 ff7b 	bl	406034 <__aeabi_dmul>
  40413e:	f10a 0a01 	add.w	sl, sl, #1
  404142:	4607      	mov	r7, r0
  404144:	4688      	mov	r8, r1
  404146:	106d      	asrs	r5, r5, #1
  404148:	f106 0608 	add.w	r6, r6, #8
  40414c:	d1ef      	bne.n	40412e <_dtoa_r+0xbb6>
  40414e:	e608      	b.n	403d62 <_dtoa_r+0x7ea>
  404150:	6871      	ldr	r1, [r6, #4]
  404152:	4620      	mov	r0, r4
  404154:	f000 fd42 	bl	404bdc <_Balloc>
  404158:	6933      	ldr	r3, [r6, #16]
  40415a:	3302      	adds	r3, #2
  40415c:	009a      	lsls	r2, r3, #2
  40415e:	4605      	mov	r5, r0
  404160:	f106 010c 	add.w	r1, r6, #12
  404164:	300c      	adds	r0, #12
  404166:	f000 fc93 	bl	404a90 <memcpy>
  40416a:	4629      	mov	r1, r5
  40416c:	2201      	movs	r2, #1
  40416e:	4620      	mov	r0, r4
  404170:	f000 fee0 	bl	404f34 <__lshift>
  404174:	9006      	str	r0, [sp, #24]
  404176:	e4b5      	b.n	403ae4 <_dtoa_r+0x56c>
  404178:	2b39      	cmp	r3, #57	; 0x39
  40417a:	f8cd b018 	str.w	fp, [sp, #24]
  40417e:	46d0      	mov	r8, sl
  404180:	f000 80a5 	beq.w	4042ce <_dtoa_r+0xd56>
  404184:	f103 0a01 	add.w	sl, r3, #1
  404188:	46b3      	mov	fp, r6
  40418a:	f887 a000 	strb.w	sl, [r7]
  40418e:	1c7d      	adds	r5, r7, #1
  404190:	9e06      	ldr	r6, [sp, #24]
  404192:	e571      	b.n	403c78 <_dtoa_r+0x700>
  404194:	465a      	mov	r2, fp
  404196:	46d0      	mov	r8, sl
  404198:	46b3      	mov	fp, r6
  40419a:	469a      	mov	sl, r3
  40419c:	4616      	mov	r6, r2
  40419e:	e54f      	b.n	403c40 <_dtoa_r+0x6c8>
  4041a0:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4041a2:	495e      	ldr	r1, [pc, #376]	; (40431c <_dtoa_r+0xda4>)
  4041a4:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  4041a8:	462a      	mov	r2, r5
  4041aa:	4633      	mov	r3, r6
  4041ac:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  4041b0:	f001 ff40 	bl	406034 <__aeabi_dmul>
  4041b4:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  4041b8:	4638      	mov	r0, r7
  4041ba:	4641      	mov	r1, r8
  4041bc:	f002 f9ea 	bl	406594 <__aeabi_d2iz>
  4041c0:	4605      	mov	r5, r0
  4041c2:	f001 fed1 	bl	405f68 <__aeabi_i2d>
  4041c6:	460b      	mov	r3, r1
  4041c8:	4602      	mov	r2, r0
  4041ca:	4641      	mov	r1, r8
  4041cc:	4638      	mov	r0, r7
  4041ce:	f001 fd7d 	bl	405ccc <__aeabi_dsub>
  4041d2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4041d4:	460f      	mov	r7, r1
  4041d6:	9904      	ldr	r1, [sp, #16]
  4041d8:	3530      	adds	r5, #48	; 0x30
  4041da:	2b01      	cmp	r3, #1
  4041dc:	700d      	strb	r5, [r1, #0]
  4041de:	4606      	mov	r6, r0
  4041e0:	f101 0501 	add.w	r5, r1, #1
  4041e4:	d026      	beq.n	404234 <_dtoa_r+0xcbc>
  4041e6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4041e8:	9a04      	ldr	r2, [sp, #16]
  4041ea:	f8df b13c 	ldr.w	fp, [pc, #316]	; 404328 <_dtoa_r+0xdb0>
  4041ee:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  4041f2:	4413      	add	r3, r2
  4041f4:	f04f 0a00 	mov.w	sl, #0
  4041f8:	4699      	mov	r9, r3
  4041fa:	4652      	mov	r2, sl
  4041fc:	465b      	mov	r3, fp
  4041fe:	4630      	mov	r0, r6
  404200:	4639      	mov	r1, r7
  404202:	f001 ff17 	bl	406034 <__aeabi_dmul>
  404206:	460f      	mov	r7, r1
  404208:	4606      	mov	r6, r0
  40420a:	f002 f9c3 	bl	406594 <__aeabi_d2iz>
  40420e:	4680      	mov	r8, r0
  404210:	f001 feaa 	bl	405f68 <__aeabi_i2d>
  404214:	f108 0830 	add.w	r8, r8, #48	; 0x30
  404218:	4602      	mov	r2, r0
  40421a:	460b      	mov	r3, r1
  40421c:	4630      	mov	r0, r6
  40421e:	4639      	mov	r1, r7
  404220:	f001 fd54 	bl	405ccc <__aeabi_dsub>
  404224:	f805 8b01 	strb.w	r8, [r5], #1
  404228:	454d      	cmp	r5, r9
  40422a:	4606      	mov	r6, r0
  40422c:	460f      	mov	r7, r1
  40422e:	d1e4      	bne.n	4041fa <_dtoa_r+0xc82>
  404230:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404234:	4b3b      	ldr	r3, [pc, #236]	; (404324 <_dtoa_r+0xdac>)
  404236:	2200      	movs	r2, #0
  404238:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  40423c:	f001 fd48 	bl	405cd0 <__adddf3>
  404240:	4632      	mov	r2, r6
  404242:	463b      	mov	r3, r7
  404244:	f002 f968 	bl	406518 <__aeabi_dcmplt>
  404248:	2800      	cmp	r0, #0
  40424a:	d046      	beq.n	4042da <_dtoa_r+0xd62>
  40424c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40424e:	9302      	str	r3, [sp, #8]
  404250:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404254:	f7ff bb43 	b.w	4038de <_dtoa_r+0x366>
  404258:	f04f 0800 	mov.w	r8, #0
  40425c:	4646      	mov	r6, r8
  40425e:	e6a9      	b.n	403fb4 <_dtoa_r+0xa3c>
  404260:	9b08      	ldr	r3, [sp, #32]
  404262:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  404264:	1a9d      	subs	r5, r3, r2
  404266:	2300      	movs	r3, #0
  404268:	f7ff bb71 	b.w	40394e <_dtoa_r+0x3d6>
  40426c:	9b18      	ldr	r3, [sp, #96]	; 0x60
  40426e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404270:	9d08      	ldr	r5, [sp, #32]
  404272:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  404276:	f7ff bb6a 	b.w	40394e <_dtoa_r+0x3d6>
  40427a:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  40427e:	f04f 0a02 	mov.w	sl, #2
  404282:	e56e      	b.n	403d62 <_dtoa_r+0x7ea>
  404284:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404286:	2b00      	cmp	r3, #0
  404288:	f43f aeb8 	beq.w	403ffc <_dtoa_r+0xa84>
  40428c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40428e:	2b00      	cmp	r3, #0
  404290:	f77f aede 	ble.w	404050 <_dtoa_r+0xad8>
  404294:	2200      	movs	r2, #0
  404296:	4b24      	ldr	r3, [pc, #144]	; (404328 <_dtoa_r+0xdb0>)
  404298:	4638      	mov	r0, r7
  40429a:	4641      	mov	r1, r8
  40429c:	f001 feca 	bl	406034 <__aeabi_dmul>
  4042a0:	4607      	mov	r7, r0
  4042a2:	4688      	mov	r8, r1
  4042a4:	f10a 0001 	add.w	r0, sl, #1
  4042a8:	f001 fe5e 	bl	405f68 <__aeabi_i2d>
  4042ac:	463a      	mov	r2, r7
  4042ae:	4643      	mov	r3, r8
  4042b0:	f001 fec0 	bl	406034 <__aeabi_dmul>
  4042b4:	2200      	movs	r2, #0
  4042b6:	4b17      	ldr	r3, [pc, #92]	; (404314 <_dtoa_r+0xd9c>)
  4042b8:	f001 fd0a 	bl	405cd0 <__adddf3>
  4042bc:	9a02      	ldr	r2, [sp, #8]
  4042be:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4042c0:	9312      	str	r3, [sp, #72]	; 0x48
  4042c2:	3a01      	subs	r2, #1
  4042c4:	4605      	mov	r5, r0
  4042c6:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4042ca:	9215      	str	r2, [sp, #84]	; 0x54
  4042cc:	e56a      	b.n	403da4 <_dtoa_r+0x82c>
  4042ce:	2239      	movs	r2, #57	; 0x39
  4042d0:	46b3      	mov	fp, r6
  4042d2:	703a      	strb	r2, [r7, #0]
  4042d4:	9e06      	ldr	r6, [sp, #24]
  4042d6:	1c7d      	adds	r5, r7, #1
  4042d8:	e4c0      	b.n	403c5c <_dtoa_r+0x6e4>
  4042da:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  4042de:	2000      	movs	r0, #0
  4042e0:	4910      	ldr	r1, [pc, #64]	; (404324 <_dtoa_r+0xdac>)
  4042e2:	f001 fcf3 	bl	405ccc <__aeabi_dsub>
  4042e6:	4632      	mov	r2, r6
  4042e8:	463b      	mov	r3, r7
  4042ea:	f002 f933 	bl	406554 <__aeabi_dcmpgt>
  4042ee:	b908      	cbnz	r0, 4042f4 <_dtoa_r+0xd7c>
  4042f0:	e6ae      	b.n	404050 <_dtoa_r+0xad8>
  4042f2:	4615      	mov	r5, r2
  4042f4:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  4042f8:	2b30      	cmp	r3, #48	; 0x30
  4042fa:	f105 32ff 	add.w	r2, r5, #4294967295
  4042fe:	d0f8      	beq.n	4042f2 <_dtoa_r+0xd7a>
  404300:	e5d7      	b.n	403eb2 <_dtoa_r+0x93a>
  404302:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404306:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404308:	9302      	str	r3, [sp, #8]
  40430a:	f7ff bae8 	b.w	4038de <_dtoa_r+0x366>
  40430e:	970c      	str	r7, [sp, #48]	; 0x30
  404310:	f7ff bba5 	b.w	403a5e <_dtoa_r+0x4e6>
  404314:	401c0000 	.word	0x401c0000
  404318:	40140000 	.word	0x40140000
  40431c:	00407698 	.word	0x00407698
  404320:	00407670 	.word	0x00407670
  404324:	3fe00000 	.word	0x3fe00000
  404328:	40240000 	.word	0x40240000
  40432c:	2b39      	cmp	r3, #57	; 0x39
  40432e:	f8cd b018 	str.w	fp, [sp, #24]
  404332:	46d0      	mov	r8, sl
  404334:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  404338:	469a      	mov	sl, r3
  40433a:	d0c8      	beq.n	4042ce <_dtoa_r+0xd56>
  40433c:	f1bb 0f00 	cmp.w	fp, #0
  404340:	f73f aebf 	bgt.w	4040c2 <_dtoa_r+0xb4a>
  404344:	e6bf      	b.n	4040c6 <_dtoa_r+0xb4e>
  404346:	f47f aebe 	bne.w	4040c6 <_dtoa_r+0xb4e>
  40434a:	f01a 0f01 	tst.w	sl, #1
  40434e:	f43f aeba 	beq.w	4040c6 <_dtoa_r+0xb4e>
  404352:	e6b2      	b.n	4040ba <_dtoa_r+0xb42>
  404354:	f04f 0800 	mov.w	r8, #0
  404358:	4646      	mov	r6, r8
  40435a:	e5e9      	b.n	403f30 <_dtoa_r+0x9b8>
  40435c:	4631      	mov	r1, r6
  40435e:	2300      	movs	r3, #0
  404360:	220a      	movs	r2, #10
  404362:	4620      	mov	r0, r4
  404364:	f000 fc6a 	bl	404c3c <__multadd>
  404368:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40436a:	2b00      	cmp	r3, #0
  40436c:	4606      	mov	r6, r0
  40436e:	dd0a      	ble.n	404386 <_dtoa_r+0xe0e>
  404370:	930a      	str	r3, [sp, #40]	; 0x28
  404372:	f7ff bbaa 	b.w	403aca <_dtoa_r+0x552>
  404376:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404378:	2b02      	cmp	r3, #2
  40437a:	dc23      	bgt.n	4043c4 <_dtoa_r+0xe4c>
  40437c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40437e:	e43b      	b.n	403bf8 <_dtoa_r+0x680>
  404380:	f04f 0a02 	mov.w	sl, #2
  404384:	e4ed      	b.n	403d62 <_dtoa_r+0x7ea>
  404386:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404388:	2b02      	cmp	r3, #2
  40438a:	dc1b      	bgt.n	4043c4 <_dtoa_r+0xe4c>
  40438c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40438e:	e7ef      	b.n	404370 <_dtoa_r+0xdf8>
  404390:	2500      	movs	r5, #0
  404392:	6465      	str	r5, [r4, #68]	; 0x44
  404394:	4629      	mov	r1, r5
  404396:	4620      	mov	r0, r4
  404398:	f000 fc20 	bl	404bdc <_Balloc>
  40439c:	f04f 33ff 	mov.w	r3, #4294967295
  4043a0:	930a      	str	r3, [sp, #40]	; 0x28
  4043a2:	930f      	str	r3, [sp, #60]	; 0x3c
  4043a4:	2301      	movs	r3, #1
  4043a6:	9004      	str	r0, [sp, #16]
  4043a8:	9525      	str	r5, [sp, #148]	; 0x94
  4043aa:	6420      	str	r0, [r4, #64]	; 0x40
  4043ac:	930b      	str	r3, [sp, #44]	; 0x2c
  4043ae:	f7ff b9dd 	b.w	40376c <_dtoa_r+0x1f4>
  4043b2:	2501      	movs	r5, #1
  4043b4:	f7ff b9a5 	b.w	403702 <_dtoa_r+0x18a>
  4043b8:	f43f ab69 	beq.w	403a8e <_dtoa_r+0x516>
  4043bc:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  4043c0:	f7ff bbf9 	b.w	403bb6 <_dtoa_r+0x63e>
  4043c4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4043c6:	930a      	str	r3, [sp, #40]	; 0x28
  4043c8:	e5e5      	b.n	403f96 <_dtoa_r+0xa1e>
  4043ca:	bf00      	nop

004043cc <__libc_fini_array>:
  4043cc:	b538      	push	{r3, r4, r5, lr}
  4043ce:	4c0a      	ldr	r4, [pc, #40]	; (4043f8 <__libc_fini_array+0x2c>)
  4043d0:	4d0a      	ldr	r5, [pc, #40]	; (4043fc <__libc_fini_array+0x30>)
  4043d2:	1b64      	subs	r4, r4, r5
  4043d4:	10a4      	asrs	r4, r4, #2
  4043d6:	d00a      	beq.n	4043ee <__libc_fini_array+0x22>
  4043d8:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  4043dc:	3b01      	subs	r3, #1
  4043de:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  4043e2:	3c01      	subs	r4, #1
  4043e4:	f855 3904 	ldr.w	r3, [r5], #-4
  4043e8:	4798      	blx	r3
  4043ea:	2c00      	cmp	r4, #0
  4043ec:	d1f9      	bne.n	4043e2 <__libc_fini_array+0x16>
  4043ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  4043f2:	f003 ba4f 	b.w	407894 <_fini>
  4043f6:	bf00      	nop
  4043f8:	004078a4 	.word	0x004078a4
  4043fc:	004078a0 	.word	0x004078a0

00404400 <_localeconv_r>:
  404400:	4a04      	ldr	r2, [pc, #16]	; (404414 <_localeconv_r+0x14>)
  404402:	4b05      	ldr	r3, [pc, #20]	; (404418 <_localeconv_r+0x18>)
  404404:	6812      	ldr	r2, [r2, #0]
  404406:	6b50      	ldr	r0, [r2, #52]	; 0x34
  404408:	2800      	cmp	r0, #0
  40440a:	bf08      	it	eq
  40440c:	4618      	moveq	r0, r3
  40440e:	30f0      	adds	r0, #240	; 0xf0
  404410:	4770      	bx	lr
  404412:	bf00      	nop
  404414:	20000010 	.word	0x20000010
  404418:	20000854 	.word	0x20000854

0040441c <__retarget_lock_acquire_recursive>:
  40441c:	4770      	bx	lr
  40441e:	bf00      	nop

00404420 <__retarget_lock_release_recursive>:
  404420:	4770      	bx	lr
  404422:	bf00      	nop

00404424 <_malloc_r>:
  404424:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404428:	f101 060b 	add.w	r6, r1, #11
  40442c:	2e16      	cmp	r6, #22
  40442e:	b083      	sub	sp, #12
  404430:	4605      	mov	r5, r0
  404432:	f240 809e 	bls.w	404572 <_malloc_r+0x14e>
  404436:	f036 0607 	bics.w	r6, r6, #7
  40443a:	f100 80bd 	bmi.w	4045b8 <_malloc_r+0x194>
  40443e:	42b1      	cmp	r1, r6
  404440:	f200 80ba 	bhi.w	4045b8 <_malloc_r+0x194>
  404444:	f000 fbbe 	bl	404bc4 <__malloc_lock>
  404448:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  40444c:	f0c0 8293 	bcc.w	404976 <_malloc_r+0x552>
  404450:	0a73      	lsrs	r3, r6, #9
  404452:	f000 80b8 	beq.w	4045c6 <_malloc_r+0x1a2>
  404456:	2b04      	cmp	r3, #4
  404458:	f200 8179 	bhi.w	40474e <_malloc_r+0x32a>
  40445c:	09b3      	lsrs	r3, r6, #6
  40445e:	f103 0039 	add.w	r0, r3, #57	; 0x39
  404462:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  404466:	00c3      	lsls	r3, r0, #3
  404468:	4fbf      	ldr	r7, [pc, #764]	; (404768 <_malloc_r+0x344>)
  40446a:	443b      	add	r3, r7
  40446c:	f1a3 0108 	sub.w	r1, r3, #8
  404470:	685c      	ldr	r4, [r3, #4]
  404472:	42a1      	cmp	r1, r4
  404474:	d106      	bne.n	404484 <_malloc_r+0x60>
  404476:	e00c      	b.n	404492 <_malloc_r+0x6e>
  404478:	2a00      	cmp	r2, #0
  40447a:	f280 80aa 	bge.w	4045d2 <_malloc_r+0x1ae>
  40447e:	68e4      	ldr	r4, [r4, #12]
  404480:	42a1      	cmp	r1, r4
  404482:	d006      	beq.n	404492 <_malloc_r+0x6e>
  404484:	6863      	ldr	r3, [r4, #4]
  404486:	f023 0303 	bic.w	r3, r3, #3
  40448a:	1b9a      	subs	r2, r3, r6
  40448c:	2a0f      	cmp	r2, #15
  40448e:	ddf3      	ble.n	404478 <_malloc_r+0x54>
  404490:	4670      	mov	r0, lr
  404492:	693c      	ldr	r4, [r7, #16]
  404494:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 40477c <_malloc_r+0x358>
  404498:	4574      	cmp	r4, lr
  40449a:	f000 81ab 	beq.w	4047f4 <_malloc_r+0x3d0>
  40449e:	6863      	ldr	r3, [r4, #4]
  4044a0:	f023 0303 	bic.w	r3, r3, #3
  4044a4:	1b9a      	subs	r2, r3, r6
  4044a6:	2a0f      	cmp	r2, #15
  4044a8:	f300 8190 	bgt.w	4047cc <_malloc_r+0x3a8>
  4044ac:	2a00      	cmp	r2, #0
  4044ae:	f8c7 e014 	str.w	lr, [r7, #20]
  4044b2:	f8c7 e010 	str.w	lr, [r7, #16]
  4044b6:	f280 809d 	bge.w	4045f4 <_malloc_r+0x1d0>
  4044ba:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4044be:	f080 8161 	bcs.w	404784 <_malloc_r+0x360>
  4044c2:	08db      	lsrs	r3, r3, #3
  4044c4:	f103 0c01 	add.w	ip, r3, #1
  4044c8:	1099      	asrs	r1, r3, #2
  4044ca:	687a      	ldr	r2, [r7, #4]
  4044cc:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  4044d0:	f8c4 8008 	str.w	r8, [r4, #8]
  4044d4:	2301      	movs	r3, #1
  4044d6:	408b      	lsls	r3, r1
  4044d8:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  4044dc:	4313      	orrs	r3, r2
  4044de:	3908      	subs	r1, #8
  4044e0:	60e1      	str	r1, [r4, #12]
  4044e2:	607b      	str	r3, [r7, #4]
  4044e4:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  4044e8:	f8c8 400c 	str.w	r4, [r8, #12]
  4044ec:	1082      	asrs	r2, r0, #2
  4044ee:	2401      	movs	r4, #1
  4044f0:	4094      	lsls	r4, r2
  4044f2:	429c      	cmp	r4, r3
  4044f4:	f200 808b 	bhi.w	40460e <_malloc_r+0x1ea>
  4044f8:	421c      	tst	r4, r3
  4044fa:	d106      	bne.n	40450a <_malloc_r+0xe6>
  4044fc:	f020 0003 	bic.w	r0, r0, #3
  404500:	0064      	lsls	r4, r4, #1
  404502:	421c      	tst	r4, r3
  404504:	f100 0004 	add.w	r0, r0, #4
  404508:	d0fa      	beq.n	404500 <_malloc_r+0xdc>
  40450a:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  40450e:	46cc      	mov	ip, r9
  404510:	4680      	mov	r8, r0
  404512:	f8dc 300c 	ldr.w	r3, [ip, #12]
  404516:	459c      	cmp	ip, r3
  404518:	d107      	bne.n	40452a <_malloc_r+0x106>
  40451a:	e16d      	b.n	4047f8 <_malloc_r+0x3d4>
  40451c:	2a00      	cmp	r2, #0
  40451e:	f280 817b 	bge.w	404818 <_malloc_r+0x3f4>
  404522:	68db      	ldr	r3, [r3, #12]
  404524:	459c      	cmp	ip, r3
  404526:	f000 8167 	beq.w	4047f8 <_malloc_r+0x3d4>
  40452a:	6859      	ldr	r1, [r3, #4]
  40452c:	f021 0103 	bic.w	r1, r1, #3
  404530:	1b8a      	subs	r2, r1, r6
  404532:	2a0f      	cmp	r2, #15
  404534:	ddf2      	ble.n	40451c <_malloc_r+0xf8>
  404536:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  40453a:	f8d3 8008 	ldr.w	r8, [r3, #8]
  40453e:	9300      	str	r3, [sp, #0]
  404540:	199c      	adds	r4, r3, r6
  404542:	4628      	mov	r0, r5
  404544:	f046 0601 	orr.w	r6, r6, #1
  404548:	f042 0501 	orr.w	r5, r2, #1
  40454c:	605e      	str	r6, [r3, #4]
  40454e:	f8c8 c00c 	str.w	ip, [r8, #12]
  404552:	f8cc 8008 	str.w	r8, [ip, #8]
  404556:	617c      	str	r4, [r7, #20]
  404558:	613c      	str	r4, [r7, #16]
  40455a:	f8c4 e00c 	str.w	lr, [r4, #12]
  40455e:	f8c4 e008 	str.w	lr, [r4, #8]
  404562:	6065      	str	r5, [r4, #4]
  404564:	505a      	str	r2, [r3, r1]
  404566:	f000 fb33 	bl	404bd0 <__malloc_unlock>
  40456a:	9b00      	ldr	r3, [sp, #0]
  40456c:	f103 0408 	add.w	r4, r3, #8
  404570:	e01e      	b.n	4045b0 <_malloc_r+0x18c>
  404572:	2910      	cmp	r1, #16
  404574:	d820      	bhi.n	4045b8 <_malloc_r+0x194>
  404576:	f000 fb25 	bl	404bc4 <__malloc_lock>
  40457a:	2610      	movs	r6, #16
  40457c:	2318      	movs	r3, #24
  40457e:	2002      	movs	r0, #2
  404580:	4f79      	ldr	r7, [pc, #484]	; (404768 <_malloc_r+0x344>)
  404582:	443b      	add	r3, r7
  404584:	f1a3 0208 	sub.w	r2, r3, #8
  404588:	685c      	ldr	r4, [r3, #4]
  40458a:	4294      	cmp	r4, r2
  40458c:	f000 813d 	beq.w	40480a <_malloc_r+0x3e6>
  404590:	6863      	ldr	r3, [r4, #4]
  404592:	68e1      	ldr	r1, [r4, #12]
  404594:	68a6      	ldr	r6, [r4, #8]
  404596:	f023 0303 	bic.w	r3, r3, #3
  40459a:	4423      	add	r3, r4
  40459c:	4628      	mov	r0, r5
  40459e:	685a      	ldr	r2, [r3, #4]
  4045a0:	60f1      	str	r1, [r6, #12]
  4045a2:	f042 0201 	orr.w	r2, r2, #1
  4045a6:	608e      	str	r6, [r1, #8]
  4045a8:	605a      	str	r2, [r3, #4]
  4045aa:	f000 fb11 	bl	404bd0 <__malloc_unlock>
  4045ae:	3408      	adds	r4, #8
  4045b0:	4620      	mov	r0, r4
  4045b2:	b003      	add	sp, #12
  4045b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4045b8:	2400      	movs	r4, #0
  4045ba:	230c      	movs	r3, #12
  4045bc:	4620      	mov	r0, r4
  4045be:	602b      	str	r3, [r5, #0]
  4045c0:	b003      	add	sp, #12
  4045c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4045c6:	2040      	movs	r0, #64	; 0x40
  4045c8:	f44f 7300 	mov.w	r3, #512	; 0x200
  4045cc:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  4045d0:	e74a      	b.n	404468 <_malloc_r+0x44>
  4045d2:	4423      	add	r3, r4
  4045d4:	68e1      	ldr	r1, [r4, #12]
  4045d6:	685a      	ldr	r2, [r3, #4]
  4045d8:	68a6      	ldr	r6, [r4, #8]
  4045da:	f042 0201 	orr.w	r2, r2, #1
  4045de:	60f1      	str	r1, [r6, #12]
  4045e0:	4628      	mov	r0, r5
  4045e2:	608e      	str	r6, [r1, #8]
  4045e4:	605a      	str	r2, [r3, #4]
  4045e6:	f000 faf3 	bl	404bd0 <__malloc_unlock>
  4045ea:	3408      	adds	r4, #8
  4045ec:	4620      	mov	r0, r4
  4045ee:	b003      	add	sp, #12
  4045f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4045f4:	4423      	add	r3, r4
  4045f6:	4628      	mov	r0, r5
  4045f8:	685a      	ldr	r2, [r3, #4]
  4045fa:	f042 0201 	orr.w	r2, r2, #1
  4045fe:	605a      	str	r2, [r3, #4]
  404600:	f000 fae6 	bl	404bd0 <__malloc_unlock>
  404604:	3408      	adds	r4, #8
  404606:	4620      	mov	r0, r4
  404608:	b003      	add	sp, #12
  40460a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40460e:	68bc      	ldr	r4, [r7, #8]
  404610:	6863      	ldr	r3, [r4, #4]
  404612:	f023 0803 	bic.w	r8, r3, #3
  404616:	45b0      	cmp	r8, r6
  404618:	d304      	bcc.n	404624 <_malloc_r+0x200>
  40461a:	eba8 0306 	sub.w	r3, r8, r6
  40461e:	2b0f      	cmp	r3, #15
  404620:	f300 8085 	bgt.w	40472e <_malloc_r+0x30a>
  404624:	f8df 9158 	ldr.w	r9, [pc, #344]	; 404780 <_malloc_r+0x35c>
  404628:	4b50      	ldr	r3, [pc, #320]	; (40476c <_malloc_r+0x348>)
  40462a:	f8d9 2000 	ldr.w	r2, [r9]
  40462e:	681b      	ldr	r3, [r3, #0]
  404630:	3201      	adds	r2, #1
  404632:	4433      	add	r3, r6
  404634:	eb04 0a08 	add.w	sl, r4, r8
  404638:	f000 8155 	beq.w	4048e6 <_malloc_r+0x4c2>
  40463c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  404640:	330f      	adds	r3, #15
  404642:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  404646:	f02b 0b0f 	bic.w	fp, fp, #15
  40464a:	4659      	mov	r1, fp
  40464c:	4628      	mov	r0, r5
  40464e:	f000 fdbf 	bl	4051d0 <_sbrk_r>
  404652:	1c41      	adds	r1, r0, #1
  404654:	4602      	mov	r2, r0
  404656:	f000 80fc 	beq.w	404852 <_malloc_r+0x42e>
  40465a:	4582      	cmp	sl, r0
  40465c:	f200 80f7 	bhi.w	40484e <_malloc_r+0x42a>
  404660:	4b43      	ldr	r3, [pc, #268]	; (404770 <_malloc_r+0x34c>)
  404662:	6819      	ldr	r1, [r3, #0]
  404664:	4459      	add	r1, fp
  404666:	6019      	str	r1, [r3, #0]
  404668:	f000 814d 	beq.w	404906 <_malloc_r+0x4e2>
  40466c:	f8d9 0000 	ldr.w	r0, [r9]
  404670:	3001      	adds	r0, #1
  404672:	bf1b      	ittet	ne
  404674:	eba2 0a0a 	subne.w	sl, r2, sl
  404678:	4451      	addne	r1, sl
  40467a:	f8c9 2000 	streq.w	r2, [r9]
  40467e:	6019      	strne	r1, [r3, #0]
  404680:	f012 0107 	ands.w	r1, r2, #7
  404684:	f000 8115 	beq.w	4048b2 <_malloc_r+0x48e>
  404688:	f1c1 0008 	rsb	r0, r1, #8
  40468c:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404690:	4402      	add	r2, r0
  404692:	3108      	adds	r1, #8
  404694:	eb02 090b 	add.w	r9, r2, fp
  404698:	f3c9 090b 	ubfx	r9, r9, #0, #12
  40469c:	eba1 0909 	sub.w	r9, r1, r9
  4046a0:	4649      	mov	r1, r9
  4046a2:	4628      	mov	r0, r5
  4046a4:	9301      	str	r3, [sp, #4]
  4046a6:	9200      	str	r2, [sp, #0]
  4046a8:	f000 fd92 	bl	4051d0 <_sbrk_r>
  4046ac:	1c43      	adds	r3, r0, #1
  4046ae:	e89d 000c 	ldmia.w	sp, {r2, r3}
  4046b2:	f000 8143 	beq.w	40493c <_malloc_r+0x518>
  4046b6:	1a80      	subs	r0, r0, r2
  4046b8:	4448      	add	r0, r9
  4046ba:	f040 0001 	orr.w	r0, r0, #1
  4046be:	6819      	ldr	r1, [r3, #0]
  4046c0:	60ba      	str	r2, [r7, #8]
  4046c2:	4449      	add	r1, r9
  4046c4:	42bc      	cmp	r4, r7
  4046c6:	6050      	str	r0, [r2, #4]
  4046c8:	6019      	str	r1, [r3, #0]
  4046ca:	d017      	beq.n	4046fc <_malloc_r+0x2d8>
  4046cc:	f1b8 0f0f 	cmp.w	r8, #15
  4046d0:	f240 80fb 	bls.w	4048ca <_malloc_r+0x4a6>
  4046d4:	6860      	ldr	r0, [r4, #4]
  4046d6:	f1a8 020c 	sub.w	r2, r8, #12
  4046da:	f022 0207 	bic.w	r2, r2, #7
  4046de:	eb04 0e02 	add.w	lr, r4, r2
  4046e2:	f000 0001 	and.w	r0, r0, #1
  4046e6:	f04f 0c05 	mov.w	ip, #5
  4046ea:	4310      	orrs	r0, r2
  4046ec:	2a0f      	cmp	r2, #15
  4046ee:	6060      	str	r0, [r4, #4]
  4046f0:	f8ce c004 	str.w	ip, [lr, #4]
  4046f4:	f8ce c008 	str.w	ip, [lr, #8]
  4046f8:	f200 8117 	bhi.w	40492a <_malloc_r+0x506>
  4046fc:	4b1d      	ldr	r3, [pc, #116]	; (404774 <_malloc_r+0x350>)
  4046fe:	68bc      	ldr	r4, [r7, #8]
  404700:	681a      	ldr	r2, [r3, #0]
  404702:	4291      	cmp	r1, r2
  404704:	bf88      	it	hi
  404706:	6019      	strhi	r1, [r3, #0]
  404708:	4b1b      	ldr	r3, [pc, #108]	; (404778 <_malloc_r+0x354>)
  40470a:	681a      	ldr	r2, [r3, #0]
  40470c:	4291      	cmp	r1, r2
  40470e:	6862      	ldr	r2, [r4, #4]
  404710:	bf88      	it	hi
  404712:	6019      	strhi	r1, [r3, #0]
  404714:	f022 0203 	bic.w	r2, r2, #3
  404718:	4296      	cmp	r6, r2
  40471a:	eba2 0306 	sub.w	r3, r2, r6
  40471e:	d801      	bhi.n	404724 <_malloc_r+0x300>
  404720:	2b0f      	cmp	r3, #15
  404722:	dc04      	bgt.n	40472e <_malloc_r+0x30a>
  404724:	4628      	mov	r0, r5
  404726:	f000 fa53 	bl	404bd0 <__malloc_unlock>
  40472a:	2400      	movs	r4, #0
  40472c:	e740      	b.n	4045b0 <_malloc_r+0x18c>
  40472e:	19a2      	adds	r2, r4, r6
  404730:	f043 0301 	orr.w	r3, r3, #1
  404734:	f046 0601 	orr.w	r6, r6, #1
  404738:	6066      	str	r6, [r4, #4]
  40473a:	4628      	mov	r0, r5
  40473c:	60ba      	str	r2, [r7, #8]
  40473e:	6053      	str	r3, [r2, #4]
  404740:	f000 fa46 	bl	404bd0 <__malloc_unlock>
  404744:	3408      	adds	r4, #8
  404746:	4620      	mov	r0, r4
  404748:	b003      	add	sp, #12
  40474a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40474e:	2b14      	cmp	r3, #20
  404750:	d971      	bls.n	404836 <_malloc_r+0x412>
  404752:	2b54      	cmp	r3, #84	; 0x54
  404754:	f200 80a3 	bhi.w	40489e <_malloc_r+0x47a>
  404758:	0b33      	lsrs	r3, r6, #12
  40475a:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  40475e:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  404762:	00c3      	lsls	r3, r0, #3
  404764:	e680      	b.n	404468 <_malloc_r+0x44>
  404766:	bf00      	nop
  404768:	20000444 	.word	0x20000444
  40476c:	20000ac0 	.word	0x20000ac0
  404770:	20000a90 	.word	0x20000a90
  404774:	20000ab8 	.word	0x20000ab8
  404778:	20000abc 	.word	0x20000abc
  40477c:	2000044c 	.word	0x2000044c
  404780:	2000084c 	.word	0x2000084c
  404784:	0a5a      	lsrs	r2, r3, #9
  404786:	2a04      	cmp	r2, #4
  404788:	d95b      	bls.n	404842 <_malloc_r+0x41e>
  40478a:	2a14      	cmp	r2, #20
  40478c:	f200 80ae 	bhi.w	4048ec <_malloc_r+0x4c8>
  404790:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  404794:	00c9      	lsls	r1, r1, #3
  404796:	325b      	adds	r2, #91	; 0x5b
  404798:	eb07 0c01 	add.w	ip, r7, r1
  40479c:	5879      	ldr	r1, [r7, r1]
  40479e:	f1ac 0c08 	sub.w	ip, ip, #8
  4047a2:	458c      	cmp	ip, r1
  4047a4:	f000 8088 	beq.w	4048b8 <_malloc_r+0x494>
  4047a8:	684a      	ldr	r2, [r1, #4]
  4047aa:	f022 0203 	bic.w	r2, r2, #3
  4047ae:	4293      	cmp	r3, r2
  4047b0:	d273      	bcs.n	40489a <_malloc_r+0x476>
  4047b2:	6889      	ldr	r1, [r1, #8]
  4047b4:	458c      	cmp	ip, r1
  4047b6:	d1f7      	bne.n	4047a8 <_malloc_r+0x384>
  4047b8:	f8dc 200c 	ldr.w	r2, [ip, #12]
  4047bc:	687b      	ldr	r3, [r7, #4]
  4047be:	60e2      	str	r2, [r4, #12]
  4047c0:	f8c4 c008 	str.w	ip, [r4, #8]
  4047c4:	6094      	str	r4, [r2, #8]
  4047c6:	f8cc 400c 	str.w	r4, [ip, #12]
  4047ca:	e68f      	b.n	4044ec <_malloc_r+0xc8>
  4047cc:	19a1      	adds	r1, r4, r6
  4047ce:	f046 0c01 	orr.w	ip, r6, #1
  4047d2:	f042 0601 	orr.w	r6, r2, #1
  4047d6:	f8c4 c004 	str.w	ip, [r4, #4]
  4047da:	4628      	mov	r0, r5
  4047dc:	6179      	str	r1, [r7, #20]
  4047de:	6139      	str	r1, [r7, #16]
  4047e0:	f8c1 e00c 	str.w	lr, [r1, #12]
  4047e4:	f8c1 e008 	str.w	lr, [r1, #8]
  4047e8:	604e      	str	r6, [r1, #4]
  4047ea:	50e2      	str	r2, [r4, r3]
  4047ec:	f000 f9f0 	bl	404bd0 <__malloc_unlock>
  4047f0:	3408      	adds	r4, #8
  4047f2:	e6dd      	b.n	4045b0 <_malloc_r+0x18c>
  4047f4:	687b      	ldr	r3, [r7, #4]
  4047f6:	e679      	b.n	4044ec <_malloc_r+0xc8>
  4047f8:	f108 0801 	add.w	r8, r8, #1
  4047fc:	f018 0f03 	tst.w	r8, #3
  404800:	f10c 0c08 	add.w	ip, ip, #8
  404804:	f47f ae85 	bne.w	404512 <_malloc_r+0xee>
  404808:	e02d      	b.n	404866 <_malloc_r+0x442>
  40480a:	68dc      	ldr	r4, [r3, #12]
  40480c:	42a3      	cmp	r3, r4
  40480e:	bf08      	it	eq
  404810:	3002      	addeq	r0, #2
  404812:	f43f ae3e 	beq.w	404492 <_malloc_r+0x6e>
  404816:	e6bb      	b.n	404590 <_malloc_r+0x16c>
  404818:	4419      	add	r1, r3
  40481a:	461c      	mov	r4, r3
  40481c:	684a      	ldr	r2, [r1, #4]
  40481e:	68db      	ldr	r3, [r3, #12]
  404820:	f854 6f08 	ldr.w	r6, [r4, #8]!
  404824:	f042 0201 	orr.w	r2, r2, #1
  404828:	604a      	str	r2, [r1, #4]
  40482a:	4628      	mov	r0, r5
  40482c:	60f3      	str	r3, [r6, #12]
  40482e:	609e      	str	r6, [r3, #8]
  404830:	f000 f9ce 	bl	404bd0 <__malloc_unlock>
  404834:	e6bc      	b.n	4045b0 <_malloc_r+0x18c>
  404836:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  40483a:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  40483e:	00c3      	lsls	r3, r0, #3
  404840:	e612      	b.n	404468 <_malloc_r+0x44>
  404842:	099a      	lsrs	r2, r3, #6
  404844:	f102 0139 	add.w	r1, r2, #57	; 0x39
  404848:	00c9      	lsls	r1, r1, #3
  40484a:	3238      	adds	r2, #56	; 0x38
  40484c:	e7a4      	b.n	404798 <_malloc_r+0x374>
  40484e:	42bc      	cmp	r4, r7
  404850:	d054      	beq.n	4048fc <_malloc_r+0x4d8>
  404852:	68bc      	ldr	r4, [r7, #8]
  404854:	6862      	ldr	r2, [r4, #4]
  404856:	f022 0203 	bic.w	r2, r2, #3
  40485a:	e75d      	b.n	404718 <_malloc_r+0x2f4>
  40485c:	f859 3908 	ldr.w	r3, [r9], #-8
  404860:	4599      	cmp	r9, r3
  404862:	f040 8086 	bne.w	404972 <_malloc_r+0x54e>
  404866:	f010 0f03 	tst.w	r0, #3
  40486a:	f100 30ff 	add.w	r0, r0, #4294967295
  40486e:	d1f5      	bne.n	40485c <_malloc_r+0x438>
  404870:	687b      	ldr	r3, [r7, #4]
  404872:	ea23 0304 	bic.w	r3, r3, r4
  404876:	607b      	str	r3, [r7, #4]
  404878:	0064      	lsls	r4, r4, #1
  40487a:	429c      	cmp	r4, r3
  40487c:	f63f aec7 	bhi.w	40460e <_malloc_r+0x1ea>
  404880:	2c00      	cmp	r4, #0
  404882:	f43f aec4 	beq.w	40460e <_malloc_r+0x1ea>
  404886:	421c      	tst	r4, r3
  404888:	4640      	mov	r0, r8
  40488a:	f47f ae3e 	bne.w	40450a <_malloc_r+0xe6>
  40488e:	0064      	lsls	r4, r4, #1
  404890:	421c      	tst	r4, r3
  404892:	f100 0004 	add.w	r0, r0, #4
  404896:	d0fa      	beq.n	40488e <_malloc_r+0x46a>
  404898:	e637      	b.n	40450a <_malloc_r+0xe6>
  40489a:	468c      	mov	ip, r1
  40489c:	e78c      	b.n	4047b8 <_malloc_r+0x394>
  40489e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  4048a2:	d815      	bhi.n	4048d0 <_malloc_r+0x4ac>
  4048a4:	0bf3      	lsrs	r3, r6, #15
  4048a6:	f103 0078 	add.w	r0, r3, #120	; 0x78
  4048aa:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  4048ae:	00c3      	lsls	r3, r0, #3
  4048b0:	e5da      	b.n	404468 <_malloc_r+0x44>
  4048b2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  4048b6:	e6ed      	b.n	404694 <_malloc_r+0x270>
  4048b8:	687b      	ldr	r3, [r7, #4]
  4048ba:	1092      	asrs	r2, r2, #2
  4048bc:	2101      	movs	r1, #1
  4048be:	fa01 f202 	lsl.w	r2, r1, r2
  4048c2:	4313      	orrs	r3, r2
  4048c4:	607b      	str	r3, [r7, #4]
  4048c6:	4662      	mov	r2, ip
  4048c8:	e779      	b.n	4047be <_malloc_r+0x39a>
  4048ca:	2301      	movs	r3, #1
  4048cc:	6053      	str	r3, [r2, #4]
  4048ce:	e729      	b.n	404724 <_malloc_r+0x300>
  4048d0:	f240 5254 	movw	r2, #1364	; 0x554
  4048d4:	4293      	cmp	r3, r2
  4048d6:	d822      	bhi.n	40491e <_malloc_r+0x4fa>
  4048d8:	0cb3      	lsrs	r3, r6, #18
  4048da:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  4048de:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  4048e2:	00c3      	lsls	r3, r0, #3
  4048e4:	e5c0      	b.n	404468 <_malloc_r+0x44>
  4048e6:	f103 0b10 	add.w	fp, r3, #16
  4048ea:	e6ae      	b.n	40464a <_malloc_r+0x226>
  4048ec:	2a54      	cmp	r2, #84	; 0x54
  4048ee:	d829      	bhi.n	404944 <_malloc_r+0x520>
  4048f0:	0b1a      	lsrs	r2, r3, #12
  4048f2:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  4048f6:	00c9      	lsls	r1, r1, #3
  4048f8:	326e      	adds	r2, #110	; 0x6e
  4048fa:	e74d      	b.n	404798 <_malloc_r+0x374>
  4048fc:	4b20      	ldr	r3, [pc, #128]	; (404980 <_malloc_r+0x55c>)
  4048fe:	6819      	ldr	r1, [r3, #0]
  404900:	4459      	add	r1, fp
  404902:	6019      	str	r1, [r3, #0]
  404904:	e6b2      	b.n	40466c <_malloc_r+0x248>
  404906:	f3ca 000b 	ubfx	r0, sl, #0, #12
  40490a:	2800      	cmp	r0, #0
  40490c:	f47f aeae 	bne.w	40466c <_malloc_r+0x248>
  404910:	eb08 030b 	add.w	r3, r8, fp
  404914:	68ba      	ldr	r2, [r7, #8]
  404916:	f043 0301 	orr.w	r3, r3, #1
  40491a:	6053      	str	r3, [r2, #4]
  40491c:	e6ee      	b.n	4046fc <_malloc_r+0x2d8>
  40491e:	207f      	movs	r0, #127	; 0x7f
  404920:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  404924:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  404928:	e59e      	b.n	404468 <_malloc_r+0x44>
  40492a:	f104 0108 	add.w	r1, r4, #8
  40492e:	4628      	mov	r0, r5
  404930:	9300      	str	r3, [sp, #0]
  404932:	f000 feb3 	bl	40569c <_free_r>
  404936:	9b00      	ldr	r3, [sp, #0]
  404938:	6819      	ldr	r1, [r3, #0]
  40493a:	e6df      	b.n	4046fc <_malloc_r+0x2d8>
  40493c:	2001      	movs	r0, #1
  40493e:	f04f 0900 	mov.w	r9, #0
  404942:	e6bc      	b.n	4046be <_malloc_r+0x29a>
  404944:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404948:	d805      	bhi.n	404956 <_malloc_r+0x532>
  40494a:	0bda      	lsrs	r2, r3, #15
  40494c:	f102 0178 	add.w	r1, r2, #120	; 0x78
  404950:	00c9      	lsls	r1, r1, #3
  404952:	3277      	adds	r2, #119	; 0x77
  404954:	e720      	b.n	404798 <_malloc_r+0x374>
  404956:	f240 5154 	movw	r1, #1364	; 0x554
  40495a:	428a      	cmp	r2, r1
  40495c:	d805      	bhi.n	40496a <_malloc_r+0x546>
  40495e:	0c9a      	lsrs	r2, r3, #18
  404960:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  404964:	00c9      	lsls	r1, r1, #3
  404966:	327c      	adds	r2, #124	; 0x7c
  404968:	e716      	b.n	404798 <_malloc_r+0x374>
  40496a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  40496e:	227e      	movs	r2, #126	; 0x7e
  404970:	e712      	b.n	404798 <_malloc_r+0x374>
  404972:	687b      	ldr	r3, [r7, #4]
  404974:	e780      	b.n	404878 <_malloc_r+0x454>
  404976:	08f0      	lsrs	r0, r6, #3
  404978:	f106 0308 	add.w	r3, r6, #8
  40497c:	e600      	b.n	404580 <_malloc_r+0x15c>
  40497e:	bf00      	nop
  404980:	20000a90 	.word	0x20000a90
	...

00404990 <memchr>:
  404990:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404994:	2a10      	cmp	r2, #16
  404996:	db2b      	blt.n	4049f0 <memchr+0x60>
  404998:	f010 0f07 	tst.w	r0, #7
  40499c:	d008      	beq.n	4049b0 <memchr+0x20>
  40499e:	f810 3b01 	ldrb.w	r3, [r0], #1
  4049a2:	3a01      	subs	r2, #1
  4049a4:	428b      	cmp	r3, r1
  4049a6:	d02d      	beq.n	404a04 <memchr+0x74>
  4049a8:	f010 0f07 	tst.w	r0, #7
  4049ac:	b342      	cbz	r2, 404a00 <memchr+0x70>
  4049ae:	d1f6      	bne.n	40499e <memchr+0xe>
  4049b0:	b4f0      	push	{r4, r5, r6, r7}
  4049b2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  4049b6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  4049ba:	f022 0407 	bic.w	r4, r2, #7
  4049be:	f07f 0700 	mvns.w	r7, #0
  4049c2:	2300      	movs	r3, #0
  4049c4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  4049c8:	3c08      	subs	r4, #8
  4049ca:	ea85 0501 	eor.w	r5, r5, r1
  4049ce:	ea86 0601 	eor.w	r6, r6, r1
  4049d2:	fa85 f547 	uadd8	r5, r5, r7
  4049d6:	faa3 f587 	sel	r5, r3, r7
  4049da:	fa86 f647 	uadd8	r6, r6, r7
  4049de:	faa5 f687 	sel	r6, r5, r7
  4049e2:	b98e      	cbnz	r6, 404a08 <memchr+0x78>
  4049e4:	d1ee      	bne.n	4049c4 <memchr+0x34>
  4049e6:	bcf0      	pop	{r4, r5, r6, r7}
  4049e8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4049ec:	f002 0207 	and.w	r2, r2, #7
  4049f0:	b132      	cbz	r2, 404a00 <memchr+0x70>
  4049f2:	f810 3b01 	ldrb.w	r3, [r0], #1
  4049f6:	3a01      	subs	r2, #1
  4049f8:	ea83 0301 	eor.w	r3, r3, r1
  4049fc:	b113      	cbz	r3, 404a04 <memchr+0x74>
  4049fe:	d1f8      	bne.n	4049f2 <memchr+0x62>
  404a00:	2000      	movs	r0, #0
  404a02:	4770      	bx	lr
  404a04:	3801      	subs	r0, #1
  404a06:	4770      	bx	lr
  404a08:	2d00      	cmp	r5, #0
  404a0a:	bf06      	itte	eq
  404a0c:	4635      	moveq	r5, r6
  404a0e:	3803      	subeq	r0, #3
  404a10:	3807      	subne	r0, #7
  404a12:	f015 0f01 	tst.w	r5, #1
  404a16:	d107      	bne.n	404a28 <memchr+0x98>
  404a18:	3001      	adds	r0, #1
  404a1a:	f415 7f80 	tst.w	r5, #256	; 0x100
  404a1e:	bf02      	ittt	eq
  404a20:	3001      	addeq	r0, #1
  404a22:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404a26:	3001      	addeq	r0, #1
  404a28:	bcf0      	pop	{r4, r5, r6, r7}
  404a2a:	3801      	subs	r0, #1
  404a2c:	4770      	bx	lr
  404a2e:	bf00      	nop

00404a30 <memcmp>:
  404a30:	2a03      	cmp	r2, #3
  404a32:	b470      	push	{r4, r5, r6}
  404a34:	d922      	bls.n	404a7c <memcmp+0x4c>
  404a36:	ea40 0301 	orr.w	r3, r0, r1
  404a3a:	079b      	lsls	r3, r3, #30
  404a3c:	d011      	beq.n	404a62 <memcmp+0x32>
  404a3e:	7803      	ldrb	r3, [r0, #0]
  404a40:	780c      	ldrb	r4, [r1, #0]
  404a42:	42a3      	cmp	r3, r4
  404a44:	d11d      	bne.n	404a82 <memcmp+0x52>
  404a46:	440a      	add	r2, r1
  404a48:	3101      	adds	r1, #1
  404a4a:	e005      	b.n	404a58 <memcmp+0x28>
  404a4c:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  404a50:	f811 4b01 	ldrb.w	r4, [r1], #1
  404a54:	42a3      	cmp	r3, r4
  404a56:	d114      	bne.n	404a82 <memcmp+0x52>
  404a58:	4291      	cmp	r1, r2
  404a5a:	d1f7      	bne.n	404a4c <memcmp+0x1c>
  404a5c:	2000      	movs	r0, #0
  404a5e:	bc70      	pop	{r4, r5, r6}
  404a60:	4770      	bx	lr
  404a62:	680d      	ldr	r5, [r1, #0]
  404a64:	6806      	ldr	r6, [r0, #0]
  404a66:	42ae      	cmp	r6, r5
  404a68:	460c      	mov	r4, r1
  404a6a:	4603      	mov	r3, r0
  404a6c:	f101 0104 	add.w	r1, r1, #4
  404a70:	f100 0004 	add.w	r0, r0, #4
  404a74:	d108      	bne.n	404a88 <memcmp+0x58>
  404a76:	3a04      	subs	r2, #4
  404a78:	2a03      	cmp	r2, #3
  404a7a:	d8f2      	bhi.n	404a62 <memcmp+0x32>
  404a7c:	2a00      	cmp	r2, #0
  404a7e:	d1de      	bne.n	404a3e <memcmp+0xe>
  404a80:	e7ec      	b.n	404a5c <memcmp+0x2c>
  404a82:	1b18      	subs	r0, r3, r4
  404a84:	bc70      	pop	{r4, r5, r6}
  404a86:	4770      	bx	lr
  404a88:	4621      	mov	r1, r4
  404a8a:	4618      	mov	r0, r3
  404a8c:	e7d7      	b.n	404a3e <memcmp+0xe>
  404a8e:	bf00      	nop

00404a90 <memcpy>:
  404a90:	4684      	mov	ip, r0
  404a92:	ea41 0300 	orr.w	r3, r1, r0
  404a96:	f013 0303 	ands.w	r3, r3, #3
  404a9a:	d16d      	bne.n	404b78 <memcpy+0xe8>
  404a9c:	3a40      	subs	r2, #64	; 0x40
  404a9e:	d341      	bcc.n	404b24 <memcpy+0x94>
  404aa0:	f851 3b04 	ldr.w	r3, [r1], #4
  404aa4:	f840 3b04 	str.w	r3, [r0], #4
  404aa8:	f851 3b04 	ldr.w	r3, [r1], #4
  404aac:	f840 3b04 	str.w	r3, [r0], #4
  404ab0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ab4:	f840 3b04 	str.w	r3, [r0], #4
  404ab8:	f851 3b04 	ldr.w	r3, [r1], #4
  404abc:	f840 3b04 	str.w	r3, [r0], #4
  404ac0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ac4:	f840 3b04 	str.w	r3, [r0], #4
  404ac8:	f851 3b04 	ldr.w	r3, [r1], #4
  404acc:	f840 3b04 	str.w	r3, [r0], #4
  404ad0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ad4:	f840 3b04 	str.w	r3, [r0], #4
  404ad8:	f851 3b04 	ldr.w	r3, [r1], #4
  404adc:	f840 3b04 	str.w	r3, [r0], #4
  404ae0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ae4:	f840 3b04 	str.w	r3, [r0], #4
  404ae8:	f851 3b04 	ldr.w	r3, [r1], #4
  404aec:	f840 3b04 	str.w	r3, [r0], #4
  404af0:	f851 3b04 	ldr.w	r3, [r1], #4
  404af4:	f840 3b04 	str.w	r3, [r0], #4
  404af8:	f851 3b04 	ldr.w	r3, [r1], #4
  404afc:	f840 3b04 	str.w	r3, [r0], #4
  404b00:	f851 3b04 	ldr.w	r3, [r1], #4
  404b04:	f840 3b04 	str.w	r3, [r0], #4
  404b08:	f851 3b04 	ldr.w	r3, [r1], #4
  404b0c:	f840 3b04 	str.w	r3, [r0], #4
  404b10:	f851 3b04 	ldr.w	r3, [r1], #4
  404b14:	f840 3b04 	str.w	r3, [r0], #4
  404b18:	f851 3b04 	ldr.w	r3, [r1], #4
  404b1c:	f840 3b04 	str.w	r3, [r0], #4
  404b20:	3a40      	subs	r2, #64	; 0x40
  404b22:	d2bd      	bcs.n	404aa0 <memcpy+0x10>
  404b24:	3230      	adds	r2, #48	; 0x30
  404b26:	d311      	bcc.n	404b4c <memcpy+0xbc>
  404b28:	f851 3b04 	ldr.w	r3, [r1], #4
  404b2c:	f840 3b04 	str.w	r3, [r0], #4
  404b30:	f851 3b04 	ldr.w	r3, [r1], #4
  404b34:	f840 3b04 	str.w	r3, [r0], #4
  404b38:	f851 3b04 	ldr.w	r3, [r1], #4
  404b3c:	f840 3b04 	str.w	r3, [r0], #4
  404b40:	f851 3b04 	ldr.w	r3, [r1], #4
  404b44:	f840 3b04 	str.w	r3, [r0], #4
  404b48:	3a10      	subs	r2, #16
  404b4a:	d2ed      	bcs.n	404b28 <memcpy+0x98>
  404b4c:	320c      	adds	r2, #12
  404b4e:	d305      	bcc.n	404b5c <memcpy+0xcc>
  404b50:	f851 3b04 	ldr.w	r3, [r1], #4
  404b54:	f840 3b04 	str.w	r3, [r0], #4
  404b58:	3a04      	subs	r2, #4
  404b5a:	d2f9      	bcs.n	404b50 <memcpy+0xc0>
  404b5c:	3204      	adds	r2, #4
  404b5e:	d008      	beq.n	404b72 <memcpy+0xe2>
  404b60:	07d2      	lsls	r2, r2, #31
  404b62:	bf1c      	itt	ne
  404b64:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404b68:	f800 3b01 	strbne.w	r3, [r0], #1
  404b6c:	d301      	bcc.n	404b72 <memcpy+0xe2>
  404b6e:	880b      	ldrh	r3, [r1, #0]
  404b70:	8003      	strh	r3, [r0, #0]
  404b72:	4660      	mov	r0, ip
  404b74:	4770      	bx	lr
  404b76:	bf00      	nop
  404b78:	2a08      	cmp	r2, #8
  404b7a:	d313      	bcc.n	404ba4 <memcpy+0x114>
  404b7c:	078b      	lsls	r3, r1, #30
  404b7e:	d08d      	beq.n	404a9c <memcpy+0xc>
  404b80:	f010 0303 	ands.w	r3, r0, #3
  404b84:	d08a      	beq.n	404a9c <memcpy+0xc>
  404b86:	f1c3 0304 	rsb	r3, r3, #4
  404b8a:	1ad2      	subs	r2, r2, r3
  404b8c:	07db      	lsls	r3, r3, #31
  404b8e:	bf1c      	itt	ne
  404b90:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404b94:	f800 3b01 	strbne.w	r3, [r0], #1
  404b98:	d380      	bcc.n	404a9c <memcpy+0xc>
  404b9a:	f831 3b02 	ldrh.w	r3, [r1], #2
  404b9e:	f820 3b02 	strh.w	r3, [r0], #2
  404ba2:	e77b      	b.n	404a9c <memcpy+0xc>
  404ba4:	3a04      	subs	r2, #4
  404ba6:	d3d9      	bcc.n	404b5c <memcpy+0xcc>
  404ba8:	3a01      	subs	r2, #1
  404baa:	f811 3b01 	ldrb.w	r3, [r1], #1
  404bae:	f800 3b01 	strb.w	r3, [r0], #1
  404bb2:	d2f9      	bcs.n	404ba8 <memcpy+0x118>
  404bb4:	780b      	ldrb	r3, [r1, #0]
  404bb6:	7003      	strb	r3, [r0, #0]
  404bb8:	784b      	ldrb	r3, [r1, #1]
  404bba:	7043      	strb	r3, [r0, #1]
  404bbc:	788b      	ldrb	r3, [r1, #2]
  404bbe:	7083      	strb	r3, [r0, #2]
  404bc0:	4660      	mov	r0, ip
  404bc2:	4770      	bx	lr

00404bc4 <__malloc_lock>:
  404bc4:	4801      	ldr	r0, [pc, #4]	; (404bcc <__malloc_lock+0x8>)
  404bc6:	f7ff bc29 	b.w	40441c <__retarget_lock_acquire_recursive>
  404bca:	bf00      	nop
  404bcc:	20019564 	.word	0x20019564

00404bd0 <__malloc_unlock>:
  404bd0:	4801      	ldr	r0, [pc, #4]	; (404bd8 <__malloc_unlock+0x8>)
  404bd2:	f7ff bc25 	b.w	404420 <__retarget_lock_release_recursive>
  404bd6:	bf00      	nop
  404bd8:	20019564 	.word	0x20019564

00404bdc <_Balloc>:
  404bdc:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404bde:	b570      	push	{r4, r5, r6, lr}
  404be0:	4605      	mov	r5, r0
  404be2:	460c      	mov	r4, r1
  404be4:	b14b      	cbz	r3, 404bfa <_Balloc+0x1e>
  404be6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  404bea:	b180      	cbz	r0, 404c0e <_Balloc+0x32>
  404bec:	6802      	ldr	r2, [r0, #0]
  404bee:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  404bf2:	2300      	movs	r3, #0
  404bf4:	6103      	str	r3, [r0, #16]
  404bf6:	60c3      	str	r3, [r0, #12]
  404bf8:	bd70      	pop	{r4, r5, r6, pc}
  404bfa:	2221      	movs	r2, #33	; 0x21
  404bfc:	2104      	movs	r1, #4
  404bfe:	f000 fccd 	bl	40559c <_calloc_r>
  404c02:	64e8      	str	r0, [r5, #76]	; 0x4c
  404c04:	4603      	mov	r3, r0
  404c06:	2800      	cmp	r0, #0
  404c08:	d1ed      	bne.n	404be6 <_Balloc+0xa>
  404c0a:	2000      	movs	r0, #0
  404c0c:	bd70      	pop	{r4, r5, r6, pc}
  404c0e:	2101      	movs	r1, #1
  404c10:	fa01 f604 	lsl.w	r6, r1, r4
  404c14:	1d72      	adds	r2, r6, #5
  404c16:	4628      	mov	r0, r5
  404c18:	0092      	lsls	r2, r2, #2
  404c1a:	f000 fcbf 	bl	40559c <_calloc_r>
  404c1e:	2800      	cmp	r0, #0
  404c20:	d0f3      	beq.n	404c0a <_Balloc+0x2e>
  404c22:	6044      	str	r4, [r0, #4]
  404c24:	6086      	str	r6, [r0, #8]
  404c26:	e7e4      	b.n	404bf2 <_Balloc+0x16>

00404c28 <_Bfree>:
  404c28:	b131      	cbz	r1, 404c38 <_Bfree+0x10>
  404c2a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404c2c:	684a      	ldr	r2, [r1, #4]
  404c2e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  404c32:	6008      	str	r0, [r1, #0]
  404c34:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  404c38:	4770      	bx	lr
  404c3a:	bf00      	nop

00404c3c <__multadd>:
  404c3c:	b5f0      	push	{r4, r5, r6, r7, lr}
  404c3e:	690c      	ldr	r4, [r1, #16]
  404c40:	b083      	sub	sp, #12
  404c42:	460d      	mov	r5, r1
  404c44:	4606      	mov	r6, r0
  404c46:	f101 0e14 	add.w	lr, r1, #20
  404c4a:	2700      	movs	r7, #0
  404c4c:	f8de 0000 	ldr.w	r0, [lr]
  404c50:	b281      	uxth	r1, r0
  404c52:	fb02 3301 	mla	r3, r2, r1, r3
  404c56:	0c01      	lsrs	r1, r0, #16
  404c58:	0c18      	lsrs	r0, r3, #16
  404c5a:	fb02 0101 	mla	r1, r2, r1, r0
  404c5e:	b29b      	uxth	r3, r3
  404c60:	3701      	adds	r7, #1
  404c62:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  404c66:	42bc      	cmp	r4, r7
  404c68:	f84e 3b04 	str.w	r3, [lr], #4
  404c6c:	ea4f 4311 	mov.w	r3, r1, lsr #16
  404c70:	dcec      	bgt.n	404c4c <__multadd+0x10>
  404c72:	b13b      	cbz	r3, 404c84 <__multadd+0x48>
  404c74:	68aa      	ldr	r2, [r5, #8]
  404c76:	4294      	cmp	r4, r2
  404c78:	da07      	bge.n	404c8a <__multadd+0x4e>
  404c7a:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  404c7e:	3401      	adds	r4, #1
  404c80:	6153      	str	r3, [r2, #20]
  404c82:	612c      	str	r4, [r5, #16]
  404c84:	4628      	mov	r0, r5
  404c86:	b003      	add	sp, #12
  404c88:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404c8a:	6869      	ldr	r1, [r5, #4]
  404c8c:	9301      	str	r3, [sp, #4]
  404c8e:	3101      	adds	r1, #1
  404c90:	4630      	mov	r0, r6
  404c92:	f7ff ffa3 	bl	404bdc <_Balloc>
  404c96:	692a      	ldr	r2, [r5, #16]
  404c98:	3202      	adds	r2, #2
  404c9a:	f105 010c 	add.w	r1, r5, #12
  404c9e:	4607      	mov	r7, r0
  404ca0:	0092      	lsls	r2, r2, #2
  404ca2:	300c      	adds	r0, #12
  404ca4:	f7ff fef4 	bl	404a90 <memcpy>
  404ca8:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  404caa:	6869      	ldr	r1, [r5, #4]
  404cac:	9b01      	ldr	r3, [sp, #4]
  404cae:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  404cb2:	6028      	str	r0, [r5, #0]
  404cb4:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  404cb8:	463d      	mov	r5, r7
  404cba:	e7de      	b.n	404c7a <__multadd+0x3e>

00404cbc <__hi0bits>:
  404cbc:	0c02      	lsrs	r2, r0, #16
  404cbe:	0412      	lsls	r2, r2, #16
  404cc0:	4603      	mov	r3, r0
  404cc2:	b9b2      	cbnz	r2, 404cf2 <__hi0bits+0x36>
  404cc4:	0403      	lsls	r3, r0, #16
  404cc6:	2010      	movs	r0, #16
  404cc8:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  404ccc:	bf04      	itt	eq
  404cce:	021b      	lsleq	r3, r3, #8
  404cd0:	3008      	addeq	r0, #8
  404cd2:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  404cd6:	bf04      	itt	eq
  404cd8:	011b      	lsleq	r3, r3, #4
  404cda:	3004      	addeq	r0, #4
  404cdc:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  404ce0:	bf04      	itt	eq
  404ce2:	009b      	lsleq	r3, r3, #2
  404ce4:	3002      	addeq	r0, #2
  404ce6:	2b00      	cmp	r3, #0
  404ce8:	db02      	blt.n	404cf0 <__hi0bits+0x34>
  404cea:	005b      	lsls	r3, r3, #1
  404cec:	d403      	bmi.n	404cf6 <__hi0bits+0x3a>
  404cee:	2020      	movs	r0, #32
  404cf0:	4770      	bx	lr
  404cf2:	2000      	movs	r0, #0
  404cf4:	e7e8      	b.n	404cc8 <__hi0bits+0xc>
  404cf6:	3001      	adds	r0, #1
  404cf8:	4770      	bx	lr
  404cfa:	bf00      	nop

00404cfc <__lo0bits>:
  404cfc:	6803      	ldr	r3, [r0, #0]
  404cfe:	f013 0207 	ands.w	r2, r3, #7
  404d02:	4601      	mov	r1, r0
  404d04:	d007      	beq.n	404d16 <__lo0bits+0x1a>
  404d06:	07da      	lsls	r2, r3, #31
  404d08:	d421      	bmi.n	404d4e <__lo0bits+0x52>
  404d0a:	0798      	lsls	r0, r3, #30
  404d0c:	d421      	bmi.n	404d52 <__lo0bits+0x56>
  404d0e:	089b      	lsrs	r3, r3, #2
  404d10:	600b      	str	r3, [r1, #0]
  404d12:	2002      	movs	r0, #2
  404d14:	4770      	bx	lr
  404d16:	b298      	uxth	r0, r3
  404d18:	b198      	cbz	r0, 404d42 <__lo0bits+0x46>
  404d1a:	4610      	mov	r0, r2
  404d1c:	f013 0fff 	tst.w	r3, #255	; 0xff
  404d20:	bf04      	itt	eq
  404d22:	0a1b      	lsreq	r3, r3, #8
  404d24:	3008      	addeq	r0, #8
  404d26:	071a      	lsls	r2, r3, #28
  404d28:	bf04      	itt	eq
  404d2a:	091b      	lsreq	r3, r3, #4
  404d2c:	3004      	addeq	r0, #4
  404d2e:	079a      	lsls	r2, r3, #30
  404d30:	bf04      	itt	eq
  404d32:	089b      	lsreq	r3, r3, #2
  404d34:	3002      	addeq	r0, #2
  404d36:	07da      	lsls	r2, r3, #31
  404d38:	d407      	bmi.n	404d4a <__lo0bits+0x4e>
  404d3a:	085b      	lsrs	r3, r3, #1
  404d3c:	d104      	bne.n	404d48 <__lo0bits+0x4c>
  404d3e:	2020      	movs	r0, #32
  404d40:	4770      	bx	lr
  404d42:	0c1b      	lsrs	r3, r3, #16
  404d44:	2010      	movs	r0, #16
  404d46:	e7e9      	b.n	404d1c <__lo0bits+0x20>
  404d48:	3001      	adds	r0, #1
  404d4a:	600b      	str	r3, [r1, #0]
  404d4c:	4770      	bx	lr
  404d4e:	2000      	movs	r0, #0
  404d50:	4770      	bx	lr
  404d52:	085b      	lsrs	r3, r3, #1
  404d54:	600b      	str	r3, [r1, #0]
  404d56:	2001      	movs	r0, #1
  404d58:	4770      	bx	lr
  404d5a:	bf00      	nop

00404d5c <__i2b>:
  404d5c:	b510      	push	{r4, lr}
  404d5e:	460c      	mov	r4, r1
  404d60:	2101      	movs	r1, #1
  404d62:	f7ff ff3b 	bl	404bdc <_Balloc>
  404d66:	2201      	movs	r2, #1
  404d68:	6144      	str	r4, [r0, #20]
  404d6a:	6102      	str	r2, [r0, #16]
  404d6c:	bd10      	pop	{r4, pc}
  404d6e:	bf00      	nop

00404d70 <__multiply>:
  404d70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404d74:	690c      	ldr	r4, [r1, #16]
  404d76:	6915      	ldr	r5, [r2, #16]
  404d78:	42ac      	cmp	r4, r5
  404d7a:	b083      	sub	sp, #12
  404d7c:	468b      	mov	fp, r1
  404d7e:	4616      	mov	r6, r2
  404d80:	da04      	bge.n	404d8c <__multiply+0x1c>
  404d82:	4622      	mov	r2, r4
  404d84:	46b3      	mov	fp, r6
  404d86:	462c      	mov	r4, r5
  404d88:	460e      	mov	r6, r1
  404d8a:	4615      	mov	r5, r2
  404d8c:	f8db 3008 	ldr.w	r3, [fp, #8]
  404d90:	f8db 1004 	ldr.w	r1, [fp, #4]
  404d94:	eb04 0805 	add.w	r8, r4, r5
  404d98:	4598      	cmp	r8, r3
  404d9a:	bfc8      	it	gt
  404d9c:	3101      	addgt	r1, #1
  404d9e:	f7ff ff1d 	bl	404bdc <_Balloc>
  404da2:	f100 0914 	add.w	r9, r0, #20
  404da6:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  404daa:	45d1      	cmp	r9, sl
  404dac:	9000      	str	r0, [sp, #0]
  404dae:	d205      	bcs.n	404dbc <__multiply+0x4c>
  404db0:	464b      	mov	r3, r9
  404db2:	2100      	movs	r1, #0
  404db4:	f843 1b04 	str.w	r1, [r3], #4
  404db8:	459a      	cmp	sl, r3
  404dba:	d8fb      	bhi.n	404db4 <__multiply+0x44>
  404dbc:	f106 0c14 	add.w	ip, r6, #20
  404dc0:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  404dc4:	f10b 0b14 	add.w	fp, fp, #20
  404dc8:	459c      	cmp	ip, r3
  404dca:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  404dce:	d24c      	bcs.n	404e6a <__multiply+0xfa>
  404dd0:	f8cd a004 	str.w	sl, [sp, #4]
  404dd4:	469a      	mov	sl, r3
  404dd6:	f8dc 5000 	ldr.w	r5, [ip]
  404dda:	b2af      	uxth	r7, r5
  404ddc:	b1ef      	cbz	r7, 404e1a <__multiply+0xaa>
  404dde:	2100      	movs	r1, #0
  404de0:	464d      	mov	r5, r9
  404de2:	465e      	mov	r6, fp
  404de4:	460c      	mov	r4, r1
  404de6:	f856 2b04 	ldr.w	r2, [r6], #4
  404dea:	6828      	ldr	r0, [r5, #0]
  404dec:	b293      	uxth	r3, r2
  404dee:	b281      	uxth	r1, r0
  404df0:	fb07 1303 	mla	r3, r7, r3, r1
  404df4:	0c12      	lsrs	r2, r2, #16
  404df6:	0c01      	lsrs	r1, r0, #16
  404df8:	4423      	add	r3, r4
  404dfa:	fb07 1102 	mla	r1, r7, r2, r1
  404dfe:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  404e02:	b29b      	uxth	r3, r3
  404e04:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  404e08:	45b6      	cmp	lr, r6
  404e0a:	f845 3b04 	str.w	r3, [r5], #4
  404e0e:	ea4f 4411 	mov.w	r4, r1, lsr #16
  404e12:	d8e8      	bhi.n	404de6 <__multiply+0x76>
  404e14:	602c      	str	r4, [r5, #0]
  404e16:	f8dc 5000 	ldr.w	r5, [ip]
  404e1a:	0c2d      	lsrs	r5, r5, #16
  404e1c:	d01d      	beq.n	404e5a <__multiply+0xea>
  404e1e:	f8d9 3000 	ldr.w	r3, [r9]
  404e22:	4648      	mov	r0, r9
  404e24:	461c      	mov	r4, r3
  404e26:	4659      	mov	r1, fp
  404e28:	2200      	movs	r2, #0
  404e2a:	880e      	ldrh	r6, [r1, #0]
  404e2c:	0c24      	lsrs	r4, r4, #16
  404e2e:	fb05 4406 	mla	r4, r5, r6, r4
  404e32:	4422      	add	r2, r4
  404e34:	b29b      	uxth	r3, r3
  404e36:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  404e3a:	f840 3b04 	str.w	r3, [r0], #4
  404e3e:	f851 3b04 	ldr.w	r3, [r1], #4
  404e42:	6804      	ldr	r4, [r0, #0]
  404e44:	0c1b      	lsrs	r3, r3, #16
  404e46:	b2a6      	uxth	r6, r4
  404e48:	fb05 6303 	mla	r3, r5, r3, r6
  404e4c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  404e50:	458e      	cmp	lr, r1
  404e52:	ea4f 4213 	mov.w	r2, r3, lsr #16
  404e56:	d8e8      	bhi.n	404e2a <__multiply+0xba>
  404e58:	6003      	str	r3, [r0, #0]
  404e5a:	f10c 0c04 	add.w	ip, ip, #4
  404e5e:	45e2      	cmp	sl, ip
  404e60:	f109 0904 	add.w	r9, r9, #4
  404e64:	d8b7      	bhi.n	404dd6 <__multiply+0x66>
  404e66:	f8dd a004 	ldr.w	sl, [sp, #4]
  404e6a:	f1b8 0f00 	cmp.w	r8, #0
  404e6e:	dd0b      	ble.n	404e88 <__multiply+0x118>
  404e70:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  404e74:	f1aa 0a04 	sub.w	sl, sl, #4
  404e78:	b11b      	cbz	r3, 404e82 <__multiply+0x112>
  404e7a:	e005      	b.n	404e88 <__multiply+0x118>
  404e7c:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  404e80:	b913      	cbnz	r3, 404e88 <__multiply+0x118>
  404e82:	f1b8 0801 	subs.w	r8, r8, #1
  404e86:	d1f9      	bne.n	404e7c <__multiply+0x10c>
  404e88:	9800      	ldr	r0, [sp, #0]
  404e8a:	f8c0 8010 	str.w	r8, [r0, #16]
  404e8e:	b003      	add	sp, #12
  404e90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404e94 <__pow5mult>:
  404e94:	f012 0303 	ands.w	r3, r2, #3
  404e98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404e9c:	4614      	mov	r4, r2
  404e9e:	4607      	mov	r7, r0
  404ea0:	d12e      	bne.n	404f00 <__pow5mult+0x6c>
  404ea2:	460d      	mov	r5, r1
  404ea4:	10a4      	asrs	r4, r4, #2
  404ea6:	d01c      	beq.n	404ee2 <__pow5mult+0x4e>
  404ea8:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  404eaa:	b396      	cbz	r6, 404f12 <__pow5mult+0x7e>
  404eac:	07e3      	lsls	r3, r4, #31
  404eae:	f04f 0800 	mov.w	r8, #0
  404eb2:	d406      	bmi.n	404ec2 <__pow5mult+0x2e>
  404eb4:	1064      	asrs	r4, r4, #1
  404eb6:	d014      	beq.n	404ee2 <__pow5mult+0x4e>
  404eb8:	6830      	ldr	r0, [r6, #0]
  404eba:	b1a8      	cbz	r0, 404ee8 <__pow5mult+0x54>
  404ebc:	4606      	mov	r6, r0
  404ebe:	07e3      	lsls	r3, r4, #31
  404ec0:	d5f8      	bpl.n	404eb4 <__pow5mult+0x20>
  404ec2:	4632      	mov	r2, r6
  404ec4:	4629      	mov	r1, r5
  404ec6:	4638      	mov	r0, r7
  404ec8:	f7ff ff52 	bl	404d70 <__multiply>
  404ecc:	b1b5      	cbz	r5, 404efc <__pow5mult+0x68>
  404ece:	686a      	ldr	r2, [r5, #4]
  404ed0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404ed2:	1064      	asrs	r4, r4, #1
  404ed4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404ed8:	6029      	str	r1, [r5, #0]
  404eda:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  404ede:	4605      	mov	r5, r0
  404ee0:	d1ea      	bne.n	404eb8 <__pow5mult+0x24>
  404ee2:	4628      	mov	r0, r5
  404ee4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404ee8:	4632      	mov	r2, r6
  404eea:	4631      	mov	r1, r6
  404eec:	4638      	mov	r0, r7
  404eee:	f7ff ff3f 	bl	404d70 <__multiply>
  404ef2:	6030      	str	r0, [r6, #0]
  404ef4:	f8c0 8000 	str.w	r8, [r0]
  404ef8:	4606      	mov	r6, r0
  404efa:	e7e0      	b.n	404ebe <__pow5mult+0x2a>
  404efc:	4605      	mov	r5, r0
  404efe:	e7d9      	b.n	404eb4 <__pow5mult+0x20>
  404f00:	1e5a      	subs	r2, r3, #1
  404f02:	4d0b      	ldr	r5, [pc, #44]	; (404f30 <__pow5mult+0x9c>)
  404f04:	2300      	movs	r3, #0
  404f06:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  404f0a:	f7ff fe97 	bl	404c3c <__multadd>
  404f0e:	4605      	mov	r5, r0
  404f10:	e7c8      	b.n	404ea4 <__pow5mult+0x10>
  404f12:	2101      	movs	r1, #1
  404f14:	4638      	mov	r0, r7
  404f16:	f7ff fe61 	bl	404bdc <_Balloc>
  404f1a:	f240 2171 	movw	r1, #625	; 0x271
  404f1e:	2201      	movs	r2, #1
  404f20:	2300      	movs	r3, #0
  404f22:	6141      	str	r1, [r0, #20]
  404f24:	6102      	str	r2, [r0, #16]
  404f26:	4606      	mov	r6, r0
  404f28:	64b8      	str	r0, [r7, #72]	; 0x48
  404f2a:	6003      	str	r3, [r0, #0]
  404f2c:	e7be      	b.n	404eac <__pow5mult+0x18>
  404f2e:	bf00      	nop
  404f30:	00407760 	.word	0x00407760

00404f34 <__lshift>:
  404f34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404f38:	4691      	mov	r9, r2
  404f3a:	690a      	ldr	r2, [r1, #16]
  404f3c:	688b      	ldr	r3, [r1, #8]
  404f3e:	ea4f 1469 	mov.w	r4, r9, asr #5
  404f42:	eb04 0802 	add.w	r8, r4, r2
  404f46:	f108 0501 	add.w	r5, r8, #1
  404f4a:	429d      	cmp	r5, r3
  404f4c:	460e      	mov	r6, r1
  404f4e:	4607      	mov	r7, r0
  404f50:	6849      	ldr	r1, [r1, #4]
  404f52:	dd04      	ble.n	404f5e <__lshift+0x2a>
  404f54:	005b      	lsls	r3, r3, #1
  404f56:	429d      	cmp	r5, r3
  404f58:	f101 0101 	add.w	r1, r1, #1
  404f5c:	dcfa      	bgt.n	404f54 <__lshift+0x20>
  404f5e:	4638      	mov	r0, r7
  404f60:	f7ff fe3c 	bl	404bdc <_Balloc>
  404f64:	2c00      	cmp	r4, #0
  404f66:	f100 0314 	add.w	r3, r0, #20
  404f6a:	dd06      	ble.n	404f7a <__lshift+0x46>
  404f6c:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  404f70:	2100      	movs	r1, #0
  404f72:	f843 1b04 	str.w	r1, [r3], #4
  404f76:	429a      	cmp	r2, r3
  404f78:	d1fb      	bne.n	404f72 <__lshift+0x3e>
  404f7a:	6934      	ldr	r4, [r6, #16]
  404f7c:	f106 0114 	add.w	r1, r6, #20
  404f80:	f019 091f 	ands.w	r9, r9, #31
  404f84:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  404f88:	d01d      	beq.n	404fc6 <__lshift+0x92>
  404f8a:	f1c9 0c20 	rsb	ip, r9, #32
  404f8e:	2200      	movs	r2, #0
  404f90:	680c      	ldr	r4, [r1, #0]
  404f92:	fa04 f409 	lsl.w	r4, r4, r9
  404f96:	4314      	orrs	r4, r2
  404f98:	f843 4b04 	str.w	r4, [r3], #4
  404f9c:	f851 2b04 	ldr.w	r2, [r1], #4
  404fa0:	458e      	cmp	lr, r1
  404fa2:	fa22 f20c 	lsr.w	r2, r2, ip
  404fa6:	d8f3      	bhi.n	404f90 <__lshift+0x5c>
  404fa8:	601a      	str	r2, [r3, #0]
  404faa:	b10a      	cbz	r2, 404fb0 <__lshift+0x7c>
  404fac:	f108 0502 	add.w	r5, r8, #2
  404fb0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404fb2:	6872      	ldr	r2, [r6, #4]
  404fb4:	3d01      	subs	r5, #1
  404fb6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404fba:	6105      	str	r5, [r0, #16]
  404fbc:	6031      	str	r1, [r6, #0]
  404fbe:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  404fc2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404fc6:	3b04      	subs	r3, #4
  404fc8:	f851 2b04 	ldr.w	r2, [r1], #4
  404fcc:	f843 2f04 	str.w	r2, [r3, #4]!
  404fd0:	458e      	cmp	lr, r1
  404fd2:	d8f9      	bhi.n	404fc8 <__lshift+0x94>
  404fd4:	e7ec      	b.n	404fb0 <__lshift+0x7c>
  404fd6:	bf00      	nop

00404fd8 <__mcmp>:
  404fd8:	b430      	push	{r4, r5}
  404fda:	690b      	ldr	r3, [r1, #16]
  404fdc:	4605      	mov	r5, r0
  404fde:	6900      	ldr	r0, [r0, #16]
  404fe0:	1ac0      	subs	r0, r0, r3
  404fe2:	d10f      	bne.n	405004 <__mcmp+0x2c>
  404fe4:	009b      	lsls	r3, r3, #2
  404fe6:	3514      	adds	r5, #20
  404fe8:	3114      	adds	r1, #20
  404fea:	4419      	add	r1, r3
  404fec:	442b      	add	r3, r5
  404fee:	e001      	b.n	404ff4 <__mcmp+0x1c>
  404ff0:	429d      	cmp	r5, r3
  404ff2:	d207      	bcs.n	405004 <__mcmp+0x2c>
  404ff4:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  404ff8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  404ffc:	4294      	cmp	r4, r2
  404ffe:	d0f7      	beq.n	404ff0 <__mcmp+0x18>
  405000:	d302      	bcc.n	405008 <__mcmp+0x30>
  405002:	2001      	movs	r0, #1
  405004:	bc30      	pop	{r4, r5}
  405006:	4770      	bx	lr
  405008:	f04f 30ff 	mov.w	r0, #4294967295
  40500c:	e7fa      	b.n	405004 <__mcmp+0x2c>
  40500e:	bf00      	nop

00405010 <__mdiff>:
  405010:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405014:	690f      	ldr	r7, [r1, #16]
  405016:	460e      	mov	r6, r1
  405018:	6911      	ldr	r1, [r2, #16]
  40501a:	1a7f      	subs	r7, r7, r1
  40501c:	2f00      	cmp	r7, #0
  40501e:	4690      	mov	r8, r2
  405020:	d117      	bne.n	405052 <__mdiff+0x42>
  405022:	0089      	lsls	r1, r1, #2
  405024:	f106 0514 	add.w	r5, r6, #20
  405028:	f102 0e14 	add.w	lr, r2, #20
  40502c:	186b      	adds	r3, r5, r1
  40502e:	4471      	add	r1, lr
  405030:	e001      	b.n	405036 <__mdiff+0x26>
  405032:	429d      	cmp	r5, r3
  405034:	d25c      	bcs.n	4050f0 <__mdiff+0xe0>
  405036:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  40503a:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  40503e:	42a2      	cmp	r2, r4
  405040:	d0f7      	beq.n	405032 <__mdiff+0x22>
  405042:	d25e      	bcs.n	405102 <__mdiff+0xf2>
  405044:	4633      	mov	r3, r6
  405046:	462c      	mov	r4, r5
  405048:	4646      	mov	r6, r8
  40504a:	4675      	mov	r5, lr
  40504c:	4698      	mov	r8, r3
  40504e:	2701      	movs	r7, #1
  405050:	e005      	b.n	40505e <__mdiff+0x4e>
  405052:	db58      	blt.n	405106 <__mdiff+0xf6>
  405054:	f106 0514 	add.w	r5, r6, #20
  405058:	f108 0414 	add.w	r4, r8, #20
  40505c:	2700      	movs	r7, #0
  40505e:	6871      	ldr	r1, [r6, #4]
  405060:	f7ff fdbc 	bl	404bdc <_Balloc>
  405064:	f8d8 3010 	ldr.w	r3, [r8, #16]
  405068:	6936      	ldr	r6, [r6, #16]
  40506a:	60c7      	str	r7, [r0, #12]
  40506c:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  405070:	46a6      	mov	lr, r4
  405072:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  405076:	f100 0414 	add.w	r4, r0, #20
  40507a:	2300      	movs	r3, #0
  40507c:	f85e 1b04 	ldr.w	r1, [lr], #4
  405080:	f855 8b04 	ldr.w	r8, [r5], #4
  405084:	b28a      	uxth	r2, r1
  405086:	fa13 f388 	uxtah	r3, r3, r8
  40508a:	0c09      	lsrs	r1, r1, #16
  40508c:	1a9a      	subs	r2, r3, r2
  40508e:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  405092:	eb03 4322 	add.w	r3, r3, r2, asr #16
  405096:	b292      	uxth	r2, r2
  405098:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  40509c:	45f4      	cmp	ip, lr
  40509e:	f844 2b04 	str.w	r2, [r4], #4
  4050a2:	ea4f 4323 	mov.w	r3, r3, asr #16
  4050a6:	d8e9      	bhi.n	40507c <__mdiff+0x6c>
  4050a8:	42af      	cmp	r7, r5
  4050aa:	d917      	bls.n	4050dc <__mdiff+0xcc>
  4050ac:	46a4      	mov	ip, r4
  4050ae:	46ae      	mov	lr, r5
  4050b0:	f85e 2b04 	ldr.w	r2, [lr], #4
  4050b4:	fa13 f382 	uxtah	r3, r3, r2
  4050b8:	1419      	asrs	r1, r3, #16
  4050ba:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  4050be:	b29b      	uxth	r3, r3
  4050c0:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  4050c4:	4577      	cmp	r7, lr
  4050c6:	f84c 2b04 	str.w	r2, [ip], #4
  4050ca:	ea4f 4321 	mov.w	r3, r1, asr #16
  4050ce:	d8ef      	bhi.n	4050b0 <__mdiff+0xa0>
  4050d0:	43ed      	mvns	r5, r5
  4050d2:	442f      	add	r7, r5
  4050d4:	f027 0703 	bic.w	r7, r7, #3
  4050d8:	3704      	adds	r7, #4
  4050da:	443c      	add	r4, r7
  4050dc:	3c04      	subs	r4, #4
  4050de:	b922      	cbnz	r2, 4050ea <__mdiff+0xda>
  4050e0:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  4050e4:	3e01      	subs	r6, #1
  4050e6:	2b00      	cmp	r3, #0
  4050e8:	d0fa      	beq.n	4050e0 <__mdiff+0xd0>
  4050ea:	6106      	str	r6, [r0, #16]
  4050ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4050f0:	2100      	movs	r1, #0
  4050f2:	f7ff fd73 	bl	404bdc <_Balloc>
  4050f6:	2201      	movs	r2, #1
  4050f8:	2300      	movs	r3, #0
  4050fa:	6102      	str	r2, [r0, #16]
  4050fc:	6143      	str	r3, [r0, #20]
  4050fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405102:	4674      	mov	r4, lr
  405104:	e7ab      	b.n	40505e <__mdiff+0x4e>
  405106:	4633      	mov	r3, r6
  405108:	f106 0414 	add.w	r4, r6, #20
  40510c:	f102 0514 	add.w	r5, r2, #20
  405110:	4616      	mov	r6, r2
  405112:	2701      	movs	r7, #1
  405114:	4698      	mov	r8, r3
  405116:	e7a2      	b.n	40505e <__mdiff+0x4e>

00405118 <__d2b>:
  405118:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40511c:	b082      	sub	sp, #8
  40511e:	2101      	movs	r1, #1
  405120:	461c      	mov	r4, r3
  405122:	f3c3 570a 	ubfx	r7, r3, #20, #11
  405126:	4615      	mov	r5, r2
  405128:	9e08      	ldr	r6, [sp, #32]
  40512a:	f7ff fd57 	bl	404bdc <_Balloc>
  40512e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  405132:	4680      	mov	r8, r0
  405134:	b10f      	cbz	r7, 40513a <__d2b+0x22>
  405136:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  40513a:	9401      	str	r4, [sp, #4]
  40513c:	b31d      	cbz	r5, 405186 <__d2b+0x6e>
  40513e:	a802      	add	r0, sp, #8
  405140:	f840 5d08 	str.w	r5, [r0, #-8]!
  405144:	f7ff fdda 	bl	404cfc <__lo0bits>
  405148:	2800      	cmp	r0, #0
  40514a:	d134      	bne.n	4051b6 <__d2b+0x9e>
  40514c:	e89d 000c 	ldmia.w	sp, {r2, r3}
  405150:	f8c8 2014 	str.w	r2, [r8, #20]
  405154:	2b00      	cmp	r3, #0
  405156:	bf0c      	ite	eq
  405158:	2101      	moveq	r1, #1
  40515a:	2102      	movne	r1, #2
  40515c:	f8c8 3018 	str.w	r3, [r8, #24]
  405160:	f8c8 1010 	str.w	r1, [r8, #16]
  405164:	b9df      	cbnz	r7, 40519e <__d2b+0x86>
  405166:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  40516a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  40516e:	6030      	str	r0, [r6, #0]
  405170:	6918      	ldr	r0, [r3, #16]
  405172:	f7ff fda3 	bl	404cbc <__hi0bits>
  405176:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405178:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  40517c:	6018      	str	r0, [r3, #0]
  40517e:	4640      	mov	r0, r8
  405180:	b002      	add	sp, #8
  405182:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405186:	a801      	add	r0, sp, #4
  405188:	f7ff fdb8 	bl	404cfc <__lo0bits>
  40518c:	9b01      	ldr	r3, [sp, #4]
  40518e:	f8c8 3014 	str.w	r3, [r8, #20]
  405192:	2101      	movs	r1, #1
  405194:	3020      	adds	r0, #32
  405196:	f8c8 1010 	str.w	r1, [r8, #16]
  40519a:	2f00      	cmp	r7, #0
  40519c:	d0e3      	beq.n	405166 <__d2b+0x4e>
  40519e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4051a0:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  4051a4:	4407      	add	r7, r0
  4051a6:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  4051aa:	6037      	str	r7, [r6, #0]
  4051ac:	6018      	str	r0, [r3, #0]
  4051ae:	4640      	mov	r0, r8
  4051b0:	b002      	add	sp, #8
  4051b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4051b6:	e89d 000a 	ldmia.w	sp, {r1, r3}
  4051ba:	f1c0 0220 	rsb	r2, r0, #32
  4051be:	fa03 f202 	lsl.w	r2, r3, r2
  4051c2:	430a      	orrs	r2, r1
  4051c4:	40c3      	lsrs	r3, r0
  4051c6:	9301      	str	r3, [sp, #4]
  4051c8:	f8c8 2014 	str.w	r2, [r8, #20]
  4051cc:	e7c2      	b.n	405154 <__d2b+0x3c>
  4051ce:	bf00      	nop

004051d0 <_sbrk_r>:
  4051d0:	b538      	push	{r3, r4, r5, lr}
  4051d2:	4c07      	ldr	r4, [pc, #28]	; (4051f0 <_sbrk_r+0x20>)
  4051d4:	2300      	movs	r3, #0
  4051d6:	4605      	mov	r5, r0
  4051d8:	4608      	mov	r0, r1
  4051da:	6023      	str	r3, [r4, #0]
  4051dc:	f7fc fb2c 	bl	401838 <_sbrk>
  4051e0:	1c43      	adds	r3, r0, #1
  4051e2:	d000      	beq.n	4051e6 <_sbrk_r+0x16>
  4051e4:	bd38      	pop	{r3, r4, r5, pc}
  4051e6:	6823      	ldr	r3, [r4, #0]
  4051e8:	2b00      	cmp	r3, #0
  4051ea:	d0fb      	beq.n	4051e4 <_sbrk_r+0x14>
  4051ec:	602b      	str	r3, [r5, #0]
  4051ee:	bd38      	pop	{r3, r4, r5, pc}
  4051f0:	20019578 	.word	0x20019578

004051f4 <strchr>:
  4051f4:	b2c9      	uxtb	r1, r1
  4051f6:	2900      	cmp	r1, #0
  4051f8:	d041      	beq.n	40527e <strchr+0x8a>
  4051fa:	0782      	lsls	r2, r0, #30
  4051fc:	b4f0      	push	{r4, r5, r6, r7}
  4051fe:	d067      	beq.n	4052d0 <strchr+0xdc>
  405200:	7803      	ldrb	r3, [r0, #0]
  405202:	2b00      	cmp	r3, #0
  405204:	d068      	beq.n	4052d8 <strchr+0xe4>
  405206:	4299      	cmp	r1, r3
  405208:	d037      	beq.n	40527a <strchr+0x86>
  40520a:	1c43      	adds	r3, r0, #1
  40520c:	e004      	b.n	405218 <strchr+0x24>
  40520e:	f813 0b01 	ldrb.w	r0, [r3], #1
  405212:	b390      	cbz	r0, 40527a <strchr+0x86>
  405214:	4281      	cmp	r1, r0
  405216:	d02f      	beq.n	405278 <strchr+0x84>
  405218:	079a      	lsls	r2, r3, #30
  40521a:	461c      	mov	r4, r3
  40521c:	d1f7      	bne.n	40520e <strchr+0x1a>
  40521e:	6825      	ldr	r5, [r4, #0]
  405220:	ea41 2301 	orr.w	r3, r1, r1, lsl #8
  405224:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
  405228:	ea83 0605 	eor.w	r6, r3, r5
  40522c:	f1a6 3001 	sub.w	r0, r6, #16843009	; 0x1010101
  405230:	f1a5 3201 	sub.w	r2, r5, #16843009	; 0x1010101
  405234:	ea20 0006 	bic.w	r0, r0, r6
  405238:	ea22 0205 	bic.w	r2, r2, r5
  40523c:	4302      	orrs	r2, r0
  40523e:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  405242:	d111      	bne.n	405268 <strchr+0x74>
  405244:	4620      	mov	r0, r4
  405246:	f850 6f04 	ldr.w	r6, [r0, #4]!
  40524a:	ea83 0706 	eor.w	r7, r3, r6
  40524e:	f1a7 3501 	sub.w	r5, r7, #16843009	; 0x1010101
  405252:	f1a6 3201 	sub.w	r2, r6, #16843009	; 0x1010101
  405256:	ea25 0507 	bic.w	r5, r5, r7
  40525a:	ea22 0206 	bic.w	r2, r2, r6
  40525e:	432a      	orrs	r2, r5
  405260:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  405264:	d0ef      	beq.n	405246 <strchr+0x52>
  405266:	4604      	mov	r4, r0
  405268:	7820      	ldrb	r0, [r4, #0]
  40526a:	b918      	cbnz	r0, 405274 <strchr+0x80>
  40526c:	e005      	b.n	40527a <strchr+0x86>
  40526e:	f814 0f01 	ldrb.w	r0, [r4, #1]!
  405272:	b110      	cbz	r0, 40527a <strchr+0x86>
  405274:	4281      	cmp	r1, r0
  405276:	d1fa      	bne.n	40526e <strchr+0x7a>
  405278:	4620      	mov	r0, r4
  40527a:	bcf0      	pop	{r4, r5, r6, r7}
  40527c:	4770      	bx	lr
  40527e:	0783      	lsls	r3, r0, #30
  405280:	d024      	beq.n	4052cc <strchr+0xd8>
  405282:	7803      	ldrb	r3, [r0, #0]
  405284:	2b00      	cmp	r3, #0
  405286:	d0f9      	beq.n	40527c <strchr+0x88>
  405288:	1c43      	adds	r3, r0, #1
  40528a:	e003      	b.n	405294 <strchr+0xa0>
  40528c:	7802      	ldrb	r2, [r0, #0]
  40528e:	3301      	adds	r3, #1
  405290:	2a00      	cmp	r2, #0
  405292:	d0f3      	beq.n	40527c <strchr+0x88>
  405294:	0799      	lsls	r1, r3, #30
  405296:	4618      	mov	r0, r3
  405298:	d1f8      	bne.n	40528c <strchr+0x98>
  40529a:	6819      	ldr	r1, [r3, #0]
  40529c:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  4052a0:	ea22 0201 	bic.w	r2, r2, r1
  4052a4:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  4052a8:	d108      	bne.n	4052bc <strchr+0xc8>
  4052aa:	f853 1f04 	ldr.w	r1, [r3, #4]!
  4052ae:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  4052b2:	ea22 0201 	bic.w	r2, r2, r1
  4052b6:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  4052ba:	d0f6      	beq.n	4052aa <strchr+0xb6>
  4052bc:	781a      	ldrb	r2, [r3, #0]
  4052be:	4618      	mov	r0, r3
  4052c0:	b142      	cbz	r2, 4052d4 <strchr+0xe0>
  4052c2:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  4052c6:	2b00      	cmp	r3, #0
  4052c8:	d1fb      	bne.n	4052c2 <strchr+0xce>
  4052ca:	4770      	bx	lr
  4052cc:	4603      	mov	r3, r0
  4052ce:	e7e4      	b.n	40529a <strchr+0xa6>
  4052d0:	4604      	mov	r4, r0
  4052d2:	e7a4      	b.n	40521e <strchr+0x2a>
  4052d4:	4618      	mov	r0, r3
  4052d6:	4770      	bx	lr
  4052d8:	4618      	mov	r0, r3
  4052da:	e7ce      	b.n	40527a <strchr+0x86>
	...

00405300 <strlen>:
  405300:	f890 f000 	pld	[r0]
  405304:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  405308:	f020 0107 	bic.w	r1, r0, #7
  40530c:	f06f 0c00 	mvn.w	ip, #0
  405310:	f010 0407 	ands.w	r4, r0, #7
  405314:	f891 f020 	pld	[r1, #32]
  405318:	f040 8049 	bne.w	4053ae <strlen+0xae>
  40531c:	f04f 0400 	mov.w	r4, #0
  405320:	f06f 0007 	mvn.w	r0, #7
  405324:	e9d1 2300 	ldrd	r2, r3, [r1]
  405328:	f891 f040 	pld	[r1, #64]	; 0x40
  40532c:	f100 0008 	add.w	r0, r0, #8
  405330:	fa82 f24c 	uadd8	r2, r2, ip
  405334:	faa4 f28c 	sel	r2, r4, ip
  405338:	fa83 f34c 	uadd8	r3, r3, ip
  40533c:	faa2 f38c 	sel	r3, r2, ip
  405340:	bb4b      	cbnz	r3, 405396 <strlen+0x96>
  405342:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  405346:	fa82 f24c 	uadd8	r2, r2, ip
  40534a:	f100 0008 	add.w	r0, r0, #8
  40534e:	faa4 f28c 	sel	r2, r4, ip
  405352:	fa83 f34c 	uadd8	r3, r3, ip
  405356:	faa2 f38c 	sel	r3, r2, ip
  40535a:	b9e3      	cbnz	r3, 405396 <strlen+0x96>
  40535c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  405360:	fa82 f24c 	uadd8	r2, r2, ip
  405364:	f100 0008 	add.w	r0, r0, #8
  405368:	faa4 f28c 	sel	r2, r4, ip
  40536c:	fa83 f34c 	uadd8	r3, r3, ip
  405370:	faa2 f38c 	sel	r3, r2, ip
  405374:	b97b      	cbnz	r3, 405396 <strlen+0x96>
  405376:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  40537a:	f101 0120 	add.w	r1, r1, #32
  40537e:	fa82 f24c 	uadd8	r2, r2, ip
  405382:	f100 0008 	add.w	r0, r0, #8
  405386:	faa4 f28c 	sel	r2, r4, ip
  40538a:	fa83 f34c 	uadd8	r3, r3, ip
  40538e:	faa2 f38c 	sel	r3, r2, ip
  405392:	2b00      	cmp	r3, #0
  405394:	d0c6      	beq.n	405324 <strlen+0x24>
  405396:	2a00      	cmp	r2, #0
  405398:	bf04      	itt	eq
  40539a:	3004      	addeq	r0, #4
  40539c:	461a      	moveq	r2, r3
  40539e:	ba12      	rev	r2, r2
  4053a0:	fab2 f282 	clz	r2, r2
  4053a4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4053a8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4053ac:	4770      	bx	lr
  4053ae:	e9d1 2300 	ldrd	r2, r3, [r1]
  4053b2:	f004 0503 	and.w	r5, r4, #3
  4053b6:	f1c4 0000 	rsb	r0, r4, #0
  4053ba:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4053be:	f014 0f04 	tst.w	r4, #4
  4053c2:	f891 f040 	pld	[r1, #64]	; 0x40
  4053c6:	fa0c f505 	lsl.w	r5, ip, r5
  4053ca:	ea62 0205 	orn	r2, r2, r5
  4053ce:	bf1c      	itt	ne
  4053d0:	ea63 0305 	ornne	r3, r3, r5
  4053d4:	4662      	movne	r2, ip
  4053d6:	f04f 0400 	mov.w	r4, #0
  4053da:	e7a9      	b.n	405330 <strlen+0x30>

004053dc <__ssprint_r>:
  4053dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4053e0:	6893      	ldr	r3, [r2, #8]
  4053e2:	b083      	sub	sp, #12
  4053e4:	4690      	mov	r8, r2
  4053e6:	2b00      	cmp	r3, #0
  4053e8:	d070      	beq.n	4054cc <__ssprint_r+0xf0>
  4053ea:	4682      	mov	sl, r0
  4053ec:	460c      	mov	r4, r1
  4053ee:	6817      	ldr	r7, [r2, #0]
  4053f0:	688d      	ldr	r5, [r1, #8]
  4053f2:	6808      	ldr	r0, [r1, #0]
  4053f4:	e042      	b.n	40547c <__ssprint_r+0xa0>
  4053f6:	89a3      	ldrh	r3, [r4, #12]
  4053f8:	f413 6f90 	tst.w	r3, #1152	; 0x480
  4053fc:	d02e      	beq.n	40545c <__ssprint_r+0x80>
  4053fe:	6965      	ldr	r5, [r4, #20]
  405400:	6921      	ldr	r1, [r4, #16]
  405402:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  405406:	eba0 0b01 	sub.w	fp, r0, r1
  40540a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40540e:	f10b 0001 	add.w	r0, fp, #1
  405412:	106d      	asrs	r5, r5, #1
  405414:	4430      	add	r0, r6
  405416:	42a8      	cmp	r0, r5
  405418:	462a      	mov	r2, r5
  40541a:	bf84      	itt	hi
  40541c:	4605      	movhi	r5, r0
  40541e:	462a      	movhi	r2, r5
  405420:	055b      	lsls	r3, r3, #21
  405422:	d538      	bpl.n	405496 <__ssprint_r+0xba>
  405424:	4611      	mov	r1, r2
  405426:	4650      	mov	r0, sl
  405428:	f7fe fffc 	bl	404424 <_malloc_r>
  40542c:	2800      	cmp	r0, #0
  40542e:	d03c      	beq.n	4054aa <__ssprint_r+0xce>
  405430:	465a      	mov	r2, fp
  405432:	6921      	ldr	r1, [r4, #16]
  405434:	9001      	str	r0, [sp, #4]
  405436:	f7ff fb2b 	bl	404a90 <memcpy>
  40543a:	89a2      	ldrh	r2, [r4, #12]
  40543c:	9b01      	ldr	r3, [sp, #4]
  40543e:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  405442:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  405446:	81a2      	strh	r2, [r4, #12]
  405448:	eba5 020b 	sub.w	r2, r5, fp
  40544c:	eb03 000b 	add.w	r0, r3, fp
  405450:	6165      	str	r5, [r4, #20]
  405452:	6123      	str	r3, [r4, #16]
  405454:	6020      	str	r0, [r4, #0]
  405456:	60a2      	str	r2, [r4, #8]
  405458:	4635      	mov	r5, r6
  40545a:	46b3      	mov	fp, r6
  40545c:	465a      	mov	r2, fp
  40545e:	4649      	mov	r1, r9
  405460:	f000 fa18 	bl	405894 <memmove>
  405464:	f8d8 3008 	ldr.w	r3, [r8, #8]
  405468:	68a2      	ldr	r2, [r4, #8]
  40546a:	6820      	ldr	r0, [r4, #0]
  40546c:	1b55      	subs	r5, r2, r5
  40546e:	4458      	add	r0, fp
  405470:	1b9e      	subs	r6, r3, r6
  405472:	60a5      	str	r5, [r4, #8]
  405474:	6020      	str	r0, [r4, #0]
  405476:	f8c8 6008 	str.w	r6, [r8, #8]
  40547a:	b33e      	cbz	r6, 4054cc <__ssprint_r+0xf0>
  40547c:	687e      	ldr	r6, [r7, #4]
  40547e:	463b      	mov	r3, r7
  405480:	3708      	adds	r7, #8
  405482:	2e00      	cmp	r6, #0
  405484:	d0fa      	beq.n	40547c <__ssprint_r+0xa0>
  405486:	42ae      	cmp	r6, r5
  405488:	f8d3 9000 	ldr.w	r9, [r3]
  40548c:	46ab      	mov	fp, r5
  40548e:	d2b2      	bcs.n	4053f6 <__ssprint_r+0x1a>
  405490:	4635      	mov	r5, r6
  405492:	46b3      	mov	fp, r6
  405494:	e7e2      	b.n	40545c <__ssprint_r+0x80>
  405496:	4650      	mov	r0, sl
  405498:	f000 fa60 	bl	40595c <_realloc_r>
  40549c:	4603      	mov	r3, r0
  40549e:	2800      	cmp	r0, #0
  4054a0:	d1d2      	bne.n	405448 <__ssprint_r+0x6c>
  4054a2:	6921      	ldr	r1, [r4, #16]
  4054a4:	4650      	mov	r0, sl
  4054a6:	f000 f8f9 	bl	40569c <_free_r>
  4054aa:	230c      	movs	r3, #12
  4054ac:	f8ca 3000 	str.w	r3, [sl]
  4054b0:	89a3      	ldrh	r3, [r4, #12]
  4054b2:	2200      	movs	r2, #0
  4054b4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4054b8:	f04f 30ff 	mov.w	r0, #4294967295
  4054bc:	81a3      	strh	r3, [r4, #12]
  4054be:	f8c8 2008 	str.w	r2, [r8, #8]
  4054c2:	f8c8 2004 	str.w	r2, [r8, #4]
  4054c6:	b003      	add	sp, #12
  4054c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4054cc:	2000      	movs	r0, #0
  4054ce:	f8c8 0004 	str.w	r0, [r8, #4]
  4054d2:	b003      	add	sp, #12
  4054d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

004054d8 <__register_exitproc>:
  4054d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4054dc:	4d2c      	ldr	r5, [pc, #176]	; (405590 <__register_exitproc+0xb8>)
  4054de:	4606      	mov	r6, r0
  4054e0:	6828      	ldr	r0, [r5, #0]
  4054e2:	4698      	mov	r8, r3
  4054e4:	460f      	mov	r7, r1
  4054e6:	4691      	mov	r9, r2
  4054e8:	f7fe ff98 	bl	40441c <__retarget_lock_acquire_recursive>
  4054ec:	4b29      	ldr	r3, [pc, #164]	; (405594 <__register_exitproc+0xbc>)
  4054ee:	681c      	ldr	r4, [r3, #0]
  4054f0:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  4054f4:	2b00      	cmp	r3, #0
  4054f6:	d03e      	beq.n	405576 <__register_exitproc+0x9e>
  4054f8:	685a      	ldr	r2, [r3, #4]
  4054fa:	2a1f      	cmp	r2, #31
  4054fc:	dc1c      	bgt.n	405538 <__register_exitproc+0x60>
  4054fe:	f102 0e01 	add.w	lr, r2, #1
  405502:	b176      	cbz	r6, 405522 <__register_exitproc+0x4a>
  405504:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  405508:	2401      	movs	r4, #1
  40550a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40550e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  405512:	4094      	lsls	r4, r2
  405514:	4320      	orrs	r0, r4
  405516:	2e02      	cmp	r6, #2
  405518:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40551c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  405520:	d023      	beq.n	40556a <__register_exitproc+0x92>
  405522:	3202      	adds	r2, #2
  405524:	f8c3 e004 	str.w	lr, [r3, #4]
  405528:	6828      	ldr	r0, [r5, #0]
  40552a:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  40552e:	f7fe ff77 	bl	404420 <__retarget_lock_release_recursive>
  405532:	2000      	movs	r0, #0
  405534:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405538:	4b17      	ldr	r3, [pc, #92]	; (405598 <__register_exitproc+0xc0>)
  40553a:	b30b      	cbz	r3, 405580 <__register_exitproc+0xa8>
  40553c:	f44f 70c8 	mov.w	r0, #400	; 0x190
  405540:	f3af 8000 	nop.w
  405544:	4603      	mov	r3, r0
  405546:	b1d8      	cbz	r0, 405580 <__register_exitproc+0xa8>
  405548:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  40554c:	6002      	str	r2, [r0, #0]
  40554e:	2100      	movs	r1, #0
  405550:	6041      	str	r1, [r0, #4]
  405552:	460a      	mov	r2, r1
  405554:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  405558:	f04f 0e01 	mov.w	lr, #1
  40555c:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  405560:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  405564:	2e00      	cmp	r6, #0
  405566:	d0dc      	beq.n	405522 <__register_exitproc+0x4a>
  405568:	e7cc      	b.n	405504 <__register_exitproc+0x2c>
  40556a:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  40556e:	430c      	orrs	r4, r1
  405570:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  405574:	e7d5      	b.n	405522 <__register_exitproc+0x4a>
  405576:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  40557a:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  40557e:	e7bb      	b.n	4054f8 <__register_exitproc+0x20>
  405580:	6828      	ldr	r0, [r5, #0]
  405582:	f7fe ff4d 	bl	404420 <__retarget_lock_release_recursive>
  405586:	f04f 30ff 	mov.w	r0, #4294967295
  40558a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40558e:	bf00      	nop
  405590:	20000440 	.word	0x20000440
  405594:	004075f8 	.word	0x004075f8
  405598:	00000000 	.word	0x00000000

0040559c <_calloc_r>:
  40559c:	b510      	push	{r4, lr}
  40559e:	fb02 f101 	mul.w	r1, r2, r1
  4055a2:	f7fe ff3f 	bl	404424 <_malloc_r>
  4055a6:	4604      	mov	r4, r0
  4055a8:	b1d8      	cbz	r0, 4055e2 <_calloc_r+0x46>
  4055aa:	f850 2c04 	ldr.w	r2, [r0, #-4]
  4055ae:	f022 0203 	bic.w	r2, r2, #3
  4055b2:	3a04      	subs	r2, #4
  4055b4:	2a24      	cmp	r2, #36	; 0x24
  4055b6:	d818      	bhi.n	4055ea <_calloc_r+0x4e>
  4055b8:	2a13      	cmp	r2, #19
  4055ba:	d914      	bls.n	4055e6 <_calloc_r+0x4a>
  4055bc:	2300      	movs	r3, #0
  4055be:	2a1b      	cmp	r2, #27
  4055c0:	6003      	str	r3, [r0, #0]
  4055c2:	6043      	str	r3, [r0, #4]
  4055c4:	d916      	bls.n	4055f4 <_calloc_r+0x58>
  4055c6:	2a24      	cmp	r2, #36	; 0x24
  4055c8:	6083      	str	r3, [r0, #8]
  4055ca:	60c3      	str	r3, [r0, #12]
  4055cc:	bf11      	iteee	ne
  4055ce:	f100 0210 	addne.w	r2, r0, #16
  4055d2:	6103      	streq	r3, [r0, #16]
  4055d4:	6143      	streq	r3, [r0, #20]
  4055d6:	f100 0218 	addeq.w	r2, r0, #24
  4055da:	2300      	movs	r3, #0
  4055dc:	6013      	str	r3, [r2, #0]
  4055de:	6053      	str	r3, [r2, #4]
  4055e0:	6093      	str	r3, [r2, #8]
  4055e2:	4620      	mov	r0, r4
  4055e4:	bd10      	pop	{r4, pc}
  4055e6:	4602      	mov	r2, r0
  4055e8:	e7f7      	b.n	4055da <_calloc_r+0x3e>
  4055ea:	2100      	movs	r1, #0
  4055ec:	f7fc fa1a 	bl	401a24 <memset>
  4055f0:	4620      	mov	r0, r4
  4055f2:	bd10      	pop	{r4, pc}
  4055f4:	f100 0208 	add.w	r2, r0, #8
  4055f8:	e7ef      	b.n	4055da <_calloc_r+0x3e>
  4055fa:	bf00      	nop

004055fc <_malloc_trim_r>:
  4055fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4055fe:	4f24      	ldr	r7, [pc, #144]	; (405690 <_malloc_trim_r+0x94>)
  405600:	460c      	mov	r4, r1
  405602:	4606      	mov	r6, r0
  405604:	f7ff fade 	bl	404bc4 <__malloc_lock>
  405608:	68bb      	ldr	r3, [r7, #8]
  40560a:	685d      	ldr	r5, [r3, #4]
  40560c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  405610:	310f      	adds	r1, #15
  405612:	f025 0503 	bic.w	r5, r5, #3
  405616:	4429      	add	r1, r5
  405618:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40561c:	f021 010f 	bic.w	r1, r1, #15
  405620:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  405624:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  405628:	db07      	blt.n	40563a <_malloc_trim_r+0x3e>
  40562a:	2100      	movs	r1, #0
  40562c:	4630      	mov	r0, r6
  40562e:	f7ff fdcf 	bl	4051d0 <_sbrk_r>
  405632:	68bb      	ldr	r3, [r7, #8]
  405634:	442b      	add	r3, r5
  405636:	4298      	cmp	r0, r3
  405638:	d004      	beq.n	405644 <_malloc_trim_r+0x48>
  40563a:	4630      	mov	r0, r6
  40563c:	f7ff fac8 	bl	404bd0 <__malloc_unlock>
  405640:	2000      	movs	r0, #0
  405642:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405644:	4261      	negs	r1, r4
  405646:	4630      	mov	r0, r6
  405648:	f7ff fdc2 	bl	4051d0 <_sbrk_r>
  40564c:	3001      	adds	r0, #1
  40564e:	d00d      	beq.n	40566c <_malloc_trim_r+0x70>
  405650:	4b10      	ldr	r3, [pc, #64]	; (405694 <_malloc_trim_r+0x98>)
  405652:	68ba      	ldr	r2, [r7, #8]
  405654:	6819      	ldr	r1, [r3, #0]
  405656:	1b2d      	subs	r5, r5, r4
  405658:	f045 0501 	orr.w	r5, r5, #1
  40565c:	4630      	mov	r0, r6
  40565e:	1b09      	subs	r1, r1, r4
  405660:	6055      	str	r5, [r2, #4]
  405662:	6019      	str	r1, [r3, #0]
  405664:	f7ff fab4 	bl	404bd0 <__malloc_unlock>
  405668:	2001      	movs	r0, #1
  40566a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40566c:	2100      	movs	r1, #0
  40566e:	4630      	mov	r0, r6
  405670:	f7ff fdae 	bl	4051d0 <_sbrk_r>
  405674:	68ba      	ldr	r2, [r7, #8]
  405676:	1a83      	subs	r3, r0, r2
  405678:	2b0f      	cmp	r3, #15
  40567a:	ddde      	ble.n	40563a <_malloc_trim_r+0x3e>
  40567c:	4c06      	ldr	r4, [pc, #24]	; (405698 <_malloc_trim_r+0x9c>)
  40567e:	4905      	ldr	r1, [pc, #20]	; (405694 <_malloc_trim_r+0x98>)
  405680:	6824      	ldr	r4, [r4, #0]
  405682:	f043 0301 	orr.w	r3, r3, #1
  405686:	1b00      	subs	r0, r0, r4
  405688:	6053      	str	r3, [r2, #4]
  40568a:	6008      	str	r0, [r1, #0]
  40568c:	e7d5      	b.n	40563a <_malloc_trim_r+0x3e>
  40568e:	bf00      	nop
  405690:	20000444 	.word	0x20000444
  405694:	20000a90 	.word	0x20000a90
  405698:	2000084c 	.word	0x2000084c

0040569c <_free_r>:
  40569c:	2900      	cmp	r1, #0
  40569e:	d044      	beq.n	40572a <_free_r+0x8e>
  4056a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4056a4:	460d      	mov	r5, r1
  4056a6:	4680      	mov	r8, r0
  4056a8:	f7ff fa8c 	bl	404bc4 <__malloc_lock>
  4056ac:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4056b0:	4969      	ldr	r1, [pc, #420]	; (405858 <_free_r+0x1bc>)
  4056b2:	f027 0301 	bic.w	r3, r7, #1
  4056b6:	f1a5 0408 	sub.w	r4, r5, #8
  4056ba:	18e2      	adds	r2, r4, r3
  4056bc:	688e      	ldr	r6, [r1, #8]
  4056be:	6850      	ldr	r0, [r2, #4]
  4056c0:	42b2      	cmp	r2, r6
  4056c2:	f020 0003 	bic.w	r0, r0, #3
  4056c6:	d05e      	beq.n	405786 <_free_r+0xea>
  4056c8:	07fe      	lsls	r6, r7, #31
  4056ca:	6050      	str	r0, [r2, #4]
  4056cc:	d40b      	bmi.n	4056e6 <_free_r+0x4a>
  4056ce:	f855 7c08 	ldr.w	r7, [r5, #-8]
  4056d2:	1be4      	subs	r4, r4, r7
  4056d4:	f101 0e08 	add.w	lr, r1, #8
  4056d8:	68a5      	ldr	r5, [r4, #8]
  4056da:	4575      	cmp	r5, lr
  4056dc:	443b      	add	r3, r7
  4056de:	d06d      	beq.n	4057bc <_free_r+0x120>
  4056e0:	68e7      	ldr	r7, [r4, #12]
  4056e2:	60ef      	str	r7, [r5, #12]
  4056e4:	60bd      	str	r5, [r7, #8]
  4056e6:	1815      	adds	r5, r2, r0
  4056e8:	686d      	ldr	r5, [r5, #4]
  4056ea:	07ed      	lsls	r5, r5, #31
  4056ec:	d53e      	bpl.n	40576c <_free_r+0xd0>
  4056ee:	f043 0201 	orr.w	r2, r3, #1
  4056f2:	6062      	str	r2, [r4, #4]
  4056f4:	50e3      	str	r3, [r4, r3]
  4056f6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4056fa:	d217      	bcs.n	40572c <_free_r+0x90>
  4056fc:	08db      	lsrs	r3, r3, #3
  4056fe:	1c58      	adds	r0, r3, #1
  405700:	109a      	asrs	r2, r3, #2
  405702:	684d      	ldr	r5, [r1, #4]
  405704:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  405708:	60a7      	str	r7, [r4, #8]
  40570a:	2301      	movs	r3, #1
  40570c:	4093      	lsls	r3, r2
  40570e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  405712:	432b      	orrs	r3, r5
  405714:	3a08      	subs	r2, #8
  405716:	60e2      	str	r2, [r4, #12]
  405718:	604b      	str	r3, [r1, #4]
  40571a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40571e:	60fc      	str	r4, [r7, #12]
  405720:	4640      	mov	r0, r8
  405722:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405726:	f7ff ba53 	b.w	404bd0 <__malloc_unlock>
  40572a:	4770      	bx	lr
  40572c:	0a5a      	lsrs	r2, r3, #9
  40572e:	2a04      	cmp	r2, #4
  405730:	d852      	bhi.n	4057d8 <_free_r+0x13c>
  405732:	099a      	lsrs	r2, r3, #6
  405734:	f102 0739 	add.w	r7, r2, #57	; 0x39
  405738:	00ff      	lsls	r7, r7, #3
  40573a:	f102 0538 	add.w	r5, r2, #56	; 0x38
  40573e:	19c8      	adds	r0, r1, r7
  405740:	59ca      	ldr	r2, [r1, r7]
  405742:	3808      	subs	r0, #8
  405744:	4290      	cmp	r0, r2
  405746:	d04f      	beq.n	4057e8 <_free_r+0x14c>
  405748:	6851      	ldr	r1, [r2, #4]
  40574a:	f021 0103 	bic.w	r1, r1, #3
  40574e:	428b      	cmp	r3, r1
  405750:	d232      	bcs.n	4057b8 <_free_r+0x11c>
  405752:	6892      	ldr	r2, [r2, #8]
  405754:	4290      	cmp	r0, r2
  405756:	d1f7      	bne.n	405748 <_free_r+0xac>
  405758:	68c3      	ldr	r3, [r0, #12]
  40575a:	60a0      	str	r0, [r4, #8]
  40575c:	60e3      	str	r3, [r4, #12]
  40575e:	609c      	str	r4, [r3, #8]
  405760:	60c4      	str	r4, [r0, #12]
  405762:	4640      	mov	r0, r8
  405764:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405768:	f7ff ba32 	b.w	404bd0 <__malloc_unlock>
  40576c:	6895      	ldr	r5, [r2, #8]
  40576e:	4f3b      	ldr	r7, [pc, #236]	; (40585c <_free_r+0x1c0>)
  405770:	42bd      	cmp	r5, r7
  405772:	4403      	add	r3, r0
  405774:	d040      	beq.n	4057f8 <_free_r+0x15c>
  405776:	68d0      	ldr	r0, [r2, #12]
  405778:	60e8      	str	r0, [r5, #12]
  40577a:	f043 0201 	orr.w	r2, r3, #1
  40577e:	6085      	str	r5, [r0, #8]
  405780:	6062      	str	r2, [r4, #4]
  405782:	50e3      	str	r3, [r4, r3]
  405784:	e7b7      	b.n	4056f6 <_free_r+0x5a>
  405786:	07ff      	lsls	r7, r7, #31
  405788:	4403      	add	r3, r0
  40578a:	d407      	bmi.n	40579c <_free_r+0x100>
  40578c:	f855 2c08 	ldr.w	r2, [r5, #-8]
  405790:	1aa4      	subs	r4, r4, r2
  405792:	4413      	add	r3, r2
  405794:	68a0      	ldr	r0, [r4, #8]
  405796:	68e2      	ldr	r2, [r4, #12]
  405798:	60c2      	str	r2, [r0, #12]
  40579a:	6090      	str	r0, [r2, #8]
  40579c:	4a30      	ldr	r2, [pc, #192]	; (405860 <_free_r+0x1c4>)
  40579e:	6812      	ldr	r2, [r2, #0]
  4057a0:	f043 0001 	orr.w	r0, r3, #1
  4057a4:	4293      	cmp	r3, r2
  4057a6:	6060      	str	r0, [r4, #4]
  4057a8:	608c      	str	r4, [r1, #8]
  4057aa:	d3b9      	bcc.n	405720 <_free_r+0x84>
  4057ac:	4b2d      	ldr	r3, [pc, #180]	; (405864 <_free_r+0x1c8>)
  4057ae:	4640      	mov	r0, r8
  4057b0:	6819      	ldr	r1, [r3, #0]
  4057b2:	f7ff ff23 	bl	4055fc <_malloc_trim_r>
  4057b6:	e7b3      	b.n	405720 <_free_r+0x84>
  4057b8:	4610      	mov	r0, r2
  4057ba:	e7cd      	b.n	405758 <_free_r+0xbc>
  4057bc:	1811      	adds	r1, r2, r0
  4057be:	6849      	ldr	r1, [r1, #4]
  4057c0:	07c9      	lsls	r1, r1, #31
  4057c2:	d444      	bmi.n	40584e <_free_r+0x1b2>
  4057c4:	6891      	ldr	r1, [r2, #8]
  4057c6:	68d2      	ldr	r2, [r2, #12]
  4057c8:	60ca      	str	r2, [r1, #12]
  4057ca:	4403      	add	r3, r0
  4057cc:	f043 0001 	orr.w	r0, r3, #1
  4057d0:	6091      	str	r1, [r2, #8]
  4057d2:	6060      	str	r0, [r4, #4]
  4057d4:	50e3      	str	r3, [r4, r3]
  4057d6:	e7a3      	b.n	405720 <_free_r+0x84>
  4057d8:	2a14      	cmp	r2, #20
  4057da:	d816      	bhi.n	40580a <_free_r+0x16e>
  4057dc:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  4057e0:	00ff      	lsls	r7, r7, #3
  4057e2:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  4057e6:	e7aa      	b.n	40573e <_free_r+0xa2>
  4057e8:	10aa      	asrs	r2, r5, #2
  4057ea:	2301      	movs	r3, #1
  4057ec:	684d      	ldr	r5, [r1, #4]
  4057ee:	4093      	lsls	r3, r2
  4057f0:	432b      	orrs	r3, r5
  4057f2:	604b      	str	r3, [r1, #4]
  4057f4:	4603      	mov	r3, r0
  4057f6:	e7b0      	b.n	40575a <_free_r+0xbe>
  4057f8:	f043 0201 	orr.w	r2, r3, #1
  4057fc:	614c      	str	r4, [r1, #20]
  4057fe:	610c      	str	r4, [r1, #16]
  405800:	60e5      	str	r5, [r4, #12]
  405802:	60a5      	str	r5, [r4, #8]
  405804:	6062      	str	r2, [r4, #4]
  405806:	50e3      	str	r3, [r4, r3]
  405808:	e78a      	b.n	405720 <_free_r+0x84>
  40580a:	2a54      	cmp	r2, #84	; 0x54
  40580c:	d806      	bhi.n	40581c <_free_r+0x180>
  40580e:	0b1a      	lsrs	r2, r3, #12
  405810:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405814:	00ff      	lsls	r7, r7, #3
  405816:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40581a:	e790      	b.n	40573e <_free_r+0xa2>
  40581c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405820:	d806      	bhi.n	405830 <_free_r+0x194>
  405822:	0bda      	lsrs	r2, r3, #15
  405824:	f102 0778 	add.w	r7, r2, #120	; 0x78
  405828:	00ff      	lsls	r7, r7, #3
  40582a:	f102 0577 	add.w	r5, r2, #119	; 0x77
  40582e:	e786      	b.n	40573e <_free_r+0xa2>
  405830:	f240 5054 	movw	r0, #1364	; 0x554
  405834:	4282      	cmp	r2, r0
  405836:	d806      	bhi.n	405846 <_free_r+0x1aa>
  405838:	0c9a      	lsrs	r2, r3, #18
  40583a:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40583e:	00ff      	lsls	r7, r7, #3
  405840:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  405844:	e77b      	b.n	40573e <_free_r+0xa2>
  405846:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  40584a:	257e      	movs	r5, #126	; 0x7e
  40584c:	e777      	b.n	40573e <_free_r+0xa2>
  40584e:	f043 0101 	orr.w	r1, r3, #1
  405852:	6061      	str	r1, [r4, #4]
  405854:	6013      	str	r3, [r2, #0]
  405856:	e763      	b.n	405720 <_free_r+0x84>
  405858:	20000444 	.word	0x20000444
  40585c:	2000044c 	.word	0x2000044c
  405860:	20000850 	.word	0x20000850
  405864:	20000ac0 	.word	0x20000ac0

00405868 <__ascii_mbtowc>:
  405868:	b082      	sub	sp, #8
  40586a:	b149      	cbz	r1, 405880 <__ascii_mbtowc+0x18>
  40586c:	b15a      	cbz	r2, 405886 <__ascii_mbtowc+0x1e>
  40586e:	b16b      	cbz	r3, 40588c <__ascii_mbtowc+0x24>
  405870:	7813      	ldrb	r3, [r2, #0]
  405872:	600b      	str	r3, [r1, #0]
  405874:	7812      	ldrb	r2, [r2, #0]
  405876:	1c10      	adds	r0, r2, #0
  405878:	bf18      	it	ne
  40587a:	2001      	movne	r0, #1
  40587c:	b002      	add	sp, #8
  40587e:	4770      	bx	lr
  405880:	a901      	add	r1, sp, #4
  405882:	2a00      	cmp	r2, #0
  405884:	d1f3      	bne.n	40586e <__ascii_mbtowc+0x6>
  405886:	4610      	mov	r0, r2
  405888:	b002      	add	sp, #8
  40588a:	4770      	bx	lr
  40588c:	f06f 0001 	mvn.w	r0, #1
  405890:	e7f4      	b.n	40587c <__ascii_mbtowc+0x14>
  405892:	bf00      	nop

00405894 <memmove>:
  405894:	4288      	cmp	r0, r1
  405896:	b5f0      	push	{r4, r5, r6, r7, lr}
  405898:	d90d      	bls.n	4058b6 <memmove+0x22>
  40589a:	188b      	adds	r3, r1, r2
  40589c:	4298      	cmp	r0, r3
  40589e:	d20a      	bcs.n	4058b6 <memmove+0x22>
  4058a0:	1884      	adds	r4, r0, r2
  4058a2:	2a00      	cmp	r2, #0
  4058a4:	d051      	beq.n	40594a <memmove+0xb6>
  4058a6:	4622      	mov	r2, r4
  4058a8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  4058ac:	f802 4d01 	strb.w	r4, [r2, #-1]!
  4058b0:	4299      	cmp	r1, r3
  4058b2:	d1f9      	bne.n	4058a8 <memmove+0x14>
  4058b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4058b6:	2a0f      	cmp	r2, #15
  4058b8:	d948      	bls.n	40594c <memmove+0xb8>
  4058ba:	ea41 0300 	orr.w	r3, r1, r0
  4058be:	079b      	lsls	r3, r3, #30
  4058c0:	d146      	bne.n	405950 <memmove+0xbc>
  4058c2:	f100 0410 	add.w	r4, r0, #16
  4058c6:	f101 0310 	add.w	r3, r1, #16
  4058ca:	4615      	mov	r5, r2
  4058cc:	f853 6c10 	ldr.w	r6, [r3, #-16]
  4058d0:	f844 6c10 	str.w	r6, [r4, #-16]
  4058d4:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  4058d8:	f844 6c0c 	str.w	r6, [r4, #-12]
  4058dc:	f853 6c08 	ldr.w	r6, [r3, #-8]
  4058e0:	f844 6c08 	str.w	r6, [r4, #-8]
  4058e4:	3d10      	subs	r5, #16
  4058e6:	f853 6c04 	ldr.w	r6, [r3, #-4]
  4058ea:	f844 6c04 	str.w	r6, [r4, #-4]
  4058ee:	2d0f      	cmp	r5, #15
  4058f0:	f103 0310 	add.w	r3, r3, #16
  4058f4:	f104 0410 	add.w	r4, r4, #16
  4058f8:	d8e8      	bhi.n	4058cc <memmove+0x38>
  4058fa:	f1a2 0310 	sub.w	r3, r2, #16
  4058fe:	f023 030f 	bic.w	r3, r3, #15
  405902:	f002 0e0f 	and.w	lr, r2, #15
  405906:	3310      	adds	r3, #16
  405908:	f1be 0f03 	cmp.w	lr, #3
  40590c:	4419      	add	r1, r3
  40590e:	4403      	add	r3, r0
  405910:	d921      	bls.n	405956 <memmove+0xc2>
  405912:	1f1e      	subs	r6, r3, #4
  405914:	460d      	mov	r5, r1
  405916:	4674      	mov	r4, lr
  405918:	3c04      	subs	r4, #4
  40591a:	f855 7b04 	ldr.w	r7, [r5], #4
  40591e:	f846 7f04 	str.w	r7, [r6, #4]!
  405922:	2c03      	cmp	r4, #3
  405924:	d8f8      	bhi.n	405918 <memmove+0x84>
  405926:	f1ae 0404 	sub.w	r4, lr, #4
  40592a:	f024 0403 	bic.w	r4, r4, #3
  40592e:	3404      	adds	r4, #4
  405930:	4421      	add	r1, r4
  405932:	4423      	add	r3, r4
  405934:	f002 0203 	and.w	r2, r2, #3
  405938:	b162      	cbz	r2, 405954 <memmove+0xc0>
  40593a:	3b01      	subs	r3, #1
  40593c:	440a      	add	r2, r1
  40593e:	f811 4b01 	ldrb.w	r4, [r1], #1
  405942:	f803 4f01 	strb.w	r4, [r3, #1]!
  405946:	428a      	cmp	r2, r1
  405948:	d1f9      	bne.n	40593e <memmove+0xaa>
  40594a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40594c:	4603      	mov	r3, r0
  40594e:	e7f3      	b.n	405938 <memmove+0xa4>
  405950:	4603      	mov	r3, r0
  405952:	e7f2      	b.n	40593a <memmove+0xa6>
  405954:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405956:	4672      	mov	r2, lr
  405958:	e7ee      	b.n	405938 <memmove+0xa4>
  40595a:	bf00      	nop

0040595c <_realloc_r>:
  40595c:	2900      	cmp	r1, #0
  40595e:	f000 8095 	beq.w	405a8c <_realloc_r+0x130>
  405962:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405966:	460d      	mov	r5, r1
  405968:	4616      	mov	r6, r2
  40596a:	b083      	sub	sp, #12
  40596c:	4680      	mov	r8, r0
  40596e:	f106 070b 	add.w	r7, r6, #11
  405972:	f7ff f927 	bl	404bc4 <__malloc_lock>
  405976:	f855 ec04 	ldr.w	lr, [r5, #-4]
  40597a:	2f16      	cmp	r7, #22
  40597c:	f02e 0403 	bic.w	r4, lr, #3
  405980:	f1a5 0908 	sub.w	r9, r5, #8
  405984:	d83c      	bhi.n	405a00 <_realloc_r+0xa4>
  405986:	2210      	movs	r2, #16
  405988:	4617      	mov	r7, r2
  40598a:	42be      	cmp	r6, r7
  40598c:	d83d      	bhi.n	405a0a <_realloc_r+0xae>
  40598e:	4294      	cmp	r4, r2
  405990:	da43      	bge.n	405a1a <_realloc_r+0xbe>
  405992:	4bc4      	ldr	r3, [pc, #784]	; (405ca4 <_realloc_r+0x348>)
  405994:	6899      	ldr	r1, [r3, #8]
  405996:	eb09 0004 	add.w	r0, r9, r4
  40599a:	4288      	cmp	r0, r1
  40599c:	f000 80b4 	beq.w	405b08 <_realloc_r+0x1ac>
  4059a0:	6843      	ldr	r3, [r0, #4]
  4059a2:	f023 0101 	bic.w	r1, r3, #1
  4059a6:	4401      	add	r1, r0
  4059a8:	6849      	ldr	r1, [r1, #4]
  4059aa:	07c9      	lsls	r1, r1, #31
  4059ac:	d54c      	bpl.n	405a48 <_realloc_r+0xec>
  4059ae:	f01e 0f01 	tst.w	lr, #1
  4059b2:	f000 809b 	beq.w	405aec <_realloc_r+0x190>
  4059b6:	4631      	mov	r1, r6
  4059b8:	4640      	mov	r0, r8
  4059ba:	f7fe fd33 	bl	404424 <_malloc_r>
  4059be:	4606      	mov	r6, r0
  4059c0:	2800      	cmp	r0, #0
  4059c2:	d03a      	beq.n	405a3a <_realloc_r+0xde>
  4059c4:	f855 3c04 	ldr.w	r3, [r5, #-4]
  4059c8:	f023 0301 	bic.w	r3, r3, #1
  4059cc:	444b      	add	r3, r9
  4059ce:	f1a0 0208 	sub.w	r2, r0, #8
  4059d2:	429a      	cmp	r2, r3
  4059d4:	f000 8121 	beq.w	405c1a <_realloc_r+0x2be>
  4059d8:	1f22      	subs	r2, r4, #4
  4059da:	2a24      	cmp	r2, #36	; 0x24
  4059dc:	f200 8107 	bhi.w	405bee <_realloc_r+0x292>
  4059e0:	2a13      	cmp	r2, #19
  4059e2:	f200 80db 	bhi.w	405b9c <_realloc_r+0x240>
  4059e6:	4603      	mov	r3, r0
  4059e8:	462a      	mov	r2, r5
  4059ea:	6811      	ldr	r1, [r2, #0]
  4059ec:	6019      	str	r1, [r3, #0]
  4059ee:	6851      	ldr	r1, [r2, #4]
  4059f0:	6059      	str	r1, [r3, #4]
  4059f2:	6892      	ldr	r2, [r2, #8]
  4059f4:	609a      	str	r2, [r3, #8]
  4059f6:	4629      	mov	r1, r5
  4059f8:	4640      	mov	r0, r8
  4059fa:	f7ff fe4f 	bl	40569c <_free_r>
  4059fe:	e01c      	b.n	405a3a <_realloc_r+0xde>
  405a00:	f027 0707 	bic.w	r7, r7, #7
  405a04:	2f00      	cmp	r7, #0
  405a06:	463a      	mov	r2, r7
  405a08:	dabf      	bge.n	40598a <_realloc_r+0x2e>
  405a0a:	2600      	movs	r6, #0
  405a0c:	230c      	movs	r3, #12
  405a0e:	4630      	mov	r0, r6
  405a10:	f8c8 3000 	str.w	r3, [r8]
  405a14:	b003      	add	sp, #12
  405a16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405a1a:	462e      	mov	r6, r5
  405a1c:	1be3      	subs	r3, r4, r7
  405a1e:	2b0f      	cmp	r3, #15
  405a20:	d81e      	bhi.n	405a60 <_realloc_r+0x104>
  405a22:	f8d9 3004 	ldr.w	r3, [r9, #4]
  405a26:	f003 0301 	and.w	r3, r3, #1
  405a2a:	4323      	orrs	r3, r4
  405a2c:	444c      	add	r4, r9
  405a2e:	f8c9 3004 	str.w	r3, [r9, #4]
  405a32:	6863      	ldr	r3, [r4, #4]
  405a34:	f043 0301 	orr.w	r3, r3, #1
  405a38:	6063      	str	r3, [r4, #4]
  405a3a:	4640      	mov	r0, r8
  405a3c:	f7ff f8c8 	bl	404bd0 <__malloc_unlock>
  405a40:	4630      	mov	r0, r6
  405a42:	b003      	add	sp, #12
  405a44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405a48:	f023 0303 	bic.w	r3, r3, #3
  405a4c:	18e1      	adds	r1, r4, r3
  405a4e:	4291      	cmp	r1, r2
  405a50:	db1f      	blt.n	405a92 <_realloc_r+0x136>
  405a52:	68c3      	ldr	r3, [r0, #12]
  405a54:	6882      	ldr	r2, [r0, #8]
  405a56:	462e      	mov	r6, r5
  405a58:	60d3      	str	r3, [r2, #12]
  405a5a:	460c      	mov	r4, r1
  405a5c:	609a      	str	r2, [r3, #8]
  405a5e:	e7dd      	b.n	405a1c <_realloc_r+0xc0>
  405a60:	f8d9 2004 	ldr.w	r2, [r9, #4]
  405a64:	eb09 0107 	add.w	r1, r9, r7
  405a68:	f002 0201 	and.w	r2, r2, #1
  405a6c:	444c      	add	r4, r9
  405a6e:	f043 0301 	orr.w	r3, r3, #1
  405a72:	4317      	orrs	r7, r2
  405a74:	f8c9 7004 	str.w	r7, [r9, #4]
  405a78:	604b      	str	r3, [r1, #4]
  405a7a:	6863      	ldr	r3, [r4, #4]
  405a7c:	f043 0301 	orr.w	r3, r3, #1
  405a80:	3108      	adds	r1, #8
  405a82:	6063      	str	r3, [r4, #4]
  405a84:	4640      	mov	r0, r8
  405a86:	f7ff fe09 	bl	40569c <_free_r>
  405a8a:	e7d6      	b.n	405a3a <_realloc_r+0xde>
  405a8c:	4611      	mov	r1, r2
  405a8e:	f7fe bcc9 	b.w	404424 <_malloc_r>
  405a92:	f01e 0f01 	tst.w	lr, #1
  405a96:	d18e      	bne.n	4059b6 <_realloc_r+0x5a>
  405a98:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405a9c:	eba9 0a01 	sub.w	sl, r9, r1
  405aa0:	f8da 1004 	ldr.w	r1, [sl, #4]
  405aa4:	f021 0103 	bic.w	r1, r1, #3
  405aa8:	440b      	add	r3, r1
  405aaa:	4423      	add	r3, r4
  405aac:	4293      	cmp	r3, r2
  405aae:	db25      	blt.n	405afc <_realloc_r+0x1a0>
  405ab0:	68c2      	ldr	r2, [r0, #12]
  405ab2:	6881      	ldr	r1, [r0, #8]
  405ab4:	4656      	mov	r6, sl
  405ab6:	60ca      	str	r2, [r1, #12]
  405ab8:	6091      	str	r1, [r2, #8]
  405aba:	f8da 100c 	ldr.w	r1, [sl, #12]
  405abe:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405ac2:	1f22      	subs	r2, r4, #4
  405ac4:	2a24      	cmp	r2, #36	; 0x24
  405ac6:	60c1      	str	r1, [r0, #12]
  405ac8:	6088      	str	r0, [r1, #8]
  405aca:	f200 8094 	bhi.w	405bf6 <_realloc_r+0x29a>
  405ace:	2a13      	cmp	r2, #19
  405ad0:	d96f      	bls.n	405bb2 <_realloc_r+0x256>
  405ad2:	6829      	ldr	r1, [r5, #0]
  405ad4:	f8ca 1008 	str.w	r1, [sl, #8]
  405ad8:	6869      	ldr	r1, [r5, #4]
  405ada:	f8ca 100c 	str.w	r1, [sl, #12]
  405ade:	2a1b      	cmp	r2, #27
  405ae0:	f200 80a2 	bhi.w	405c28 <_realloc_r+0x2cc>
  405ae4:	3508      	adds	r5, #8
  405ae6:	f10a 0210 	add.w	r2, sl, #16
  405aea:	e063      	b.n	405bb4 <_realloc_r+0x258>
  405aec:	f855 3c08 	ldr.w	r3, [r5, #-8]
  405af0:	eba9 0a03 	sub.w	sl, r9, r3
  405af4:	f8da 1004 	ldr.w	r1, [sl, #4]
  405af8:	f021 0103 	bic.w	r1, r1, #3
  405afc:	1863      	adds	r3, r4, r1
  405afe:	4293      	cmp	r3, r2
  405b00:	f6ff af59 	blt.w	4059b6 <_realloc_r+0x5a>
  405b04:	4656      	mov	r6, sl
  405b06:	e7d8      	b.n	405aba <_realloc_r+0x15e>
  405b08:	6841      	ldr	r1, [r0, #4]
  405b0a:	f021 0b03 	bic.w	fp, r1, #3
  405b0e:	44a3      	add	fp, r4
  405b10:	f107 0010 	add.w	r0, r7, #16
  405b14:	4583      	cmp	fp, r0
  405b16:	da56      	bge.n	405bc6 <_realloc_r+0x26a>
  405b18:	f01e 0f01 	tst.w	lr, #1
  405b1c:	f47f af4b 	bne.w	4059b6 <_realloc_r+0x5a>
  405b20:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405b24:	eba9 0a01 	sub.w	sl, r9, r1
  405b28:	f8da 1004 	ldr.w	r1, [sl, #4]
  405b2c:	f021 0103 	bic.w	r1, r1, #3
  405b30:	448b      	add	fp, r1
  405b32:	4558      	cmp	r0, fp
  405b34:	dce2      	bgt.n	405afc <_realloc_r+0x1a0>
  405b36:	4656      	mov	r6, sl
  405b38:	f8da 100c 	ldr.w	r1, [sl, #12]
  405b3c:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405b40:	1f22      	subs	r2, r4, #4
  405b42:	2a24      	cmp	r2, #36	; 0x24
  405b44:	60c1      	str	r1, [r0, #12]
  405b46:	6088      	str	r0, [r1, #8]
  405b48:	f200 808f 	bhi.w	405c6a <_realloc_r+0x30e>
  405b4c:	2a13      	cmp	r2, #19
  405b4e:	f240 808a 	bls.w	405c66 <_realloc_r+0x30a>
  405b52:	6829      	ldr	r1, [r5, #0]
  405b54:	f8ca 1008 	str.w	r1, [sl, #8]
  405b58:	6869      	ldr	r1, [r5, #4]
  405b5a:	f8ca 100c 	str.w	r1, [sl, #12]
  405b5e:	2a1b      	cmp	r2, #27
  405b60:	f200 808a 	bhi.w	405c78 <_realloc_r+0x31c>
  405b64:	3508      	adds	r5, #8
  405b66:	f10a 0210 	add.w	r2, sl, #16
  405b6a:	6829      	ldr	r1, [r5, #0]
  405b6c:	6011      	str	r1, [r2, #0]
  405b6e:	6869      	ldr	r1, [r5, #4]
  405b70:	6051      	str	r1, [r2, #4]
  405b72:	68a9      	ldr	r1, [r5, #8]
  405b74:	6091      	str	r1, [r2, #8]
  405b76:	eb0a 0107 	add.w	r1, sl, r7
  405b7a:	ebab 0207 	sub.w	r2, fp, r7
  405b7e:	f042 0201 	orr.w	r2, r2, #1
  405b82:	6099      	str	r1, [r3, #8]
  405b84:	604a      	str	r2, [r1, #4]
  405b86:	f8da 3004 	ldr.w	r3, [sl, #4]
  405b8a:	f003 0301 	and.w	r3, r3, #1
  405b8e:	431f      	orrs	r7, r3
  405b90:	4640      	mov	r0, r8
  405b92:	f8ca 7004 	str.w	r7, [sl, #4]
  405b96:	f7ff f81b 	bl	404bd0 <__malloc_unlock>
  405b9a:	e751      	b.n	405a40 <_realloc_r+0xe4>
  405b9c:	682b      	ldr	r3, [r5, #0]
  405b9e:	6003      	str	r3, [r0, #0]
  405ba0:	686b      	ldr	r3, [r5, #4]
  405ba2:	6043      	str	r3, [r0, #4]
  405ba4:	2a1b      	cmp	r2, #27
  405ba6:	d82d      	bhi.n	405c04 <_realloc_r+0x2a8>
  405ba8:	f100 0308 	add.w	r3, r0, #8
  405bac:	f105 0208 	add.w	r2, r5, #8
  405bb0:	e71b      	b.n	4059ea <_realloc_r+0x8e>
  405bb2:	4632      	mov	r2, r6
  405bb4:	6829      	ldr	r1, [r5, #0]
  405bb6:	6011      	str	r1, [r2, #0]
  405bb8:	6869      	ldr	r1, [r5, #4]
  405bba:	6051      	str	r1, [r2, #4]
  405bbc:	68a9      	ldr	r1, [r5, #8]
  405bbe:	6091      	str	r1, [r2, #8]
  405bc0:	461c      	mov	r4, r3
  405bc2:	46d1      	mov	r9, sl
  405bc4:	e72a      	b.n	405a1c <_realloc_r+0xc0>
  405bc6:	eb09 0107 	add.w	r1, r9, r7
  405bca:	ebab 0b07 	sub.w	fp, fp, r7
  405bce:	f04b 0201 	orr.w	r2, fp, #1
  405bd2:	6099      	str	r1, [r3, #8]
  405bd4:	604a      	str	r2, [r1, #4]
  405bd6:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405bda:	f003 0301 	and.w	r3, r3, #1
  405bde:	431f      	orrs	r7, r3
  405be0:	4640      	mov	r0, r8
  405be2:	f845 7c04 	str.w	r7, [r5, #-4]
  405be6:	f7fe fff3 	bl	404bd0 <__malloc_unlock>
  405bea:	462e      	mov	r6, r5
  405bec:	e728      	b.n	405a40 <_realloc_r+0xe4>
  405bee:	4629      	mov	r1, r5
  405bf0:	f7ff fe50 	bl	405894 <memmove>
  405bf4:	e6ff      	b.n	4059f6 <_realloc_r+0x9a>
  405bf6:	4629      	mov	r1, r5
  405bf8:	4630      	mov	r0, r6
  405bfa:	461c      	mov	r4, r3
  405bfc:	46d1      	mov	r9, sl
  405bfe:	f7ff fe49 	bl	405894 <memmove>
  405c02:	e70b      	b.n	405a1c <_realloc_r+0xc0>
  405c04:	68ab      	ldr	r3, [r5, #8]
  405c06:	6083      	str	r3, [r0, #8]
  405c08:	68eb      	ldr	r3, [r5, #12]
  405c0a:	60c3      	str	r3, [r0, #12]
  405c0c:	2a24      	cmp	r2, #36	; 0x24
  405c0e:	d017      	beq.n	405c40 <_realloc_r+0x2e4>
  405c10:	f100 0310 	add.w	r3, r0, #16
  405c14:	f105 0210 	add.w	r2, r5, #16
  405c18:	e6e7      	b.n	4059ea <_realloc_r+0x8e>
  405c1a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  405c1e:	f023 0303 	bic.w	r3, r3, #3
  405c22:	441c      	add	r4, r3
  405c24:	462e      	mov	r6, r5
  405c26:	e6f9      	b.n	405a1c <_realloc_r+0xc0>
  405c28:	68a9      	ldr	r1, [r5, #8]
  405c2a:	f8ca 1010 	str.w	r1, [sl, #16]
  405c2e:	68e9      	ldr	r1, [r5, #12]
  405c30:	f8ca 1014 	str.w	r1, [sl, #20]
  405c34:	2a24      	cmp	r2, #36	; 0x24
  405c36:	d00c      	beq.n	405c52 <_realloc_r+0x2f6>
  405c38:	3510      	adds	r5, #16
  405c3a:	f10a 0218 	add.w	r2, sl, #24
  405c3e:	e7b9      	b.n	405bb4 <_realloc_r+0x258>
  405c40:	692b      	ldr	r3, [r5, #16]
  405c42:	6103      	str	r3, [r0, #16]
  405c44:	696b      	ldr	r3, [r5, #20]
  405c46:	6143      	str	r3, [r0, #20]
  405c48:	f105 0218 	add.w	r2, r5, #24
  405c4c:	f100 0318 	add.w	r3, r0, #24
  405c50:	e6cb      	b.n	4059ea <_realloc_r+0x8e>
  405c52:	692a      	ldr	r2, [r5, #16]
  405c54:	f8ca 2018 	str.w	r2, [sl, #24]
  405c58:	696a      	ldr	r2, [r5, #20]
  405c5a:	f8ca 201c 	str.w	r2, [sl, #28]
  405c5e:	3518      	adds	r5, #24
  405c60:	f10a 0220 	add.w	r2, sl, #32
  405c64:	e7a6      	b.n	405bb4 <_realloc_r+0x258>
  405c66:	4632      	mov	r2, r6
  405c68:	e77f      	b.n	405b6a <_realloc_r+0x20e>
  405c6a:	4629      	mov	r1, r5
  405c6c:	4630      	mov	r0, r6
  405c6e:	9301      	str	r3, [sp, #4]
  405c70:	f7ff fe10 	bl	405894 <memmove>
  405c74:	9b01      	ldr	r3, [sp, #4]
  405c76:	e77e      	b.n	405b76 <_realloc_r+0x21a>
  405c78:	68a9      	ldr	r1, [r5, #8]
  405c7a:	f8ca 1010 	str.w	r1, [sl, #16]
  405c7e:	68e9      	ldr	r1, [r5, #12]
  405c80:	f8ca 1014 	str.w	r1, [sl, #20]
  405c84:	2a24      	cmp	r2, #36	; 0x24
  405c86:	d003      	beq.n	405c90 <_realloc_r+0x334>
  405c88:	3510      	adds	r5, #16
  405c8a:	f10a 0218 	add.w	r2, sl, #24
  405c8e:	e76c      	b.n	405b6a <_realloc_r+0x20e>
  405c90:	692a      	ldr	r2, [r5, #16]
  405c92:	f8ca 2018 	str.w	r2, [sl, #24]
  405c96:	696a      	ldr	r2, [r5, #20]
  405c98:	f8ca 201c 	str.w	r2, [sl, #28]
  405c9c:	3518      	adds	r5, #24
  405c9e:	f10a 0220 	add.w	r2, sl, #32
  405ca2:	e762      	b.n	405b6a <_realloc_r+0x20e>
  405ca4:	20000444 	.word	0x20000444

00405ca8 <__ascii_wctomb>:
  405ca8:	b121      	cbz	r1, 405cb4 <__ascii_wctomb+0xc>
  405caa:	2aff      	cmp	r2, #255	; 0xff
  405cac:	d804      	bhi.n	405cb8 <__ascii_wctomb+0x10>
  405cae:	700a      	strb	r2, [r1, #0]
  405cb0:	2001      	movs	r0, #1
  405cb2:	4770      	bx	lr
  405cb4:	4608      	mov	r0, r1
  405cb6:	4770      	bx	lr
  405cb8:	238a      	movs	r3, #138	; 0x8a
  405cba:	6003      	str	r3, [r0, #0]
  405cbc:	f04f 30ff 	mov.w	r0, #4294967295
  405cc0:	4770      	bx	lr
  405cc2:	bf00      	nop

00405cc4 <__aeabi_drsub>:
  405cc4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  405cc8:	e002      	b.n	405cd0 <__adddf3>
  405cca:	bf00      	nop

00405ccc <__aeabi_dsub>:
  405ccc:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00405cd0 <__adddf3>:
  405cd0:	b530      	push	{r4, r5, lr}
  405cd2:	ea4f 0441 	mov.w	r4, r1, lsl #1
  405cd6:	ea4f 0543 	mov.w	r5, r3, lsl #1
  405cda:	ea94 0f05 	teq	r4, r5
  405cde:	bf08      	it	eq
  405ce0:	ea90 0f02 	teqeq	r0, r2
  405ce4:	bf1f      	itttt	ne
  405ce6:	ea54 0c00 	orrsne.w	ip, r4, r0
  405cea:	ea55 0c02 	orrsne.w	ip, r5, r2
  405cee:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  405cf2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405cf6:	f000 80e2 	beq.w	405ebe <__adddf3+0x1ee>
  405cfa:	ea4f 5454 	mov.w	r4, r4, lsr #21
  405cfe:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  405d02:	bfb8      	it	lt
  405d04:	426d      	neglt	r5, r5
  405d06:	dd0c      	ble.n	405d22 <__adddf3+0x52>
  405d08:	442c      	add	r4, r5
  405d0a:	ea80 0202 	eor.w	r2, r0, r2
  405d0e:	ea81 0303 	eor.w	r3, r1, r3
  405d12:	ea82 0000 	eor.w	r0, r2, r0
  405d16:	ea83 0101 	eor.w	r1, r3, r1
  405d1a:	ea80 0202 	eor.w	r2, r0, r2
  405d1e:	ea81 0303 	eor.w	r3, r1, r3
  405d22:	2d36      	cmp	r5, #54	; 0x36
  405d24:	bf88      	it	hi
  405d26:	bd30      	pophi	{r4, r5, pc}
  405d28:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  405d2c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405d30:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  405d34:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  405d38:	d002      	beq.n	405d40 <__adddf3+0x70>
  405d3a:	4240      	negs	r0, r0
  405d3c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405d40:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  405d44:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405d48:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  405d4c:	d002      	beq.n	405d54 <__adddf3+0x84>
  405d4e:	4252      	negs	r2, r2
  405d50:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  405d54:	ea94 0f05 	teq	r4, r5
  405d58:	f000 80a7 	beq.w	405eaa <__adddf3+0x1da>
  405d5c:	f1a4 0401 	sub.w	r4, r4, #1
  405d60:	f1d5 0e20 	rsbs	lr, r5, #32
  405d64:	db0d      	blt.n	405d82 <__adddf3+0xb2>
  405d66:	fa02 fc0e 	lsl.w	ip, r2, lr
  405d6a:	fa22 f205 	lsr.w	r2, r2, r5
  405d6e:	1880      	adds	r0, r0, r2
  405d70:	f141 0100 	adc.w	r1, r1, #0
  405d74:	fa03 f20e 	lsl.w	r2, r3, lr
  405d78:	1880      	adds	r0, r0, r2
  405d7a:	fa43 f305 	asr.w	r3, r3, r5
  405d7e:	4159      	adcs	r1, r3
  405d80:	e00e      	b.n	405da0 <__adddf3+0xd0>
  405d82:	f1a5 0520 	sub.w	r5, r5, #32
  405d86:	f10e 0e20 	add.w	lr, lr, #32
  405d8a:	2a01      	cmp	r2, #1
  405d8c:	fa03 fc0e 	lsl.w	ip, r3, lr
  405d90:	bf28      	it	cs
  405d92:	f04c 0c02 	orrcs.w	ip, ip, #2
  405d96:	fa43 f305 	asr.w	r3, r3, r5
  405d9a:	18c0      	adds	r0, r0, r3
  405d9c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  405da0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405da4:	d507      	bpl.n	405db6 <__adddf3+0xe6>
  405da6:	f04f 0e00 	mov.w	lr, #0
  405daa:	f1dc 0c00 	rsbs	ip, ip, #0
  405dae:	eb7e 0000 	sbcs.w	r0, lr, r0
  405db2:	eb6e 0101 	sbc.w	r1, lr, r1
  405db6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  405dba:	d31b      	bcc.n	405df4 <__adddf3+0x124>
  405dbc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  405dc0:	d30c      	bcc.n	405ddc <__adddf3+0x10c>
  405dc2:	0849      	lsrs	r1, r1, #1
  405dc4:	ea5f 0030 	movs.w	r0, r0, rrx
  405dc8:	ea4f 0c3c 	mov.w	ip, ip, rrx
  405dcc:	f104 0401 	add.w	r4, r4, #1
  405dd0:	ea4f 5244 	mov.w	r2, r4, lsl #21
  405dd4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  405dd8:	f080 809a 	bcs.w	405f10 <__adddf3+0x240>
  405ddc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  405de0:	bf08      	it	eq
  405de2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405de6:	f150 0000 	adcs.w	r0, r0, #0
  405dea:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405dee:	ea41 0105 	orr.w	r1, r1, r5
  405df2:	bd30      	pop	{r4, r5, pc}
  405df4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  405df8:	4140      	adcs	r0, r0
  405dfa:	eb41 0101 	adc.w	r1, r1, r1
  405dfe:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405e02:	f1a4 0401 	sub.w	r4, r4, #1
  405e06:	d1e9      	bne.n	405ddc <__adddf3+0x10c>
  405e08:	f091 0f00 	teq	r1, #0
  405e0c:	bf04      	itt	eq
  405e0e:	4601      	moveq	r1, r0
  405e10:	2000      	moveq	r0, #0
  405e12:	fab1 f381 	clz	r3, r1
  405e16:	bf08      	it	eq
  405e18:	3320      	addeq	r3, #32
  405e1a:	f1a3 030b 	sub.w	r3, r3, #11
  405e1e:	f1b3 0220 	subs.w	r2, r3, #32
  405e22:	da0c      	bge.n	405e3e <__adddf3+0x16e>
  405e24:	320c      	adds	r2, #12
  405e26:	dd08      	ble.n	405e3a <__adddf3+0x16a>
  405e28:	f102 0c14 	add.w	ip, r2, #20
  405e2c:	f1c2 020c 	rsb	r2, r2, #12
  405e30:	fa01 f00c 	lsl.w	r0, r1, ip
  405e34:	fa21 f102 	lsr.w	r1, r1, r2
  405e38:	e00c      	b.n	405e54 <__adddf3+0x184>
  405e3a:	f102 0214 	add.w	r2, r2, #20
  405e3e:	bfd8      	it	le
  405e40:	f1c2 0c20 	rsble	ip, r2, #32
  405e44:	fa01 f102 	lsl.w	r1, r1, r2
  405e48:	fa20 fc0c 	lsr.w	ip, r0, ip
  405e4c:	bfdc      	itt	le
  405e4e:	ea41 010c 	orrle.w	r1, r1, ip
  405e52:	4090      	lslle	r0, r2
  405e54:	1ae4      	subs	r4, r4, r3
  405e56:	bfa2      	ittt	ge
  405e58:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  405e5c:	4329      	orrge	r1, r5
  405e5e:	bd30      	popge	{r4, r5, pc}
  405e60:	ea6f 0404 	mvn.w	r4, r4
  405e64:	3c1f      	subs	r4, #31
  405e66:	da1c      	bge.n	405ea2 <__adddf3+0x1d2>
  405e68:	340c      	adds	r4, #12
  405e6a:	dc0e      	bgt.n	405e8a <__adddf3+0x1ba>
  405e6c:	f104 0414 	add.w	r4, r4, #20
  405e70:	f1c4 0220 	rsb	r2, r4, #32
  405e74:	fa20 f004 	lsr.w	r0, r0, r4
  405e78:	fa01 f302 	lsl.w	r3, r1, r2
  405e7c:	ea40 0003 	orr.w	r0, r0, r3
  405e80:	fa21 f304 	lsr.w	r3, r1, r4
  405e84:	ea45 0103 	orr.w	r1, r5, r3
  405e88:	bd30      	pop	{r4, r5, pc}
  405e8a:	f1c4 040c 	rsb	r4, r4, #12
  405e8e:	f1c4 0220 	rsb	r2, r4, #32
  405e92:	fa20 f002 	lsr.w	r0, r0, r2
  405e96:	fa01 f304 	lsl.w	r3, r1, r4
  405e9a:	ea40 0003 	orr.w	r0, r0, r3
  405e9e:	4629      	mov	r1, r5
  405ea0:	bd30      	pop	{r4, r5, pc}
  405ea2:	fa21 f004 	lsr.w	r0, r1, r4
  405ea6:	4629      	mov	r1, r5
  405ea8:	bd30      	pop	{r4, r5, pc}
  405eaa:	f094 0f00 	teq	r4, #0
  405eae:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  405eb2:	bf06      	itte	eq
  405eb4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  405eb8:	3401      	addeq	r4, #1
  405eba:	3d01      	subne	r5, #1
  405ebc:	e74e      	b.n	405d5c <__adddf3+0x8c>
  405ebe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405ec2:	bf18      	it	ne
  405ec4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405ec8:	d029      	beq.n	405f1e <__adddf3+0x24e>
  405eca:	ea94 0f05 	teq	r4, r5
  405ece:	bf08      	it	eq
  405ed0:	ea90 0f02 	teqeq	r0, r2
  405ed4:	d005      	beq.n	405ee2 <__adddf3+0x212>
  405ed6:	ea54 0c00 	orrs.w	ip, r4, r0
  405eda:	bf04      	itt	eq
  405edc:	4619      	moveq	r1, r3
  405ede:	4610      	moveq	r0, r2
  405ee0:	bd30      	pop	{r4, r5, pc}
  405ee2:	ea91 0f03 	teq	r1, r3
  405ee6:	bf1e      	ittt	ne
  405ee8:	2100      	movne	r1, #0
  405eea:	2000      	movne	r0, #0
  405eec:	bd30      	popne	{r4, r5, pc}
  405eee:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  405ef2:	d105      	bne.n	405f00 <__adddf3+0x230>
  405ef4:	0040      	lsls	r0, r0, #1
  405ef6:	4149      	adcs	r1, r1
  405ef8:	bf28      	it	cs
  405efa:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  405efe:	bd30      	pop	{r4, r5, pc}
  405f00:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  405f04:	bf3c      	itt	cc
  405f06:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  405f0a:	bd30      	popcc	{r4, r5, pc}
  405f0c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405f10:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  405f14:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405f18:	f04f 0000 	mov.w	r0, #0
  405f1c:	bd30      	pop	{r4, r5, pc}
  405f1e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405f22:	bf1a      	itte	ne
  405f24:	4619      	movne	r1, r3
  405f26:	4610      	movne	r0, r2
  405f28:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  405f2c:	bf1c      	itt	ne
  405f2e:	460b      	movne	r3, r1
  405f30:	4602      	movne	r2, r0
  405f32:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405f36:	bf06      	itte	eq
  405f38:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  405f3c:	ea91 0f03 	teqeq	r1, r3
  405f40:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  405f44:	bd30      	pop	{r4, r5, pc}
  405f46:	bf00      	nop

00405f48 <__aeabi_ui2d>:
  405f48:	f090 0f00 	teq	r0, #0
  405f4c:	bf04      	itt	eq
  405f4e:	2100      	moveq	r1, #0
  405f50:	4770      	bxeq	lr
  405f52:	b530      	push	{r4, r5, lr}
  405f54:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405f58:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405f5c:	f04f 0500 	mov.w	r5, #0
  405f60:	f04f 0100 	mov.w	r1, #0
  405f64:	e750      	b.n	405e08 <__adddf3+0x138>
  405f66:	bf00      	nop

00405f68 <__aeabi_i2d>:
  405f68:	f090 0f00 	teq	r0, #0
  405f6c:	bf04      	itt	eq
  405f6e:	2100      	moveq	r1, #0
  405f70:	4770      	bxeq	lr
  405f72:	b530      	push	{r4, r5, lr}
  405f74:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405f78:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405f7c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  405f80:	bf48      	it	mi
  405f82:	4240      	negmi	r0, r0
  405f84:	f04f 0100 	mov.w	r1, #0
  405f88:	e73e      	b.n	405e08 <__adddf3+0x138>
  405f8a:	bf00      	nop

00405f8c <__aeabi_f2d>:
  405f8c:	0042      	lsls	r2, r0, #1
  405f8e:	ea4f 01e2 	mov.w	r1, r2, asr #3
  405f92:	ea4f 0131 	mov.w	r1, r1, rrx
  405f96:	ea4f 7002 	mov.w	r0, r2, lsl #28
  405f9a:	bf1f      	itttt	ne
  405f9c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  405fa0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405fa4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  405fa8:	4770      	bxne	lr
  405faa:	f092 0f00 	teq	r2, #0
  405fae:	bf14      	ite	ne
  405fb0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405fb4:	4770      	bxeq	lr
  405fb6:	b530      	push	{r4, r5, lr}
  405fb8:	f44f 7460 	mov.w	r4, #896	; 0x380
  405fbc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405fc0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405fc4:	e720      	b.n	405e08 <__adddf3+0x138>
  405fc6:	bf00      	nop

00405fc8 <__aeabi_ul2d>:
  405fc8:	ea50 0201 	orrs.w	r2, r0, r1
  405fcc:	bf08      	it	eq
  405fce:	4770      	bxeq	lr
  405fd0:	b530      	push	{r4, r5, lr}
  405fd2:	f04f 0500 	mov.w	r5, #0
  405fd6:	e00a      	b.n	405fee <__aeabi_l2d+0x16>

00405fd8 <__aeabi_l2d>:
  405fd8:	ea50 0201 	orrs.w	r2, r0, r1
  405fdc:	bf08      	it	eq
  405fde:	4770      	bxeq	lr
  405fe0:	b530      	push	{r4, r5, lr}
  405fe2:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  405fe6:	d502      	bpl.n	405fee <__aeabi_l2d+0x16>
  405fe8:	4240      	negs	r0, r0
  405fea:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405fee:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405ff2:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405ff6:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  405ffa:	f43f aedc 	beq.w	405db6 <__adddf3+0xe6>
  405ffe:	f04f 0203 	mov.w	r2, #3
  406002:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  406006:	bf18      	it	ne
  406008:	3203      	addne	r2, #3
  40600a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  40600e:	bf18      	it	ne
  406010:	3203      	addne	r2, #3
  406012:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  406016:	f1c2 0320 	rsb	r3, r2, #32
  40601a:	fa00 fc03 	lsl.w	ip, r0, r3
  40601e:	fa20 f002 	lsr.w	r0, r0, r2
  406022:	fa01 fe03 	lsl.w	lr, r1, r3
  406026:	ea40 000e 	orr.w	r0, r0, lr
  40602a:	fa21 f102 	lsr.w	r1, r1, r2
  40602e:	4414      	add	r4, r2
  406030:	e6c1      	b.n	405db6 <__adddf3+0xe6>
  406032:	bf00      	nop

00406034 <__aeabi_dmul>:
  406034:	b570      	push	{r4, r5, r6, lr}
  406036:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40603a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  40603e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  406042:	bf1d      	ittte	ne
  406044:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  406048:	ea94 0f0c 	teqne	r4, ip
  40604c:	ea95 0f0c 	teqne	r5, ip
  406050:	f000 f8de 	bleq	406210 <__aeabi_dmul+0x1dc>
  406054:	442c      	add	r4, r5
  406056:	ea81 0603 	eor.w	r6, r1, r3
  40605a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  40605e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  406062:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  406066:	bf18      	it	ne
  406068:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  40606c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  406070:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  406074:	d038      	beq.n	4060e8 <__aeabi_dmul+0xb4>
  406076:	fba0 ce02 	umull	ip, lr, r0, r2
  40607a:	f04f 0500 	mov.w	r5, #0
  40607e:	fbe1 e502 	umlal	lr, r5, r1, r2
  406082:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  406086:	fbe0 e503 	umlal	lr, r5, r0, r3
  40608a:	f04f 0600 	mov.w	r6, #0
  40608e:	fbe1 5603 	umlal	r5, r6, r1, r3
  406092:	f09c 0f00 	teq	ip, #0
  406096:	bf18      	it	ne
  406098:	f04e 0e01 	orrne.w	lr, lr, #1
  40609c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  4060a0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  4060a4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  4060a8:	d204      	bcs.n	4060b4 <__aeabi_dmul+0x80>
  4060aa:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  4060ae:	416d      	adcs	r5, r5
  4060b0:	eb46 0606 	adc.w	r6, r6, r6
  4060b4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  4060b8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  4060bc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  4060c0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  4060c4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  4060c8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4060cc:	bf88      	it	hi
  4060ce:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4060d2:	d81e      	bhi.n	406112 <__aeabi_dmul+0xde>
  4060d4:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  4060d8:	bf08      	it	eq
  4060da:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  4060de:	f150 0000 	adcs.w	r0, r0, #0
  4060e2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4060e6:	bd70      	pop	{r4, r5, r6, pc}
  4060e8:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  4060ec:	ea46 0101 	orr.w	r1, r6, r1
  4060f0:	ea40 0002 	orr.w	r0, r0, r2
  4060f4:	ea81 0103 	eor.w	r1, r1, r3
  4060f8:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  4060fc:	bfc2      	ittt	gt
  4060fe:	ebd4 050c 	rsbsgt	r5, r4, ip
  406102:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  406106:	bd70      	popgt	{r4, r5, r6, pc}
  406108:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  40610c:	f04f 0e00 	mov.w	lr, #0
  406110:	3c01      	subs	r4, #1
  406112:	f300 80ab 	bgt.w	40626c <__aeabi_dmul+0x238>
  406116:	f114 0f36 	cmn.w	r4, #54	; 0x36
  40611a:	bfde      	ittt	le
  40611c:	2000      	movle	r0, #0
  40611e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  406122:	bd70      	pople	{r4, r5, r6, pc}
  406124:	f1c4 0400 	rsb	r4, r4, #0
  406128:	3c20      	subs	r4, #32
  40612a:	da35      	bge.n	406198 <__aeabi_dmul+0x164>
  40612c:	340c      	adds	r4, #12
  40612e:	dc1b      	bgt.n	406168 <__aeabi_dmul+0x134>
  406130:	f104 0414 	add.w	r4, r4, #20
  406134:	f1c4 0520 	rsb	r5, r4, #32
  406138:	fa00 f305 	lsl.w	r3, r0, r5
  40613c:	fa20 f004 	lsr.w	r0, r0, r4
  406140:	fa01 f205 	lsl.w	r2, r1, r5
  406144:	ea40 0002 	orr.w	r0, r0, r2
  406148:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  40614c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  406150:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  406154:	fa21 f604 	lsr.w	r6, r1, r4
  406158:	eb42 0106 	adc.w	r1, r2, r6
  40615c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  406160:	bf08      	it	eq
  406162:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  406166:	bd70      	pop	{r4, r5, r6, pc}
  406168:	f1c4 040c 	rsb	r4, r4, #12
  40616c:	f1c4 0520 	rsb	r5, r4, #32
  406170:	fa00 f304 	lsl.w	r3, r0, r4
  406174:	fa20 f005 	lsr.w	r0, r0, r5
  406178:	fa01 f204 	lsl.w	r2, r1, r4
  40617c:	ea40 0002 	orr.w	r0, r0, r2
  406180:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  406184:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  406188:	f141 0100 	adc.w	r1, r1, #0
  40618c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  406190:	bf08      	it	eq
  406192:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  406196:	bd70      	pop	{r4, r5, r6, pc}
  406198:	f1c4 0520 	rsb	r5, r4, #32
  40619c:	fa00 f205 	lsl.w	r2, r0, r5
  4061a0:	ea4e 0e02 	orr.w	lr, lr, r2
  4061a4:	fa20 f304 	lsr.w	r3, r0, r4
  4061a8:	fa01 f205 	lsl.w	r2, r1, r5
  4061ac:	ea43 0302 	orr.w	r3, r3, r2
  4061b0:	fa21 f004 	lsr.w	r0, r1, r4
  4061b4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4061b8:	fa21 f204 	lsr.w	r2, r1, r4
  4061bc:	ea20 0002 	bic.w	r0, r0, r2
  4061c0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  4061c4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4061c8:	bf08      	it	eq
  4061ca:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4061ce:	bd70      	pop	{r4, r5, r6, pc}
  4061d0:	f094 0f00 	teq	r4, #0
  4061d4:	d10f      	bne.n	4061f6 <__aeabi_dmul+0x1c2>
  4061d6:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  4061da:	0040      	lsls	r0, r0, #1
  4061dc:	eb41 0101 	adc.w	r1, r1, r1
  4061e0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4061e4:	bf08      	it	eq
  4061e6:	3c01      	subeq	r4, #1
  4061e8:	d0f7      	beq.n	4061da <__aeabi_dmul+0x1a6>
  4061ea:	ea41 0106 	orr.w	r1, r1, r6
  4061ee:	f095 0f00 	teq	r5, #0
  4061f2:	bf18      	it	ne
  4061f4:	4770      	bxne	lr
  4061f6:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  4061fa:	0052      	lsls	r2, r2, #1
  4061fc:	eb43 0303 	adc.w	r3, r3, r3
  406200:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  406204:	bf08      	it	eq
  406206:	3d01      	subeq	r5, #1
  406208:	d0f7      	beq.n	4061fa <__aeabi_dmul+0x1c6>
  40620a:	ea43 0306 	orr.w	r3, r3, r6
  40620e:	4770      	bx	lr
  406210:	ea94 0f0c 	teq	r4, ip
  406214:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  406218:	bf18      	it	ne
  40621a:	ea95 0f0c 	teqne	r5, ip
  40621e:	d00c      	beq.n	40623a <__aeabi_dmul+0x206>
  406220:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  406224:	bf18      	it	ne
  406226:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40622a:	d1d1      	bne.n	4061d0 <__aeabi_dmul+0x19c>
  40622c:	ea81 0103 	eor.w	r1, r1, r3
  406230:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  406234:	f04f 0000 	mov.w	r0, #0
  406238:	bd70      	pop	{r4, r5, r6, pc}
  40623a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40623e:	bf06      	itte	eq
  406240:	4610      	moveq	r0, r2
  406242:	4619      	moveq	r1, r3
  406244:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  406248:	d019      	beq.n	40627e <__aeabi_dmul+0x24a>
  40624a:	ea94 0f0c 	teq	r4, ip
  40624e:	d102      	bne.n	406256 <__aeabi_dmul+0x222>
  406250:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  406254:	d113      	bne.n	40627e <__aeabi_dmul+0x24a>
  406256:	ea95 0f0c 	teq	r5, ip
  40625a:	d105      	bne.n	406268 <__aeabi_dmul+0x234>
  40625c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  406260:	bf1c      	itt	ne
  406262:	4610      	movne	r0, r2
  406264:	4619      	movne	r1, r3
  406266:	d10a      	bne.n	40627e <__aeabi_dmul+0x24a>
  406268:	ea81 0103 	eor.w	r1, r1, r3
  40626c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  406270:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  406274:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  406278:	f04f 0000 	mov.w	r0, #0
  40627c:	bd70      	pop	{r4, r5, r6, pc}
  40627e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  406282:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  406286:	bd70      	pop	{r4, r5, r6, pc}

00406288 <__aeabi_ddiv>:
  406288:	b570      	push	{r4, r5, r6, lr}
  40628a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40628e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  406292:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  406296:	bf1d      	ittte	ne
  406298:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  40629c:	ea94 0f0c 	teqne	r4, ip
  4062a0:	ea95 0f0c 	teqne	r5, ip
  4062a4:	f000 f8a7 	bleq	4063f6 <__aeabi_ddiv+0x16e>
  4062a8:	eba4 0405 	sub.w	r4, r4, r5
  4062ac:	ea81 0e03 	eor.w	lr, r1, r3
  4062b0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4062b4:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4062b8:	f000 8088 	beq.w	4063cc <__aeabi_ddiv+0x144>
  4062bc:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4062c0:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  4062c4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  4062c8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  4062cc:	ea4f 2202 	mov.w	r2, r2, lsl #8
  4062d0:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  4062d4:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  4062d8:	ea4f 2600 	mov.w	r6, r0, lsl #8
  4062dc:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  4062e0:	429d      	cmp	r5, r3
  4062e2:	bf08      	it	eq
  4062e4:	4296      	cmpeq	r6, r2
  4062e6:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  4062ea:	f504 7440 	add.w	r4, r4, #768	; 0x300
  4062ee:	d202      	bcs.n	4062f6 <__aeabi_ddiv+0x6e>
  4062f0:	085b      	lsrs	r3, r3, #1
  4062f2:	ea4f 0232 	mov.w	r2, r2, rrx
  4062f6:	1ab6      	subs	r6, r6, r2
  4062f8:	eb65 0503 	sbc.w	r5, r5, r3
  4062fc:	085b      	lsrs	r3, r3, #1
  4062fe:	ea4f 0232 	mov.w	r2, r2, rrx
  406302:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  406306:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  40630a:	ebb6 0e02 	subs.w	lr, r6, r2
  40630e:	eb75 0e03 	sbcs.w	lr, r5, r3
  406312:	bf22      	ittt	cs
  406314:	1ab6      	subcs	r6, r6, r2
  406316:	4675      	movcs	r5, lr
  406318:	ea40 000c 	orrcs.w	r0, r0, ip
  40631c:	085b      	lsrs	r3, r3, #1
  40631e:	ea4f 0232 	mov.w	r2, r2, rrx
  406322:	ebb6 0e02 	subs.w	lr, r6, r2
  406326:	eb75 0e03 	sbcs.w	lr, r5, r3
  40632a:	bf22      	ittt	cs
  40632c:	1ab6      	subcs	r6, r6, r2
  40632e:	4675      	movcs	r5, lr
  406330:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  406334:	085b      	lsrs	r3, r3, #1
  406336:	ea4f 0232 	mov.w	r2, r2, rrx
  40633a:	ebb6 0e02 	subs.w	lr, r6, r2
  40633e:	eb75 0e03 	sbcs.w	lr, r5, r3
  406342:	bf22      	ittt	cs
  406344:	1ab6      	subcs	r6, r6, r2
  406346:	4675      	movcs	r5, lr
  406348:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  40634c:	085b      	lsrs	r3, r3, #1
  40634e:	ea4f 0232 	mov.w	r2, r2, rrx
  406352:	ebb6 0e02 	subs.w	lr, r6, r2
  406356:	eb75 0e03 	sbcs.w	lr, r5, r3
  40635a:	bf22      	ittt	cs
  40635c:	1ab6      	subcs	r6, r6, r2
  40635e:	4675      	movcs	r5, lr
  406360:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  406364:	ea55 0e06 	orrs.w	lr, r5, r6
  406368:	d018      	beq.n	40639c <__aeabi_ddiv+0x114>
  40636a:	ea4f 1505 	mov.w	r5, r5, lsl #4
  40636e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  406372:	ea4f 1606 	mov.w	r6, r6, lsl #4
  406376:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  40637a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  40637e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  406382:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  406386:	d1c0      	bne.n	40630a <__aeabi_ddiv+0x82>
  406388:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40638c:	d10b      	bne.n	4063a6 <__aeabi_ddiv+0x11e>
  40638e:	ea41 0100 	orr.w	r1, r1, r0
  406392:	f04f 0000 	mov.w	r0, #0
  406396:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  40639a:	e7b6      	b.n	40630a <__aeabi_ddiv+0x82>
  40639c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4063a0:	bf04      	itt	eq
  4063a2:	4301      	orreq	r1, r0
  4063a4:	2000      	moveq	r0, #0
  4063a6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4063aa:	bf88      	it	hi
  4063ac:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4063b0:	f63f aeaf 	bhi.w	406112 <__aeabi_dmul+0xde>
  4063b4:	ebb5 0c03 	subs.w	ip, r5, r3
  4063b8:	bf04      	itt	eq
  4063ba:	ebb6 0c02 	subseq.w	ip, r6, r2
  4063be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4063c2:	f150 0000 	adcs.w	r0, r0, #0
  4063c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4063ca:	bd70      	pop	{r4, r5, r6, pc}
  4063cc:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  4063d0:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  4063d4:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  4063d8:	bfc2      	ittt	gt
  4063da:	ebd4 050c 	rsbsgt	r5, r4, ip
  4063de:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4063e2:	bd70      	popgt	{r4, r5, r6, pc}
  4063e4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4063e8:	f04f 0e00 	mov.w	lr, #0
  4063ec:	3c01      	subs	r4, #1
  4063ee:	e690      	b.n	406112 <__aeabi_dmul+0xde>
  4063f0:	ea45 0e06 	orr.w	lr, r5, r6
  4063f4:	e68d      	b.n	406112 <__aeabi_dmul+0xde>
  4063f6:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  4063fa:	ea94 0f0c 	teq	r4, ip
  4063fe:	bf08      	it	eq
  406400:	ea95 0f0c 	teqeq	r5, ip
  406404:	f43f af3b 	beq.w	40627e <__aeabi_dmul+0x24a>
  406408:	ea94 0f0c 	teq	r4, ip
  40640c:	d10a      	bne.n	406424 <__aeabi_ddiv+0x19c>
  40640e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  406412:	f47f af34 	bne.w	40627e <__aeabi_dmul+0x24a>
  406416:	ea95 0f0c 	teq	r5, ip
  40641a:	f47f af25 	bne.w	406268 <__aeabi_dmul+0x234>
  40641e:	4610      	mov	r0, r2
  406420:	4619      	mov	r1, r3
  406422:	e72c      	b.n	40627e <__aeabi_dmul+0x24a>
  406424:	ea95 0f0c 	teq	r5, ip
  406428:	d106      	bne.n	406438 <__aeabi_ddiv+0x1b0>
  40642a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  40642e:	f43f aefd 	beq.w	40622c <__aeabi_dmul+0x1f8>
  406432:	4610      	mov	r0, r2
  406434:	4619      	mov	r1, r3
  406436:	e722      	b.n	40627e <__aeabi_dmul+0x24a>
  406438:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40643c:	bf18      	it	ne
  40643e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  406442:	f47f aec5 	bne.w	4061d0 <__aeabi_dmul+0x19c>
  406446:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  40644a:	f47f af0d 	bne.w	406268 <__aeabi_dmul+0x234>
  40644e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  406452:	f47f aeeb 	bne.w	40622c <__aeabi_dmul+0x1f8>
  406456:	e712      	b.n	40627e <__aeabi_dmul+0x24a>

00406458 <__gedf2>:
  406458:	f04f 3cff 	mov.w	ip, #4294967295
  40645c:	e006      	b.n	40646c <__cmpdf2+0x4>
  40645e:	bf00      	nop

00406460 <__ledf2>:
  406460:	f04f 0c01 	mov.w	ip, #1
  406464:	e002      	b.n	40646c <__cmpdf2+0x4>
  406466:	bf00      	nop

00406468 <__cmpdf2>:
  406468:	f04f 0c01 	mov.w	ip, #1
  40646c:	f84d cd04 	str.w	ip, [sp, #-4]!
  406470:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406474:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406478:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  40647c:	bf18      	it	ne
  40647e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  406482:	d01b      	beq.n	4064bc <__cmpdf2+0x54>
  406484:	b001      	add	sp, #4
  406486:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  40648a:	bf0c      	ite	eq
  40648c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  406490:	ea91 0f03 	teqne	r1, r3
  406494:	bf02      	ittt	eq
  406496:	ea90 0f02 	teqeq	r0, r2
  40649a:	2000      	moveq	r0, #0
  40649c:	4770      	bxeq	lr
  40649e:	f110 0f00 	cmn.w	r0, #0
  4064a2:	ea91 0f03 	teq	r1, r3
  4064a6:	bf58      	it	pl
  4064a8:	4299      	cmppl	r1, r3
  4064aa:	bf08      	it	eq
  4064ac:	4290      	cmpeq	r0, r2
  4064ae:	bf2c      	ite	cs
  4064b0:	17d8      	asrcs	r0, r3, #31
  4064b2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  4064b6:	f040 0001 	orr.w	r0, r0, #1
  4064ba:	4770      	bx	lr
  4064bc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4064c0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4064c4:	d102      	bne.n	4064cc <__cmpdf2+0x64>
  4064c6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4064ca:	d107      	bne.n	4064dc <__cmpdf2+0x74>
  4064cc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4064d0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4064d4:	d1d6      	bne.n	406484 <__cmpdf2+0x1c>
  4064d6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4064da:	d0d3      	beq.n	406484 <__cmpdf2+0x1c>
  4064dc:	f85d 0b04 	ldr.w	r0, [sp], #4
  4064e0:	4770      	bx	lr
  4064e2:	bf00      	nop

004064e4 <__aeabi_cdrcmple>:
  4064e4:	4684      	mov	ip, r0
  4064e6:	4610      	mov	r0, r2
  4064e8:	4662      	mov	r2, ip
  4064ea:	468c      	mov	ip, r1
  4064ec:	4619      	mov	r1, r3
  4064ee:	4663      	mov	r3, ip
  4064f0:	e000      	b.n	4064f4 <__aeabi_cdcmpeq>
  4064f2:	bf00      	nop

004064f4 <__aeabi_cdcmpeq>:
  4064f4:	b501      	push	{r0, lr}
  4064f6:	f7ff ffb7 	bl	406468 <__cmpdf2>
  4064fa:	2800      	cmp	r0, #0
  4064fc:	bf48      	it	mi
  4064fe:	f110 0f00 	cmnmi.w	r0, #0
  406502:	bd01      	pop	{r0, pc}

00406504 <__aeabi_dcmpeq>:
  406504:	f84d ed08 	str.w	lr, [sp, #-8]!
  406508:	f7ff fff4 	bl	4064f4 <__aeabi_cdcmpeq>
  40650c:	bf0c      	ite	eq
  40650e:	2001      	moveq	r0, #1
  406510:	2000      	movne	r0, #0
  406512:	f85d fb08 	ldr.w	pc, [sp], #8
  406516:	bf00      	nop

00406518 <__aeabi_dcmplt>:
  406518:	f84d ed08 	str.w	lr, [sp, #-8]!
  40651c:	f7ff ffea 	bl	4064f4 <__aeabi_cdcmpeq>
  406520:	bf34      	ite	cc
  406522:	2001      	movcc	r0, #1
  406524:	2000      	movcs	r0, #0
  406526:	f85d fb08 	ldr.w	pc, [sp], #8
  40652a:	bf00      	nop

0040652c <__aeabi_dcmple>:
  40652c:	f84d ed08 	str.w	lr, [sp, #-8]!
  406530:	f7ff ffe0 	bl	4064f4 <__aeabi_cdcmpeq>
  406534:	bf94      	ite	ls
  406536:	2001      	movls	r0, #1
  406538:	2000      	movhi	r0, #0
  40653a:	f85d fb08 	ldr.w	pc, [sp], #8
  40653e:	bf00      	nop

00406540 <__aeabi_dcmpge>:
  406540:	f84d ed08 	str.w	lr, [sp, #-8]!
  406544:	f7ff ffce 	bl	4064e4 <__aeabi_cdrcmple>
  406548:	bf94      	ite	ls
  40654a:	2001      	movls	r0, #1
  40654c:	2000      	movhi	r0, #0
  40654e:	f85d fb08 	ldr.w	pc, [sp], #8
  406552:	bf00      	nop

00406554 <__aeabi_dcmpgt>:
  406554:	f84d ed08 	str.w	lr, [sp, #-8]!
  406558:	f7ff ffc4 	bl	4064e4 <__aeabi_cdrcmple>
  40655c:	bf34      	ite	cc
  40655e:	2001      	movcc	r0, #1
  406560:	2000      	movcs	r0, #0
  406562:	f85d fb08 	ldr.w	pc, [sp], #8
  406566:	bf00      	nop

00406568 <__aeabi_dcmpun>:
  406568:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  40656c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406570:	d102      	bne.n	406578 <__aeabi_dcmpun+0x10>
  406572:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  406576:	d10a      	bne.n	40658e <__aeabi_dcmpun+0x26>
  406578:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  40657c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406580:	d102      	bne.n	406588 <__aeabi_dcmpun+0x20>
  406582:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  406586:	d102      	bne.n	40658e <__aeabi_dcmpun+0x26>
  406588:	f04f 0000 	mov.w	r0, #0
  40658c:	4770      	bx	lr
  40658e:	f04f 0001 	mov.w	r0, #1
  406592:	4770      	bx	lr

00406594 <__aeabi_d2iz>:
  406594:	ea4f 0241 	mov.w	r2, r1, lsl #1
  406598:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  40659c:	d215      	bcs.n	4065ca <__aeabi_d2iz+0x36>
  40659e:	d511      	bpl.n	4065c4 <__aeabi_d2iz+0x30>
  4065a0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  4065a4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  4065a8:	d912      	bls.n	4065d0 <__aeabi_d2iz+0x3c>
  4065aa:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4065ae:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4065b2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4065b6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4065ba:	fa23 f002 	lsr.w	r0, r3, r2
  4065be:	bf18      	it	ne
  4065c0:	4240      	negne	r0, r0
  4065c2:	4770      	bx	lr
  4065c4:	f04f 0000 	mov.w	r0, #0
  4065c8:	4770      	bx	lr
  4065ca:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  4065ce:	d105      	bne.n	4065dc <__aeabi_d2iz+0x48>
  4065d0:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  4065d4:	bf08      	it	eq
  4065d6:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  4065da:	4770      	bx	lr
  4065dc:	f04f 0000 	mov.w	r0, #0
  4065e0:	4770      	bx	lr
  4065e2:	bf00      	nop

004065e4 <__aeabi_uldivmod>:
  4065e4:	b953      	cbnz	r3, 4065fc <__aeabi_uldivmod+0x18>
  4065e6:	b94a      	cbnz	r2, 4065fc <__aeabi_uldivmod+0x18>
  4065e8:	2900      	cmp	r1, #0
  4065ea:	bf08      	it	eq
  4065ec:	2800      	cmpeq	r0, #0
  4065ee:	bf1c      	itt	ne
  4065f0:	f04f 31ff 	movne.w	r1, #4294967295
  4065f4:	f04f 30ff 	movne.w	r0, #4294967295
  4065f8:	f000 b97a 	b.w	4068f0 <__aeabi_idiv0>
  4065fc:	f1ad 0c08 	sub.w	ip, sp, #8
  406600:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  406604:	f000 f806 	bl	406614 <__udivmoddi4>
  406608:	f8dd e004 	ldr.w	lr, [sp, #4]
  40660c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  406610:	b004      	add	sp, #16
  406612:	4770      	bx	lr

00406614 <__udivmoddi4>:
  406614:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  406618:	468c      	mov	ip, r1
  40661a:	460d      	mov	r5, r1
  40661c:	4604      	mov	r4, r0
  40661e:	9e08      	ldr	r6, [sp, #32]
  406620:	2b00      	cmp	r3, #0
  406622:	d151      	bne.n	4066c8 <__udivmoddi4+0xb4>
  406624:	428a      	cmp	r2, r1
  406626:	4617      	mov	r7, r2
  406628:	d96d      	bls.n	406706 <__udivmoddi4+0xf2>
  40662a:	fab2 fe82 	clz	lr, r2
  40662e:	f1be 0f00 	cmp.w	lr, #0
  406632:	d00b      	beq.n	40664c <__udivmoddi4+0x38>
  406634:	f1ce 0c20 	rsb	ip, lr, #32
  406638:	fa01 f50e 	lsl.w	r5, r1, lr
  40663c:	fa20 fc0c 	lsr.w	ip, r0, ip
  406640:	fa02 f70e 	lsl.w	r7, r2, lr
  406644:	ea4c 0c05 	orr.w	ip, ip, r5
  406648:	fa00 f40e 	lsl.w	r4, r0, lr
  40664c:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  406650:	0c25      	lsrs	r5, r4, #16
  406652:	fbbc f8fa 	udiv	r8, ip, sl
  406656:	fa1f f987 	uxth.w	r9, r7
  40665a:	fb0a cc18 	mls	ip, sl, r8, ip
  40665e:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  406662:	fb08 f309 	mul.w	r3, r8, r9
  406666:	42ab      	cmp	r3, r5
  406668:	d90a      	bls.n	406680 <__udivmoddi4+0x6c>
  40666a:	19ed      	adds	r5, r5, r7
  40666c:	f108 32ff 	add.w	r2, r8, #4294967295
  406670:	f080 8123 	bcs.w	4068ba <__udivmoddi4+0x2a6>
  406674:	42ab      	cmp	r3, r5
  406676:	f240 8120 	bls.w	4068ba <__udivmoddi4+0x2a6>
  40667a:	f1a8 0802 	sub.w	r8, r8, #2
  40667e:	443d      	add	r5, r7
  406680:	1aed      	subs	r5, r5, r3
  406682:	b2a4      	uxth	r4, r4
  406684:	fbb5 f0fa 	udiv	r0, r5, sl
  406688:	fb0a 5510 	mls	r5, sl, r0, r5
  40668c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  406690:	fb00 f909 	mul.w	r9, r0, r9
  406694:	45a1      	cmp	r9, r4
  406696:	d909      	bls.n	4066ac <__udivmoddi4+0x98>
  406698:	19e4      	adds	r4, r4, r7
  40669a:	f100 33ff 	add.w	r3, r0, #4294967295
  40669e:	f080 810a 	bcs.w	4068b6 <__udivmoddi4+0x2a2>
  4066a2:	45a1      	cmp	r9, r4
  4066a4:	f240 8107 	bls.w	4068b6 <__udivmoddi4+0x2a2>
  4066a8:	3802      	subs	r0, #2
  4066aa:	443c      	add	r4, r7
  4066ac:	eba4 0409 	sub.w	r4, r4, r9
  4066b0:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4066b4:	2100      	movs	r1, #0
  4066b6:	2e00      	cmp	r6, #0
  4066b8:	d061      	beq.n	40677e <__udivmoddi4+0x16a>
  4066ba:	fa24 f40e 	lsr.w	r4, r4, lr
  4066be:	2300      	movs	r3, #0
  4066c0:	6034      	str	r4, [r6, #0]
  4066c2:	6073      	str	r3, [r6, #4]
  4066c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4066c8:	428b      	cmp	r3, r1
  4066ca:	d907      	bls.n	4066dc <__udivmoddi4+0xc8>
  4066cc:	2e00      	cmp	r6, #0
  4066ce:	d054      	beq.n	40677a <__udivmoddi4+0x166>
  4066d0:	2100      	movs	r1, #0
  4066d2:	e886 0021 	stmia.w	r6, {r0, r5}
  4066d6:	4608      	mov	r0, r1
  4066d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4066dc:	fab3 f183 	clz	r1, r3
  4066e0:	2900      	cmp	r1, #0
  4066e2:	f040 808e 	bne.w	406802 <__udivmoddi4+0x1ee>
  4066e6:	42ab      	cmp	r3, r5
  4066e8:	d302      	bcc.n	4066f0 <__udivmoddi4+0xdc>
  4066ea:	4282      	cmp	r2, r0
  4066ec:	f200 80fa 	bhi.w	4068e4 <__udivmoddi4+0x2d0>
  4066f0:	1a84      	subs	r4, r0, r2
  4066f2:	eb65 0503 	sbc.w	r5, r5, r3
  4066f6:	2001      	movs	r0, #1
  4066f8:	46ac      	mov	ip, r5
  4066fa:	2e00      	cmp	r6, #0
  4066fc:	d03f      	beq.n	40677e <__udivmoddi4+0x16a>
  4066fe:	e886 1010 	stmia.w	r6, {r4, ip}
  406702:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406706:	b912      	cbnz	r2, 40670e <__udivmoddi4+0xfa>
  406708:	2701      	movs	r7, #1
  40670a:	fbb7 f7f2 	udiv	r7, r7, r2
  40670e:	fab7 fe87 	clz	lr, r7
  406712:	f1be 0f00 	cmp.w	lr, #0
  406716:	d134      	bne.n	406782 <__udivmoddi4+0x16e>
  406718:	1beb      	subs	r3, r5, r7
  40671a:	0c3a      	lsrs	r2, r7, #16
  40671c:	fa1f fc87 	uxth.w	ip, r7
  406720:	2101      	movs	r1, #1
  406722:	fbb3 f8f2 	udiv	r8, r3, r2
  406726:	0c25      	lsrs	r5, r4, #16
  406728:	fb02 3318 	mls	r3, r2, r8, r3
  40672c:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406730:	fb0c f308 	mul.w	r3, ip, r8
  406734:	42ab      	cmp	r3, r5
  406736:	d907      	bls.n	406748 <__udivmoddi4+0x134>
  406738:	19ed      	adds	r5, r5, r7
  40673a:	f108 30ff 	add.w	r0, r8, #4294967295
  40673e:	d202      	bcs.n	406746 <__udivmoddi4+0x132>
  406740:	42ab      	cmp	r3, r5
  406742:	f200 80d1 	bhi.w	4068e8 <__udivmoddi4+0x2d4>
  406746:	4680      	mov	r8, r0
  406748:	1aed      	subs	r5, r5, r3
  40674a:	b2a3      	uxth	r3, r4
  40674c:	fbb5 f0f2 	udiv	r0, r5, r2
  406750:	fb02 5510 	mls	r5, r2, r0, r5
  406754:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  406758:	fb0c fc00 	mul.w	ip, ip, r0
  40675c:	45a4      	cmp	ip, r4
  40675e:	d907      	bls.n	406770 <__udivmoddi4+0x15c>
  406760:	19e4      	adds	r4, r4, r7
  406762:	f100 33ff 	add.w	r3, r0, #4294967295
  406766:	d202      	bcs.n	40676e <__udivmoddi4+0x15a>
  406768:	45a4      	cmp	ip, r4
  40676a:	f200 80b8 	bhi.w	4068de <__udivmoddi4+0x2ca>
  40676e:	4618      	mov	r0, r3
  406770:	eba4 040c 	sub.w	r4, r4, ip
  406774:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406778:	e79d      	b.n	4066b6 <__udivmoddi4+0xa2>
  40677a:	4631      	mov	r1, r6
  40677c:	4630      	mov	r0, r6
  40677e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406782:	f1ce 0420 	rsb	r4, lr, #32
  406786:	fa05 f30e 	lsl.w	r3, r5, lr
  40678a:	fa07 f70e 	lsl.w	r7, r7, lr
  40678e:	fa20 f804 	lsr.w	r8, r0, r4
  406792:	0c3a      	lsrs	r2, r7, #16
  406794:	fa25 f404 	lsr.w	r4, r5, r4
  406798:	ea48 0803 	orr.w	r8, r8, r3
  40679c:	fbb4 f1f2 	udiv	r1, r4, r2
  4067a0:	ea4f 4518 	mov.w	r5, r8, lsr #16
  4067a4:	fb02 4411 	mls	r4, r2, r1, r4
  4067a8:	fa1f fc87 	uxth.w	ip, r7
  4067ac:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  4067b0:	fb01 f30c 	mul.w	r3, r1, ip
  4067b4:	42ab      	cmp	r3, r5
  4067b6:	fa00 f40e 	lsl.w	r4, r0, lr
  4067ba:	d909      	bls.n	4067d0 <__udivmoddi4+0x1bc>
  4067bc:	19ed      	adds	r5, r5, r7
  4067be:	f101 30ff 	add.w	r0, r1, #4294967295
  4067c2:	f080 808a 	bcs.w	4068da <__udivmoddi4+0x2c6>
  4067c6:	42ab      	cmp	r3, r5
  4067c8:	f240 8087 	bls.w	4068da <__udivmoddi4+0x2c6>
  4067cc:	3902      	subs	r1, #2
  4067ce:	443d      	add	r5, r7
  4067d0:	1aeb      	subs	r3, r5, r3
  4067d2:	fa1f f588 	uxth.w	r5, r8
  4067d6:	fbb3 f0f2 	udiv	r0, r3, r2
  4067da:	fb02 3310 	mls	r3, r2, r0, r3
  4067de:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4067e2:	fb00 f30c 	mul.w	r3, r0, ip
  4067e6:	42ab      	cmp	r3, r5
  4067e8:	d907      	bls.n	4067fa <__udivmoddi4+0x1e6>
  4067ea:	19ed      	adds	r5, r5, r7
  4067ec:	f100 38ff 	add.w	r8, r0, #4294967295
  4067f0:	d26f      	bcs.n	4068d2 <__udivmoddi4+0x2be>
  4067f2:	42ab      	cmp	r3, r5
  4067f4:	d96d      	bls.n	4068d2 <__udivmoddi4+0x2be>
  4067f6:	3802      	subs	r0, #2
  4067f8:	443d      	add	r5, r7
  4067fa:	1aeb      	subs	r3, r5, r3
  4067fc:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  406800:	e78f      	b.n	406722 <__udivmoddi4+0x10e>
  406802:	f1c1 0720 	rsb	r7, r1, #32
  406806:	fa22 f807 	lsr.w	r8, r2, r7
  40680a:	408b      	lsls	r3, r1
  40680c:	fa05 f401 	lsl.w	r4, r5, r1
  406810:	ea48 0303 	orr.w	r3, r8, r3
  406814:	fa20 fe07 	lsr.w	lr, r0, r7
  406818:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  40681c:	40fd      	lsrs	r5, r7
  40681e:	ea4e 0e04 	orr.w	lr, lr, r4
  406822:	fbb5 f9fc 	udiv	r9, r5, ip
  406826:	ea4f 441e 	mov.w	r4, lr, lsr #16
  40682a:	fb0c 5519 	mls	r5, ip, r9, r5
  40682e:	fa1f f883 	uxth.w	r8, r3
  406832:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  406836:	fb09 f408 	mul.w	r4, r9, r8
  40683a:	42ac      	cmp	r4, r5
  40683c:	fa02 f201 	lsl.w	r2, r2, r1
  406840:	fa00 fa01 	lsl.w	sl, r0, r1
  406844:	d908      	bls.n	406858 <__udivmoddi4+0x244>
  406846:	18ed      	adds	r5, r5, r3
  406848:	f109 30ff 	add.w	r0, r9, #4294967295
  40684c:	d243      	bcs.n	4068d6 <__udivmoddi4+0x2c2>
  40684e:	42ac      	cmp	r4, r5
  406850:	d941      	bls.n	4068d6 <__udivmoddi4+0x2c2>
  406852:	f1a9 0902 	sub.w	r9, r9, #2
  406856:	441d      	add	r5, r3
  406858:	1b2d      	subs	r5, r5, r4
  40685a:	fa1f fe8e 	uxth.w	lr, lr
  40685e:	fbb5 f0fc 	udiv	r0, r5, ip
  406862:	fb0c 5510 	mls	r5, ip, r0, r5
  406866:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  40686a:	fb00 f808 	mul.w	r8, r0, r8
  40686e:	45a0      	cmp	r8, r4
  406870:	d907      	bls.n	406882 <__udivmoddi4+0x26e>
  406872:	18e4      	adds	r4, r4, r3
  406874:	f100 35ff 	add.w	r5, r0, #4294967295
  406878:	d229      	bcs.n	4068ce <__udivmoddi4+0x2ba>
  40687a:	45a0      	cmp	r8, r4
  40687c:	d927      	bls.n	4068ce <__udivmoddi4+0x2ba>
  40687e:	3802      	subs	r0, #2
  406880:	441c      	add	r4, r3
  406882:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  406886:	eba4 0408 	sub.w	r4, r4, r8
  40688a:	fba0 8902 	umull	r8, r9, r0, r2
  40688e:	454c      	cmp	r4, r9
  406890:	46c6      	mov	lr, r8
  406892:	464d      	mov	r5, r9
  406894:	d315      	bcc.n	4068c2 <__udivmoddi4+0x2ae>
  406896:	d012      	beq.n	4068be <__udivmoddi4+0x2aa>
  406898:	b156      	cbz	r6, 4068b0 <__udivmoddi4+0x29c>
  40689a:	ebba 030e 	subs.w	r3, sl, lr
  40689e:	eb64 0405 	sbc.w	r4, r4, r5
  4068a2:	fa04 f707 	lsl.w	r7, r4, r7
  4068a6:	40cb      	lsrs	r3, r1
  4068a8:	431f      	orrs	r7, r3
  4068aa:	40cc      	lsrs	r4, r1
  4068ac:	6037      	str	r7, [r6, #0]
  4068ae:	6074      	str	r4, [r6, #4]
  4068b0:	2100      	movs	r1, #0
  4068b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4068b6:	4618      	mov	r0, r3
  4068b8:	e6f8      	b.n	4066ac <__udivmoddi4+0x98>
  4068ba:	4690      	mov	r8, r2
  4068bc:	e6e0      	b.n	406680 <__udivmoddi4+0x6c>
  4068be:	45c2      	cmp	sl, r8
  4068c0:	d2ea      	bcs.n	406898 <__udivmoddi4+0x284>
  4068c2:	ebb8 0e02 	subs.w	lr, r8, r2
  4068c6:	eb69 0503 	sbc.w	r5, r9, r3
  4068ca:	3801      	subs	r0, #1
  4068cc:	e7e4      	b.n	406898 <__udivmoddi4+0x284>
  4068ce:	4628      	mov	r0, r5
  4068d0:	e7d7      	b.n	406882 <__udivmoddi4+0x26e>
  4068d2:	4640      	mov	r0, r8
  4068d4:	e791      	b.n	4067fa <__udivmoddi4+0x1e6>
  4068d6:	4681      	mov	r9, r0
  4068d8:	e7be      	b.n	406858 <__udivmoddi4+0x244>
  4068da:	4601      	mov	r1, r0
  4068dc:	e778      	b.n	4067d0 <__udivmoddi4+0x1bc>
  4068de:	3802      	subs	r0, #2
  4068e0:	443c      	add	r4, r7
  4068e2:	e745      	b.n	406770 <__udivmoddi4+0x15c>
  4068e4:	4608      	mov	r0, r1
  4068e6:	e708      	b.n	4066fa <__udivmoddi4+0xe6>
  4068e8:	f1a8 0802 	sub.w	r8, r8, #2
  4068ec:	443d      	add	r5, r7
  4068ee:	e72b      	b.n	406748 <__udivmoddi4+0x134>

004068f0 <__aeabi_idiv0>:
  4068f0:	4770      	bx	lr
  4068f2:	bf00      	nop

004068f4 <OV2640_JPEG>:
  4068f4:	14e0 77e1 1fe5 03d7 10da 00e0 01ff 0804     ...w............
  406904:	ffff 0000                                   ....

00406908 <OV2640_JPEG_1024x768>:
  406908:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  406918:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  406928:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406938:	c8c0 96c1 008c 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  406948:	0054 8855 005a c05b 015c 02d3 ffff 0000     T.U.Z.[.\.......

00406958 <OV2640_JPEG_1280x1024>:
  406958:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  406968:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  406978:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406988:	04e0 c8c0 96c1 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  406998:	0054 8855 0057 405a f05b 015c 02d3 00e0     T.U.W.Z@[.\.....
  4069a8:	ffff 0000                                   ....

004069ac <OV2640_JPEG_1600x1200>:
  4069ac:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  4069bc:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  4069cc:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  4069dc:	04e0 c8c0 96c1 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  4069ec:	0054 8855 0057 905a 2c5b 055c 02d3 00e0     T.U.W.Z.[,\.....
  4069fc:	ffff 0000                                   ....

00406a00 <OV2640_JPEG_320x240>:
  406a00:	01ff 4012 1117 4318 0019 4b1a 0932 ca4f     ...@...C...K2.O.
  406a10:	a850 235a 006d 1239 da35 1a22 c337 0023     P.Z#m.9.5.".7.#.
  406a20:	c034 1a36 8806 c007 870d 410e 004c 00ff     4.6........AL...
  406a30:	04e0 64c0 4bc1 3586 8950 c851 9652 0053     ...d.K.5P.Q.R.S.
  406a40:	0054 0055 0057 505a 3c5b 005c 00e0 ffff     T.U.W.ZP[<\.....

00406a50 <OV2640_JPEG_640x480>:
  406a50:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  406a60:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  406a70:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406a80:	04e0 c8c0 96c1 3d86 8950 9051 2c52 0053     .......=P.Q.R,S.
  406a90:	0054 8855 0057 a05a 785b 005c 04d3 00e0     T.U.W.Z.[x\.....
  406aa0:	ffff 0000                                   ....

00406aa4 <OV2640_JPEG_800x600>:
  406aa4:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  406ab4:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  406ac4:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406ad4:	04e0 c8c0 96c1 3586 8950 9051 2c52 0053     .......5P.Q.R,S.
  406ae4:	0054 8855 0057 c85a 965b 005c 02d3 00e0     T.U.W.Z.[.\.....
  406af4:	ffff 0000                                   ....

00406af8 <OV2640_JPEG_INIT>:
  406af8:	00ff ff2c df2e 01ff 323c 0111 0209 2804     ..,.....<2.....(
  406b08:	e513 4814 0c2c 7833 333a fb3b 003e 1143     ...H,.3x:3;.>.C.
  406b18:	1016 9239 da35 1a22 c337 0023 c034 1a36     ..9.5.".7.#.4.6.
  406b28:	8806 c007 870d 410e 004c 0048 005b 0342     .......AL.H.[.B.
  406b38:	814a 9921 4024 3825 8226 005c 0063 7061     J.!.$@%8&.\.c.ap
  406b48:	8062 057c 8020 3028 006c 806d 006e 0270     b.|. .(0l.m.n.p.
  406b58:	9471 c173 4012 1117 4318 0019 4b1a 0932     q.s..@...C...K2.
  406b68:	c037 604f a850 006d 383d 3f46 604f 3c0c     7.O`P.m.=8F?O`.<
  406b78:	00ff 7fe5 c0f9 2441 14e0 ff76 a033 2042     ......A$..v.3.B 
  406b88:	1843 004c d587 3f88 03d7 10d9 82d3 08c8     C.L....?........
  406b98:	80c9 007c 007d 037c 487d 487d 087c 207d     ..|.}.|.}H}H|.} 
  406ba8:	107d 0e7d 0090 0e91 1a91 3191 5a91 6991     }.}........1.Z.i
  406bb8:	7591 7e91 8891 8f91 9691 a391 af91 c491     .u.~............
  406bc8:	d791 e891 2091 0092 0693 e393 0593 0593     ..... ..........
  406bd8:	0093 0493 0093 0093 0093 0093 0093 0093     ................
  406be8:	0093 0096 0897 1997 0297 0c97 2497 3097     .............$.0
  406bf8:	2897 2697 0297 9897 8097 0097 0097 edc3     .(.&............
  406c08:	00a4 00a8 11c5 51c6 80bf 10c7 66b6 a5b8     .......Q.....f..
  406c18:	64b7 7cb9 afb3 97b4 ffb5 c5b0 94b1 0fb2     .d.|............
  406c28:	5cc4 64c0 4bc1 008c 3d86 0050 c851 9652     .\.d.K...=P.Q.R.
  406c38:	0053 0054 0055 c85a 965b 005c 00d3 edc3     S.T.U.Z.[.\.....
  406c48:	007f 00da 1fe5 67e1 00e0 7fdd 0005 4012     .......g.......@
  406c58:	04d3 16c0 12c1 008c 3d86 0050 2c51 2452     .........=P.Q,R$
  406c68:	0053 0054 0055 2c5a 245b 005c ffff 0000     S.T.U.Z,[$\.....

00406c78 <OV2640_QQVGA_RGB888>:
  406c78:	000e 8012 0013 0111 0012 10d5 120c 340d     ...............4
  406c88:	2517 a018 0319 f01a 891b 0322 1829 f82b     .%........".).+.
  406c98:	012c a031 f032 c433 b43a 3f36 6004 8027     ,.1.2.3.:.6?.`'.
  406ca8:	0f3d 803e 403f 7f40 6a41 2942 e544 4145     =.>.?@@.AjB)D.EA
  406cb8:	0247 6449 a14a 704b 1a4c 504d 134e 0064     G.IdJ.KpL.MPN.d.
  406cc8:	8867 1a68 3814 3c24 3025 7226 9750 7e51     g.h..8$<%0&rP.Q~
  406cd8:	0052 0053 0020 2321 1438 00e9 5556 ff57     R.S. .!#8...VUW.
  406ce8:	ff58 ff59 045f 00ec ff13 7f80 3f81 3282     X.Y._........?.2
  406cf8:	0183 1138 7084 0085 0386 0187 0588 3089     ..8..p.........0
  406d08:	308d 858f 3093 8595 3099 859b 089c 129d     .0...0...0......
  406d18:	239e 459f 55a0 64a1 72a2 7fa3 8ba4 95a5     .#.E.U.d.r......
  406d28:	a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce 6ecf     .............x.n
  406d38:	0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b 885c     ..........Z$[.\.
  406d48:	605d 6eac ffbe 00bf 2831 3c32 3f82 0112     ]`.n....1(2<.?..
  406d58:	2f36 0483 0053 f433 8a1b 0322 0084 0084     6/..S.3...".....
  406d68:	0228 ffff                                   (...

00406d6c <OV2640_QQVGA_YUV422>:
  406d6c:	000e 8012 0013 0111 0012 10d5 540c 340d     .............T.4
  406d7c:	0116 2517 a018 0319 f01a 891b 0322 1829     ...%........".).
  406d8c:	f82b 012c a031 f032 c433 b43a 3f36 6004     +.,.1.2.3.:.6?.`
  406d9c:	8027 0f3d 803e 403f 7f40 6a41 2942 e544     '.=.>.?@@.AjB)D.
  406dac:	4145 0247 6449 a14a 704b 1a4c 504d 134e     EAG.IdJ.KpL.MPN.
  406dbc:	0064 8867 1a68 3814 3c24 3025 7226 9750     d.g.h..8$<%0&rP.
  406dcc:	7e51 0052 0053 0020 2321 1438 00e9 5556     Q~R.S. .!#8...VU
  406ddc:	ff57 ff58 ff59 045f 00ec ff13 7f80 3f81     W.X.Y._........?
  406dec:	3282 0183 1138 7084 0085 0386 0187 0588     .2..8..p........
  406dfc:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406e0c:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406e1c:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406e2c:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406e3c:	885c 605d 6eac ffbe 00bf 2831 3c32 0034     \.]`.n....1(2<4.
  406e4c:	3f82 0012 3f36 0053 0033 891b 0322 0228     .?..6?S.3...".(.
  406e5c:	00d9 ffff                                   ....

00406e60 <OV2640_QVGA_RGB888>:
  406e60:	000e 8012 0013 0111 0012 10d5 120c 340d     ...............4
  406e70:	2517 a018 0319 f01a 891b 0322 1829 f82b     .%........".).+.
  406e80:	012c a031 f032 c433 b43a 3f36 6004 8027     ,.1.2.3.:.6?.`'.
  406e90:	0f3d 803e 403f 7f40 6a41 2942 e544 4145     =.>.?@@.AjB)D.EA
  406ea0:	0247 6449 a14a 704b 1a4c 504d 134e 0064     G.IdJ.KpL.MPN.d.
  406eb0:	8867 1a68 3814 3c24 3025 7226 9750 7e51     g.h..8$<%0&rP.Q~
  406ec0:	0052 0053 0020 2321 1438 00e9 5556 ff57     R.S. .!#8...VUW.
  406ed0:	ff58 ff59 045f 00ec ff13 7f80 3f81 3282     X.Y._........?.2
  406ee0:	0183 1138 7084 0085 0386 0187 0588 3089     ..8..p.........0
  406ef0:	308d 858f 3093 8595 3099 859b 089c 129d     .0...0...0......
  406f00:	239e 459f 55a0 64a1 72a2 7fa3 8ba4 95a5     .#.E.U.d.r......
  406f10:	a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce 6ecf     .............x.n
  406f20:	0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b 885c     ..........Z$[.\.
  406f30:	605d 6eac ffbe 00bf 5031 7832 3f82 0112     ]`.n....1P2x.?..
  406f40:	2f36 0483 0053 f433 8a1b 0322 0084 0084     6/..S.3...".....
  406f50:	0228 ffff                                   (...

00406f54 <OV2640_QVGA_YUV422_10FPS>:
  406f54:	000e 8012 05fe 0013 0511 0012 10d5 d40c     ................
  406f64:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  406f74:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406f84:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406f94:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406fa4:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  406fb4:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  406fc4:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  406fd4:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  406fe4:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406ff4:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  407004:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  407014:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  407024:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  407034:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00407044 <OV2640_QVGA_YUV422_15FPS>:
  407044:	000e 8012 05fe 0013 0311 0012 10d5 d40c     ................
  407054:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  407064:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  407074:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  407084:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  407094:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  4070a4:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  4070b4:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  4070c4:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  4070d4:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  4070e4:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  4070f4:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  407104:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  407114:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  407124:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00407134 <OV2640_QVGA_YUV422_20FPS>:
  407134:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  407144:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  407154:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  407164:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  407174:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  407184:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  407194:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  4071a4:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  4071b4:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  4071c4:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  4071d4:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  4071e4:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  4071f4:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  407204:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  407214:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00407224 <OV2640_QVGA_YUV422_30FPS>:
  407224:	000e 8012 05fe 0013 0111 0012 10d5 d40c     ................
  407234:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  407244:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  407254:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  407264:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  407274:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  407284:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  407294:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  4072a4:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  4072b4:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  4072c4:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  4072d4:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  4072e4:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  4072f4:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  407304:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00407314 <OV2640_TEST_PATTERN>:
  407314:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  407324:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  407334:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  407344:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  407354:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  407364:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  407374:	9750 7e51 0052 0053 0020 2321 0738 0284     P.Q~R.S. .!#8...
  407384:	1438 00e9 5556 ff57 ff58 ff59 045f 00ec     8...VUW.X.Y._...
  407394:	ff13 7f80 3f81 3282 0183 1138 0085 0386     .....?.2..8.....
  4073a4:	0187 0588 3089 308d 858f 3093 8595 3099     .....0.0...0...0
  4073b4:	859b 089c 129d 239e 459f 55a0 64a1 72a2     .......#.E.U.d.r
  4073c4:	7fa3 8ba4 95a5 a7a6 b5a7 cba8 dda9 ecaa     ................
  4073d4:	1aab 78ce 6ecf 0ad0 0cd1 84d2 90d3 1ed4     ...x.n..........
  4073e4:	245a 1f5b 885c 605d 6eac ffbe 00bf 5031     Z$[.\.]`.n....1P
  4073f4:	7832 3f82 0012 3f36 0053 c433 891b 0322     2x.?..6?S.3...".
  407404:	0228 ffff                                   (...

00407408 <OV2640_VGA_YUV422_20FPS>:
  407408:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  407418:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  407428:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  407438:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  407448:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  407458:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  407468:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  407478:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  407488:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  407498:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  4074a8:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  4074b8:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  4074c8:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  4074d8:	885c 605d 6eac ffbe 00bf a031 f032 3f82     \.]`.n....1.2..?
  4074e8:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

004074f8 <OV2640_YUV422>:
  4074f8:	00ff 0005 10da 03d7 00df 8033 403c 77e1     ..........3.<@.w
  407508:	0000 ffff c200 0001 00c0 0000 0800 0000     ................
	...
  407524:	5553 4343 5345 0053 6d69 6761 5f65 7274     SUCCESS.image_tr
  407534:	6e61 6673 7265 2520 0d69 000a 6573 2074     ansfer %i...set 
  407544:	6c77 6e61 675f 6970 206f 3532 0a0d 0000     wlan_gpio 25....
  407554:	6573 2074 6577 7362 636f 656b 5f74 7067     set websocket_gp
  407564:	6f69 3220 0d36 000a 6567 2074 616d 0d63     io 26...get mac.
  407574:	000a 0000 6573 2074 7061 675f 6970 206f     ....set ap_gpio 
  407584:	3732 0a0d 0000 0000 6573 2074 6f63 6d6d     27......set comm
  407594:	675f 6970 206f 3132 0a0d 0000 6573 2074     _gpio 21....set 
  4075a4:	6c63 6569 746e 5f73 7067 6f69 3320 0d32     clients_gpio 32.
  4075b4:	000a 0000 6573 2074 656e 5f74 7067 6f69     ....set net_gpio
  4075c4:	3220 0d32 000a 0000 6573 2074 7073 5f69      22.....set spi_
  4075d4:	6162 6475 3120 3030 3030 0d30 000a 0000     baud 100000.....
  4075e4:	6574 7473 0a0d 0000 7270 766f 7369 6f69     test....provisio
  4075f4:	0d6e 000a                                   n...

004075f8 <_global_impure_ptr>:
  4075f8:	0018 2000 4e49 0046 6e69 0066 414e 004e     ... INF.inf.NAN.
  407608:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  407618:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  407628:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  407638:	296c 0000 0030 0000                         l)..0...

00407640 <blanks.7223>:
  407640:	2020 2020 2020 2020 2020 2020 2020 2020                     

00407650 <zeroes.7224>:
  407650:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  407660:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.

00407670 <__mprec_bigtens>:
  407670:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  407680:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  407690:	bf3c 7f73 4fdd 7515                         <.s..O.u

00407698 <__mprec_tens>:
  407698:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  4076a8:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  4076b8:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  4076c8:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  4076d8:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  4076e8:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  4076f8:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  407708:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  407718:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  407728:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  407738:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  407748:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  407758:	9db4 79d9 7843 44ea                         ...yCx.D

00407760 <p05.6055>:
  407760:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  407770:	4f50 4953 0058 0000 002e 0000               POSIX.......

0040777c <_ctype_>:
  40777c:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  40778c:	2020 2020 2020 2020 2020 2020 2020 2020                     
  40779c:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  4077ac:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  4077bc:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  4077cc:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  4077dc:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  4077ec:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  4077fc:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00407880 <_init>:
  407880:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407882:	bf00      	nop
  407884:	bcf8      	pop	{r3, r4, r5, r6, r7}
  407886:	bc08      	pop	{r3}
  407888:	469e      	mov	lr, r3
  40788a:	4770      	bx	lr

0040788c <__init_array_start>:
  40788c:	00403431 	.word	0x00403431

00407890 <__frame_dummy_init_array_entry>:
  407890:	004000f1                                ..@.

00407894 <_fini>:
  407894:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407896:	bf00      	nop
  407898:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40789a:	bc08      	pop	{r3}
  40789c:	469e      	mov	lr, r3
  40789e:	4770      	bx	lr

004078a0 <__fini_array_start>:
  4078a0:	004000cd 	.word	0x004000cd

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
20000008:	4770      	bx	lr
	...

2000000c <SystemCoreClock>:
2000000c:	0900 003d                                   ..=.

20000010 <_impure_ptr>:
20000010:	0018 2000 0000 0000                         ... ....

20000018 <impure_data>:
20000018:	0000 0000 0304 2000 036c 2000 03d4 2000     ....... l.. ... 
	...
200000c0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
200000d0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20000440 <__atexit_recursive_mutex>:
20000440:	9554 2001                                   T.. 

20000444 <__malloc_av_>:
	...
2000044c:	0444 2000 0444 2000 044c 2000 044c 2000     D.. D.. L.. L.. 
2000045c:	0454 2000 0454 2000 045c 2000 045c 2000     T.. T.. \.. \.. 
2000046c:	0464 2000 0464 2000 046c 2000 046c 2000     d.. d.. l.. l.. 
2000047c:	0474 2000 0474 2000 047c 2000 047c 2000     t.. t.. |.. |.. 
2000048c:	0484 2000 0484 2000 048c 2000 048c 2000     ... ... ... ... 
2000049c:	0494 2000 0494 2000 049c 2000 049c 2000     ... ... ... ... 
200004ac:	04a4 2000 04a4 2000 04ac 2000 04ac 2000     ... ... ... ... 
200004bc:	04b4 2000 04b4 2000 04bc 2000 04bc 2000     ... ... ... ... 
200004cc:	04c4 2000 04c4 2000 04cc 2000 04cc 2000     ... ... ... ... 
200004dc:	04d4 2000 04d4 2000 04dc 2000 04dc 2000     ... ... ... ... 
200004ec:	04e4 2000 04e4 2000 04ec 2000 04ec 2000     ... ... ... ... 
200004fc:	04f4 2000 04f4 2000 04fc 2000 04fc 2000     ... ... ... ... 
2000050c:	0504 2000 0504 2000 050c 2000 050c 2000     ... ... ... ... 
2000051c:	0514 2000 0514 2000 051c 2000 051c 2000     ... ... ... ... 
2000052c:	0524 2000 0524 2000 052c 2000 052c 2000     $.. $.. ,.. ,.. 
2000053c:	0534 2000 0534 2000 053c 2000 053c 2000     4.. 4.. <.. <.. 
2000054c:	0544 2000 0544 2000 054c 2000 054c 2000     D.. D.. L.. L.. 
2000055c:	0554 2000 0554 2000 055c 2000 055c 2000     T.. T.. \.. \.. 
2000056c:	0564 2000 0564 2000 056c 2000 056c 2000     d.. d.. l.. l.. 
2000057c:	0574 2000 0574 2000 057c 2000 057c 2000     t.. t.. |.. |.. 
2000058c:	0584 2000 0584 2000 058c 2000 058c 2000     ... ... ... ... 
2000059c:	0594 2000 0594 2000 059c 2000 059c 2000     ... ... ... ... 
200005ac:	05a4 2000 05a4 2000 05ac 2000 05ac 2000     ... ... ... ... 
200005bc:	05b4 2000 05b4 2000 05bc 2000 05bc 2000     ... ... ... ... 
200005cc:	05c4 2000 05c4 2000 05cc 2000 05cc 2000     ... ... ... ... 
200005dc:	05d4 2000 05d4 2000 05dc 2000 05dc 2000     ... ... ... ... 
200005ec:	05e4 2000 05e4 2000 05ec 2000 05ec 2000     ... ... ... ... 
200005fc:	05f4 2000 05f4 2000 05fc 2000 05fc 2000     ... ... ... ... 
2000060c:	0604 2000 0604 2000 060c 2000 060c 2000     ... ... ... ... 
2000061c:	0614 2000 0614 2000 061c 2000 061c 2000     ... ... ... ... 
2000062c:	0624 2000 0624 2000 062c 2000 062c 2000     $.. $.. ,.. ,.. 
2000063c:	0634 2000 0634 2000 063c 2000 063c 2000     4.. 4.. <.. <.. 
2000064c:	0644 2000 0644 2000 064c 2000 064c 2000     D.. D.. L.. L.. 
2000065c:	0654 2000 0654 2000 065c 2000 065c 2000     T.. T.. \.. \.. 
2000066c:	0664 2000 0664 2000 066c 2000 066c 2000     d.. d.. l.. l.. 
2000067c:	0674 2000 0674 2000 067c 2000 067c 2000     t.. t.. |.. |.. 
2000068c:	0684 2000 0684 2000 068c 2000 068c 2000     ... ... ... ... 
2000069c:	0694 2000 0694 2000 069c 2000 069c 2000     ... ... ... ... 
200006ac:	06a4 2000 06a4 2000 06ac 2000 06ac 2000     ... ... ... ... 
200006bc:	06b4 2000 06b4 2000 06bc 2000 06bc 2000     ... ... ... ... 
200006cc:	06c4 2000 06c4 2000 06cc 2000 06cc 2000     ... ... ... ... 
200006dc:	06d4 2000 06d4 2000 06dc 2000 06dc 2000     ... ... ... ... 
200006ec:	06e4 2000 06e4 2000 06ec 2000 06ec 2000     ... ... ... ... 
200006fc:	06f4 2000 06f4 2000 06fc 2000 06fc 2000     ... ... ... ... 
2000070c:	0704 2000 0704 2000 070c 2000 070c 2000     ... ... ... ... 
2000071c:	0714 2000 0714 2000 071c 2000 071c 2000     ... ... ... ... 
2000072c:	0724 2000 0724 2000 072c 2000 072c 2000     $.. $.. ,.. ,.. 
2000073c:	0734 2000 0734 2000 073c 2000 073c 2000     4.. 4.. <.. <.. 
2000074c:	0744 2000 0744 2000 074c 2000 074c 2000     D.. D.. L.. L.. 
2000075c:	0754 2000 0754 2000 075c 2000 075c 2000     T.. T.. \.. \.. 
2000076c:	0764 2000 0764 2000 076c 2000 076c 2000     d.. d.. l.. l.. 
2000077c:	0774 2000 0774 2000 077c 2000 077c 2000     t.. t.. |.. |.. 
2000078c:	0784 2000 0784 2000 078c 2000 078c 2000     ... ... ... ... 
2000079c:	0794 2000 0794 2000 079c 2000 079c 2000     ... ... ... ... 
200007ac:	07a4 2000 07a4 2000 07ac 2000 07ac 2000     ... ... ... ... 
200007bc:	07b4 2000 07b4 2000 07bc 2000 07bc 2000     ... ... ... ... 
200007cc:	07c4 2000 07c4 2000 07cc 2000 07cc 2000     ... ... ... ... 
200007dc:	07d4 2000 07d4 2000 07dc 2000 07dc 2000     ... ... ... ... 
200007ec:	07e4 2000 07e4 2000 07ec 2000 07ec 2000     ... ... ... ... 
200007fc:	07f4 2000 07f4 2000 07fc 2000 07fc 2000     ... ... ... ... 
2000080c:	0804 2000 0804 2000 080c 2000 080c 2000     ... ... ... ... 
2000081c:	0814 2000 0814 2000 081c 2000 081c 2000     ... ... ... ... 
2000082c:	0824 2000 0824 2000 082c 2000 082c 2000     $.. $.. ,.. ,.. 
2000083c:	0834 2000 0834 2000 083c 2000 083c 2000     4.. 4.. <.. <.. 

2000084c <__malloc_sbrk_base>:
2000084c:	ffff ffff                                   ....

20000850 <__malloc_trim_threshold>:
20000850:	0000 0002                                   ....

20000854 <__global_locale>:
20000854:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000874:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000894:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008b4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008d4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008f4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000914:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000934:	5ca9 0040 5869 0040 0000 0000 777c 0040     .\@.iX@.....|w@.
20000944:	7778 0040 7588 0040 7588 0040 7588 0040     xw@..u@..u@..u@.
20000954:	7588 0040 7588 0040 7588 0040 7588 0040     .u@..u@..u@..u@.
20000964:	7588 0040 7588 0040 ffff ffff ffff ffff     .u@..u@.........
20000974:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
2000099c:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
